/** \file algo/swstate/auto_generated/types/tsn_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __TSN_TYPES_H__
#define __TSN_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <include/bcm/cosq.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_device.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_tsn.h>
/*
 * STRUCTs
 */

/**
 * struct that contains all the data about TAS profile
 */
typedef struct {
    /**
     * profile state
     */
    bcm_cosq_tas_profile_state_t profile_state;
    /**
     * profile data
     */
    bcm_cosq_tas_profile_t profile_data;
    /**
     * accual config change time
     */
    bcm_ptp_timestamp_t accual_change_time;
    /**
     * logical port related to the profile
     */
    bcm_port_t port;
} dnx_tas_profile_data_t;

/**
 * struct that contains TAS DBs
 */
typedef struct {
    /**
     * alloc manager for tas gates table
     */
    dnx_algo_res_t* gate_alloc;
    /**
     * alloc manager for tas profiles id
     */
    dnx_algo_res_t* pid_alloc;
    /**
     * mapping egq interface to tas gate, per core
     */
    int** egq_if_to_gate_mapping;
    /**
     * data base of all tas profiles
     */
    dnx_tas_profile_data_t** tas_profiles_data;
} dnx_tas_db_t;

/**
 * struct that contains TSN DBs
 */
typedef struct {
    /**
     * TAS DBs
     */
    dnx_tas_db_t tas_db;
} dnx_tsn_db_t;


#endif /* __TSN_TYPES_H__ */
