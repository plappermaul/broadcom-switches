/** \file algo/swstate/auto_generated/access/algo_srv6_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __ALGO_SRV6_ACCESS_H__
#define __ALGO_SRV6_ACCESS_H__

#include <bcm_int/dnx/algo/swstate/auto_generated/types/algo_srv6_types.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: algo_srv6_db_is_init
 */
typedef int (*algo_srv6_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: algo_srv6_db_init
 */
typedef int (*algo_srv6_db_init_cb)(
    int unit);

/**
 * implemented by: algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_set
 */
typedef int (*algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_set_cb)(
    int unit, dnx_algo_res_t locator_id_res_mngr);

/**
 * implemented by: algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_get
 */
typedef int (*algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_get_cb)(
    int unit, dnx_algo_res_t *locator_id_res_mngr);

/**
 * implemented by: algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_create
 */
typedef int (*algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_allocate_single
 */
typedef int (*algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_free_single
 */
typedef int (*algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_free_single_cb)(
    int unit, int element, void *extra_arguments);

/**
 * implemented by: algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_is_allocated
 */
typedef int (*algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_nof_free_elements_get
 */
typedef int (*algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

/**
 * implemented by: algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_get_next
 */
typedef int (*algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_get_next_cb)(
    int unit, int *element);

/**
 * implemented by: algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_print
 */
typedef int (*algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_print_cb)(
    int unit);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable locator_id_res_mngr
 */
typedef struct {
    algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_set_cb set;
    algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_get_cb get;
    algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_create_cb create;
    algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_allocate_single_cb allocate_single;
    algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_free_single_cb free_single;
    algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_is_allocated_cb is_allocated;
    algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_nof_free_elements_get_cb nof_free_elements_get;
    algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_get_next_cb get_next;
    algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_print_cb print;
} algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_cbs;

/**
 * This structure holds the access functions for the variable ipv6_srv6_cascaded_t
 */
typedef struct {
    /**
     * Access struct for locator_id_res_mngr
     */
    algo_srv6_db_ipv6_srv6_cascaded_locator_id_res_mngr_cbs locator_id_res_mngr;
} algo_srv6_db_ipv6_srv6_cascaded_cbs;

/**
 * This structure holds the access functions for the variable algo_srv6_sw_state_t
 */
typedef struct {
    algo_srv6_db_is_init_cb is_init;
    algo_srv6_db_init_cb init;
    /**
     * Access struct for ipv6_srv6_cascaded
     */
    algo_srv6_db_ipv6_srv6_cascaded_cbs ipv6_srv6_cascaded;
} algo_srv6_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern algo_srv6_db_cbs algo_srv6_db;

#endif /* __ALGO_SRV6_ACCESS_H__ */
