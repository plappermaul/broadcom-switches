/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 *
 * File:        dnx_mirror_dispatch.h
 * Purpose:     dnx mirror driver BCM API dispatch table
 * Generator:   modules_dispatch.py
 */

#ifndef _BCM_INT_DNX_MIRROR_DISPATCH_H
#define _BCM_INT_DNX_MIRROR_DISPATCH_H

#include <bcm/types.h>
#include <bcm_int/dispatch.h>

#ifdef BCM_DNX_SUPPORT

extern int bcm_dnx_mirror_destination_count_command_get(int,bcm_core_t,bcm_gport_t,int,uint32,bcm_mirror_profile_cmd_count_t *);
extern int bcm_dnx_mirror_destination_count_command_set(int,bcm_core_t,bcm_gport_t,int,uint32,bcm_mirror_profile_cmd_count_t *);
extern int bcm_dnx_mirror_destination_create(int,bcm_mirror_destination_t *);
extern int bcm_dnx_mirror_destination_destroy(int,bcm_gport_t);
extern int bcm_dnx_mirror_destination_get(int,bcm_gport_t,bcm_mirror_destination_t *);
extern int bcm_dnx_mirror_destination_traverse(int,bcm_mirror_destination_traverse_cb,void *);
extern int bcm_dnx_mirror_header_info_get(int,bcm_gport_t,uint32 *,bcm_mirror_header_info_t *);
extern int bcm_dnx_mirror_header_info_set(int,uint32,bcm_gport_t,bcm_mirror_header_info_t *);
extern int bcm_dnx_mirror_init(int);
extern int bcm_dnx_mirror_mode_get(int,int *);
extern int bcm_dnx_mirror_mode_set(int,int);
extern int bcm_dnx_mirror_port_dest_add(int,bcm_port_t,uint32,bcm_gport_t);
extern int bcm_dnx_mirror_port_dest_delete(int,bcm_port_t,uint32,bcm_gport_t);
extern int bcm_dnx_mirror_port_dest_delete_all(int,bcm_port_t,uint32);
extern int bcm_dnx_mirror_port_dest_get(int,bcm_port_t,uint32,int,bcm_gport_t *,int *);
extern int bcm_dnx_mirror_port_destination_add(int,bcm_port_t,uint32,bcm_gport_t,bcm_mirror_options_t);
extern int bcm_dnx_mirror_port_destination_get(int,bcm_port_t,uint32,int,bcm_gport_t *,int *,bcm_mirror_options_t *);
extern int bcm_dnx_mirror_port_info_get(int,bcm_port_t,uint32,bcm_mirror_port_info_t *);
extern int bcm_dnx_mirror_port_info_set(int,bcm_port_t,uint32,bcm_mirror_port_info_t *);
extern int bcm_dnx_mirror_port_to_rcy_port_map_get(int,uint32,bcm_port_t,bcm_mirror_port_to_rcy_map_info_t *);
extern int bcm_dnx_mirror_port_to_rcy_port_map_set(int,uint32,bcm_port_t,bcm_mirror_port_to_rcy_map_info_t *);
extern int bcm_dnx_mirror_port_vlan_dest_add(int,bcm_port_t,bcm_vlan_t,uint32,bcm_gport_t);
extern int bcm_dnx_mirror_port_vlan_dest_delete(int,bcm_port_t,bcm_vlan_t,uint32,bcm_gport_t);
extern int bcm_dnx_mirror_port_vlan_dest_delete_all(int,bcm_port_t,bcm_vlan_t,uint32);
extern int bcm_dnx_mirror_port_vlan_dest_get(int,bcm_port_t,bcm_vlan_t,uint32,uint32,bcm_gport_t *,uint32 *);
extern int bcm_dnx_mirror_port_vlan_destination_add(int,bcm_port_t,bcm_vlan_t,uint32,bcm_gport_t,bcm_mirror_options_t);
extern int bcm_dnx_mirror_port_vlan_destination_get(int,bcm_port_t,bcm_vlan_t,uint32,uint32,bcm_gport_t *,uint32 *,bcm_mirror_options_t *);

#endif /* BCM_DNX_SUPPORT */
#endif /* !_BCM_INT_DNX_MIRROR_DISPATCH_H */
