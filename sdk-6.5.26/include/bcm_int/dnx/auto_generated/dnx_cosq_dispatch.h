/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 *
 * File:        dnx_cosq_dispatch.h
 * Purpose:     dnx cosq driver BCM API dispatch table
 * Generator:   modules_dispatch.py
 */

#ifndef _BCM_INT_DNX_COSQ_DISPATCH_H
#define _BCM_INT_DNX_COSQ_DISPATCH_H

#include <bcm/types.h>
#include <bcm_int/dispatch.h>

#ifdef BCM_DNX_SUPPORT

extern int bcm_dnx_cosq_aqm_profile_create(int,int,bcm_gport_t *);
extern int bcm_dnx_cosq_bandwidth_fabric_adjust_get(int,uint32,bcm_cosq_bandwidth_fabric_adjust_key_t *,uint32 *);
extern int bcm_dnx_cosq_bandwidth_fabric_adjust_set(int,uint32,bcm_cosq_bandwidth_fabric_adjust_key_t *,uint32);
extern int bcm_dnx_cosq_control_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_control_t,int *);
extern int bcm_dnx_cosq_control_range_get(int,bcm_gport_t,uint32,bcm_cosq_control_range_type_t,bcm_cosq_range_t *);
extern int bcm_dnx_cosq_control_range_set(int,bcm_gport_t,uint32,bcm_cosq_control_range_type_t,bcm_cosq_range_t *);
extern int bcm_dnx_cosq_control_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_control_t,int);
extern int bcm_dnx_cosq_delay_tolerance_level_get(int,int,bcm_cosq_delay_tolerance_t *);
extern int bcm_dnx_cosq_delay_tolerance_level_set(int,int,bcm_cosq_delay_tolerance_t *);
extern int bcm_dnx_cosq_delay_tolerance_preset_get(int,bcm_cosq_delay_tolerance_preset_attr_t *,bcm_cosq_delay_tolerance_t *);
extern int bcm_dnx_cosq_dest_credit_size_get(int,bcm_module_t,uint32 *);
extern int bcm_dnx_cosq_dest_credit_size_set(int,bcm_module_t,uint32);
extern int bcm_dnx_cosq_discard_get(int,uint32 *);
extern int bcm_dnx_cosq_discard_set(int,uint32);
extern int bcm_dnx_cosq_fc_path_add(int,bcm_cosq_fc_direction_type_t,bcm_cosq_fc_endpoint_t *,bcm_cosq_fc_endpoint_t *);
extern int bcm_dnx_cosq_fc_path_delete(int,bcm_cosq_fc_direction_type_t,bcm_cosq_fc_endpoint_t *,bcm_cosq_fc_endpoint_t *);
extern int bcm_dnx_cosq_fc_path_get(int,bcm_cosq_fc_direction_type_t,bcm_cosq_fc_endpoint_t *,int,bcm_cosq_fc_endpoint_t *,int *);
extern int bcm_dnx_cosq_generic_control_get(int,uint32,bcm_gport_t,uint32,bcm_cosq_generic_control_t,uint32 *);
extern int bcm_dnx_cosq_generic_control_set(int,uint32,bcm_gport_t,uint32,bcm_cosq_generic_control_t,uint32);
extern int bcm_dnx_cosq_global_voq_get(int,uint32,bcm_port_t,bcm_cosq_global_voq_info_t *,uint32 *);
extern int bcm_dnx_cosq_global_voq_set(int,uint32,bcm_port_t,bcm_cosq_global_voq_info_t *,uint32 *);
extern int bcm_dnx_cosq_gport_add(int,bcm_gport_t,int,uint32,bcm_gport_t *);
extern int bcm_dnx_cosq_gport_attach(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_dnx_cosq_gport_bandwidth_get(int,bcm_gport_t,bcm_cos_queue_t,uint32 *,uint32 *,uint32 *);
extern int bcm_dnx_cosq_gport_bandwidth_set(int,bcm_gport_t,bcm_cos_queue_t,uint32,uint32,uint32);
extern int bcm_dnx_cosq_gport_color_size_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_color_t,uint32,bcm_cosq_gport_size_t *);
extern int bcm_dnx_cosq_gport_color_size_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_color_t,uint32,bcm_cosq_gport_size_t *);
extern int bcm_dnx_cosq_gport_connection_get(int,bcm_cosq_gport_connection_t *);
extern int bcm_dnx_cosq_gport_connection_set(int,bcm_cosq_gport_connection_t *);
extern int bcm_dnx_cosq_gport_delete(int,bcm_gport_t);
extern int bcm_dnx_cosq_gport_detach(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_dnx_cosq_gport_discard_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_gport_discard_t *);
extern int bcm_dnx_cosq_gport_discard_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_gport_discard_t *);
extern int bcm_dnx_cosq_gport_dynamic_sched_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_dynamic_state_t,int *);
extern int bcm_dnx_cosq_gport_dynamic_sched_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_dynamic_state_t,int);
extern int bcm_dnx_cosq_gport_egress_map_get(int,bcm_gport_t,bcm_cos_t,bcm_color_t,bcm_cos_queue_t *);
extern int bcm_dnx_cosq_gport_egress_map_set(int,bcm_gport_t,bcm_cos_t,bcm_color_t,bcm_cos_queue_t);
extern int bcm_dnx_cosq_gport_egress_multicast_config_get(int,bcm_gport_t,bcm_cos_t,bcm_color_t,uint32,bcm_cosq_egress_multicast_config_t *);
extern int bcm_dnx_cosq_gport_egress_multicast_config_set(int,bcm_gport_t,bcm_cos_t,bcm_color_t,uint32,bcm_cosq_egress_multicast_config_t *);
extern int bcm_dnx_cosq_gport_enable_get(int,bcm_gport_t,bcm_cos_queue_t,int *);
extern int bcm_dnx_cosq_gport_enable_set(int,bcm_gport_t,bcm_cos_queue_t,int);
extern int bcm_dnx_cosq_gport_fadt_threshold_get(int,uint32,bcm_cosq_fadt_info_t *,bcm_cosq_fadt_threshold_t *);
extern int bcm_dnx_cosq_gport_fadt_threshold_set(int,uint32,bcm_cosq_fadt_info_t *,bcm_cosq_fadt_threshold_t *);
extern int bcm_dnx_cosq_gport_get(int,bcm_gport_t,bcm_gport_t *,int *,uint32 *);
extern int bcm_dnx_cosq_gport_handle_core_get(int,bcm_core_t,bcm_cosq_gport_info_core_t *,bcm_gport_t *);
extern int bcm_dnx_cosq_gport_handle_get(int,bcm_cosq_gport_type_t,bcm_cosq_gport_info_t *);
extern int bcm_dnx_cosq_gport_parent_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_gport_t *);
extern int bcm_dnx_cosq_gport_pkt_size_adjust_get(int,bcm_cosq_pkt_size_adjust_info_t *,int *);
extern int bcm_dnx_cosq_gport_pkt_size_adjust_set(int,bcm_cosq_pkt_size_adjust_info_t *,int);
extern int bcm_dnx_cosq_gport_queue_offset_mapping_get(int,uint32,bcm_gport_t,int,bcm_cosq_queue_offset_mapping_key_t *,bcm_cosq_queue_offset_t *);
extern int bcm_dnx_cosq_gport_queue_offset_mapping_set(int,uint32,bcm_gport_t,int,bcm_cosq_queue_offset_mapping_key_t *,bcm_cosq_queue_offset_t *);
extern int bcm_dnx_cosq_gport_rate_class_create(int,bcm_gport_t,uint32,bcm_cosq_rate_class_create_info_t *);
extern int bcm_dnx_cosq_gport_sched_get(int,bcm_gport_t,bcm_cos_queue_t,int *,int *);
extern int bcm_dnx_cosq_gport_sched_set(int,bcm_gport_t,bcm_cos_queue_t,int,int);
extern int bcm_dnx_cosq_gport_static_threshold_get(int,uint32,bcm_cosq_static_threshold_info_t *,bcm_cosq_static_threshold_t *);
extern int bcm_dnx_cosq_gport_static_threshold_set(int,uint32,bcm_cosq_static_threshold_info_t *,bcm_cosq_static_threshold_t *);
extern int bcm_dnx_cosq_gport_threshold_get(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_threshold_t *);
extern int bcm_dnx_cosq_gport_threshold_set(int,bcm_gport_t,bcm_cos_queue_t,bcm_cosq_threshold_t *);
extern int bcm_dnx_cosq_gport_traverse(int,bcm_cosq_gport_traverse_cb,void *);
extern int bcm_dnx_cosq_gport_vsq_add(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_dnx_cosq_gport_vsq_create(int,bcm_cosq_vsq_info_t *,bcm_gport_t *);
extern int bcm_dnx_cosq_gport_vsq_delete(int,bcm_gport_t,bcm_gport_t,bcm_cos_queue_t);
extern int bcm_dnx_cosq_gport_vsq_destroy(int,bcm_gport_t);
extern int bcm_dnx_cosq_icgm_resource_stat_get(int,bcm_cosq_icgm_resource_stat_key_t *,uint64 *);
extern int bcm_dnx_cosq_ingress_port_drop_control_frame_get(int,bcm_port_t,uint32,uint32,bcm_cosq_ingress_drop_control_frame_config_t *);
extern int bcm_dnx_cosq_ingress_port_drop_control_frame_set(int,bcm_port_t,uint32,uint32,bcm_cosq_ingress_drop_control_frame_config_t *);
extern int bcm_dnx_cosq_ingress_port_drop_custom_ether_type_get(int,bcm_port_t,uint32,uint32,uint32 *);
extern int bcm_dnx_cosq_ingress_port_drop_custom_ether_type_set(int,bcm_port_t,uint32,uint32,uint32);
extern int bcm_dnx_cosq_ingress_port_drop_default_priority_get(int,bcm_port_t,uint32,uint32 *);
extern int bcm_dnx_cosq_ingress_port_drop_default_priority_set(int,bcm_port_t,uint32,uint32);
extern int bcm_dnx_cosq_ingress_port_drop_enable_get(int,bcm_port_t,uint32,int *);
extern int bcm_dnx_cosq_ingress_port_drop_enable_set(int,bcm_port_t,uint32,int);
extern int bcm_dnx_cosq_ingress_port_drop_flex_key_construct_get(int,bcm_cosq_ingress_drop_flex_key_construct_id_t *,uint32,bcm_cosq_ingress_drop_flex_key_construct_t *);
extern int bcm_dnx_cosq_ingress_port_drop_flex_key_construct_set(int,bcm_cosq_ingress_drop_flex_key_construct_id_t *,uint32,bcm_cosq_ingress_drop_flex_key_construct_t *);
extern int bcm_dnx_cosq_ingress_port_drop_flex_key_entry_get(int,bcm_port_t,uint32,uint32,bcm_cosq_ingress_drop_flex_key_entry_t *);
extern int bcm_dnx_cosq_ingress_port_drop_flex_key_entry_set(int,bcm_port_t,uint32,uint32,bcm_cosq_ingress_drop_flex_key_entry_t *);
extern int bcm_dnx_cosq_ingress_port_drop_map_get(int,bcm_port_t,uint32,bcm_cosq_ingress_port_drop_map_t,uint32,int *);
extern int bcm_dnx_cosq_ingress_port_drop_map_set(int,bcm_port_t,uint32,bcm_cosq_ingress_port_drop_map_t,uint32,int);
extern int bcm_dnx_cosq_ingress_port_drop_mpls_special_label_get(int,bcm_port_t,uint32,uint32,bcm_cosq_ingress_port_drop_mpls_special_label_config_t *);
extern int bcm_dnx_cosq_ingress_port_drop_mpls_special_label_set(int,bcm_port_t,uint32,uint32,bcm_cosq_ingress_port_drop_mpls_special_label_config_t *);
extern int bcm_dnx_cosq_ingress_port_drop_threshold_get(int,bcm_port_t,uint32,int,uint32 *);
extern int bcm_dnx_cosq_ingress_port_drop_threshold_set(int,bcm_port_t,uint32,int,uint32);
extern int bcm_dnx_cosq_ingress_queue_bundle_gport_add(int,bcm_cosq_ingress_queue_bundle_gport_config_t *,bcm_gport_t *);
extern int bcm_dnx_cosq_inst_congestion_info_get(int,uint32,bcm_cosq_inst_congestion_info_key_t *,bcm_cosq_inst_congestion_info_data_t *);
extern int bcm_dnx_cosq_latency_profile_create(int,int,bcm_gport_t *);
extern int bcm_dnx_cosq_latency_profile_destroy(int,int,bcm_gport_t);
extern int bcm_dnx_cosq_mapping_get(int,bcm_cos_t,bcm_cos_queue_t *);
extern int bcm_dnx_cosq_mapping_set(int,bcm_cos_t,bcm_cos_queue_t);
extern int bcm_dnx_cosq_max_latency_pkts_get(int,bcm_gport_t,uint32,int,bcm_cosq_max_latency_pkts_t *,int *);
extern int bcm_dnx_cosq_mirror_on_drop_group_get(int,uint32,int,bcm_cosq_mirror_on_drop_group_info_t *);
extern int bcm_dnx_cosq_mirror_on_drop_group_set(int,uint32,int,bcm_cosq_mirror_on_drop_group_info_t *);
extern int bcm_dnx_cosq_pfc_config_get(int,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_cosq_pfc_config_t *);
extern int bcm_dnx_cosq_pfc_config_set(int,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_cosq_pfc_config_t *);
extern int bcm_dnx_cosq_pfc_deadlock_config_get(int,int,bcm_cosq_pfc_deadlock_config_t *);
extern int bcm_dnx_cosq_pfc_deadlock_config_set(int,int,bcm_cosq_pfc_deadlock_config_t *);
extern int bcm_dnx_cosq_pfc_deadlock_control_get(int,bcm_port_t,int,bcm_cosq_pfc_deadlock_control_t,int *);
extern int bcm_dnx_cosq_pfc_deadlock_control_set(int,bcm_port_t,int,bcm_cosq_pfc_deadlock_control_t,int);
extern int bcm_dnx_cosq_pfc_deadlock_info_get(int,int,bcm_cosq_pfc_deadlock_info_t *);
extern int bcm_dnx_cosq_pfc_deadlock_queue_config_get(int,bcm_gport_t,bcm_cosq_pfc_deadlock_queue_config_t *);
extern int bcm_dnx_cosq_pfc_deadlock_queue_config_set(int,bcm_gport_t,bcm_cosq_pfc_deadlock_queue_config_t *);
extern int bcm_dnx_cosq_pfc_deadlock_queue_status_get(int,bcm_gport_t,uint8 *);
extern int bcm_dnx_cosq_pfc_deadlock_recovery_event_register(int,bcm_cosq_pfc_deadlock_recovery_event_cb_t,void *);
extern int bcm_dnx_cosq_pfc_deadlock_recovery_event_unregister(int,bcm_cosq_pfc_deadlock_recovery_event_cb_t,void *);
extern int bcm_dnx_cosq_pfc_deadlock_recovery_exit(int,bcm_port_t,bcm_cos_t);
extern int bcm_dnx_cosq_pfc_deadlock_recovery_start(int,bcm_port_t,bcm_cos_t);
extern int bcm_dnx_cosq_pkt_size_adjust_delta_map_get(int,int,int *);
extern int bcm_dnx_cosq_pkt_size_adjust_delta_map_set(int,int,int);
extern int bcm_dnx_cosq_port_mapping_get(int,bcm_port_t,bcm_cos_t,bcm_cos_queue_t *);
extern int bcm_dnx_cosq_port_mapping_multi_get(int,bcm_port_t,int,bcm_cos_t *,bcm_cos_queue_t *);
extern int bcm_dnx_cosq_port_mapping_multi_set(int,bcm_port_t,int,bcm_cos_t *,bcm_cos_queue_t *);
extern int bcm_dnx_cosq_port_mapping_set(int,bcm_port_t,bcm_cos_t,bcm_cos_queue_t);
extern int bcm_dnx_cosq_profile_mapping_get(int,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_switch_profile_mapping_t *);
extern int bcm_dnx_cosq_profile_mapping_set(int,bcm_gport_t,bcm_cos_queue_t,uint32,bcm_switch_profile_mapping_t *);
extern int bcm_dnx_cosq_resource_allocation_get(int,uint32,bcm_cosq_resource_t,bcm_cosq_allocation_entity_t *,bcm_cosq_resource_amounts_t *);
extern int bcm_dnx_cosq_resource_allocation_set(int,uint32,bcm_cosq_resource_t,bcm_cosq_allocation_entity_t *,bcm_cosq_resource_amounts_t *);
extern int bcm_dnx_cosq_scheduler_gport_add(int,uint32,bcm_cosq_scheduler_gport_params_t *,bcm_gport_t *);
extern int bcm_dnx_cosq_scheduler_gport_get(int,uint32,bcm_gport_t,bcm_cosq_scheduler_gport_params_t *);
extern int bcm_dnx_cosq_slow_profile_get(int,bcm_cosq_slow_level_t *,bcm_cosq_slow_profile_attributes_t *);
extern int bcm_dnx_cosq_slow_profile_set(int,bcm_cosq_slow_level_t *,bcm_cosq_slow_profile_attributes_t *);
extern int bcm_dnx_cosq_src_vsqs_gport_add(int,bcm_gport_t,bcm_cosq_src_vsqs_gport_config_t *,bcm_gport_t *,bcm_gport_t *);
extern int bcm_dnx_cosq_src_vsqs_gport_get(int,bcm_gport_t,bcm_cosq_src_vsqs_gport_config_t *,bcm_gport_t *,bcm_gport_t *);
extern int bcm_dnx_cosq_stat_info_get(int,int,bcm_cosq_stat_info_key_t *,bcm_cosq_stat_info_t *);
extern int bcm_dnx_cosq_stat_info_set(int,int,bcm_cosq_stat_info_key_t *,bcm_cosq_stat_info_t *);
extern int bcm_dnx_cosq_stat_obj_map_get(int,int,bcm_cosq_obj_map_key_t *,uint32 *);
extern int bcm_dnx_cosq_stat_obj_map_set(int,int,bcm_cosq_obj_map_key_t *,uint32);
extern int bcm_dnx_cosq_sysport_ingress_queue_map_get(int,uint32,bcm_gport_t,bcm_gport_t *);
extern int bcm_dnx_cosq_sysport_ingress_queue_map_set(int,uint32,bcm_gport_t,bcm_gport_t);
extern int bcm_dnx_cosq_tas_profile_commit(int,bcm_gport_t,bcm_cosq_tas_profile_id_t);
extern int bcm_dnx_cosq_tas_profile_create(int,bcm_gport_t,bcm_cosq_tas_profile_t *,bcm_cosq_tas_profile_id_t *);
extern int bcm_dnx_cosq_tas_profile_destroy(int,bcm_gport_t,bcm_cosq_tas_profile_id_t);
extern int bcm_dnx_cosq_tas_profile_get(int,bcm_gport_t,bcm_cosq_tas_profile_id_t,bcm_cosq_tas_profile_t *);
extern int bcm_dnx_cosq_tas_profile_set(int,bcm_gport_t,bcm_cosq_tas_profile_id_t,bcm_cosq_tas_profile_t *);
extern int bcm_dnx_cosq_tas_profile_status_get(int,bcm_gport_t,bcm_cosq_tas_profile_id_t,bcm_cosq_tas_profile_status_t *);
extern int bcm_dnx_cosq_voq_connector_gport_add(int,bcm_cosq_voq_connector_gport_t *,bcm_gport_t *);
extern int bcm_dnx_cosq_voq_connector_gport_get(int,bcm_gport_t,bcm_cosq_voq_connector_gport_t *);

#endif /* BCM_DNX_SUPPORT */
#endif /* !_BCM_INT_DNX_COSQ_DISPATCH_H */
