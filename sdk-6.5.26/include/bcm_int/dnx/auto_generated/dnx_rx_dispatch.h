/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 *
 * File:        dnx_rx_dispatch.h
 * Purpose:     dnx rx driver BCM API dispatch table
 * Generator:   modules_dispatch.py
 */

#ifndef _BCM_INT_DNX_RX_DISPATCH_H
#define _BCM_INT_DNX_RX_DISPATCH_H

#include <bcm/types.h>
#include <bcm_int/dispatch.h>

#ifdef BCM_DNX_SUPPORT

extern int bcm_dnx_rx_active(int);
extern int bcm_dnx_rx_alloc(int,int,uint32,void **);
extern int bcm_dnx_rx_burst_get(int,int *);
extern int bcm_dnx_rx_burst_set(int,int);
extern int bcm_dnx_rx_cfg_get(int,bcm_rx_cfg_t *);
extern int bcm_dnx_rx_cfg_init(int);
extern int bcm_dnx_rx_channels_running(int,uint32 *);
extern int bcm_dnx_rx_clear(int);
extern int bcm_dnx_rx_control_get(int,bcm_rx_control_t,int *);
extern int bcm_dnx_rx_control_set(int,bcm_rx_control_t,int);
extern int bcm_dnx_rx_cpu_rate_get(int,int *);
extern int bcm_dnx_rx_free(int,void *);
extern int bcm_dnx_rx_init(int);
extern int bcm_dnx_rx_mtu_get(int,bcm_rx_mtu_config_t *);
extern int bcm_dnx_rx_mtu_profile_get(int,uint32,bcm_rx_mtu_profile_key_t *,bcm_rx_mtu_profile_value_t *);
extern int bcm_dnx_rx_mtu_profile_set(int,uint32,bcm_rx_mtu_profile_key_t *,bcm_rx_mtu_profile_value_t *);
extern int bcm_dnx_rx_mtu_set(int,bcm_rx_mtu_config_t *);
extern int bcm_dnx_rx_queue_channel_get(int,bcm_cos_queue_t,bcm_rx_chan_t *);
extern int bcm_dnx_rx_queue_channel_set(int,bcm_cos_queue_t,bcm_rx_chan_t);
extern int bcm_dnx_rx_queue_max_get(int,bcm_cos_queue_t *);
extern int bcm_dnx_rx_queue_packet_count_get(int,bcm_cos_queue_t,int *);
extern int bcm_dnx_rx_queue_rate_limit_status_get(int,bcm_cos_queue_t,int *);
extern int bcm_dnx_rx_queue_register(int,const char *,bcm_cos_queue_t,bcm_rx_cb_f,uint8,void *,uint32);
extern int bcm_dnx_rx_queue_unregister(int,bcm_cos_queue_t,bcm_rx_cb_f,uint8);
extern int bcm_dnx_rx_rate_get(int,int *);
extern int bcm_dnx_rx_rate_set(int,int);
extern int bcm_dnx_rx_register(int,const char *,bcm_rx_cb_f,uint8,void *,uint32);
extern int bcm_dnx_rx_sched_register(int,bcm_rx_sched_cb);
extern int bcm_dnx_rx_sched_unregister(int);
extern int bcm_dnx_rx_show(int);
extern int bcm_dnx_rx_snoop_create(int,int,int *);
extern int bcm_dnx_rx_snoop_destroy(int,int,int);
extern int bcm_dnx_rx_snoop_get(int,int,bcm_rx_snoop_config_t *);
extern int bcm_dnx_rx_snoop_set(int,int,bcm_rx_snoop_config_t *);
extern int bcm_dnx_rx_start(int,bcm_rx_cfg_t *);
extern int bcm_dnx_rx_stop(int,bcm_rx_cfg_t *);
extern int bcm_dnx_rx_trap_action_profile_clear(int,bcm_rx_trap_t);
extern int bcm_dnx_rx_trap_action_profile_get(int,bcm_rx_trap_t,bcm_gport_t *);
extern int bcm_dnx_rx_trap_action_profile_set(int,uint32,bcm_rx_trap_t,bcm_gport_t);
extern int bcm_dnx_rx_trap_get(int,int,bcm_rx_trap_config_t *);
extern int bcm_dnx_rx_trap_lif_get(int,bcm_rx_trap_lif_config_t *);
extern int bcm_dnx_rx_trap_lif_set(int,uint32,bcm_rx_trap_lif_config_t *);
extern int bcm_dnx_rx_trap_prog_get(int,uint8,bcm_rx_trap_prog_config_t *);
extern int bcm_dnx_rx_trap_prog_set(int,uint32,uint8,bcm_rx_trap_prog_config_t *);
extern int bcm_dnx_rx_trap_protocol_clear(int,bcm_rx_trap_protocol_key_t *);
extern int bcm_dnx_rx_trap_protocol_get(int,bcm_rx_trap_protocol_key_t *,bcm_gport_t *);
extern int bcm_dnx_rx_trap_protocol_interface_profiles_get(int,bcm_if_t,bcm_rx_trap_protocol_profiles_t *);
extern int bcm_dnx_rx_trap_protocol_interface_profiles_set(int,bcm_if_t,bcm_rx_trap_protocol_profiles_t *);
extern int bcm_dnx_rx_trap_protocol_profiles_get(int,bcm_gport_t,bcm_rx_trap_protocol_profiles_t *);
extern int bcm_dnx_rx_trap_protocol_profiles_set(int,bcm_gport_t,bcm_rx_trap_protocol_profiles_t *);
extern int bcm_dnx_rx_trap_protocol_set(int,bcm_rx_trap_protocol_key_t *,bcm_gport_t);
extern int bcm_dnx_rx_trap_set(int,int,bcm_rx_trap_config_t *);
extern int bcm_dnx_rx_trap_svtag_get(int,bcm_rx_trap_svtag_key_t *,bcm_gport_t *);
extern int bcm_dnx_rx_trap_svtag_set(int,bcm_rx_trap_svtag_key_t *,bcm_gport_t);
extern int bcm_dnx_rx_trap_type_create(int,int,bcm_rx_trap_t,int *);
extern int bcm_dnx_rx_trap_type_destroy(int,int);
extern int bcm_dnx_rx_trap_type_from_id_get(int,int,int,bcm_rx_trap_t *);
extern int bcm_dnx_rx_trap_type_get(int,int,bcm_rx_trap_t,int *);
extern int bcm_dnx_rx_unit_next_get(int,int *);
extern int bcm_dnx_rx_unregister(int,bcm_rx_cb_f,uint8);

#endif /* BCM_DNX_SUPPORT */
#endif /* !_BCM_INT_DNX_RX_DISPATCH_H */
