/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 *
 * File:        dnxf_fabric_dispatch.h
 * Purpose:     dnxf fabric driver BCM API dispatch table
 * Generator:   modules_dispatch.py
 */

#ifndef _BCM_INT_DNXF_FABRIC_DISPATCH_H
#define _BCM_INT_DNXF_FABRIC_DISPATCH_H

#include <bcm/types.h>
#include <bcm_int/dispatch.h>

#ifdef BCM_DNXF_SUPPORT

extern int bcm_dnxf_fabric_control_get(int,bcm_fabric_control_t,int *);
extern int bcm_dnxf_fabric_control_set(int,bcm_fabric_control_t,int);
extern int bcm_dnxf_fabric_init(int);
extern int bcm_dnxf_fabric_link_connectivity_status_get(int,int,bcm_fabric_link_connectivity_t *,int *);
extern int bcm_dnxf_fabric_link_connectivity_status_single_get(int,bcm_port_t,bcm_fabric_link_connectivity_t *);
extern int bcm_dnxf_fabric_link_control_get(int,bcm_port_t,bcm_fabric_link_control_t,int *);
extern int bcm_dnxf_fabric_link_control_set(int,bcm_port_t,bcm_fabric_link_control_t,int);
extern int bcm_dnxf_fabric_link_profile_get(int,int,uint32,uint32,uint32 *,bcm_port_t *);
extern int bcm_dnxf_fabric_link_profile_set(int,int,uint32,uint32,bcm_port_t *);
extern int bcm_dnxf_fabric_link_remote_pipe_mapping_get(int,bcm_port_t,bcm_fabric_link_remote_pipe_mapping_t *);
extern int bcm_dnxf_fabric_link_remote_pipe_mapping_set(int,bcm_port_t,bcm_fabric_link_remote_pipe_mapping_t *);
extern int bcm_dnxf_fabric_link_status_get(int,bcm_port_t,uint32 *,uint32 *);
extern int bcm_dnxf_fabric_link_threshold_add(int,uint32,int *);
extern int bcm_dnxf_fabric_link_threshold_delete(int,int);
extern int bcm_dnxf_fabric_link_thresholds_attach(int,int,uint32,bcm_port_t *);
extern int bcm_dnxf_fabric_link_thresholds_get(int,int,uint32,bcm_fabric_link_threshold_type_t *,int *);
extern int bcm_dnxf_fabric_link_thresholds_pipe_get(int,int,bcm_fabric_pipe_t,uint32,uint32,bcm_fabric_link_threshold_type_t *,int *);
extern int bcm_dnxf_fabric_link_thresholds_pipe_set(int,int,bcm_fabric_pipe_t,uint32,uint32,bcm_fabric_link_threshold_type_t *,int *);
extern int bcm_dnxf_fabric_link_thresholds_retrieve(int,int,uint32,bcm_port_t *,uint32 *);
extern int bcm_dnxf_fabric_link_thresholds_set(int,int,uint32,bcm_fabric_link_threshold_type_t *,int *);
extern int bcm_dnxf_fabric_link_topology_config_get(int,uint32,bcm_module_t,bcm_fabric_topology_type_t,int,int *,bcm_port_t *);
extern int bcm_dnxf_fabric_link_topology_config_set(int,uint32,bcm_module_t,bcm_fabric_topology_type_t,int,bcm_port_t *);
extern int bcm_dnxf_fabric_link_topology_get(int,bcm_module_t,int,int *,bcm_port_t *);
extern int bcm_dnxf_fabric_link_topology_set(int,bcm_module_t,int,bcm_port_t *);
extern int bcm_dnxf_fabric_modid_group_find(int,bcm_module_t,bcm_module_t *);
extern int bcm_dnxf_fabric_modid_group_get(int,bcm_module_t,int,bcm_module_t *,int *);
extern int bcm_dnxf_fabric_modid_group_set(int,bcm_module_t,int,bcm_module_t *);
extern int bcm_dnxf_fabric_modid_local_mapping_get(int,bcm_module_t,bcm_module_t *);
extern int bcm_dnxf_fabric_modid_local_mapping_set(int,bcm_module_t,bcm_module_t);
extern int bcm_dnxf_fabric_module_control_get(int,uint32,bcm_module_t,bcm_fabric_module_control_t,int *);
extern int bcm_dnxf_fabric_module_control_set(int,uint32,bcm_module_t,bcm_fabric_module_control_t,int);
extern int bcm_dnxf_fabric_multicast_get(int,bcm_multicast_t,uint32,int,int *,bcm_module_t *);
extern int bcm_dnxf_fabric_multicast_local_route_get(int,uint32,uint32,bcm_multicast_t *,int *);
extern int bcm_dnxf_fabric_multicast_local_route_set(int,uint32,uint32,bcm_multicast_t *,int *);
extern int bcm_dnxf_fabric_multicast_multi_get(int,uint32,uint32,bcm_multicast_t *,bcm_fabric_module_vector_t *);
extern int bcm_dnxf_fabric_multicast_multi_set(int,uint32,uint32,bcm_multicast_t *,bcm_fabric_module_vector_t *);
extern int bcm_dnxf_fabric_multicast_set(int,bcm_multicast_t,uint32,uint32,bcm_module_t *);
extern int bcm_dnxf_fabric_profile_threshold_get(int,int,bcm_fabric_threshold_id_t,bcm_fabric_threshold_type_t,uint32,int *);
extern int bcm_dnxf_fabric_profile_threshold_set(int,int,bcm_fabric_threshold_id_t,bcm_fabric_threshold_type_t,uint32,int);
extern int bcm_dnxf_fabric_rci_resolution_get(int,uint32,bcm_fabric_rci_resolution_key_t *,bcm_fabric_rci_resolution_config_t *);
extern int bcm_dnxf_fabric_rci_resolution_set(int,uint32,bcm_fabric_rci_resolution_key_t *,bcm_fabric_rci_resolution_config_t *);
extern int bcm_dnxf_fabric_reachability_status_get(int,int,int,uint32 *,int *);
extern int bcm_dnxf_fabric_route_rx(int,uint32,uint32,uint32 *,uint32 *);
extern int bcm_dnxf_fabric_route_tx(int,uint32,bcm_fabric_route_t *,uint32,uint32 *);
extern int bcm_dnxf_fabric_stat_get(int,uint32,bcm_fabric_stat_index_t,bcm_fabric_stat_t,uint64 *);
extern int bcm_dnxf_fabric_system_upgrade_phase1_get(int,int,int *,bcm_fabric_system_upgrade_target_t *);
extern int bcm_dnxf_fabric_system_upgrade_phase1_set(int,int,int,bcm_fabric_system_upgrade_target_t);
extern int bcm_dnxf_fabric_system_upgrade_phase2_trig(int,int);
extern int bcm_dnxf_fabric_system_upgrade_phase3_get(int,int,bcm_fabric_system_upgrade_status_t *);

#endif /* BCM_DNXF_SUPPORT */
#endif /* !_BCM_INT_DNXF_FABRIC_DISPATCH_H */
