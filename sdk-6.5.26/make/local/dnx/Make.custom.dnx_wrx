FEATURE_LIST := CINT L3 CPU_I2C MEM_SCAN EDITLINE BCM_SAL_PROFILE CUSTOMER TEST RCPU DUNE_UI INTR APIMODE PTP

DEBUG_PEDANTIC=TRUE

DEBUG_CFLAGS=-Wdeclaration-after-statement

ifneq ($(DEBUG_OPTIMIZE),FALSE)
DEBUG_CFLAGS += -Wuninitialized -O
endif

BCM_PTL_SPT=1

ALL_DPP_CHIPS  = 1
ALL_DFE_CHIPS  = 1
#
# Remove ALL_DNXF_CHIPS in comment so that we get a pure Jericho compilation
# (Otherwise, it is mixed JR1 and JR2)
#
ifeq ($(INCLUDE_DNXF1),1)
    ALL_DNXF_CHIPS = 1
endif

KERN_VER=3.7.10

ifeq ($(NO_MULTIPLE_DEFINITION),1)
# -fcommon :
# In C code, this option controls the placement of global variables defined without an initializer, known as
# tentative definitions in the C standard.
# For -fno-common, the compiler places uninitialized global variables in the BSS section of the object file.
# This inhibits the merging of tentative definitions by the linker so you get a multiple-definition error if
# the same variable is accidentally defined in more than one compilation unit.
# -fcommon is mainly useful to enable legacy code to link without errors.
  CFGFLAGS += -fno-common
endif

ifeq ($(ALLOC_DEBUG_SUPPORT),1)
    #
    # To only display memory consumption, comment the following two lines
    #
    CFGFLAGS += -DAGGRESSIVE_ALLOC_DEBUG_TESTING=1
    #
    # To display some info on sal alloc/free during initialization, set
    # DISPLAY_MEM_USAGE
    # to a non-zero value
    #
    CFGFLAGS += -DDISPLAY_MEM_USAGE=1
    #
    # This is required for running DVAPI so that the test can exit normally
    # (otherwise, no unit is attached and DVAPI environment complains.
    #
    CFGFLAGS += -DINIT_ON_SECOND_LOOP=1
    CFGFLAGS += -fexceptions
    CFGFLAGS += -rdynamic
    CFGFLAGS += -O0
endif

CFGFLAGS += -DSTATIC=static
CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT
CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT_SW_DUMP
CFGFLAGS += -DBCM_EASY_RELOAD_WB_COMPAT_SUPPORT
CFGFLAGS += -DBCM_CONTROL_API_TRACKING
CFGFLAGS += -D__DUNE_LINUX_BCM_CPU_PCIE__
CFGFLAGS += -DPHYS_ADDRS_ARE_64BITS -DSAL_BDE_32BIT_USER_64BIT_KERNEL
CFGFLAGS += -D_SIMPLE_MEMORY_ALLOCATION_=0 -DUSE_LINUX_BDE_MMAP=1
CFGFLAGS += -DSCACHE_CRC_CHECK
CFGFLAGS += -DDNX_INTERNAL

CFGFLAGS += -DBROADCOM_SVK

# Pay attention that when using gnu99 with PEDANTIC above SAND_PEDANTIC should be always present 
CFGFLAGS += -DSAND_PEDANTIC -DCINT_CONFIG_INCLUDE_LONGLONGS -std=gnu99
CFGFLAGS += -Wno-overlength-strings -DINCLUDE_MBIST_COMMENTS


