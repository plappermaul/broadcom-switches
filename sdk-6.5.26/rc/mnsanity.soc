# $Id: $
# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
# 
# Copyright 2007-2022 Broadcom Inc. All rights reserved.
#
# Apache Sanity
#
# Script to run all available tests.
# For testing basic sanity of new drivers, simulators, chips, etc.

# Set run command script not to fail on errors reported by commands
# this allows the script to continue if a test fails
set rcerror=false

# Set up test mode: don't stop on errors, show progress on each test
tm -stoponerror +progress
# Unselect all
ts -*

echo "testsuite: started: sanity"
time 'rcload rc.soc'

counter off
l2mode off

# We need to print out port status since any cabling effects results.
*:ps

if $?1 'local full_test 1'

# Avoid link messages while testing
linkscan off

local done 'echo "Test Completed"'

#Display some useful information
date
ver
soc
config show
show portmap
show params
phy info

dump pcic
dump pcim

#Start Test
echo "Running PCI Compliance Test ..."
tr 2
$done

echo "Running PCI S-Channel Buffer Test ..."
tr 4
$done

echo "Running Register Reset Defaults Test..."
tr 1
$done

echo "Running Register Read/Write Test..."
tr 3 mask64
$done

rcload rc.soc
counter off
l2mode off
linkscan off
memscan off

echo "Running CPU Benchmarks Test..."
tr 21
$done

echo "Running XGS L2 Delete by Port Test..."
tr 35 Reset=False

echo "Running XGS L2 Delete by VLAN Test..."
tr 36 Reset=False Count=50

echo "Running BCM Packet Send Test..."
tr 40

echo "Running BCM Packet Receive Test..."
tr 41

set rct=false
echo "Running Memory Tests..."
rcload tr50_bcm56670_a0.soc
rcload tr51_bcm56670_a0.soc
rcload tr52_bcm56670_a0.soc
rcload tr71_bcm56670_a0.soc
$done

# Re-initialize to clean up of various read/writes to MMU memories
set rct=true
counter off
l2mode off
linkscan off
memscan off

echo "Running Counter Width Verification Test..."
tr 30
$done

echo "Running Counter Read/Write Test..."
tr 31
$done

set rct=true

echo "Running MDIO Linkscan Test..."
tr 60
$done

echo "Running CPU DMA Loopback Test..."
tr 17
$done

echo "Running CPU DMA, Scatter/Gather Reload Test..."
tr 22
$done

#echo "Running CPU DMA, Scatter/Gather Simple Test..."
#tr 23 PacketsPerChainEnd=1
#$done

echo "Running CPU DMA, Scatter/Gather Random Test..."
tr 24 PacketsPerChainEnd=1
$done

#MAC Loopback
echo "tr 18: Testing MAC Loopback - 10 Gb/s all XE ports"
tr 18 PortBitMap=xe Speed=10G
$done
date

echo "Testing MAC Loopback - 100 Gb/s all CE ports"
tr 18 PortBitMap=ce Speed=100G
$done

echo "Testing MAC Loopback - 106 Gb/s all HG ports"
tr 18 PortBitMap=hg Speed=106G
$done

#PHY Loopback
echo "tr 19: Testing PHY Loopback - 100 Gb/s all CE ports"
tr 19 PortBitMap=xe Speed=100G
$done
date

echo "Testing PHY Loopback - 100 Gb/s all CE ports"
tr 19 PortBitMap=ce Speed=100G
$done

echo "Testing PHY Loopback - 106 Gb/s all HG ports"
tr 19 PortBitMap=hg Speed=106G
$done

echo "Running MAC loopback V2 on all ports ..."
tr 48 PortBitMap=ce,xe
tr 48 PortBitMap=xe
#$done

echo "Running PHY loopback V2 on all ports ..."
tr 49 PortBitMap=ce,xe
tr 49 PortBitMap=xe
$done

#Internal snake Loopback
echo "tr 39: Running internal snake on all XE ports, MAC loopback ..."
tr 39 LoopbackMode=MAC snakepath=TWOways PortBitMap=xe Count=1
$done
date

echo "tr 39: Running internal snake on all CE ports, PHY loopback ..."
tr 39 LoopbackMode=PHY snakepath=TWOways PortBitMap=xe Count=1
$done
date

echo "Running internal snake on all CE ports, MAC loopback ..."
tr 39 LoopbackMode=MAC snakepath=TWOways PortBitMap=ce
$done

echo "Running internal snake on all CE ports, PHY loopback ..."
tr 39 LoopbackMode=PHY snakepath=TWOways PortBitMap=ce
$done


echo "tr 72: Running Traffic Test in MAC mode on CE ports..."
tr 72 RunMode=MAC PortBitMap=ce tis=5
$done
date

echo "tr 72: Running Traffic Test in MAC mode on XE ports..."
tr 72 RunMode=MAC PortBitMap=xe tis=5
$done
date

#echo "tr 72: Running Traffic Test in EXTERNAL mode on CE ports with AutoNeg disabled..."
#if !"expr $5+0 != 10086"\
#   'tr 72 RunMode=EXTERNAL AutoNeg=False PortBitMap=ce tis=5'
#$done
#date

#echo "tr 72: Running Traffic Test in EXTERNAL mode on XE ports with AutoNeg disabled..."
#if !"expr $5+0 != 10086"\
#    'tr 72 RunMode=EXTERNAL AutoNeg=False PortBitMap=xe12,xe19 tis=5'
#$done
#date

#echo "tr 72: Running Traffic Test in EXTERNAL mode on XE ports with AutoNeg disabled..."
#if !"expr $5+0 != 10086"\
#    'tr 72 RunMode=EXTERNAL AutoNeg=False PortBitMap=xe0-xe11,xe13-xe18,xe20-xe31 tis=5'
#$done
#date



echo "Running TX Reload Test..."
tr 90
$done

echo "Running RX Reload Test..."
tr 91
$done

set rct=false
init soc
init misc

echo "Running VLAN Xlate Overflow Insert Test..."
tr 100
$done

echo "Running VLAN Xlate Hashing Test..."
tr 101 DualEnable=1 DualHash=0 Count=1024
tr 101 DualEnable=1 DualHash=1 Count=1024
tr 101 DualEnable=1 DualHash=2 Count=1024
tr 101 DualEnable=1 DualHash=3 Count=1024
tr 101 DualEnable=1 DualHash=4 Count=1024
tr 101 DualEnable=1 DualHash=5 Count=1024
$done

echo "Running Egress VLAN Xlate Overfloew Insert Test..."
tr 102
$done

echo "Running Egress VLAN Xlate Hashing Test..."
tr 103 DualEnable=1 DualHash=0 Count=1024
tr 103 DualEnable=1 DualHash=1 Count=1024
tr 103 DualEnable=1 DualHash=2 Count=1024
tr 103 DualEnable=1 DualHash=3 Count=1024
tr 103 DualEnable=1 DualHash=4 Count=1024
tr 103 DualEnable=1 DualHash=5 Count=1024
$done

echo "Running MPLS Overflow Insert Test..."
tr 104
$done

echo "Running MPLS Hashing Test..."
tr 105 DualEnable=1 DualHash=0 Count=1024
tr 105 DualEnable=1 DualHash=1 Count=1024
tr 105 DualEnable=1 DualHash=2 Count=1024
tr 105 DualEnable=1 DualHash=3 Count=1024
tr 105 DualEnable=1 DualHash=4 Count=1024
tr 105 DualEnable=1 DualHash=5 Count=1024
$done

#echo "Running Software Error Recovery Test ..."
#linkscan off
#tr 144
#$done

# Show status
date
tl
local returnCode $?

echo "Tests Complete.  Reinitializing ..."
config refresh
rcload rc.soc
counter off
l2mode off

# We want to show the return code from the tl command which
# lists the results. The automated test infrastructure keys off of this
# value
echo "testsuite: finished: sanity: $returnCode"
