/*
 * 
 * $Id: ppe_h.stg,v 1.20 Broadcom SDK $
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 *
 * g3p1_pp_rule_encode.h: Guadalupe3k V1.0 PPE rule encoding functions
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated from sdk/caladan_ucode/g3p1/src/g3p1_ppe_cfg.lrp.
 * Edits to this file will be lost when it is regenerated.
 *
 * File generated from ppe_config.cfg
 */
#ifndef _SB_G3P1_FE_PP_RULE_ENCODE_H_
#define _SB_G3P1_FE_PP_RULE_ENCODE_H_

#if defined(BCM_CALADAN3_SUPPORT) && defined(BCM_CALADAN3_G3P1_SUPPORT) 
/* Bit Hash is larger than Byte Hash memory - number of bytes of memroy */
#define SOC_SBX_G3P1_MEM_SIZE (SOC_SBX_CALADAN3_PPE_HASH_BIT_LENGTH_BITS >> 3)


typedef struct {
  soc_sbx_caladan3_ppe_hash_type_t type;
  soc_sbx_caladan3_ppe_hash_id_t id;
  uint8 mem[SOC_SBX_G3P1_MEM_SIZE];
} soc_sbx_g3p1_ppe_hash_t;

int soc_sbx_g3p1_ppe_init(int unit);

typedef enum {
SOC_CALADAN3_PPE_RULE_rS0_INGRESS_LOOPBACK_ENTRY = 0 ,
SOC_CALADAN3_PPE_RULE_rS0_EGRESS_LOOPBACK_ENTRY = 1 ,
SOC_CALADAN3_PPE_RULE_rS0_ETH_L2CP_SLOW_ENTRY = 2 ,
SOC_CALADAN3_PPE_RULE_rS0_ETH_L2CP_ENTRY = 3 ,
SOC_CALADAN3_PPE_RULE_rS0_ETH_VRRP_IPV4_ENTRY = 4 ,
SOC_CALADAN3_PPE_RULE_rS0_ETH_VRRP_IPV6_ENTRY = 5 ,
SOC_CALADAN3_PPE_RULE_rS0_ETH_LSM_00_ENTRY = 16 ,
SOC_CALADAN3_PPE_RULE_rS0_ETH_BROADCAST_ENTRY = 96 ,
SOC_CALADAN3_PPE_RULE_rS0_ETH_MULTICAST_ENTRY = 97 ,
SOC_CALADAN3_PPE_RULE_rS0_MPLS_HDR_ENTRY = 125 ,
SOC_CALADAN3_PPE_RULE_rS0_ETH_COMMON_ENTRY = 126 ,
SOC_CALADAN3_PPE_RULE_rS1_LLC_SNAP_ENTRY = 1 ,
SOC_CALADAN3_PPE_RULE_rS1_LLC_RAW_ENTRY = 2 ,
SOC_CALADAN3_PPE_RULE_rS1_TPID0_TPID_ENTRY = 10 ,
SOC_CALADAN3_PPE_RULE_rS1_TPID1_TPID_ENTRY = 11 ,
SOC_CALADAN3_PPE_RULE_rS1_TPID2_TPID_ENTRY = 12 ,
SOC_CALADAN3_PPE_RULE_rS1_TPID0_ENTRY = 16 ,
SOC_CALADAN3_PPE_RULE_rS1_TPID1_ENTRY = 17 ,
SOC_CALADAN3_PPE_RULE_rS1_TPID2_ENTRY = 18 ,
SOC_CALADAN3_PPE_RULE_rS1_TPID_ENTRY = 19 ,
SOC_CALADAN3_PPE_RULE_rS1_TPID_UNKNOWN_ENTRY = 20 ,
SOC_CALADAN3_PPE_RULE_rS2_VLAN_ENTRY = 0 ,
SOC_CALADAN3_PPE_RULE_rS2_VLAN_VLAN_ENTRY = 1 ,
SOC_CALADAN3_PPE_RULE_rS3_ETYPE_ENTRY = 0 ,
SOC_CALADAN3_PPE_RULE_rS3_MPLS_HDR_ENTRY = 1 ,
SOC_CALADAN3_PPE_RULE_rS4_ETYPE_IPV4_ENTRY = 0 ,
SOC_CALADAN3_PPE_RULE_rS4_ETYPE_IPV6_ENTRY = 1 ,
SOC_CALADAN3_PPE_RULE_rS4_ETYPE_MPLS1_ENTRY = 2 ,
SOC_CALADAN3_PPE_RULE_rS4_ETYPE_MPLS2_ENTRY = 3 ,
SOC_CALADAN3_PPE_RULE_rS4_ETYPE_MPLS3_ENTRY = 4 ,
SOC_CALADAN3_PPE_RULE_rS4_ETYPE_ETHOAM_ENTRY = 5 ,
SOC_CALADAN3_PPE_RULE_rS4_ETYPE_PTP0_ENTRY = 6 ,
SOC_CALADAN3_PPE_RULE_rS4_ETYPE_PTP1_ENTRY = 7 ,
SOC_CALADAN3_PPE_RULE_rS4_ETYPE_UNKNOWN_ENTRY = 8 ,
SOC_CALADAN3_PPE_RULE_rS4_HDR_MPLS1_ENTRY = 9 ,
SOC_CALADAN3_PPE_RULE_rS4_HDR_MPLS2_ENTRY = 10 ,
SOC_CALADAN3_PPE_RULE_rS4_HDR_MPLS3_ENTRY = 11 ,
SOC_CALADAN3_PPE_RULE_rS5_IPV4_UDP_ENTRY = 0 ,
SOC_CALADAN3_PPE_RULE_rS5_IPV4_TCP_ENTRY = 1 ,
SOC_CALADAN3_PPE_RULE_rS5_IPV4_PIM_ENTRY = 2 ,
SOC_CALADAN3_PPE_RULE_rS5_IPV4_IGMP_ENTRY = 3 ,
SOC_CALADAN3_PPE_RULE_rS5_IPV4_ENTRY = 4 ,
SOC_CALADAN3_PPE_RULE_rS5_IPV6_UDP_ENTRY = 5 ,
SOC_CALADAN3_PPE_RULE_rS5_IPV6_TCP_ENTRY = 6 ,
SOC_CALADAN3_PPE_RULE_rS5_IPV6_ENTRY = 7 ,
SOC_CALADAN3_PPE_RULE_rS5_MPLS_MPLS_ENTRY = 8 ,
SOC_CALADAN3_PPE_RULE_rS5_MPLS_ENTRY = 9 ,
SOC_CALADAN3_PPE_RULE_rS5_MPLS3_ENTRY = 10 ,
SOC_CALADAN3_PPE_RULE_rS5_L3_UNKNOWN_ENTRY = 12 ,
SOC_CALADAN3_PPE_RULE_rS6_MPLS_GAL_ACH_ENTRY = 0 ,
SOC_CALADAN3_PPE_RULE_rS6_MPLS_ACH_ENTRY = 1 ,
SOC_CALADAN3_PPE_RULE_rS6_MPLS_NOACH_L2_ENTRY = 2 ,
SOC_CALADAN3_PPE_RULE_rS6_MPLS_NOACH_L3_ENTRY = 3 ,
SOC_CALADAN3_PPE_RULE_rS6_MPLS_UNKN_ENTRY = 4 ,
SOC_CALADAN3_PPE_RULE_rS6_MPLS3_ENTRY = 5 ,
SOC_CALADAN3_PPE_RULE_rS6_MPLS4_ENTRY = 6 ,
SOC_CALADAN3_PPE_RULE_rS6_UDP_PTP0_ENTRY = 7 ,
SOC_CALADAN3_PPE_RULE_rS6_UDP_PTP1_ENTRY = 8 ,
SOC_CALADAN3_PPE_RULE_rS6_UDP_UNKN_ENTRY = 9 ,
SOC_CALADAN3_PPE_RULE_rS7_MPLS_ACH_DATA_ENTRY = 1 ,
SOC_CALADAN3_PPE_RULE_rS7_MPLS_ACH_CTRL_ENTRY = 2 ,
SOC_CALADAN3_PPE_RULE_rS7_MPLS_L3_IPV4_ENTRY = 3 ,
SOC_CALADAN3_PPE_RULE_rS7_MPLS_L3_UNKN_ENTRY = 4 ,
SOC_CALADAN3_PPE_RULE_rS7_MPLS_NOACH_L2_ENTRY = 5 ,
SOC_CALADAN3_PPE_RULE_rS7_MPLS3_ENTRY = 6 ,
SOC_CALADAN3_PPE_RULE_rS7_MPLS3_MPLS_ENTRY = 7 ,
SOC_CALADAN3_PPE_RULE_rS7_MPLS_BFD_CC_ENTRY = 8 ,
SOC_CALADAN3_PPE_RULE_rS7_MPLS_BFD_CV_ENTRY = 9 ,
SOC_CALADAN3_PPE_RULE_rS8_MPLS_LER_IPV4_ENTRY = 0 ,
SOC_CALADAN3_PPE_RULE_rS8_MPLS_PWE_ETH_ENTRY = 1 ,
SOC_CALADAN3_PPE_RULE_rS8_MPLS_ACH_ENTRY = 2 ,
SOC_CALADAN3_PPE_RULE_rS8_MPLS_NOACH_L2_ENTRY = 3 ,
SOC_CALADAN3_PPE_RULE_rS8_MPLS_NOACH_L3_ENTRY = 4 ,
SOC_CALADAN3_PPE_RULE_rS8_MPLS_UNKN_ENTRY = 5 ,
SOC_CALADAN3_PPE_RULE_rS8_BFD_CC_ENTRY = 6 ,
SOC_CALADAN3_PPE_RULE_rS8_BFD_CV_ENTRY = 7 ,
SOC_CALADAN3_PPE_RULE_rS9_MPLS_ACH_DATA_ENTRY = 1 ,
SOC_CALADAN3_PPE_RULE_rS9_MPLS_ACH_CTRL_ENTRY = 2 ,
SOC_CALADAN3_PPE_RULE_rS9_MPLS_L3_IPV4_ENTRY = 3 ,
SOC_CALADAN3_PPE_RULE_rS9_MPLS_L3_UNKN_ENTRY = 4 ,
SOC_CALADAN3_PPE_RULE_rS9_MPLS_NOACH_L2_ENTRY = 5 ,
SOC_CALADAN3_PPE_RULE_rS10_MPLS_LER_IPV4_ENTRY = 0 ,
SOC_CALADAN3_PPE_RULE_rS10_MPLS_PWE_ETH_ENTRY = 1 ,
SOC_CALADAN3_PPE_RULE_rS0_EGR_ERH_MPLS_ARAD_ENTRY = 109 ,
SOC_CALADAN3_PPE_RULE_rS0_EGR_ERH_RAWOI_ENTRY = 110 ,
SOC_CALADAN3_PPE_RULE_rS0_EGR_ERH_MPLS_ENTRY = 111 ,
SOC_CALADAN3_PPE_RULE_rS0_EGR_ERH_MC_ENTRY = 112 ,
SOC_CALADAN3_PPE_RULE_rS0_EGR_ERH_ENTRY = 113 ,
SOC_CALADAN3_PPE_RULE_rS1_EGR_OAMUPMAC_ENTRY = 32 ,
SOC_CALADAN3_PPE_RULE_rS1_EGR_ETH_COMMON_ENTRY = 100 ,
SOC_CALADAN3_PPE_RULE_rS1_EGR_MPLS_ENTRY = 101 ,
SOC_CALADAN3_PPE_RULE_rS2_EGR_VLAN_ENTRY = 32 ,
SOC_CALADAN3_PPE_RULE_rS2_EGR_VLAN_COMMON_ENTRY = 33 ,
SOC_CALADAN3_PPE_RULE_rS2_EGR_MPLS_ENTRY = 34 ,
SOC_CALADAN3_PPE_RULE_rS3_EGR_NULL_ENTRY = 40 ,
SOC_CALADAN3_PPE_RULE_rS4_EGR_ETYPE_ENTRY = 44 ,
SOC_CALADAN3_PPE_RULE_rS5_EGR_ETYPE_IPV4_ENTRY = 32 ,
SOC_CALADAN3_PPE_RULE_rS5_EGR_ETYPE_IPV6_ENTRY = 33 ,
SOC_CALADAN3_PPE_RULE_rS5_EGR_ETYPE_PTP0_ENTRY = 34 ,
SOC_CALADAN3_PPE_RULE_rS5_EGR_ETYPE_PTP1_ENTRY = 35 ,
SOC_CALADAN3_PPE_RULE_rS5_EGR_ETYPE_ETHOAM_ENTRY = 36 ,
SOC_CALADAN3_PPE_RULE_rS5_EGR_ETYPE_UNKNOWN_ENTRY = 37 ,
SOC_CALADAN3_PPE_RULE_rS6_EGR_IPV4_UDP_ENTRY = 32 ,
SOC_CALADAN3_PPE_RULE_rS6_EGR_IPV4_ENTRY = 33 ,
SOC_CALADAN3_PPE_RULE_rS6_EGR_IPV6_ENTRY = 34 ,
SOC_CALADAN3_PPE_RULE_rS7_EGR_UDP_PTP0_ENTRY = 32 ,
SOC_CALADAN3_PPE_RULE_rS7_EGR_UDP_PTP1_ENTRY = 33 ,
SOC_CALADAN3_PPE_RULE_rS7_EGR_UDP_UNKNOWN_ENTRY = 34 ,
SOC_CALADAN3_PPE_RULE_rSX_SENTINEL_ENTRY = 127 
} soc_sbx_g3p1_ppe_rule_id_t; 

typedef struct {
  uint32 cam_id_first;
  uint32 cam_id_last;
  soc_sbx_g3p1_ppe_rule_id_t rule_id;
  uint32 rule_enable;
  soc_sbx_caladan3_ppe_tcamdata_t tcam;
  soc_sbx_caladan3_ppe_camram_t   camram;
} soc_sbx_g3p1_ppe_rule_t;


typedef struct {
  int  dmac;  /* size=48 offset=0*/
  int  dmac0;  /* size=8 offset=0*/
  int  dmac1;  /* size=8 offset=8*/
  int  dmac2;  /* size=8 offset=16*/
  int  dmac3;  /* size=8 offset=24*/
  int  dmac4;  /* size=8 offset=32*/
  int  dmac5;  /* size=8 offset=40*/
  int  smac;  /* size=48 offset=48*/
  int  smac0;  /* size=8 offset=48*/
  int  smac1;  /* size=8 offset=56*/
  int  smac2;  /* size=8 offset=64*/
  int  smac3;  /* size=8 offset=72*/
  int  smac4;  /* size=8 offset=80*/
  int  smac5;  /* size=8 offset=88*/
} soc_sbx_g3p1_ppe_packet_ETH_t;


typedef struct {
  int  tpid;  /* size=16 offset=0*/
  int  pri;  /* size=3 offset=16*/
  int  cfi;  /* size=1 offset=19*/
  int  vid;  /* size=12 offset=20*/
} soc_sbx_g3p1_ppe_packet_VLAN_t;


typedef struct {
  int  len;  /* size=16 offset=0*/
  int  dsap;  /* size=8 offset=16*/
  int  ssap;  /* size=8 offset=24*/
  int  ctl;  /* size=8 offset=32*/
  int  oui;  /* size=24 offset=40*/
} soc_sbx_g3p1_ppe_packet_SNAP_t;


typedef struct {
  int  len;  /* size=16 offset=0*/
} soc_sbx_g3p1_ppe_packet_LLC_t;


typedef struct {
  int  value;  /* size=16 offset=0*/
} soc_sbx_g3p1_ppe_packet_ETYPE_t;


typedef struct {
  int  value;  /* size=16 offset=0*/
  int  type;  /* size=8 offset=16*/
  int  version;  /* size=8 offset=24*/
} soc_sbx_g3p1_ppe_packet_ETYPE_PTP_t;


typedef struct {
  int  ver;  /* size=4 offset=0*/
  int  ihl;  /* size=4 offset=4*/
  int  dscp;  /* size=6 offset=8*/
  int  ecn;  /* size=2 offset=14*/
  int  length;  /* size=16 offset=16*/
  int  id;  /* size=16 offset=32*/
  int  fz;  /* size=1 offset=48*/
  int  df;  /* size=1 offset=49*/
  int  mf;  /* size=1 offset=50*/
  int  offset;  /* size=13 offset=51*/
  int  ttl;  /* size=8 offset=64*/
  int  proto;  /* size=8 offset=72*/
  int  chksum;  /* size=16 offset=80*/
  int  sa;  /* size=32 offset=96*/
  int  da;  /* size=32 offset=128*/
} soc_sbx_g3p1_ppe_packet_IPV4_t;


typedef struct {
  int  ver;  /* size=4 offset=0*/
  int  tc;  /* size=8 offset=4*/
  int  flow;  /* size=20 offset=12*/
  int  length;  /* size=16 offset=32*/
  int  nxthdr;  /* size=8 offset=48*/
  int  hop_limit;  /* size=8 offset=56*/
  int  sa;  /* size=128 offset=64*/
  int  sa0;  /* size=32 offset=64*/
  int  sa1;  /* size=32 offset=96*/
  int  sa2;  /* size=32 offset=128*/
  int  sa3;  /* size=32 offset=160*/
  int  da;  /* size=128 offset=192*/
  int  da0;  /* size=32 offset=192*/
  int  da1;  /* size=32 offset=224*/
  int  da2;  /* size=32 offset=256*/
  int  da3;  /* size=32 offset=288*/
} soc_sbx_g3p1_ppe_packet_IPV6_t;


typedef struct {
  int  sport;  /* size=16 offset=0*/
  int  dport;  /* size=16 offset=16*/
  int  len;  /* size=16 offset=32*/
  int  checksum;  /* size=16 offset=48*/
} soc_sbx_g3p1_ppe_packet_UDP_t;


typedef struct {
  int  sport;  /* size=16 offset=0*/
  int  dport;  /* size=16 offset=16*/
  int  len;  /* size=16 offset=32*/
  int  checksum;  /* size=16 offset=48*/
  int  type;  /* size=8 offset=64*/
  int  version;  /* size=8 offset=72*/
} soc_sbx_g3p1_ppe_packet_UDP_PTP_t;


typedef struct {
  int  sport;  /* size=16 offset=0*/
  int  dport;  /* size=16 offset=16*/
  int  seqn;  /* size=32 offset=32*/
  int  ackn;  /* size=32 offset=64*/
  int  dofs;  /* size=4 offset=96*/
  int  reserve;  /* size=3 offset=100*/
  int  ecn;  /* size=3 offset=103*/
  int  ctrl;  /* size=6 offset=106*/
  int  wind;  /* size=16 offset=112*/
  int  checksum;  /* size=16 offset=128*/
  int  urgp;  /* size=16 offset=144*/
} soc_sbx_g3p1_ppe_packet_TCP_t;


typedef struct {
  int  w0;  /* size=32 offset=0*/
  int  w1;  /* size=32 offset=32*/
  int  w2;  /* size=32 offset=64*/
  int  w3;  /* size=32 offset=96*/
  int  w4;  /* size=32 offset=128*/
  int  w5;  /* size=32 offset=160*/
  int  w6;  /* size=32 offset=192*/
  int  w7;  /* size=32 offset=224*/
  int  unused1;  /* size=32 offset=256*/
  int  unused2;  /* size=32 offset=288*/
  int  streamnum;  /* size=4 offset=320*/
  int  unused3;  /* size=12 offset=324*/
  int  bubble_index;  /* size=16 offset=336*/
  int  ppe_var;  /* size=32 offset=352*/
  int  bubble_entry_h;  /* size=32 offset=384*/
  int  bubble_entry_l;  /* size=32 offset=416*/
  int  random;  /* size=32 offset=448*/
  int  timestamp;  /* size=32 offset=480*/
} soc_sbx_g3p1_ppe_packet_LRP_BUBBLE_t;


typedef struct {
  int  value;  /* size=16 offset=0*/
  int  w0;  /* size=32 offset=16*/
  int  w1;  /* size=32 offset=48*/
  int  w2;  /* size=32 offset=80*/
  int  w3;  /* size=32 offset=112*/
  int  w4;  /* size=32 offset=144*/
  int  w5;  /* size=32 offset=176*/
  int  w6;  /* size=32 offset=208*/
  int  w7;  /* size=32 offset=240*/
} soc_sbx_g3p1_ppe_packet_PTP_t;


typedef struct {
  int  label;  /* size=20 offset=0*/
  int  exp;  /* size=3 offset=20*/
  int  s;  /* size=1 offset=23*/
  int  ttl;  /* size=8 offset=24*/
} soc_sbx_g3p1_ppe_packet_MPLS_t;


typedef struct {
  int  reserved;  /* size=3 offset=0*/
  int  ctrl;  /* size=1 offset=3*/
  int  version;  /* size=4 offset=4*/
  int  reserved2;  /* size=8 offset=8*/
  int  type;  /* size=16 offset=16*/
} soc_sbx_g3p1_ppe_packet_ACH_t;


typedef struct {
  int  null;  /* size=0 offset=0*/
} soc_sbx_g3p1_ppe_packet_NULL_t;


typedef struct {
  int  ksop;  /* size=8 offset=0*/
  int  qid;  /* size=14 offset=18*/
  int  oi;  /* size=16 offset=32*/
  int  sid;  /* size=14 offset=48*/
  int  r;  /* size=2 offset=62*/
  int  fdp;  /* size=2 offset=64*/
  int  fcos;  /* size=3 offset=66*/
  int  rdp;  /* size=2 offset=82*/
  int  rcos;  /* size=3 offset=84*/
  int  s;  /* size=1 offset=87*/
  int  ttl;  /* size=8 offset=88*/
} soc_sbx_g3p1_ppe_packet_ERH_t;


typedef struct {
  int  w0;  /* size=32 offset=0*/
  int  otmh_act;  /* size=2 offset=0*/
  int  otmh_dp;  /* size=2 offset=2*/
  int  otmh_m;  /* size=1 offset=4*/
  int  otmh_class;  /* size=3 offset=5*/
  int  otmh_dest_port;  /* size=8 offset=8*/
  int  otmh_src_sys_port;  /* size=16 offset=16*/
  int  otmh_cud_rsvd;  /* size=4 offset=32*/
  int  otmh_cud;  /* size=20 offset=36*/
  int  ksop_pad;  /* size=8 offset=56*/
  int  oi;  /* size=16 offset=64*/
  int  sid;  /* size=14 offset=80*/
  int  rsvd_b;  /* size=2 offset=94*/
  int  fdp;  /* size=2 offset=96*/
  int  fcos;  /* size=3 offset=98*/
  int  hdrcompr;  /* size=1 offset=101*/
  int  oam;  /* size=1 offset=102*/
  int  rsvd_c;  /* size=11 offset=103*/
  int  rdp;  /* size=2 offset=114*/
  int  rcos;  /* size=3 offset=116*/
  int  s;  /* size=1 offset=119*/
  int  ttl;  /* size=8 offset=120*/
} soc_sbx_g3p1_ppe_packet_EERH_ARAD_t;


typedef struct {
  int  w0;  /* size=32 offset=0*/
  int  ksop;  /* size=8 offset=32*/
  int  otmh_act;  /* size=2 offset=40*/
  int  otmh_dp;  /* size=2 offset=42*/
  int  otmh_m;  /* size=1 offset=44*/
  int  otmh_class;  /* size=3 offset=45*/
  int  otmh_dest_port;  /* size=8 offset=48*/
  int  otmh_src_sys_port;  /* size=16 offset=56*/
  int  otmh_cud_rsvd;  /* size=4 offset=72*/
  int  otmh_cud;  /* size=20 offset=76*/
  int  oi;  /* size=16 offset=96*/
  int  sid;  /* size=14 offset=112*/
  int  rsvd_b;  /* size=2 offset=126*/
  int  fdp;  /* size=2 offset=96*/
  int  fcos;  /* size=3 offset=98*/
  int  hdrcompr;  /* size=1 offset=101*/
  int  oam;  /* size=1 offset=102*/
  int  rsvd_c;  /* size=11 offset=103*/
  int  rdp;  /* size=2 offset=114*/
  int  rcos;  /* size=3 offset=116*/
  int  s;  /* size=1 offset=119*/
  int  ttl;  /* size=8 offset=120*/
} soc_sbx_g3p1_ppe_packet_EERH_ARAD_HG_t;


typedef struct {
  int  ksop;  /* size=8 offset=0*/
  int  et;  /* size=1 offset=8*/
  int  en;  /* size=1 offset=9*/
  int  t;  /* size=1 offset=10*/
  int  mc;  /* size=1 offset=11*/
  int  lenadj;  /* size=4 offset=12*/
  int  oi;  /* size=16 offset=16*/
  int  dest_port;  /* size=7 offset=33*/
  int  sid;  /* size=14 offset=48*/
  int  fdp;  /* size=2 offset=64*/
  int  fcos;  /* size=3 offset=66*/
  int  hdrcompr;  /* size=1 offset=69*/
  int  oam;  /* size=1 offset=70*/
  int  rdp;  /* size=2 offset=82*/
  int  rcos;  /* size=3 offset=84*/
  int  s;  /* size=1 offset=87*/
  int  ttl;  /* size=8 offset=88*/
} soc_sbx_g3p1_ppe_packet_EERH_t;


typedef struct {
  int  ksop;  /* size=8 offset=0*/
} soc_sbx_g3p1_ppe_packet_KBYTE_t;


typedef struct {
  int  w0;  /* size=32 offset=0*/
  int  w1;  /* size=32 offset=32*/
  int  oi;  /* size=16 offset=64*/
  int  sid;  /* size=14 offset=80*/
  int  fdp;  /* size=2 offset=96*/
  int  fcos;  /* size=3 offset=98*/
  int  rdp;  /* size=2 offset=114*/
  int  rcos;  /* size=3 offset=116*/
  int  s;  /* size=1 offset=119*/
  int  ttl;  /* size=8 offset=120*/
} soc_sbx_g3p1_ppe_packet_ITHM_t;


typedef struct {
  int  w0;  /* size=32 offset=0*/
  int  w1;  /* size=32 offset=32*/
  int  oi;  /* size=16 offset=64*/
  int  sid;  /* size=14 offset=80*/
  int  fdp;  /* size=2 offset=96*/
  int  fcos;  /* size=3 offset=98*/
  int  rdp;  /* size=2 offset=114*/
  int  rcos;  /* size=3 offset=116*/
  int  s;  /* size=1 offset=119*/
  int  ttl;  /* size=8 offset=120*/
} soc_sbx_g3p1_ppe_packet_OTMH_t;


typedef struct {
  int  w0;  /* size=32 offset=0*/
  int  w1;  /* size=32 offset=32*/
  int  oi;  /* size=16 offset=64*/
  int  sid;  /* size=14 offset=80*/
  int  fdp;  /* size=2 offset=96*/
  int  fcos;  /* size=3 offset=98*/
  int  rdp;  /* size=2 offset=114*/
  int  rcos;  /* size=3 offset=116*/
  int  s;  /* size=1 offset=119*/
  int  ttl;  /* size=8 offset=120*/
} soc_sbx_g3p1_ppe_packet_TMH_t;


typedef struct {
  int  isid;  /* size=32 offset=0*/
} soc_sbx_g3p1_ppe_packet_MIM_t;


typedef struct {
  int  dmac;  /* size=48 offset=0*/
  int  dmac0;  /* size=8 offset=0*/
  int  dmac1;  /* size=8 offset=8*/
  int  dmac2;  /* size=8 offset=16*/
  int  dmac3;  /* size=8 offset=24*/
  int  dmac4;  /* size=8 offset=32*/
  int  dmac5;  /* size=8 offset=40*/
  int  smac;  /* size=48 offset=48*/
  int  smac0;  /* size=8 offset=48*/
  int  smac1;  /* size=8 offset=56*/
  int  smac2;  /* size=8 offset=64*/
  int  smac3;  /* size=8 offset=72*/
  int  smac4;  /* size=8 offset=80*/
  int  smac5;  /* size=8 offset=88*/
  int  etype;  /* size=16 offset=96*/
} soc_sbx_g3p1_ppe_packet_ETH_ETYPE_t;


typedef struct {
  int  tpidOuter;  /* size=16 offset=0*/
  int  priOuter;  /* size=3 offset=16*/
  int  cfiOuter;  /* size=1 offset=19*/
  int  vidOuter;  /* size=12 offset=20*/
  int  tpidInner;  /* size=16 offset=32*/
  int  priInner;  /* size=3 offset=48*/
  int  cfiInner;  /* size=1 offset=51*/
  int  vidInner;  /* size=12 offset=52*/
} soc_sbx_g3p1_ppe_packet_TWO_VLAN_t;


typedef struct {
  int  private_header;  /* size=32 offset=0*/
} soc_sbx_g3p1_ppe_packet_CUSTOM_t;


typedef struct {
  int  etype;  /* size=16 offset=0*/
  int  label;  /* size=20 offset=16*/
  int  exp;  /* size=3 offset=36*/
  int  s;  /* size=1 offset=39*/
  int  ttl;  /* size=8 offset=40*/
} soc_sbx_g3p1_ppe_packet_ETYPE_MPLS_t;


typedef struct {
  int  etype;  /* size=16 offset=0*/
  int  mpls1_label;  /* size=20 offset=16*/
  int  mpls1_exp;  /* size=3 offset=36*/
  int  mpls1_s;  /* size=1 offset=39*/
  int  mpls1_ttl;  /* size=8 offset=40*/
  int  mpls2_label;  /* size=20 offset=48*/
  int  mpls2_exp;  /* size=3 offset=68*/
  int  mpls2_s;  /* size=1 offset=71*/
  int  mpls2_ttl;  /* size=8 offset=72*/
} soc_sbx_g3p1_ppe_packet_ETYPE_MPLS_MPLS_t;


typedef struct {
  int  mpls1_label;  /* size=20 offset=0*/
  int  mpls1_exp;  /* size=3 offset=20*/
  int  mpls1_s;  /* size=1 offset=23*/
  int  mpls1_ttl;  /* size=8 offset=24*/
  int  mpls2_label;  /* size=20 offset=32*/
  int  mpls2_exp;  /* size=3 offset=52*/
  int  mpls2_s;  /* size=1 offset=55*/
  int  mpls2_ttl;  /* size=8 offset=56*/
} soc_sbx_g3p1_ppe_packet_MPLS_MPLS_t;


typedef struct {
  int  mim_transit;  /* size=1 offset=0*/
  int  lsm;  /* size=1 offset=1*/
  int  numlbls;  /* size=2 offset=2*/
  int  dcn;  /* size=1 offset=4*/
  int  oamen;  /* size=1 offset=5*/
  int  loopback;  /* size=1 offset=6*/
  int  lm_enable;  /* size=1 offset=7*/
  int  dm_enable;  /* size=1 offset=8*/
  int  vrrp;  /* size=1 offset=9*/
  int  mpls_ttl_expiry;  /* size=1 offset=10*/
  int  mplstp_loop;  /* size=1 offset=11*/
  int  pwe_ping;  /* size=1 offset=12*/
  int  pwe_y1731;  /* size=1 offset=13*/
  int  pwe_psc;  /* size=1 offset=14*/
  int  bfd;  /* size=1 offset=15*/
  int  gal;  /* size=1 offset=16*/
  int  traffictype;  /* size=3 offset=17*/
  int  l2cp;  /* size=1 offset=20*/
  int  l2cpslow;  /* size=1 offset=21*/
  int  pim;  /* size=1 offset=22*/
  int  igmp;  /* size=1 offset=23*/
  int  oamloop;  /* size=1 offset=24*/
} soc_sbx_g3p1_ppe_variable_ing_ppevar_t;


typedef struct {
  int  pm_enable;  /* size=1 offset=0*/
  int  lsm;  /* size=1 offset=1*/
  int  loopback;  /* size=1 offset=2*/
  int  pwe_y1731;  /* size=1 offset=3*/
  int  mc;  /* size=1 offset=4*/
} soc_sbx_g3p1_ppe_variable_egr_ppevar_t;


typedef struct {
  int  portid;  /* size=8 offset=0*/
  int  state_num;  /* size=8 offset=8*/
  int  lsmmatch;  /* size=1 offset=16*/
  int  ipv4mc;  /* size=1 offset=17*/
  int  pbb;  /* size=1 offset=18*/
  int  twintpid;  /* size=1 offset=19*/
  int  tpid;  /* size=1 offset=20*/
  int  oamloop;  /* size=1 offset=21*/
  int  provider;  /* size=1 offset=22*/
  int  customer;  /* size=1 offset=23*/
  int  property_data;  /* size=8 offset=24*/
} soc_sbx_g3p1_ppe_cam_state_mask_parse_state_t;


typedef struct {
  int  portid;  /* size=8 offset=0*/
  int  state_num;  /* size=8 offset=8*/
  int  lsmmatch;  /* size=1 offset=16*/
  int  ipv4mc;  /* size=1 offset=17*/
  int  pbb;  /* size=1 offset=18*/
  int  twintpid;  /* size=1 offset=19*/
  int  tpid;  /* size=1 offset=20*/
  int  oamloop;  /* size=1 offset=21*/
  int  provider;  /* size=1 offset=22*/
  int  customer;  /* size=1 offset=23*/
  int  hdrtype;  /* size=8 offset=24*/
} soc_sbx_g3p1_ppe_cam_state_mask_initial_queue_state_t;


typedef struct {
  int  tpid;  /* size=16 offset=0*/
} soc_sbx_g3p1_ppe_cam_state_mask_tpid_state_t;


typedef struct {
  int  valid;  /* size=1 offset=0*/
} soc_sbx_g3p1_ppe_cam_state_mask_oam_state_t;


typedef struct {
  int  portid;  /* size=6 offset=0*/
  int  useport;  /* size=1 offset=6*/
  int  mac;  /* size=48 offset=7*/
} soc_sbx_g3p1_ppe_cam_state_mask_lsmac_state_t;


typedef struct {
  int  portid;  /* size=6 offset=0*/
  int  useport;  /* size=1 offset=6*/
  int  mac;  /* size=48 offset=7*/
} soc_sbx_g3p1_ppe_cam_state_mask_elsmac_state_t;












#define SOC_SBX_G3P1_PPE_HASHT_hVLAN_PRI 0
#define SOC_SBX_G3P1_PPE_HASHT_hETH_MAC 4
#define SOC_SBX_G3P1_PPE_HASHT_hETH_DMAC 5
#define SOC_SBX_G3P1_PPE_HASHT_hETH_SMAC 6
#define SOC_SBX_G3P1_PPE_HASHT_hETH_DMAC_IPV4 7
#define SOC_SBX_G3P1_PPE_HASHT_hVLAN_VID_TWO 8
#define SOC_SBX_G3P1_PPE_HASHT_hVLAN_VID 9
#define SOC_SBX_G3P1_PPE_HASHT_hVLAN_VID_C 10
#define SOC_SBX_G3P1_PPE_HASHT_hIPV4 11
#define SOC_SBX_G3P1_PPE_HASHT_hIPV4_DA 12
#define SOC_SBX_G3P1_PPE_HASHT_hIPV4_SA 13
#define SOC_SBX_G3P1_PPE_HASHT_hIPV6 14
#define SOC_SBX_G3P1_PPE_HASHT_hIPV6_DA 15
#define SOC_SBX_G3P1_PPE_HASHT_hIPV6_SA 16
#define SOC_SBX_G3P1_PPE_HASHT_hL4_PORT 17
#define SOC_SBX_G3P1_PPE_HASHT_hL4_DPORT 18
#define SOC_SBX_G3P1_PPE_HASHT_hL4_SPORT 19



#endif /* BCM_CALADAN3_G3P1_SUPPORT */
#endif /* _SB_G3P1_FE_PP_RULE_ENCODE_H_ */
