/**
 *
 * $Id: cmu_diags_h.stg,v 1.4 Broadcom SDK $   
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 *
 * g3p1_cmu_diags.h: Guadalupe2k V1.3 microcode diagnostics routines 
 *
 * This file provides the public interface to the Guadalupe2k V1.3
 * microcode.  Only explicitly documented elements (types  & functions)
 * are supported, external interfaces.  Other elements are exported only
 * for debugging convenience.
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef _G3P1_CMU_DIAGS_H_
#define _G3P1_CMU_DIAGS_H_

#if defined(BCM_CALADAN3_SUPPORT) && defined(BCM_CALADAN3_G3P1_SUPPORT) 
#include <sal/types.h>
#include <soc/sbx/g3p1/g3p1_defs.h>
#include <soc/sbx/g3p1/g3p1_cmu.h>

/**
 * Print pdctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_pdctr_print(int unit, uint32 start_counter, uint32 num_counters);

/**
 * Reset pdctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_pdctr_reset(int unit);


/**
 * Print rtctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_rtctr_print(int unit, uint32 start_counter, uint32 num_counters);

/**
 * Reset rtctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_rtctr_reset(int unit);


/**
 * Print ertctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_ertctr_print(int unit, uint32 start_counter, uint32 num_counters);

/**
 * Reset ertctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_ertctr_reset(int unit);


/**
 * Print excctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_excctr_print(int unit, uint32 start_counter, uint32 num_counters);

/**
 * Reset excctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_excctr_reset(int unit);


/**
 * Print ingctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_ingctr_print(int unit, uint32 start_counter, uint32 num_counters);

/**
 * Reset ingctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_ingctr_reset(int unit);


/**
 * Print egrctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_egrctr_print(int unit, uint32 start_counter, uint32 num_counters);

/**
 * Reset egrctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_egrctr_reset(int unit);


/**
 * Print sample_simple32ctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_sample_simple32ctr_print(int unit, uint32 start_counter, uint32 num_counters);

/**
 * Reset sample_simple32ctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_sample_simple32ctr_reset(int unit);


/**
 * Print sample_simple64ctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_sample_simple64ctr_print(int unit, uint32 start_counter, uint32 num_counters);

/**
 * Reset sample_simple64ctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_sample_simple64ctr_reset(int unit);


/**
 * Print sample_turbo32ctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_sample_turbo32ctr_print(int unit, uint32 start_counter, uint32 num_counters);

/**
 * Reset sample_turbo32ctr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_sample_turbo32ctr_reset(int unit);


/**
 * Print sample_cmurangectr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_sample_cmurangectr_print(int unit, uint32 start_counter, uint32 num_counters);

/**
 * Reset sample_cmurangectr.
 *
 * @param[in]  unit chip unit number
 */
extern void soc_sbx_g3p1_sample_cmurangectr_reset(int unit);



extern int soc_sbx_g3p1_cmu_shell_print(int unit, int argc, char **argv);

extern int soc_sbx_g3p1_cmu_shell_reset(int unit, int argc, char **argv);
        
/** Diagnostic shell set operation usage message */
extern char soc_sbx_g3p1_cmu_reset_usage[];
/** Diagnostic shell print operation usage message */
extern char soc_sbx_g3p1_cmu_get_usage[];

#endif
#endif
