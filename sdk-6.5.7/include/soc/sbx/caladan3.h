/*
 * $Id: caladan3.h,v 1.21.22.4 Broadcom SDK $
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 *
 * Caladan3 (BCM88030) SOC Initialization
 */
#ifndef _CALADAN3_H
#define _CALADAN3_H
#include <soc/sbx/sbx_drv.h>
#include <soc/cmtypes.h>

#include <bcm/types.h>
#include <bcm/error.h>

#define SB_G3P1_FE_CTPID_INDEX    0
#define SB_G3P1_FE_STPID0_INDEX   1
#define SB_G3P1_FE_STPID1_INDEX   2
#define C3_ESMAC_NOT_SUPPORTED    0

#define L2_AGE_CYCLES_INTERVAL_DEFAULT  1

/* 0xff -> dmac byte...and 0xf is sub types */
#define L2CACHE_MAX_L2CP_IDX (SBX_MAX_PORTS * ((0xff +1) + (0xf + 1)))

/* first half is for L2CP entries, second half is for non-L2CP entries
 * that are used to create encap_ids (remote tunneling, encap sharing etc...)
 */
#define L2CACHE_MAX_IDX_DEFAULT (2 * L2CACHE_MAX_L2CP_IDX)


typedef uint8 soc_sbx_g3p1_16_byte_t[16]; 

/* NEED AUTOGENERATED STRUCTURES */
#if C3_ESMAC_NOT_SUPPORTED
typedef struct soc_sbx_g3p1_esmac_s {
    /** SMAC byte 5 */
    uint32 smac5;
    /** SMAC byte 4 */
    uint32 smac4;
    /** SMAC byte 3 */
    uint32 smac3;
    /** SMAC byte 2 */
    uint32 smac2;
    /** SMAC byte 1 */
    uint32 smac1;
    /** SMAC byte 0 */
    uint32 smac0;
} soc_sbx_g3p1_esmac_t;
#endif
/* END AUTO-GEN */

extern int
soc_sbx_caladan3_init(int unit, soc_sbx_config_t *cfg);

extern int
soc_sbx_caladan3_detach(int unit);

extern void
soc_sbx_caladan3_isr(void *_unit);

extern int
soc_sbx_caladan3_port_info_config(int unit);

extern void
soc_sbx_caladan3_cmu_ring_processing_wakeup(void *unit_vp, 
                                            void *d1, void *d2, 
                                            void *d3, void *d4);

extern void
soc_sbx_caladan3_cop_ring_processing_wakeup(void *unit_vp,
					    void *d1, void *d2,
					    void *d3, void *d4);
extern void
soc_sbx_caladan3_sbusdma_cmc_ch_map(int unit,
				    soc_mem_t mem,
				    uint32 op,
				    int *cmc,
				    int *ch);

extern int
soc_sbx_caladan3_sbusdma_cmc_ch_type_get(int unit,
					 int cmc,
					 int ch,
					 uint32 *op);

extern void soc_sbx_caladan3_tmu_isr(void *unit_vp,
                                     void *d1, void *d2,
                                     void *d3, void *d4);

extern void soc_sbx_caladan3_tmu_qe_isr(void *unit_vp,
                              void *intr_val, void *d2,
                              void *d3, void *d4);

extern void soc_sbx_caladan3_ocm_isr(void *unit_vp,
                                     void *d1, void *d2,
                                     void *d3, void *d4);

extern void soc_sbx_caladan3_lr_isr(void *unit_vp,
                                     void *d1, void *d2,
                                     void *d3, void *d4);

extern void soc_sbx_caladan3_lrb_isr(void *unit_vp,
                                     void *d1, void *d2,
                                     void *d3, void *d4);

extern 
int soc_sbx_caladan3_temperature_monitor(int unit, int samples, int format, int celsius);

extern 
int soc_sbx_caladan3_temperature_monitor_init(int unit);

extern 
int soc_sbx_caladan3_process_monitor(int unit, int samples);

extern 
int soc_sbx_caladan3_process_monitor_init(int unit, int nmos);

extern
int soc_sbx_caladan3_il_interface_init(int unit, int ifnum, int num_lanes);

int
soc_sbx_caladan3_il_intf_status_get(int unit, int port, int *intf_status, int *lane_status);

int
soc_sbx_caladan3_il_get_lane_status(int unit, int ifnum, int *status);

int
soc_sbx_caladan3_il_get_lanes(int unit, int ifnum, int *nlanes);

int
soc_sbx_caladan3_il_hcfc_init(int unit, int ifnum);



/* C3 block Interrupt bit position */
#define C3_RSV1_INTR_POS  63
#define SOC_SBX_CALADAN3_RSV0_INTR_POS  62
#define SOC_SBX_CALADAN3_QE0_INTR_POS   61
#define SOC_SBX_CALADAN3_QE1_INTR_POS   60
#define SOC_SBX_CALADAN3_QE2_INTR_POS   59
#define SOC_SBX_CALADAN3_QE3_INTR_POS   58
#define SOC_SBX_CALADAN3_QE4_INTR_POS   57
#define SOC_SBX_CALADAN3_QE5_INTR_POS   56
#define SOC_SBX_CALADAN3_QE6_INTR_POS   55
#define SOC_SBX_CALADAN3_QE7_INTR_POS   54
#define SOC_SBX_CALADAN3_QE8_INTR_POS   53
#define SOC_SBX_CALADAN3_QE9_INTR_POS   52
#define SOC_SBX_CALADAN3_QE10_INTR_POS  51
#define SOC_SBX_CALADAN3_QE11_INTR_POS  50
#define SOC_SBX_CALADAN3_QE12_INTR_POS  49
#define SOC_SBX_CALADAN3_QE13_INTR_POS  48
#define SOC_SBX_CALADAN3_QE14_INTR_POS  47
#define SOC_SBX_CALADAN3_QE15_INTR_POS  46
#define SOC_SBX_CALADAN3_CI0_INTR_POS   45
#define SOC_SBX_CALADAN3_CI1_INTR_POS   44
#define SOC_SBX_CALADAN3_CI2_INTR_POS   43
#define SOC_SBX_CALADAN3_CI3_INTR_POS   42
#define SOC_SBX_CALADAN3_CI4_INTR_POS   41
#define SOC_SBX_CALADAN3_CI5_INTR_POS   40
#define SOC_SBX_CALADAN3_CI6_INTR_POS   39
#define SOC_SBX_CALADAN3_CI7_INTR_POS   38
#define SOC_SBX_CALADAN3_CI8_INTR_POS   37
#define SOC_SBX_CALADAN3_CI9_INTR_POS   36
#define SOC_SBX_CALADAN3_CI10_INTR_POS  35
#define SOC_SBX_CALADAN3_CI11_INTR_POS  34
#define SOC_SBX_CALADAN3_CI12_INTR_POS  33
#define SOC_SBX_CALADAN3_CI13_INTR_POS  32
#define SOC_SBX_CALADAN3_CI14_INTR_POS  31
#define SOC_SBX_CALADAN3_CI15_INTR_POS  30
#define SOC_SBX_CALADAN3_CL0_INTR_POS   29
#define SOC_SBX_CALADAN3_CL1_INTR_POS   28
#define SOC_SBX_CALADAN3_CM_INTR_POS    27
#define SOC_SBX_CALADAN3_CO0_INTR_POS   26
#define SOC_SBX_CALADAN3_CO1_INTR_POS   25
#define SOC_SBX_CALADAN3_CX_INTR_POS    24
#define SOC_SBX_CALADAN3_ET_INTR_POS    23
#define SOC_SBX_CALADAN3_ETW_INTR_POS   22
#define SOC_SBX_CALADAN3_IL0_INTR_POS   21
#define SOC_SBX_CALADAN3_IL1_INTR_POS   20
#define SOC_SBX_CALADAN3_LRA_INTR_POS   19
#define SOC_SBX_CALADAN3_LRB_INTR_POS   18
#define SOC_SBX_CALADAN3_OC_INTR_POS    17
#define SOC_SBX_CALADAN3_PB_INTR_POS    16
#define SOC_SBX_CALADAN3_PD_INTR_POS    15
#define SOC_SBX_CALADAN3_PP_INTR_POS    14
#define SOC_SBX_CALADAN3_PR0_INTR_POS   13
#define SOC_SBX_CALADAN3_PR1_INTR_POS   12
#define SOC_SBX_CALADAN3_PT0_INTR_POS   11
#define SOC_SBX_CALADAN3_PT1_INTR_POS   10
#define SOC_SBX_CALADAN3_QM_INTR_POS    9
#define SOC_SBX_CALADAN3_RC_INTR_POS    8
#define SOC_SBX_CALADAN3_TMA_INTR_POS   7
#define SOC_SBX_CALADAN3_TMB_INTR_POS   6
#define SOC_SBX_CALADAN3_TP0_INTR_POS   5
#define SOC_SBX_CALADAN3_TP1_INTR_POS   4
#define SOC_SBX_CALADAN3_XL_INTR_POS    3
#define SOC_SBX_CALADAN3_XT0_INTR_POS   2
#define SOC_SBX_CALADAN3_XT1_INTR_POS   1
#define SOC_SBX_CALADAN3_XT2_INTR_POS   0

#ifndef _SOC_TRIUMPH3_H_
extern int wcmod_esm_serdes_init(int unit);
extern int wcmod_esm_serdes_control_get(int unit, int lane, soc_phy_control_t type, uint32 *value);
extern int wcmod_esm_serdes_control_set(int unit, int lane, soc_phy_control_t type, uint32 *value);
extern int wcmod_esm_serdes_decouple_prbs_set(int unit, int lane, int tx, int rx, int poly, int invert);
#endif

/*
 * Function
 *   soc_sbx_caladan3_ilkn_12p5_ghz_pll_config
 * Purpose
 *   Override the PLL for IL and SWS to push the ilkn operate at 12.5G
 *   The SWS is pushed to 650Mhz
 *   The MAC is retained at 412.5Mhz (shares pll with ilkn)
 *   ILKN is pushed to 721.875Mhz
 *   Warning changing PLLs affect system functionality and may
 *           lead to severe issues
 */
int
soc_sbx_caladan3_ilkn_12p5_ghz_pll_config(int unit, int enable);


#endif /* _CALADAN3_H */

