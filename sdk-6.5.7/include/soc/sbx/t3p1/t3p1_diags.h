/**
 * $Id: ocm_diags_h.stg,v 1.4 Broadcom SDK $ 
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 *
 * t3p1_diags.h: Guadalupe2k V1.3 microcode diagnostics routines 
 *
 * This file provides the public interface to the Guadalupe2k V1.3
 * microcode.  Only explicitly documented elements (types  & functions)
 * are supported, external interfaces.  Other elements are exported only
 * for debugging convenience.
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */


#ifndef _T3P1_DIAGS_H
#define _T3P1_DIAGS_H
#if defined(BCM_CALADAN3_SUPPORT) && defined(BCM_CALADAN3_T3P1_SUPPORT) 
#include <sal/types.h>
#include <soc/sbx/t3p1/t3p1_defs.h>

/*
 * Diag shell print routine for Constants
 */
int soc_sbx_t3p1_constant_shell_print(int unit, int cid);

/*
 * Diag shell print routine for Globals
 */
int soc_sbx_t3p1_global_shell_print(int unit, int gid);


/**
 * Print lag entry.
 *
 * @param[in]  unit chip unit number
 * @param[in]  e entry parameters
 */
extern void soc_sbx_t3p1_lag_print(int unit, soc_sbx_t3p1_lag_t *e);

/**
 * Print vlan entry.
 *
 * @param[in]  unit chip unit number
 * @param[in]  e entry parameters
 */
extern void soc_sbx_t3p1_vlan_print(int unit, soc_sbx_t3p1_vlan_t *e);

/**
 * Print irt entry.
 *
 * @param[in]  unit chip unit number
 * @param[in]  e entry parameters
 */
extern void soc_sbx_t3p1_irt_print(int unit, soc_sbx_t3p1_irt_t *e);

/**
 * Print oam_bubble entry.
 *
 * @param[in]  unit chip unit number
 * @param[in]  e entry parameters
 */
extern void soc_sbx_t3p1_oam_bubble_print(int unit, soc_sbx_t3p1_oam_bubble_t *e);

/**
 * Print demoage entry.
 *
 * @param[in]  unit chip unit number
 * @param[in]  e entry parameters
 */
extern void soc_sbx_t3p1_demoage_print(int unit, soc_sbx_t3p1_demoage_t *e);

/**
 * Print demoageid entry.
 *
 * @param[in]  unit chip unit number
 * @param[in]  e entry parameters
 */
extern void soc_sbx_t3p1_demoageid_print(int unit, soc_sbx_t3p1_demoageid_t *e);




/*
 * Diag shell print & set drivers
 */

/**
 * Diagnostic shell print.
 *
 * This function drives printing the state of microcode objects
 * (constants, globals, entries, memories and the memory map) based
 * on the supplied command line arguments.
 *
 * @param[in]  unit chip unit number
 * @param[in]  argc number of argument strings
 * @param[in]  argv pointer to array of argument strings
 */
extern int soc_sbx_t3p1_shell_print(int unit, int argc, char **argv);

/**
 * Diagnostic shell set.
 *
 * This function drives setting the state of microcode objects
 * (globals, entries, and memories) based
 * on the supplied command line arguments.
 *
 * @param[in]  unit chip unit number
 * @param[in]  argc number of argument strings
 * @param[in]  argv pointer to array of argument strings
 */
extern int soc_sbx_t3p1_shell_set(int unit, int argc, char **argv);

/**
 * Diagnostic shell delete.
 *
 * This function drives deleting microcode entries that support a 
 * delete operation based on the supplied command line arguments.
 *
 * @param[in]  unit chip unit number
 * @param[in]  argc number of argument strings
 * @param[in]  argv pointer to array of argument strings
 */
extern int soc_sbx_t3p1_shell_delete(int unit, int argc, char **argv);

/**
 * Diagnostic shell global print.
 *
 * This function drives printing the state of microcode global objects
 * based on the supplied command line arguments.
 *
 * @param[in]  unit chip unit number
 * @param[in]  argc number of argument strings
 * @param[in]  argv pointer to array of argument strings
 */
extern int soc_sbx_t3p1_shell_print_globals(int unit, int argc, char **argv);

/**
 * Diagnostic shell global set.
 *
 * This function drives setting the state of microcode global objects
 * based on the supplied command line arguments.
 *
 * @param[in]  unit chip unit number
 * @param[in]  argc number of argument strings
 * @param[in]  argv pointer to array of argument strings
 */
extern int soc_sbx_t3p1_shell_set_globals(int unit, int argc, char **argv);

/**
 * Diagnostic shell memory print.
 *
 * This function drives printing the state of microcode 
 * memories based on the supplied command line arguments.
 *
 * @param[in]  unit chip unit number
 * @param[in]  argc number of argument strings
 * @param[in]  argv pointer to array of argument strings
 */
extern int soc_sbx_t3p1_shell_print_memories(int unit, int argc, char **argv);

/**
 * Diagnostic shell memory set.
 *
 * This function drives setting the state of microcode memories 
 * based on the supplied command line arguments.
 *
 * @param[in]  unit chip unit number
 * @param[in]  argc number of argument strings
 * @param[in]  argv pointer to array of argument strings
 */
extern int soc_sbx_t3p1_shell_set_memories(int unit, int argc, char **argv);

/**
 * Diagnostic shell constant print.
 *
 * This function drives printing the state of microcode constant objects
 *
 * @param[in]  unit chip unit number
 * @param[in]  argc number of argument strings
 * @param[in]  argv pointer to array of argument strings
 */
extern int soc_sbx_t3p1_shell_print_constants(int unit, int argc, char **argv);


/*
 * Diag shell usage messages
 */

/** Diagnostic shell set operation usage message */
extern char soc_sbx_t3p1_set_usage[];
/** Diagnostic shell print operation usage message */
extern char soc_sbx_t3p1_get_usage[];
/** Diagnostic shell delete operation usage message */
extern char soc_sbx_t3p1_delete_usage[];
/** Diagnostic shell constant operation usage message */
extern char soc_sbx_t3p1_constant_usage[];
/** Diagnostic shell global set operation usage message */
extern char soc_sbx_t3p1_global_set_usage[];
/** Diagnostic shell global get operation usage message */
extern char soc_sbx_t3p1_global_get_usage[];
/** Diagnostic shell mem set operation usage message */
extern char soc_sbx_t3p1_mem_get_usage[];
/** Diagnostic shell mem get operation usage message */
extern char soc_sbx_t3p1_mem_set_usage[];

#endif
#endif
