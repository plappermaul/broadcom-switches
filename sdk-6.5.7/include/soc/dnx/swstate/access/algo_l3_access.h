/* $Id: $
 * 
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef _SHR_ALGO_L3_ACCESS_H_
#define _SHR_ALGO_L3_ACCESS_H_

#ifdef BCM_DNX_SUPPORT
#include <soc/dnx/swstate/types/algo_l3_types.h>
#include <soc/dnx/swstate/sw_state_defs.h>

/********************************* access calbacks definitions ***************************************/
/* this set of callbacks, are the callbacks used in the access calbacks struct '<module_name>_cbs_t' */
/*  to access the data in 'sw_state_t'.                                                              */
/* the calbacks are inserted into the access struct by '<module_name>_access_init'.                  */
/*****************************************************************************************************/

/* implemented by: algo_l3_db_init */
typedef int (*algo_l3_db_init_cb)(
    int unit);

/* implemented by: algo_l3_db_is_init */
typedef int (*algo_l3_db_is_init_cb)(
    int unit, uint8 *is_init);

/* implemented by: algo_l3_db_deinit */
typedef int (*algo_l3_db_deinit_cb)(
    int unit);

/* implemented by: algo_l3_db_source_address_table_allocation_set */
typedef int (*algo_l3_db_source_address_table_allocation_set_cb)(
    int unit, CONST source_address_table_allocation_t *source_address_table_allocation);

/* implemented by: algo_l3_db_source_address_table_allocation_get */
typedef int (*algo_l3_db_source_address_table_allocation_get_cb)(
    int unit, source_address_table_allocation_t *source_address_table_allocation);

/* implemented by: algo_l3_db_source_address_table_allocation_res_tag_bitmap_handle_set */
typedef int (*algo_l3_db_source_address_table_allocation_res_tag_bitmap_handle_set_cb)(
    int unit, sw_state_res_tag_bitmap_handle_t res_tag_bitmap_handle);

/* implemented by: algo_l3_db_source_address_table_allocation_res_tag_bitmap_handle_get */
typedef int (*algo_l3_db_source_address_table_allocation_res_tag_bitmap_handle_get_cb)(
    int unit, sw_state_res_tag_bitmap_handle_t *res_tag_bitmap_handle);

/*********************************** access calbacks struct ****************************************/
/* this set of structs, rooted at 'sw_state_cbs_t' define the access layer for the entire SW state.*/
/* use this tree to alloc/free/set/get fields in the sw state rooted at 'sw_state_t'.              */
/* NOTE: 'sw_state_t' data should not be accessed directly.                                        */
/***************************************************************************************************/

typedef struct algo_l3_db_source_address_table_allocation_res_tag_bitmap_handle_cbs_s {
    algo_l3_db_source_address_table_allocation_res_tag_bitmap_handle_set_cb set;
    algo_l3_db_source_address_table_allocation_res_tag_bitmap_handle_get_cb get;
} algo_l3_db_source_address_table_allocation_res_tag_bitmap_handle_cbs_t;

typedef struct algo_l3_db_source_address_table_allocation_cbs_s {
    algo_l3_db_source_address_table_allocation_set_cb set;
    algo_l3_db_source_address_table_allocation_get_cb get;
    algo_l3_db_source_address_table_allocation_res_tag_bitmap_handle_cbs_t res_tag_bitmap_handle;
} algo_l3_db_source_address_table_allocation_cbs_t;

typedef struct algo_l3_db_cbs_s {
    algo_l3_db_is_init_cb is_init;
    algo_l3_db_init_cb init;
    algo_l3_db_deinit_cb deinit;
    algo_l3_db_source_address_table_allocation_cbs_t source_address_table_allocation;
} algo_l3_db_cbs_t;

/*   @..@                                                          */
/*  (----)                                                         */
/* ( >__< )  This is the entry point to algo_l3_dbaccess functions */
/* ^^ ~~ ^^                                                        */
extern algo_l3_db_cbs_t algo_l3_db;


int algo_l3_access_is_init(int unit, uint8 *is_init);
int algo_l3_access_init(int unit);
int algo_l3_access_deinit(int unit);

#endif /* BCM_DNX_SUPPORT*/ 

#endif /* _SHR_ALGO_L3_ACCESS_H_ */
