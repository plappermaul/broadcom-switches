/** \file dnx_data_property.h
 * 
 * MODULE DATA CUSTOME PROPRTY - 
 * Includes all custom functions signatures
 * 
 * Device Data
 * SW component that maintains per device data
 * The data is static and won't be changed after device initialization.
 *     
 * Supported data types:
 *     - Define             - a 'uint32' number (a max value for all devices is maintained)
 *     - feature            - 1 bit per each feature (supported/not supported) - support soc properties 
 *     - table              - the data is accessed with keys and/or can maintain multiple values and/or set by soc property
 *     - numeric            - a 'uint32' number that support soc properties
 * 
 * User interface for DNX DATA component can be found in "dnx_data_if.h" and "dnx_data_if_#module#.h"
 * 
 * Adding the data is done via XMLs placed in "tools/autocoder/DeviceData/dnx/.." 
 * "How to" User Guide can be found in confluence. 
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNX_DATA_PROPERTY_H_
/*{*/
#define _DNX_DATA_PROPERTY_H_
/*
 * INCLUDE FILES:
 * {
 */
#include <soc/dnx/dnx_data/dnx_data.h>
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * MODULE: PORT:
 * {
 */
/*
 * submodule general
 */
/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'port', Submodule - 'general', table - 'ucode_port'
 * static port configuration
 * 
 * \par DIRECT INPUT:
 *   \param [in] unit - Unit #
 *   \param [in] port - logical port
 * \par INDIRECT INPUT:
 *   * None
 * \par DIRECT OUTPUT:
 *     err - See shr_error_e
 * \par INDIRECT OUTPUT:
 *   \param [out] ucode_port - data type already set to default and should be modified according to property
 * \remark
 *   * None
 * \see
 *   * None
 */
shr_error_e dnx_data_property_port_general_ucode_port_read(
    int unit,
    int port,
    dnx_data_port_general_ucode_port_t *ucode_port);

/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'port', Submodule - 'general', data - 'fabric_port_base'
 * first fabric logical port
 * 
 * \par DIRECT INPUT:
 *   \param [in] unit - Unit #
 * \par INDIRECT INPUT:
 *   * None
 * \par DIRECT OUTPUT:
 *     err - see shr_error_e
 * \par INDIRECT OUTPUT:
 *   \param [out] fabric_port_base - data already set to default and should be modifeid according to property
 * \remark
 *   * None
 * \see
 *   * None
 */
shr_error_e dnx_data_property_port_general_fabric_port_base_read(
    int unit,
    uint32 *fabric_port_base);

/*
 * }
 */

/*
 * MODULE: CMODEL:
 * {
 */
/*
 * submodule tx
 */
/*
 * }
 */

/*
 * MODULE: CRPS:
 * {
 */
/*
 * submodule crps_engines
 */
/*
 * submodule eviction
 */
/*
 * }
 */

/*
 * MODULE: DEVICE:
 * {
 */
/*
 * submodule general
 */
/*
 * }
 */

/*
 * MODULE: FABRIC:
 * {
 */
/*
 * submodule links
 */
/*
 * submodule thresholds
 */
/*
 * submodule cell
 */
/*
 * submodule pipes
 */
/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'fabric', Submodule - 'pipes', table - 'map'
 * map traffic cast X priority to fabric pipe
 * 
 * \par DIRECT INPUT:
 *   \param [in] unit - Unit #
 * \par INDIRECT INPUT:
 *   * None
 * \par DIRECT OUTPUT:
 *     err - See shr_error_e
 * \par INDIRECT OUTPUT:
 *   \param [out] map - data type already set to default and should be modified according to property
 * \remark
 *   * None
 * \see
 *   * None
 */
shr_error_e dnx_data_property_fabric_pipes_map_read(
    int unit,
    dnx_data_fabric_pipes_map_t *map);

/*
 * }
 */

/*
 * MODULE: L2:
 * {
 */
/*
 * submodule vsi
 */
/*
 * }
 */

/*
 * MODULE: L3:
 * {
 */
/*
 * submodule fec
 */
/*
 * submodule source_address
 */
/*
 * }
 */

/*
 * MODULE: LIF:
 * {
 */
/*
 * submodule global_lif
 */
/*
 * submodule in_lif
 */
/*
 * submodule out_lif
 */
/*
 * }
 */

/*
 * MODULE: MODULE_TESTING:
 * {
 */
/*
 * submodule unsupported
 */
/*
 * submodule types
 */
/*
 * submodule property_methods
 */
/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'module_testing', Submodule - 'property_methods', table - 'custom'
 * test prop custom method types
 * 
 * \par DIRECT INPUT:
 *   \param [in] unit - Unit #
 *   \param [in] link - link id
 *   \param [in] pipe - pipe id
 * \par INDIRECT INPUT:
 *   * None
 * \par DIRECT OUTPUT:
 *     err - See shr_error_e
 * \par INDIRECT OUTPUT:
 *   \param [out] custom - data type already set to default and should be modified according to property
 * \remark
 *   * None
 * \see
 *   * None
 */
shr_error_e dnx_data_property_module_testing_property_methods_custom_read(
    int unit,
    int link,
    int pipe,
    dnx_data_module_testing_property_methods_custom_t *custom);

/*
 * submodule dbal
 */
/*
 * }
 */

/*
 * MODULE: NIF:
 * {
 */
/*
 * }
 */

/*
 * MODULE: SNIF:
 * {
 */
/*
 * submodule ingress
 */
/*
 * }
 */

/*}*/
#else     /*DNX_DATA_PROPERTY_H_*/
/*{*/
#ifndef DNX_DATA_INTERNAL
/*{*/
#error "dnx_data_property file might include any header files, therfore header files must not include it.\nAny include to dnx_data_property must be from 'c' file"
/*}*/
#endif /*DNX_DATA_INTERNAL*/
/*}*/
#endif /*_DNX_DATA_PROPERTY_H_*/
/* *INDENT-ON* */
