/** \file dbal_defines_fields.h
 * Logical DB enums \n 
 * DO NOT EDIT THIS FILE!\n 
 * This file is auto-generated.\n 
 * Edits to this file will be lost when it is regenerated.\n 
 * \n 
 * Extracted from xmls: \n 
 * pemla_fields.xml\n 
 * fields_definition.xml\n 
 */
/*
 * $Id: $
 $Copyright: (c) 2016 Broadcom.
 Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 */
#ifndef DBAL_DEFINES_FIELDS_H_INCLUDED
/*
 * {
 */
#define DBAL_DEFINES_FIELDS_H_INCLUDED

#define DBAL_FIELDS_NOF_OPEN_XMLS (2)

#define DBAL_NUM_OF_FIELD_INSTANCES (20)

/*
 * }
 */
/**
 * \brief enum for logical tables\n 
 */
typedef enum
{
    DBAL_FIELD_EMPTY,
    /** An action to perform  */
    DBAL_FIELD_ACCEPTABLE_FRAME_TYPE_ACTION,
    DBAL_FIELD_ACTION_PROFILE,
    /** In-LIF Action Profile index  */
    DBAL_FIELD_ACTION_PROFILE_INDEX,
    /** PP admit profile  */
    DBAL_FIELD_ADMIT_PROFILE,
    /** PP admit profile overwrite  */
    DBAL_FIELD_ADMIT_PROFILE_OW,
    DBAL_FIELD_AGING,
    /** Empty  */
    DBAL_FIELD_BFIR_ID,
    /** Empty  */
    DBAL_FIELD_BIER_BIT_STRING_LENGTH,
    /** Empty  */
    DBAL_FIELD_BIER_FODO,
    /** Empty  */
    DBAL_FIELD_BIER_SI,
    /** Empty  */
    DBAL_FIELD_BIER_SUB_DOMAIN,
    /** Enable compatible MC.  */
    DBAL_FIELD_COMPATIBLE_MC_ENABLE,
    /** The context that is used.  */
    DBAL_FIELD_CONTEXT_PROFILE,
    /** Device Core-ID, special field used for access according to core mode  */
    DBAL_FIELD_CORE_ID,
    /** counter ID  */
    DBAL_FIELD_COUNTER,
    /** If set, only first 256B are used for the copy, otherwise all the packet is replicated  */
    DBAL_FIELD_CROP_ENABLE = DBAL_FIELD_COUNTER + DBAL_NUM_OF_FIELD_INSTANCES,
    /** define the first stat index of the engine.  */
    DBAL_FIELD_CRPS_ENGINE_ADDRESS_BASE_NORMALIZE,
    /** counter format. what it count, the frmat and the arithmetic operation it does  */
    DBAL_FIELD_CRPS_ENGINE_COUNTER_FORMAT,
    /** select which engine to use (0 or 1)  */
    DBAL_FIELD_CRPS_ENGINE_DMA_SELECT,
    /** after read a counter, reset to value 0 or 1  */
    DBAL_FIELD_CRPS_ENGINE_ENABLE_CLEAR_ON_READ,
    /** counter set size  */
    DBAL_FIELD_CRPS_ENGINE_GROUP_SIZE,
    /** CRPS engine id  */
    DBAL_FIELD_CRPS_ENGINE_ID,
    /** init counters memory per engine and all other memories belong the engine  */
    DBAL_FIELD_CRPS_ENGINE_INIT_REQUEST,
    /** Algorithm and sequential sampling intervals. Clock resolution  */
    DBAL_FIELD_CRPS_ENGINE_N_SCAN_WAIT_TIME_BETWEEN_ALG_SCANS,
    /** Enable CRPS ALU (access to CRPS memories)  */
    DBAL_FIELD_CRPS_ENGINE_PIPE_ENABLE,
    /** offset to reduce from the stat-object-id  */
    DBAL_FIELD_CRPS_ENGINE_PTR_BASE_NORMALIZE,
    /** enable "clear after read" on the counter   */
    DBAL_FIELD_CRPS_ENGINE_SCAN_CLEAR_ON_READ_ENABLE,
    /** select if the record for DMA FIFO is physical or logical. (record time is in another field)  */
    DBAL_FIELD_CRPS_ENGINE_SCAN_DMA_RECORD_LOGICAL_SEL,
    /** enable-disable all scan together per engine (but not memory init)  */
    DBAL_FIELD_CRPS_ENGINE_SCAN_ENABLE,
    /** scan mode: sequential,algorithmic etc  */
    DBAL_FIELD_CRPS_ENGINE_SCAN_MODE,
    /** Add additional event-ID to DMA record, per engine  */
    DBAL_FIELD_CRPS_ENGINE_SCAN_OBJECT_TYPE_FOR_DMA,
    /** last 4 bits of scanner pkt threshold for sending to dma. relevant just for pkts and bytes format  */
    DBAL_FIELD_CRPS_ENGINE_SCAN_PKT_THRESHOLD,
    /** last 8 bits of scanner threshold for sending to dma  */
    DBAL_FIELD_CRPS_ENGINE_SCAN_THRESHOLD,
    /** the source and interface id that connected to the engine  */
    DBAL_FIELD_CRPS_ENGINE_SOURCE_SELECT,
    /** enable the interface mux or disable. Untill enable, no data will be enter to CRPS  */
    DBAL_FIELD_CRPS_ENGINE_SOURCE_SELECT_ENABLE,
    /** admission type bitmap  */
    DBAL_FIELD_CRPS_ENGINE_TYPE_ADMN_MAP,
    /** offset per type  */
    DBAL_FIELD_CRPS_ENGINE_TYPE_MAP_OFFSET,
    /** weight ration for average MODE_ACTION  */
    DBAL_FIELD_CRPS_ENGINE_WEIGHT_RATIO,
    /** 16 bits expansion select mux for ERPP  */
    DBAL_FIELD_CRPS_ERPP_CTR_EXPANSION_SELECT,
    /** 24 bits expansion select mux for ETPP  */
    DBAL_FIELD_CRPS_ETPP_CTR_EXPANSION_SELECT,
    /** select if to use ETPP IF5 for latency or for packet size  */
    DBAL_FIELD_CRPS_ETPP_LTNCY_CTR_SELECT,
    /** addmission for a given expansion value  */
    DBAL_FIELD_CRPS_EXPANSION_DATA_ADMISSION,
    /** offset in the counter_set for a given expansion value  */
    DBAL_FIELD_CRPS_EXPANSION_DATA_OFFSET,
    /** index for the expansion data mapping table  */
    DBAL_FIELD_CRPS_EXPANSION_INDEX,
    /** crps interface object id  */
    DBAL_FIELD_CRPS_IF_OBJECT_ID,
    /** crps interface type id  */
    DBAL_FIELD_CRPS_IF_TYPE_ID,
    /** 36 bits expansion select mux for IRPP  */
    DBAL_FIELD_CRPS_IRPP_CTR_EXPANSION_SELECT,
    /** select if to use compensation schem 0 or 1  */
    DBAL_FIELD_CRPS_IRPP_PACKET_SIZE_SELECT,
    /** select if CRPS refer to TM packets size or Q size  */
    DBAL_FIELD_CRPS_ITM_PKTSIZE_NOT_QSIZE_SEL,
    /** 16 bits expansion select mux for ITPP  */
    DBAL_FIELD_CRPS_ITPP_LTNCY_CTR_EXPANSION_SELECT,
    /** C-Tag offset  */
    DBAL_FIELD_C_TAG_OFFSET,
    DBAL_FIELD_C_VLAN,
    DBAL_FIELD_DA_NOT_FOUND_DEST,
    /** Default AC profile, used in case of no match of AC  */
    DBAL_FIELD_DEFAULT_AC_PROF,
    /** Default Lif. Default AC lif per incoming port  */
    DBAL_FIELD_DEFAULT_LIF,
    /** Forwarding physical destination  */
    DBAL_FIELD_DESTINATION,
    /** Routing Enablers profile  */
    DBAL_FIELD_DISABLE_BIT,
    /** Drop precedence  */
    DBAL_FIELD_DP,
    /** Drop precedence overwrite  */
    DBAL_FIELD_DP_OW,
    /** ECN Mapping Profile  */
    DBAL_FIELD_ECN_MAPPING_PROFILE,
    /** Egress Editing Information  */
    DBAL_FIELD_EEI,
    /** Routing Enablers Vector  */
    DBAL_FIELD_ENABLERS_VECTOR,
    /** Routing Enablers profile  */
    DBAL_FIELD_ENABLE_BIT,
    DBAL_FIELD_ENABLE_MY_MAC,
    DBAL_FIELD_ENCAP_DEST,
    DBAL_FIELD_ENTRY_GROUPING,
    DBAL_FIELD_ENUM_TEST,
    DBAL_FIELD_ERPP_OUT_LIF_PROFILE,
    /** Per port ESEM access command, mapped to access properties like default lookup result  */
    DBAL_FIELD_ESEM_ACCESS_CMD,
    /** Indicator for ESEM access validity  */
    DBAL_FIELD_ESEM_ACCESS_VALID,
    /** Empty  */
    DBAL_FIELD_ESEM_CMD,
    /** Empty  */
    DBAL_FIELD_ESEM_NAME_SPACE,
    /** Source for PCP-DEI value for an EVE VLAN Edit added Inner tag  */
    DBAL_FIELD_EVE_INNER_PCP_DEI_SRC,
    /** Source for VID value for an EVE VLAN Edit added Inner tag  */
    DBAL_FIELD_EVE_INNER_VID_SRC,
    /** Source for PCP-DEI value for an EVE VLAN Edit added Outer tag  */
    DBAL_FIELD_EVE_OUTER_PCP_DEI_SRC,
    /** Source for VID value for an EVE VLAN Edit added Outer tag  */
    DBAL_FIELD_EVE_OUTER_VID_SRC,
    /** External statistics data  */
    DBAL_FIELD_EXT_STAT_DATA,
    /** External statistics OPCODE  */
    DBAL_FIELD_EXT_STAT_DATA_OPCODE,
    /** External statistics is valid overwrite  */
    DBAL_FIELD_EXT_STAT_DATA_OPCODE_OW,
    /** External statistics data overwrite  */
    DBAL_FIELD_EXT_STAT_DATA_OW,
    /** If set, external statistics is valid  */
    DBAL_FIELD_EXT_STAT_DATA_VALID,
    /** External statistics is valid overwrite  */
    DBAL_FIELD_EXT_STAT_DATA_VALID_OW,
    /** Forwarding Equivalence Class  */
    DBAL_FIELD_FEC,
    /** FEC that can be used for default entries  */
    DBAL_FIELD_FEC_DEFAULT,
    DBAL_FIELD_FID,
    DBAL_FIELD_FLOW_ID,
    DBAL_FIELD_FORWARDING_DOMAIN,
    DBAL_FIELD_FORWARDING_DOMAIN_ASSIGNMENT_MODE,
    DBAL_FIELD_GLOB_IN_LIF,
    DBAL_FIELD_GLOB_OUT_LIF,
    DBAL_FIELD_GLOB_OUT_LIF_2ND,
    /** GPORT_FOR_LEARNING  */
    DBAL_FIELD_GPORT_FOR_LEARNING,
    /** Incoming packet has S-Tag  */
    DBAL_FIELD_INCOMING_S_TAG_EXIST,
    /** Incoming packet has a VLAN tag  */
    DBAL_FIELD_INCOMING_TAG_EXIST,
    /** Incoming packet has a VLAN tag that is not a priority tag  */
    DBAL_FIELD_INCOMING_VID_EXIST,
    /** Is inlif a port  */
    DBAL_FIELD_INLIF_IS_PORT,
    /** INNER TPID INDEX, part of LLVP table key  */
    DBAL_FIELD_INNER_TPID,
    /** Source for TPID value for a VLAN Edit added Inner tag  */
    DBAL_FIELD_INNER_TPID_INDEX,
    /** Internal statistics object ID  */
    DBAL_FIELD_INT_STAT_OBJ_ID,
    /** Internal statistics object ID overwrite  */
    DBAL_FIELD_INT_STAT_OBJ_ID_OW = DBAL_FIELD_INT_STAT_OBJ_ID + DBAL_NUM_OF_FIELD_INSTANCES,
    /** Internal statistics metadata  */
    DBAL_FIELD_INT_STAT_OBJ_META_DATA = DBAL_FIELD_INT_STAT_OBJ_ID_OW + DBAL_NUM_OF_FIELD_INSTANCES,
    /** Internal statistics metadata overwrite  */
    DBAL_FIELD_INT_STAT_OBJ_META_DATA_OW,
    /** Internal statistics object type  */
    DBAL_FIELD_INT_STAT_OBJ_TYPE,
    /** Internal statistics object type overwrite  */
    DBAL_FIELD_INT_STAT_OBJ_TYPE_OW = DBAL_FIELD_INT_STAT_OBJ_TYPE + DBAL_NUM_OF_FIELD_INSTANCES,
    /** Internal statistics object is valid  */
    DBAL_FIELD_INT_STAT_OBJ_VALID = DBAL_FIELD_INT_STAT_OBJ_TYPE_OW + DBAL_NUM_OF_FIELD_INSTANCES,
    /** Internal statistics object is valid overwrite  */
    DBAL_FIELD_INT_STAT_OBJ_VALID_OW = DBAL_FIELD_INT_STAT_OBJ_VALID + DBAL_NUM_OF_FIELD_INSTANCES,
    DBAL_FIELD_IN_LIF = DBAL_FIELD_INT_STAT_OBJ_VALID_OW + DBAL_NUM_OF_FIELD_INSTANCES,
    DBAL_FIELD_IN_LIF_PROFILE,
    /** Empty  */
    DBAL_FIELD_IN_LIF_VTEP_IDX_PAYLOAD_DATA,
    /** Empty  */
    DBAL_FIELD_IN_LIF_VTEP_IDX_PAYLOAD_TYPE,
    DBAL_FIELD_IN_PORT,
    /** In pp port  */
    DBAL_FIELD_IN_PP_PORT,
    /** In pp port overwrite  */
    DBAL_FIELD_IN_PP_PORT_OW,
    /** An Internet Protocol address (IP address) v4  */
    DBAL_FIELD_IPV4,
    /** Empty  */
    DBAL_FIELD_IPV4_ADDITIONAL_HEADER_1,
    /** Empty  */
    DBAL_FIELD_IPV4_ADDITIONAL_HEADER_2,
    /** An Internet Protocol address (IP address) v4, destination address  */
    DBAL_FIELD_IPV4_DIP,
    /** An Internet Protocol address (IP address) v4, Multi-Cast Group  */
    DBAL_FIELD_IPV4_GROUP,
    /** Empty  */
    DBAL_FIELD_IPV4_PROTOCOL,
    /** An Internet Protocol address (IP address) v4, source address  */
    DBAL_FIELD_IPV4_SIP,
    /** Empty  */
    DBAL_FIELD_IPV4_TOS,
    /** An Internet Protocol address (IP address) v6  */
    DBAL_FIELD_IPV6,
    /** An Internet Protocol address (IP address) v6, destination address  */
    DBAL_FIELD_IPV6_DIP,
    /** Empty  */
    DBAL_FIELD_IPV6_PROTOCOL,
    /** An Internet Protocol address (IP address) v6, source address  */
    DBAL_FIELD_IPV6_SIP,
    /** Empty  */
    DBAL_FIELD_IPV6_TOS,
    /** OUTER TAG IS PRIORITY, part of LLVP table key  */
    DBAL_FIELD_IS_OUTER_PRIO,
    /** Index to the ingress VLAN edit command table  */
    DBAL_FIELD_IVEC_INDEX,
    /** Source for PCP-DEI value for an IVE VLAN Edit added Inner tag  */
    DBAL_FIELD_IVE_INNER_PCP_DEI_SRC,
    /** Source for VID value for an IVE VLAN Edit added Inner tag  */
    DBAL_FIELD_IVE_INNER_VID_SRC,
    /** Source for PCP-DEI value for an IVE VLAN Edit added Outer tag  */
    DBAL_FIELD_IVE_OUTER_PCP_DEI_SRC,
    /** Source for VID value for an IVE VLAN Edit added Outer tag  */
    DBAL_FIELD_IVE_OUTER_VID_SRC,
    /** Payloads types supported by the KAPS.  */
    DBAL_FIELD_KAPS_RESULT,
    /** MAC Destination Address  */
    DBAL_FIELD_L2_DMAC,
    /** MAC Address  */
    DBAL_FIELD_L2_MAC,
    /** MAC Source Address  */
    DBAL_FIELD_L2_SMAC,
    /** Empty  */
    DBAL_FIELD_L4_DEST_PORT,
    /** Empty  */
    DBAL_FIELD_L4_SRC_PORT,
    /** LAG-ID  */
    DBAL_FIELD_LAG_ID,
    /** LAG LB key(trunk hash) for the copy  */
    DBAL_FIELD_LAG_LB_KEY,
    /** LAG LB key(trunk hash) for the copy overwrite  */
    DBAL_FIELD_LAG_LB_KEY_OW,
    DBAL_FIELD_LAYER_TYPE,
    /** Enable Learning  */
    DBAL_FIELD_LEARN_ENABLE,
    /** Learning information  */
    DBAL_FIELD_LEARN_INFO,
    /** Learn Payload Context  */
    DBAL_FIELD_LEARN_PAYLOAD_CONTEXT,
    /** Are outlif and inlif equal  */
    DBAL_FIELD_LIFS_EQUAL,
    /** Empty  */
    DBAL_FIELD_LIF_ADDITIONAL_HEADERS_PROFILE,
    /** In-LIF General data  */
    DBAL_FIELD_LIF_GENERIC_DATA,
    /** Enable the LIF learn payload  */
    DBAL_FIELD_LIF_LERAN_PAYLOAD_ENABLE,
    /** Enable the LIF QOS update.  */
    DBAL_FIELD_LIF_QOS_UPDATE_ENABLE,
    /** Used to generate VLAN edit command  */
    DBAL_FIELD_LLVP_INCOMING_TAG_STRUCTURE,
    /** Port based PCP-DEI mapping profile  */
    DBAL_FIELD_LLVP_PCP_DEI_PROFILE,
    /** LLVP PROFILE, part of LLVP table key  */
    DBAL_FIELD_LLVP_PROFILE,
    /** All logical gports - VLAN PORT, MPLS PORT, EXTENDER, L2GRE, MIM, VXLAN  */
    DBAL_FIELD_LOGICAL_GPORT,
    DBAL_FIELD_MAC_STRENGTH,
    /** Multicast-ID  */
    DBAL_FIELD_MC_ID,
    /** The MC ID supported by the KAPS (only 17b)  */
    DBAL_FIELD_MC_ID_KAPS,
    /** Empty  */
    DBAL_FIELD_MPLS_EXTENDED_FODO,
    /** Empty  */
    DBAL_FIELD_MPLS_LABEL,
    /** Empty  */
    DBAL_FIELD_MPLS_LABEL_2,
    /** MPLS out label  */
    DBAL_FIELD_MPLS_OUT,
    /** MPLS out label CMD  */
    DBAL_FIELD_MPLS_OUT_CMD,
    DBAL_FIELD_MTU_PROFILE,
    DBAL_FIELD_MY_MAC,
    /** Enable the MyMac based EXEM.  */
    DBAL_FIELD_MY_MAC_BASED_EXEM_ENABLE,
    /** Enable the MyMac based MC backbone.  */
    DBAL_FIELD_MY_MAC_BASED_MC_BACKBONE_ENABLE,
    /** Enable the MyMac based UC backbone.  */
    DBAL_FIELD_MY_MAC_BASED_UC_BACKBONE_ENABLE,
    /** Enable the MyMac based VRID.  */
    DBAL_FIELD_MY_MAC_BASED_VRID_ENABLE,
    /** Enable the MyMac based VSI.  */
    DBAL_FIELD_MY_MAC_BASED_VSI_ENABLE,
    DBAL_FIELD_MY_MAC_PREFIX,
    /** In-LIF Next Layer Network Domain  */
    DBAL_FIELD_NEXT_LAYER_NETWORK_DOMAIN,
    /** In-LIF Next Parser Context  */
    DBAL_FIELD_NEXT_PARSER_CONTEXT,
    DBAL_FIELD_NWK_QOS_IDX,
    DBAL_FIELD_OAM_LIF_SET,
    /** OUTER TPID INDEX, part of LLVP table key  */
    DBAL_FIELD_OUTER_TPID,
    /** Source for TPID value for a VLAN Edit added Outer tag  */
    DBAL_FIELD_OUTER_TPID_INDEX,
    /** Is outlif a port  */
    DBAL_FIELD_OUTLIF_IS_PORT,
    DBAL_FIELD_OUT_LIF,
    DBAL_FIELD_OUT_LIF_PROFILE,
    /** Packet has C-Tag  */
    DBAL_FIELD_PACKET_HAS_C_TAG,
    /** Packet has PCP-DEI  */
    DBAL_FIELD_PACKET_HAS_PCP_DEI,
    /** PEER_GPORT  */
    DBAL_FIELD_PEER_GPORT,
    /** TPID Value used to identify Etherent Tags. If matched, Qualifier is set to 1  */
    DBAL_FIELD_PEMLA_TPID_1,
    /** TPID Value used to identify Etherent Tags. If matched, Qualifier is set to 2  */
    DBAL_FIELD_PEMLA_TPID_2,
    /** TPID Value used to identify Etherent Tags. If matched, Qualifier is set to 3  */
    DBAL_FIELD_PEMLA_TPID_3,
    /** TPID Value used to identify Etherent Tags. If matched, Qualifier is set to 4  */
    DBAL_FIELD_PEMLA_TPID_4,
    /** TPID Value used to identify Etherent Tags. If matched, Qualifier is set to 5  */
    DBAL_FIELD_PEMLA_TPID_5,
    /** TPID Value used to identify Etherent Tags. If matched, Qualifier is set to 6  */
    DBAL_FIELD_PEMLA_TPID_6,
    /** TPID Value used to identify Etherent Tags. If matched, Qualifier is set to 7  */
    DBAL_FIELD_PEMLA_TPID_7,
    DBAL_FIELD_PORT_ID,
    /** Port default VID (VLAN-ID) also called PVID  */
    DBAL_FIELD_PORT_VID,
    /** Empty  */
    DBAL_FIELD_PP_CUD,
    /** Internal PP port mapped from Logical port  */
    DBAL_FIELD_PP_PORT,
    DBAL_FIELD_PROFILE_INGRESS,
    DBAL_FIELD_PROPAGATION_PROF,
    /** Protection Path  */
    DBAL_FIELD_PROTECTION_PATH,
    /** Protection Pointer  */
    DBAL_FIELD_PROTECTION_POINTER,
    DBAL_FIELD_QOS_MODEL,
    DBAL_FIELD_QOS_PROFILE,
    DBAL_FIELD_REMARK_PROFILE,
    /** If set then original system headers are removed from the packet  */
    DBAL_FIELD_REMOVE_SYSTEM_HEADERS_ENABLE,
    /** Special field that used for identification between multiple results types in table  */
    DBAL_FIELD_RESULT_TYPE,
    /** RIF profile is the VSI profile  */
    DBAL_FIELD_RIF_PROFILE,
    /** Routing Enablers profile  */
    DBAL_FIELD_ROUTING_ENABLERS_PROFILE,
    /** Same interface filter result  */
    DBAL_FIELD_SAME_INTERFACE_FILTER,
    /** Mapping from forwarding context to same intf filter  */
    DBAL_FIELD_SAME_INTERFACE_FILTER_BY_FWD_CONTEXT,
    /** Mapping from inlif profile to same intf filter  */
    DBAL_FIELD_SAME_INTERFACE_FILTER_BY_INLIF_PROFILE,
    /** Mapping from outlif profile to same intf filter  */
    DBAL_FIELD_SAME_INTERFACE_FILTER_BY_OUTLIF_PROFILE,
    /** The scratch_pad[floating_PD_Result] must conatain LOCAL_IN_LIF_ID_AND_OR_VTEP_IDX  */
    DBAL_FIELD_SCRATCH_PAD,
    /** In-LIF Service Type  */
    DBAL_FIELD_SERVICE_TYPE,
    /** SNIF command(profile) ID  */
    DBAL_FIELD_SNIF_COMMAND_ID,
    /** Probability of SNIF execution, calculated as (2^24-SnpActSnpSamplingProbability)/2^24  */
    DBAL_FIELD_SNIF_PROBABILITY,
    /** Controls which packet to drop in case of original/SNIFed packet drop  */
    DBAL_FIELD_SNIF_STRENGTH,
    /** SNIF supported applications  */
    DBAL_FIELD_SNIF_TYPE,
    /** MAC address  */
    DBAL_FIELD_SOURCE_ADDRESS,
    /** Source address index  */
    DBAL_FIELD_SOURCE_ADDRESS_INDEX,
    /** Empty  */
    DBAL_FIELD_STAT_MPLS,
    /** Status inforamtion CMD  */
    DBAL_FIELD_STAT_OBJECT_CMD,
    /** Status inforamtion pointer  */
    DBAL_FIELD_STAT_OBJECT_ID,
    DBAL_FIELD_STAT_OBJECT_PROF,
    /** Spanning Tree group, also known as Topology ID  */
    DBAL_FIELD_STG_ID,
    /** Enable STP  */
    DBAL_FIELD_STP_ENABLE,
    /** Spanning Tree protocol state, can be block, learn and forward  */
    DBAL_FIELD_STP_STATE,
    DBAL_FIELD_STP_TOPOLOGY_ID,
    /** Statistics VSQ pointer  */
    DBAL_FIELD_ST_VSQ_PTR,
    /** Statistics VSQ pointer overwrite  */
    DBAL_FIELD_ST_VSQ_PTR_OW,
    /** Are source and destination sys ports equal  */
    DBAL_FIELD_SYS_PORT_EQUAL,
    DBAL_FIELD_S_VLAN,
    /** Source for PCP-DEI value for a VLAN Edit added Inner tag  */
    DBAL_FIELD_TAGS_TO_REMOVE,
    /** Traffic class for the copy  */
    DBAL_FIELD_TC,
    /** Traffic class for the copy overwrite  */
    DBAL_FIELD_TC_OW,
    /** In-LIF Termination Mode  */
    DBAL_FIELD_TERMINATION_TYPE,
    /** Empty  */
    DBAL_FIELD_TNI,
    /** The index to access the TPID table  */
    DBAL_FIELD_TPID_INDEX,
    /** The TPID value in the TPID table  */
    DBAL_FIELD_TPID_VALUE,
    /** Empty  */
    DBAL_FIELD_TTL_IDX,
    /** Empty  */
    DBAL_FIELD_TTL_MODEL,
    /** Enable, Disable to remove TAG on TX packet Outer-VID  */
    DBAL_FIELD_TX_OUTER_TAG_VALID,
    /** Outer VID to use when removing TAG on TX packet  */
    DBAL_FIELD_TX_OUTER_TAG_VID,
    /** Empty  */
    DBAL_FIELD_T_ID,
    /** Group of PP ports that share the same semantic space of VLAN tags  */
    DBAL_FIELD_VLAN_DOMAIN,
    /** Enable the VLAN edit command.  */
    DBAL_FIELD_VLAN_EDIT_CMD_ENABLE,
    /** Index to a VLAN Edit commands table - IVEC or EVEC  */
    DBAL_FIELD_VLAN_EDIT_COMMAND_INDEX,
    DBAL_FIELD_VLAN_EDIT_PCP_DEI_PROFILE,
    DBAL_FIELD_VLAN_EDIT_PROFILE,
    DBAL_FIELD_VLAN_EDIT_VID_1,
    DBAL_FIELD_VLAN_EDIT_VID_2,
    /** VLAN tagging Identifier in the packet Ethernet header  */
    DBAL_FIELD_VLAN_ID,
    /** Vlan membership interface used as port (logical and physical) attribute for VLAN membership tables  */
    DBAL_FIELD_VLAN_MEMBERSHIP_IF,
    /** Bitmap of VLAN member domain. Each bit represent the VLAN member domain ID. VLAN member
            domain is a group that mapped from the PP port or logical port (for example PWE). Used as part of the VLAN
            membership table  */
    DBAL_FIELD_VLAN_MEMBER_DOMAIN_BMP,
    /** Empty  */
    DBAL_FIELD_VNI,
    /** Virtual Router Forwarding  */
    DBAL_FIELD_VRF,
    DBAL_FIELD_VRID_BITMAP,
    DBAL_FIELD_VSI,
    /** Enable the VSI learn key.  */
    DBAL_FIELD_VSI_LEARN_KEY_ENABLE,
    /** Enable the VSI learn payload.  */
    DBAL_FIELD_VSI_LEARN_PAYLOAD_ENABLE,
    /** Enable the VSI lookup.  */
    DBAL_FIELD_VSI_LOOKUP_ENABLE,
    DBAL_FIELD_VSI_PROFILE,
    /** Enable the VSI QOS update.  */
    DBAL_FIELD_VSI_QOS_UPDATE_ENABLE,
    DBAL_NOF_FIELDS
} dbal_fields_e;
/**
 * \brief enum that represents all the valid values for ENUM_TEST\n 
 */
typedef enum
{
    /** default value of field  */
    DBAL_ENUM_FVAL_ENUM_TEST_DEFAULT,
    /** drop action description  */
    DBAL_ENUM_FVAL_ENUM_TEST_DROP,
    /** snoop action description  */
    DBAL_ENUM_FVAL_ENUM_TEST_SNOOP,
    /** redirect action description  */
    DBAL_ENUM_FVAL_ENUM_TEST_REDIRECT,
    /** Number of enum valid values for ENUM_TEST  */
    DBAL_NOF_ENUM_ENUM_TEST_VALUES
} dbal_enum_value_field_enum_test_e;
/**
 * \brief enum that represents all the valid values for SNIF_TYPE\n 
 */
typedef enum
{
    /** snoop action  */
    DBAL_ENUM_FVAL_SNIF_TYPE_SNOOP,
    /** mirror action  */
    DBAL_ENUM_FVAL_SNIF_TYPE_MIRROR,
    /** statistical sampling action  */
    DBAL_ENUM_FVAL_SNIF_TYPE_STATISTICAL_SAMPLE,
    /** Number of enum valid values for SNIF_TYPE  */
    DBAL_NOF_ENUM_SNIF_TYPE_VALUES
} dbal_enum_value_field_snif_type_e;
/**
 * \brief enum that represents all the valid values for SNIF_STRENGTH\n 
 */
typedef enum
{
    /** Default - Snoop and Forward are orthogonal  */
    DBAL_ENUM_FVAL_SNIF_STRENGTH_ENABLE_COPY_ON_REJECT,
    /** Disable Snoop on Forward Reject  */
    DBAL_ENUM_FVAL_SNIF_STRENGTH_DISABLE_SNIF_ON_FWD_REJECT,
    /** Disable Forward on Snoop Reject  */
    DBAL_ENUM_FVAL_SNIF_STRENGTH_DISABLE_FWD_ON_SNIF_REJECT,
    /** Number of enum valid values for SNIF_STRENGTH  */
    DBAL_NOF_ENUM_SNIF_STRENGTH_VALUES
} dbal_enum_value_field_snif_strength_e;
/**
 * \brief enum that represents all the valid values for IVE_OUTER_VID_SRC\n 
 */
typedef enum
{
    /** No VLAN Edit action for the tag  */
    DBAL_ENUM_FVAL_IVE_OUTER_VID_SRC_EMPTY,
    /** VID Source is the AC LIF Outer VID  */
    DBAL_ENUM_FVAL_IVE_OUTER_VID_SRC_AC_OUTER_VID,
    /** VID Source is the AC LIF Inner VID  */
    DBAL_ENUM_FVAL_IVE_OUTER_VID_SRC_AC_INNER_VID,
    /** VID Source is the Incoming packet Outer VID  */
    DBAL_ENUM_FVAL_IVE_OUTER_VID_SRC_INCOMING_OUTER_VID,
    /** VID Source is the Incoming packet Inner VID  */
    DBAL_ENUM_FVAL_IVE_OUTER_VID_SRC_INCOMING_INNER_VID,
    /** Number of enum valid values for IVE_OUTER_VID_SRC  */
    DBAL_NOF_ENUM_IVE_OUTER_VID_SRC_VALUES
} dbal_enum_value_field_ive_outer_vid_src_e;
/**
 * \brief enum that represents all the valid values for IVE_INNER_VID_SRC\n 
 */
typedef enum
{
    /** No VLAN Edit action for the tag  */
    DBAL_ENUM_FVAL_IVE_INNER_VID_SRC_EMPTY,
    /** VID Source is the AC LIF Outer VID  */
    DBAL_ENUM_FVAL_IVE_INNER_VID_SRC_AC_OUTER_VID,
    /** VID Source is the AC LIF Inner VID  */
    DBAL_ENUM_FVAL_IVE_INNER_VID_SRC_AC_INNER_VID,
    /** VID Source is the Incoming packet Outer VID  */
    DBAL_ENUM_FVAL_IVE_INNER_VID_SRC_INCOMING_OUTER_VID,
    /** VID Source is the Incoming packet Inner VID  */
    DBAL_ENUM_FVAL_IVE_INNER_VID_SRC_INCOMING_INNER_VID,
    /** Number of enum valid values for IVE_INNER_VID_SRC  */
    DBAL_NOF_ENUM_IVE_INNER_VID_SRC_VALUES
} dbal_enum_value_field_ive_inner_vid_src_e;
/**
 * \brief enum that represents all the valid values for IVE_OUTER_PCP_DEI_SRC\n 
 */
typedef enum
{
    /** No VLAN Edit action for the tag  */
    DBAL_ENUM_FVAL_IVE_OUTER_PCP_DEI_SRC_EMPTY,
    /** PCP-DEI Source is the AC LIF Outer PCP-DEI mapping  */
    DBAL_ENUM_FVAL_IVE_OUTER_PCP_DEI_SRC_AC_OUTER_PCP_DEI,
    /** PCP_DEI Source is the AC LIF Inner PCP-DEI mapping  */
    DBAL_ENUM_FVAL_IVE_OUTER_PCP_DEI_SRC_AC_INNER_PCP_DEI,
    /** PCP_DEI Source is the Incoming packet Outer PCP-DEI mapping  */
    DBAL_ENUM_FVAL_IVE_OUTER_PCP_DEI_SRC_INCOMING_OUTER_PCP_DEI,
    /** PCP_DEI Source is the Incoming packet Inner PCP-DEI mapping  */
    DBAL_ENUM_FVAL_IVE_OUTER_PCP_DEI_SRC_INCOMING_INNER_PCP_DEI,
    /** Number of enum valid values for IVE_OUTER_PCP_DEI_SRC  */
    DBAL_NOF_ENUM_IVE_OUTER_PCP_DEI_SRC_VALUES
} dbal_enum_value_field_ive_outer_pcp_dei_src_e;
/**
 * \brief enum that represents all the valid values for IVE_INNER_PCP_DEI_SRC\n 
 */
typedef enum
{
    /** No VLAN Edit action for the tag  */
    DBAL_ENUM_FVAL_IVE_INNER_PCP_DEI_SRC_EMPTY,
    /** PCP-DEI Source is the AC LIF Outer PCP-DEI mapping  */
    DBAL_ENUM_FVAL_IVE_INNER_PCP_DEI_SRC_AC_OUTER_PCP_DEI,
    /** PCP_DEI Source is the AC LIF Inner PCP-DEI mapping  */
    DBAL_ENUM_FVAL_IVE_INNER_PCP_DEI_SRC_AC_INNER_PCP_DEI,
    /** PCP_DEI Source is the Incoming packet Outer PCP-DEI mapping  */
    DBAL_ENUM_FVAL_IVE_INNER_PCP_DEI_SRC_INCOMING_OUTER_PCP_DEI,
    /** PCP_DEI Source is the Incoming packet Inner PCP-DEI mapping  */
    DBAL_ENUM_FVAL_IVE_INNER_PCP_DEI_SRC_INCOMING_INNER_PCP_DEI,
    /** Number of enum valid values for IVE_INNER_PCP_DEI_SRC  */
    DBAL_NOF_ENUM_IVE_INNER_PCP_DEI_SRC_VALUES
} dbal_enum_value_field_ive_inner_pcp_dei_src_e;
/**
 * \brief enum that represents all the valid values for EVE_OUTER_VID_SRC\n 
 */
typedef enum
{
    /** No VLAN Edit action for the tag  */
    DBAL_ENUM_FVAL_EVE_OUTER_VID_SRC_EMPTY,
    /** VID Source is the Incoming packet Outer VID  */
    DBAL_ENUM_FVAL_EVE_OUTER_VID_SRC_INCOMING_OUTER_VID,
    /** VID Source is the Incoming packet Inner VID  */
    DBAL_ENUM_FVAL_EVE_OUTER_VID_SRC_INCOMING_INNER_VID,
    /** VID Source is the AC LIF Outer VID  */
    DBAL_ENUM_FVAL_EVE_OUTER_VID_SRC_AC_OUTER_VID,
    /** VID Source is the AC LIF Inner VID  */
    DBAL_ENUM_FVAL_EVE_OUTER_VID_SRC_AC_INNER_VID,
    /** VID Source is the Forward domain (VSI)  */
    DBAL_ENUM_FVAL_EVE_OUTER_VID_SRC_FORWARD_DOMAIN,
    /** VID Source is the ARP+AC LIF Outer VID  */
    DBAL_ENUM_FVAL_EVE_OUTER_VID_SRC_ARP_AC_OUTER_VID,
    /** VID Source is the ARP+AC LIF Inner VID  */
    DBAL_ENUM_FVAL_EVE_OUTER_VID_SRC_ARP_AC_INNER_VID,
    /** Number of enum valid values for EVE_OUTER_VID_SRC  */
    DBAL_NOF_ENUM_EVE_OUTER_VID_SRC_VALUES
} dbal_enum_value_field_eve_outer_vid_src_e;
/**
 * \brief enum that represents all the valid values for EVE_INNER_VID_SRC\n 
 */
typedef enum
{
    /** No VLAN Edit action for the tag  */
    DBAL_ENUM_FVAL_EVE_INNER_VID_SRC_EMPTY,
    /** VID Source is the Incoming packet Outer VID  */
    DBAL_ENUM_FVAL_EVE_INNER_VID_SRC_INCOMING_OUTER_VID,
    /** VID Source is the Incoming packet Inner VID  */
    DBAL_ENUM_FVAL_EVE_INNER_VID_SRC_INCOMING_INNER_VID,
    /** VID Source is the AC LIF Outer VID  */
    DBAL_ENUM_FVAL_EVE_INNER_VID_SRC_AC_OUTER_VID,
    /** VID Source is the AC LIF Inner VID  */
    DBAL_ENUM_FVAL_EVE_INNER_VID_SRC_AC_INNER_VID,
    /** VID Source is the Forward domain (VSI)  */
    DBAL_ENUM_FVAL_EVE_INNER_VID_SRC_FORWARD_DOMAIN,
    /** VID Source is the ARP+AC LIF Outer VID  */
    DBAL_ENUM_FVAL_EVE_INNER_VID_SRC_ARP_AC_OUTER_VID,
    /** VID Source is the ARP+AC LIF Inner VID  */
    DBAL_ENUM_FVAL_EVE_INNER_VID_SRC_ARP_AC_INNER_VID,
    /** Number of enum valid values for EVE_INNER_VID_SRC  */
    DBAL_NOF_ENUM_EVE_INNER_VID_SRC_VALUES
} dbal_enum_value_field_eve_inner_vid_src_e;
/**
 * \brief enum that represents all the valid values for EVE_OUTER_PCP_DEI_SRC\n 
 */
typedef enum
{
    /** PCP_DEI Source is the AC LIF Inner PCP-DEI mapping  */
    DBAL_ENUM_FVAL_EVE_OUTER_PCP_DEI_SRC_AC_INNER_PCP_DEI,
    /** PCP-DEI Source is the AC LIF Outer PCP-DEI mapping  */
    DBAL_ENUM_FVAL_EVE_OUTER_PCP_DEI_SRC_AC_OUTER_PCP_DEI,
    /** PCP_DEI Source is the Incoming packet Inner PCP-DEI mapping  */
    DBAL_ENUM_FVAL_EVE_OUTER_PCP_DEI_SRC_INCOMING_INNER_PCP_DEI,
    /** PCP_DEI Source is the Incoming packet Outer PCP-DEI mapping  */
    DBAL_ENUM_FVAL_EVE_OUTER_PCP_DEI_SRC_INCOMING_OUTER_PCP_DEI,
    /** Number of enum valid values for EVE_OUTER_PCP_DEI_SRC  */
    DBAL_NOF_ENUM_EVE_OUTER_PCP_DEI_SRC_VALUES
} dbal_enum_value_field_eve_outer_pcp_dei_src_e;
/**
 * \brief enum that represents all the valid values for EVE_INNER_PCP_DEI_SRC\n 
 */
typedef enum
{
    /** PCP_DEI Source is the AC LIF Inner PCP-DEI mapping  */
    DBAL_ENUM_FVAL_EVE_INNER_PCP_DEI_SRC_AC_INNER_PCP_DEI,
    /** PCP-DEI Source is the AC LIF Outer PCP-DEI mapping  */
    DBAL_ENUM_FVAL_EVE_INNER_PCP_DEI_SRC_AC_OUTER_PCP_DEI,
    /** PCP_DEI Source is the Incoming packet Inner PCP-DEI mapping  */
    DBAL_ENUM_FVAL_EVE_INNER_PCP_DEI_SRC_INCOMING_INNER_PCP_DEI,
    /** PCP_DEI Source is the Incoming packet Outer PCP-DEI mapping  */
    DBAL_ENUM_FVAL_EVE_INNER_PCP_DEI_SRC_INCOMING_OUTER_PCP_DEI,
    /** Number of enum valid values for EVE_INNER_PCP_DEI_SRC  */
    DBAL_NOF_ENUM_EVE_INNER_PCP_DEI_SRC_VALUES
} dbal_enum_value_field_eve_inner_pcp_dei_src_e;
/**
 * \brief enum that represents all the valid values for IN_LIF_VTEP_IDX_PAYLOAD_TYPE\n 
 */
typedef enum
{
    /** payload contain only in-lif ID  */
    DBAL_ENUM_FVAL_IN_LIF_VTEP_IDX_PAYLOAD_TYPE_IN_LIF_ID,
    /** payload contain only VTEP index  */
    DBAL_ENUM_FVAL_IN_LIF_VTEP_IDX_PAYLOAD_TYPE_VTEP_IDX,
    /** payload contain in-lif ID or VTEP index  */
    DBAL_ENUM_FVAL_IN_LIF_VTEP_IDX_PAYLOAD_TYPE_IN_LIF_ID_OR_VTEP_IDX,
    /** Number of enum valid values for IN_LIF_VTEP_IDX_PAYLOAD_TYPE  */
    DBAL_NOF_ENUM_IN_LIF_VTEP_IDX_PAYLOAD_TYPE_VALUES
} dbal_enum_value_field_in_lif_vtep_idx_payload_type_e;
/**
 * \brief enum that represents all the valid values for CRPS_ENGINE_COUNTER_FORMAT\n 
 */
typedef enum
{
    /** value not valid. made just to align dbal rules  */
    DBAL_ENUM_FVAL_CRPS_ENGINE_COUNTER_FORMAT_NOT_VALID_MODE,
    /** one wide incrementation counter for byte  */
    DBAL_ENUM_FVAL_CRPS_ENGINE_COUNTER_FORMAT_COUNTER_BYTES_WIDE,
    /** 2 narrow incrementation counters for byte  */
    DBAL_ENUM_FVAL_CRPS_ENGINE_COUNTER_FORMAT_COUNTER_BYTES_NARROW,
    /** 2 narrow incrematation counters, one for packets and one for bytes  */
    DBAL_ENUM_FVAL_CRPS_ENGINE_COUNTER_FORMAT_COUNTER_PACKETS_AND_BYTES,
    /** one wide incrementation counter for packets  */
    DBAL_ENUM_FVAL_CRPS_ENGINE_COUNTER_FORMAT_COUNTER_PACKETS_WIDE,
    /** 2 narrow incrementation counters for packets  */
    DBAL_ENUM_FVAL_CRPS_ENGINE_COUNTER_FORMAT_COUNTER_PACKETS_NARROW,
    /** one wide counter that holds the max value  */
    DBAL_ENUM_FVAL_CRPS_ENGINE_COUNTER_FORMAT_COUNTER_MAX_WIDE,
    /** 2 narrow counters that holds the max value  */
    DBAL_ENUM_FVAL_CRPS_ENGINE_COUNTER_FORMAT_COUNTER_MAX_NARROW,
    /** one wide average counter  */
    DBAL_ENUM_FVAL_CRPS_ENGINE_COUNTER_FORMAT_COUNTER_AVERAGE_WIDE,
    /** 2 narrow avergae counters  */
    DBAL_ENUM_FVAL_CRPS_ENGINE_COUNTER_FORMAT_COUNTER_AVERAGE_NARROW,
    /** Number of enum valid values for CRPS_ENGINE_COUNTER_FORMAT  */
    DBAL_NOF_ENUM_CRPS_ENGINE_COUNTER_FORMAT_VALUES
} dbal_enum_value_field_crps_engine_counter_format_e;
/**
 * \brief enum that represents all the valid values for CRPS_ENGINE_SCAN_MODE\n 
 */
typedef enum
{
    /** no scan  */
    DBAL_ENUM_FVAL_CRPS_ENGINE_SCAN_MODE_NO_SCAN,
    /** sequential scan only   */
    DBAL_ENUM_FVAL_CRPS_ENGINE_SCAN_MODE_SEQUENTIAL_SCAN,
    /** algorithim scan only   */
    DBAL_ENUM_FVAL_CRPS_ENGINE_SCAN_MODE_ALGORITHIM_SCAN,
    /** sequential and algorithim scan  */
    DBAL_ENUM_FVAL_CRPS_ENGINE_SCAN_MODE_SEQUENTIAL_AND_ALGORITHIM_SCAN,
    /** Number of enum valid values for CRPS_ENGINE_SCAN_MODE  */
    DBAL_NOF_ENUM_CRPS_ENGINE_SCAN_MODE_VALUES
} dbal_enum_value_field_crps_engine_scan_mode_e;

#endif /* DBAL_DEFINES_FIELDS_H_INCLUDED */
