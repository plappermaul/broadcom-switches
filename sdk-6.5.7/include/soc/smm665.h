/*
 * $Id: smm665.h,v 1.1.2.1 Broadcom SDK $
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 *
 * I2C Device Driver for Summit SMM665C Active DC Control
 *
 */


/*
 * VREF_CTRL: 1.25V in internal mode 
 */
#define SMM665_VREF_CTRL  1250  /* In mV */
#define SMM665_VREF_ADC   1250  /* In mV */
#define SMM665_ADC_MASK   0x3FF

#define SMM665_80PERCENT_VREF_CTRL   (SMM665_VREF_CTRL * 80 / 100)
#define SMM665_55PERCENT_VREF_CTRL   (SMM665_VREF_CTRL * 55 / 100)
#define SMM665_30PERCENT_VREF_CTRL   (SMM665_VREF_CTRL * 30 / 100)

/* Voltage Settings */
#define SMM665_VREF_RESOLUTION  0x1024   /* 10bit resolution */

#define SMM665_VREF_MULT_0_25   0x0   /* 0.25% */
#define SMM665_VREF_MULT_0_50   0x1   /* 0.5 % */
#define SMM665_VREF_MULT_0_75   0x2   /* 0.75% */
#define SMM665_VREF_MULT_1      0x3     
#define SMM665_VREF_MULTIPLIER(x)  (((x) >> 2) & 0x3)
#define SMM665_VREF_MULTIPLIER_DAC(x)  (((x) >> 10) & 0x3)

#define SMM665_ADOC_CONTROL_HI(c)  (((c) >> 8) & 0x3)
#define SMM665_ADOC_CONTROL_LOW(c)  ((c) & 0xFF)

#define SMM665_ADOC_CONTROL(hi, lo) ((hi) << 8 | (lo))

#define SMM665_VO_CTRL_CH_1    0
#define SMM665_VO_CTRL_CH_2    2
#define SMM665_VO_CTRL_CH_3    4
#define SMM665_VO_CTRL_CH_4    6
#define SMM665_VO_CTRL_CH_5    8
#define SMM665_VO_CTRL_CH_6    10

#define SMM665_VO_CTRL_NOMINAL       0x00
#define SMM665_VO_CTRL_MARGIN_HIGH   0x30
#define SMM665_VO_CTRL_MARGIN_LOW    0x40

#define SMM665_VO_CTRL_NOMINAL_REG_CH_A_R0   0x00
#define SMM665_VO_CTRL_NOMINAL_REG_CH_A_R1   0x01
#define SMM665_VO_CTRL_NOMINAL_REG_CH_B_R0   0x02
#define SMM665_VO_CTRL_NOMINAL_REG_CH_B_R1   0x03
#define SMM665_VO_CTRL_NOMINAL_REG_CH_C_R0   0x04
#define SMM665_VO_CTRL_NOMINAL_REG_CH_C_R1   0x05
#define SMM665_VO_CTRL_NOMINAL_REG_CH_D_R0   0x06
#define SMM665_VO_CTRL_NOMINAL_REG_CH_D_R1   0x07
#define SMM665_VO_CTRL_NOMINAL_REG_CH_E_R0   0x08
#define SMM665_VO_CTRL_NOMINAL_REG_CH_E_R1   0x09
#define SMM665_VO_CTRL_NOMINAL_REG_CH_F_R0   0x0A
#define SMM665_VO_CTRL_NOMINAL_REG_CH_F_R1   0x0B

#define SMM665_VO_CTRL_MARGIN_HI_REG_CH_A_R0   0x30
#define SMM665_VO_CTRL_MARGIN_HI_REG_CH_A_R1   0x31
#define SMM665_VO_CTRL_MARGIN_HI_REG_CH_B_R0   0x32
#define SMM665_VO_CTRL_MARGIN_HI_REG_CH_B_R1   0x33
#define SMM665_VO_CTRL_MARGIN_HI_REG_CH_C_R0   0x34
#define SMM665_VO_CTRL_MARGIN_HI_REG_CH_C_R1   0x35
#define SMM665_VO_CTRL_MARGIN_HI_REG_CH_D_R0   0x36
#define SMM665_VO_CTRL_MARGIN_HI_REG_CH_D_R1   0x37
#define SMM665_VO_CTRL_MARGIN_HI_REG_CH_E_R0   0x38
#define SMM665_VO_CTRL_MARGIN_HI_REG_CH_E_R1   0x39
#define SMM665_VO_CTRL_MARGIN_HI_REG_CH_F_R0   0x3A
#define SMM665_VO_CTRL_MARGIN_HI_REG_CH_F_R1   0x3B

#define SMM665_VO_CTRL_MARGIN_LO_REG_CH_A_R0   0x40
#define SMM665_VO_CTRL_MARGIN_LO_REG_CH_A_R1   0x41
#define SMM665_VO_CTRL_MARGIN_LO_REG_CH_B_R0   0x42
#define SMM665_VO_CTRL_MARGIN_LO_REG_CH_B_R1   0x43
#define SMM665_VO_CTRL_MARGIN_LO_REG_CH_C_R0   0x44
#define SMM665_VO_CTRL_MARGIN_LO_REG_CH_C_R1   0x45
#define SMM665_VO_CTRL_MARGIN_LO_REG_CH_D_R0   0x46
#define SMM665_VO_CTRL_MARGIN_LO_REG_CH_D_R1   0x47
#define SMM665_VO_CTRL_MARGIN_LO_REG_CH_E_R0   0x48
#define SMM665_VO_CTRL_MARGIN_LO_REG_CH_E_R1   0x49
#define SMM665_VO_CTRL_MARGIN_LO_REG_CH_F_R0   0x4A
#define SMM665_VO_CTRL_MARGIN_LO_REG_CH_F_R1   0x4B

/* Regulator output fast convergence and trim polarity */
#define SMM665_ROC_CONTROL_REG 0x0C
#define SMM665_ROC_12VIN_AT_5_5V                 0x80
#define SMM665_ROC_12VIN_AT_3_6V                 0x00
#define SMM665_ROC_FAST_CONVERGE                 0x40
#define SMM665_ROC_CH_F_TRIM_POL_INVERSE         0x20
#define SMM665_ROC_CH_E_TRIM_POL_INVERSE         0x10
#define SMM665_ROC_CH_D_TRIM_POL_INVERSE         0x08
#define SMM665_ROC_CH_C_TRIM_POL_INVERSE         0x04
#define SMM665_ROC_CH_B_TRIM_POL_INVERSE         0x02
#define SMM665_ROC_CH_A_TRIM_POL_INVERSE         0x01

/* Config */
#define SMM665_CONFIG_CONTROL_REG    0xD
#define SMM665_CONFIG_CFG_LOCKED                 0x80
#define SMM665_CONFIG_WAIT_TEMP_IN_LIMITS        0x40
#define SMM665_CONFIG_CH_F_ADOC_ENABLED          0x20
#define SMM665_CONFIG_CH_E_ADOC_ENABLED          0x10
#define SMM665_CONFIG_CH_D_ADOC_ENABLED          0x08
#define SMM665_CONFIG_CH_C_ADOC_ENABLED          0x04
#define SMM665_CONFIG_CH_B_ADOC_ENABLED          0x02
#define SMM665_CONFIG_CH_A_ADOC_ENABLED          0x01
#define SMM665_CONFIG_CH_ALL_ADOC_ENABLED        0x3F


/* Sequence, Termination Control */
#define SMM665_ADDR_TIMER_CONTROL_REG         0xE
#define SMM665_SEQ_TERM_TIMEOUT_400MS         0xC0
#define SMM665_SEQ_TERM_TIMEOUT_200MS         0x80
#define SMM665_SEQ_TERM_TIMEOUT_100MS         0x40
#define SMM665_SEQ_TERM_TIMEOUT_OFF           0x00
#define SMM665_RESET_TIMEOUT_400MS            0x30
#define SMM665_RESET_TIMEOUT_200MS            0x20
#define SMM665_RESET_TIMEOUT_100MS            0x10
#define SMM665_RESET_TIMEOUT_OFF              0x00

/* Slave address config same register as above 
 * Slave address 7 bits: [MSB=0xYYYY] [LSB=A2 A1 A0] 
 */
#define SMM665_SLAVE_ADDR_MSB_1010            0x0
#define SMM665_SLAVE_ADDR_MSB_1011            0x8 
#define SMM665_SLAVE_ADDR_MSB_POS             0x4 
#define SMM665_SLAVE_ADDR_LSB_A2_LATCH        0x4
#define SMM665_SLAVE_ADDR_A2_POS              0x2 
#define SMM665_SLAVE_ADDR_LSB_A1_1            0x2
#define SMM665_SLAVE_ADDR_A1_POS              0x1 
#define SMM665_SLAVE_ADDR_LSB_A0_1            0x1

/* Assume A2 is 0, its ignored here */
#define SMM665_SLAVE_ADDR(x)  \
                   (((((x) >> 3) & 1) << SMM665_SLAVE_ADDR_MSB_POS) |   \
                    ((((x) >> 1) & 1) << SMM665_SLAVE_ADDR_A1_POS)  |   \
                      ((x) & 1 ))

/* Get the A2 bit from the pin */
#define SMM665_SLAVE_LATCHED_ADD(x)  \
           (SMM665_SLAVE_ADDR_LSB_A2_LATCH) |   \
           (((((x) >> 3) & 1) << SMM665_SLAVE_ADDR_MSB_POS) |      \
            ((((x) >> 1) & 1) << SMM665_SLAVE_ADDR_A1_POS)  |      \
              ((x) & 1 ))




/* Control Register */
#define SMM665_CONTROL_REG 0x0F

#define SMM665_CONTROL_REG_INTERNAL_REF          0x80
#define SMM665_CONTROL_REG_EXTERNAL_REF          0x00
#define SMM665_CONTROL_REG_COMMAND_MODE          0x40
#define SMM665_CONTROL_REG_AUTOMON_AFTER_SEQ     0x20
#define SMM665_CONTROL_REG_AUTOMON_AFTER_CONV    0x00
#define SMM665_CONTROL_REG_POWER_OFF_INORDER     0x10 
#define SMM665_CONTROL_REG_POWER_OFF_REVERSE     0x00 
#define SMM665_CONTROL_REG_RESTART_AFTER_FS      0x08
#define SMM665_CONTROL_REG_SEQ_TERM_OK_PWR_OFF   0x04
#define SMM665_CONTROL_REG_WAIT_12VDIN_IN_LIMITS 0x02
#define SMM665_CONTROL_REG_WAIT_VDD_IN_LIMITS    0x01

#define SMM665_CONTROL_REG_DEFAULT_SETTINGS (SMM665_CONTROL_REG_INTERNAL_REF)

/* Sequencing */
#define SMM665_SEQUENCING_REG_CH_A           0x10
#define SMM665_SEQUENCING_REG_CH_B           0x11
#define SMM665_SEQUENCING_REG_CH_C           0x12
#define SMM665_SEQUENCING_REG_CH_D           0x13
#define SMM665_SEQUENCING_REG_CH_E           0x14
#define SMM665_SEQUENCING_REG_CH_F           0x15

#define SMM665_SEQUENCING_ENABLE             0x80
#define SMM665_SEQEUNCING_DISABLE            0x00
#define SMM665_SEQUENCING_POS_1              0x10
#define SMM665_SEQUENCING_POS_2              0x20
#define SMM665_SEQUENCING_POS_3              0x30
#define SMM665_SEQUENCING_POS_4              0x40
#define SMM665_SEQUENCING_POS_5              0x50
#define SMM665_SEQEUNCING_NOT_ALLOWED        0x70
#define SMM665_SEQUENCING_PWR_ON_DLY_5MS     0x0C
#define SMM665_SEQUENCING_PWR_ON_DLY_25MS    0x08
#define SMM665_SEQUENCING_PWR_ON_DLY_12_5MS  0x04
#define SMM665_SEQUENCING_PWR_ON_DLY_0_64MS  0x00
#define SMM665_SEQUENCING_PWR_OFF_DLY_5MS    0x03
#define SMM665_SEQUENCING_PWR_OFF_DLY_25MS   0x02
#define SMM665_SEQUENCING_PWR_OFF_DLY_12_5MS 0x01
#define SMM665_SEQUENCING_PWR_OFF_DLY_0_64MS 0x00

/* Commands */
#define SMM665_COMMAND_REG     0x18
#define SMM665_COMMAND_REG_R1  0x19

#define SMM665_COMMAND_NOMINAL          0x0
#define SMM665_COMMAND_MARGIN_LOW       0x2
#define SMM665_COMMAND_MARGIN_HIGH      0x3
#define SMM665_COMMAND_MASK             0x3

#define SMM665_COMMAND_CH_A_POS         12
#define SMM665_COMMAND_CH_B_POS         10
#define SMM665_COMMAND_CH_C_POS         8
#define SMM665_COMMAND_CH_D_POS         4
#define SMM665_COMMAND_CH_E_POS         2
#define SMM665_COMMAND_CH_F_POS         0

#define SMM665_COMMAND_CH_A_NOMINAL      \
         (SMM665_COMMAND_NOMINAL     << SMM665_COMMAND_CH_A_POS)
#define SMM665_COMMAND_CH_A_MARGIN_HIGH  \
         (SMM665_COMMAND_MARGIN_HIGH << SMM665_COMMAND_CH_A_POS)
#define SMM665_COMMAND_CH_A_MARGIN_LOW   \
         (SMM665_COMMAND_MARGIN_LOW  << SMM665_COMMAND_CH_A_POS)

#define SMM665_COMMAND_CH_B_NOMINAL      \
         (SMM665_COMMAND_NOMINAL     << SMM665_COMMAND_CH_B_POS)
#define SMM665_COMMAND_CH_B_MARGIN_HIGH  \
         (SMM665_COMMAND_MARGIN_HIGH << SMM665_COMMAND_CH_B_POS)
#define SMM665_COMMAND_CH_B_MARGIN_LOW   \
         (SMM665_COMMAND_MARGIN_LOW  << SMM665_COMMAND_CH_B_POS)

#define SMM665_COMMAND_CH_C_NOMINAL     \
         (SMM665_COMMAND_NOMINAL     << SMM665_COMMAND_CH_C_POS)
#define SMM665_COMMAND_CH_C_MARGIN_HIGH  \
         (SMM665_COMMAND_MARGIN_HIGH << SMM665_COMMAND_CH_C_POS)
#define SMM665_COMMAND_CH_C_MARGIN_LOW   \
         (SMM665_COMMAND_MARGIN_LOW  << SMM665_COMMAND_CH_C_POS)

#define SMM665_COMMAND_CH_D_NOMINAL     \
         (SMM665_COMMAND_NOMINAL     << SMM665_COMMAND_CH_D_POS)
#define SMM665_COMMAND_CH_D_MARGIN_HIGH  \
         (SMM665_COMMAND_MARGIN_HIGH << SMM665_COMMAND_CH_D_POS)
#define SMM665_COMMAND_CH_D_MARGIN_LOW   \
         (SMM665_COMMAND_MARGIN_LOW  << SMM665_COMMAND_CH_D_POS)

#define SMM665_COMMAND_CH_E_NOMINAL      \
          (SMM665_COMMAND_NOMINAL     << SMM665_COMMAND_CH_E_POS)
#define SMM665_COMMAND_CH_E_MARGIN_HIGH  \
          (SMM665_COMMAND_MARGIN_HIGH << SMM665_COMMAND_CH_E_POS)
#define SMM665_COMMAND_CH_E_MARGIN_LOW   \
          (SMM665_COMMAND_MARGIN_LOW  << SMM665_COMMAND_CH_E_POS)

#define SMM665_COMMAND_CH_F_NOMINAL     \
         (SMM665_COMMAND_NOMINAL     << SMM665_COMMAND_CH_F_POS)
#define SMM665_COMMAND_CH_F_MARGIN_HIGH  \
         (SMM665_COMMAND_MARGIN_HIGH << SMM665_COMMAND_CH_F_POS)
#define SMM665_COMMAND_CH_F_MARGIN_LOW   \
         (SMM665_COMMAND_MARGIN_LOW  << SMM665_COMMAND_CH_F_POS)


/*  Error Coeffecients */
#define SMM665_ERR_COEF_REG_MULT_0_75      0x2A
#define SMM665_ERR_COEF_REG_MULT_0_75_R1   0x2B
#define SMM665_ERR_COEF_REG_MULT_0_50      0x2C
#define SMM665_ERR_COEF_REG_MULT_0_50_R1   0x2D
#define SMM665_ERR_COEF_REG_MULT_0_25      0x2E
#define SMM665_ERR_COEF_REG_MULT_0_25_R1   0x2F


#define SMM665_ERR_COEF_NEGATIVE_BIAS      0x8000

#define SMM665_ERR_COEF_PERCENT_MASK             0x7000
#define SMM665_ERR_COEF_PERCENT_SHIFT            12

#define SMM665_ERR_COEF_TENTH_PERCENT_MASK       0x0F00
#define SMM665_ERR_COEF_TENTH_PERCENT_SHIFT       8

#define SMM665_ERR_COEF_HUNDREDTH_PERCENT_MASK   0x00F0
#define SMM665_ERR_COEF_HUNDREDTH_PERCENT_SHIFT   4

#define SMM665_ERR_COEF_THOUSANDTH_PERCENT_MASK  0x000F
#define SMM665_ERR_COEF_THOUSANDTH_PERCENT_SHIFT  0


#define SMM665_ERR_COEF_VREF_CTRL(vref, coef) ((vref) * (1 + (coef) / 1000))

/* OverVoltage , UnderVoltage and Triggers */
#define SMM665_LIMIT_REG_CH_A_UV1          0x80
#define SMM665_LIMIT_REG_CH_A_UV1_R1       0x81
#define SMM665_LIMIT_REG_CH_A_UV2          0x82
#define SMM665_LIMIT_REG_CH_A_UV2_R1       0x83
#define SMM665_LIMIT_REG_CH_A_OV1          0x84
#define SMM665_LIMIT_REG_CH_A_OV1_R1       0x85
#define SMM665_LIMIT_REG_CH_A_OV2          0x86
#define SMM665_LIMIT_REG_CH_A_OV2_R1       0x87


#define SMM665_LIMIT_REG_CH_B_UV1          0x88
#define SMM665_LIMIT_REG_CH_B_UV1_R1       0x89
#define SMM665_LIMIT_REG_CH_B_UV2          0x8A
#define SMM665_LIMIT_REG_CH_B_UV2_R1       0x8B
#define SMM665_LIMIT_REG_CH_B_OV1          0x8C
#define SMM665_LIMIT_REG_CH_B_OV1_R1       0x8D
#define SMM665_LIMIT_REG_CH_B_OV2          0x8E
#define SMM665_LIMIT_REG_CH_B_OV2_R1       0x8F

#define SMM665_LIMIT_REG_CH_C_UV1          0x90
#define SMM665_LIMIT_REG_CH_C_UV1_R1       0x91
#define SMM665_LIMIT_REG_CH_C_UV2          0x92
#define SMM665_LIMIT_REG_CH_C_UV2_R1       0x93
#define SMM665_LIMIT_REG_CH_C_OV1          0x94
#define SMM665_LIMIT_REG_CH_C_OV1_R1       0x95
#define SMM665_LIMIT_REG_CH_C_OV2          0x96
#define SMM665_LIMIT_REG_CH_C_OV2_R1       0x97

#define SMM665_LIMIT_REG_CH_D_UV1          0x98
#define SMM665_LIMIT_REG_CH_D_UV1_R1       0x99
#define SMM665_LIMIT_REG_CH_D_UV2          0x9A
#define SMM665_LIMIT_REG_CH_D_UV2_R1       0x9B
#define SMM665_LIMIT_REG_CH_D_OV1          0x9C
#define SMM665_LIMIT_REG_CH_D_OV1_R1       0x9D
#define SMM665_LIMIT_REG_CH_D_OV2          0x9E
#define SMM665_LIMIT_REG_CH_D_OV2_R1       0x9F

#define SMM665_LIMIT_REG_CH_E_UV1          0xA0
#define SMM665_LIMIT_REG_CH_E_UV1_R1       0xA1
#define SMM665_LIMIT_REG_CH_E_UV2          0xA2
#define SMM665_LIMIT_REG_CH_E_UV2_R1       0xA3
#define SMM665_LIMIT_REG_CH_E_OV1          0xA4
#define SMM665_LIMIT_REG_CH_E_OV1_R1       0xA5
#define SMM665_LIMIT_REG_CH_E_OV2          0xA6
#define SMM665_LIMIT_REG_CH_E_OV2_R1       0xA7

#define SMM665_LIMIT_REG_CH_F_UV1          0xA8
#define SMM665_LIMIT_REG_CH_F_UV1_R1       0xA9
#define SMM665_LIMIT_REG_CH_F_UV2          0xAA
#define SMM665_LIMIT_REG_CH_F_UV2_R1       0xAB
#define SMM665_LIMIT_REG_CH_F_OV1          0xAC
#define SMM665_LIMIT_REG_CH_F_OV1_R1       0xAD
#define SMM665_LIMIT_REG_CH_F_OV2          0xAE
#define SMM665_LIMIT_REG_CH_F_OV2_R1       0xAF

#define SMM665_LIMIT_REG_VDD_UV1          0xB0
#define SMM665_LIMIT_REG_VDD_UV1_R1       0xB1
#define SMM665_LIMIT_REG_VDD_UV2          0xB2
#define SMM665_LIMIT_REG_VDD_UV2_R1       0xB3

#define SMM665_LIMIT_REG_VDD_OV1          0xB4
#define SMM665_LIMIT_REG_VDD_OV1_R1       0xB5
#define SMM665_LIMIT_REG_VDD_OV2          0xB6
#define SMM665_LIMIT_REG_VDD_OV2_R1       0xB7

#define SMM665_LIMIT_REG_12VDIN_UV1       0xB8
#define SMM665_LIMIT_REG_12VDIN_UV1_R1    0xB9
#define SMM665_LIMIT_REG_12VDIN_UV2       0xBA
#define SMM665_LIMIT_REG_12VDIN_UV2_R1    0xBB

#define SMM665_LIMIT_REG_12VDIN_OV1       0xBC
#define SMM665_LIMIT_REG_12VDIN_OV1_R1    0xBD
#define SMM665_LIMIT_REG_12VDIN_OV2       0xBE
#define SMM665_LIMIT_REG_12VDIN_OV2_R1    0xBF

/* Analog and Internal Temp sensor limits */
#define SMM665_LIMIT_REG_TEMP_UT1       0xC0
#define SMM665_LIMIT_REG_TEMP_UT1_R1    0xC1
#define SMM665_LIMIT_REG_TEMP_UT2       0xC2
#define SMM665_LIMIT_REG_TEMP_UT2_R1    0xC3

#define SMM665_LIMIT_REG_TEMP_OT1       0xC4
#define SMM665_LIMIT_REG_TEMP_OT1_R1    0xC5
#define SMM665_LIMIT_REG_TEMP_OT2       0xC6
#define SMM665_LIMIT_REG_TEMP_OT2_R1    0xC7

#define SMM665_LIMIT_REG_AIN1_UV1       0xC8
#define SMM665_LIMIT_REG_AIN1_UV1_R1    0xC9
#define SMM665_LIMIT_REG_AIN1_UV2       0xCA
#define SMM665_LIMIT_REG_AIN1_UV2_R1    0xCB
#define SMM665_LIMIT_REG_AIN1_OV1       0xCC
#define SMM665_LIMIT_REG_AIN1_OV1_R1    0xCD
#define SMM665_LIMIT_REG_AIN1_OV2       0xCE
#define SMM665_LIMIT_REG_AIN1_OV2_R1    0xCF

#define SMM665_LIMIT_REG_AIN2_UV1       0xD0
#define SMM665_LIMIT_REG_AIN2_UV1_R1    0xD1
#define SMM665_LIMIT_REG_AIN2_UV2       0xD2
#define SMM665_LIMIT_REG_AIN2_UV2_R1    0xD3
#define SMM665_LIMIT_REG_AIN2_OV1       0xD4
#define SMM665_LIMIT_REG_AIN2_OV1_R1    0xD5
#define SMM665_LIMIT_REG_AIN2_OV2       0xD6
#define SMM665_LIMIT_REG_AIN2_OV2_R1    0xD7

/* OFF limits */
#define SMM665_OFF_LIMIT_REG_CH_A       0xE0
#define SMM665_OFF_LIMIT_REG_CH_A_R1    0xE1
#define SMM665_OFF_LIMIT_REG_CH_B       0xE2
#define SMM665_OFF_LIMIT_REG_CH_B_R1    0xE3
#define SMM665_OFF_LIMIT_REG_CH_C       0xE4
#define SMM665_OFF_LIMIT_REG_CH_C_R1    0xE5
#define SMM665_OFF_LIMIT_REG_CH_D       0xE6
#define SMM665_OFF_LIMIT_REG_CH_D_R1    0xE7
#define SMM665_OFF_LIMIT_REG_CH_E       0xE8
#define SMM665_OFF_LIMIT_REG_CH_E_R1    0xE9
#define SMM665_OFF_LIMIT_REG_CH_F       0xEA
#define SMM665_OFF_LIMIT_REG_CH_F_R1    0xEB


/* Command and Status at Volatile region 0x4X */
#define SMM665_COMMAND_STATUS_REG 0x80

#define SMM665_COMMAND_POWER_ON         0x80
#define SMM665_COMMAND_POWER_OFF        0x40
#define SMM665_COMMAND_FORCE_SHUTDOWN   0x20
#define SMM665_STATUS_ALL_SEQ_ON        0x08
#define SMM665_STATUS_ALL_SEQ_OFF       0x04

#define SMM665_DEVICE_STATUS_REG    0x81
#define SMM665_STATUS_LAST_SEQ_TERM      0x8000
#define SMM665_STATUS_LAST_SEQ_POS_MASK  0x7000
#define SMM665_STATUS_LAST_SEQ_POS_SHIFT 12
#define SMM665_STATUS_LAST_SEQ_POS(r)    \
             (((r) & SMM665_STATUS_LAST_SEQ_POS_MASK) \
                 >> SMM665_STATUS_LAST_SEQ_POS_SHIFT)
#define SMM665_STATUS_AIN2_FAULT         0x0004
#define SMM665_STATUS_AIN1_FAULT         0x0002
#define SMM665_STATUS_TEMP_SENSOR_FAULT  0x0001

#define SMM665_STATUS_R1_12VIN_FAULT   0x80
#define SMM665_STATUS_R1_VDD_FAULT     0x40
#define SMM665_STATUS_R1_CH_F_FAULT    0x20
#define SMM665_STATUS_R1_CH_E_FAULT    0x10
#define SMM665_STATUS_R1_CH_D_FAULT    0x08
#define SMM665_STATUS_R1_CH_C_FAULT    0x40
#define SMM665_STATUS_R1_CH_B_FAULT    0x20
#define SMM665_STATUS_R1_CH_A_FAULT    0x01

/* Polarity */
#define SMM665_POLARITY_REG   0x83

#define SMM665_POLARITY_HEALTHY_ACTIVE_HI     0x20
#define SMM665_POLARITY_FAULT_ACTIVE_HI       0x10
#define SMM665_POLARITY_RESET_ACTIVE_HI       0x08
#define SMM665_POLARITY_MR_ACTIVE_HI          0x04
#define SMM665_POLARITY_PWR_ONOFF_ACTIVE_HI   0x02
#define SMM665_POLARITY_FORCE_SHUT_ACTIVE_HI  0x01

/* PUP Polarities */
#define SMM665_PUP_POLARITY_REG 0x84

#define SMM665_PUP_CH_F_ACTIVE_HI    0x20
#define SMM665_PUP_CH_E_ACTIVE_HI    0x10
#define SMM665_PUP_CH_D_ACTIVE_HI    0x08
#define SMM665_PUP_CH_C_ACTIVE_HI    0x04
#define SMM665_PUP_CH_B_ACTIVE_HI    0x02
#define SMM665_PUP_CH_A_ACTIVE_HI    0x01

/* ADOC Status */
#define SMM665_ADOC_STATUS_REG   0x85

#define SMM665_ADOC_READY                 0x8080
#define SMM665_ADOC_CH_STATUS             0x3F3F
#define SMM665_ADOC_CH_A_MARGIN_HIGH      0x3000
#define SMM665_ADOC_CH_A_MARGIN_LOW       0x2000
#define SMM665_ADOC_CH_B_MARGIN_HIGH      0x0C00
#define SMM665_ADOC_CH_B_MARGIN_LOW       0x0800
#define SMM665_ADOC_CH_C_MARGIN_HIGH      0x0300
#define SMM665_ADOC_CH_C_MARGIN_LOW       0x0200

#define SMM665_ADOC_CH_D_MARGIN_HIGH      0x0030
#define SMM665_ADOC_CH_D_MARGIN_LOW       0x0020
#define SMM665_ADOC_CH_E_MARGIN_HIGH      0x000C
#define SMM665_ADOC_CH_E_MARGIN_LOW       0x0008
#define SMM665_ADOC_CH_F_MARGIN_HIGH      0x0003
#define SMM665_ADOC_CH_F_MARGIN_LOW       0x0002

/* ADC */
#define SMM665_ADC_CH_A         0x00
#define SMM665_ADC_CH_B         0x08
#define SMM665_ADC_CH_C         0x10
#define SMM665_ADC_CH_D         0x18
#define SMM665_ADC_CH_E         0x20
#define SMM665_ADC_CH_F         0x28
#define SMM665_ADC_CH_VDD       0x30
#define SMM665_ADC_CH_12VIN     0x38
#define SMM665_ADC_CH_INT_TEMP  0x40
#define SMM665_ADC_CH_AIN1      0x48
#define SMM665_ADC_CH_AIN2      0x50
#define SMM665_ADC_CH_MASK      0xF8

#define SMM665_ADC_DELAY 182   /* usecs */

#define SMM665_WRITE_PROTECT_REG 0x87
#define SMM665_LOCK         0xAA
#define SMM665_UNLOCK       0x55
#define SMM665_LOCK_CFG     0x0A
#define SMM665_UNLOCK_CFG   0x05
#define SMM665_LOCK_MEM     0xA0
#define SMM665_UNLOCK_MEM   0x50


/* I2C IOCTL CMDS */

#define I2C_SMM_DEVICE_STATUS_GET       0xF000
#define I2C_SMM_CHANNEL_STATUS_GET      0xF001
#define I2C_SMM_CHANNEL_VOLTAGE_GET     0xF002
#define I2C_SMM_INT_TEMP_GET            0xF003
#define I2C_SMM_CFG_MARGIN_HIGH         0xF004
#define I2C_SMM_CFG_MARGIN_LOW          0xF005
#define I2C_SMM_CFG_NOMINAL             0xF006
#define I2C_SMM_SET_MARGIN_HIGH         0xF007
#define I2C_SMM_SET_MARGIN_LOW          0xF008
#define I2C_SMM_SET_NOMINAL             0xF009
#define I2C_SMM_SET_ADC_DELAY           0xF00A

typedef struct i2c_smm665_s {
    char name[64];    /* Channel name */
    int  value;
    int  flags;
} i2c_smm655_t;

