/* $Id: $
 * 
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 * search for 'sw_state_cbs_t' for the root of the struct
 */

#ifndef _SHR_SW_STATE_MINIEXM_ACCESS_H_
#define _SHR_SW_STATE_MINIEXM_ACCESS_H_

/********************************* access calbacks definitions *************************************/
/* this set of callbacks, are the callbacks used in the access calbacks struct 'sw_state_cbs_t' to */
/* access the data in 'sw_state_t'.                                                                */
/* the calbacks are inserted into the access struct by 'sw_state_access_cb_init'.                  */
/***************************************************************************************************/

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_alloc */
typedef int (*sw_state_miniExm_alloc_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_is_allocated */
typedef int (*sw_state_miniExm_is_allocated_cb)(
    int unit, uint8 *is_allocated);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_free */
typedef int (*sw_state_miniExm_free_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_verify */
typedef int (*sw_state_miniExm_verify_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regular_set */
typedef int (*sw_state_miniExm_regular_set_cb)(
    int unit, int regular);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regular_get */
typedef int (*sw_state_miniExm_regular_get_cb)(
    int unit, int *regular);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regular_verify */
typedef int (*sw_state_miniExm_regular_verify_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_singlePtr_set */
typedef int (*sw_state_miniExm_singlePtr_set_cb)(
    int unit, int singlePtr);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_singlePtr_get */
typedef int (*sw_state_miniExm_singlePtr_get_cb)(
    int unit, int *singlePtr);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_singlePtr_alloc */
typedef int (*sw_state_miniExm_singlePtr_alloc_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_singlePtr_is_allocated */
typedef int (*sw_state_miniExm_singlePtr_is_allocated_cb)(
    int unit, uint8 *is_allocated);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_singlePtr_free */
typedef int (*sw_state_miniExm_singlePtr_free_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_singlePtr_verify */
typedef int (*sw_state_miniExm_singlePtr_verify_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_staticArr_set */
typedef int (*sw_state_miniExm_staticArr_set_cb)(
    int unit, int staticArr_idx_0, int staticArr);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_staticArr_get */
typedef int (*sw_state_miniExm_staticArr_get_cb)(
    int unit, int staticArr_idx_0, int *staticArr);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_staticArr_verify */
typedef int (*sw_state_miniExm_staticArr_verify_cb)(
    int unit, int staticArr_idx_0);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_staticArrArr_set */
typedef int (*sw_state_miniExm_staticArrArr_set_cb)(
    int unit, int staticArrArr_idx_0, int staticArrArr_idx_1, int staticArrArr);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_staticArrArr_get */
typedef int (*sw_state_miniExm_staticArrArr_get_cb)(
    int unit, int staticArrArr_idx_0, int staticArrArr_idx_1, int *staticArrArr);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_staticArrArr_verify */
typedef int (*sw_state_miniExm_staticArrArr_verify_cb)(
    int unit, int staticArrArr_idx_0, int staticArrArr_idx_1);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_ptrVar_set */
typedef int (*sw_state_miniExm_ptrVar_set_cb)(
    int unit, int ptrVar);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_ptrVar_get */
typedef int (*sw_state_miniExm_ptrVar_get_cb)(
    int unit, int *ptrVar);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_ptrVar_alloc */
typedef int (*sw_state_miniExm_ptrVar_alloc_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_ptrVar_is_allocated */
typedef int (*sw_state_miniExm_ptrVar_is_allocated_cb)(
    int unit, uint8 *is_allocated);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_ptrVar_free */
typedef int (*sw_state_miniExm_ptrVar_free_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_ptrVar_verify */
typedef int (*sw_state_miniExm_ptrVar_verify_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrVar_set */
typedef int (*sw_state_miniExm_arrVar_set_cb)(
    int unit, int arrVar_idx_0, int arrVar);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrVar_get */
typedef int (*sw_state_miniExm_arrVar_get_cb)(
    int unit, int arrVar_idx_0, int *arrVar);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrVar_alloc */
typedef int (*sw_state_miniExm_arrVar_alloc_cb)(
    int unit, int nof_instances_to_alloc);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrVar_is_allocated */
typedef int (*sw_state_miniExm_arrVar_is_allocated_cb)(
    int unit, uint8 *is_allocated);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrVar_free */
typedef int (*sw_state_miniExm_arrVar_free_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrVar_verify */
typedef int (*sw_state_miniExm_arrVar_verify_cb)(
    int unit, int arrVar_idx_0);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrArr_set */
typedef int (*sw_state_miniExm_arrArr_set_cb)(
    int unit, int arrArr_idx_0, int arrArr_idx_1, int arrArr);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrArr_get */
typedef int (*sw_state_miniExm_arrArr_get_cb)(
    int unit, int arrArr_idx_0, int arrArr_idx_1, int *arrArr);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrArr_alloc */
typedef int (*sw_state_miniExm_arrArr_alloc_cb)(
    int unit, int arrArr_idx_0, int nof_instances_to_alloc);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrArr_is_allocated */
typedef int (*sw_state_miniExm_arrArr_is_allocated_cb)(
    int unit, int arrArr_idx_0, uint8 *is_allocated);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrArr_free */
typedef int (*sw_state_miniExm_arrArr_free_cb)(
    int unit, int arrArr_idx_0);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrArr_ptr_alloc */
typedef int (*sw_state_miniExm_arrArr_ptr_alloc_cb)(
    int unit, int nof_instances_to_alloc);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrArr_ptr_free */
typedef int (*sw_state_miniExm_arrArr_ptr_free_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrArr_verify */
typedef int (*sw_state_miniExm_arrArr_verify_cb)(
    int unit, int arrArr_idx_0, int arrArr_idx_1);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrPtr_set */
typedef int (*sw_state_miniExm_arrPtr_set_cb)(
    int unit, int arrPtr_idx_0, int arrPtr);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrPtr_get */
typedef int (*sw_state_miniExm_arrPtr_get_cb)(
    int unit, int arrPtr_idx_0, int *arrPtr);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrPtr_alloc */
typedef int (*sw_state_miniExm_arrPtr_alloc_cb)(
    int unit, int arrPtr_idx_0);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrPtr_is_allocated */
typedef int (*sw_state_miniExm_arrPtr_is_allocated_cb)(
    int unit, int arrPtr_idx_0, uint8 *is_allocated);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrPtr_free */
typedef int (*sw_state_miniExm_arrPtr_free_cb)(
    int unit, int arrPtr_idx_0);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrPtr_ptr_alloc */
typedef int (*sw_state_miniExm_arrPtr_ptr_alloc_cb)(
    int unit, int nof_instances_to_alloc);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrPtr_ptr_free */
typedef int (*sw_state_miniExm_arrPtr_ptr_free_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_arrPtr_verify */
typedef int (*sw_state_miniExm_arrPtr_verify_cb)(
    int unit, int arrPtr_idx_0);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_alloc_bitmap */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_alloc_bitmap_cb)(
    int unit, int _nof_bits_to_alloc);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_free */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_free_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_set */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_set_cb)(
    int unit, int _bit_num);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_clear */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_clear_cb)(
    int unit, int _bit_num);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_get */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_get_cb)(
    int unit, int _bit_num, uint8* result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_read */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_read_cb)(
    int unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_write */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_write_cb)(
    int unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_and */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_and_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_or */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_or_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_xor */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_xor_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_remove */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_remove_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_negate */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_negate_cb)(
    int unit, int _first, int _count);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_clear */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_clear_cb)(
    int unit, int _first, int _count);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_set */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_set_cb)(
    int unit, int _first, int _count);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_null */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_null_cb)(
    int unit, int _first, int _count, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_test */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_test_cb)(
    int unit, int _first, int _count, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_eq */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_eq_cb)(
    int unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_count */
typedef int (*sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_count_cb)(
    int unit, int _first, int _range, int *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_alloc_bitmap */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_alloc_bitmap_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _nof_bits_to_alloc);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_free */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_free_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_ptr_alloc */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_ptr_alloc_cb)(
    int unit, int nof_instances_to_alloc);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_ptr_free */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_ptr_free_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_set */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_set_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _bit_num);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_clear */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_clear_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _bit_num);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_get */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_get_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _bit_num, uint8* result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_read */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_read_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_write */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_write_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_and */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_and_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_or */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_or_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_xor */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_xor_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_remove */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_remove_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_negate */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_negate_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _first, int _count);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_clear */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_clear_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _first, int _count);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_set */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_set_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _first, int _count);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_null */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_null_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _first, int _count, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_test */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_test_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _first, int _count, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_eq */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_eq_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_count */
typedef int (*sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_count_cb)(
    int unit, int shr_bitdcl_doublePtr_idx_0, int _first, int _range, int *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_set */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_set_cb)(
    int unit, int _bit_num);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_clear */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_clear_cb)(
    int unit, int _bit_num);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_get */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_get_cb)(
    int unit, int _bit_num, uint8* result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_read */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_read_cb)(
    int unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_write */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_write_cb)(
    int unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_and */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_and_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_or */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_or_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_xor */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_xor_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_remove */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_remove_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_negate */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_negate_cb)(
    int unit, int _first, int _count);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_clear */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_clear_cb)(
    int unit, int _first, int _count);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_set */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_set_cb)(
    int unit, int _first, int _count);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_null */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_null_cb)(
    int unit, int _first, int _count, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_test */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_test_cb)(
    int unit, int _first, int _count, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_eq */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_eq_cb)(
    int unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_bit_range_count */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_bit_range_count_cb)(
    int unit, int _first, int _range, int *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_staticArr_verify */
typedef int (*sw_state_miniExm_shr_bitdcl_staticArr_verify_cb)(
    int unit, int shr_bitdcl_staticArr_idx_0);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_set */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_set_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _bit_num);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_clear */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_clear_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _bit_num);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_get */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_get_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _bit_num, uint8* result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_read */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_read_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_write */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_write_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_and */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_and_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_or */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_or_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_xor */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_xor_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_remove */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_remove_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_negate */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_negate_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _first, int _count);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_clear */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_clear_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _first, int _count);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_set */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_set_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _first, int _count);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_null */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_null_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _first, int _count, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_test */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_test_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _first, int _count, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_eq */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_eq_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_count */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_count_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int _first, int _range, int *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_shr_bitdcl_double_staticArr_verify */
typedef int (*sw_state_miniExm_shr_bitdcl_double_staticArr_verify_cb)(
    int unit, int shr_bitdcl_double_staticArr_idx_0, int shr_bitdcl_double_staticArr_idx_1);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_buff_set */
typedef int (*sw_state_miniExm_buff_set_cb)(
    int unit, int buff_idx_0, SW_STATE_BUFF buff);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_buff_get */
typedef int (*sw_state_miniExm_buff_get_cb)(
    int unit, int buff_idx_0, SW_STATE_BUFF *buff);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_buff_alloc */
typedef int (*sw_state_miniExm_buff_alloc_cb)(
    int unit, int _nof_bytes_to_alloc);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_buff_is_allocated */
typedef int (*sw_state_miniExm_buff_is_allocated_cb)(
    int unit, uint8 *is_allocated);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_buff_free */
typedef int (*sw_state_miniExm_buff_free_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_buff_memread */
typedef int (*sw_state_miniExm_buff_memread_cb)(
    int unit, uint8 *_dst, int _offset, size_t _len);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_buff_memwrite */
typedef int (*sw_state_miniExm_buff_memwrite_cb)(
    int unit, const uint8 *_src, int _offset, size_t _len);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_buff_memcmp */
typedef int (*sw_state_miniExm_buff_memcmp_cb)(
    int unit, const uint8 *_buff, int _offset, size_t _len, int *cmp_result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_buff_memset */
typedef int (*sw_state_miniExm_buff_memset_cb)(
    int unit, int _offset, size_t _len, int _value);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_buff_verify */
typedef int (*sw_state_miniExm_buff_verify_cb)(
    int unit, int buff_idx_0);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_set */
typedef int (*sw_state_miniExm_regularPbmp_set_cb)(
    int unit, bcm_pbmp_t regularPbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_get */
typedef int (*sw_state_miniExm_regularPbmp_get_cb)(
    int unit, bcm_pbmp_t *regularPbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_neq */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_neq_cb)(
    int unit, _shr_pbmp_t input_pbmp, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_eq */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_eq_cb)(
    int unit, _shr_pbmp_t input_pbmp, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_member */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_member_cb)(
    int unit, int _input_port, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_not_null */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_not_null_cb)(
    int unit, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_is_null */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_is_null_cb)(
    int unit, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_count */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_count_cb)(
    int unit, int *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_xor */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_xor_cb)(
    int unit, _shr_pbmp_t input_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_remove */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_remove_cb)(
    int unit, _shr_pbmp_t input_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_assign */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_assign_cb)(
    int unit, _shr_pbmp_t input_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_get */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_get_cb)(
    int unit, _shr_pbmp_t *output_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_and */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_and_cb)(
    int unit, _shr_pbmp_t input_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_negate */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_negate_cb)(
    int unit, _shr_pbmp_t input_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_or */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_or_cb)(
    int unit, _shr_pbmp_t input_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_clear */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_clear_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_port_add */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_port_add_cb)(
    int unit, int _input_port);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_port_flip */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_port_flip_cb)(
    int unit, int _input_port);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_port_remove */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_port_remove_cb)(
    int unit, int _input_port);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_port_set */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_port_set_cb)(
    int unit, int _input_port);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_ports_range_add */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_ports_range_add_cb)(
    int unit, int _first_port, int _range);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_pbmp_fmt */
typedef int (*sw_state_miniExm_regularPbmp_pbmp_fmt_cb)(
    int unit, char* _buffer);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_regularPbmp_verify */
typedef int (*sw_state_miniExm_regularPbmp_verify_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_set */
typedef int (*sw_state_miniExm_pbmpPtr_set_cb)(
    int unit, bcm_pbmp_t pbmpPtr);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_get */
typedef int (*sw_state_miniExm_pbmpPtr_get_cb)(
    int unit, bcm_pbmp_t *pbmpPtr);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_alloc */
typedef int (*sw_state_miniExm_pbmpPtr_alloc_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_is_allocated */
typedef int (*sw_state_miniExm_pbmpPtr_is_allocated_cb)(
    int unit, uint8 *is_allocated);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_free */
typedef int (*sw_state_miniExm_pbmpPtr_free_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_neq */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_neq_cb)(
    int unit, _shr_pbmp_t input_pbmp, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_eq */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_eq_cb)(
    int unit, _shr_pbmp_t input_pbmp, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_member */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_member_cb)(
    int unit, int _input_port, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_not_null */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_not_null_cb)(
    int unit, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_is_null */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_is_null_cb)(
    int unit, uint8 *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_count */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_count_cb)(
    int unit, int *result);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_xor */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_xor_cb)(
    int unit, _shr_pbmp_t input_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_remove */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_remove_cb)(
    int unit, _shr_pbmp_t input_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_assign */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_assign_cb)(
    int unit, _shr_pbmp_t input_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_get */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_get_cb)(
    int unit, _shr_pbmp_t *output_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_and */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_and_cb)(
    int unit, _shr_pbmp_t input_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_negate */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_negate_cb)(
    int unit, _shr_pbmp_t input_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_or */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_or_cb)(
    int unit, _shr_pbmp_t input_pbmp);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_clear */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_clear_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_port_add */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_port_add_cb)(
    int unit, int _input_port);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_port_flip */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_port_flip_cb)(
    int unit, int _input_port);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_port_remove */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_port_remove_cb)(
    int unit, int _input_port);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_port_set */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_port_set_cb)(
    int unit, int _input_port);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_ports_range_add */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_ports_range_add_cb)(
    int unit, int _first_port, int _range);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_pbmp_fmt */
typedef int (*sw_state_miniExm_pbmpPtr_pbmp_fmt_cb)(
    int unit, char* _buffer);
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
/* implemented by: sw_state_miniExm_pbmpPtr_verify */
typedef int (*sw_state_miniExm_pbmpPtr_verify_cb)(
    int unit);
#endif /* _SHR_SW_STATE_EXM*/ 

/*********************************** access calbacks struct ****************************************/
/* this set of structs, rooted at 'sw_state_cbs_t' define the access layer for the entire SW state.*/
/* use this tree to alloc/free/set/get fields in the sw state rooted at 'sw_state_t'.              */
/* NOTE: 'sw_state_t' data should not be accessed directly.                                        */
/***************************************************************************************************/

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_regular_cbs_s {
    sw_state_miniExm_regular_set_cb set;
    sw_state_miniExm_regular_get_cb get;
    sw_state_miniExm_regular_verify_cb verify;
} sw_state_miniExm_regular_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_singlePtr_cbs_s {
    sw_state_miniExm_singlePtr_set_cb set;
    sw_state_miniExm_singlePtr_get_cb get;
    sw_state_miniExm_singlePtr_alloc_cb alloc;
    sw_state_miniExm_singlePtr_is_allocated_cb is_allocated;
    sw_state_miniExm_singlePtr_free_cb free;
    sw_state_miniExm_singlePtr_verify_cb verify;
} sw_state_miniExm_singlePtr_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_staticArr_cbs_s {
    sw_state_miniExm_staticArr_set_cb set;
    sw_state_miniExm_staticArr_get_cb get;
    sw_state_miniExm_staticArr_verify_cb verify;
} sw_state_miniExm_staticArr_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_staticArrArr_cbs_s {
    sw_state_miniExm_staticArrArr_set_cb set;
    sw_state_miniExm_staticArrArr_get_cb get;
    sw_state_miniExm_staticArrArr_verify_cb verify;
} sw_state_miniExm_staticArrArr_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_ptrVar_cbs_s {
    sw_state_miniExm_ptrVar_set_cb set;
    sw_state_miniExm_ptrVar_get_cb get;
    sw_state_miniExm_ptrVar_alloc_cb alloc;
    sw_state_miniExm_ptrVar_is_allocated_cb is_allocated;
    sw_state_miniExm_ptrVar_free_cb free;
    sw_state_miniExm_ptrVar_verify_cb verify;
} sw_state_miniExm_ptrVar_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_arrVar_cbs_s {
    sw_state_miniExm_arrVar_set_cb set;
    sw_state_miniExm_arrVar_get_cb get;
    sw_state_miniExm_arrVar_alloc_cb alloc;
    sw_state_miniExm_arrVar_is_allocated_cb is_allocated;
    sw_state_miniExm_arrVar_free_cb free;
    sw_state_miniExm_arrVar_verify_cb verify;
} sw_state_miniExm_arrVar_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_arrArr_cbs_s {
    sw_state_miniExm_arrArr_set_cb set;
    sw_state_miniExm_arrArr_get_cb get;
    sw_state_miniExm_arrArr_alloc_cb alloc;
    sw_state_miniExm_arrArr_is_allocated_cb is_allocated;
    sw_state_miniExm_arrArr_free_cb free;
    sw_state_miniExm_arrArr_ptr_alloc_cb ptr_alloc;
    sw_state_miniExm_arrArr_ptr_free_cb ptr_free;
    sw_state_miniExm_arrArr_verify_cb verify;
} sw_state_miniExm_arrArr_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_arrPtr_cbs_s {
    sw_state_miniExm_arrPtr_set_cb set;
    sw_state_miniExm_arrPtr_get_cb get;
    sw_state_miniExm_arrPtr_alloc_cb alloc;
    sw_state_miniExm_arrPtr_is_allocated_cb is_allocated;
    sw_state_miniExm_arrPtr_free_cb free;
    sw_state_miniExm_arrPtr_ptr_alloc_cb ptr_alloc;
    sw_state_miniExm_arrPtr_ptr_free_cb ptr_free;
    sw_state_miniExm_arrPtr_verify_cb verify;
} sw_state_miniExm_arrPtr_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_shr_bitdcl_singlePtr_cbs_s {
    sw_state_miniExm_shr_bitdcl_singlePtr_alloc_bitmap_cb alloc_bitmap;
    sw_state_miniExm_shr_bitdcl_singlePtr_free_cb free;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_set_cb bit_set;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_clear_cb bit_clear;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_get_cb bit_get;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_read_cb bit_range_read;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_write_cb bit_range_write;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_and_cb bit_range_and;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_or_cb bit_range_or;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_xor_cb bit_range_xor;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_remove_cb bit_range_remove;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_negate_cb bit_range_negate;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_clear_cb bit_range_clear;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_set_cb bit_range_set;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_null_cb bit_range_null;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_test_cb bit_range_test;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_eq_cb bit_range_eq;
    sw_state_miniExm_shr_bitdcl_singlePtr_bit_range_count_cb bit_range_count;
} sw_state_miniExm_shr_bitdcl_singlePtr_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_shr_bitdcl_doublePtr_cbs_s {
    sw_state_miniExm_shr_bitdcl_doublePtr_alloc_bitmap_cb alloc_bitmap;
    sw_state_miniExm_shr_bitdcl_doublePtr_free_cb free;
    sw_state_miniExm_shr_bitdcl_doublePtr_ptr_alloc_cb ptr_alloc;
    sw_state_miniExm_shr_bitdcl_doublePtr_ptr_free_cb ptr_free;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_set_cb bit_set;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_clear_cb bit_clear;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_get_cb bit_get;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_read_cb bit_range_read;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_write_cb bit_range_write;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_and_cb bit_range_and;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_or_cb bit_range_or;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_xor_cb bit_range_xor;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_remove_cb bit_range_remove;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_negate_cb bit_range_negate;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_clear_cb bit_range_clear;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_set_cb bit_range_set;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_null_cb bit_range_null;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_test_cb bit_range_test;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_eq_cb bit_range_eq;
    sw_state_miniExm_shr_bitdcl_doublePtr_bit_range_count_cb bit_range_count;
} sw_state_miniExm_shr_bitdcl_doublePtr_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_shr_bitdcl_staticArr_cbs_s {
    sw_state_miniExm_shr_bitdcl_staticArr_bit_set_cb bit_set;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_clear_cb bit_clear;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_get_cb bit_get;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_read_cb bit_range_read;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_write_cb bit_range_write;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_and_cb bit_range_and;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_or_cb bit_range_or;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_xor_cb bit_range_xor;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_remove_cb bit_range_remove;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_negate_cb bit_range_negate;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_clear_cb bit_range_clear;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_set_cb bit_range_set;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_null_cb bit_range_null;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_test_cb bit_range_test;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_eq_cb bit_range_eq;
    sw_state_miniExm_shr_bitdcl_staticArr_bit_range_count_cb bit_range_count;
    sw_state_miniExm_shr_bitdcl_staticArr_verify_cb verify;
} sw_state_miniExm_shr_bitdcl_staticArr_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_shr_bitdcl_double_staticArr_cbs_s {
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_set_cb bit_set;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_clear_cb bit_clear;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_get_cb bit_get;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_read_cb bit_range_read;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_write_cb bit_range_write;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_and_cb bit_range_and;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_or_cb bit_range_or;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_xor_cb bit_range_xor;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_remove_cb bit_range_remove;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_negate_cb bit_range_negate;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_clear_cb bit_range_clear;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_set_cb bit_range_set;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_null_cb bit_range_null;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_test_cb bit_range_test;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_eq_cb bit_range_eq;
    sw_state_miniExm_shr_bitdcl_double_staticArr_bit_range_count_cb bit_range_count;
    sw_state_miniExm_shr_bitdcl_double_staticArr_verify_cb verify;
} sw_state_miniExm_shr_bitdcl_double_staticArr_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_buff_cbs_s {
    sw_state_miniExm_buff_set_cb set;
    sw_state_miniExm_buff_get_cb get;
    sw_state_miniExm_buff_alloc_cb alloc;
    sw_state_miniExm_buff_is_allocated_cb is_allocated;
    sw_state_miniExm_buff_free_cb free;
    sw_state_miniExm_buff_memread_cb memread;
    sw_state_miniExm_buff_memwrite_cb memwrite;
    sw_state_miniExm_buff_memcmp_cb memcmp;
    sw_state_miniExm_buff_memset_cb memset;
    sw_state_miniExm_buff_verify_cb verify;
} sw_state_miniExm_buff_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_regularPbmp_cbs_s {
    sw_state_miniExm_regularPbmp_set_cb set;
    sw_state_miniExm_regularPbmp_get_cb get;
    sw_state_miniExm_regularPbmp_pbmp_neq_cb pbmp_neq;
    sw_state_miniExm_regularPbmp_pbmp_eq_cb pbmp_eq;
    sw_state_miniExm_regularPbmp_pbmp_member_cb pbmp_member;
    sw_state_miniExm_regularPbmp_pbmp_not_null_cb pbmp_not_null;
    sw_state_miniExm_regularPbmp_pbmp_is_null_cb pbmp_is_null;
    sw_state_miniExm_regularPbmp_pbmp_count_cb pbmp_count;
    sw_state_miniExm_regularPbmp_pbmp_xor_cb pbmp_xor;
    sw_state_miniExm_regularPbmp_pbmp_remove_cb pbmp_remove;
    sw_state_miniExm_regularPbmp_pbmp_assign_cb pbmp_assign;
    sw_state_miniExm_regularPbmp_pbmp_get_cb pbmp_get;
    sw_state_miniExm_regularPbmp_pbmp_and_cb pbmp_and;
    sw_state_miniExm_regularPbmp_pbmp_negate_cb pbmp_negate;
    sw_state_miniExm_regularPbmp_pbmp_or_cb pbmp_or;
    sw_state_miniExm_regularPbmp_pbmp_clear_cb pbmp_clear;
    sw_state_miniExm_regularPbmp_pbmp_port_add_cb pbmp_port_add;
    sw_state_miniExm_regularPbmp_pbmp_port_flip_cb pbmp_port_flip;
    sw_state_miniExm_regularPbmp_pbmp_port_remove_cb pbmp_port_remove;
    sw_state_miniExm_regularPbmp_pbmp_port_set_cb pbmp_port_set;
    sw_state_miniExm_regularPbmp_pbmp_ports_range_add_cb pbmp_ports_range_add;
    sw_state_miniExm_regularPbmp_pbmp_fmt_cb pbmp_fmt;
    sw_state_miniExm_regularPbmp_verify_cb verify;
} sw_state_miniExm_regularPbmp_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_pbmpPtr_cbs_s {
    sw_state_miniExm_pbmpPtr_set_cb set;
    sw_state_miniExm_pbmpPtr_get_cb get;
    sw_state_miniExm_pbmpPtr_alloc_cb alloc;
    sw_state_miniExm_pbmpPtr_is_allocated_cb is_allocated;
    sw_state_miniExm_pbmpPtr_free_cb free;
    sw_state_miniExm_pbmpPtr_pbmp_neq_cb pbmp_neq;
    sw_state_miniExm_pbmpPtr_pbmp_eq_cb pbmp_eq;
    sw_state_miniExm_pbmpPtr_pbmp_member_cb pbmp_member;
    sw_state_miniExm_pbmpPtr_pbmp_not_null_cb pbmp_not_null;
    sw_state_miniExm_pbmpPtr_pbmp_is_null_cb pbmp_is_null;
    sw_state_miniExm_pbmpPtr_pbmp_count_cb pbmp_count;
    sw_state_miniExm_pbmpPtr_pbmp_xor_cb pbmp_xor;
    sw_state_miniExm_pbmpPtr_pbmp_remove_cb pbmp_remove;
    sw_state_miniExm_pbmpPtr_pbmp_assign_cb pbmp_assign;
    sw_state_miniExm_pbmpPtr_pbmp_get_cb pbmp_get;
    sw_state_miniExm_pbmpPtr_pbmp_and_cb pbmp_and;
    sw_state_miniExm_pbmpPtr_pbmp_negate_cb pbmp_negate;
    sw_state_miniExm_pbmpPtr_pbmp_or_cb pbmp_or;
    sw_state_miniExm_pbmpPtr_pbmp_clear_cb pbmp_clear;
    sw_state_miniExm_pbmpPtr_pbmp_port_add_cb pbmp_port_add;
    sw_state_miniExm_pbmpPtr_pbmp_port_flip_cb pbmp_port_flip;
    sw_state_miniExm_pbmpPtr_pbmp_port_remove_cb pbmp_port_remove;
    sw_state_miniExm_pbmpPtr_pbmp_port_set_cb pbmp_port_set;
    sw_state_miniExm_pbmpPtr_pbmp_ports_range_add_cb pbmp_ports_range_add;
    sw_state_miniExm_pbmpPtr_pbmp_fmt_cb pbmp_fmt;
    sw_state_miniExm_pbmpPtr_verify_cb verify;
} sw_state_miniExm_pbmpPtr_cbs_t;
#endif /* _SHR_SW_STATE_EXM*/ 

#ifdef _SHR_SW_STATE_EXM
typedef struct sw_state_miniExm_cbs_s {
#ifdef _SHR_SW_STATE_EXM
    sw_state_miniExm_alloc_cb alloc;
#endif /* _SHR_SW_STATE_EXM*/ 
#ifdef _SHR_SW_STATE_EXM
    sw_state_miniExm_is_allocated_cb is_allocated;
#endif /* _SHR_SW_STATE_EXM*/ 
#ifdef _SHR_SW_STATE_EXM
    sw_state_miniExm_free_cb free;
#endif /* _SHR_SW_STATE_EXM*/ 
#ifdef _SHR_SW_STATE_EXM
    sw_state_miniExm_verify_cb verify;
#endif /* _SHR_SW_STATE_EXM*/ 
    sw_state_miniExm_regular_cbs_t regular;
    sw_state_miniExm_singlePtr_cbs_t singlePtr;
    sw_state_miniExm_staticArr_cbs_t staticArr;
    sw_state_miniExm_staticArrArr_cbs_t staticArrArr;
    sw_state_miniExm_ptrVar_cbs_t ptrVar;
    sw_state_miniExm_arrVar_cbs_t arrVar;
    sw_state_miniExm_arrArr_cbs_t arrArr;
    sw_state_miniExm_arrPtr_cbs_t arrPtr;
    sw_state_miniExm_shr_bitdcl_singlePtr_cbs_t shr_bitdcl_singlePtr;
    sw_state_miniExm_shr_bitdcl_doublePtr_cbs_t shr_bitdcl_doublePtr;
    sw_state_miniExm_shr_bitdcl_staticArr_cbs_t shr_bitdcl_staticArr;
    sw_state_miniExm_shr_bitdcl_double_staticArr_cbs_t shr_bitdcl_double_staticArr;
    sw_state_miniExm_buff_cbs_t buff;
    sw_state_miniExm_regularPbmp_cbs_t regularPbmp;
    sw_state_miniExm_pbmpPtr_cbs_t pbmpPtr;
} sw_state_miniExm_cbs_t;

#endif /* _SHR_SW_STATE_EXM*/ 

int sw_state_miniExm_access_cb_init(int unit);

#endif /* _SHR_SW_STATE_MINIEXM_ACCESS_H_ */
