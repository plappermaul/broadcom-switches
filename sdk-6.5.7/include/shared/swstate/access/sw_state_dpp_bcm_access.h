/* $Id: $
 * 
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 * search for 'sw_state_cbs_t' for the root of the struct
 */

#ifndef _SHR_SW_STATE_DPP_BCM_ACCESS_H_
#define _SHR_SW_STATE_DPP_BCM_ACCESS_H_

#include <shared/swstate/access/sw_state_dpp_bcm__switch_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_alloc_mngr_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_alloc_mngr_glif_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_alloc_mngr_local_lif_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_alloc_mngr_utils_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_bfd_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_bfd_ipv6_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_cosq_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_counter_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_failover_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_field_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_gport_mgmt_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_ipmc_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_l2_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_l3_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_lif_linked_list_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_linkbonding_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_mim_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_mirror_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_oam_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_policer_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_port_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_qos_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_rx_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_stack_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_stg_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_trill_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_trunk_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_vlan_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_vswitch_access.h>
/********************************* access calbacks definitions *************************************/
/* this set of callbacks, are the callbacks used in the access calbacks struct 'sw_state_cbs_t' to */
/* access the data in 'sw_state_t'.                                                                */
/* the calbacks are inserted into the access struct by 'sw_state_access_cb_init'.                  */
/***************************************************************************************************/

#ifdef BCM_PETRA_SUPPORT
/* implemented by: sw_state_dpp_bcm_verify */
typedef int (*sw_state_dpp_bcm_verify_cb)(
    int unit);
#endif /* BCM_PETRA_SUPPORT*/ 

/*********************************** access calbacks struct ****************************************/
/* this set of structs, rooted at 'sw_state_cbs_t' define the access layer for the entire SW state.*/
/* use this tree to alloc/free/set/get fields in the sw state rooted at 'sw_state_t'.              */
/* NOTE: 'sw_state_t' data should not be accessed directly.                                        */
/***************************************************************************************************/

#if defined(BCM_PETRA_SUPPORT)
#ifdef BCM_PETRA_SUPPORT
typedef struct sw_state_dpp_bcm_cbs_s {
#ifdef BCM_PETRA_SUPPORT
    sw_state_dpp_bcm_verify_cb verify;
#endif /* BCM_PETRA_SUPPORT*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_stg_cbs_t stg;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_policer_cbs_t policer;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_counter_cbs_t counter;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_mirror_cbs_t mirror;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_l3_cbs_t l3;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_l2_cbs_t l2;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_trunk_cbs_t trunk;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_vlan_cbs_t vlan;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_vswitch_cbs_t vswitch;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_rx_cbs_t rx;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_failover_cbs_t failover;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_gport_mgmt_cbs_t gport_mgmt;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_bfd_cbs_t bfd;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_alloc_mngr_cbs_t alloc_mngr;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_alloc_mngr_utils_cbs_t alloc_mngr_utils;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_alloc_mngr_glif_cbs_t alloc_mngr_glif;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_alloc_mngr_local_lif_cbs_t alloc_mngr_local_lif;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_ipmc_cbs_t ipmc;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm__switch_cbs_t _switch;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_port_cbs_t port;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_trill_cbs_t trill;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_stack_cbs_t stack;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_qos_cbs_t qos;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_mim_cbs_t mim;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_oam_cbs_t oam;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_cosq_cbs_t cosq;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_field_cbs_t field;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_lif_linked_list_cbs_t lif_linked_list;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_linkbonding_cbs_t linkbonding;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_bfd_ipv6_cbs_t bfd_ipv6;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
} sw_state_dpp_bcm_cbs_t;

#endif /* BCM_PETRA_SUPPORT*/ 
#endif /* defined(BCM_PETRA_SUPPORT)*/ 

int sw_state_dpp_bcm_access_cb_init(int unit);

#endif /* _SHR_SW_STATE_DPP_BCM_ACCESS_H_ */
