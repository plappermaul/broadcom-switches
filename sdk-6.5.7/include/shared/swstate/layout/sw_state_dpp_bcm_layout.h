/* $Id: $
 * 
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
*/
#ifndef _SHR_sw_state_dpp_bcm_H_
#define _SHR_sw_state_dpp_bcm_H_


#include <shared/swstate/layout/sw_state_dpp_bcm__switch_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_alloc_mngr_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_alloc_mngr_glif_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_alloc_mngr_local_lif_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_alloc_mngr_utils_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_bfd_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_bfd_ipv6_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_cosq_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_counter_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_failover_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_field_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_gport_mgmt_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_ipmc_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_l2_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_l3_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_lif_linked_list_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_linkbonding_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_mim_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_mirror_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_oam_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_policer_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_port_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_qos_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_rx_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_stack_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_stg_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_trill_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_trunk_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_vlan_layout.h>
#include <shared/swstate/layout/sw_state_dpp_bcm_vswitch_layout.h>
#define SW_STATE_DPP_BCM_LAYOUT_NOF_MAX_LAYOUT_NODES (1 + SW_STATE_DPP_BCM_STG_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_POLICER_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_COUNTER_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_MIRROR_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_L3_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_L2_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_TRUNK_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_VLAN_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_VSWITCH_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_RX_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_FAILOVER_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_GPORT_MGMT_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_BFD_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_ALLOC_MNGR_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_ALLOC_MNGR_UTILS_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_ALLOC_MNGR_GLIF_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_ALLOC_MNGR_LOCAL_LIF_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_IPMC_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM__SWITCH_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_PORT_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_TRILL_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_STACK_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_QOS_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_MIM_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_OAM_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_COSQ_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_FIELD_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_LIF_LINKED_LIST_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_LINKBONDING_LAYOUT_NOF_MAX_LAYOUT_NODES + SW_STATE_DPP_BCM_BFD_IPV6_LAYOUT_NOF_MAX_LAYOUT_NODES) 

#if defined(BCM_PETRA_SUPPORT)
#ifdef BCM_PETRA_SUPPORT
int sw_state_dpp_bcm_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* BCM_PETRA_SUPPORT*/ 
#endif /* defined(BCM_PETRA_SUPPORT)*/ 

#endif /* _SHR_sw_state_dpp_bcm_H_ */
