/* $Id: $
 * 
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 * search for 'sw_state_diagnostic_cbs_t' for the root of the struct
 */

#ifndef _SHR_SW_STATE_DPP_BCM_DIAGNOSTIC_H_
#define _SHR_SW_STATE_DPP_BCM_DIAGNOSTIC_H_

#ifdef BCM_WARM_BOOT_API_TEST
#include <shared/swstate/diagnostic/sw_state_dpp_bcm__switch_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_alloc_mngr_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_alloc_mngr_glif_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_alloc_mngr_local_lif_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_alloc_mngr_utils_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_bfd_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_bfd_ipv6_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_cosq_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_counter_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_failover_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_field_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_gport_mgmt_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_ipmc_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_l2_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_l3_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_lif_linked_list_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_linkbonding_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_mim_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_mirror_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_oam_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_policer_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_port_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_qos_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_rx_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_stack_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_stg_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_trill_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_trunk_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_vlan_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_bcm_vswitch_diagnostic.h>
/********************************* diagnostic calbacks definitions *************************************/
/* this set of callbacks, are the callbacks used in the diagnostic calbacks struct 'sw_state_cbs_t' to */
/* access the data in 'sw_state_t'.                                                                */
/* the calbacks are inserted into the diagnostic struct by 'sw_state_diagnostic_cb_init'.                  */
/***************************************************************************************************/

#ifdef BCM_PETRA_SUPPORT
/* implemented by: sw_state_dpp_bcm_dump */
typedef int (*sw_state_dpp_bcm_dump_cb)(
    int unit);
#endif /* BCM_PETRA_SUPPORT*/ 

/*********************************** diagnostic calbacks struct ****************************************/
/* this set of structs, rooted at 'sw_state_cbs_t' define the diagnostic layer for the entire SW state.*/
/* use this tree to dump fields in the sw state rooted at 'sw_state_t'.              */
/* NOTE: 'sw_state_t' data should not be accessed directly.                                        */
/***************************************************************************************************/

#if defined(BCM_PETRA_SUPPORT)
#ifdef BCM_PETRA_SUPPORT
typedef struct sw_state_dpp_bcm_diagnostic_cbs_s {
#ifdef BCM_PETRA_SUPPORT
    sw_state_dpp_bcm_dump_cb dump;
#endif /* BCM_PETRA_SUPPORT*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_stg_diagnostic_cbs_t stg;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_policer_diagnostic_cbs_t policer;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_counter_diagnostic_cbs_t counter;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_mirror_diagnostic_cbs_t mirror;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_l3_diagnostic_cbs_t l3;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_l2_diagnostic_cbs_t l2;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_trunk_diagnostic_cbs_t trunk;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_vlan_diagnostic_cbs_t vlan;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_vswitch_diagnostic_cbs_t vswitch;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_rx_diagnostic_cbs_t rx;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_failover_diagnostic_cbs_t failover;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_gport_mgmt_diagnostic_cbs_t gport_mgmt;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_bfd_diagnostic_cbs_t bfd;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_alloc_mngr_diagnostic_cbs_t alloc_mngr;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_alloc_mngr_utils_diagnostic_cbs_t alloc_mngr_utils;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_alloc_mngr_glif_diagnostic_cbs_t alloc_mngr_glif;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_alloc_mngr_local_lif_diagnostic_cbs_t alloc_mngr_local_lif;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_ipmc_diagnostic_cbs_t ipmc;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm__switch_diagnostic_cbs_t _switch;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_port_diagnostic_cbs_t port;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_trill_diagnostic_cbs_t trill;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_stack_diagnostic_cbs_t stack;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_qos_diagnostic_cbs_t qos;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_mim_diagnostic_cbs_t mim;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_oam_diagnostic_cbs_t oam;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_cosq_diagnostic_cbs_t cosq;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_field_diagnostic_cbs_t field;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_lif_linked_list_diagnostic_cbs_t lif_linked_list;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_linkbonding_diagnostic_cbs_t linkbonding;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
    sw_state_dpp_bcm_bfd_ipv6_diagnostic_cbs_t bfd_ipv6;
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
} sw_state_dpp_bcm_diagnostic_cbs_t;

#endif /* BCM_PETRA_SUPPORT*/ 
#endif /* defined(BCM_PETRA_SUPPORT)*/ 

int sw_state_dpp_bcm_diagnostic_cb_init(int unit);

#endif /* BCM_WARM_BOOT_API_TEST */

#endif /* _SHR_SW_STATE_DPP_BCM_DIAGNOSTIC_H_ */
