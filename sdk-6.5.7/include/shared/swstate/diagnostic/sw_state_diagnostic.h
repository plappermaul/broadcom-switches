/* $Id: $
 * 
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 * search for 'sw_state_diagnostic_cbs_t' for the root of the struct
 */

#ifndef _SHR_SW_STATE_DIAGNOSTIC_H_
#define _SHR_SW_STATE_DIAGNOSTIC_H_

#ifdef BCM_WARM_BOOT_API_TEST
#include <shared/swstate/sw_state_defs.h>

#include <shared/swstate/diagnostic/sw_state_dnx_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_dpp_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_exm_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_exmMixStatDyn_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_issu_example_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_issu_test_diagnostic.h>
#include <shared/swstate/diagnostic/sw_state_miniExm_diagnostic.h>
/********************************* diagnostic calbacks definitions *************************************/
/* this set of callbacks, are the callbacks used in the diagnostic calbacks struct 'sw_state_cbs_t' to */
/* access the data in 'sw_state_t'.                                                                */
/* the calbacks are inserted into the diagnostic struct by 'sw_state_diagnostic_cb_init'.                  */
/***************************************************************************************************/

/*********************************** diagnostic calbacks struct ****************************************/
/* this set of structs, rooted at 'sw_state_cbs_t' define the diagnostic layer for the entire SW state.*/
/* use this tree to dump fields in the sw state rooted at 'sw_state_t'.              */
/* NOTE: 'sw_state_t' data should not be accessed directly.                                        */
/***************************************************************************************************/

typedef struct sw_state_diagnostic_cbs_s {
#ifdef BCM_PETRA_SUPPORT
    sw_state_dpp_diagnostic_cbs_t dpp;
#endif /* BCM_PETRA_SUPPORT*/ 
#ifdef _SHR_SW_STATE_EXM
    sw_state_exm_diagnostic_cbs_t exm;
#endif /* _SHR_SW_STATE_EXM*/ 
#ifdef _SHR_SW_STATE_EXM
    sw_state_exmMixStatDyn_diagnostic_cbs_t exmMixStatDyn;
#endif /* _SHR_SW_STATE_EXM*/ 
#ifdef _SHR_SW_STATE_EXM
    sw_state_miniExm_diagnostic_cbs_t miniExm;
#endif /* _SHR_SW_STATE_EXM*/ 
#ifdef _SHR_SW_STATE_EXM
    sw_state_issu_example_diagnostic_cbs_t issu_example;
#endif /* _SHR_SW_STATE_EXM*/ 
    sw_state_issu_test_diagnostic_cbs_t issu_test;
#if (defined(BCM_DNX_SUPPORT))
    sw_state_dnx_diagnostic_cbs_t dnx;
#endif /* (defined(BCM_DNX_SUPPORT))*/ 
} sw_state_diagnostic_cbs_t;


extern sw_state_diagnostic_cbs_t sw_state_diagnostic[SOC_MAX_NUM_DEVICES];


int sw_state_diagnostic_cb_init(int unit);

#endif /* BCM_WARM_BOOT_API_TEST */

#endif /* _SHR_SW_STATE_DIAGNOSTIC_H_ */
