/* $Id: ui_rom_defi_pb_pp_acc.h,v 1.6 Broadcom SDK $
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
*/

#ifndef __UI_ROM_DEFI_PB_PP_ACC_INCLUDED__
/* { */
#define __UI_ROM_DEFI_PB_PP_ACC_INCLUDED__

#include <soc/dpp/SAND/Utils/sand_header.h>

#include <appl/dpp/UserInterface/ui_pure_defi_pb_pp_acc.h>                        

 /* 
  * ENUM RULES 
  * {
  */
 /* 
  * } ENUM RULES 
  */
/********************************************************/        
/********************************************************/        
EXTERN CONST 
   PARAM_VAL_RULES 
     soc_pb_pp_acc_free_vals[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_NUMERIC,SYMB_NAME_NUMERIC, 
    { 
      { 
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE, 
        0,0, 
          /* 
           * Number of times this value can be repeated (i.e., 
           * value is an array). Must be at least 1! 
           */ 
        1, 
        (VAL_PROC_PTR)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 
EXTERN CONST 
   PARAM_VAL_RULES 
     soc_pb_pp_acc_empty_vals[]
#ifdef INIT 
   = 
{ 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 
/********************************************************/        
/********************************************************/        
EXTERN CONST 
   PARAM 
     soc_pb_pp_acc_params[] 
#ifdef INIT 
   = 
{ 
#ifdef UI_DEFAULT_SECTION/* { default_section*/
#endif /* } default_section*/
#if UI_PB_PP_IND_ACC/* { soc_pb_pp_ind_acc*/
  { 
    PARAM_PB_PP_REPS_FOR_TBL_SET_UNSAFE_REPS_FOR_TBL_SET_UNSAFE_ID, 
    "reps_for_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc reps_for_tbl_set_unsafe nof_reps 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_REPS_FOR_TBL_SET_UNSAFE_REPS_FOR_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_REPS_FOR_TBL_SET_UNSAFE_REPS_FOR_TBL_SET_UNSAFE_NOF_REPS_ID, 
    "nof_reps", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  nof_reps:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc reps_for_tbl_set_unsafe nof_reps 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_REPS_FOR_TBL_SET_UNSAFE_REPS_FOR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_REPS_FOR_TBL_GET_UNSAFE_REPS_FOR_TBL_GET_UNSAFE_ID, 
    "reps_for_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc reps_for_tbl_get_unsafe\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_REPS_FOR_TBL_GET_UNSAFE_REPS_FOR_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_ID, 
    "ihp_port_mine_table_physical_port_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_mine_table_physical_port_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 physical_port_mine3 0 physical_port_mine2 0\n\r"
    "  physical_port_mine1 0 physical_port_mine0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_TBL_DATA_PHYSICAL_PORT_MINE3_ID, 
    "physical_port_mine3", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.physical_port_mine3:\n\r"
    "  uint32 physical_port_mine3\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_mine_table_physical_port_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 physical_port_mine3 0 physical_port_mine2 0\n\r"
    "  physical_port_mine1 0 physical_port_mine0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_TBL_DATA_PHYSICAL_PORT_MINE2_ID, 
    "physical_port_mine2", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.physical_port_mine2:\n\r"
    "  uint32 physical_port_mine2\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_mine_table_physical_port_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 physical_port_mine3 0 physical_port_mine2 0\n\r"
    "  physical_port_mine1 0 physical_port_mine0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_TBL_DATA_PHYSICAL_PORT_MINE1_ID, 
    "physical_port_mine1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.physical_port_mine1:\n\r"
    "  uint32 physical_port_mine1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_mine_table_physical_port_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 physical_port_mine3 0 physical_port_mine2 0\n\r"
    "  physical_port_mine1 0 physical_port_mine0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_TBL_DATA_PHYSICAL_PORT_MINE0_ID, 
    "physical_port_mine0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.physical_port_mine0:\n\r"
    "  uint32 physical_port_mine0\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_mine_table_physical_port_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 physical_port_mine3 0 physical_port_mine2 0\n\r"
    "  physical_port_mine1 0 physical_port_mine0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_GET_UNSAFE_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_GET_UNSAFE_ID, 
    "ihp_port_mine_table_physical_port_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_mine_table_physical_port_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_GET_UNSAFE_IHP_PORT_MINE_TABLE_PHYSICAL_PORT_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID, 
    "ihp_pinfo_llr_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_RESERVED_MC_TRAP_PROFILE_ID, 
    "reserved_mc_trap_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.reserved_mc_trap_profile:\n\r"
    "  uint32 reserved_mc_trap_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_DEFAULT_ACTION_PROFILE_SNP_ID, 
    "default_action_profile_snp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.default_action_profile_snp:\n\r"
    "  uint32 default_action_profile_snp\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_DEFAULT_ACTION_PROFILE_FWD_ID, 
    "default_action_profile_fwd", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.default_action_profile_fwd:\n\r"
    "  uint32 default_action_profile_fwd\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_DEFAULT_CPU_TRAP_CODE_ID, 
    "default_cpu_trap_code", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.default_cpu_trap_code:\n\r"
    "  uint32 default_cpu_trap_code\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_GENERAL_TRAP_ENABLE_ID, 
    "general_trap_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.general_trap_enable:\n\r"
    "  uint32 general_trap_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_ENABLE_DHCP_TRAP_ID, 
    "enable_dhcp_trap", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.enable_dhcp_trap:\n\r"
    "  uint32 enable_dhcp_trap\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_ENABLE_MLD_TRAP_ID, 
    "enable_mld_trap", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.enable_mld_trap:\n\r"
    "  uint32 enable_mld_trap\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_ENABLE_IGMP_TRAP_ID, 
    "enable_igmp_trap", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.enable_igmp_trap:\n\r"
    "  uint32 enable_igmp_trap\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_ENABLE_ARP_TRAP_ID, 
    "enable_arp_trap", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.enable_arp_trap:\n\r"
    "  uint32 enable_arp_trap\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_NON_AUTHORIZED_MODE_8021X_ID, 
    "non_authorized_mode_8021x", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.non_authorized_mode_8021x:\n\r"
    "  uint32 non_authorized_mode_8021x\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_DEFAULT_INITIAL_VID_ID, 
    "default_initial_vid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.default_initial_vid:\n\r"
    "  uint32 default_initial_vid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_PROTOCOL_PROFILE_ID, 
    "protocol_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.protocol_profile:\n\r"
    "  uint32 protocol_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_VID_PORT_PROTOCOL_ENABLE_ID, 
    "vid_port_protocol_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vid_port_protocol_enable:\n\r"
    "  uint32 vid_port_protocol_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_VID_IPV4_SUBNET_ENABLE_ID, 
    "vid_ipv4_subnet_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vid_ipv4_subnet_enable:\n\r"
    "  uint32 vid_ipv4_subnet_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_IGNORE_INCOMING_VID_ID, 
    "ignore_incoming_vid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ignore_incoming_vid:\n\r"
    "  uint32 ignore_incoming_vid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_ENABLE_SA_AUTHENTICATION_ID, 
    "enable_sa_authentication", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.enable_sa_authentication:\n\r"
    "  uint32 enable_sa_authentication\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_ACTION_PROFILE_SA_DROP_INDEX_ID, 
    "action_profile_sa_drop_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.action_profile_sa_drop_index:\n\r"
    "  uint32 action_profile_sa_drop_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_SA_LOOKUP_ENABLE_ID, 
    "sa_lookup_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.sa_lookup_enable:\n\r"
    "  uint32 sa_lookup_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_DROP_PRECEDENCE_PROFILE_ID, 
    "drop_precedence_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.drop_precedence_profile:\n\r"
    "  uint32 drop_precedence_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_USE_DEI_ID, 
    "use_dei", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.use_dei:\n\r"
    "  uint32 use_dei\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_INCOMING_UP_MAP_PROFILE_ID, 
    "incoming_up_map_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.incoming_up_map_profile:\n\r"
    "  uint32 incoming_up_map_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_IGNORE_INCOMING_UP_ID, 
    "ignore_incoming_up", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ignore_incoming_up:\n\r"
    "  uint32 ignore_incoming_up\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_DEFAULT_TRAFFIC_CLASS_ID, 
    "default_traffic_class", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.default_traffic_class:\n\r"
    "  uint32 default_traffic_class\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_TC_PORT_PROTOCOL_ENABLE_ID, 
    "tc_port_protocol_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc_port_protocol_enable:\n\r"
    "  uint32 tc_port_protocol_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_TC_SUBNET_ENABLE_ID, 
    "tc_subnet_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc_subnet_enable:\n\r"
    "  uint32 tc_subnet_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_TC_L4_PROTOCOL_ENABLE_ID, 
    "tc_l4_protocol_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc_l4_protocol_enable:\n\r"
    "  uint32 tc_l4_protocol_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_TC_DP_TOS_INDEX_ID, 
    "tc_dp_tos_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc_dp_tos_index:\n\r"
    "  uint32 tc_dp_tos_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_TC_DP_TOS_ENABLE_ID, 
    "tc_dp_tos_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc_dp_tos_enable:\n\r"
    "  uint32 tc_dp_tos_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_IGNORE_INCOMING_PCP_ID, 
    "ignore_incoming_pcp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ignore_incoming_pcp:\n\r"
    "  uint32 ignore_incoming_pcp\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_PCP_PROFILE_ID, 
    "pcp_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pcp_profile:\n\r"
    "  uint32 pcp_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_TBL_DATA_VLAN_CLASSIFICATION_PROFILE_ID, 
    "vlan_classification_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_classification_profile:\n\r"
    "  uint32 vlan_classification_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  reserved_mc_trap_profile 0 default_action_profile_snp 0\n\r"
    "  default_action_profile_fwd 0 default_cpu_trap_code 0 general_trap_enable 0\n\r"
    "  enable_dhcp_trap 0 enable_mld_trap 0 enable_igmp_trap 0 enable_arp_trap 0\n\r"
    "  non_authorized_mode_8021x 0 default_initial_vid 0 protocol_profile 0\n\r"
    "  vid_port_protocol_enable 0 vid_ipv4_subnet_enable 0 ignore_incoming_vid 0\n\r"
    "  enable_sa_authentication 0 action_profile_sa_drop_index 0 sa_lookup_enable 0\n\r"
    "  drop_precedence_profile 0 use_dei 0 incoming_up_map_profile 0\n\r"
    "  ignore_incoming_up 0 default_traffic_class 0 tc_port_protocol_enable 0\n\r"
    "  tc_subnet_enable 0 tc_l4_protocol_enable 0 tc_dp_tos_index 0 tc_dp_tos_enable\n\r"
    "  0 ignore_incoming_pcp 0 pcp_profile 0 vlan_classification_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_SET_UNSAFE_IHP_PINFO_LLR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PINFO_LLR_TBL_GET_UNSAFE_IHP_PINFO_LLR_TBL_GET_UNSAFE_ID, 
    "ihp_pinfo_llr_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pinfo_llr_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PINFO_LLR_TBL_GET_UNSAFE_IHP_PINFO_LLR_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_ID, 
    "ihp_llr_llvp_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  inner_comp_index 0 outer_comp_index 0 acceptable_frame_type_action 0\n\r"
    "  incoming_stag_exist 0 incoming_tag_exist 0 incoming_vid_exist 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_PORT_PROFILE_NDX_ID, 
    "key_port_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  port_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  port_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  inner_comp_index 0 outer_comp_index 0 acceptable_frame_type_action 0\n\r"
    "  incoming_stag_exist 0 incoming_tag_exist 0 incoming_vid_exist 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_OUT_TAG_ENCAP_NDX_ID, 
    "key_out_tag_encap_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  out_tag_encap_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  out_tag_encap_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  inner_comp_index 0 outer_comp_index 0 acceptable_frame_type_action 0\n\r"
    "  incoming_stag_exist 0 incoming_tag_exist 0 incoming_vid_exist 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_OUT_IS_PRIO_NDX_ID, 
    "key_out_is_prio_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  out_is_prio_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  out_is_prio_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  inner_comp_index 0 outer_comp_index 0 acceptable_frame_type_action 0\n\r"
    "  incoming_stag_exist 0 incoming_tag_exist 0 incoming_vid_exist 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_IN_TAG_ENCAP_NDX_ID, 
    "key_in_tag_encap_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  in_tag_encap_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  in_tag_encap_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  inner_comp_index 0 outer_comp_index 0 acceptable_frame_type_action 0\n\r"
    "  incoming_stag_exist 0 incoming_tag_exist 0 incoming_vid_exist 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_TBL_DATA_INNER_COMP_INDEX_ID, 
    "inner_comp_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inner_comp_index:\n\r"
    "  uint32 inner_comp_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  inner_comp_index 0 outer_comp_index 0 acceptable_frame_type_action 0\n\r"
    "  incoming_stag_exist 0 incoming_tag_exist 0 incoming_vid_exist 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_TBL_DATA_OUTER_COMP_INDEX_ID, 
    "outer_comp_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.outer_comp_index:\n\r"
    "  uint32 outer_comp_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  inner_comp_index 0 outer_comp_index 0 acceptable_frame_type_action 0\n\r"
    "  incoming_stag_exist 0 incoming_tag_exist 0 incoming_vid_exist 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_TBL_DATA_ACCEPTABLE_FRAME_TYPE_ACTION_ID, 
    "acceptable_frame_type_action", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.acceptable_frame_type_action:\n\r"
    "  uint32 acceptable_frame_type_action\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  inner_comp_index 0 outer_comp_index 0 acceptable_frame_type_action 0\n\r"
    "  incoming_stag_exist 0 incoming_tag_exist 0 incoming_vid_exist 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_TBL_DATA_INCOMING_STAG_EXIST_ID, 
    "incoming_stag_exist", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.incoming_stag_exist:\n\r"
    "  uint32 incoming_stag_exist\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  inner_comp_index 0 outer_comp_index 0 acceptable_frame_type_action 0\n\r"
    "  incoming_stag_exist 0 incoming_tag_exist 0 incoming_vid_exist 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_TBL_DATA_INCOMING_TAG_EXIST_ID, 
    "incoming_tag_exist", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.incoming_tag_exist:\n\r"
    "  uint32 incoming_tag_exist\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  inner_comp_index 0 outer_comp_index 0 acceptable_frame_type_action 0\n\r"
    "  incoming_stag_exist 0 incoming_tag_exist 0 incoming_vid_exist 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_TBL_DATA_INCOMING_VID_EXIST_ID, 
    "incoming_vid_exist", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.incoming_vid_exist:\n\r"
    "  uint32 incoming_vid_exist\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  inner_comp_index 0 outer_comp_index 0 acceptable_frame_type_action 0\n\r"
    "  incoming_stag_exist 0 incoming_tag_exist 0 incoming_vid_exist 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_SET_UNSAFE_IHP_LLR_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_GET_UNSAFE_IHP_LLR_LLVP_TBL_GET_UNSAFE_ID, 
    "ihp_llr_llvp_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_GET_UNSAFE_IHP_LLR_LLVP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_GET_UNSAFE_IHP_LLR_LLVP_TBL_GET_UNSAFE_PORT_PROFILE_NDX_ID, 
    "key_port_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  port_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  port_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_GET_UNSAFE_IHP_LLR_LLVP_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_GET_UNSAFE_IHP_LLR_LLVP_TBL_GET_UNSAFE_OUT_TAG_ENCAP_NDX_ID, 
    "key_out_tag_encap_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  out_tag_encap_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  out_tag_encap_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_GET_UNSAFE_IHP_LLR_LLVP_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_GET_UNSAFE_IHP_LLR_LLVP_TBL_GET_UNSAFE_OUT_IS_PRIO_NDX_ID, 
    "key_out_is_prio_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  out_is_prio_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  out_is_prio_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_GET_UNSAFE_IHP_LLR_LLVP_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLR_LLVP_TBL_GET_UNSAFE_IHP_LLR_LLVP_TBL_GET_UNSAFE_IN_TAG_ENCAP_NDX_ID, 
    "key_in_tag_encap_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  in_tag_encap_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  in_tag_encap_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llr_llvp_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLR_LLVP_TBL_GET_UNSAFE_IHP_LLR_LLVP_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_ID, 
    "ihp_ll_mirror_profile_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ll_mirror_profile_tbl_set_unsafe vid_ndx 0 port_ndx 0\n\r"
    "  entry_offset_ndx 0 ll_mirror_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_VID_NDX_ID, 
    "key_vid_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  vid_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  vid_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ll_mirror_profile_tbl_set_unsafe vid_ndx 0 port_ndx 0\n\r"
    "  entry_offset_ndx 0 ll_mirror_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_PORT_NDX_ID, 
    "key_port_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  port_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  port_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ll_mirror_profile_tbl_set_unsafe vid_ndx 0 port_ndx 0\n\r"
    "  entry_offset_ndx 0 ll_mirror_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_TBL_DATA_LL_MIRROR_PROFILE_ID, 
    "ll_mirror_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ll_mirror_profile:\n\r"
    "  uint32 ll_mirror_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ll_mirror_profile_tbl_set_unsafe vid_ndx 0 port_ndx 0\n\r"
    "  entry_offset_ndx 0 ll_mirror_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_GET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_GET_UNSAFE_ID, 
    "ihp_ll_mirror_profile_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ll_mirror_profile_tbl_get_unsafe vid_ndx 0 port_ndx 0\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_GET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_GET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_GET_UNSAFE_VID_NDX_ID, 
    "key_vid_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  vid_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  vid_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ll_mirror_profile_tbl_get_unsafe vid_ndx 0 port_ndx 0\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_GET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_GET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_GET_UNSAFE_PORT_NDX_ID, 
    "key_port_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  port_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  port_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ll_mirror_profile_tbl_get_unsafe vid_ndx 0 port_ndx 0\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LL_MIRROR_PROFILE_TBL_GET_UNSAFE_IHP_LL_MIRROR_PROFILE_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_ID, 
    "ihp_subnet_classify_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_subnet_classify_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ipv4_subnet 0 ipv4_subnet_mask 0 ipv4_subnet_vid 0 ipv4_subnet_tc 0\n\r"
    "  ipv4_subnet_tc_valid 0 ipv4_subnet_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_TBL_DATA_IPV4_SUBNET_ID, 
    "ipv4_subnet", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_subnet:\n\r"
    "  uint32 ipv4_subnet\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_subnet_classify_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ipv4_subnet 0 ipv4_subnet_mask 0 ipv4_subnet_vid 0 ipv4_subnet_tc 0\n\r"
    "  ipv4_subnet_tc_valid 0 ipv4_subnet_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_TBL_DATA_IPV4_SUBNET_MASK_ID, 
    "ipv4_subnet_mask", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_subnet_mask:\n\r"
    "  uint32 ipv4_subnet_mask\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_subnet_classify_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ipv4_subnet 0 ipv4_subnet_mask 0 ipv4_subnet_vid 0 ipv4_subnet_tc 0\n\r"
    "  ipv4_subnet_tc_valid 0 ipv4_subnet_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_TBL_DATA_IPV4_SUBNET_VID_ID, 
    "ipv4_subnet_vid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_subnet_vid:\n\r"
    "  uint32 ipv4_subnet_vid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_subnet_classify_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ipv4_subnet 0 ipv4_subnet_mask 0 ipv4_subnet_vid 0 ipv4_subnet_tc 0\n\r"
    "  ipv4_subnet_tc_valid 0 ipv4_subnet_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_TBL_DATA_IPV4_SUBNET_TC_ID, 
    "ipv4_subnet_tc", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_subnet_tc:\n\r"
    "  uint32 ipv4_subnet_tc\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_subnet_classify_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ipv4_subnet 0 ipv4_subnet_mask 0 ipv4_subnet_vid 0 ipv4_subnet_tc 0\n\r"
    "  ipv4_subnet_tc_valid 0 ipv4_subnet_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_TBL_DATA_IPV4_SUBNET_TC_VALID_ID, 
    "ipv4_subnet_tc_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_subnet_tc_valid:\n\r"
    "  uint32 ipv4_subnet_tc_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_subnet_classify_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ipv4_subnet 0 ipv4_subnet_mask 0 ipv4_subnet_vid 0 ipv4_subnet_tc 0\n\r"
    "  ipv4_subnet_tc_valid 0 ipv4_subnet_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_TBL_DATA_IPV4_SUBNET_VALID_ID, 
    "ipv4_subnet_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_subnet_valid:\n\r"
    "  uint32 ipv4_subnet_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_subnet_classify_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ipv4_subnet 0 ipv4_subnet_mask 0 ipv4_subnet_vid 0 ipv4_subnet_tc 0\n\r"
    "  ipv4_subnet_tc_valid 0 ipv4_subnet_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SUBNET_CLASSIFY_TBL_GET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_GET_UNSAFE_ID, 
    "ihp_subnet_classify_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_subnet_classify_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SUBNET_CLASSIFY_TBL_GET_UNSAFE_IHP_SUBNET_CLASSIFY_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_ID, 
    "ihp_port_protocol_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_protocol_tbl_set_unsafe prtcl_ndx 0 profile_ndx 0\n\r"
    "  entry_offset_ndx 0 vid 0 vid_valid 0 traffic_class 0 traffic_class_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_PRTCL_NDX_ID, 
    "key_prtcl_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  prtcl_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  prtcl_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_protocol_tbl_set_unsafe prtcl_ndx 0 profile_ndx 0\n\r"
    "  entry_offset_ndx 0 vid 0 vid_valid 0 traffic_class 0 traffic_class_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_PROFILE_NDX_ID, 
    "key_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_protocol_tbl_set_unsafe prtcl_ndx 0 profile_ndx 0\n\r"
    "  entry_offset_ndx 0 vid 0 vid_valid 0 traffic_class 0 traffic_class_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_TBL_DATA_VID_ID, 
    "vid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vid:\n\r"
    "  uint32 vid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_protocol_tbl_set_unsafe prtcl_ndx 0 profile_ndx 0\n\r"
    "  entry_offset_ndx 0 vid 0 vid_valid 0 traffic_class 0 traffic_class_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_TBL_DATA_VID_VALID_ID, 
    "vid_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vid_valid:\n\r"
    "  uint32 vid_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_protocol_tbl_set_unsafe prtcl_ndx 0 profile_ndx 0\n\r"
    "  entry_offset_ndx 0 vid 0 vid_valid 0 traffic_class 0 traffic_class_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_TBL_DATA_TRAFFIC_CLASS_ID, 
    "traffic_class", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.traffic_class:\n\r"
    "  uint32 traffic_class\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_protocol_tbl_set_unsafe prtcl_ndx 0 profile_ndx 0\n\r"
    "  entry_offset_ndx 0 vid 0 vid_valid 0 traffic_class 0 traffic_class_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_TBL_DATA_TRAFFIC_CLASS_VALID_ID, 
    "traffic_class_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.traffic_class_valid:\n\r"
    "  uint32 traffic_class_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_protocol_tbl_set_unsafe prtcl_ndx 0 profile_ndx 0\n\r"
    "  entry_offset_ndx 0 vid 0 vid_valid 0 traffic_class 0 traffic_class_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_IHP_PORT_PROTOCOL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_PROTOCOL_TBL_GET_UNSAFE_IHP_PORT_PROTOCOL_TBL_GET_UNSAFE_ID, 
    "ihp_port_protocol_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_protocol_tbl_get_unsafe prtcl_ndx 0 profile_ndx 0\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_PROTOCOL_TBL_GET_UNSAFE_IHP_PORT_PROTOCOL_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_PROTOCOL_TBL_GET_UNSAFE_IHP_PORT_PROTOCOL_TBL_GET_UNSAFE_PRTCL_NDX_ID, 
    "key_prtcl_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  prtcl_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  prtcl_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_protocol_tbl_get_unsafe prtcl_ndx 0 profile_ndx 0\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_PROTOCOL_TBL_GET_UNSAFE_IHP_PORT_PROTOCOL_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PORT_PROTOCOL_TBL_GET_UNSAFE_IHP_PORT_PROTOCOL_TBL_GET_UNSAFE_PROFILE_NDX_ID, 
    "key_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_port_protocol_tbl_get_unsafe prtcl_ndx 0 profile_ndx 0\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PORT_PROTOCOL_TBL_GET_UNSAFE_IHP_PORT_PROTOCOL_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_ID, 
    "ihp_tos_2_cos_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tos_2_cos_tbl_set_unsafe is_ipv4_ndx 0 tbl_index_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 valid 0 tc 0 dp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_IS_IPV4_NDX_ID, 
    "key_is_ipv4_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  is_ipv4_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  is_ipv4_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tos_2_cos_tbl_set_unsafe is_ipv4_ndx 0 tbl_index_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 valid 0 tc 0 dp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_TBL_INDEX_NDX_ID, 
    "key_tbl_index_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_index_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tbl_index_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tos_2_cos_tbl_set_unsafe is_ipv4_ndx 0 tbl_index_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 valid 0 tc 0 dp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_TOS_NDX_ID, 
    "key_tos_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tos_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tos_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tos_2_cos_tbl_set_unsafe is_ipv4_ndx 0 tbl_index_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 valid 0 tc 0 dp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_TBL_DATA_VALID_ID, 
    "valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.valid:\n\r"
    "  uint32 valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tos_2_cos_tbl_set_unsafe is_ipv4_ndx 0 tbl_index_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 valid 0 tc 0 dp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_TBL_DATA_TC_ID, 
    "tc", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc:\n\r"
    "  uint32 tc\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tos_2_cos_tbl_set_unsafe is_ipv4_ndx 0 tbl_index_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 valid 0 tc 0 dp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_TBL_DATA_DP_ID, 
    "dp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.dp:\n\r"
    "  uint32 dp\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tos_2_cos_tbl_set_unsafe is_ipv4_ndx 0 tbl_index_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 valid 0 tc 0 dp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TOS_2_COS_TBL_SET_UNSAFE_IHP_TOS_2_COS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TOS_2_COS_TBL_GET_UNSAFE_IHP_TOS_2_COS_TBL_GET_UNSAFE_ID, 
    "ihp_tos_2_cos_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tos_2_cos_tbl_get_unsafe is_ipv4_ndx 0 tbl_index_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TOS_2_COS_TBL_GET_UNSAFE_IHP_TOS_2_COS_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TOS_2_COS_TBL_GET_UNSAFE_IHP_TOS_2_COS_TBL_GET_UNSAFE_IS_IPV4_NDX_ID, 
    "key_is_ipv4_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  is_ipv4_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  is_ipv4_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tos_2_cos_tbl_get_unsafe is_ipv4_ndx 0 tbl_index_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TOS_2_COS_TBL_GET_UNSAFE_IHP_TOS_2_COS_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TOS_2_COS_TBL_GET_UNSAFE_IHP_TOS_2_COS_TBL_GET_UNSAFE_TBL_INDEX_NDX_ID, 
    "key_tbl_index_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_index_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tbl_index_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tos_2_cos_tbl_get_unsafe is_ipv4_ndx 0 tbl_index_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TOS_2_COS_TBL_GET_UNSAFE_IHP_TOS_2_COS_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TOS_2_COS_TBL_GET_UNSAFE_IHP_TOS_2_COS_TBL_GET_UNSAFE_TOS_NDX_ID, 
    "key_tos_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tos_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tos_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tos_2_cos_tbl_get_unsafe is_ipv4_ndx 0 tbl_index_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TOS_2_COS_TBL_GET_UNSAFE_IHP_TOS_2_COS_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_RESERVED_MC_TBL_SET_UNSAFE_IHP_RESERVED_MC_TBL_SET_UNSAFE_ID, 
    "ihp_reserved_mc_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_reserved_mc_tbl_set_unsafe reserved_mc_profile_ndx 0\n\r"
    "  da_mac_address_lsb_ndx 0 entry_offset_ndx 0 fwd 0 snp 0 cpu_trap_code 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_RESERVED_MC_TBL_SET_UNSAFE_IHP_RESERVED_MC_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_RESERVED_MC_TBL_SET_UNSAFE_IHP_RESERVED_MC_TBL_SET_UNSAFE_RESERVED_MC_PROFILE_NDX_ID, 
    "key_reserved_mc_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  reserved_mc_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  reserved_mc_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_reserved_mc_tbl_set_unsafe reserved_mc_profile_ndx 0\n\r"
    "  da_mac_address_lsb_ndx 0 entry_offset_ndx 0 fwd 0 snp 0 cpu_trap_code 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_RESERVED_MC_TBL_SET_UNSAFE_IHP_RESERVED_MC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_RESERVED_MC_TBL_SET_UNSAFE_IHP_RESERVED_MC_TBL_SET_UNSAFE_DA_MAC_ADDRESS_LSB_NDX_ID, 
    "key_da_mac_address_lsb_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  da_mac_address_lsb_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  da_mac_address_lsb_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_reserved_mc_tbl_set_unsafe reserved_mc_profile_ndx 0\n\r"
    "  da_mac_address_lsb_ndx 0 entry_offset_ndx 0 fwd 0 snp 0 cpu_trap_code 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_RESERVED_MC_TBL_SET_UNSAFE_IHP_RESERVED_MC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_RESERVED_MC_TBL_SET_UNSAFE_IHP_RESERVED_MC_TBL_SET_UNSAFE_TBL_DATA_FWD_ID, 
    "fwd", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd:\n\r"
    "  uint32 fwd\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_reserved_mc_tbl_set_unsafe reserved_mc_profile_ndx 0\n\r"
    "  da_mac_address_lsb_ndx 0 entry_offset_ndx 0 fwd 0 snp 0 cpu_trap_code 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_RESERVED_MC_TBL_SET_UNSAFE_IHP_RESERVED_MC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_RESERVED_MC_TBL_SET_UNSAFE_IHP_RESERVED_MC_TBL_SET_UNSAFE_TBL_DATA_SNP_ID, 
    "snp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.snp:\n\r"
    "  uint32 snp\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_reserved_mc_tbl_set_unsafe reserved_mc_profile_ndx 0\n\r"
    "  da_mac_address_lsb_ndx 0 entry_offset_ndx 0 fwd 0 snp 0 cpu_trap_code 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_RESERVED_MC_TBL_SET_UNSAFE_IHP_RESERVED_MC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_RESERVED_MC_TBL_SET_UNSAFE_IHP_RESERVED_MC_TBL_SET_UNSAFE_TBL_DATA_CPU_TRAP_CODE_ID, 
    "cpu_trap_code", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cpu_trap_code:\n\r"
    "  uint32 cpu_trap_code\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_reserved_mc_tbl_set_unsafe reserved_mc_profile_ndx 0\n\r"
    "  da_mac_address_lsb_ndx 0 entry_offset_ndx 0 fwd 0 snp 0 cpu_trap_code 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_RESERVED_MC_TBL_SET_UNSAFE_IHP_RESERVED_MC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_RESERVED_MC_TBL_GET_UNSAFE_IHP_RESERVED_MC_TBL_GET_UNSAFE_ID, 
    "ihp_reserved_mc_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_reserved_mc_tbl_get_unsafe reserved_mc_profile_ndx 0\n\r"
    "  da_mac_address_lsb_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_RESERVED_MC_TBL_GET_UNSAFE_IHP_RESERVED_MC_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_RESERVED_MC_TBL_GET_UNSAFE_IHP_RESERVED_MC_TBL_GET_UNSAFE_RESERVED_MC_PROFILE_NDX_ID, 
    "key_reserved_mc_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  reserved_mc_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  reserved_mc_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_reserved_mc_tbl_get_unsafe reserved_mc_profile_ndx 0\n\r"
    "  da_mac_address_lsb_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_RESERVED_MC_TBL_GET_UNSAFE_IHP_RESERVED_MC_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_RESERVED_MC_TBL_GET_UNSAFE_IHP_RESERVED_MC_TBL_GET_UNSAFE_DA_MAC_ADDRESS_LSB_NDX_ID, 
    "key_da_mac_address_lsb_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  da_mac_address_lsb_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  da_mac_address_lsb_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_reserved_mc_tbl_get_unsafe reserved_mc_profile_ndx 0\n\r"
    "  da_mac_address_lsb_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_RESERVED_MC_TBL_GET_UNSAFE_IHP_RESERVED_MC_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_TBL_SET_UNSAFE_ID, 
    "ihp_large_em_pldt_format1_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  format_specific_data 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_TBL_SET_UNSAFE_TBL_DATA_FORMAT_SPECIFIC_DATA_ID, 
    "format_specific_data", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.format_specific_data:\n\r"
    "  uint32 format_specific_data\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  format_specific_data 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_TBL_SET_UNSAFE_TBL_DATA_DESTINATION_ID, 
    "destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination:\n\r"
    "  uint32 destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  format_specific_data 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_TBL_GET_UNSAFE_ID, 
    "ihp_large_em_pldt_format1_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_ID, 
    "ihp_large_em_pldt_format1_asd_tp2p_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_tp2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 identifier 0 out_lif_valid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_TBL_DATA_P2P_SERVICE_ID, 
    "p2p_service", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.p2p_service:\n\r"
    "  uint32 p2p_service\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_tp2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 identifier 0 out_lif_valid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_TBL_DATA_IDENTIFIER_ID, 
    "identifier", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.identifier:\n\r"
    "  uint32 identifier\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_tp2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 identifier 0 out_lif_valid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_TBL_DATA_OUT_LIF_VALID_ID, 
    "out_lif_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.out_lif_valid:\n\r"
    "  uint32 out_lif_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_tp2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 identifier 0 out_lif_valid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_TBL_DATA_OUT_LIF_ID, 
    "out_lif", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.out_lif:\n\r"
    "  uint32 out_lif\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_tp2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 identifier 0 out_lif_valid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_GET_UNSAFE_ID, 
    "ihp_large_em_pldt_format1_asd_tp2p_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_tp2p_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_TP2P_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_ID, 
    "ihp_large_em_pldt_format1_asd_pbp_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_pbp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 sa_drop 0 learn_type 0 isid_domain 0\n\r"
    "  learn_destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_TBL_DATA_IS_DYNAMIC_ID, 
    "is_dynamic", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.is_dynamic:\n\r"
    "  uint32 is_dynamic\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_pbp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 sa_drop 0 learn_type 0 isid_domain 0\n\r"
    "  learn_destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_TBL_DATA_SA_DROP_ID, 
    "sa_drop", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.sa_drop:\n\r"
    "  uint32 sa_drop\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_pbp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 sa_drop 0 learn_type 0 isid_domain 0\n\r"
    "  learn_destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_TBL_DATA_LEARN_TYPE_ID, 
    "learn_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.learn_type:\n\r"
    "  uint32 learn_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_pbp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 sa_drop 0 learn_type 0 isid_domain 0\n\r"
    "  learn_destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_TBL_DATA_ISID_DOMAIN_ID, 
    "isid_domain", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.isid_domain:\n\r"
    "  uint32 isid_domain\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_pbp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 sa_drop 0 learn_type 0 isid_domain 0\n\r"
    "  learn_destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_TBL_DATA_LEARN_DESTINATION_ID, 
    "learn_destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.learn_destination:\n\r"
    "  uint32 learn_destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_pbp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 sa_drop 0 learn_type 0 isid_domain 0\n\r"
    "  learn_destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_GET_UNSAFE_ID, 
    "ihp_large_em_pldt_format1_asd_pbp_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_pbp_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_PBP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_ID, 
    "ihp_large_em_pldt_format1_asd_ilm_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_ilm_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 mpls_command 0 mpls_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_TBL_DATA_P2P_SERVICE_ID, 
    "p2p_service", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.p2p_service:\n\r"
    "  uint32 p2p_service\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_ilm_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 mpls_command 0 mpls_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_TBL_DATA_MPLS_COMMAND_ID, 
    "mpls_command", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mpls_command:\n\r"
    "  uint32 mpls_command\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_ilm_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 mpls_command 0 mpls_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_TBL_DATA_MPLS_LABEL_ID, 
    "mpls_label", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mpls_label:\n\r"
    "  uint32 mpls_label\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_ilm_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 mpls_command 0 mpls_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_GET_UNSAFE_ID, 
    "ihp_large_em_pldt_format1_asd_ilm_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_ilm_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ILM_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_ID, 
    "ihp_large_em_pldt_format1_asd_sp2p_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_sp2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 has_cw 0 tpid_profile 0 out_lif_valid 0\n\r"
    "  out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_TBL_DATA_P2P_SERVICE_ID, 
    "p2p_service", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.p2p_service:\n\r"
    "  uint32 p2p_service\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_sp2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 has_cw 0 tpid_profile 0 out_lif_valid 0\n\r"
    "  out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_TBL_DATA_HAS_CW_ID, 
    "has_cw", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.has_cw:\n\r"
    "  uint32 has_cw\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_sp2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 has_cw 0 tpid_profile 0 out_lif_valid 0\n\r"
    "  out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_TBL_DATA_TPID_PROFILE_ID, 
    "tpid_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tpid_profile:\n\r"
    "  uint32 tpid_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_sp2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 has_cw 0 tpid_profile 0 out_lif_valid 0\n\r"
    "  out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_TBL_DATA_OUT_LIF_VALID_ID, 
    "out_lif_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.out_lif_valid:\n\r"
    "  uint32 out_lif_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_sp2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 has_cw 0 tpid_profile 0 out_lif_valid 0\n\r"
    "  out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_TBL_DATA_OUT_LIF_ID, 
    "out_lif", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.out_lif:\n\r"
    "  uint32 out_lif\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_sp2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 p2p_service 0 has_cw 0 tpid_profile 0 out_lif_valid 0\n\r"
    "  out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_GET_UNSAFE_ID, 
    "ihp_large_em_pldt_format1_asd_sp2p_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_sp2p_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_SP2P_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_SET_UNSAFE_ID, 
    "ihp_large_em_pldt_format1_asd_ethernet_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_ethernet_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 asd 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_SET_UNSAFE_TBL_DATA_IS_DYNAMIC_ID, 
    "is_dynamic", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.is_dynamic:\n\r"
    "  uint32 is_dynamic\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_ethernet_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 asd 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_SET_UNSAFE_TBL_DATA_ASD_ID, 
    "asd", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.asd:\n\r"
    "  uint32 asd\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_ethernet_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 asd 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_GET_UNSAFE_ID, 
    "ihp_large_em_pldt_format1_asd_ethernet_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format1_asd_ethernet_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT1_ASD_ETHERNET_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TBL_SET_UNSAFE_ID, 
    "ihp_large_em_pldt_format2_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  permitted_system_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TBL_SET_UNSAFE_TBL_DATA_PERMITTED_SYSTEM_PORT_ID, 
    "permitted_system_port", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.permitted_system_port:\n\r"
    "  uint32 permitted_system_port\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  permitted_system_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TBL_GET_UNSAFE_ID, 
    "ihp_large_em_pldt_format2_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_ID, 
    "ihp_large_em_pldt_format2_trill_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_trill_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 adjacent 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_TBL_DATA_IS_DYNAMIC_ID, 
    "is_dynamic", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.is_dynamic:\n\r"
    "  uint32 is_dynamic\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_trill_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 adjacent 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_TBL_DATA_USE_VID_IN_UNTAGGED_ID, 
    "use_vid_in_untagged", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.use_vid_in_untagged:\n\r"
    "  uint32 use_vid_in_untagged\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_trill_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 adjacent 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_TBL_DATA_OVERRIDE_VID_IN_TAGGED_ID, 
    "override_vid_in_tagged", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.override_vid_in_tagged:\n\r"
    "  uint32 override_vid_in_tagged\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_trill_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 adjacent 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_TBL_DATA_PERMIT_ALL_PORTS_ID, 
    "permit_all_ports", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.permit_all_ports:\n\r"
    "  uint32 permit_all_ports\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_trill_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 adjacent 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_TBL_DATA_DROP_IF_VID_DIFFER_ID, 
    "drop_if_vid_differ", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.drop_if_vid_differ:\n\r"
    "  uint32 drop_if_vid_differ\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_trill_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 adjacent 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_TBL_DATA_ADJACENT_ID, 
    "adjacent", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.adjacent:\n\r"
    "  uint32 adjacent\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_trill_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 adjacent 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_GET_UNSAFE_ID, 
    "ihp_large_em_pldt_format2_trill_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_trill_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_TRILL_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_ID, 
    "ihp_large_em_pldt_format2_auth_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_auth_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 accept_untagged 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_TBL_DATA_IS_DYNAMIC_ID, 
    "is_dynamic", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.is_dynamic:\n\r"
    "  uint32 is_dynamic\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_auth_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 accept_untagged 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_TBL_DATA_USE_VID_IN_UNTAGGED_ID, 
    "use_vid_in_untagged", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.use_vid_in_untagged:\n\r"
    "  uint32 use_vid_in_untagged\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_auth_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 accept_untagged 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_TBL_DATA_OVERRIDE_VID_IN_TAGGED_ID, 
    "override_vid_in_tagged", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.override_vid_in_tagged:\n\r"
    "  uint32 override_vid_in_tagged\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_auth_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 accept_untagged 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_TBL_DATA_PERMIT_ALL_PORTS_ID, 
    "permit_all_ports", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.permit_all_ports:\n\r"
    "  uint32 permit_all_ports\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_auth_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 accept_untagged 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_TBL_DATA_DROP_IF_VID_DIFFER_ID, 
    "drop_if_vid_differ", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.drop_if_vid_differ:\n\r"
    "  uint32 drop_if_vid_differ\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_auth_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 accept_untagged 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_TBL_DATA_ACCEPT_UNTAGGED_ID, 
    "accept_untagged", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.accept_untagged:\n\r"
    "  uint32 accept_untagged\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_auth_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 accept_untagged 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_TBL_DATA_VID_ID, 
    "vid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vid:\n\r"
    "  uint32 vid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_auth_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_dynamic 0 use_vid_in_untagged 0 override_vid_in_tagged\n\r"
    "  0 permit_all_ports 0 drop_if_vid_differ 0 accept_untagged 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_GET_UNSAFE_ID, 
    "ihp_large_em_pldt_format2_auth_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_pldt_format2_auth_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_GET_UNSAFE_IHP_LARGE_EM_PLDT_FORMAT2_AUTH_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID, 
    "ihp_flush_db_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_TBL_DATA_ACTION_TRANSPLANT_PAYLOAD_MASK_INDEX_ID, 
    "action_transplant_payload_mask_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  action_transplant_payload_mask_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_TBL_DATA_ACTION_TRANSPLANT_PAYLOAD_MASK_ID, 
    "action_transplant_payload_mask", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.action_transplant_payload_mask[\n\r"
    "  prm_action_transplant_payload_mask_index]:\n\r"
    "  uint32 action_transplant_payload_mask[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_TBL_DATA_ACTION_TRANSPLANT_PAYLOAD_DATA_INDEX_ID, 
    "action_transplant_payload_data_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  action_transplant_payload_data_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_TBL_DATA_ACTION_TRANSPLANT_PAYLOAD_DATA_ID, 
    "action_transplant_payload_data", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.action_transplant_payload_data[\n\r"
    "  prm_action_transplant_payload_data_index]:\n\r"
    "  uint32 action_transplant_payload_data[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_TBL_DATA_ACTION_DROP_ID, 
    "action_drop", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.action_drop:\n\r"
    "  uint32 action_drop\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_TBL_DATA_COMPARE_PAYLOAD_MASK_INDEX_ID, 
    "compare_payload_mask_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  compare_payload_mask_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_TBL_DATA_COMPARE_PAYLOAD_MASK_ID, 
    "compare_payload_mask", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.compare_payload_mask[ prm_compare_payload_mask_index]:\n\r"
    "  uint32 compare_payload_mask[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_TBL_DATA_COMPARE_PAYLOAD_DATA_INDEX_ID, 
    "compare_payload_data_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  compare_payload_data_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_TBL_DATA_COMPARE_PAYLOAD_DATA_ID, 
    "compare_payload_data", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.compare_payload_data[ prm_compare_payload_data_index]:\n\r"
    "  uint32 compare_payload_data[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_TBL_DATA_COMPARE_KEY_16_MSBS_MASK_ID, 
    "compare_key_16_msbs_mask", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.compare_key_16_msbs_mask:\n\r"
    "  uint32 compare_key_16_msbs_mask\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_TBL_DATA_COMPARE_KEY_16_MSBS_DATA_ID, 
    "compare_key_16_msbs_data", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.compare_key_16_msbs_data:\n\r"
    "  uint32 compare_key_16_msbs_data\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_TBL_DATA_COMPARE_VALID_ID, 
    "compare_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.compare_valid:\n\r"
    "  uint32 compare_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  action_transplant_payload_mask_index 0 action_transplant_payload_mask 0\n\r"
    "  action_transplant_payload_data_index 0 action_transplant_payload_data 0\n\r"
    "  action_drop 0 compare_payload_mask_index 0 compare_payload_mask 0\n\r"
    "  compare_payload_data_index 0 compare_payload_data 0 compare_key_16_msbs_mask\n\r"
    "  0 compare_key_16_msbs_data 0 compare_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_SET_UNSAFE_IHP_FLUSH_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FLUSH_DB_TBL_GET_UNSAFE_IHP_FLUSH_DB_TBL_GET_UNSAFE_ID, 
    "ihp_flush_db_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_flush_db_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FLUSH_DB_TBL_GET_UNSAFE_IHP_FLUSH_DB_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_FID_COUNTER_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_DB_TBL_SET_UNSAFE_ID, 
    "ihp_large_em_fid_counter_db_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_fid_counter_db_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 profile_pointer 0 entry_count 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_FID_COUNTER_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_DB_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_FID_COUNTER_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_DB_TBL_SET_UNSAFE_TBL_DATA_PROFILE_POINTER_ID, 
    "profile_pointer", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.profile_pointer:\n\r"
    "  uint32 profile_pointer\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_fid_counter_db_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 profile_pointer 0 entry_count 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_FID_COUNTER_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_FID_COUNTER_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_DB_TBL_SET_UNSAFE_TBL_DATA_ENTRY_COUNT_ID, 
    "entry_count", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.entry_count:\n\r"
    "  uint32 entry_count\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_fid_counter_db_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 profile_pointer 0 entry_count 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_FID_COUNTER_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_FID_COUNTER_DB_TBL_GET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_DB_TBL_GET_UNSAFE_ID, 
    "ihp_large_em_fid_counter_db_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_fid_counter_db_tbl_get_unsafe entry_offset_ndx\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_FID_COUNTER_DB_TBL_GET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_DB_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_ID, 
    "ihp_large_em_fid_counter_profile_db_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_fid_counter_profile_db_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_link_layer_fid 0 message_en 0 interrupt_en 0 limit 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_TBL_DATA_IS_LINK_LAYER_FID_ID, 
    "is_link_layer_fid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.is_link_layer_fid:\n\r"
    "  uint32 is_link_layer_fid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_fid_counter_profile_db_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_link_layer_fid 0 message_en 0 interrupt_en 0 limit 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_TBL_DATA_MESSAGE_EN_ID, 
    "message_en", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.message_en:\n\r"
    "  uint32 message_en\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_fid_counter_profile_db_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_link_layer_fid 0 message_en 0 interrupt_en 0 limit 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_TBL_DATA_INTERRUPT_EN_ID, 
    "interrupt_en", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.interrupt_en:\n\r"
    "  uint32 interrupt_en\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_fid_counter_profile_db_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_link_layer_fid 0 message_en 0 interrupt_en 0 limit 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_TBL_DATA_LIMIT_ID, 
    "limit", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.limit:\n\r"
    "  uint32 limit\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_fid_counter_profile_db_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 is_link_layer_fid 0 message_en 0 interrupt_en 0 limit 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_GET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_GET_UNSAFE_ID, 
    "ihp_large_em_fid_counter_profile_db_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_fid_counter_profile_db_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_GET_UNSAFE_IHP_LARGE_EM_FID_COUNTER_PROFILE_DB_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_large_em_aging_configuration_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_aging_configuration_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 create_refresh_event_index 0 create_refresh_event 0\n\r"
    "  create_aged_out_event_index 0 create_aged_out_event 0 delete_entry_index 0\n\r"
    "  delete_entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_TBL_DATA_CREATE_REFRESH_EVENT_INDEX_ID, 
    "create_refresh_event_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  create_refresh_event_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_aging_configuration_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 create_refresh_event_index 0 create_refresh_event 0\n\r"
    "  create_aged_out_event_index 0 create_aged_out_event 0 delete_entry_index 0\n\r"
    "  delete_entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_TBL_DATA_CREATE_REFRESH_EVENT_ID, 
    "create_refresh_event", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.create_refresh_event[ prm_create_refresh_event_index]:\n\r"
    "  uint32 create_refresh_event[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_aging_configuration_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 create_refresh_event_index 0 create_refresh_event 0\n\r"
    "  create_aged_out_event_index 0 create_aged_out_event 0 delete_entry_index 0\n\r"
    "  delete_entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_TBL_DATA_CREATE_AGED_OUT_EVENT_INDEX_ID, 
    "create_aged_out_event_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  create_aged_out_event_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_aging_configuration_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 create_refresh_event_index 0 create_refresh_event 0\n\r"
    "  create_aged_out_event_index 0 create_aged_out_event 0 delete_entry_index 0\n\r"
    "  delete_entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_TBL_DATA_CREATE_AGED_OUT_EVENT_ID, 
    "create_aged_out_event", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.create_aged_out_event[ prm_create_aged_out_event_index]:\n\r"
    "  uint32 create_aged_out_event[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_aging_configuration_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 create_refresh_event_index 0 create_refresh_event 0\n\r"
    "  create_aged_out_event_index 0 create_aged_out_event 0 delete_entry_index 0\n\r"
    "  delete_entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_TBL_DATA_DELETE_ENTRY_INDEX_ID, 
    "delete_entry_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  delete_entry_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_aging_configuration_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 create_refresh_event_index 0 create_refresh_event 0\n\r"
    "  create_aged_out_event_index 0 create_aged_out_event 0 delete_entry_index 0\n\r"
    "  delete_entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_TBL_DATA_DELETE_ENTRY_ID, 
    "delete_entry", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.delete_entry[ prm_delete_entry_index]:\n\r"
    "  uint32 delete_entry[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_aging_configuration_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 create_refresh_event_index 0 create_refresh_event 0\n\r"
    "  create_aged_out_event_index 0 create_aged_out_event 0 delete_entry_index 0\n\r"
    "  delete_entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_GET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_large_em_aging_configuration_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_large_em_aging_configuration_table_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_GET_UNSAFE_IHP_LARGE_EM_AGING_CONFIGURATION_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID, 
    "ihp_tm_port_pp_port_config_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_pp_port_config_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 pp_port_use_offset_directly 0 pp_port_profile 0 pp_port_offset2 0\n\r"
    "  pp_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_USE_OFFSET_DIRECTLY_ID, 
    "pp_port_use_offset_directly", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_use_offset_directly:\n\r"
    "  uint32 pp_port_use_offset_directly\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_pp_port_config_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 pp_port_use_offset_directly 0 pp_port_profile 0 pp_port_offset2 0\n\r"
    "  pp_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_PROFILE_ID, 
    "pp_port_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_profile:\n\r"
    "  uint32 pp_port_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_pp_port_config_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 pp_port_use_offset_directly 0 pp_port_profile 0 pp_port_offset2 0\n\r"
    "  pp_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_OFFSET2_ID, 
    "pp_port_offset2", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_offset2:\n\r"
    "  uint32 pp_port_offset2\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_pp_port_config_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 pp_port_use_offset_directly 0 pp_port_profile 0 pp_port_offset2 0\n\r"
    "  pp_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_OFFSET1_ID, 
    "pp_port_offset1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_offset1:\n\r"
    "  uint32 pp_port_offset1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_pp_port_config_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 pp_port_use_offset_directly 0 pp_port_profile 0 pp_port_offset2 0\n\r"
    "  pp_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_PP_PORT_CONFIG_TBL_GET_UNSAFE_IHP_TM_PORT_PP_PORT_CONFIG_TBL_GET_UNSAFE_ID, 
    "ihp_tm_port_pp_port_config_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_pp_port_config_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_PP_PORT_CONFIG_TBL_GET_UNSAFE_IHP_TM_PORT_PP_PORT_CONFIG_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_ID, 
    "ihp_tm_port_sys_port_config_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_sys_port_config_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 system_port_value_to_use 0 system_port_profile 0 system_port_value 0\n\r"
    "  system_port_offset2 0 system_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_SYSTEM_PORT_VALUE_TO_USE_ID, 
    "system_port_value_to_use", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.system_port_value_to_use:\n\r"
    "  uint32 system_port_value_to_use\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_sys_port_config_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 system_port_value_to_use 0 system_port_profile 0 system_port_value 0\n\r"
    "  system_port_offset2 0 system_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_SYSTEM_PORT_PROFILE_ID, 
    "system_port_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.system_port_profile:\n\r"
    "  uint32 system_port_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_sys_port_config_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 system_port_value_to_use 0 system_port_profile 0 system_port_value 0\n\r"
    "  system_port_offset2 0 system_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_SYSTEM_PORT_VALUE_ID, 
    "system_port_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.system_port_value:\n\r"
    "  uint32 system_port_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_sys_port_config_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 system_port_value_to_use 0 system_port_profile 0 system_port_value 0\n\r"
    "  system_port_offset2 0 system_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_SYSTEM_PORT_OFFSET2_ID, 
    "system_port_offset2", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.system_port_offset2:\n\r"
    "  uint32 system_port_offset2\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_sys_port_config_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 system_port_value_to_use 0 system_port_profile 0 system_port_value 0\n\r"
    "  system_port_offset2 0 system_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_SYSTEM_PORT_OFFSET1_ID, 
    "system_port_offset1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.system_port_offset1:\n\r"
    "  uint32 system_port_offset1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_sys_port_config_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 system_port_value_to_use 0 system_port_profile 0 system_port_value 0\n\r"
    "  system_port_offset2 0 system_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_GET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_GET_UNSAFE_ID, 
    "ihp_tm_port_sys_port_config_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_sys_port_config_tbl_get_unsafe entry_offset_ndx\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_GET_UNSAFE_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_ID, 
    "ihp_tm_port_pp_context_config_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_pp_context_config_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_value_to_use 0 pp_context_profile 0\n\r"
    "  pp_context_offset2 0 pp_context_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_VALUE_TO_USE_ID, 
    "pp_context_value_to_use", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_value_to_use:\n\r"
    "  uint32 pp_context_value_to_use\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_pp_context_config_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_value_to_use 0 pp_context_profile 0\n\r"
    "  pp_context_offset2 0 pp_context_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_PROFILE_ID, 
    "pp_context_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_profile:\n\r"
    "  uint32 pp_context_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_pp_context_config_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_value_to_use 0 pp_context_profile 0\n\r"
    "  pp_context_offset2 0 pp_context_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_OFFSET2_ID, 
    "pp_context_offset2", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_offset2:\n\r"
    "  uint32 pp_context_offset2\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_pp_context_config_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_value_to_use 0 pp_context_profile 0\n\r"
    "  pp_context_offset2 0 pp_context_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_OFFSET1_ID, 
    "pp_context_offset1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_offset1:\n\r"
    "  uint32 pp_context_offset1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_pp_context_config_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_value_to_use 0 pp_context_profile 0\n\r"
    "  pp_context_offset2 0 pp_context_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_GET_UNSAFE_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_GET_UNSAFE_ID, 
    "ihp_tm_port_pp_context_config_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tm_port_pp_context_config_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_GET_UNSAFE_IHP_TM_PORT_PP_CONTEXT_CONFIG_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_INFO_TBL_SET_UNSAFE_IHP_PP_PORT_INFO_TBL_SET_UNSAFE_ID, 
    "ihp_pp_port_info_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_info_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  tpid_profile 0 outer_header_start 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_INFO_TBL_SET_UNSAFE_IHP_PP_PORT_INFO_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_INFO_TBL_SET_UNSAFE_IHP_PP_PORT_INFO_TBL_SET_UNSAFE_TBL_DATA_TPID_PROFILE_ID, 
    "tpid_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tpid_profile:\n\r"
    "  uint32 tpid_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_info_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  tpid_profile 0 outer_header_start 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_INFO_TBL_SET_UNSAFE_IHP_PP_PORT_INFO_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_INFO_TBL_SET_UNSAFE_IHP_PP_PORT_INFO_TBL_SET_UNSAFE_TBL_DATA_OUTER_HEADER_START_ID, 
    "outer_header_start", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.outer_header_start:\n\r"
    "  uint32 outer_header_start\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_info_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  tpid_profile 0 outer_header_start 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_INFO_TBL_SET_UNSAFE_IHP_PP_PORT_INFO_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_INFO_TBL_GET_UNSAFE_IHP_PP_PORT_INFO_TBL_GET_UNSAFE_ID, 
    "ihp_pp_port_info_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_info_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_INFO_TBL_GET_UNSAFE_IHP_PP_PORT_INFO_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_ID, 
    "ihp_pp_port_values_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_values_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pp_port_pp_context_value 0 pp_port_packet_format_qualifier0_value 0\n\r"
    "  pp_port_system_port_value 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_PP_CONTEXT_VALUE_ID, 
    "pp_port_pp_context_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_pp_context_value:\n\r"
    "  uint32 pp_port_pp_context_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_values_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pp_port_pp_context_value 0 pp_port_packet_format_qualifier0_value 0\n\r"
    "  pp_port_system_port_value 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_PACKET_FORMAT_QUALIFIER0_VALUE_ID, 
    "pp_port_packet_format_qualifier0_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_packet_format_qualifier0_value:\n\r"
    "  uint32 pp_port_packet_format_qualifier0_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_values_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pp_port_pp_context_value 0 pp_port_packet_format_qualifier0_value 0\n\r"
    "  pp_port_system_port_value 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_SYSTEM_PORT_VALUE_ID, 
    "pp_port_system_port_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_system_port_value:\n\r"
    "  uint32 pp_port_system_port_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_values_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pp_port_pp_context_value 0 pp_port_packet_format_qualifier0_value 0\n\r"
    "  pp_port_system_port_value 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_IHP_PP_PORT_VALUES_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_VALUES_TBL_GET_UNSAFE_IHP_PP_PORT_VALUES_TBL_GET_UNSAFE_ID, 
    "ihp_pp_port_values_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_values_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_VALUES_TBL_GET_UNSAFE_IHP_PP_PORT_VALUES_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_pp_port_fem_bit_select_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_bit_select_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_port_fem_bit_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_FEM_BIT_SELECT_ID, 
    "pp_port_fem_bit_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_fem_bit_select:\n\r"
    "  uint32 pp_port_fem_bit_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_bit_select_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_port_fem_bit_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_BIT_SELECT_TABLE_TBL_GET_UNSAFE_IHP_PP_PORT_FEM_BIT_SELECT_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_pp_port_fem_bit_select_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_bit_select_table_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_BIT_SELECT_TABLE_TBL_GET_UNSAFE_IHP_PP_PORT_FEM_BIT_SELECT_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_pp_port_fem_map_index_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_map_index_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_port_fem_map_data 0 pp_port_fem_map_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_FEM_MAP_DATA_ID, 
    "pp_port_fem_map_data", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_fem_map_data:\n\r"
    "  uint32 pp_port_fem_map_data\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_map_index_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_port_fem_map_data 0 pp_port_fem_map_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_FEM_MAP_INDEX_ID, 
    "pp_port_fem_map_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_fem_map_index:\n\r"
    "  uint32 pp_port_fem_map_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_map_index_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_port_fem_map_data 0 pp_port_fem_map_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_GET_UNSAFE_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_pp_port_fem_map_index_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_map_index_table_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_GET_UNSAFE_IHP_PP_PORT_FEM_MAP_INDEX_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID, 
    "ihp_pp_port_fem_field_select_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_port_fem_field_select5 0 pp_port_fem_field_select4 0\n\r"
    "  pp_port_fem_field_select3 0 pp_port_fem_field_select2 0\n\r"
    "  pp_port_fem_field_select1 0 pp_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_FEM_FIELD_SELECT5_ID, 
    "pp_port_fem_field_select5", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_fem_field_select5:\n\r"
    "  uint32 pp_port_fem_field_select5\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_port_fem_field_select5 0 pp_port_fem_field_select4 0\n\r"
    "  pp_port_fem_field_select3 0 pp_port_fem_field_select2 0\n\r"
    "  pp_port_fem_field_select1 0 pp_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_FEM_FIELD_SELECT4_ID, 
    "pp_port_fem_field_select4", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_fem_field_select4:\n\r"
    "  uint32 pp_port_fem_field_select4\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_port_fem_field_select5 0 pp_port_fem_field_select4 0\n\r"
    "  pp_port_fem_field_select3 0 pp_port_fem_field_select2 0\n\r"
    "  pp_port_fem_field_select1 0 pp_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_FEM_FIELD_SELECT3_ID, 
    "pp_port_fem_field_select3", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_fem_field_select3:\n\r"
    "  uint32 pp_port_fem_field_select3\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_port_fem_field_select5 0 pp_port_fem_field_select4 0\n\r"
    "  pp_port_fem_field_select3 0 pp_port_fem_field_select2 0\n\r"
    "  pp_port_fem_field_select1 0 pp_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_FEM_FIELD_SELECT2_ID, 
    "pp_port_fem_field_select2", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_fem_field_select2:\n\r"
    "  uint32 pp_port_fem_field_select2\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_port_fem_field_select5 0 pp_port_fem_field_select4 0\n\r"
    "  pp_port_fem_field_select3 0 pp_port_fem_field_select2 0\n\r"
    "  pp_port_fem_field_select1 0 pp_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_FEM_FIELD_SELECT1_ID, 
    "pp_port_fem_field_select1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_fem_field_select1:\n\r"
    "  uint32 pp_port_fem_field_select1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_port_fem_field_select5 0 pp_port_fem_field_select4 0\n\r"
    "  pp_port_fem_field_select3 0 pp_port_fem_field_select2 0\n\r"
    "  pp_port_fem_field_select1 0 pp_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_PP_PORT_FEM_FIELD_SELECT0_ID, 
    "pp_port_fem_field_select0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_fem_field_select0:\n\r"
    "  uint32 pp_port_fem_field_select0\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_port_fem_field_select5 0 pp_port_fem_field_select4 0\n\r"
    "  pp_port_fem_field_select3 0 pp_port_fem_field_select2 0\n\r"
    "  pp_port_fem_field_select1 0 pp_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_GET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_GET_UNSAFE_ID, 
    "ihp_pp_port_fem_field_select_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_port_fem_field_select_map_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_GET_UNSAFE_IHP_PP_PORT_FEM_FIELD_SELECT_MAP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_src_system_port_fem_bit_select_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_bit_select_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_bit_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_BIT_SELECT_ID, 
    "src_system_port_fem_bit_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_bit_select:\n\r"
    "  uint32 src_system_port_fem_bit_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_bit_select_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_bit_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_BIT_SELECT_TABLE_TBL_GET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_BIT_SELECT_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_src_system_port_fem_bit_select_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_bit_select_table_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_BIT_SELECT_TABLE_TBL_GET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_BIT_SELECT_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_src_system_port_fem_map_index_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_map_index_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_map_data 0\n\r"
    "  src_system_port_fem_map_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_MAP_DATA_ID, 
    "src_system_port_fem_map_data", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_map_data:\n\r"
    "  uint32 src_system_port_fem_map_data\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_map_index_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_map_data 0\n\r"
    "  src_system_port_fem_map_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_MAP_INDEX_ID, 
    "src_system_port_fem_map_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_map_index:\n\r"
    "  uint32 src_system_port_fem_map_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_map_index_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_map_data 0\n\r"
    "  src_system_port_fem_map_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_GET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_src_system_port_fem_map_index_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_map_index_table_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_GET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_MAP_INDEX_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID, 
    "ihp_src_system_port_fem_field_select_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT12_ID, 
    "src_system_port_fem_field_select12", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select12:\n\r"
    "  uint32 src_system_port_fem_field_select12\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT11_ID, 
    "src_system_port_fem_field_select11", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select11:\n\r"
    "  uint32 src_system_port_fem_field_select11\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT10_ID, 
    "src_system_port_fem_field_select10", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select10:\n\r"
    "  uint32 src_system_port_fem_field_select10\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT9_ID, 
    "src_system_port_fem_field_select9", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select9:\n\r"
    "  uint32 src_system_port_fem_field_select9\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT8_ID, 
    "src_system_port_fem_field_select8", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select8:\n\r"
    "  uint32 src_system_port_fem_field_select8\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT7_ID, 
    "src_system_port_fem_field_select7", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select7:\n\r"
    "  uint32 src_system_port_fem_field_select7\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT6_ID, 
    "src_system_port_fem_field_select6", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select6:\n\r"
    "  uint32 src_system_port_fem_field_select6\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT5_ID, 
    "src_system_port_fem_field_select5", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select5:\n\r"
    "  uint32 src_system_port_fem_field_select5\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT4_ID, 
    "src_system_port_fem_field_select4", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select4:\n\r"
    "  uint32 src_system_port_fem_field_select4\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT3_ID, 
    "src_system_port_fem_field_select3", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select3:\n\r"
    "  uint32 src_system_port_fem_field_select3\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT2_ID, 
    "src_system_port_fem_field_select2", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select2:\n\r"
    "  uint32 src_system_port_fem_field_select2\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT1_ID, 
    "src_system_port_fem_field_select1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select1:\n\r"
    "  uint32 src_system_port_fem_field_select1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_SRC_SYSTEM_PORT_FEM_FIELD_SELECT0_ID, 
    "src_system_port_fem_field_select0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.src_system_port_fem_field_select0:\n\r"
    "  uint32 src_system_port_fem_field_select0\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 src_system_port_fem_field_select12 0\n\r"
    "  src_system_port_fem_field_select11 0 src_system_port_fem_field_select10 0\n\r"
    "  src_system_port_fem_field_select9 0 src_system_port_fem_field_select8 0\n\r"
    "  src_system_port_fem_field_select7 0 src_system_port_fem_field_select6 0\n\r"
    "  src_system_port_fem_field_select5 0 src_system_port_fem_field_select4 0\n\r"
    "  src_system_port_fem_field_select3 0 src_system_port_fem_field_select2 0\n\r"
    "  src_system_port_fem_field_select1 0 src_system_port_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_GET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_GET_UNSAFE_ID, 
    "ihp_src_system_port_fem_field_select_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_src_system_port_fem_field_select_map_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_GET_UNSAFE_IHP_SRC_SYSTEM_PORT_FEM_FIELD_SELECT_MAP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_pp_context_fem_bit_select_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_bit_select_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_fem_bit_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_FEM_BIT_SELECT_ID, 
    "pp_context_fem_bit_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_fem_bit_select:\n\r"
    "  uint32 pp_context_fem_bit_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_bit_select_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_fem_bit_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_BIT_SELECT_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_BIT_SELECT_TABLE_TBL_GET_UNSAFE_IHP_PP_CONTEXT_FEM_BIT_SELECT_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_pp_context_fem_bit_select_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_bit_select_table_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_BIT_SELECT_TABLE_TBL_GET_UNSAFE_IHP_PP_CONTEXT_FEM_BIT_SELECT_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_pp_context_fem_map_index_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_map_index_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_fem_map_data 0 pp_context_fem_map_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_FEM_MAP_DATA_ID, 
    "pp_context_fem_map_data", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_fem_map_data:\n\r"
    "  uint32 pp_context_fem_map_data\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_map_index_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_fem_map_data 0 pp_context_fem_map_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_FEM_MAP_INDEX_ID, 
    "pp_context_fem_map_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_fem_map_index:\n\r"
    "  uint32 pp_context_fem_map_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_map_index_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_fem_map_data 0 pp_context_fem_map_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_GET_UNSAFE_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_pp_context_fem_map_index_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_map_index_table_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_GET_UNSAFE_IHP_PP_CONTEXT_FEM_MAP_INDEX_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID, 
    "ihp_pp_context_fem_field_select_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_fem_field_select5 0\n\r"
    "  pp_context_fem_field_select4 0 pp_context_fem_field_select3 0\n\r"
    "  pp_context_fem_field_select2 0 pp_context_fem_field_select1 0\n\r"
    "  pp_context_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_FEM_FIELD_SELECT5_ID, 
    "pp_context_fem_field_select5", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_fem_field_select5:\n\r"
    "  uint32 pp_context_fem_field_select5\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_fem_field_select5 0\n\r"
    "  pp_context_fem_field_select4 0 pp_context_fem_field_select3 0\n\r"
    "  pp_context_fem_field_select2 0 pp_context_fem_field_select1 0\n\r"
    "  pp_context_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_FEM_FIELD_SELECT4_ID, 
    "pp_context_fem_field_select4", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_fem_field_select4:\n\r"
    "  uint32 pp_context_fem_field_select4\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_fem_field_select5 0\n\r"
    "  pp_context_fem_field_select4 0 pp_context_fem_field_select3 0\n\r"
    "  pp_context_fem_field_select2 0 pp_context_fem_field_select1 0\n\r"
    "  pp_context_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_FEM_FIELD_SELECT3_ID, 
    "pp_context_fem_field_select3", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_fem_field_select3:\n\r"
    "  uint32 pp_context_fem_field_select3\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_fem_field_select5 0\n\r"
    "  pp_context_fem_field_select4 0 pp_context_fem_field_select3 0\n\r"
    "  pp_context_fem_field_select2 0 pp_context_fem_field_select1 0\n\r"
    "  pp_context_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_FEM_FIELD_SELECT2_ID, 
    "pp_context_fem_field_select2", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_fem_field_select2:\n\r"
    "  uint32 pp_context_fem_field_select2\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_fem_field_select5 0\n\r"
    "  pp_context_fem_field_select4 0 pp_context_fem_field_select3 0\n\r"
    "  pp_context_fem_field_select2 0 pp_context_fem_field_select1 0\n\r"
    "  pp_context_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_FEM_FIELD_SELECT1_ID, 
    "pp_context_fem_field_select1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_fem_field_select1:\n\r"
    "  uint32 pp_context_fem_field_select1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_fem_field_select5 0\n\r"
    "  pp_context_fem_field_select4 0 pp_context_fem_field_select3 0\n\r"
    "  pp_context_fem_field_select2 0 pp_context_fem_field_select1 0\n\r"
    "  pp_context_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_TBL_DATA_PP_CONTEXT_FEM_FIELD_SELECT0_ID, 
    "pp_context_fem_field_select0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_context_fem_field_select0:\n\r"
    "  uint32 pp_context_fem_field_select0\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_field_select_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pp_context_fem_field_select5 0\n\r"
    "  pp_context_fem_field_select4 0 pp_context_fem_field_select3 0\n\r"
    "  pp_context_fem_field_select2 0 pp_context_fem_field_select1 0\n\r"
    "  pp_context_fem_field_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_GET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_GET_UNSAFE_ID, 
    "ihp_pp_context_fem_field_select_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pp_context_fem_field_select_map_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_GET_UNSAFE_IHP_PP_CONTEXT_FEM_FIELD_SELECT_MAP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_PROGRAM1_TBL_SET_UNSAFE_IHP_PARSER_PROGRAM1_TBL_SET_UNSAFE_ID, 
    "ihp_parser_program1_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_program1_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  macro_sel 0 next_addr_base 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_PROGRAM1_TBL_SET_UNSAFE_IHP_PARSER_PROGRAM1_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_PROGRAM1_TBL_SET_UNSAFE_IHP_PARSER_PROGRAM1_TBL_SET_UNSAFE_TBL_DATA_MACRO_SEL_ID, 
    "macro_sel", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.macro_sel:\n\r"
    "  uint32 macro_sel\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_program1_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  macro_sel 0 next_addr_base 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_PROGRAM1_TBL_SET_UNSAFE_IHP_PARSER_PROGRAM1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_PROGRAM1_TBL_SET_UNSAFE_IHP_PARSER_PROGRAM1_TBL_SET_UNSAFE_TBL_DATA_NEXT_ADDR_BASE_ID, 
    "next_addr_base", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.next_addr_base:\n\r"
    "  uint32 next_addr_base\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_program1_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  macro_sel 0 next_addr_base 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_PROGRAM1_TBL_SET_UNSAFE_IHP_PARSER_PROGRAM1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_PROGRAM1_TBL_GET_UNSAFE_IHP_PARSER_PROGRAM1_TBL_GET_UNSAFE_ID, 
    "ihp_parser_program1_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_program1_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_PROGRAM1_TBL_GET_UNSAFE_IHP_PARSER_PROGRAM1_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_PROGRAM2_TBL_SET_UNSAFE_IHP_PARSER_PROGRAM2_TBL_SET_UNSAFE_ID, 
    "ihp_parser_program2_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_program2_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  macro_sel 0 next_addr_base 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_PROGRAM2_TBL_SET_UNSAFE_IHP_PARSER_PROGRAM2_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_PROGRAM2_TBL_SET_UNSAFE_IHP_PARSER_PROGRAM2_TBL_SET_UNSAFE_TBL_DATA_MACRO_SEL_ID, 
    "macro_sel", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.macro_sel:\n\r"
    "  uint32 macro_sel\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_program2_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  macro_sel 0 next_addr_base 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_PROGRAM2_TBL_SET_UNSAFE_IHP_PARSER_PROGRAM2_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_PROGRAM2_TBL_SET_UNSAFE_IHP_PARSER_PROGRAM2_TBL_SET_UNSAFE_TBL_DATA_NEXT_ADDR_BASE_ID, 
    "next_addr_base", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.next_addr_base:\n\r"
    "  uint32 next_addr_base\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_program2_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  macro_sel 0 next_addr_base 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_PROGRAM2_TBL_SET_UNSAFE_IHP_PARSER_PROGRAM2_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_PROGRAM2_TBL_GET_UNSAFE_IHP_PARSER_PROGRAM2_TBL_GET_UNSAFE_ID, 
    "ihp_parser_program2_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_program2_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_PROGRAM2_TBL_GET_UNSAFE_IHP_PARSER_PROGRAM2_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_packet_format_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_packet_format_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  packet_format_code 0 key_program_profile 0 parser_pmf_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_TBL_DATA_PACKET_FORMAT_CODE_ID, 
    "packet_format_code", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.packet_format_code:\n\r"
    "  uint32 packet_format_code\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_packet_format_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  packet_format_code 0 key_program_profile 0 parser_pmf_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_TBL_DATA_KEY_PROGRAM_PROFILE_ID, 
    "key_program_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_program_profile:\n\r"
    "  uint32 key_program_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_packet_format_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  packet_format_code 0 key_program_profile 0 parser_pmf_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_TBL_DATA_PARSER_PMF_PROFILE_ID, 
    "parser_pmf_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parser_pmf_profile:\n\r"
    "  uint32 parser_pmf_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_packet_format_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  packet_format_code 0 key_program_profile 0 parser_pmf_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_IHP_PACKET_FORMAT_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PACKET_FORMAT_TABLE_TBL_GET_UNSAFE_IHP_PACKET_FORMAT_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_packet_format_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_packet_format_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PACKET_FORMAT_TABLE_TBL_GET_UNSAFE_IHP_PACKET_FORMAT_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_ID, 
    "ihp_parser_custom_macro_parameters_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_parameters_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 cstm_shift_b 0 cstm_shift_a 0 cstm_shift_sel 0\n\r"
    "  cstm_comparator_mask 0 cstm_comparator_mode 0 cstm_condition_select 0\n\r"
    "  cstm_mask_right 0 cstm_mask_left 0 cstm_word_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_TBL_DATA_CSTM_SHIFT_B_ID, 
    "cstm_shift_b", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cstm_shift_b:\n\r"
    "  uint32 cstm_shift_b\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_parameters_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 cstm_shift_b 0 cstm_shift_a 0 cstm_shift_sel 0\n\r"
    "  cstm_comparator_mask 0 cstm_comparator_mode 0 cstm_condition_select 0\n\r"
    "  cstm_mask_right 0 cstm_mask_left 0 cstm_word_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_TBL_DATA_CSTM_SHIFT_A_ID, 
    "cstm_shift_a", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cstm_shift_a:\n\r"
    "  uint32 cstm_shift_a\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_parameters_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 cstm_shift_b 0 cstm_shift_a 0 cstm_shift_sel 0\n\r"
    "  cstm_comparator_mask 0 cstm_comparator_mode 0 cstm_condition_select 0\n\r"
    "  cstm_mask_right 0 cstm_mask_left 0 cstm_word_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_TBL_DATA_CSTM_SHIFT_SEL_ID, 
    "cstm_shift_sel", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cstm_shift_sel:\n\r"
    "  uint32 cstm_shift_sel\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_parameters_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 cstm_shift_b 0 cstm_shift_a 0 cstm_shift_sel 0\n\r"
    "  cstm_comparator_mask 0 cstm_comparator_mode 0 cstm_condition_select 0\n\r"
    "  cstm_mask_right 0 cstm_mask_left 0 cstm_word_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_TBL_DATA_CSTM_COMPARATOR_MASK_ID, 
    "cstm_comparator_mask", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cstm_comparator_mask:\n\r"
    "  uint32 cstm_comparator_mask\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_parameters_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 cstm_shift_b 0 cstm_shift_a 0 cstm_shift_sel 0\n\r"
    "  cstm_comparator_mask 0 cstm_comparator_mode 0 cstm_condition_select 0\n\r"
    "  cstm_mask_right 0 cstm_mask_left 0 cstm_word_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_TBL_DATA_CSTM_COMPARATOR_MODE_ID, 
    "cstm_comparator_mode", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cstm_comparator_mode:\n\r"
    "  uint32 cstm_comparator_mode\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_parameters_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 cstm_shift_b 0 cstm_shift_a 0 cstm_shift_sel 0\n\r"
    "  cstm_comparator_mask 0 cstm_comparator_mode 0 cstm_condition_select 0\n\r"
    "  cstm_mask_right 0 cstm_mask_left 0 cstm_word_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_TBL_DATA_CSTM_CONDITION_SELECT_ID, 
    "cstm_condition_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cstm_condition_select:\n\r"
    "  uint32 cstm_condition_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_parameters_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 cstm_shift_b 0 cstm_shift_a 0 cstm_shift_sel 0\n\r"
    "  cstm_comparator_mask 0 cstm_comparator_mode 0 cstm_condition_select 0\n\r"
    "  cstm_mask_right 0 cstm_mask_left 0 cstm_word_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_TBL_DATA_CSTM_MASK_RIGHT_ID, 
    "cstm_mask_right", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cstm_mask_right:\n\r"
    "  uint32 cstm_mask_right\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_parameters_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 cstm_shift_b 0 cstm_shift_a 0 cstm_shift_sel 0\n\r"
    "  cstm_comparator_mask 0 cstm_comparator_mode 0 cstm_condition_select 0\n\r"
    "  cstm_mask_right 0 cstm_mask_left 0 cstm_word_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_TBL_DATA_CSTM_MASK_LEFT_ID, 
    "cstm_mask_left", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cstm_mask_left:\n\r"
    "  uint32 cstm_mask_left\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_parameters_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 cstm_shift_b 0 cstm_shift_a 0 cstm_shift_sel 0\n\r"
    "  cstm_comparator_mask 0 cstm_comparator_mode 0 cstm_condition_select 0\n\r"
    "  cstm_mask_right 0 cstm_mask_left 0 cstm_word_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_TBL_DATA_CSTM_WORD_SELECT_ID, 
    "cstm_word_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cstm_word_select:\n\r"
    "  uint32 cstm_word_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_parameters_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 cstm_shift_b 0 cstm_shift_a 0 cstm_shift_sel 0\n\r"
    "  cstm_comparator_mask 0 cstm_comparator_mode 0 cstm_condition_select 0\n\r"
    "  cstm_mask_right 0 cstm_mask_left 0 cstm_word_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_GET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_GET_UNSAFE_ID, 
    "ihp_parser_custom_macro_parameters_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_parameters_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_GET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PARAMETERS_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_ETH_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_ETH_PROTOCOLS_TBL_SET_UNSAFE_ID, 
    "ihp_parser_eth_protocols_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_eth_protocols_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  eth_sap_protocol 0 eth_type_protocol 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_ETH_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_ETH_PROTOCOLS_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_ETH_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_ETH_PROTOCOLS_TBL_SET_UNSAFE_TBL_DATA_ETH_SAP_PROTOCOL_ID, 
    "eth_sap_protocol", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.eth_sap_protocol:\n\r"
    "  uint32 eth_sap_protocol\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_eth_protocols_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  eth_sap_protocol 0 eth_type_protocol 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_ETH_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_ETH_PROTOCOLS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_ETH_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_ETH_PROTOCOLS_TBL_SET_UNSAFE_TBL_DATA_ETH_TYPE_PROTOCOL_ID, 
    "eth_type_protocol", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.eth_type_protocol:\n\r"
    "  uint32 eth_type_protocol\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_eth_protocols_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  eth_sap_protocol 0 eth_type_protocol 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_ETH_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_ETH_PROTOCOLS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_ETH_PROTOCOLS_TBL_GET_UNSAFE_IHP_PARSER_ETH_PROTOCOLS_TBL_GET_UNSAFE_ID, 
    "ihp_parser_eth_protocols_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_eth_protocols_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_ETH_PROTOCOLS_TBL_GET_UNSAFE_IHP_PARSER_ETH_PROTOCOLS_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_IP_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_IP_PROTOCOLS_TBL_SET_UNSAFE_ID, 
    "ihp_parser_ip_protocols_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_ip_protocols_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ip_protocol 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_IP_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_IP_PROTOCOLS_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_IP_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_IP_PROTOCOLS_TBL_SET_UNSAFE_TBL_DATA_IP_PROTOCOL_ID, 
    "ip_protocol", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ip_protocol:\n\r"
    "  uint32 ip_protocol\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_ip_protocols_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ip_protocol 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_IP_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_IP_PROTOCOLS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_IP_PROTOCOLS_TBL_GET_UNSAFE_IHP_PARSER_IP_PROTOCOLS_TBL_GET_UNSAFE_ID, 
    "ihp_parser_ip_protocols_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_ip_protocols_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_IP_PROTOCOLS_TBL_GET_UNSAFE_IHP_PARSER_IP_PROTOCOLS_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PROTOCOLS_TBL_SET_UNSAFE_ID, 
    "ihp_parser_custom_macro_protocols_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_protocols_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 cstm_protocol 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PROTOCOLS_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PROTOCOLS_TBL_SET_UNSAFE_TBL_DATA_CSTM_PROTOCOL_ID, 
    "cstm_protocol", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cstm_protocol:\n\r"
    "  uint32 cstm_protocol\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_protocols_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 cstm_protocol 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PROTOCOLS_TBL_SET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PROTOCOLS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PARSER_CUSTOM_MACRO_PROTOCOLS_TBL_GET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PROTOCOLS_TBL_GET_UNSAFE_ID, 
    "ihp_parser_custom_macro_protocols_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_parser_custom_macro_protocols_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PARSER_CUSTOM_MACRO_PROTOCOLS_TBL_GET_UNSAFE_IHP_PARSER_CUSTOM_MACRO_PROTOCOLS_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_ID, 
    "ihp_isem_management_request_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_isem_management_request_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 isem_refreshed_by_dsp 0 isem_self 0 isem_age_status 0 isem_payload 0\n\r"
    "  isem_key_index 0 isem_key 0 isem_stamp 0 isem_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_TBL_DATA_ISEM_REFRESHED_BY_DSP_ID, 
    "isem_refreshed_by_dsp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.isem_refreshed_by_dsp:\n\r"
    "  uint32 isem_refreshed_by_dsp\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_isem_management_request_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 isem_refreshed_by_dsp 0 isem_self 0 isem_age_status 0 isem_payload 0\n\r"
    "  isem_key_index 0 isem_key 0 isem_stamp 0 isem_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_TBL_DATA_ISEM_SELF_ID, 
    "isem_self", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.isem_self:\n\r"
    "  uint32 isem_self\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_isem_management_request_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 isem_refreshed_by_dsp 0 isem_self 0 isem_age_status 0 isem_payload 0\n\r"
    "  isem_key_index 0 isem_key 0 isem_stamp 0 isem_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_TBL_DATA_ISEM_AGE_STATUS_ID, 
    "isem_age_status", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.isem_age_status:\n\r"
    "  uint32 isem_age_status\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_isem_management_request_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 isem_refreshed_by_dsp 0 isem_self 0 isem_age_status 0 isem_payload 0\n\r"
    "  isem_key_index 0 isem_key 0 isem_stamp 0 isem_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_TBL_DATA_ISEM_PAYLOAD_ID, 
    "isem_payload", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.isem_payload:\n\r"
    "  uint32 isem_payload\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_isem_management_request_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 isem_refreshed_by_dsp 0 isem_self 0 isem_age_status 0 isem_payload 0\n\r"
    "  isem_key_index 0 isem_key 0 isem_stamp 0 isem_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_TBL_DATA_ISEM_KEY_INDEX_ID, 
    "isem_key_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  isem_key_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_isem_management_request_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 isem_refreshed_by_dsp 0 isem_self 0 isem_age_status 0 isem_payload 0\n\r"
    "  isem_key_index 0 isem_key 0 isem_stamp 0 isem_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_TBL_DATA_ISEM_KEY_ID, 
    "isem_key", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.isem_key[ prm_isem_key_index]:\n\r"
    "  uint32 isem_key[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_isem_management_request_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 isem_refreshed_by_dsp 0 isem_self 0 isem_age_status 0 isem_payload 0\n\r"
    "  isem_key_index 0 isem_key 0 isem_stamp 0 isem_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_TBL_DATA_ISEM_STAMP_ID, 
    "isem_stamp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.isem_stamp:\n\r"
    "  uint32 isem_stamp\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_isem_management_request_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 isem_refreshed_by_dsp 0 isem_self 0 isem_age_status 0 isem_payload 0\n\r"
    "  isem_key_index 0 isem_key 0 isem_stamp 0 isem_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_TBL_DATA_ISEM_TYPE_ID, 
    "isem_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.isem_type:\n\r"
    "  uint32 isem_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_isem_management_request_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 isem_refreshed_by_dsp 0 isem_self 0 isem_age_status 0 isem_payload 0\n\r"
    "  isem_key_index 0 isem_key 0 isem_stamp 0 isem_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_GET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_GET_UNSAFE_ID, 
    "ihp_isem_management_request_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_isem_management_request_tbl_get_unsafe entry_offset_ndx\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_ISEM_MANAGEMENT_REQUEST_TBL_GET_UNSAFE_IHP_ISEM_MANAGEMENT_REQUEST_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_ISID_TBL_SET_UNSAFE_IHP_VSI_ISID_TBL_SET_UNSAFE_ID, 
    "ihp_vsi_isid_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_isid_tbl_set_unsafe entry_offset_ndx 0 vsi_or_isid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_ISID_TBL_SET_UNSAFE_IHP_VSI_ISID_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_ISID_TBL_SET_UNSAFE_IHP_VSI_ISID_TBL_SET_UNSAFE_TBL_DATA_VSI_OR_ISID_ID, 
    "vsi_or_isid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsi_or_isid:\n\r"
    "  uint32 vsi_or_isid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_isid_tbl_set_unsafe entry_offset_ndx 0 vsi_or_isid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_ISID_TBL_SET_UNSAFE_IHP_VSI_ISID_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_ISID_TBL_GET_UNSAFE_IHP_VSI_ISID_TBL_GET_UNSAFE_ID, 
    "ihp_vsi_isid_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_isid_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_ISID_TBL_GET_UNSAFE_IHP_VSI_ISID_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_MY_MAC_TBL_SET_UNSAFE_IHP_VSI_MY_MAC_TBL_SET_UNSAFE_ID, 
    "ihp_vsi_my_mac_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_my_mac_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  enable_my_mac 0 my_mac_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_MY_MAC_TBL_SET_UNSAFE_IHP_VSI_MY_MAC_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_MY_MAC_TBL_SET_UNSAFE_IHP_VSI_MY_MAC_TBL_SET_UNSAFE_TBL_DATA_ENABLE_MY_MAC_ID, 
    "enable_my_mac", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.enable_my_mac:\n\r"
    "  uint32 enable_my_mac\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_my_mac_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  enable_my_mac 0 my_mac_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_MY_MAC_TBL_SET_UNSAFE_IHP_VSI_MY_MAC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_MY_MAC_TBL_SET_UNSAFE_IHP_VSI_MY_MAC_TBL_SET_UNSAFE_TBL_DATA_MY_MAC_LSB_ID, 
    "my_mac_lsb", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.my_mac_lsb:\n\r"
    "  uint32 my_mac_lsb\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_my_mac_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  enable_my_mac 0 my_mac_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_MY_MAC_TBL_SET_UNSAFE_IHP_VSI_MY_MAC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_MY_MAC_TBL_GET_UNSAFE_IHP_VSI_MY_MAC_TBL_GET_UNSAFE_ID, 
    "ihp_vsi_my_mac_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_my_mac_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_MY_MAC_TBL_GET_UNSAFE_IHP_VSI_MY_MAC_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_TOPOLOGY_ID_TBL_SET_UNSAFE_IHP_VSI_TOPOLOGY_ID_TBL_SET_UNSAFE_ID, 
    "ihp_vsi_topology_id_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_topology_id_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  vsi_topology_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_TOPOLOGY_ID_TBL_SET_UNSAFE_IHP_VSI_TOPOLOGY_ID_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_TOPOLOGY_ID_TBL_SET_UNSAFE_IHP_VSI_TOPOLOGY_ID_TBL_SET_UNSAFE_TBL_DATA_VSI_TOPOLOGY_ID_ID, 
    "vsi_topology_id", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsi_topology_id:\n\r"
    "  uint32 vsi_topology_id\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_topology_id_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  vsi_topology_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_TOPOLOGY_ID_TBL_SET_UNSAFE_IHP_VSI_TOPOLOGY_ID_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_TOPOLOGY_ID_TBL_GET_UNSAFE_IHP_VSI_TOPOLOGY_ID_TBL_GET_UNSAFE_ID, 
    "ihp_vsi_topology_id_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_topology_id_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_TOPOLOGY_ID_TBL_GET_UNSAFE_IHP_VSI_TOPOLOGY_ID_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_FID_CLASS_TBL_SET_UNSAFE_IHP_VSI_FID_CLASS_TBL_SET_UNSAFE_ID, 
    "ihp_vsi_fid_class_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_fid_class_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fid_class_index 0 fid_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_FID_CLASS_TBL_SET_UNSAFE_IHP_VSI_FID_CLASS_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_FID_CLASS_TBL_SET_UNSAFE_IHP_VSI_FID_CLASS_TBL_SET_UNSAFE_TBL_DATA_FID_CLASS_INDEX_ID, 
    "fid_class_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fid_class_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_fid_class_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fid_class_index 0 fid_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_FID_CLASS_TBL_SET_UNSAFE_IHP_VSI_FID_CLASS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_FID_CLASS_TBL_SET_UNSAFE_IHP_VSI_FID_CLASS_TBL_SET_UNSAFE_TBL_DATA_FID_CLASS_ID, 
    "fid_class", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fid_class[ prm_fid_class_index]:\n\r"
    "  uint32 fid_class[4]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_fid_class_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fid_class_index 0 fid_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_FID_CLASS_TBL_SET_UNSAFE_IHP_VSI_FID_CLASS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_FID_CLASS_TBL_GET_UNSAFE_IHP_VSI_FID_CLASS_TBL_GET_UNSAFE_ID, 
    "ihp_vsi_fid_class_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_fid_class_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_FID_CLASS_TBL_GET_UNSAFE_IHP_VSI_FID_CLASS_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_DA_NOT_FOUND_TBL_SET_UNSAFE_IHP_VSI_DA_NOT_FOUND_TBL_SET_UNSAFE_ID, 
    "ihp_vsi_da_not_found_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_da_not_found_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  profile_index_index 0 profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_DA_NOT_FOUND_TBL_SET_UNSAFE_IHP_VSI_DA_NOT_FOUND_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_DA_NOT_FOUND_TBL_SET_UNSAFE_IHP_VSI_DA_NOT_FOUND_TBL_SET_UNSAFE_TBL_DATA_PROFILE_INDEX_INDEX_ID, 
    "profile_index_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  profile_index_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_da_not_found_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  profile_index_index 0 profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_DA_NOT_FOUND_TBL_SET_UNSAFE_IHP_VSI_DA_NOT_FOUND_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_DA_NOT_FOUND_TBL_SET_UNSAFE_IHP_VSI_DA_NOT_FOUND_TBL_SET_UNSAFE_TBL_DATA_PROFILE_INDEX_ID, 
    "profile_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.profile_index[ prm_profile_index_index]:\n\r"
    "  uint32 profile_index[4]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_da_not_found_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  profile_index_index 0 profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_DA_NOT_FOUND_TBL_SET_UNSAFE_IHP_VSI_DA_NOT_FOUND_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_DA_NOT_FOUND_TBL_GET_UNSAFE_IHP_VSI_DA_NOT_FOUND_TBL_GET_UNSAFE_ID, 
    "ihp_vsi_da_not_found_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_da_not_found_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_DA_NOT_FOUND_TBL_GET_UNSAFE_IHP_VSI_DA_NOT_FOUND_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_BVD_TOPOLOGY_ID_TBL_SET_UNSAFE_IHP_BVD_TOPOLOGY_ID_TBL_SET_UNSAFE_ID, 
    "ihp_bvd_topology_id_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_bvd_topology_id_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  bvd_topology_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_BVD_TOPOLOGY_ID_TBL_SET_UNSAFE_IHP_BVD_TOPOLOGY_ID_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_BVD_TOPOLOGY_ID_TBL_SET_UNSAFE_IHP_BVD_TOPOLOGY_ID_TBL_SET_UNSAFE_TBL_DATA_BVD_TOPOLOGY_ID_ID, 
    "bvd_topology_id", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bvd_topology_id:\n\r"
    "  uint32 bvd_topology_id\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_bvd_topology_id_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  bvd_topology_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_BVD_TOPOLOGY_ID_TBL_SET_UNSAFE_IHP_BVD_TOPOLOGY_ID_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_BVD_TOPOLOGY_ID_TBL_GET_UNSAFE_IHP_BVD_TOPOLOGY_ID_TBL_GET_UNSAFE_ID, 
    "ihp_bvd_topology_id_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_bvd_topology_id_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_BVD_TOPOLOGY_ID_TBL_GET_UNSAFE_IHP_BVD_TOPOLOGY_ID_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_BVD_FID_CLASS_TBL_SET_UNSAFE_IHP_BVD_FID_CLASS_TBL_SET_UNSAFE_ID, 
    "ihp_bvd_fid_class_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_bvd_fid_class_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fid_class_index 0 fid_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_BVD_FID_CLASS_TBL_SET_UNSAFE_IHP_BVD_FID_CLASS_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_BVD_FID_CLASS_TBL_SET_UNSAFE_IHP_BVD_FID_CLASS_TBL_SET_UNSAFE_TBL_DATA_FID_CLASS_INDEX_ID, 
    "fid_class_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fid_class_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_bvd_fid_class_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fid_class_index 0 fid_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_BVD_FID_CLASS_TBL_SET_UNSAFE_IHP_BVD_FID_CLASS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_BVD_FID_CLASS_TBL_SET_UNSAFE_IHP_BVD_FID_CLASS_TBL_SET_UNSAFE_TBL_DATA_FID_CLASS_ID, 
    "fid_class", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fid_class[ prm_fid_class_index]:\n\r"
    "  uint32 fid_class[4]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_bvd_fid_class_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fid_class_index 0 fid_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_BVD_FID_CLASS_TBL_SET_UNSAFE_IHP_BVD_FID_CLASS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_BVD_FID_CLASS_TBL_GET_UNSAFE_IHP_BVD_FID_CLASS_TBL_GET_UNSAFE_ID, 
    "ihp_bvd_fid_class_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_bvd_fid_class_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_BVD_FID_CLASS_TBL_GET_UNSAFE_IHP_BVD_FID_CLASS_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_BVD_DA_NOT_FOUND_TBL_SET_UNSAFE_IHP_BVD_DA_NOT_FOUND_TBL_SET_UNSAFE_ID, 
    "ihp_bvd_da_not_found_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_bvd_da_not_found_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  profile_index_index 0 profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_BVD_DA_NOT_FOUND_TBL_SET_UNSAFE_IHP_BVD_DA_NOT_FOUND_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_BVD_DA_NOT_FOUND_TBL_SET_UNSAFE_IHP_BVD_DA_NOT_FOUND_TBL_SET_UNSAFE_TBL_DATA_PROFILE_INDEX_INDEX_ID, 
    "profile_index_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  profile_index_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_bvd_da_not_found_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  profile_index_index 0 profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_BVD_DA_NOT_FOUND_TBL_SET_UNSAFE_IHP_BVD_DA_NOT_FOUND_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_BVD_DA_NOT_FOUND_TBL_SET_UNSAFE_IHP_BVD_DA_NOT_FOUND_TBL_SET_UNSAFE_TBL_DATA_PROFILE_INDEX_ID, 
    "profile_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.profile_index[ prm_profile_index_index]:\n\r"
    "  uint32 profile_index[4]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_bvd_da_not_found_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  profile_index_index 0 profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_BVD_DA_NOT_FOUND_TBL_SET_UNSAFE_IHP_BVD_DA_NOT_FOUND_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_BVD_DA_NOT_FOUND_TBL_GET_UNSAFE_IHP_BVD_DA_NOT_FOUND_TBL_GET_UNSAFE_ID, 
    "ihp_bvd_da_not_found_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_bvd_da_not_found_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_BVD_DA_NOT_FOUND_TBL_GET_UNSAFE_IHP_BVD_DA_NOT_FOUND_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FID_CLASS_2_FID_TBL_SET_UNSAFE_IHP_FID_CLASS_2_FID_TBL_SET_UNSAFE_ID, 
    "ihp_fid_class_2_fid_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_fid_class_2_fid_tbl_set_unsafe entry_offset_ndx 0 fid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FID_CLASS_2_FID_TBL_SET_UNSAFE_IHP_FID_CLASS_2_FID_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FID_CLASS_2_FID_TBL_SET_UNSAFE_IHP_FID_CLASS_2_FID_TBL_SET_UNSAFE_TBL_DATA_FID_ID, 
    "fid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fid:\n\r"
    "  uint32 fid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_fid_class_2_fid_tbl_set_unsafe entry_offset_ndx 0 fid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FID_CLASS_2_FID_TBL_SET_UNSAFE_IHP_FID_CLASS_2_FID_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_FID_CLASS_2_FID_TBL_GET_UNSAFE_IHP_FID_CLASS_2_FID_TBL_GET_UNSAFE_ID, 
    "ihp_fid_class_2_fid_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_fid_class_2_fid_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_FID_CLASS_2_FID_TBL_GET_UNSAFE_IHP_FID_CLASS_2_FID_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_SET_UNSAFE_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_vlan_range_compression_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vlan_range_compression_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 vlan_range_lower_limit 0 vlan_range_upper_limit 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_SET_UNSAFE_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_SET_UNSAFE_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_SET_UNSAFE_TBL_DATA_VLAN_RANGE_LOWER_LIMIT_ID, 
    "vlan_range_lower_limit", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_range_lower_limit:\n\r"
    "  uint32 vlan_range_lower_limit\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vlan_range_compression_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 vlan_range_lower_limit 0 vlan_range_upper_limit 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_SET_UNSAFE_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_SET_UNSAFE_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_SET_UNSAFE_TBL_DATA_VLAN_RANGE_UPPER_LIMIT_ID, 
    "vlan_range_upper_limit", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_range_upper_limit:\n\r"
    "  uint32 vlan_range_upper_limit\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vlan_range_compression_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 vlan_range_lower_limit 0 vlan_range_upper_limit 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_SET_UNSAFE_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_GET_UNSAFE_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_vlan_range_compression_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vlan_range_compression_table_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_GET_UNSAFE_IHP_VLAN_RANGE_COMPRESSION_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_SET_UNSAFE_ID, 
    "ihp_vtt_in_pp_port_vlan_config_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_vlan_config_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 range_valid1 0 range_valid0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_SET_UNSAFE_TBL_DATA_RANGE_VALID1_ID, 
    "range_valid1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.range_valid1:\n\r"
    "  uint32 range_valid1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_vlan_config_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 range_valid1 0 range_valid0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_SET_UNSAFE_TBL_DATA_RANGE_VALID0_ID, 
    "range_valid0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.range_valid0:\n\r"
    "  uint32 range_valid0\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_vlan_config_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 range_valid1 0 range_valid0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_GET_UNSAFE_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_GET_UNSAFE_ID, 
    "ihp_vtt_in_pp_port_vlan_config_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_vlan_config_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_GET_UNSAFE_IHP_VTT_IN_PP_PORT_VLAN_CONFIG_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_DESIGNATED_VLAN_TABLE_TBL_SET_UNSAFE_IHP_DESIGNATED_VLAN_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_designated_vlan_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_designated_vlan_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  designated_vlan 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_DESIGNATED_VLAN_TABLE_TBL_SET_UNSAFE_IHP_DESIGNATED_VLAN_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_DESIGNATED_VLAN_TABLE_TBL_SET_UNSAFE_IHP_DESIGNATED_VLAN_TABLE_TBL_SET_UNSAFE_TBL_DATA_DESIGNATED_VLAN_ID, 
    "designated_vlan", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.designated_vlan:\n\r"
    "  uint32 designated_vlan\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_designated_vlan_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  designated_vlan 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_DESIGNATED_VLAN_TABLE_TBL_SET_UNSAFE_IHP_DESIGNATED_VLAN_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_DESIGNATED_VLAN_TABLE_TBL_GET_UNSAFE_IHP_DESIGNATED_VLAN_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_designated_vlan_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_designated_vlan_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_DESIGNATED_VLAN_TABLE_TBL_GET_UNSAFE_IHP_DESIGNATED_VLAN_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_PORT_MEMBERSHIP_TBL_SET_UNSAFE_IHP_VSI_PORT_MEMBERSHIP_TBL_SET_UNSAFE_ID, 
    "ihp_vsi_port_membership_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_port_membership_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  vlan_port_member_line_index 0 vlan_port_member_line 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_PORT_MEMBERSHIP_TBL_SET_UNSAFE_IHP_VSI_PORT_MEMBERSHIP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_PORT_MEMBERSHIP_TBL_SET_UNSAFE_IHP_VSI_PORT_MEMBERSHIP_TBL_SET_UNSAFE_TBL_DATA_VLAN_PORT_MEMBER_LINE_INDEX_ID, 
    "vlan_port_member_line_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  vlan_port_member_line_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_port_membership_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  vlan_port_member_line_index 0 vlan_port_member_line 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_PORT_MEMBERSHIP_TBL_SET_UNSAFE_IHP_VSI_PORT_MEMBERSHIP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_PORT_MEMBERSHIP_TBL_SET_UNSAFE_IHP_VSI_PORT_MEMBERSHIP_TBL_SET_UNSAFE_TBL_DATA_VLAN_PORT_MEMBER_LINE_ID, 
    "vlan_port_member_line", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_port_member_line[ prm_vlan_port_member_line_index]:\n\r"
    "  uint32 vlan_port_member_line[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_port_membership_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  vlan_port_member_line_index 0 vlan_port_member_line 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_PORT_MEMBERSHIP_TBL_SET_UNSAFE_IHP_VSI_PORT_MEMBERSHIP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VSI_PORT_MEMBERSHIP_TBL_GET_UNSAFE_IHP_VSI_PORT_MEMBERSHIP_TBL_GET_UNSAFE_ID, 
    "ihp_vsi_port_membership_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vsi_port_membership_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VSI_PORT_MEMBERSHIP_TBL_GET_UNSAFE_IHP_VSI_PORT_MEMBERSHIP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID, 
    "ihp_vtt_in_pp_port_config_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_config_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  learn_ac 0 small_em_key_profile 0 port_is_pbp 0 default_sem_opcode 0\n\r"
    "  default_sem_base 0 vlan_domain 0 designated_vlan_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_LEARN_AC_ID, 
    "learn_ac", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.learn_ac:\n\r"
    "  uint32 learn_ac\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_config_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  learn_ac 0 small_em_key_profile 0 port_is_pbp 0 default_sem_opcode 0\n\r"
    "  default_sem_base 0 vlan_domain 0 designated_vlan_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_SMALL_EM_KEY_PROFILE_ID, 
    "small_em_key_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.small_em_key_profile:\n\r"
    "  uint32 small_em_key_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_config_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  learn_ac 0 small_em_key_profile 0 port_is_pbp 0 default_sem_opcode 0\n\r"
    "  default_sem_base 0 vlan_domain 0 designated_vlan_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_PORT_IS_PBP_ID, 
    "port_is_pbp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.port_is_pbp:\n\r"
    "  uint32 port_is_pbp\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_config_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  learn_ac 0 small_em_key_profile 0 port_is_pbp 0 default_sem_opcode 0\n\r"
    "  default_sem_base 0 vlan_domain 0 designated_vlan_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_DEFAULT_SEM_OPCODE_ID, 
    "default_sem_opcode", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.default_sem_opcode:\n\r"
    "  uint32 default_sem_opcode\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_config_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  learn_ac 0 small_em_key_profile 0 port_is_pbp 0 default_sem_opcode 0\n\r"
    "  default_sem_base 0 vlan_domain 0 designated_vlan_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_DEFAULT_SEM_BASE_ID, 
    "default_sem_base", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.default_sem_base:\n\r"
    "  uint32 default_sem_base\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_config_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  learn_ac 0 small_em_key_profile 0 port_is_pbp 0 default_sem_opcode 0\n\r"
    "  default_sem_base 0 vlan_domain 0 designated_vlan_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_VLAN_DOMAIN_ID, 
    "vlan_domain", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_domain:\n\r"
    "  uint32 vlan_domain\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_config_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  learn_ac 0 small_em_key_profile 0 port_is_pbp 0 default_sem_opcode 0\n\r"
    "  default_sem_base 0 vlan_domain 0 designated_vlan_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_TBL_DATA_DESIGNATED_VLAN_INDEX_ID, 
    "designated_vlan_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.designated_vlan_index:\n\r"
    "  uint32 designated_vlan_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_config_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  learn_ac 0 small_em_key_profile 0 port_is_pbp 0 default_sem_opcode 0\n\r"
    "  default_sem_base 0 vlan_domain 0 designated_vlan_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_GET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_GET_UNSAFE_ID, 
    "ihp_vtt_in_pp_port_config_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_in_pp_port_config_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_IN_PP_PORT_CONFIG_TBL_GET_UNSAFE_IHP_VTT_IN_PP_PORT_CONFIG_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  sem_result_table_index 0 sem_result_table 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TBL_SET_UNSAFE_TBL_DATA_SEM_RESULT_TABLE_INDEX_ID, 
    "sem_result_table_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  sem_result_table_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  sem_result_table_index 0 sem_result_table 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TBL_SET_UNSAFE_TBL_DATA_SEM_RESULT_TABLE_ID, 
    "sem_result_table", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.sem_result_table[ prm_sem_result_table_index]:\n\r"
    "  uint32 sem_result_table[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  sem_result_table_index 0 sem_result_table 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_ac_p2p_to_ac_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_ac_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 vlan_edit_vid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_TBL_DATA_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.type:\n\r"
    "  uint32 type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_ac_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 vlan_edit_vid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_TBL_DATA_DESTINATION_ID, 
    "destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination:\n\r"
    "  uint32 destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_ac_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 vlan_edit_vid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_TBL_DATA_COS_PROFILE_ID, 
    "cos_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cos_profile:\n\r"
    "  uint32 cos_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_ac_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 vlan_edit_vid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_TBL_DATA_CFM_TRAP_VALID_ID, 
    "cfm_trap_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cfm_trap_valid:\n\r"
    "  uint32 cfm_trap_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_ac_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 vlan_edit_vid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_TBL_DATA_CFM_MAX_LEVEL_ID, 
    "cfm_max_level", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cfm_max_level:\n\r"
    "  uint32 cfm_max_level\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_ac_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 vlan_edit_vid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_TBL_DATA_MEF_L2_CP_PROFILE_ID, 
    "mef_l2_cp_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mef_l2_cp_profile:\n\r"
    "  uint32 mef_l2_cp_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_ac_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 vlan_edit_vid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_TBL_DATA_VLAN_EDIT_PROFILE_ID, 
    "vlan_edit_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_edit_profile:\n\r"
    "  uint32 vlan_edit_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_ac_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 vlan_edit_vid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_TBL_DATA_VLAN_EDIT_PCP_DEI_PROFILE_ID, 
    "vlan_edit_pcp_dei_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_edit_pcp_dei_profile:\n\r"
    "  uint32 vlan_edit_pcp_dei_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_ac_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 vlan_edit_vid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_TBL_DATA_VLAN_EDIT_VID_ID, 
    "vlan_edit_vid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_edit_vid:\n\r"
    "  uint32 vlan_edit_vid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_ac_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 vlan_edit_vid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_TBL_DATA_OUT_LIF_ID, 
    "out_lif", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.out_lif:\n\r"
    "  uint32 out_lif\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_ac_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 vlan_edit_vid 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_ac_p2p_to_ac_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_ac_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_AC_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_ac_p2p_to_pwe_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pwe_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 out_lif_or_vc_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_TBL_DATA_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.type:\n\r"
    "  uint32 type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pwe_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 out_lif_or_vc_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_TBL_DATA_DESTINATION_ID, 
    "destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination:\n\r"
    "  uint32 destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pwe_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 out_lif_or_vc_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_TBL_DATA_COS_PROFILE_ID, 
    "cos_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cos_profile:\n\r"
    "  uint32 cos_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pwe_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 out_lif_or_vc_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_TBL_DATA_CFM_TRAP_VALID_ID, 
    "cfm_trap_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cfm_trap_valid:\n\r"
    "  uint32 cfm_trap_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pwe_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 out_lif_or_vc_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_TBL_DATA_CFM_MAX_LEVEL_ID, 
    "cfm_max_level", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cfm_max_level:\n\r"
    "  uint32 cfm_max_level\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pwe_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 out_lif_or_vc_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_TBL_DATA_MEF_L2_CP_PROFILE_ID, 
    "mef_l2_cp_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mef_l2_cp_profile:\n\r"
    "  uint32 mef_l2_cp_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pwe_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 out_lif_or_vc_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_TBL_DATA_VLAN_EDIT_PROFILE_ID, 
    "vlan_edit_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_edit_profile:\n\r"
    "  uint32 vlan_edit_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pwe_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 out_lif_or_vc_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_TBL_DATA_VLAN_EDIT_PCP_DEI_PROFILE_ID, 
    "vlan_edit_pcp_dei_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_edit_pcp_dei_profile:\n\r"
    "  uint32 vlan_edit_pcp_dei_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pwe_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 out_lif_or_vc_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_TBL_DATA_OUT_LIF_OR_VC_LABEL_ID, 
    "out_lif_or_vc_label", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.out_lif_or_vc_label:\n\r"
    "  uint32 out_lif_or_vc_label\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pwe_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 out_lif_or_vc_label 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_ac_p2p_to_pwe_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pwe_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PWE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_ac_p2p_to_pbb_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pbb_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 isid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_TBL_DATA_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.type:\n\r"
    "  uint32 type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pbb_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 isid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_TBL_DATA_DESTINATION_ID, 
    "destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination:\n\r"
    "  uint32 destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pbb_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 isid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_TBL_DATA_COS_PROFILE_ID, 
    "cos_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cos_profile:\n\r"
    "  uint32 cos_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pbb_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 isid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_TBL_DATA_CFM_TRAP_VALID_ID, 
    "cfm_trap_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cfm_trap_valid:\n\r"
    "  uint32 cfm_trap_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pbb_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 isid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_TBL_DATA_CFM_MAX_LEVEL_ID, 
    "cfm_max_level", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cfm_max_level:\n\r"
    "  uint32 cfm_max_level\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pbb_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 isid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_TBL_DATA_MEF_L2_CP_PROFILE_ID, 
    "mef_l2_cp_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mef_l2_cp_profile:\n\r"
    "  uint32 mef_l2_cp_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pbb_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 isid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_TBL_DATA_VLAN_EDIT_PROFILE_ID, 
    "vlan_edit_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_edit_profile:\n\r"
    "  uint32 vlan_edit_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pbb_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 isid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_TBL_DATA_VLAN_EDIT_PCP_DEI_PROFILE_ID, 
    "vlan_edit_pcp_dei_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_edit_pcp_dei_profile:\n\r"
    "  uint32 vlan_edit_pcp_dei_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pbb_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 isid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_TBL_DATA_ISID_ID, 
    "isid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.isid:\n\r"
    "  uint32 isid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pbb_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 cos_profile 0 cfm_trap_valid 0\n\r"
    "  cfm_max_level 0 mef_l2_cp_profile 0 vlan_edit_profile 0\n\r"
    "  vlan_edit_pcp_dei_profile 0 isid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_ac_p2p_to_pbb_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_p2p_to_pbb_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_P2P_TO_PBB_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_ac_mp_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_TBL_DATA_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.type:\n\r"
    "  uint32 type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_TBL_DATA_LEARN_DESTINATION_ID, 
    "learn_destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.learn_destination:\n\r"
    "  uint32 learn_destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_TBL_DATA_COS_PROFILE_ID, 
    "cos_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cos_profile:\n\r"
    "  uint32 cos_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_TBL_DATA_CFM_TRAP_VALID_ID, 
    "cfm_trap_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cfm_trap_valid:\n\r"
    "  uint32 cfm_trap_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_TBL_DATA_CFM_MAX_LEVEL_ID, 
    "cfm_max_level", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cfm_max_level:\n\r"
    "  uint32 cfm_max_level\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_TBL_DATA_MEF_L2_CP_PROFILE_ID, 
    "mef_l2_cp_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mef_l2_cp_profile:\n\r"
    "  uint32 mef_l2_cp_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_TBL_DATA_VLAN_EDIT_PROFILE_ID, 
    "vlan_edit_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_edit_profile:\n\r"
    "  uint32 vlan_edit_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_TBL_DATA_VLAN_EDIT_PCP_DEI_PROFILE_ID, 
    "vlan_edit_pcp_dei_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_edit_pcp_dei_profile:\n\r"
    "  uint32 vlan_edit_pcp_dei_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_TBL_DATA_VLAN_EDIT_VID_ID, 
    "vlan_edit_vid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_edit_vid:\n\r"
    "  uint32 vlan_edit_vid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_TBL_DATA_ORIENTATION_IS_HUB_ID, 
    "orientation_is_hub", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.orientation_is_hub:\n\r"
    "  uint32 orientation_is_hub\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_TBL_DATA_TT_LEARN_ENABLE_ID, 
    "tt_learn_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tt_learn_enable:\n\r"
    "  uint32 tt_learn_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_TBL_DATA_VSI_ID, 
    "vsi", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsi:\n\r"
    "  uint32 vsi\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 type 0 learn_destination 0 cos_profile 0 cfm_trap_valid 0 cfm_max_level 0\n\r"
    "  mef_l2_cp_profile 0 vlan_edit_profile 0 vlan_edit_pcp_dei_profile 0\n\r"
    "  vlan_edit_vid 0 orientation_is_hub 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_ac_mp_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ac_mp_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_AC_MP_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_AC_MP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_isid_p2p_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 isidor_out_lifor_vc_label 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_TBL_DATA_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.type:\n\r"
    "  uint32 type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 isidor_out_lifor_vc_label 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_TBL_DATA_SERVICE_TYPE_LSB_ID, 
    "service_type_lsb", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.service_type_lsb:\n\r"
    "  uint32 service_type_lsb\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 isidor_out_lifor_vc_label 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_TBL_DATA_DESTINATION_ID, 
    "destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination:\n\r"
    "  uint32 destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 isidor_out_lifor_vc_label 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_TBL_DATA_COS_PROFILE_ID, 
    "cos_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cos_profile:\n\r"
    "  uint32 cos_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 isidor_out_lifor_vc_label 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_TBL_DATA_TPID_PROFILE_ID, 
    "tpid_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tpid_profile:\n\r"
    "  uint32 tpid_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 isidor_out_lifor_vc_label 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_TBL_DATA_ISIDOR_OUT_LIFOR_VC_LABEL_ID, 
    "isidor_out_lifor_vc_label", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.isidor_out_lifor_vc_label:\n\r"
    "  uint32 isidor_out_lifor_vc_label\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 isidor_out_lifor_vc_label 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_TBL_DATA_VSI_ID, 
    "vsi", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsi:\n\r"
    "  uint32 vsi\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 isidor_out_lifor_vc_label 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_isid_p2p_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_p2p_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_P2P_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_isid_mp_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 destination_valid 0 vsi\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_TBL_DATA_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.type:\n\r"
    "  uint32 type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 destination_valid 0 vsi\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_TBL_DATA_SERVICE_TYPE_LSB_ID, 
    "service_type_lsb", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.service_type_lsb:\n\r"
    "  uint32 service_type_lsb\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 destination_valid 0 vsi\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_TBL_DATA_DESTINATION_ID, 
    "destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination:\n\r"
    "  uint32 destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 destination_valid 0 vsi\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_TBL_DATA_COS_PROFILE_ID, 
    "cos_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cos_profile:\n\r"
    "  uint32 cos_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 destination_valid 0 vsi\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_TBL_DATA_TPID_PROFILE_ID, 
    "tpid_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tpid_profile:\n\r"
    "  uint32 tpid_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 destination_valid 0 vsi\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_TBL_DATA_TT_LEARN_ENABLE_ID, 
    "tt_learn_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tt_learn_enable:\n\r"
    "  uint32 tt_learn_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 destination_valid 0 vsi\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_TBL_DATA_ORIENTATION_IS_HUB_ID, 
    "orientation_is_hub", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.orientation_is_hub:\n\r"
    "  uint32 orientation_is_hub\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 destination_valid 0 vsi\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_TBL_DATA_DESTINATION_VALID_ID, 
    "destination_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination_valid:\n\r"
    "  uint32 destination_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 destination_valid 0 vsi\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_TBL_DATA_VSI_ID, 
    "vsi", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsi:\n\r"
    "  uint32 vsi\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type_lsb 0 destination 0 cos_profile 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 destination_valid 0 vsi\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_isid_mp_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_isid_mp_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_ISID_MP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_trill_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_trill_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 learn_destination 0 service_type 0 tpid_profile 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_TBL_DATA_LEARN_DESTINATION_ID, 
    "learn_destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.learn_destination:\n\r"
    "  uint32 learn_destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_trill_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 learn_destination 0 service_type 0 tpid_profile 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_TBL_DATA_SERVICE_TYPE_ID, 
    "service_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.service_type:\n\r"
    "  uint32 service_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_trill_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 learn_destination 0 service_type 0 tpid_profile 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_TBL_DATA_TPID_PROFILE_ID, 
    "tpid_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tpid_profile:\n\r"
    "  uint32 tpid_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_trill_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 learn_destination 0 service_type 0 tpid_profile 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_TBL_DATA_TT_LEARN_ENABLE_ID, 
    "tt_learn_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tt_learn_enable:\n\r"
    "  uint32 tt_learn_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_trill_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 learn_destination 0 service_type 0 tpid_profile 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_TBL_DATA_VSI_ID, 
    "vsi", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsi:\n\r"
    "  uint32 vsi\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_trill_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 learn_destination 0 service_type 0 tpid_profile 0 tt_learn_enable 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_trill_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_trill_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_TRILL_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_TRILL_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_ip_tt_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ip_tt_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 service_type 0 cos_profile 0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_TBL_DATA_SERVICE_TYPE_ID, 
    "service_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.service_type:\n\r"
    "  uint32 service_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ip_tt_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 service_type 0 cos_profile 0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_TBL_DATA_COS_PROFILE_ID, 
    "cos_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cos_profile:\n\r"
    "  uint32 cos_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ip_tt_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 service_type 0 cos_profile 0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_TBL_DATA_IN_RIF_VALID_ID, 
    "in_rif_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.in_rif_valid:\n\r"
    "  uint32 in_rif_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ip_tt_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 service_type 0 cos_profile 0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_TBL_DATA_IN_RIF_ID, 
    "in_rif", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.in_rif:\n\r"
    "  uint32 in_rif\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ip_tt_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 service_type 0 cos_profile 0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_IP_TT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_IP_TT_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_IP_TT_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_ip_tt_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_ip_tt_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_IP_TT_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_IP_TT_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_label_pwe_p2p_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 isidor_out_lifor_vc_label 0 valid 0\n\r"
    "  has_cw 0 tpid_profile 0 destination_valid 0 model_is_pipe 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_TBL_DATA_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.type:\n\r"
    "  uint32 type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 isidor_out_lifor_vc_label 0 valid 0\n\r"
    "  has_cw 0 tpid_profile 0 destination_valid 0 model_is_pipe 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_TBL_DATA_DESTINATION_ID, 
    "destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination:\n\r"
    "  uint32 destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 isidor_out_lifor_vc_label 0 valid 0\n\r"
    "  has_cw 0 tpid_profile 0 destination_valid 0 model_is_pipe 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_TBL_DATA_ISIDOR_OUT_LIFOR_VC_LABEL_ID, 
    "isidor_out_lifor_vc_label", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.isidor_out_lifor_vc_label:\n\r"
    "  uint32 isidor_out_lifor_vc_label\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 isidor_out_lifor_vc_label 0 valid 0\n\r"
    "  has_cw 0 tpid_profile 0 destination_valid 0 model_is_pipe 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_TBL_DATA_VALID_ID, 
    "valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.valid:\n\r"
    "  uint32 valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 isidor_out_lifor_vc_label 0 valid 0\n\r"
    "  has_cw 0 tpid_profile 0 destination_valid 0 model_is_pipe 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_TBL_DATA_HAS_CW_ID, 
    "has_cw", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.has_cw:\n\r"
    "  uint32 has_cw\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 isidor_out_lifor_vc_label 0 valid 0\n\r"
    "  has_cw 0 tpid_profile 0 destination_valid 0 model_is_pipe 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_TBL_DATA_TPID_PROFILE_ID, 
    "tpid_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tpid_profile:\n\r"
    "  uint32 tpid_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 isidor_out_lifor_vc_label 0 valid 0\n\r"
    "  has_cw 0 tpid_profile 0 destination_valid 0 model_is_pipe 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_TBL_DATA_DESTINATION_VALID_ID, 
    "destination_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination_valid:\n\r"
    "  uint32 destination_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 isidor_out_lifor_vc_label 0 valid 0\n\r"
    "  has_cw 0 tpid_profile 0 destination_valid 0 model_is_pipe 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_TBL_DATA_MODEL_IS_PIPE_ID, 
    "model_is_pipe", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.model_is_pipe:\n\r"
    "  uint32 model_is_pipe\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 isidor_out_lifor_vc_label 0 valid 0\n\r"
    "  has_cw 0 tpid_profile 0 destination_valid 0 model_is_pipe 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_TBL_DATA_VSI_ID, 
    "vsi", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsi:\n\r"
    "  uint32 vsi\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_p2p_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 destination 0 isidor_out_lifor_vc_label 0 valid 0\n\r"
    "  has_cw 0 tpid_profile 0 destination_valid 0 model_is_pipe 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_label_pwe_p2p_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_p2p_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_P2P_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_label_pwe_mp_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 learn_destination 0 learn_asd 0 valid 0 has_cw 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_TBL_DATA_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.type:\n\r"
    "  uint32 type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 learn_destination 0 learn_asd 0 valid 0 has_cw 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_TBL_DATA_LEARN_DESTINATION_ID, 
    "learn_destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.learn_destination:\n\r"
    "  uint32 learn_destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 learn_destination 0 learn_asd 0 valid 0 has_cw 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_TBL_DATA_LEARN_ASD_ID, 
    "learn_asd", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.learn_asd:\n\r"
    "  uint32 learn_asd\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 learn_destination 0 learn_asd 0 valid 0 has_cw 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_TBL_DATA_VALID_ID, 
    "valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.valid:\n\r"
    "  uint32 valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 learn_destination 0 learn_asd 0 valid 0 has_cw 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_TBL_DATA_HAS_CW_ID, 
    "has_cw", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.has_cw:\n\r"
    "  uint32 has_cw\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 learn_destination 0 learn_asd 0 valid 0 has_cw 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_TBL_DATA_TPID_PROFILE_ID, 
    "tpid_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tpid_profile:\n\r"
    "  uint32 tpid_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 learn_destination 0 learn_asd 0 valid 0 has_cw 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_TBL_DATA_TT_LEARN_ENABLE_ID, 
    "tt_learn_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tt_learn_enable:\n\r"
    "  uint32 tt_learn_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 learn_destination 0 learn_asd 0 valid 0 has_cw 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_TBL_DATA_ORIENTATION_IS_HUB_ID, 
    "orientation_is_hub", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.orientation_is_hub:\n\r"
    "  uint32 orientation_is_hub\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 learn_destination 0 learn_asd 0 valid 0 has_cw 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_TBL_DATA_VSI_ID, 
    "vsi", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsi:\n\r"
    "  uint32 vsi\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_mp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 learn_destination 0 learn_asd 0 valid 0 has_cw 0\n\r"
    "  tpid_profile 0 tt_learn_enable 0 orientation_is_hub 0 vsi 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_label_pwe_mp_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_pwe_mp_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_PWE_MP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_label_vrl_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_vrl_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_TBL_DATA_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.type:\n\r"
    "  uint32 type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_vrl_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_TBL_DATA_SERVICE_TYPE_ID, 
    "service_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.service_type:\n\r"
    "  uint32 service_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_vrl_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_TBL_DATA_COS_PROFILE_ID, 
    "cos_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cos_profile:\n\r"
    "  uint32 cos_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_vrl_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_TBL_DATA_VALID_ID, 
    "valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.valid:\n\r"
    "  uint32 valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_vrl_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_TBL_DATA_MODEL_IS_PIPE_ID, 
    "model_is_pipe", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.model_is_pipe:\n\r"
    "  uint32 model_is_pipe\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_vrl_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_TBL_DATA_IN_RIF_VALID_ID, 
    "in_rif_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.in_rif_valid:\n\r"
    "  uint32 in_rif_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_vrl_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_TBL_DATA_IN_RIF_ID, 
    "in_rif", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.in_rif:\n\r"
    "  uint32 in_rif\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_vrl_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_label_vrl_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_vrl_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_VRL_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_table_label_lsp_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_lsp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_TBL_DATA_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.type:\n\r"
    "  uint32 type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_lsp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_TBL_DATA_SERVICE_TYPE_ID, 
    "service_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.service_type:\n\r"
    "  uint32 service_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_lsp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_TBL_DATA_COS_PROFILE_ID, 
    "cos_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cos_profile:\n\r"
    "  uint32 cos_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_lsp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_TBL_DATA_VALID_ID, 
    "valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.valid:\n\r"
    "  uint32 valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_lsp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_TBL_DATA_MODEL_IS_PIPE_ID, 
    "model_is_pipe", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.model_is_pipe:\n\r"
    "  uint32 model_is_pipe\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_lsp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_TBL_DATA_IN_RIF_VALID_ID, 
    "in_rif_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.in_rif_valid:\n\r"
    "  uint32 in_rif_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_lsp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_TBL_DATA_IN_RIF_ID, 
    "in_rif", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.in_rif:\n\r"
    "  uint32 in_rif\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_lsp_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 type 0 service_type 0 cos_profile 0 valid 0 model_is_pipe\n\r"
    "  0 in_rif_valid 0 in_rif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_table_label_lsp_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_table_label_lsp_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_GET_UNSAFE_IHP_SEM_RESULT_TABLE_LABEL_LSP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_ID, 
    "ihp_sem_opcode_ip_offsets_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_ip_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 ipv4_opcode_valid 0 ipv4_add_offset_to_base 0\n\r"
    "  ipv4_sem_offset 0 ipv6_opcode_valid 0 ipv6_add_offset_to_base 0\n\r"
    "  ipv6_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_OP_CODE_NDX_ID, 
    "key_op_code_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  op_code_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  op_code_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_ip_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 ipv4_opcode_valid 0 ipv4_add_offset_to_base 0\n\r"
    "  ipv4_sem_offset 0 ipv6_opcode_valid 0 ipv6_add_offset_to_base 0\n\r"
    "  ipv6_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_TOS_NDX_ID, 
    "key_tos_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tos_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tos_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_ip_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 ipv4_opcode_valid 0 ipv4_add_offset_to_base 0\n\r"
    "  ipv4_sem_offset 0 ipv6_opcode_valid 0 ipv6_add_offset_to_base 0\n\r"
    "  ipv6_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_TBL_DATA_IPV4_OPCODE_VALID_ID, 
    "ipv4_opcode_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_opcode_valid:\n\r"
    "  uint32 ipv4_opcode_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_ip_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 ipv4_opcode_valid 0 ipv4_add_offset_to_base 0\n\r"
    "  ipv4_sem_offset 0 ipv6_opcode_valid 0 ipv6_add_offset_to_base 0\n\r"
    "  ipv6_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_TBL_DATA_IPV4_ADD_OFFSET_TO_BASE_ID, 
    "ipv4_add_offset_to_base", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_add_offset_to_base:\n\r"
    "  uint32 ipv4_add_offset_to_base\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_ip_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 ipv4_opcode_valid 0 ipv4_add_offset_to_base 0\n\r"
    "  ipv4_sem_offset 0 ipv6_opcode_valid 0 ipv6_add_offset_to_base 0\n\r"
    "  ipv6_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_TBL_DATA_IPV4_SEM_OFFSET_ID, 
    "ipv4_sem_offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_sem_offset:\n\r"
    "  uint32 ipv4_sem_offset\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_ip_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 ipv4_opcode_valid 0 ipv4_add_offset_to_base 0\n\r"
    "  ipv4_sem_offset 0 ipv6_opcode_valid 0 ipv6_add_offset_to_base 0\n\r"
    "  ipv6_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_TBL_DATA_IPV6_OPCODE_VALID_ID, 
    "ipv6_opcode_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv6_opcode_valid:\n\r"
    "  uint32 ipv6_opcode_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_ip_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 ipv4_opcode_valid 0 ipv4_add_offset_to_base 0\n\r"
    "  ipv4_sem_offset 0 ipv6_opcode_valid 0 ipv6_add_offset_to_base 0\n\r"
    "  ipv6_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_TBL_DATA_IPV6_ADD_OFFSET_TO_BASE_ID, 
    "ipv6_add_offset_to_base", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv6_add_offset_to_base:\n\r"
    "  uint32 ipv6_add_offset_to_base\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_ip_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 ipv4_opcode_valid 0 ipv4_add_offset_to_base 0\n\r"
    "  ipv4_sem_offset 0 ipv6_opcode_valid 0 ipv6_add_offset_to_base 0\n\r"
    "  ipv6_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_TBL_DATA_IPV6_SEM_OFFSET_ID, 
    "ipv6_sem_offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv6_sem_offset:\n\r"
    "  uint32 ipv6_sem_offset\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_ip_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0 ipv4_opcode_valid 0 ipv4_add_offset_to_base 0\n\r"
    "  ipv4_sem_offset 0 ipv6_opcode_valid 0 ipv6_add_offset_to_base 0\n\r"
    "  ipv6_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_GET_UNSAFE_ID, 
    "ihp_sem_opcode_ip_offsets_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_ip_offsets_tbl_get_unsafe op_code_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_GET_UNSAFE_OP_CODE_NDX_ID, 
    "key_op_code_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  op_code_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  op_code_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_ip_offsets_tbl_get_unsafe op_code_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_GET_UNSAFE_TOS_NDX_ID, 
    "key_tos_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tos_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tos_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_ip_offsets_tbl_get_unsafe op_code_ndx 0\n\r"
    "  tos_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_IP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_IP_OFFSETS_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_ID, 
    "ihp_sem_opcode_tc_dp_offsets_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_tc_dp_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tc_ndx 0 dp_ndx 0 entry_offset_ndx 0 tc_dp_opcode_valid 0\n\r"
    "  tc_dp_add_offset_to_base 0 tc_dp_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_OP_CODE_NDX_ID, 
    "key_op_code_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  op_code_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  op_code_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_tc_dp_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tc_ndx 0 dp_ndx 0 entry_offset_ndx 0 tc_dp_opcode_valid 0\n\r"
    "  tc_dp_add_offset_to_base 0 tc_dp_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_TC_NDX_ID, 
    "key_tc_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tc_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tc_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_tc_dp_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tc_ndx 0 dp_ndx 0 entry_offset_ndx 0 tc_dp_opcode_valid 0\n\r"
    "  tc_dp_add_offset_to_base 0 tc_dp_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_DP_NDX_ID, 
    "key_dp_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  dp_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  dp_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_tc_dp_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tc_ndx 0 dp_ndx 0 entry_offset_ndx 0 tc_dp_opcode_valid 0\n\r"
    "  tc_dp_add_offset_to_base 0 tc_dp_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_TBL_DATA_TC_DP_OPCODE_VALID_ID, 
    "tc_dp_opcode_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc_dp_opcode_valid:\n\r"
    "  uint32 tc_dp_opcode_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_tc_dp_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tc_ndx 0 dp_ndx 0 entry_offset_ndx 0 tc_dp_opcode_valid 0\n\r"
    "  tc_dp_add_offset_to_base 0 tc_dp_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_TBL_DATA_TC_DP_ADD_OFFSET_TO_BASE_ID, 
    "tc_dp_add_offset_to_base", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc_dp_add_offset_to_base:\n\r"
    "  uint32 tc_dp_add_offset_to_base\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_tc_dp_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tc_ndx 0 dp_ndx 0 entry_offset_ndx 0 tc_dp_opcode_valid 0\n\r"
    "  tc_dp_add_offset_to_base 0 tc_dp_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_TBL_DATA_TC_DP_SEM_OFFSET_ID, 
    "tc_dp_sem_offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc_dp_sem_offset:\n\r"
    "  uint32 tc_dp_sem_offset\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_tc_dp_offsets_tbl_set_unsafe op_code_ndx 0\n\r"
    "  tc_ndx 0 dp_ndx 0 entry_offset_ndx 0 tc_dp_opcode_valid 0\n\r"
    "  tc_dp_add_offset_to_base 0 tc_dp_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_ID, 
    "ihp_sem_opcode_tc_dp_offsets_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_tc_dp_offsets_tbl_get_unsafe op_code_ndx 0\n\r"
    "  tc_ndx 0 dp_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_OP_CODE_NDX_ID, 
    "key_op_code_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  op_code_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  op_code_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_tc_dp_offsets_tbl_get_unsafe op_code_ndx 0\n\r"
    "  tc_ndx 0 dp_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_TC_NDX_ID, 
    "key_tc_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tc_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tc_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_tc_dp_offsets_tbl_get_unsafe op_code_ndx 0\n\r"
    "  tc_ndx 0 dp_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_DP_NDX_ID, 
    "key_dp_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  dp_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  dp_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_tc_dp_offsets_tbl_get_unsafe op_code_ndx 0\n\r"
    "  tc_ndx 0 dp_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_TC_DP_OFFSETS_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_ID, 
    "ihp_sem_opcode_pcp_dei_offsets_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_pcp_dei_offsets_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pcp_dei_opcode_valid 0 pcp_dei_add_offset_to_base 0\n\r"
    "  pcp_dei_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_TBL_DATA_PCP_DEI_OPCODE_VALID_ID, 
    "pcp_dei_opcode_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pcp_dei_opcode_valid:\n\r"
    "  uint32 pcp_dei_opcode_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_pcp_dei_offsets_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pcp_dei_opcode_valid 0 pcp_dei_add_offset_to_base 0\n\r"
    "  pcp_dei_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_TBL_DATA_PCP_DEI_ADD_OFFSET_TO_BASE_ID, 
    "pcp_dei_add_offset_to_base", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pcp_dei_add_offset_to_base:\n\r"
    "  uint32 pcp_dei_add_offset_to_base\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_pcp_dei_offsets_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pcp_dei_opcode_valid 0 pcp_dei_add_offset_to_base 0\n\r"
    "  pcp_dei_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_TBL_DATA_PCP_DEI_SEM_OFFSET_ID, 
    "pcp_dei_sem_offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pcp_dei_sem_offset:\n\r"
    "  uint32 pcp_dei_sem_offset\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_pcp_dei_offsets_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 pcp_dei_opcode_valid 0 pcp_dei_add_offset_to_base 0\n\r"
    "  pcp_dei_sem_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_GET_UNSAFE_ID, 
    "ihp_sem_opcode_pcp_dei_offsets_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_opcode_pcp_dei_offsets_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_GET_UNSAFE_IHP_SEM_OPCODE_PCP_DEI_OFFSETS_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_STP_TABLE_TBL_SET_UNSAFE_IHP_STP_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_stp_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_stp_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  per_port_stp_state_index 0 per_port_stp_state 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_STP_TABLE_TBL_SET_UNSAFE_IHP_STP_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_STP_TABLE_TBL_SET_UNSAFE_IHP_STP_TABLE_TBL_SET_UNSAFE_TBL_DATA_PER_PORT_STP_STATE_INDEX_ID, 
    "per_port_stp_state_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  per_port_stp_state_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_stp_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  per_port_stp_state_index 0 per_port_stp_state 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_STP_TABLE_TBL_SET_UNSAFE_IHP_STP_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_STP_TABLE_TBL_SET_UNSAFE_IHP_STP_TABLE_TBL_SET_UNSAFE_TBL_DATA_PER_PORT_STP_STATE_ID, 
    "per_port_stp_state", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.per_port_stp_state[ prm_per_port_stp_state_index]:\n\r"
    "  uint32 per_port_stp_state[4]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_stp_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  per_port_stp_state_index 0 per_port_stp_state 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_STP_TABLE_TBL_SET_UNSAFE_IHP_STP_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_STP_TABLE_TBL_GET_UNSAFE_IHP_STP_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_stp_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_stp_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_STP_TABLE_TBL_GET_UNSAFE_IHP_STP_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VRID_MY_MAC_MAP_TBL_SET_UNSAFE_IHP_VRID_MY_MAC_MAP_TBL_SET_UNSAFE_ID, 
    "ihp_vrid_my_mac_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vrid_my_mac_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  vrid_my_mac_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VRID_MY_MAC_MAP_TBL_SET_UNSAFE_IHP_VRID_MY_MAC_MAP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VRID_MY_MAC_MAP_TBL_SET_UNSAFE_IHP_VRID_MY_MAC_MAP_TBL_SET_UNSAFE_TBL_DATA_VRID_MY_MAC_MAP_ID, 
    "vrid_my_mac_map", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vrid_my_mac_map:\n\r"
    "  uint32 vrid_my_mac_map\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vrid_my_mac_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  vrid_my_mac_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VRID_MY_MAC_MAP_TBL_SET_UNSAFE_IHP_VRID_MY_MAC_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VRID_MY_MAC_MAP_TBL_GET_UNSAFE_IHP_VRID_MY_MAC_MAP_TBL_GET_UNSAFE_ID, 
    "ihp_vrid_my_mac_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vrid_my_mac_map_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VRID_MY_MAC_MAP_TBL_GET_UNSAFE_IHP_VRID_MY_MAC_MAP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_MPLS_LABEL_RANGE_ENCOUNTERED_TBL_SET_UNSAFE_IHP_MPLS_LABEL_RANGE_ENCOUNTERED_TBL_SET_UNSAFE_ID, 
    "ihp_mpls_label_range_encountered_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_mpls_label_range_encountered_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 mpls_label_range_encountered 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_MPLS_LABEL_RANGE_ENCOUNTERED_TBL_SET_UNSAFE_IHP_MPLS_LABEL_RANGE_ENCOUNTERED_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_MPLS_LABEL_RANGE_ENCOUNTERED_TBL_SET_UNSAFE_IHP_MPLS_LABEL_RANGE_ENCOUNTERED_TBL_SET_UNSAFE_TBL_DATA_MPLS_LABEL_RANGE_ENCOUNTERED_ID, 
    "mpls_label_range_encountered", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mpls_label_range_encountered:\n\r"
    "  uint32 mpls_label_range_encountered\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_mpls_label_range_encountered_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 mpls_label_range_encountered 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_MPLS_LABEL_RANGE_ENCOUNTERED_TBL_SET_UNSAFE_IHP_MPLS_LABEL_RANGE_ENCOUNTERED_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_MPLS_LABEL_RANGE_ENCOUNTERED_TBL_GET_UNSAFE_IHP_MPLS_LABEL_RANGE_ENCOUNTERED_TBL_GET_UNSAFE_ID, 
    "ihp_mpls_label_range_encountered_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_mpls_label_range_encountered_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_MPLS_LABEL_RANGE_ENCOUNTERED_TBL_GET_UNSAFE_IHP_MPLS_LABEL_RANGE_ENCOUNTERED_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_MPLS_TUNNEL_TERMINATION_VALID_TBL_SET_UNSAFE_IHP_MPLS_TUNNEL_TERMINATION_VALID_TBL_SET_UNSAFE_ID, 
    "ihp_mpls_tunnel_termination_valid_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_mpls_tunnel_termination_valid_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 mpls_tunnel_termination_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_MPLS_TUNNEL_TERMINATION_VALID_TBL_SET_UNSAFE_IHP_MPLS_TUNNEL_TERMINATION_VALID_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_MPLS_TUNNEL_TERMINATION_VALID_TBL_SET_UNSAFE_IHP_MPLS_TUNNEL_TERMINATION_VALID_TBL_SET_UNSAFE_TBL_DATA_MPLS_TUNNEL_TERMINATION_VALID_ID, 
    "mpls_tunnel_termination_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mpls_tunnel_termination_valid:\n\r"
    "  uint32 mpls_tunnel_termination_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_mpls_tunnel_termination_valid_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 mpls_tunnel_termination_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_MPLS_TUNNEL_TERMINATION_VALID_TBL_SET_UNSAFE_IHP_MPLS_TUNNEL_TERMINATION_VALID_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_MPLS_TUNNEL_TERMINATION_VALID_TBL_GET_UNSAFE_IHP_MPLS_TUNNEL_TERMINATION_VALID_TBL_GET_UNSAFE_ID, 
    "ihp_mpls_tunnel_termination_valid_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_mpls_tunnel_termination_valid_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_MPLS_TUNNEL_TERMINATION_VALID_TBL_GET_UNSAFE_IHP_MPLS_TUNNEL_TERMINATION_VALID_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_IP_OVER_MPLS_EXP_MAPPING_TBL_SET_UNSAFE_IHP_IP_OVER_MPLS_EXP_MAPPING_TBL_SET_UNSAFE_ID, 
    "ihp_ip_over_mpls_exp_mapping_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ip_over_mpls_exp_mapping_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 ip_over_mpls_exp_mapping 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_IP_OVER_MPLS_EXP_MAPPING_TBL_SET_UNSAFE_IHP_IP_OVER_MPLS_EXP_MAPPING_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_IP_OVER_MPLS_EXP_MAPPING_TBL_SET_UNSAFE_IHP_IP_OVER_MPLS_EXP_MAPPING_TBL_SET_UNSAFE_TBL_DATA_IP_OVER_MPLS_EXP_MAPPING_ID, 
    "ip_over_mpls_exp_mapping", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ip_over_mpls_exp_mapping:\n\r"
    "  uint32 ip_over_mpls_exp_mapping\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ip_over_mpls_exp_mapping_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 ip_over_mpls_exp_mapping 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_IP_OVER_MPLS_EXP_MAPPING_TBL_SET_UNSAFE_IHP_IP_OVER_MPLS_EXP_MAPPING_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_IP_OVER_MPLS_EXP_MAPPING_TBL_GET_UNSAFE_IHP_IP_OVER_MPLS_EXP_MAPPING_TBL_GET_UNSAFE_ID, 
    "ihp_ip_over_mpls_exp_mapping_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ip_over_mpls_exp_mapping_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_IP_OVER_MPLS_EXP_MAPPING_TBL_GET_UNSAFE_IHP_IP_OVER_MPLS_EXP_MAPPING_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_ID, 
    "ihp_vtt_llvp_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  ivec 0 pcp_dei_profile 0 incoming_tag_structure 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_PORT_PROFILE_NDX_ID, 
    "key_port_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  port_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  port_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  ivec 0 pcp_dei_profile 0 incoming_tag_structure 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_OUT_TAG_ENCAP_NDX_ID, 
    "key_out_tag_encap_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  out_tag_encap_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  out_tag_encap_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  ivec 0 pcp_dei_profile 0 incoming_tag_structure 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_OUT_IS_PRIO_NDX_ID, 
    "key_out_is_prio_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  out_is_prio_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  out_is_prio_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  ivec 0 pcp_dei_profile 0 incoming_tag_structure 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_IN_TAG_ENCAP_NDX_ID, 
    "key_in_tag_encap_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  in_tag_encap_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  in_tag_encap_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  ivec 0 pcp_dei_profile 0 incoming_tag_structure 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_TBL_DATA_IVEC_ID, 
    "ivec", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ivec:\n\r"
    "  uint32 ivec\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  ivec 0 pcp_dei_profile 0 incoming_tag_structure 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_TBL_DATA_PCP_DEI_PROFILE_ID, 
    "pcp_dei_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pcp_dei_profile:\n\r"
    "  uint32 pcp_dei_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  ivec 0 pcp_dei_profile 0 incoming_tag_structure 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_TBL_DATA_INCOMING_TAG_STRUCTURE_ID, 
    "incoming_tag_structure", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.incoming_tag_structure:\n\r"
    "  uint32 incoming_tag_structure\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  ivec 0 pcp_dei_profile 0 incoming_tag_structure 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_SET_UNSAFE_IHP_VTT_LLVP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_GET_UNSAFE_IHP_VTT_LLVP_TBL_GET_UNSAFE_ID, 
    "ihp_vtt_llvp_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_GET_UNSAFE_IHP_VTT_LLVP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_GET_UNSAFE_IHP_VTT_LLVP_TBL_GET_UNSAFE_PORT_PROFILE_NDX_ID, 
    "key_port_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  port_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  port_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_GET_UNSAFE_IHP_VTT_LLVP_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_GET_UNSAFE_IHP_VTT_LLVP_TBL_GET_UNSAFE_OUT_TAG_ENCAP_NDX_ID, 
    "key_out_tag_encap_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  out_tag_encap_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  out_tag_encap_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_GET_UNSAFE_IHP_VTT_LLVP_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_GET_UNSAFE_IHP_VTT_LLVP_TBL_GET_UNSAFE_OUT_IS_PRIO_NDX_ID, 
    "key_out_is_prio_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  out_is_prio_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  out_is_prio_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_GET_UNSAFE_IHP_VTT_LLVP_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT_LLVP_TBL_GET_UNSAFE_IHP_VTT_LLVP_TBL_GET_UNSAFE_IN_TAG_ENCAP_NDX_ID, 
    "key_in_tag_encap_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  in_tag_encap_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  in_tag_encap_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt_llvp_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT_LLVP_TBL_GET_UNSAFE_IHP_VTT_LLVP_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_ID, 
    "ihp_llvp_prog_sel_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llvp_prog_sel_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  llvp_prog_sel 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_PORT_PROFILE_NDX_ID, 
    "key_port_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  port_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  port_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llvp_prog_sel_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  llvp_prog_sel 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_OUT_TAG_ENCAP_NDX_ID, 
    "key_out_tag_encap_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  out_tag_encap_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  out_tag_encap_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llvp_prog_sel_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  llvp_prog_sel 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_OUT_IS_PRIO_NDX_ID, 
    "key_out_is_prio_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  out_is_prio_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  out_is_prio_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llvp_prog_sel_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  llvp_prog_sel 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IN_TAG_ENCAP_NDX_ID, 
    "key_in_tag_encap_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  in_tag_encap_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  in_tag_encap_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llvp_prog_sel_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  llvp_prog_sel 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_TBL_DATA_LLVP_PROG_SEL_ID, 
    "llvp_prog_sel", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.llvp_prog_sel:\n\r"
    "  uint32 llvp_prog_sel\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llvp_prog_sel_tbl_set_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
    "  llvp_prog_sel 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_ID, 
    "ihp_llvp_prog_sel_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llvp_prog_sel_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_PORT_PROFILE_NDX_ID, 
    "key_port_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  port_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  port_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llvp_prog_sel_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_OUT_TAG_ENCAP_NDX_ID, 
    "key_out_tag_encap_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  out_tag_encap_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  out_tag_encap_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llvp_prog_sel_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_OUT_IS_PRIO_NDX_ID, 
    "key_out_is_prio_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  out_is_prio_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  out_is_prio_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llvp_prog_sel_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_IN_TAG_ENCAP_NDX_ID, 
    "key_in_tag_encap_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  in_tag_encap_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  in_tag_encap_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_llvp_prog_sel_tbl_get_unsafe port_profile_ndx 0\n\r"
    "  out_tag_encap_ndx 0 out_is_prio_ndx 0 in_tag_encap_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_IHP_LLVP_PROG_SEL_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_SET_UNSAFE_ID, 
    "ihp_vtt1st_key_construction0_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction0_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 key_inst1 0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_SET_UNSAFE_TBL_DATA_KEY_INST1_ID, 
    "key_inst1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_inst1:\n\r"
    "  uint32 key_inst1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction0_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 key_inst1 0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_SET_UNSAFE_TBL_DATA_KEY_INST0_ID, 
    "key_inst0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_inst0:\n\r"
    "  uint32 key_inst0\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction0_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 key_inst1 0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_GET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_GET_UNSAFE_ID, 
    "ihp_vtt1st_key_construction0_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction0_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_GET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION0_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_ID, 
    "ihp_vtt1st_key_construction1_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction1_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0\n\r"
    "  key_inst2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_TBL_DATA_SEM_LOOKUP_ENABLE_ID, 
    "sem_lookup_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.sem_lookup_enable:\n\r"
    "  uint32 sem_lookup_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction1_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0\n\r"
    "  key_inst2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_TBL_DATA_OR_MASK_ID, 
    "or_mask", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.or_mask:\n\r"
    "  uint32 or_mask\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction1_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0\n\r"
    "  key_inst2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_TBL_DATA_AND_MASK_ID, 
    "and_mask", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.and_mask:\n\r"
    "  uint32 and_mask\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction1_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0\n\r"
    "  key_inst2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_TBL_DATA_KEY_INST3_ID, 
    "key_inst3", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_inst3:\n\r"
    "  uint32 key_inst3\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction1_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0\n\r"
    "  key_inst2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_TBL_DATA_KEY_INST2_ID, 
    "key_inst2", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_inst2:\n\r"
    "  uint32 key_inst2\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction1_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0\n\r"
    "  key_inst2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_GET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_GET_UNSAFE_ID, 
    "ihp_vtt1st_key_construction1_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction1_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_GET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION1_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID, 
    "ihp_vtt1st_key_construction_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0 key_inst2 0 key_inst1\n\r"
    "  0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_TBL_DATA_SEM_LOOKUP_ENABLE_ID, 
    "sem_lookup_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.sem_lookup_enable:\n\r"
    "  uint32 sem_lookup_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0 key_inst2 0 key_inst1\n\r"
    "  0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_TBL_DATA_OR_MASK_ID, 
    "or_mask", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.or_mask:\n\r"
    "  uint32 or_mask\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0 key_inst2 0 key_inst1\n\r"
    "  0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_TBL_DATA_AND_MASK_ID, 
    "and_mask", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.and_mask:\n\r"
    "  uint32 and_mask\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0 key_inst2 0 key_inst1\n\r"
    "  0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_TBL_DATA_KEY_INST3_ID, 
    "key_inst3", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_inst3:\n\r"
    "  uint32 key_inst3\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0 key_inst2 0 key_inst1\n\r"
    "  0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_TBL_DATA_KEY_INST2_ID, 
    "key_inst2", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_inst2:\n\r"
    "  uint32 key_inst2\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0 key_inst2 0 key_inst1\n\r"
    "  0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_TBL_DATA_KEY_INST1_ID, 
    "key_inst1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_inst1:\n\r"
    "  uint32 key_inst1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0 key_inst2 0 key_inst1\n\r"
    "  0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_TBL_DATA_KEY_INST0_ID, 
    "key_inst0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_inst0:\n\r"
    "  uint32 key_inst0\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 sem_lookup_enable 0 or_mask 0 and_mask 0 key_inst3 0 key_inst2 0 key_inst1\n\r"
    "  0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_GET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_GET_UNSAFE_ID, 
    "ihp_vtt1st_key_construction_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt1st_key_construction_tbl_get_unsafe entry_offset_ndx\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_GET_UNSAFE_IHP_VTT1ST_KEY_CONSTRUCTION_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID, 
    "ihp_vtt2nd_key_construction_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt2nd_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 or_mask 0 and_mask 0 key_inst1 0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_TBL_DATA_OR_MASK_ID, 
    "or_mask", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.or_mask:\n\r"
    "  uint32 or_mask\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt2nd_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 or_mask 0 and_mask 0 key_inst1 0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_TBL_DATA_AND_MASK_ID, 
    "and_mask", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.and_mask:\n\r"
    "  uint32 and_mask\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt2nd_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 or_mask 0 and_mask 0 key_inst1 0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_TBL_DATA_KEY_INST1_ID, 
    "key_inst1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_inst1:\n\r"
    "  uint32 key_inst1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt2nd_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 or_mask 0 and_mask 0 key_inst1 0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_TBL_DATA_KEY_INST0_ID, 
    "key_inst0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_inst0:\n\r"
    "  uint32 key_inst0\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt2nd_key_construction_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 or_mask 0 and_mask 0 key_inst1 0 key_inst0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_GET_UNSAFE_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_GET_UNSAFE_ID, 
    "ihp_vtt2nd_key_construction_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vtt2nd_key_construction_tbl_get_unsafe entry_offset_ndx\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_GET_UNSAFE_IHP_VTT2ND_KEY_CONSTRUCTION_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_ingress_vlan_edit_command_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ingress_vlan_edit_command_table_tbl_set_unsafe\n\r"
    "  is_l2cp_ndx 0 tag_struct_ndx 0 edit_profile_ndx 0 ivec 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_IS_L2CP_NDX_ID, 
    "key_is_l2cp_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  is_l2cp_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  is_l2cp_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ingress_vlan_edit_command_table_tbl_set_unsafe\n\r"
    "  is_l2cp_ndx 0 tag_struct_ndx 0 edit_profile_ndx 0 ivec 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_TAG_STRUCT_NDX_ID, 
    "key_tag_struct_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tag_struct_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tag_struct_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ingress_vlan_edit_command_table_tbl_set_unsafe\n\r"
    "  is_l2cp_ndx 0 tag_struct_ndx 0 edit_profile_ndx 0 ivec 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_EDIT_PROFILE_NDX_ID, 
    "key_edit_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  edit_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  edit_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ingress_vlan_edit_command_table_tbl_set_unsafe\n\r"
    "  is_l2cp_ndx 0 tag_struct_ndx 0 edit_profile_ndx 0 ivec 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_TBL_DATA_IVEC_ID, 
    "ivec", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ivec:\n\r"
    "  uint32 ivec\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ingress_vlan_edit_command_table_tbl_set_unsafe\n\r"
    "  is_l2cp_ndx 0 tag_struct_ndx 0 edit_profile_ndx 0 ivec 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_ingress_vlan_edit_command_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ingress_vlan_edit_command_table_tbl_get_unsafe\n\r"
    "  is_l2cp_ndx 0 tag_struct_ndx 0 edit_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_IS_L2CP_NDX_ID, 
    "key_is_l2cp_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  is_l2cp_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  is_l2cp_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ingress_vlan_edit_command_table_tbl_get_unsafe\n\r"
    "  is_l2cp_ndx 0 tag_struct_ndx 0 edit_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_TAG_STRUCT_NDX_ID, 
    "key_tag_struct_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tag_struct_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tag_struct_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ingress_vlan_edit_command_table_tbl_get_unsafe\n\r"
    "  is_l2cp_ndx 0 tag_struct_ndx 0 edit_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_EDIT_PROFILE_NDX_ID, 
    "key_edit_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  edit_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  edit_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_ingress_vlan_edit_command_table_tbl_get_unsafe\n\r"
    "  is_l2cp_ndx 0 tag_struct_ndx 0 edit_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_IHP_INGRESS_VLAN_EDIT_COMMAND_TABLE_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VLAN_EDIT_PCP_DEI_MAP_TBL_SET_UNSAFE_IHP_VLAN_EDIT_PCP_DEI_MAP_TBL_SET_UNSAFE_ID, 
    "ihp_vlan_edit_pcp_dei_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vlan_edit_pcp_dei_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pcp_dei 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VLAN_EDIT_PCP_DEI_MAP_TBL_SET_UNSAFE_IHP_VLAN_EDIT_PCP_DEI_MAP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VLAN_EDIT_PCP_DEI_MAP_TBL_SET_UNSAFE_IHP_VLAN_EDIT_PCP_DEI_MAP_TBL_SET_UNSAFE_TBL_DATA_PCP_DEI_ID, 
    "pcp_dei", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pcp_dei:\n\r"
    "  uint32 pcp_dei\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vlan_edit_pcp_dei_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pcp_dei 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VLAN_EDIT_PCP_DEI_MAP_TBL_SET_UNSAFE_IHP_VLAN_EDIT_PCP_DEI_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_VLAN_EDIT_PCP_DEI_MAP_TBL_GET_UNSAFE_IHP_VLAN_EDIT_PCP_DEI_MAP_TBL_GET_UNSAFE_ID, 
    "ihp_vlan_edit_pcp_dei_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_vlan_edit_pcp_dei_map_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_VLAN_EDIT_PCP_DEI_MAP_TBL_GET_UNSAFE_IHP_VLAN_EDIT_PCP_DEI_MAP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PBB_CFM_TABLE_TBL_SET_UNSAFE_IHP_PBB_CFM_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_pbb_cfm_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pbb_cfm_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pbb_cfm_trap_valid 0 pbb_cfm_max_level 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PBB_CFM_TABLE_TBL_SET_UNSAFE_IHP_PBB_CFM_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PBB_CFM_TABLE_TBL_SET_UNSAFE_IHP_PBB_CFM_TABLE_TBL_SET_UNSAFE_TBL_DATA_PBB_CFM_TRAP_VALID_ID, 
    "pbb_cfm_trap_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pbb_cfm_trap_valid:\n\r"
    "  uint32 pbb_cfm_trap_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pbb_cfm_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pbb_cfm_trap_valid 0 pbb_cfm_max_level 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PBB_CFM_TABLE_TBL_SET_UNSAFE_IHP_PBB_CFM_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PBB_CFM_TABLE_TBL_SET_UNSAFE_IHP_PBB_CFM_TABLE_TBL_SET_UNSAFE_TBL_DATA_PBB_CFM_MAX_LEVEL_ID, 
    "pbb_cfm_max_level", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pbb_cfm_max_level:\n\r"
    "  uint32 pbb_cfm_max_level\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pbb_cfm_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pbb_cfm_trap_valid 0 pbb_cfm_max_level 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PBB_CFM_TABLE_TBL_SET_UNSAFE_IHP_PBB_CFM_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_PBB_CFM_TABLE_TBL_GET_UNSAFE_IHP_PBB_CFM_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_pbb_cfm_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_pbb_cfm_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_PBB_CFM_TABLE_TBL_GET_UNSAFE_IHP_PBB_CFM_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_ACCESSED_TBL_SET_UNSAFE_IHP_SEM_RESULT_ACCESSED_TBL_SET_UNSAFE_ID, 
    "ihp_sem_result_accessed_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_accessed_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  sem_result_accessed 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_ACCESSED_TBL_SET_UNSAFE_IHP_SEM_RESULT_ACCESSED_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_ACCESSED_TBL_SET_UNSAFE_IHP_SEM_RESULT_ACCESSED_TBL_SET_UNSAFE_TBL_DATA_SEM_RESULT_ACCESSED_ID, 
    "sem_result_accessed", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.sem_result_accessed:\n\r"
    "  uint32 sem_result_accessed\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_accessed_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  sem_result_accessed 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_ACCESSED_TBL_SET_UNSAFE_IHP_SEM_RESULT_ACCESSED_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_SEM_RESULT_ACCESSED_TBL_GET_UNSAFE_IHP_SEM_RESULT_ACCESSED_TBL_GET_UNSAFE_ID, 
    "ihp_sem_result_accessed_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_sem_result_accessed_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_SEM_RESULT_ACCESSED_TBL_GET_UNSAFE_IHP_SEM_RESULT_ACCESSED_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_in_rif_config_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_in_rif_config_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  in_rif_cos_profile 0 enable_routing_mpls 0 enable_routing_uc 0\n\r"
    "  enable_routing_mc 0 uc_rpf_enable 0 vrf 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_TBL_DATA_IN_RIF_COS_PROFILE_ID, 
    "in_rif_cos_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.in_rif_cos_profile:\n\r"
    "  uint32 in_rif_cos_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_in_rif_config_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  in_rif_cos_profile 0 enable_routing_mpls 0 enable_routing_uc 0\n\r"
    "  enable_routing_mc 0 uc_rpf_enable 0 vrf 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_TBL_DATA_ENABLE_ROUTING_MPLS_ID, 
    "enable_routing_mpls", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.enable_routing_mpls:\n\r"
    "  uint32 enable_routing_mpls\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_in_rif_config_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  in_rif_cos_profile 0 enable_routing_mpls 0 enable_routing_uc 0\n\r"
    "  enable_routing_mc 0 uc_rpf_enable 0 vrf 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_TBL_DATA_ENABLE_ROUTING_UC_ID, 
    "enable_routing_uc", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.enable_routing_uc:\n\r"
    "  uint32 enable_routing_uc\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_in_rif_config_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  in_rif_cos_profile 0 enable_routing_mpls 0 enable_routing_uc 0\n\r"
    "  enable_routing_mc 0 uc_rpf_enable 0 vrf 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_TBL_DATA_ENABLE_ROUTING_MC_ID, 
    "enable_routing_mc", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.enable_routing_mc:\n\r"
    "  uint32 enable_routing_mc\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_in_rif_config_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  in_rif_cos_profile 0 enable_routing_mpls 0 enable_routing_uc 0\n\r"
    "  enable_routing_mc 0 uc_rpf_enable 0 vrf 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_TBL_DATA_UC_RPF_ENABLE_ID, 
    "uc_rpf_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.uc_rpf_enable:\n\r"
    "  uint32 uc_rpf_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_in_rif_config_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  in_rif_cos_profile 0 enable_routing_mpls 0 enable_routing_uc 0\n\r"
    "  enable_routing_mc 0 uc_rpf_enable 0 vrf 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_TBL_DATA_VRF_ID, 
    "vrf", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vrf:\n\r"
    "  uint32 vrf\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_in_rif_config_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  in_rif_cos_profile 0 enable_routing_mpls 0 enable_routing_uc 0\n\r"
    "  enable_routing_mc 0 uc_rpf_enable 0 vrf 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_GET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_in_rif_config_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_in_rif_config_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_IN_RIF_CONFIG_TABLE_TBL_GET_UNSAFE_IHP_IN_RIF_CONFIG_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TC_DP_MAP_TABLE_TBL_SET_UNSAFE_IHP_TC_DP_MAP_TABLE_TBL_SET_UNSAFE_ID, 
    "ihp_tc_dp_map_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tc_dp_map_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  drop_precedence 0 traffic_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TC_DP_MAP_TABLE_TBL_SET_UNSAFE_IHP_TC_DP_MAP_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TC_DP_MAP_TABLE_TBL_SET_UNSAFE_IHP_TC_DP_MAP_TABLE_TBL_SET_UNSAFE_TBL_DATA_DROP_PRECEDENCE_ID, 
    "drop_precedence", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.drop_precedence:\n\r"
    "  uint32 drop_precedence\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tc_dp_map_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  drop_precedence 0 traffic_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TC_DP_MAP_TABLE_TBL_SET_UNSAFE_IHP_TC_DP_MAP_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TC_DP_MAP_TABLE_TBL_SET_UNSAFE_IHP_TC_DP_MAP_TABLE_TBL_SET_UNSAFE_TBL_DATA_TRAFFIC_CLASS_ID, 
    "traffic_class", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.traffic_class:\n\r"
    "  uint32 traffic_class\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tc_dp_map_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  drop_precedence 0 traffic_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TC_DP_MAP_TABLE_TBL_SET_UNSAFE_IHP_TC_DP_MAP_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHP_TC_DP_MAP_TABLE_TBL_GET_UNSAFE_IHP_TC_DP_MAP_TABLE_TBL_GET_UNSAFE_ID, 
    "ihp_tc_dp_map_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihp_tc_dp_map_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHP_TC_DP_MAP_TABLE_TBL_GET_UNSAFE_IHP_TC_DP_MAP_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_ID, 
    "ihb_pinfo_fer_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_fer_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_include_bos_hdr 0 lb_bos_search 0 ecmp_lb_key_count 0 lb_profile 0\n\r"
    "  lag_lb_key_start 0 lag_lb_key_count 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_TBL_DATA_LB_INCLUDE_BOS_HDR_ID, 
    "lb_include_bos_hdr", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lb_include_bos_hdr:\n\r"
    "  uint32 lb_include_bos_hdr\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_fer_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_include_bos_hdr 0 lb_bos_search 0 ecmp_lb_key_count 0 lb_profile 0\n\r"
    "  lag_lb_key_start 0 lag_lb_key_count 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_TBL_DATA_LB_BOS_SEARCH_ID, 
    "lb_bos_search", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lb_bos_search:\n\r"
    "  uint32 lb_bos_search\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_fer_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_include_bos_hdr 0 lb_bos_search 0 ecmp_lb_key_count 0 lb_profile 0\n\r"
    "  lag_lb_key_start 0 lag_lb_key_count 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_TBL_DATA_ECMP_LB_KEY_COUNT_ID, 
    "ecmp_lb_key_count", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ecmp_lb_key_count:\n\r"
    "  uint32 ecmp_lb_key_count\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_fer_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_include_bos_hdr 0 lb_bos_search 0 ecmp_lb_key_count 0 lb_profile 0\n\r"
    "  lag_lb_key_start 0 lag_lb_key_count 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_TBL_DATA_LB_PROFILE_ID, 
    "lb_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lb_profile:\n\r"
    "  uint32 lb_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_fer_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_include_bos_hdr 0 lb_bos_search 0 ecmp_lb_key_count 0 lb_profile 0\n\r"
    "  lag_lb_key_start 0 lag_lb_key_count 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_TBL_DATA_LAG_LB_KEY_START_ID, 
    "lag_lb_key_start", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lag_lb_key_start:\n\r"
    "  uint32 lag_lb_key_start\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_fer_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_include_bos_hdr 0 lb_bos_search 0 ecmp_lb_key_count 0 lb_profile 0\n\r"
    "  lag_lb_key_start 0 lag_lb_key_count 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_TBL_DATA_LAG_LB_KEY_COUNT_ID, 
    "lag_lb_key_count", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lag_lb_key_count:\n\r"
    "  uint32 lag_lb_key_count\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_fer_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_include_bos_hdr 0 lb_bos_search 0 ecmp_lb_key_count 0 lb_profile 0\n\r"
    "  lag_lb_key_start 0 lag_lb_key_count 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FER_TBL_SET_UNSAFE_IHB_PINFO_FER_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FER_TBL_GET_UNSAFE_IHB_PINFO_FER_TBL_GET_UNSAFE_ID, 
    "ihb_pinfo_fer_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_fer_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FER_TBL_GET_UNSAFE_IHB_PINFO_FER_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_ECMP_GROUP_SIZE_TBL_SET_UNSAFE_IHB_ECMP_GROUP_SIZE_TBL_SET_UNSAFE_ID, 
    "ihb_ecmp_group_size_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_ecmp_group_size_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ecmp_group_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_ECMP_GROUP_SIZE_TBL_SET_UNSAFE_IHB_ECMP_GROUP_SIZE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_ECMP_GROUP_SIZE_TBL_SET_UNSAFE_IHB_ECMP_GROUP_SIZE_TBL_SET_UNSAFE_TBL_DATA_ECMP_GROUP_SIZE_ID, 
    "ecmp_group_size", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ecmp_group_size:\n\r"
    "  uint32 ecmp_group_size\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_ecmp_group_size_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ecmp_group_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_ECMP_GROUP_SIZE_TBL_SET_UNSAFE_IHB_ECMP_GROUP_SIZE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_ECMP_GROUP_SIZE_TBL_GET_UNSAFE_IHB_ECMP_GROUP_SIZE_TBL_GET_UNSAFE_ID, 
    "ihb_ecmp_group_size_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_ecmp_group_size_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_ECMP_GROUP_SIZE_TBL_GET_UNSAFE_IHB_ECMP_GROUP_SIZE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_ID, 
    "ihb_lb_pfc_profile_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lb_pfc_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_vector_index2 0 lb_vector_index4 0 lb_vector_index5 0 lb_vector_index1 0\n\r"
    "  lb_vector_index3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_TBL_DATA_LB_VECTOR_INDEX2_ID, 
    "lb_vector_index2", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lb_vector_index2:\n\r"
    "  uint32 lb_vector_index2\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lb_pfc_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_vector_index2 0 lb_vector_index4 0 lb_vector_index5 0 lb_vector_index1 0\n\r"
    "  lb_vector_index3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_TBL_DATA_LB_VECTOR_INDEX4_ID, 
    "lb_vector_index4", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lb_vector_index4:\n\r"
    "  uint32 lb_vector_index4\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lb_pfc_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_vector_index2 0 lb_vector_index4 0 lb_vector_index5 0 lb_vector_index1 0\n\r"
    "  lb_vector_index3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_TBL_DATA_LB_VECTOR_INDEX5_ID, 
    "lb_vector_index5", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lb_vector_index5:\n\r"
    "  uint32 lb_vector_index5\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lb_pfc_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_vector_index2 0 lb_vector_index4 0 lb_vector_index5 0 lb_vector_index1 0\n\r"
    "  lb_vector_index3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_TBL_DATA_LB_VECTOR_INDEX1_ID, 
    "lb_vector_index1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lb_vector_index1:\n\r"
    "  uint32 lb_vector_index1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lb_pfc_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_vector_index2 0 lb_vector_index4 0 lb_vector_index5 0 lb_vector_index1 0\n\r"
    "  lb_vector_index3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_TBL_DATA_LB_VECTOR_INDEX3_ID, 
    "lb_vector_index3", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lb_vector_index3:\n\r"
    "  uint32 lb_vector_index3\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lb_pfc_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  lb_vector_index2 0 lb_vector_index4 0 lb_vector_index5 0 lb_vector_index1 0\n\r"
    "  lb_vector_index3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LB_PFC_PROFILE_TBL_GET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_GET_UNSAFE_ID, 
    "ihb_lb_pfc_profile_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lb_pfc_profile_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LB_PFC_PROFILE_TBL_GET_UNSAFE_IHB_LB_PFC_PROFILE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_ID, 
    "ihb_lb_vector_program_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lb_vector_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  chunk_bitmap_index 0 chunk_bitmap 0 chunk_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_CHUNK_BITMAP_INDEX_ID, 
    "chunk_bitmap_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  chunk_bitmap_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lb_vector_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  chunk_bitmap_index 0 chunk_bitmap 0 chunk_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_CHUNK_BITMAP_ID, 
    "chunk_bitmap", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.chunk_bitmap[ prm_chunk_bitmap_index]:\n\r"
    "  uint32 chunk_bitmap[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lb_vector_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  chunk_bitmap_index 0 chunk_bitmap 0 chunk_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_CHUNK_SIZE_ID, 
    "chunk_size", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.chunk_size:\n\r"
    "  uint32 chunk_size\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lb_vector_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  chunk_bitmap_index 0 chunk_bitmap 0 chunk_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_LB_VECTOR_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LB_VECTOR_PROGRAM_MAP_TBL_GET_UNSAFE_IHB_LB_VECTOR_PROGRAM_MAP_TBL_GET_UNSAFE_ID, 
    "ihb_lb_vector_program_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lb_vector_program_map_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LB_VECTOR_PROGRAM_MAP_TBL_GET_UNSAFE_IHB_LB_VECTOR_PROGRAM_MAP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_SUPER_ENTRY_TBL_SET_UNSAFE_IHB_FEC_SUPER_ENTRY_TBL_SET_UNSAFE_ID, 
    "ihb_fec_super_entry_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_super_entry_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ecmp_group_size_index 0 protection_pointer 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_SUPER_ENTRY_TBL_SET_UNSAFE_IHB_FEC_SUPER_ENTRY_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_SUPER_ENTRY_TBL_SET_UNSAFE_IHB_FEC_SUPER_ENTRY_TBL_SET_UNSAFE_TBL_DATA_ECMP_GROUP_SIZE_INDEX_ID, 
    "ecmp_group_size_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ecmp_group_size_index:\n\r"
    "  uint32 ecmp_group_size_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_super_entry_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ecmp_group_size_index 0 protection_pointer 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_SUPER_ENTRY_TBL_SET_UNSAFE_IHB_FEC_SUPER_ENTRY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_SUPER_ENTRY_TBL_SET_UNSAFE_IHB_FEC_SUPER_ENTRY_TBL_SET_UNSAFE_TBL_DATA_PROTECTION_POINTER_ID, 
    "protection_pointer", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.protection_pointer:\n\r"
    "  uint32 protection_pointer\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_super_entry_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ecmp_group_size_index 0 protection_pointer 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_SUPER_ENTRY_TBL_SET_UNSAFE_IHB_FEC_SUPER_ENTRY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_SUPER_ENTRY_TBL_GET_UNSAFE_IHB_FEC_SUPER_ENTRY_TBL_GET_UNSAFE_ID, 
    "ihb_fec_super_entry_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_super_entry_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_SUPER_ENTRY_TBL_GET_UNSAFE_IHB_FEC_SUPER_ENTRY_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_TBL_SET_UNSAFE_IHB_FEC_ENTRY_TBL_SET_UNSAFE_ID, 
    "ihb_fec_entry_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fec_entry_index 0 fec_entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_TBL_SET_UNSAFE_IHB_FEC_ENTRY_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_TBL_SET_UNSAFE_IHB_FEC_ENTRY_TBL_SET_UNSAFE_TBL_DATA_FEC_ENTRY_INDEX_ID, 
    "fec_entry_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fec_entry_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fec_entry_index 0 fec_entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_TBL_SET_UNSAFE_IHB_FEC_ENTRY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_TBL_SET_UNSAFE_IHB_FEC_ENTRY_TBL_SET_UNSAFE_TBL_DATA_FEC_ENTRY_ID, 
    "fec_entry", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fec_entry[ prm_fec_entry_index]:\n\r"
    "  uint32 fec_entry[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fec_entry_index 0 fec_entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_TBL_SET_UNSAFE_IHB_FEC_ENTRY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_TBL_GET_UNSAFE_IHB_FEC_ENTRY_TBL_GET_UNSAFE_ID, 
    "ihb_fec_entry_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_TBL_GET_UNSAFE_IHB_FEC_ENTRY_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_GENERAL_TBL_SET_UNSAFE_IHB_FEC_ENTRY_GENERAL_TBL_SET_UNSAFE_ID, 
    "ihb_fec_entry_general_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_general_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_GENERAL_TBL_SET_UNSAFE_IHB_FEC_ENTRY_GENERAL_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_GENERAL_TBL_SET_UNSAFE_IHB_FEC_ENTRY_GENERAL_TBL_SET_UNSAFE_TBL_DATA_DESTINATION_ID, 
    "destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination:\n\r"
    "  uint32 destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_general_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_GENERAL_TBL_SET_UNSAFE_IHB_FEC_ENTRY_GENERAL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_GENERAL_TBL_GET_UNSAFE_IHB_FEC_ENTRY_GENERAL_TBL_GET_UNSAFE_ID, 
    "ihb_fec_entry_general_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_general_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_GENERAL_TBL_GET_UNSAFE_IHB_FEC_ENTRY_GENERAL_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_SET_UNSAFE_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_SET_UNSAFE_ID, 
    "ihb_fec_entry_eth_or_trill_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_eth_or_trill_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 is_out_lif 0 out_lif_or_dist_tree_nick 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_SET_UNSAFE_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_SET_UNSAFE_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_SET_UNSAFE_TBL_DATA_IS_OUT_LIF_ID, 
    "is_out_lif", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.is_out_lif:\n\r"
    "  uint32 is_out_lif\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_eth_or_trill_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 is_out_lif 0 out_lif_or_dist_tree_nick 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_SET_UNSAFE_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_SET_UNSAFE_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_SET_UNSAFE_TBL_DATA_OUT_LIF_OR_DIST_TREE_NICK_ID, 
    "out_lif_or_dist_tree_nick", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.out_lif_or_dist_tree_nick:\n\r"
    "  uint32 out_lif_or_dist_tree_nick\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_eth_or_trill_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 is_out_lif 0 out_lif_or_dist_tree_nick 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_SET_UNSAFE_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_GET_UNSAFE_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_GET_UNSAFE_ID, 
    "ihb_fec_entry_eth_or_trill_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_eth_or_trill_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_GET_UNSAFE_IHB_FEC_ENTRY_ETH_OR_TRILL_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_ID, 
    "ihb_fec_entry_ip_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_ip_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  out_lif_type 0 rif 0 mc_rpf_mode 0 uc_rpf_mode 0 out_lif_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_TBL_DATA_OUT_LIF_TYPE_ID, 
    "out_lif_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.out_lif_type:\n\r"
    "  uint32 out_lif_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_ip_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  out_lif_type 0 rif 0 mc_rpf_mode 0 uc_rpf_mode 0 out_lif_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_TBL_DATA_RIF_ID, 
    "rif", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.rif:\n\r"
    "  uint32 rif\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_ip_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  out_lif_type 0 rif 0 mc_rpf_mode 0 uc_rpf_mode 0 out_lif_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_TBL_DATA_MC_RPF_MODE_ID, 
    "mc_rpf_mode", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mc_rpf_mode:\n\r"
    "  uint32 mc_rpf_mode\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_ip_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  out_lif_type 0 rif 0 mc_rpf_mode 0 uc_rpf_mode 0 out_lif_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_TBL_DATA_UC_RPF_MODE_ID, 
    "uc_rpf_mode", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.uc_rpf_mode:\n\r"
    "  uint32 uc_rpf_mode\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_ip_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  out_lif_type 0 rif 0 mc_rpf_mode 0 uc_rpf_mode 0 out_lif_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_TBL_DATA_OUT_LIF_LSB_ID, 
    "out_lif_lsb", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.out_lif_lsb:\n\r"
    "  uint32 out_lif_lsb\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_ip_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  out_lif_type 0 rif 0 mc_rpf_mode 0 uc_rpf_mode 0 out_lif_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_IP_TBL_GET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_GET_UNSAFE_ID, 
    "ihb_fec_entry_ip_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_ip_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_IP_TBL_GET_UNSAFE_IHB_FEC_ENTRY_IP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_DEFAULT_TBL_SET_UNSAFE_IHB_FEC_ENTRY_DEFAULT_TBL_SET_UNSAFE_ID, 
    "ihb_fec_entry_default_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_default_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  out_vsi_lsb 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_DEFAULT_TBL_SET_UNSAFE_IHB_FEC_ENTRY_DEFAULT_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_DEFAULT_TBL_SET_UNSAFE_IHB_FEC_ENTRY_DEFAULT_TBL_SET_UNSAFE_TBL_DATA_OUT_VSI_LSB_ID, 
    "out_vsi_lsb", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.out_vsi_lsb:\n\r"
    "  uint32 out_vsi_lsb\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_default_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  out_vsi_lsb 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_DEFAULT_TBL_SET_UNSAFE_IHB_FEC_ENTRY_DEFAULT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_DEFAULT_TBL_SET_UNSAFE_IHB_FEC_ENTRY_DEFAULT_TBL_SET_UNSAFE_TBL_DATA_OUT_LIF_ID, 
    "out_lif", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.out_lif:\n\r"
    "  uint32 out_lif\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_default_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  out_vsi_lsb 0 out_lif 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_DEFAULT_TBL_SET_UNSAFE_IHB_FEC_ENTRY_DEFAULT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_DEFAULT_TBL_GET_UNSAFE_IHB_FEC_ENTRY_DEFAULT_TBL_GET_UNSAFE_ID, 
    "ihb_fec_entry_default_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_default_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_DEFAULT_TBL_GET_UNSAFE_IHB_FEC_ENTRY_DEFAULT_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_ACCESSED_TBL_SET_UNSAFE_IHB_FEC_ENTRY_ACCESSED_TBL_SET_UNSAFE_ID, 
    "ihb_fec_entry_accessed_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_accessed_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fec_entry_accessed 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_ACCESSED_TBL_SET_UNSAFE_IHB_FEC_ENTRY_ACCESSED_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_ACCESSED_TBL_SET_UNSAFE_IHB_FEC_ENTRY_ACCESSED_TBL_SET_UNSAFE_TBL_DATA_FEC_ENTRY_ACCESSED_ID, 
    "fec_entry_accessed", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fec_entry_accessed:\n\r"
    "  uint32 fec_entry_accessed\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_accessed_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fec_entry_accessed 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_ACCESSED_TBL_SET_UNSAFE_IHB_FEC_ENTRY_ACCESSED_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FEC_ENTRY_ACCESSED_TBL_GET_UNSAFE_IHB_FEC_ENTRY_ACCESSED_TBL_GET_UNSAFE_ID, 
    "ihb_fec_entry_accessed_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fec_entry_accessed_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FEC_ENTRY_ACCESSED_TBL_GET_UNSAFE_IHB_FEC_ENTRY_ACCESSED_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_ID, 
    "ihb_path_select_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_path_select_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  path_select7 0 path_select6 0 path_select5 0 path_select4 0 path_select3 0\n\r"
    "  path_select2 0 path_select1 0 path_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_TBL_DATA_PATH_SELECT7_ID, 
    "path_select7", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.path_select7:\n\r"
    "  uint32 path_select7\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_path_select_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  path_select7 0 path_select6 0 path_select5 0 path_select4 0 path_select3 0\n\r"
    "  path_select2 0 path_select1 0 path_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_TBL_DATA_PATH_SELECT6_ID, 
    "path_select6", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.path_select6:\n\r"
    "  uint32 path_select6\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_path_select_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  path_select7 0 path_select6 0 path_select5 0 path_select4 0 path_select3 0\n\r"
    "  path_select2 0 path_select1 0 path_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_TBL_DATA_PATH_SELECT5_ID, 
    "path_select5", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.path_select5:\n\r"
    "  uint32 path_select5\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_path_select_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  path_select7 0 path_select6 0 path_select5 0 path_select4 0 path_select3 0\n\r"
    "  path_select2 0 path_select1 0 path_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_TBL_DATA_PATH_SELECT4_ID, 
    "path_select4", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.path_select4:\n\r"
    "  uint32 path_select4\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_path_select_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  path_select7 0 path_select6 0 path_select5 0 path_select4 0 path_select3 0\n\r"
    "  path_select2 0 path_select1 0 path_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_TBL_DATA_PATH_SELECT3_ID, 
    "path_select3", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.path_select3:\n\r"
    "  uint32 path_select3\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_path_select_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  path_select7 0 path_select6 0 path_select5 0 path_select4 0 path_select3 0\n\r"
    "  path_select2 0 path_select1 0 path_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_TBL_DATA_PATH_SELECT2_ID, 
    "path_select2", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.path_select2:\n\r"
    "  uint32 path_select2\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_path_select_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  path_select7 0 path_select6 0 path_select5 0 path_select4 0 path_select3 0\n\r"
    "  path_select2 0 path_select1 0 path_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_TBL_DATA_PATH_SELECT1_ID, 
    "path_select1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.path_select1:\n\r"
    "  uint32 path_select1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_path_select_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  path_select7 0 path_select6 0 path_select5 0 path_select4 0 path_select3 0\n\r"
    "  path_select2 0 path_select1 0 path_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_TBL_DATA_PATH_SELECT0_ID, 
    "path_select0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.path_select0:\n\r"
    "  uint32 path_select0\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_path_select_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  path_select7 0 path_select6 0 path_select5 0 path_select4 0 path_select3 0\n\r"
    "  path_select2 0 path_select1 0 path_select0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PATH_SELECT_TBL_SET_UNSAFE_IHB_PATH_SELECT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PATH_SELECT_TBL_GET_UNSAFE_IHB_PATH_SELECT_TBL_GET_UNSAFE_ID, 
    "ihb_path_select_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_path_select_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PATH_SELECT_TBL_GET_UNSAFE_IHB_PATH_SELECT_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_DESTINATION_STATUS_TBL_SET_UNSAFE_IHB_DESTINATION_STATUS_TBL_SET_UNSAFE_ID, 
    "ihb_destination_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_destination_status_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  destination_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_DESTINATION_STATUS_TBL_SET_UNSAFE_IHB_DESTINATION_STATUS_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_DESTINATION_STATUS_TBL_SET_UNSAFE_IHB_DESTINATION_STATUS_TBL_SET_UNSAFE_TBL_DATA_DESTINATION_VALID_ID, 
    "destination_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination_valid:\n\r"
    "  uint32 destination_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_destination_status_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  destination_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_DESTINATION_STATUS_TBL_SET_UNSAFE_IHB_DESTINATION_STATUS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_DESTINATION_STATUS_TBL_GET_UNSAFE_IHB_DESTINATION_STATUS_TBL_GET_UNSAFE_ID, 
    "ihb_destination_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_destination_status_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_DESTINATION_STATUS_TBL_GET_UNSAFE_IHB_DESTINATION_STATUS_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID, 
    "ihb_fwd_act_profile_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_LEARN_DISABLE_ID, 
    "fwd_act_learn_disable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_learn_disable:\n\r"
    "  uint32 fwd_act_learn_disable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_ETHERNET_POLICER_POINTER_VALID_ID, 
    "fwd_act_ethernet_policer_pointer_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_ethernet_policer_pointer_valid:\n\r"
    "  uint32 fwd_act_ethernet_policer_pointer_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_ETHERNET_POLICER_POINTER_ID, 
    "fwd_act_ethernet_policer_pointer", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_ethernet_policer_pointer:\n\r"
    "  uint32 fwd_act_ethernet_policer_pointer\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_FWD_OFFSET_INDEX_VALID_ID, 
    "fwd_act_fwd_offset_index_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_fwd_offset_index_valid:\n\r"
    "  uint32 fwd_act_fwd_offset_index_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_FWD_OFFSET_INDEX_ID, 
    "fwd_act_fwd_offset_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_fwd_offset_index:\n\r"
    "  uint32 fwd_act_fwd_offset_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_DROP_PRECEDENCE_METER_COMMAND_VALID_ID, 
    "fwd_act_drop_precedence_meter_command_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_drop_precedence_meter_command_valid:\n\r"
    "  uint32 fwd_act_drop_precedence_meter_command_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_DROP_PRECEDENCE_METER_COMMAND_ID, 
    "fwd_act_drop_precedence_meter_command", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_drop_precedence_meter_command:\n\r"
    "  uint32 fwd_act_drop_precedence_meter_command\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_COUNTER_POINTER_SELECTOR_ID, 
    "fwd_act_counter_pointer_selector", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_counter_pointer_selector:\n\r"
    "  uint32 fwd_act_counter_pointer_selector\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_COUNTER_POINTER_ID, 
    "fwd_act_counter_pointer", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_counter_pointer:\n\r"
    "  uint32 fwd_act_counter_pointer\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_METER_POINTER_SELECTOR_ID, 
    "fwd_act_meter_pointer_selector", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_meter_pointer_selector:\n\r"
    "  uint32 fwd_act_meter_pointer_selector\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_METER_POINTER_ID, 
    "fwd_act_meter_pointer", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_meter_pointer:\n\r"
    "  uint32 fwd_act_meter_pointer\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_DROP_PRECEDENCE_VALID_ID, 
    "fwd_act_drop_precedence_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_drop_precedence_valid:\n\r"
    "  uint32 fwd_act_drop_precedence_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_DROP_PRECEDENCE_ID, 
    "fwd_act_drop_precedence", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_drop_precedence:\n\r"
    "  uint32 fwd_act_drop_precedence\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_TRAFFIC_CLASS_VALID_ID, 
    "fwd_act_traffic_class_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_traffic_class_valid:\n\r"
    "  uint32 fwd_act_traffic_class_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_TRAFFIC_CLASS_ID, 
    "fwd_act_traffic_class", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_traffic_class:\n\r"
    "  uint32 fwd_act_traffic_class\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_DESTINATION_ADD_VSI_SHIFT_ID, 
    "fwd_act_destination_add_vsi_shift", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_destination_add_vsi_shift:\n\r"
    "  uint32 fwd_act_destination_add_vsi_shift\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_DESTINATION_ADD_VSI_ID, 
    "fwd_act_destination_add_vsi", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_destination_add_vsi:\n\r"
    "  uint32 fwd_act_destination_add_vsi\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_DESTINATION_VALID_ID, 
    "fwd_act_destination_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_destination_valid:\n\r"
    "  uint32 fwd_act_destination_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_DESTINATION_ID, 
    "fwd_act_destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_destination:\n\r"
    "  uint32 fwd_act_destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_CONTROL_ID, 
    "fwd_act_control", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_control:\n\r"
    "  uint32 fwd_act_control\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_FWD_ACT_TRAP_ID, 
    "fwd_act_trap", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd_act_trap:\n\r"
    "  uint32 fwd_act_trap\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  fwd_act_learn_disable 0 fwd_act_ethernet_policer_pointer_valid 0\n\r"
    "  fwd_act_ethernet_policer_pointer 0 fwd_act_fwd_offset_index_valid 0\n\r"
    "  fwd_act_fwd_offset_index 0 fwd_act_drop_precedence_meter_command_valid 0\n\r"
    "  fwd_act_drop_precedence_meter_command 0 fwd_act_counter_pointer_selector 0\n\r"
    "  fwd_act_counter_pointer 0 fwd_act_meter_pointer_selector 0\n\r"
    "  fwd_act_meter_pointer 0 fwd_act_drop_precedence_valid 0\n\r"
    "  fwd_act_drop_precedence 0 fwd_act_traffic_class_valid 0 fwd_act_traffic_class\n\r"
    "  0 fwd_act_destination_add_vsi_shift 0 fwd_act_destination_add_vsi 0\n\r"
    "  fwd_act_destination_valid 0 fwd_act_destination 0 fwd_act_control 0\n\r"
    "  fwd_act_trap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FWD_ACT_PROFILE_TBL_GET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_GET_UNSAFE_ID, 
    "ihb_fwd_act_profile_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_fwd_act_profile_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FWD_ACT_PROFILE_TBL_GET_UNSAFE_IHB_FWD_ACT_PROFILE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_SNOOP_ACTION_TBL_SET_UNSAFE_IHB_SNOOP_ACTION_TBL_SET_UNSAFE_ID, 
    "ihb_snoop_action_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_snoop_action_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  snoop_action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_SNOOP_ACTION_TBL_SET_UNSAFE_IHB_SNOOP_ACTION_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_SNOOP_ACTION_TBL_SET_UNSAFE_IHB_SNOOP_ACTION_TBL_SET_UNSAFE_TBL_DATA_SNOOP_ACTION_ID, 
    "snoop_action", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.snoop_action:\n\r"
    "  uint32 snoop_action\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_snoop_action_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  snoop_action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_SNOOP_ACTION_TBL_SET_UNSAFE_IHB_SNOOP_ACTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_SNOOP_ACTION_TBL_GET_UNSAFE_IHB_SNOOP_ACTION_TBL_GET_UNSAFE_ID, 
    "ihb_snoop_action_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_snoop_action_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_SNOOP_ACTION_TBL_GET_UNSAFE_IHB_SNOOP_ACTION_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_ID, 
    "ihb_pinfo_flp_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_flp_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  transparent_p2p_service_enable 0 action_profile_da_not_found_index 0\n\r"
    "  sa_lookup_enable 0 program_translation_profile 0\n\r"
    "  enable_unicast_same_interface_filter 0 action_profile_sa_drop_index 0\n\r"
    "  learn_enable 0 action_profile_sa_not_found_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_TBL_DATA_TRANSPARENT_P2P_SERVICE_ENABLE_ID, 
    "transparent_p2p_service_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.transparent_p2p_service_enable:\n\r"
    "  uint32 transparent_p2p_service_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_flp_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  transparent_p2p_service_enable 0 action_profile_da_not_found_index 0\n\r"
    "  sa_lookup_enable 0 program_translation_profile 0\n\r"
    "  enable_unicast_same_interface_filter 0 action_profile_sa_drop_index 0\n\r"
    "  learn_enable 0 action_profile_sa_not_found_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_TBL_DATA_ACTION_PROFILE_DA_NOT_FOUND_INDEX_ID, 
    "action_profile_da_not_found_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.action_profile_da_not_found_index:\n\r"
    "  uint32 action_profile_da_not_found_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_flp_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  transparent_p2p_service_enable 0 action_profile_da_not_found_index 0\n\r"
    "  sa_lookup_enable 0 program_translation_profile 0\n\r"
    "  enable_unicast_same_interface_filter 0 action_profile_sa_drop_index 0\n\r"
    "  learn_enable 0 action_profile_sa_not_found_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_TBL_DATA_SA_LOOKUP_ENABLE_ID, 
    "sa_lookup_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.sa_lookup_enable:\n\r"
    "  uint32 sa_lookup_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_flp_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  transparent_p2p_service_enable 0 action_profile_da_not_found_index 0\n\r"
    "  sa_lookup_enable 0 program_translation_profile 0\n\r"
    "  enable_unicast_same_interface_filter 0 action_profile_sa_drop_index 0\n\r"
    "  learn_enable 0 action_profile_sa_not_found_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_TBL_DATA_PROGRAM_TRANSLATION_PROFILE_ID, 
    "program_translation_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program_translation_profile:\n\r"
    "  uint32 program_translation_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_flp_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  transparent_p2p_service_enable 0 action_profile_da_not_found_index 0\n\r"
    "  sa_lookup_enable 0 program_translation_profile 0\n\r"
    "  enable_unicast_same_interface_filter 0 action_profile_sa_drop_index 0\n\r"
    "  learn_enable 0 action_profile_sa_not_found_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_TBL_DATA_ENABLE_UNICAST_SAME_INTERFACE_FILTER_ID, 
    "enable_unicast_same_interface_filter", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.enable_unicast_same_interface_filter:\n\r"
    "  uint32 enable_unicast_same_interface_filter\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_flp_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  transparent_p2p_service_enable 0 action_profile_da_not_found_index 0\n\r"
    "  sa_lookup_enable 0 program_translation_profile 0\n\r"
    "  enable_unicast_same_interface_filter 0 action_profile_sa_drop_index 0\n\r"
    "  learn_enable 0 action_profile_sa_not_found_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_TBL_DATA_ACTION_PROFILE_SA_DROP_INDEX_ID, 
    "action_profile_sa_drop_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.action_profile_sa_drop_index:\n\r"
    "  uint32 action_profile_sa_drop_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_flp_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  transparent_p2p_service_enable 0 action_profile_da_not_found_index 0\n\r"
    "  sa_lookup_enable 0 program_translation_profile 0\n\r"
    "  enable_unicast_same_interface_filter 0 action_profile_sa_drop_index 0\n\r"
    "  learn_enable 0 action_profile_sa_not_found_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_TBL_DATA_LEARN_ENABLE_ID, 
    "learn_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.learn_enable:\n\r"
    "  uint32 learn_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_flp_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  transparent_p2p_service_enable 0 action_profile_da_not_found_index 0\n\r"
    "  sa_lookup_enable 0 program_translation_profile 0\n\r"
    "  enable_unicast_same_interface_filter 0 action_profile_sa_drop_index 0\n\r"
    "  learn_enable 0 action_profile_sa_not_found_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_TBL_DATA_ACTION_PROFILE_SA_NOT_FOUND_INDEX_ID, 
    "action_profile_sa_not_found_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.action_profile_sa_not_found_index:\n\r"
    "  uint32 action_profile_sa_not_found_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_flp_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  transparent_p2p_service_enable 0 action_profile_da_not_found_index 0\n\r"
    "  sa_lookup_enable 0 program_translation_profile 0\n\r"
    "  enable_unicast_same_interface_filter 0 action_profile_sa_drop_index 0\n\r"
    "  learn_enable 0 action_profile_sa_not_found_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FLP_TBL_SET_UNSAFE_IHB_PINFO_FLP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_FLP_TBL_GET_UNSAFE_IHB_PINFO_FLP_TBL_GET_UNSAFE_ID, 
    "ihb_pinfo_flp_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_flp_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_FLP_TBL_GET_UNSAFE_IHB_PINFO_FLP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_ID, 
    "ihb_program_translation_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_translation_map_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program00 0 program01 0 program10 0 program11 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_TBL_DATA_PROGRAM00_ID, 
    "program00", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program00:\n\r"
    "  uint32 program00\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_translation_map_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program00 0 program01 0 program10 0 program11 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_TBL_DATA_PROGRAM01_ID, 
    "program01", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program01:\n\r"
    "  uint32 program01\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_translation_map_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program00 0 program01 0 program10 0 program11 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_TBL_DATA_PROGRAM10_ID, 
    "program10", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program10:\n\r"
    "  uint32 program10\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_translation_map_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program00 0 program01 0 program10 0 program11 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_TBL_DATA_PROGRAM11_ID, 
    "program11", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program11:\n\r"
    "  uint32 program11\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_translation_map_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program00 0 program01 0 program10 0 program11 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_TRANSLATION_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_TRANSLATION_MAP_TBL_GET_UNSAFE_IHB_PROGRAM_TRANSLATION_MAP_TBL_GET_UNSAFE_ID, 
    "ihb_program_translation_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_translation_map_tbl_get_unsafe entry_offset_ndx\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_TRANSLATION_MAP_TBL_GET_UNSAFE_IHB_PROGRAM_TRANSLATION_MAP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID, 
    "ihb_flp_key_program_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_DATA_PROCESSING_PROFILE_ID, 
    "data_processing_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.data_processing_profile:\n\r"
    "  uint32 data_processing_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_TCAM_OR_VALUE_ID, 
    "tcam_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tcam_or_value:\n\r"
    "  uint32 tcam_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_TCAM_AND_VALUE_ID, 
    "tcam_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tcam_and_value:\n\r"
    "  uint32 tcam_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_TCAM_BANK_VALID_ID, 
    "tcam_bank_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tcam_bank_valid:\n\r"
    "  uint32 tcam_bank_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_TCAM_KEY_SIZE_ID, 
    "tcam_key_size", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tcam_key_size:\n\r"
    "  uint32 tcam_key_size\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LPM_2ND_LKP_OR_VALUE_ID, 
    "lpm_2nd_lkp_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lpm_2nd_lkp_or_value:\n\r"
    "  uint32 lpm_2nd_lkp_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LPM_2ND_LKP_AND_VALUE_ID, 
    "lpm_2nd_lkp_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lpm_2nd_lkp_and_value:\n\r"
    "  uint32 lpm_2nd_lkp_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LPM_2ND_LKP_VALID_ID, 
    "lpm_2nd_lkp_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lpm_2nd_lkp_valid:\n\r"
    "  uint32 lpm_2nd_lkp_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LPM_1ST_LKP_OR_VALUE_ID, 
    "lpm_1st_lkp_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lpm_1st_lkp_or_value:\n\r"
    "  uint32 lpm_1st_lkp_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LPM_1ST_LKP_AND_VALUE_ID, 
    "lpm_1st_lkp_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lpm_1st_lkp_and_value:\n\r"
    "  uint32 lpm_1st_lkp_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LPM_1ST_LKP_VALID_ID, 
    "lpm_1st_lkp_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lpm_1st_lkp_valid:\n\r"
    "  uint32 lpm_1st_lkp_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LEM_2ND_LKP_OR_VALUE_ID, 
    "lem_2nd_lkp_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lem_2nd_lkp_or_value:\n\r"
    "  uint32 lem_2nd_lkp_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LEM_2ND_LKP_AND_VALUE_ID, 
    "lem_2nd_lkp_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lem_2nd_lkp_and_value:\n\r"
    "  uint32 lem_2nd_lkp_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LEM_2ND_LKP_KEY_SELECT_ID, 
    "lem_2nd_lkp_key_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lem_2nd_lkp_key_select:\n\r"
    "  uint32 lem_2nd_lkp_key_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LEM_2ND_LKP_VALID_ID, 
    "lem_2nd_lkp_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lem_2nd_lkp_valid:\n\r"
    "  uint32 lem_2nd_lkp_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LEM_1ST_LKP_OR_VALUE_ID, 
    "lem_1st_lkp_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lem_1st_lkp_or_value:\n\r"
    "  uint32 lem_1st_lkp_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LEM_1ST_LKP_AND_VALUE_ID, 
    "lem_1st_lkp_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lem_1st_lkp_and_value:\n\r"
    "  uint32 lem_1st_lkp_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LEM_1ST_LKP_KEY_TYPE_ID, 
    "lem_1st_lkp_key_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lem_1st_lkp_key_type:\n\r"
    "  uint32 lem_1st_lkp_key_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LEM_1ST_LKP_KEY_SELECT_ID, 
    "lem_1st_lkp_key_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lem_1st_lkp_key_select:\n\r"
    "  uint32 lem_1st_lkp_key_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_LEM_1ST_LKP_VALID_ID, 
    "lem_1st_lkp_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lem_1st_lkp_valid:\n\r"
    "  uint32 lem_1st_lkp_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_ELK_LKP_VALID_ID, 
    "elk_lkp_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.elk_lkp_valid:\n\r"
    "  uint32 elk_lkp_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_KEY_B_INSTRUCTION3_ID, 
    "key_b_instruction3", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_b_instruction3:\n\r"
    "  uint32 key_b_instruction3\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_KEY_B_INSTRUCTION2_ID, 
    "key_b_instruction2", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_b_instruction2:\n\r"
    "  uint32 key_b_instruction2\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_KEY_B_INSTRUCTION1_ID, 
    "key_b_instruction1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_b_instruction1:\n\r"
    "  uint32 key_b_instruction1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_KEY_B_INSTRUCTION0_ID, 
    "key_b_instruction0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_b_instruction0:\n\r"
    "  uint32 key_b_instruction0\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_KEY_A_INSTRUCTION1_ID, 
    "key_a_instruction1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_a_instruction1:\n\r"
    "  uint32 key_a_instruction1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_TBL_DATA_KEY_A_INSTRUCTION0_ID, 
    "key_a_instruction0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.key_a_instruction0:\n\r"
    "  uint32 key_a_instruction0\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  data_processing_profile 0 tcam_or_value 0 tcam_and_value 0 tcam_bank_valid 0\n\r"
    "  tcam_key_size 0 lpm_2nd_lkp_or_value 0 lpm_2nd_lkp_and_value 0\n\r"
    "  lpm_2nd_lkp_valid 0 lpm_1st_lkp_or_value 0 lpm_1st_lkp_and_value 0\n\r"
    "  lpm_1st_lkp_valid 0 lem_2nd_lkp_or_value 0 lem_2nd_lkp_and_value 0\n\r"
    "  lem_2nd_lkp_key_select 0 lem_2nd_lkp_valid 0 lem_1st_lkp_or_value 0\n\r"
    "  lem_1st_lkp_and_value 0 lem_1st_lkp_key_type 0 lem_1st_lkp_key_select 0\n\r"
    "  lem_1st_lkp_valid 0 elk_lkp_valid 0 key_b_instruction3 0 key_b_instruction2 0\n\r"
    "  key_b_instruction1 0 key_b_instruction0 0 key_a_instruction1 0\n\r"
    "  key_a_instruction0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_GET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_GET_UNSAFE_ID, 
    "ihb_flp_key_program_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_flp_key_program_map_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_FLP_KEY_PROGRAM_MAP_TBL_GET_UNSAFE_IHB_FLP_KEY_PROGRAM_MAP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_ID, 
    "ihb_unknown_da_action_profiles_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_unknown_da_action_profiles_tbl_set_unsafe\n\r"
    "  default_forward_profile 0 da_type 0 orientation 0 entry_offset_ndx 0 fwd 0\n\r"
    "  snp 0 cpu_trap_code_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_KEY_NDX_DEFAULT_FORWARD_PROFILE_ID, 
    "key_default_forward_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  key_ndx.default_forward_profile:\n\r"
    "  uint32 default_forward_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_unknown_da_action_profiles_tbl_set_unsafe\n\r"
    "  default_forward_profile 0 da_type 0 orientation 0 entry_offset_ndx 0 fwd 0\n\r"
    "  snp 0 cpu_trap_code_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_KEY_NDX_DA_TYPE_ID, 
    "key_da_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  key_ndx.da_type:\n\r"
    "  SOC_SAND_PP_ETHERNET_DA_TYPE da_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_unknown_da_action_profiles_tbl_set_unsafe\n\r"
    "  default_forward_profile 0 da_type 0 orientation 0 entry_offset_ndx 0 fwd 0\n\r"
    "  snp 0 cpu_trap_code_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_KEY_NDX_ORIENTATION_ID, 
    "key_orientation", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  key_ndx.orientation:\n\r"
    "  SOC_SAND_PP_HUB_SPOKE_ORIENTATION orientation\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_unknown_da_action_profiles_tbl_set_unsafe\n\r"
    "  default_forward_profile 0 da_type 0 orientation 0 entry_offset_ndx 0 fwd 0\n\r"
    "  snp 0 cpu_trap_code_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_TBL_DATA_FWD_ID, 
    "fwd", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fwd:\n\r"
    "  uint32 fwd\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_unknown_da_action_profiles_tbl_set_unsafe\n\r"
    "  default_forward_profile 0 da_type 0 orientation 0 entry_offset_ndx 0 fwd 0\n\r"
    "  snp 0 cpu_trap_code_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_TBL_DATA_SNP_ID, 
    "snp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.snp:\n\r"
    "  uint32 snp\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_unknown_da_action_profiles_tbl_set_unsafe\n\r"
    "  default_forward_profile 0 da_type 0 orientation 0 entry_offset_ndx 0 fwd 0\n\r"
    "  snp 0 cpu_trap_code_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_TBL_DATA_CPU_TRAP_CODE_LSB_ID, 
    "cpu_trap_code_lsb", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cpu_trap_code_lsb:\n\r"
    "  uint32 cpu_trap_code_lsb\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_unknown_da_action_profiles_tbl_set_unsafe\n\r"
    "  default_forward_profile 0 da_type 0 orientation 0 entry_offset_ndx 0 fwd 0\n\r"
    "  snp 0 cpu_trap_code_lsb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_ID, 
    "ihb_unknown_da_action_profiles_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_unknown_da_action_profiles_tbl_get_unsafe\n\r"
    "  default_forward_profile 0 da_type 0 orientation 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_KEY_NDX_DEFAULT_FORWARD_PROFILE_ID, 
    "key_default_forward_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  key_ndx.default_forward_profile:\n\r"
    "  uint32 default_forward_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_unknown_da_action_profiles_tbl_get_unsafe\n\r"
    "  default_forward_profile 0 da_type 0 orientation 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_KEY_NDX_DA_TYPE_ID, 
    "key_da_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  key_ndx.da_type:\n\r"
    "  SOC_SAND_PP_ETHERNET_DA_TYPE da_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_unknown_da_action_profiles_tbl_get_unsafe\n\r"
    "  default_forward_profile 0 da_type 0 orientation 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_KEY_NDX_ORIENTATION_ID, 
    "key_orientation", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  key_ndx.orientation:\n\r"
    "  SOC_SAND_PP_HUB_SPOKE_ORIENTATION orientation\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_unknown_da_action_profiles_tbl_get_unsafe\n\r"
    "  default_forward_profile 0 da_type 0 orientation 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_IHB_UNKNOWN_DA_ACTION_PROFILES_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_VRF_CONFIG_TBL_SET_UNSAFE_IHB_VRF_CONFIG_TBL_SET_UNSAFE_ID, 
    "ihb_vrf_config_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_vrf_config_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  l3vpn_default_routing 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_VRF_CONFIG_TBL_SET_UNSAFE_IHB_VRF_CONFIG_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_VRF_CONFIG_TBL_SET_UNSAFE_IHB_VRF_CONFIG_TBL_SET_UNSAFE_TBL_DATA_L3VPN_DEFAULT_ROUTING_ID, 
    "l3vpn_default_routing", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.l3vpn_default_routing:\n\r"
    "  uint32 l3vpn_default_routing\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_vrf_config_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  l3vpn_default_routing 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_VRF_CONFIG_TBL_SET_UNSAFE_IHB_VRF_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_VRF_CONFIG_TBL_SET_UNSAFE_IHB_VRF_CONFIG_TBL_SET_UNSAFE_TBL_DATA_DESTINATION_ID, 
    "destination", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination:\n\r"
    "  uint32 destination\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_vrf_config_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  l3vpn_default_routing 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_VRF_CONFIG_TBL_SET_UNSAFE_IHB_VRF_CONFIG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_VRF_CONFIG_TBL_GET_UNSAFE_IHB_VRF_CONFIG_TBL_GET_UNSAFE_ID, 
    "ihb_vrf_config_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_vrf_config_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_VRF_CONFIG_TBL_GET_UNSAFE_IHB_VRF_CONFIG_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_ID, 
    "ihb_header_profile_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_header_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  header_profile_ftmh_pph_present 0 header_profile_build_pph 0\n\r"
    "  header_profile_st_vsq_ptr_tc_mode 0 header_profile_always_add_pph_learn_ext 0\n\r"
    "  header_profile_learn_disable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_TBL_DATA_HEADER_PROFILE_FTMH_PPH_PRESENT_ID, 
    "header_profile_ftmh_pph_present", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.header_profile_ftmh_pph_present:\n\r"
    "  uint32 header_profile_ftmh_pph_present\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_header_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  header_profile_ftmh_pph_present 0 header_profile_build_pph 0\n\r"
    "  header_profile_st_vsq_ptr_tc_mode 0 header_profile_always_add_pph_learn_ext 0\n\r"
    "  header_profile_learn_disable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_TBL_DATA_HEADER_PROFILE_BUILD_PPH_ID, 
    "header_profile_build_pph", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.header_profile_build_pph:\n\r"
    "  uint32 header_profile_build_pph\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_header_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  header_profile_ftmh_pph_present 0 header_profile_build_pph 0\n\r"
    "  header_profile_st_vsq_ptr_tc_mode 0 header_profile_always_add_pph_learn_ext 0\n\r"
    "  header_profile_learn_disable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_TBL_DATA_HEADER_PROFILE_ST_VSQ_PTR_TC_MODE_ID, 
    "header_profile_st_vsq_ptr_tc_mode", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.header_profile_st_vsq_ptr_tc_mode:\n\r"
    "  uint32 header_profile_st_vsq_ptr_tc_mode\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_header_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  header_profile_ftmh_pph_present 0 header_profile_build_pph 0\n\r"
    "  header_profile_st_vsq_ptr_tc_mode 0 header_profile_always_add_pph_learn_ext 0\n\r"
    "  header_profile_learn_disable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_TBL_DATA_HEADER_PROFILE_ALWAYS_ADD_PPH_LEARN_EXT_ID, 
    "header_profile_always_add_pph_learn_ext", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.header_profile_always_add_pph_learn_ext:\n\r"
    "  uint32 header_profile_always_add_pph_learn_ext\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_header_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  header_profile_ftmh_pph_present 0 header_profile_build_pph 0\n\r"
    "  header_profile_st_vsq_ptr_tc_mode 0 header_profile_always_add_pph_learn_ext 0\n\r"
    "  header_profile_learn_disable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_TBL_DATA_HEADER_PROFILE_LEARN_DISABLE_ID, 
    "header_profile_learn_disable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.header_profile_learn_disable:\n\r"
    "  uint32 header_profile_learn_disable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_header_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  header_profile_ftmh_pph_present 0 header_profile_build_pph 0\n\r"
    "  header_profile_st_vsq_ptr_tc_mode 0 header_profile_always_add_pph_learn_ext 0\n\r"
    "  header_profile_learn_disable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_IHB_HEADER_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_HEADER_PROFILE_TBL_GET_UNSAFE_IHB_HEADER_PROFILE_TBL_GET_UNSAFE_ID, 
    "ihb_header_profile_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_header_profile_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_HEADER_PROFILE_TBL_GET_UNSAFE_IHB_HEADER_PROFILE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_SNP_ACT_PROFILE_TBL_SET_UNSAFE_IHB_SNP_ACT_PROFILE_TBL_SET_UNSAFE_ID, 
    "ihb_snp_act_profile_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_snp_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  snp_act_snp_sampling_probability 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_SNP_ACT_PROFILE_TBL_SET_UNSAFE_IHB_SNP_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_SNP_ACT_PROFILE_TBL_SET_UNSAFE_IHB_SNP_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_SNP_ACT_SNP_SAMPLING_PROBABILITY_ID, 
    "snp_act_snp_sampling_probability", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.snp_act_snp_sampling_probability:\n\r"
    "  uint32 snp_act_snp_sampling_probability\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_snp_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  snp_act_snp_sampling_probability 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_SNP_ACT_PROFILE_TBL_SET_UNSAFE_IHB_SNP_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_SNP_ACT_PROFILE_TBL_GET_UNSAFE_IHB_SNP_ACT_PROFILE_TBL_GET_UNSAFE_ID, 
    "ihb_snp_act_profile_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_snp_act_profile_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_SNP_ACT_PROFILE_TBL_GET_UNSAFE_IHB_SNP_ACT_PROFILE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_MRR_ACT_PROFILE_TBL_SET_UNSAFE_IHB_MRR_ACT_PROFILE_TBL_SET_UNSAFE_ID, 
    "ihb_mrr_act_profile_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_mrr_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  mrr_act_mrr_sampling_probability 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_MRR_ACT_PROFILE_TBL_SET_UNSAFE_IHB_MRR_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_MRR_ACT_PROFILE_TBL_SET_UNSAFE_IHB_MRR_ACT_PROFILE_TBL_SET_UNSAFE_TBL_DATA_MRR_ACT_MRR_SAMPLING_PROBABILITY_ID, 
    "mrr_act_mrr_sampling_probability", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mrr_act_mrr_sampling_probability:\n\r"
    "  uint32 mrr_act_mrr_sampling_probability\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_mrr_act_profile_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  mrr_act_mrr_sampling_probability 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_MRR_ACT_PROFILE_TBL_SET_UNSAFE_IHB_MRR_ACT_PROFILE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_MRR_ACT_PROFILE_TBL_GET_UNSAFE_IHB_MRR_ACT_PROFILE_TBL_GET_UNSAFE_ID, 
    "ihb_mrr_act_profile_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_mrr_act_profile_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_MRR_ACT_PROFILE_TBL_GET_UNSAFE_IHB_MRR_ACT_PROFILE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LPM1_TBL_SET_UNSAFE_IHB_LPM1_TBL_SET_UNSAFE_ID, 
    "ihb_lpm_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lpm1_tbl_set_unsafe entry_offset_ndx 0 lpm1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LPM1_TBL_SET_UNSAFE_IHB_LPM1_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LPM1_TBL_SET_UNSAFE_IHB_LPM1_TBL_SET_UNSAFE_TBL_DATA_LPM_BANK_ID, 
    "bank_id", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lpm1_tbl_set_unsafe entry_offset_ndx 0 lpm1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LPM1_TBL_SET_UNSAFE_IHB_LPM1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LPM1_TBL_SET_UNSAFE_IHB_LPM1_TBL_SET_UNSAFE_TBL_DATA_LPM1_ID, 
    "lpm", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lpm1:\n\r"
    "  uint32 lpm1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lpm1_tbl_set_unsafe entry_offset_ndx 0 lpm1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LPM1_TBL_SET_UNSAFE_IHB_LPM1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_LPM1_TBL_GET_UNSAFE_IHB_LPM1_TBL_GET_UNSAFE_ID, 
    "ihb_lpm_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lpm1_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LPM1_TBL_GET_UNSAFE_IHB_LPM1_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  {  
    PARAM_PB_PP_IHB_LPM1_TBL_GET_UNSAFE_IHB_LPM1_TBL_GET_UNSAFE_BANK_ID_ID, 
    "bank_id", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_lpm1_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_LPM1_TBL_GET_UNSAFE_IHB_LPM1_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_PMF_KEY_GEN_VAR_TBL_SET_UNSAFE_IHB_PINFO_PMF_KEY_GEN_VAR_TBL_SET_UNSAFE_ID, 
    "ihb_pinfo_pmf_key_gen_var_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_pmf_key_gen_var_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pinfo_pmf_key_gen_var 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_PMF_KEY_GEN_VAR_TBL_SET_UNSAFE_IHB_PINFO_PMF_KEY_GEN_VAR_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_PMF_KEY_GEN_VAR_TBL_SET_UNSAFE_IHB_PINFO_PMF_KEY_GEN_VAR_TBL_SET_UNSAFE_TBL_DATA_PINFO_PMF_KEY_GEN_VAR_ID, 
    "pinfo_pmf_key_gen_var", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pinfo_pmf_key_gen_var:\n\r"
    "  uint32 pinfo_pmf_key_gen_var\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_pmf_key_gen_var_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pinfo_pmf_key_gen_var 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_PMF_KEY_GEN_VAR_TBL_SET_UNSAFE_IHB_PINFO_PMF_KEY_GEN_VAR_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PINFO_PMF_KEY_GEN_VAR_TBL_GET_UNSAFE_IHB_PINFO_PMF_KEY_GEN_VAR_TBL_GET_UNSAFE_ID, 
    "ihb_pinfo_pmf_key_gen_var_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_pinfo_pmf_key_gen_var_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PINFO_PMF_KEY_GEN_VAR_TBL_GET_UNSAFE_IHB_PINFO_PMF_KEY_GEN_VAR_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP_TBL_SET_UNSAFE_ID, 
    "ihb_program_selection_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map_tbl_set_unsafe map_tbl_ndx 0\n\r"
    "  entry_offset_ndx 0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP_TBL_SET_UNSAFE_MAP_TBL_NDX_ID, 
    "key_map_tbl_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  map_tbl_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  map_tbl_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map_tbl_set_unsafe map_tbl_ndx 0\n\r"
    "  entry_offset_ndx 0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP_TBL_SET_UNSAFE_TBL_DATA_PROGRAM_SELECTION_MAP_ID, 
    "program_selection_map", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program_selection_map:\n\r"
    "  uint32 program_selection_map\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map_tbl_set_unsafe map_tbl_ndx 0\n\r"
    "  entry_offset_ndx 0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP_TBL_GET_UNSAFE_ID, 
    "ihb_program_selection_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map_tbl_get_unsafe map_tbl_ndx 0\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP_TBL_GET_UNSAFE_MAP_TBL_NDX_ID, 
    "key_map_tbl_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  map_tbl_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  map_tbl_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map_tbl_get_unsafe map_tbl_ndx 0\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP0_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP0_TBL_SET_UNSAFE_ID, 
    "ihb_program_selection_map0_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map0_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP0_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP0_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP0_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP0_TBL_SET_UNSAFE_TBL_DATA_PROGRAM_SELECTION_MAP_ID, 
    "program_selection_map", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program_selection_map:\n\r"
    "  uint32 program_selection_map\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map0_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP0_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP0_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP0_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP0_TBL_GET_UNSAFE_ID, 
    "ihb_program_selection_map0_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map0_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP0_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP0_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP1_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP1_TBL_SET_UNSAFE_ID, 
    "ihb_program_selection_map1_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map1_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP1_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP1_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP1_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP1_TBL_SET_UNSAFE_TBL_DATA_PROGRAM_SELECTION_MAP_ID, 
    "program_selection_map", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program_selection_map:\n\r"
    "  uint32 program_selection_map\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map1_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP1_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP1_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP1_TBL_GET_UNSAFE_ID, 
    "ihb_program_selection_map1_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map1_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP1_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP1_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP2_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP2_TBL_SET_UNSAFE_ID, 
    "ihb_program_selection_map2_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map2_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP2_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP2_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP2_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP2_TBL_SET_UNSAFE_TBL_DATA_PROGRAM_SELECTION_MAP_ID, 
    "program_selection_map", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program_selection_map:\n\r"
    "  uint32 program_selection_map\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map2_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP2_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP2_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP2_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP2_TBL_GET_UNSAFE_ID, 
    "ihb_program_selection_map2_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map2_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP2_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP2_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP3_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP3_TBL_SET_UNSAFE_ID, 
    "ihb_program_selection_map3_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map3_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP3_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP3_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP3_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP3_TBL_SET_UNSAFE_TBL_DATA_PROGRAM_SELECTION_MAP_ID, 
    "program_selection_map", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program_selection_map:\n\r"
    "  uint32 program_selection_map\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map3_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP3_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP3_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP3_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP3_TBL_GET_UNSAFE_ID, 
    "ihb_program_selection_map3_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map3_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP3_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP3_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP4_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP4_TBL_SET_UNSAFE_ID, 
    "ihb_program_selection_map4_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map4_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP4_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP4_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP4_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP4_TBL_SET_UNSAFE_TBL_DATA_PROGRAM_SELECTION_MAP_ID, 
    "program_selection_map", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program_selection_map:\n\r"
    "  uint32 program_selection_map\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map4_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP4_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP4_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP4_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP4_TBL_GET_UNSAFE_ID, 
    "ihb_program_selection_map4_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map4_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP4_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP4_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP5_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP5_TBL_SET_UNSAFE_ID, 
    "ihb_program_selection_map5_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map5_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP5_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP5_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP5_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP5_TBL_SET_UNSAFE_TBL_DATA_PROGRAM_SELECTION_MAP_ID, 
    "program_selection_map", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program_selection_map:\n\r"
    "  uint32 program_selection_map\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map5_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP5_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP5_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP5_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP5_TBL_GET_UNSAFE_ID, 
    "ihb_program_selection_map5_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map5_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP5_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP5_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP6_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP6_TBL_SET_UNSAFE_ID, 
    "ihb_program_selection_map6_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map6_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP6_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP6_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP6_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP6_TBL_SET_UNSAFE_TBL_DATA_PROGRAM_SELECTION_MAP_ID, 
    "program_selection_map", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program_selection_map:\n\r"
    "  uint32 program_selection_map\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map6_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP6_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP6_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP6_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP6_TBL_GET_UNSAFE_ID, 
    "ihb_program_selection_map6_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map6_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP6_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP6_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP7_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP7_TBL_SET_UNSAFE_ID, 
    "ihb_program_selection_map7_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map7_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP7_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP7_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP7_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP7_TBL_SET_UNSAFE_TBL_DATA_PROGRAM_SELECTION_MAP_ID, 
    "program_selection_map", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program_selection_map:\n\r"
    "  uint32 program_selection_map\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map7_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 program_selection_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP7_TBL_SET_UNSAFE_IHB_PROGRAM_SELECTION_MAP7_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_SELECTION_MAP7_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP7_TBL_GET_UNSAFE_ID, 
    "ihb_program_selection_map7_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_selection_map7_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_SELECTION_MAP7_TBL_GET_UNSAFE_IHB_PROGRAM_SELECTION_MAP7_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_ID, 
    "ihb_program_vars_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_vars_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  copy_program_variable 0 system_header_profile 0 bytes_to_remove_offset 0\n\r"
    "  bytes_to_remove_header 0 tag_selection_profile_index 0\n\r"
    "  second_pass_key_profile_index 0 first_pass_key_profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_TBL_DATA_COPY_PROGRAM_VARIABLE_ID, 
    "copy_program_variable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.copy_program_variable:\n\r"
    "  uint32 copy_program_variable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_vars_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  copy_program_variable 0 system_header_profile 0 bytes_to_remove_offset 0\n\r"
    "  bytes_to_remove_header 0 tag_selection_profile_index 0\n\r"
    "  second_pass_key_profile_index 0 first_pass_key_profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_TBL_DATA_SYSTEM_HEADER_PROFILE_ID, 
    "system_header_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.system_header_profile:\n\r"
    "  uint32 system_header_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_vars_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  copy_program_variable 0 system_header_profile 0 bytes_to_remove_offset 0\n\r"
    "  bytes_to_remove_header 0 tag_selection_profile_index 0\n\r"
    "  second_pass_key_profile_index 0 first_pass_key_profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_TBL_DATA_BYTES_TO_REMOVE_OFFSET_ID, 
    "bytes_to_remove_offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bytes_to_remove_offset:\n\r"
    "  uint32 bytes_to_remove_offset\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_vars_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  copy_program_variable 0 system_header_profile 0 bytes_to_remove_offset 0\n\r"
    "  bytes_to_remove_header 0 tag_selection_profile_index 0\n\r"
    "  second_pass_key_profile_index 0 first_pass_key_profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_TBL_DATA_BYTES_TO_REMOVE_HEADER_ID, 
    "bytes_to_remove_header", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bytes_to_remove_header:\n\r"
    "  uint32 bytes_to_remove_header\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_vars_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  copy_program_variable 0 system_header_profile 0 bytes_to_remove_offset 0\n\r"
    "  bytes_to_remove_header 0 tag_selection_profile_index 0\n\r"
    "  second_pass_key_profile_index 0 first_pass_key_profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_TBL_DATA_TAG_SELECTION_PROFILE_INDEX_ID, 
    "tag_selection_profile_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tag_selection_profile_index:\n\r"
    "  uint32 tag_selection_profile_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_vars_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  copy_program_variable 0 system_header_profile 0 bytes_to_remove_offset 0\n\r"
    "  bytes_to_remove_header 0 tag_selection_profile_index 0\n\r"
    "  second_pass_key_profile_index 0 first_pass_key_profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_TBL_DATA_SECOND_PASS_KEY_PROFILE_INDEX_ID, 
    "second_pass_key_profile_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.second_pass_key_profile_index:\n\r"
    "  uint32 second_pass_key_profile_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_vars_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  copy_program_variable 0 system_header_profile 0 bytes_to_remove_offset 0\n\r"
    "  bytes_to_remove_header 0 tag_selection_profile_index 0\n\r"
    "  second_pass_key_profile_index 0 first_pass_key_profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_TBL_DATA_FIRST_PASS_KEY_PROFILE_INDEX_ID, 
    "first_pass_key_profile_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.first_pass_key_profile_index:\n\r"
    "  uint32 first_pass_key_profile_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_vars_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  copy_program_variable 0 system_header_profile 0 bytes_to_remove_offset 0\n\r"
    "  bytes_to_remove_header 0 tag_selection_profile_index 0\n\r"
    "  second_pass_key_profile_index 0 first_pass_key_profile_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_GET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_GET_UNSAFE_ID, 
    "ihb_program_vars_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_vars_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_VARS_TABLE_TBL_GET_UNSAFE_IHB_PROGRAM_VARS_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID, 
    "ihb_program_instruction_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_instruction_table_tbl_set_unsafe pmf_key_ndx 0\n\r"
    "  pmf_pgm_ndx 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_PMF_KEY_NDX_ID, 
    "pmf_key_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_key_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  pmf_key_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_instruction_table_tbl_set_unsafe pmf_key_ndx 0\n\r"
    "  pmf_pgm_ndx 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_PMF_PGM_NDX_ID, 
    "key_pmf_pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_pgm_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  pmf_pgm_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_instruction_table_tbl_set_unsafe pmf_key_ndx 0\n\r"
    "  pmf_pgm_ndx 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_CE_NDX_ID, 
    "key_ce_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ce_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  ce_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_instruction_table_tbl_set_unsafe pmf_key_ndx 0\n\r"
    "  pmf_pgm_ndx 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST_BIT_COUNT_ID, 
    "inst_bit_count", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst_bit_count:\n\r"
    "  uint32 inst_bit_count\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_instruction_table_tbl_set_unsafe pmf_key_ndx 0\n\r"
    "  pmf_pgm_ndx 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST_NIBLLE_FIELD_OFFSET_ID, 
    "inst_niblle_field_offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst_niblle_field_offset:\n\r"
    "  uint32 inst_niblle_field_offset\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_instruction_table_tbl_set_unsafe pmf_key_ndx 0\n\r"
    "  pmf_pgm_ndx 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST_HEADER_OFFSET_SELECT_ID, 
    "inst_header_offset_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst_header_offset_select:\n\r"
    "  uint32 inst_header_offset_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_instruction_table_tbl_set_unsafe pmf_key_ndx 0\n\r"
    "  pmf_pgm_ndx 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST_SOURCE_SELECT_ID, 
    "inst_source_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst_source_select:\n\r"
    "  uint32 inst_source_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_instruction_table_tbl_set_unsafe pmf_key_ndx 0\n\r"
    "  pmf_pgm_ndx 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST_VALID_ID, 
    "inst_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst_valid:\n\r"
    "  uint32 inst_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_instruction_table_tbl_set_unsafe pmf_key_ndx 0\n\r"
    "  pmf_pgm_ndx 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_ID, 
    "ihb_program_instruction_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_instruction_table_tbl_get_unsafe pmf_pgm_ndx 0\n\r"
    "  ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_PMF_PGM_NDX_ID, 
    "key_pmf_pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_pgm_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  pmf_pgm_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_instruction_table_tbl_get_unsafe pmf_pgm_ndx 0\n\r"
    "  ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_CE_NDX_ID, 
    "key_ce_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ce_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  ce_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_program_instruction_table_tbl_get_unsafe pmf_pgm_ndx 0\n\r"
    "  ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID, 
    "ihb_key_a_program_instruction_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_set_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_NDX_ID, 
    "key_tbl_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tbl_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_set_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST1_BIT_COUNT_ID, 
    "inst1_bit_count", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst1_bit_count:\n\r"
    "  uint32 inst1_bit_count\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_set_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST1_NIBLLE_FIELD_OFFSET_ID, 
    "inst1_niblle_field_offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst1_niblle_field_offset:\n\r"
    "  uint32 inst1_niblle_field_offset\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_set_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST1_HEADER_OFFSET_SELECT_ID, 
    "inst1_header_offset_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst1_header_offset_select:\n\r"
    "  uint32 inst1_header_offset_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_set_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST1_SOURCE_SELECT_ID, 
    "inst1_source_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst1_source_select:\n\r"
    "  uint32 inst1_source_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_set_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST1_VALID_ID, 
    "inst1_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst1_valid:\n\r"
    "  uint32 inst1_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_set_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST0_BIT_COUNT_ID, 
    "inst0_bit_count", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst0_bit_count:\n\r"
    "  uint32 inst0_bit_count\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_set_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST0_NIBLLE_FIELD_OFFSET_ID, 
    "inst0_niblle_field_offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst0_niblle_field_offset:\n\r"
    "  uint32 inst0_niblle_field_offset\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_set_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST0_HEADER_OFFSET_SELECT_ID, 
    "inst0_header_offset_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst0_header_offset_select:\n\r"
    "  uint32 inst0_header_offset_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_set_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST0_SOURCE_SELECT_ID, 
    "inst0_source_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst0_source_select:\n\r"
    "  uint32 inst0_source_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_set_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST0_VALID_ID, 
    "inst0_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst0_valid:\n\r"
    "  uint32 inst0_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_set_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_ID, 
    "ihb_key_a_program_instruction_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_get_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_TBL_NDX_ID, 
    "key_tbl_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tbl_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_a_program_instruction_table_tbl_get_unsafe tbl_ndx\n\r"
    "  0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_KEY_A_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID, 
    "ihb_key_b_program_instruction_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_NDX_ID, 
    "key_tbl_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tbl_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST1_BIT_COUNT_ID, 
    "inst1_bit_count", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst1_bit_count:\n\r"
    "  uint32 inst1_bit_count\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST1_NIBLLE_FIELD_OFFSET_ID, 
    "inst1_niblle_field_offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst1_niblle_field_offset:\n\r"
    "  uint32 inst1_niblle_field_offset\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST1_HEADER_OFFSET_SELECT_ID, 
    "inst1_header_offset_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst1_header_offset_select:\n\r"
    "  uint32 inst1_header_offset_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST1_SOURCE_SELECT_ID, 
    "inst1_source_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst1_source_select:\n\r"
    "  uint32 inst1_source_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST1_VALID_ID, 
    "inst1_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst1_valid:\n\r"
    "  uint32 inst1_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST0_BIT_COUNT_ID, 
    "inst0_bit_count", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst0_bit_count:\n\r"
    "  uint32 inst0_bit_count\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST0_NIBLLE_FIELD_OFFSET_ID, 
    "inst0_niblle_field_offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst0_niblle_field_offset:\n\r"
    "  uint32 inst0_niblle_field_offset\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST0_HEADER_OFFSET_SELECT_ID, 
    "inst0_header_offset_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst0_header_offset_select:\n\r"
    "  uint32 inst0_header_offset_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST0_SOURCE_SELECT_ID, 
    "inst0_source_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst0_source_select:\n\r"
    "  uint32 inst0_source_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_INST0_VALID_ID, 
    "inst0_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inst0_valid:\n\r"
    "  uint32 inst0_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0 inst1_bit_count 0 inst1_niblle_field_offset 0\n\r"
    "  inst1_header_offset_select 0 inst1_source_select 0 inst1_valid 0\n\r"
    "  inst0_bit_count 0 inst0_niblle_field_offset 0 inst0_header_offset_select 0\n\r"
    "  inst0_source_select 0 inst0_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_ID, 
    "ihb_key_b_program_instruction_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_TBL_NDX_ID, 
    "key_tbl_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tbl_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_key_b_program_instruction_table_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0 tbl_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_IHB_KEY_B_PROGRAM_INSTRUCTION_TABLE_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID, 
    "ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_TCAM_SEL4_MEMBER_ID, 
    "tcam_sel4_member", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tcam_sel4_member:\n\r"
    "  uint32 tcam_sel4_member\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_TCAM_SEL3_MEMBER_ID, 
    "tcam_sel3_member", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tcam_sel3_member:\n\r"
    "  uint32 tcam_sel3_member\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_TCAM_PD2_MEMBERS_ID, 
    "tcam_pd2_members", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tcam_pd2_members:\n\r"
    "  uint32 tcam_pd2_members\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_TCAM_PD1_MEMBERS_ID, 
    "tcam_pd1_members", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tcam_pd1_members:\n\r"
    "  uint32 tcam_pd1_members\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_D_DB_ID_OR_VALUE_ID, 
    "bank_d_db_id_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_d_db_id_or_value:\n\r"
    "  uint32 bank_d_db_id_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_D_DB_ID_AND_VALUE_ID, 
    "bank_d_db_id_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_d_db_id_and_value:\n\r"
    "  uint32 bank_d_db_id_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_D_KEY_SELECT_ID, 
    "bank_d_key_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_d_key_select:\n\r"
    "  uint32 bank_d_key_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_C_DB_ID_OR_VALUE_ID, 
    "bank_c_db_id_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_c_db_id_or_value:\n\r"
    "  uint32 bank_c_db_id_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_C_DB_ID_AND_VALUE_ID, 
    "bank_c_db_id_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_c_db_id_and_value:\n\r"
    "  uint32 bank_c_db_id_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_C_KEY_SELECT_ID, 
    "bank_c_key_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_c_key_select:\n\r"
    "  uint32 bank_c_key_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_B_DB_ID_OR_VALUE_ID, 
    "bank_b_db_id_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_b_db_id_or_value:\n\r"
    "  uint32 bank_b_db_id_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_B_DB_ID_AND_VALUE_ID, 
    "bank_b_db_id_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_b_db_id_and_value:\n\r"
    "  uint32 bank_b_db_id_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_B_KEY_SELECT_ID, 
    "bank_b_key_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_b_key_select:\n\r"
    "  uint32 bank_b_key_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_A_DB_ID_OR_VALUE_ID, 
    "bank_a_db_id_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_a_db_id_or_value:\n\r"
    "  uint32 bank_a_db_id_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_A_DB_ID_AND_VALUE_ID, 
    "bank_a_db_id_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_a_db_id_and_value:\n\r"
    "  uint32 bank_a_db_id_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_A_KEY_SELECT_ID, 
    "bank_a_key_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_a_key_select:\n\r"
    "  uint32 bank_a_key_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_GET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_GET_UNSAFE_ID, 
    "ihb_tcam_1st_pass_key_profile_resolved_data_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_1st_pass_key_profile_resolved_data_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_GET_UNSAFE_IHB_TCAM_1ST_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID, 
    "ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_TCAM_SEL4_MEMBER_ID, 
    "tcam_sel4_member", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tcam_sel4_member:\n\r"
    "  uint32 tcam_sel4_member\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_TCAM_SEL3_MEMBER_ID, 
    "tcam_sel3_member", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tcam_sel3_member:\n\r"
    "  uint32 tcam_sel3_member\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_TCAM_PD2_MEMBERS_ID, 
    "tcam_pd2_members", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tcam_pd2_members:\n\r"
    "  uint32 tcam_pd2_members\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_TCAM_PD1_MEMBERS_ID, 
    "tcam_pd1_members", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tcam_pd1_members:\n\r"
    "  uint32 tcam_pd1_members\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_D_DB_ID_OR_VALUE_ID, 
    "bank_d_db_id_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_d_db_id_or_value:\n\r"
    "  uint32 bank_d_db_id_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_D_DB_ID_AND_VALUE_ID, 
    "bank_d_db_id_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_d_db_id_and_value:\n\r"
    "  uint32 bank_d_db_id_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_D_KEY_SELECT_ID, 
    "bank_d_key_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_d_key_select:\n\r"
    "  uint32 bank_d_key_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_C_DB_ID_OR_VALUE_ID, 
    "bank_c_db_id_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_c_db_id_or_value:\n\r"
    "  uint32 bank_c_db_id_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_C_DB_ID_AND_VALUE_ID, 
    "bank_c_db_id_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_c_db_id_and_value:\n\r"
    "  uint32 bank_c_db_id_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_C_KEY_SELECT_ID, 
    "bank_c_key_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_c_key_select:\n\r"
    "  uint32 bank_c_key_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_B_DB_ID_OR_VALUE_ID, 
    "bank_b_db_id_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_b_db_id_or_value:\n\r"
    "  uint32 bank_b_db_id_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_B_DB_ID_AND_VALUE_ID, 
    "bank_b_db_id_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_b_db_id_and_value:\n\r"
    "  uint32 bank_b_db_id_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_B_KEY_SELECT_ID, 
    "bank_b_key_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_b_key_select:\n\r"
    "  uint32 bank_b_key_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_A_DB_ID_OR_VALUE_ID, 
    "bank_a_db_id_or_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_a_db_id_or_value:\n\r"
    "  uint32 bank_a_db_id_or_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_A_DB_ID_AND_VALUE_ID, 
    "bank_a_db_id_and_value", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_a_db_id_and_value:\n\r"
    "  uint32 bank_a_db_id_and_value\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_TBL_DATA_BANK_A_KEY_SELECT_ID, 
    "bank_a_key_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bank_a_key_select:\n\r"
    "  uint32 bank_a_key_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 tcam_sel4_member 0 tcam_sel3_member 0 tcam_pd2_members 0\n\r"
    "  tcam_pd1_members 0 bank_d_db_id_or_value 0 bank_d_db_id_and_value 0\n\r"
    "  bank_d_key_select 0 bank_c_db_id_or_value 0 bank_c_db_id_and_value 0\n\r"
    "  bank_c_key_select 0 bank_b_db_id_or_value 0 bank_b_db_id_and_value 0\n\r"
    "  bank_b_key_select 0 bank_a_db_id_or_value 0 bank_a_db_id_and_value 0\n\r"
    "  bank_a_key_select 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_GET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_GET_UNSAFE_ID, 
    "ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_2nd_pass_key_profile_resolved_data_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_GET_UNSAFE_IHB_TCAM_2ND_PASS_KEY_PROFILE_RESOLVED_DATA_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_DIRECT_ACTION_TABLE_TBL_SET_UNSAFE_IHB_DIRECT_ACTION_TABLE_TBL_SET_UNSAFE_ID, 
    "ihb_direct_action_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_direct_action_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  direct_action_table 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_DIRECT_ACTION_TABLE_TBL_SET_UNSAFE_IHB_DIRECT_ACTION_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_DIRECT_ACTION_TABLE_TBL_SET_UNSAFE_IHB_DIRECT_ACTION_TABLE_TBL_SET_UNSAFE_TBL_DATA_DIRECT_ACTION_TABLE_ID, 
    "direct_action_table", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.direct_action_table:\n\r"
    "  uint32 direct_action_table\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_direct_action_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  direct_action_table 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_DIRECT_ACTION_TABLE_TBL_SET_UNSAFE_IHB_DIRECT_ACTION_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_DIRECT_ACTION_TABLE_TBL_GET_UNSAFE_IHB_DIRECT_ACTION_TABLE_TBL_GET_UNSAFE_ID, 
    "ihb_direct_action_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_direct_action_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_DIRECT_ACTION_TABLE_TBL_GET_UNSAFE_IHB_DIRECT_ACTION_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID, 
    "ihb_tcam_bank_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_bank_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  tcam_bank_index 0 tcam_bank 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_BANK_ID, 
    "bank", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  bank:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_OFFSET_ID, 
    "offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  offset:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_VBE_ID, 
    "vbe", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  vbe:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_MSKDATAE_ID, 
    "mskdatae", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mskdatae:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_WR_ID, 
    "wr", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  wr:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_RD_ID, 
    "rd", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  rd:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_CMP_ID, 
    "cmp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  cmp:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_FLUSH_ID, 
    "flush", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  flush:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_VAL_ID, 
    "val", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  val:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_VBI_ID, 
    "vbi", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  vbi:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_CFG_ID, 
    "cfg", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  cfg:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_HQSEL_ID, 
    "hqsel", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  hqsel:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_MASK_ID, 
    "mask", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mask:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_SET_UNSAFE_IHB_TCAM_BANK_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 
  { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_GET_UNSAFE_IHB_TCAM_BANK_TBL_GET_UNSAFE_ID, 
    "ihb_tcam_bank_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_bank_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_GET_UNSAFE_IHB_TCAM_BANK_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_GET_UNSAFE_IHB_TCAM_BANK_TBL_GET_UNSAFE_BANK_ID, 
    "bank", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  bank:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_GET_UNSAFE_IHB_TCAM_BANK_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 
    { 
    PARAM_PB_PP_IHB_TCAM_BANK_TBL_GET_UNSAFE_IHB_TCAM_BANK_TBL_GET_UNSAFE_OFFSET_ID, 
    "offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  offset:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  "
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_BANK_TBL_GET_UNSAFE_IHB_TCAM_BANK_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 

  { 
    PARAM_PB_PP_IHB_TCAM_ACTION_TBL_SET_UNSAFE_IHB_TCAM_ACTION_TBL_SET_UNSAFE_ID, 
    "ihb_tcam_action_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_action_tbl_set_unsafe entry_offset_ndx 0 high 0\n\r"
    "  low 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_ACTION_TBL_SET_UNSAFE_IHB_TCAM_ACTION_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_ACTION_TBL_SET_UNSAFE_IHB_TCAM_ACTION_TBL_SET_UNSAFE_TBL_DATA_HIGH_ID, 
    "high", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.high:\n\r"
    "  uint32 high\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_action_tbl_set_unsafe entry_offset_ndx 0 high 0\n\r"
    "  low 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_ACTION_TBL_SET_UNSAFE_IHB_TCAM_ACTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_ACTION_TBL_SET_UNSAFE_IHB_TCAM_ACTION_TBL_SET_UNSAFE_TBL_DATA_LOW_ID, 
    "low", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.low:\n\r"
    "  uint32 low\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_action_tbl_set_unsafe entry_offset_ndx 0 high 0\n\r"
    "  low 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_ACTION_TBL_SET_UNSAFE_IHB_TCAM_ACTION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IHB_TCAM_ACTION_TBL_GET_UNSAFE_IHB_TCAM_ACTION_TBL_GET_UNSAFE_ID, 
    "ihb_tcam_action_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc ihb_tcam_action_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_IHB_TCAM_ACTION_TBL_GET_UNSAFE_IHB_TCAM_ACTION_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID, 
    "egq_ppct_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_ad_COUNT_OUT_PORT_FLAG_ID, 
    "ad_count_out_port_flag", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ad_count_out_port_flag:\n\r"
    "  uint32 ad_count_out_port_flag\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_CNM_INTRCPT_EN_ID, 
    "cnm_intrcpt_en", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cnm_intrcpt_en:\n\r"
    "  uint32 cnm_intrcpt_en\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_CNM_INTRCPT_FC_VEC_INDEX_ID_5_0, 
    "cnm_intrcpt_fc_vec_index_5_0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cnm_intrcpt_fc_vec_index:\n\r"
    "  uint32 cnm_intrcpt_fc_vec_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_CNM_INTRCPT_FC_VEC_INDEX_ID_12_6, 
    "cnm_intrcpt_fc_vec_index_12_6", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cnm_intrcpt_fc_vec_index:\n\r"
    "  uint32 cnm_intrcpt_fc_vec_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_CNM_INTRCPT_FC_VEC_INDEX_ID_13_13, 
    "cnm_intrcpt_fc_vec_index_13_13", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cnm_intrcpt_fc_vec_index:\n\r"
    "  uint32 cnm_intrcpt_fc_vec_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_PORT_TYPE_ID, 
    "port_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.port_type:\n\r"
    "  uint32 port_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_PEER_TM_DOMAIN_ID_ID, 
    "peer_tm_domain_id", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.peer_tm_domain_id:\n\r"
    "  uint32 peer_tm_domain_id\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_IS_STACKING_PORT_ID, 
    "is_stacking_port", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.is_stacking_port:\n\r"
    "  uint32 is_stacking_port\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_LB_KEY_MIN_ID, 
    "lb_key_min", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lb_key_min:\n\r"
    "  uint32 lb_key_min\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_LB_KEY_MAX_ID, 
    "lb_key_max", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lb_key_max:\n\r"
    "  uint32 lb_key_max\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_DST_SYSTEM_PORT_ID__ID, 
    "dst_system_port_id", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.dst_system_port_id_:\n\r"
    "  uint32 dst_system_port_id_\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_MTU_ID, 
    "mtu", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mtu:\n\r"
    "  uint32 mtu\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_TBL_DATA_OUT_PP_PORT_ID, 
    "out_pp_port", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.out_pp_port:\n\r"
    "  uint32 out_pp_port\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ad_count_out_port_flag 0 cnm_intrcpt_en 0 cnm_intrcpt_fc_vec_index 0\n\r"
    "  port_type 0 peer_tm_domain_id 0 is_stacking_port 0 lb_key_min 0 lb_key_max 0\n\r"
    "  dst_system_port_id_ 0 mtu 0 out_pp_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_SET_UNSAFE_EGQ_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PPCT_TBL_GET_UNSAFE_EGQ_PPCT_TBL_GET_UNSAFE_ID, 
    "egq_ppct_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ppct_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PPCT_TBL_GET_UNSAFE_EGQ_PPCT_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID, 
    "egq_pp_ppct_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_PORT_IS_PBP_ID, 
    "port_is_pbp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.port_is_pbp:\n\r"
    "  uint32 port_is_pbp\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_DISABLE_LEARNING_ID, 
    "disable_learning", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.disable_learning:\n\r"
    "  uint32 disable_learning\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_ACL_DATA_ID, 
    "acl_data", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.acl_data:\n\r"
    "  uint32 acl_data\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_ACL_PROFILE_ID, 
    "acl_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.acl_profile:\n\r"
    "  uint32 acl_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_DISABLE_FILTERING_ID, 
    "disable_filtering", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.disable_filtering:\n\r"
    "  uint32 disable_filtering\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_EGRESS_VSI_FILTERING_ENABLE_ID, 
    "egress_vsi_filtering_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.egress_vsi_filtering_enable:\n\r"
    "  uint32 egress_vsi_filtering_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_ACCEPTABLE_FRAME_TYPE_PROFILE_ID, 
    "acceptable_frame_type_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.acceptable_frame_type_profile:\n\r"
    "  uint32 acceptable_frame_type_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_ENABLE_SRC_EQUAL_DST_FILTER_ID, 
    "enable_src_equal_dst_filter", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.enable_src_equal_dst_filter:\n\r"
    "  uint32 enable_src_equal_dst_filter\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_UNKNOWN_UC_DA_ACTION_FILTER_ID, 
    "unknown_uc_da_action_filter", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.unknown_uc_da_action_filter:\n\r"
    "  uint32 unknown_uc_da_action_filter\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_UNKNOWN_MC_DA_ACTION_FILTER_ID, 
    "unknown_mc_da_action_filter", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.unknown_mc_da_action_filter:\n\r"
    "  uint32 unknown_mc_da_action_filter\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_UNKNOWN_BC_DA_ACTION_FILTER_ID, 
    "unknown_bc_da_action_filter", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.unknown_bc_da_action_filter:\n\r"
    "  uint32 unknown_bc_da_action_filter\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_EEI_TYPE_ID, 
    "eei_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.eei_type:\n\r"
    "  uint32 eei_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_ORIENTATION_IS_HUB_ID, 
    "orientation_is_hub", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.orientation_is_hub:\n\r"
    "  uint32 orientation_is_hub\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_TBL_DATA_PVLAN_PORT_TYPE_ID, 
    "pvlan_port_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pvlan_port_type:\n\r"
    "  uint32 pvlan_port_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_set_unsafe entry_offset_ndx 0 port_is_pbp 0\n\r"
    "  disable_learning 0 acl_data 0 acl_profile 0 disable_filtering 0\n\r"
    "  egress_vsi_filtering_enable 0 acceptable_frame_type_profile 0\n\r"
    "  enable_src_equal_dst_filter 0 unknown_uc_da_action_filter 0\n\r"
    "  unknown_mc_da_action_filter 0 unknown_bc_da_action_filter 0 eei_type 0\n\r"
    "  orientation_is_hub 0 pvlan_port_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_SET_UNSAFE_EGQ_PP_PPCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_PP_PPCT_TBL_GET_UNSAFE_EGQ_PP_PPCT_TBL_GET_UNSAFE_ID, 
    "egq_pp_ppct_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_pp_ppct_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_PP_PPCT_TBL_GET_UNSAFE_EGQ_PP_PPCT_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID, 
    "egq_ingress_vlan_edit_command_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_INNER_TPID_NDX_ID, 
    "inner_tpid_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inner_tpid_ndx:\n\r"
    "  uint32 inner_tpid_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_OUTER_TPID_NDX_ID, 
    "outer_tpid_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.outer_tpid_ndx:\n\r"
    "  uint32 outer_tpid_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_EDIT_COMMAND_BYTES_TO_REMOVE_ID, 
    "edit_command_bytes_to_remove", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.edit_command_bytes_to_remove:\n\r"
    "  uint32 edit_command_bytes_to_remove\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_EDIT_COMMAND_INNER_PCP_DEI_SOURCE_ID, 
    "edit_command_inner_pcp_dei_source", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.edit_command_inner_pcp_dei_source:\n\r"
    "  uint32 edit_command_inner_pcp_dei_source\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_EDIT_COMMAND_INNER_VID_SOURCE_ID, 
    "edit_command_inner_vid_source", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.edit_command_inner_vid_source:\n\r"
    "  uint32 edit_command_inner_vid_source\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_EDIT_COMMAND_OUTER_PCP_DEI_SOURCE_ID, 
    "edit_command_outer_pcp_dei_source", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.edit_command_outer_pcp_dei_source:\n\r"
    "  uint32 edit_command_outer_pcp_dei_source\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_EDIT_COMMAND_OUTER_VID_SOURCE_ID, 
    "edit_command_outer_vid_source", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.edit_command_outer_vid_source:\n\r"
    "  uint32 edit_command_outer_vid_source\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_TPID_PROFILE_LINK_ID, 
    "tpid_profile_link", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tpid_profile_link:\n\r"
    "  uint32 tpid_profile_link\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_GET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_GET_UNSAFE_ID, 
    "egq_ingress_vlan_edit_command_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ingress_vlan_edit_command_map_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_GET_UNSAFE_EGQ_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_VSI_MEMBERSHIP_TBL_SET_UNSAFE_EGQ_VSI_MEMBERSHIP_TBL_SET_UNSAFE_ID, 
    "egq_vsi_membership_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_vsi_membership_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  vsi_membership_index 0 vsi_membership 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_VSI_MEMBERSHIP_TBL_SET_UNSAFE_EGQ_VSI_MEMBERSHIP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_VSI_MEMBERSHIP_TBL_SET_UNSAFE_EGQ_VSI_MEMBERSHIP_TBL_SET_UNSAFE_TBL_DATA_VSI_MEMBERSHIP_INDEX_ID, 
    "vsi_membership_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  vsi_membership_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_vsi_membership_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  vsi_membership_index 0 vsi_membership 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_VSI_MEMBERSHIP_TBL_SET_UNSAFE_EGQ_VSI_MEMBERSHIP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_VSI_MEMBERSHIP_TBL_SET_UNSAFE_EGQ_VSI_MEMBERSHIP_TBL_SET_UNSAFE_TBL_DATA_VSI_MEMBERSHIP_ID, 
    "vsi_membership", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsi_membership[ prm_vsi_membership_index]:\n\r"
    "  uint32 vsi_membership[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_vsi_membership_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  vsi_membership_index 0 vsi_membership 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_VSI_MEMBERSHIP_TBL_SET_UNSAFE_EGQ_VSI_MEMBERSHIP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_VSI_MEMBERSHIP_TBL_GET_UNSAFE_EGQ_VSI_MEMBERSHIP_TBL_GET_UNSAFE_ID, 
    "egq_vsi_membership_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_vsi_membership_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_VSI_MEMBERSHIP_TBL_GET_UNSAFE_EGQ_VSI_MEMBERSHIP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_TTL_SCOPE_TBL_SET_UNSAFE_EGQ_TTL_SCOPE_TBL_SET_UNSAFE_ID, 
    "egq_ttl_scope_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ttl_scope_tbl_set_unsafe entry_offset_ndx 0 ttl_scope 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_TTL_SCOPE_TBL_SET_UNSAFE_EGQ_TTL_SCOPE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_TTL_SCOPE_TBL_SET_UNSAFE_EGQ_TTL_SCOPE_TBL_SET_UNSAFE_TBL_DATA_TTL_SCOPE_ID, 
    "ttl_scope", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ttl_scope:\n\r"
    "  uint32 ttl_scope\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ttl_scope_tbl_set_unsafe entry_offset_ndx 0 ttl_scope 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_TTL_SCOPE_TBL_SET_UNSAFE_EGQ_TTL_SCOPE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_TTL_SCOPE_TBL_GET_UNSAFE_EGQ_TTL_SCOPE_TBL_GET_UNSAFE_ID, 
    "egq_ttl_scope_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_ttl_scope_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_TTL_SCOPE_TBL_GET_UNSAFE_EGQ_TTL_SCOPE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_AUX_TABLE_TBL_SET_UNSAFE_EGQ_AUX_TABLE_TBL_SET_UNSAFE_ID, 
    "egq_aux_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_aux_table_tbl_set_unsafe entry_offset_ndx 0 auxtable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_AUX_TABLE_TBL_SET_UNSAFE_EGQ_AUX_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_AUX_TABLE_TBL_SET_UNSAFE_EGQ_AUX_TABLE_TBL_SET_UNSAFE_TBL_DATA_AUXTABLE_ID, 
    "auxtable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.auxtable:\n\r"
    "  uint32 auxtable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_aux_table_tbl_set_unsafe entry_offset_ndx 0 auxtable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_AUX_TABLE_TBL_SET_UNSAFE_EGQ_AUX_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_AUX_TABLE_TBL_GET_UNSAFE_EGQ_AUX_TABLE_TBL_GET_UNSAFE_ID, 
    "egq_aux_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_aux_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_AUX_TABLE_TBL_GET_UNSAFE_EGQ_AUX_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_EEP_ORIENTATION_TBL_SET_UNSAFE_EGQ_EEP_ORIENTATION_TBL_SET_UNSAFE_ID, 
    "egq_eep_orientation_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_eep_orientation_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  eep_orientation 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_EEP_ORIENTATION_TBL_SET_UNSAFE_EGQ_EEP_ORIENTATION_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_EEP_ORIENTATION_TBL_SET_UNSAFE_EGQ_EEP_ORIENTATION_TBL_SET_UNSAFE_TBL_DATA_EEP_ORIENTATION_ID, 
    "eep_orientation", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.eep_orientation:\n\r"
    "  uint32 eep_orientation\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_eep_orientation_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  eep_orientation 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_EEP_ORIENTATION_TBL_SET_UNSAFE_EGQ_EEP_ORIENTATION_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_EEP_ORIENTATION_TBL_GET_UNSAFE_EGQ_EEP_ORIENTATION_TBL_GET_UNSAFE_ID, 
    "egq_eep_orientation_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_eep_orientation_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_EEP_ORIENTATION_TBL_GET_UNSAFE_EGQ_EEP_ORIENTATION_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_ID, 
    "egq_action_profile_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_action_profile_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  cud_valid 0 cud 0 dp_valid 0 dp 0 tc_valid 0 tc 0 discard 0 otm 0 otm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_TBL_DATA_CUD_VALID_ID, 
    "cud_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cud_valid:\n\r"
    "  uint32 cud_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_action_profile_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  cud_valid 0 cud 0 dp_valid 0 dp 0 tc_valid 0 tc 0 discard 0 otm 0 otm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_TBL_DATA_CUD_ID, 
    "cud", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cud:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_action_profile_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  cud_valid 0 cud 0 dp_valid 0 dp 0 tc_valid 0 tc 0 discard 0 otm 0 otm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_TBL_DATA_DP_VALID_ID, 
    "dp_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.dp_valid:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_action_profile_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  cud_valid 0 cud 0 dp_valid 0 dp 0 tc_valid 0 tc 0 discard 0 otm 0 otm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_TBL_DATA_DP_ID, 
    "dp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.dp:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_action_profile_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  cud_valid 0 cud 0 dp_valid 0 dp 0 tc_valid 0 tc 0 discard 0 otm 0 otm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_TBL_DATA_TC_VALID_ID, 
    "tc_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc_valid:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_action_profile_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  cud_valid 0 cud 0 dp_valid 0 dp 0 tc_valid 0 tc 0 discard 0 otm 0 otm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_TBL_DATA_TC_ID, 
    "tc", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_action_profile_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  cud_valid 0 cud 0 dp_valid 0 dp 0 tc_valid 0 tc 0 discard 0 otm 0 otm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_TBL_DATA_DISCARD_ID, 
    "discard", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.discard:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_action_profile_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  cud_valid 0 cud 0 dp_valid 0 dp 0 tc_valid 0 tc 0 discard 0 otm 0 otm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_TBL_DATA_OTM_ID, 
    "otm", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.otm:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_action_profile_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  cud_valid 0 cud 0 dp_valid 0 dp 0 tc_valid 0 tc 0 discard 0 otm 0 otm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_TBL_DATA_OTM_VALID_ID, 
    "otm_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.otm_valid:\n\r"
    "  uint32 otm_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_action_profile_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  cud_valid 0 cud 0 dp_valid 0 dp 0 tc_valid 0 tc 0 discard 0 otm 0 otm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_GET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_GET_UNSAFE_ID, 
    "egq_action_profile_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc egq_action_profile_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EGQ_ACTION_PROFILE_TABLE_TBL_GET_UNSAFE_EGQ_ACTION_PROFILE_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_DB_BANK1_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK1_TBL_SET_UNSAFE_ID, 
    "epni_encapsulation_db_bank1_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_encapsulation_db_bank1_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 entry_index 0 entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_DB_BANK1_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK1_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_DB_BANK1_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK1_TBL_SET_UNSAFE_TBL_DATA_ENTRY_INDEX_ID, 
    "entry_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_encapsulation_db_bank1_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 entry_index 0 entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_DB_BANK1_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_DB_BANK1_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK1_TBL_SET_UNSAFE_TBL_DATA_ENTRY_ID, 
    "entry", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.entry[ prm_entry_index]:\n\r"
    "  uint32 entry[3]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_encapsulation_db_bank1_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 entry_index 0 entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_DB_BANK1_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK1_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_DB_BANK1_TBL_GET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK1_TBL_GET_UNSAFE_ID, 
    "epni_encapsulation_db_bank1_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_encapsulation_db_bank1_tbl_get_unsafe entry_offset_ndx\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_DB_BANK1_TBL_GET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK1_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID, 
    "epni_eep_mpls_tunnel_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_mpls_tunnel_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 mpls1_command 0 mpls1_label 0 tpid_profile 0 has_cw 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_MPLS1_COMMAND_ID, 
    "mpls1_command", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mpls1_command:\n\r"
    "  uint32 mpls1_command\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_mpls_tunnel_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 mpls1_command 0 mpls1_label 0 tpid_profile 0 has_cw 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_MPLS1_LABEL_ID, 
    "mpls1_label", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mpls1_label:\n\r"
    "  uint32 mpls1_label\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_mpls_tunnel_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 mpls1_command 0 mpls1_label 0 tpid_profile 0 has_cw 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_TPID_PROFILE_ID, 
    "tpid_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tpid_profile:\n\r"
    "  uint32 tpid_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_mpls_tunnel_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 mpls1_command 0 mpls1_label 0 tpid_profile 0 has_cw 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_HAS_CW_ID, 
    "has_cw", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.has_cw:\n\r"
    "  uint32 has_cw\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_mpls_tunnel_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 mpls1_command 0 mpls1_label 0 tpid_profile 0 has_cw 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_NEXT_VSI_LSB_ID, 
    "next_vsi_lsb", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.next_vsi_lsb:\n\r"
    "  uint32 next_vsi_lsb\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_mpls_tunnel_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 mpls1_command 0 mpls1_label 0 tpid_profile 0 has_cw 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_NEXT_EEP_ID, 
    "next_eep", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.next_eep:\n\r"
    "  uint32 next_eep\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_mpls_tunnel_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 mpls1_command 0 mpls1_label 0 tpid_profile 0 has_cw 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_GET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_GET_UNSAFE_ID, 
    "epni_eep_mpls_tunnel_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_mpls_tunnel_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_GET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_MPLS_TUNNEL_FORMAT_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID, 
    "epni_eep_ip_tunnel_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_ip_tunnel_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 ipv4_dst 0 ipv4_src_index 0 ipv4_ttl_index 0 ipv4_tos_index 0 gre_enable 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_IPV4_DST_ID, 
    "ipv4_dst", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_dst:\n\r"
    "  uint32 ipv4_dst\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_ip_tunnel_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 ipv4_dst 0 ipv4_src_index 0 ipv4_ttl_index 0 ipv4_tos_index 0 gre_enable 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_IPV4_SRC_INDEX_ID, 
    "ipv4_src_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_src_index:\n\r"
    "  uint32 ipv4_src_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_ip_tunnel_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 ipv4_dst 0 ipv4_src_index 0 ipv4_ttl_index 0 ipv4_tos_index 0 gre_enable 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_IPV4_TTL_INDEX_ID, 
    "ipv4_ttl_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_ttl_index:\n\r"
    "  uint32 ipv4_ttl_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_ip_tunnel_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 ipv4_dst 0 ipv4_src_index 0 ipv4_ttl_index 0 ipv4_tos_index 0 gre_enable 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_IPV4_TOS_INDEX_ID, 
    "ipv4_tos_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ipv4_tos_index:\n\r"
    "  uint32 ipv4_tos_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_ip_tunnel_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 ipv4_dst 0 ipv4_src_index 0 ipv4_ttl_index 0 ipv4_tos_index 0 gre_enable 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_GRE_ENABLE_ID, 
    "gre_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.gre_enable:\n\r"
    "  uint32 gre_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_ip_tunnel_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 ipv4_dst 0 ipv4_src_index 0 ipv4_ttl_index 0 ipv4_tos_index 0 gre_enable 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_NEXT_VSI_LSB_ID, 
    "next_vsi_lsb", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.next_vsi_lsb:\n\r"
    "  uint32 next_vsi_lsb\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_ip_tunnel_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 ipv4_dst 0 ipv4_src_index 0 ipv4_ttl_index 0 ipv4_tos_index 0 gre_enable 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_TBL_DATA_NEXT_EEP_ID, 
    "next_eep", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.next_eep:\n\r"
    "  uint32 next_eep\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_ip_tunnel_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 ipv4_dst 0 ipv4_src_index 0 ipv4_ttl_index 0 ipv4_tos_index 0 gre_enable 0\n\r"
    "  next_vsi_lsb 0 next_eep 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_GET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_GET_UNSAFE_ID, 
    "epni_eep_ip_tunnel_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_egress_encapsulation_entry_ip_tunnel_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_GET_UNSAFE_EPNI_EGRESS_ENCAPSULATION_ENTRY_IP_TUNNEL_FORMAT_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_ID, 
    "epni_encapsulation_memory_link_layer_entry_format_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_encapsulation_memory_link_layer_entry_format_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 dest_mac_index 0 dest_mac 0 vid_valid 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_TBL_DATA_DEST_MAC_INDEX_ID, 
    "dest_mac_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  dest_mac_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_encapsulation_memory_link_layer_entry_format_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 dest_mac_index 0 dest_mac 0 vid_valid 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_TBL_DATA_DEST_MAC_ID, 
    "dest_mac", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.dest_mac[ prm_dest_mac_index]:\n\r"
    "  uint32 dest_mac[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_encapsulation_memory_link_layer_entry_format_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 dest_mac_index 0 dest_mac 0 vid_valid 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_TBL_DATA_VID_VALID_ID, 
    "vid_valid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vid_valid:\n\r"
    "  uint32 vid_valid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_encapsulation_memory_link_layer_entry_format_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 dest_mac_index 0 dest_mac 0 vid_valid 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_TBL_DATA_VID_ID, 
    "vid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vid:\n\r"
    "  uint32 vid\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_encapsulation_memory_link_layer_entry_format_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 dest_mac_index 0 dest_mac 0 vid_valid 0 vid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_GET_UNSAFE_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_GET_UNSAFE_ID, 
    "epni_encapsulation_memory_link_layer_entry_format_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc\n\r"
    "  epni_encapsulation_memory_link_layer_entry_format_tbl_get_unsafe entry_offset_ndx\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_GET_UNSAFE_EPNI_ENCAPSULATION_MEMORY_LINK_LAYER_ENTRY_FORMAT_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_DB_BANK2_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK2_TBL_SET_UNSAFE_ID, 
    "epni_encapsulation_db_bank2_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_encapsulation_db_bank2_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 entry_index 0 entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_DB_BANK2_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK2_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_DB_BANK2_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK2_TBL_SET_UNSAFE_TBL_DATA_ENTRY_INDEX_ID, 
    "entry_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_encapsulation_db_bank2_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 entry_index 0 entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_DB_BANK2_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK2_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_DB_BANK2_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK2_TBL_SET_UNSAFE_TBL_DATA_ENTRY_ID, 
    "entry", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.entry[ prm_entry_index]:\n\r"
    "  uint32 entry[3]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_encapsulation_db_bank2_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 entry_index 0 entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_DB_BANK2_TBL_SET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK2_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ENCAPSULATION_DB_BANK2_TBL_GET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK2_TBL_GET_UNSAFE_ID, 
    "epni_encapsulation_db_bank2_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_encapsulation_db_bank2_tbl_get_unsafe entry_offset_ndx\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ENCAPSULATION_DB_BANK2_TBL_GET_UNSAFE_EPNI_ENCAPSULATION_DB_BANK2_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_TX_TAG_TABLE_TBL_SET_UNSAFE_EPNI_TX_TAG_TABLE_TBL_SET_UNSAFE_ID, 
    "epni_tx_tag_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_tx_tag_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  entry_index 0 entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_TX_TAG_TABLE_TBL_SET_UNSAFE_EPNI_TX_TAG_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_TX_TAG_TABLE_TBL_SET_UNSAFE_EPNI_TX_TAG_TABLE_TBL_SET_UNSAFE_TBL_DATA_ENTRY_INDEX_ID, 
    "entry_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_tx_tag_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  entry_index 0 entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_TX_TAG_TABLE_TBL_SET_UNSAFE_EPNI_TX_TAG_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_TX_TAG_TABLE_TBL_SET_UNSAFE_EPNI_TX_TAG_TABLE_TBL_SET_UNSAFE_TBL_DATA_ENTRY_ID, 
    "entry", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.entry[ prm_entry_index]:\n\r"
    "  uint32 entry[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_tx_tag_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  entry_index 0 entry 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_TX_TAG_TABLE_TBL_SET_UNSAFE_EPNI_TX_TAG_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_TX_TAG_TABLE_TBL_GET_UNSAFE_EPNI_TX_TAG_TABLE_TBL_GET_UNSAFE_ID, 
    "epni_tx_tag_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_tx_tag_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_TX_TAG_TABLE_TBL_GET_UNSAFE_EPNI_TX_TAG_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_STP_TBL_SET_UNSAFE_EPNI_STP_TBL_SET_UNSAFE_ID, 
    "epni_stp_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_stp_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  egress_stp_state_index 0 egress_stp_state 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_STP_TBL_SET_UNSAFE_EPNI_STP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_STP_TBL_SET_UNSAFE_EPNI_STP_TBL_SET_UNSAFE_TBL_DATA_EGRESS_STP_STATE_INDEX_ID, 
    "egress_stp_state_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  egress_stp_state_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_stp_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  egress_stp_state_index 0 egress_stp_state 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_STP_TBL_SET_UNSAFE_EPNI_STP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_STP_TBL_SET_UNSAFE_EPNI_STP_TBL_SET_UNSAFE_TBL_DATA_EGRESS_STP_STATE_ID, 
    "egress_stp_state", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.egress_stp_state[ prm_egress_stp_state_index]:\n\r"
    "  uint32 egress_stp_state[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_stp_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  egress_stp_state_index 0 egress_stp_state 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_STP_TBL_SET_UNSAFE_EPNI_STP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_STP_TBL_GET_UNSAFE_EPNI_STP_TBL_GET_UNSAFE_ID, 
    "epni_stp_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_stp_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_STP_TBL_GET_UNSAFE_EPNI_STP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_ID, 
    "epni_small_em_result_memory_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_small_em_result_memory_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 vlan_edit_profile 0 vid_index 0 vid 0 pcp_dei_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_TBL_DATA_VLAN_EDIT_PROFILE_ID, 
    "vlan_edit_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_edit_profile:\n\r"
    "  uint32 vlan_edit_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_small_em_result_memory_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 vlan_edit_profile 0 vid_index 0 vid 0 pcp_dei_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_TBL_DATA_VID_INDEX_ID, 
    "vid_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  vid_index:\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_small_em_result_memory_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 vlan_edit_profile 0 vid_index 0 vid 0 pcp_dei_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_TBL_DATA_VID_ID, 
    "vid", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vid[ prm_vid_index]:\n\r"
    "  uint32 vid[2]\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_small_em_result_memory_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 vlan_edit_profile 0 vid_index 0 vid 0 pcp_dei_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_TBL_DATA_PCP_DEI_PROFILE_ID, 
    "pcp_dei_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pcp_dei_profile:\n\r"
    "  uint32 pcp_dei_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_small_em_result_memory_tbl_set_unsafe entry_offset_ndx\n\r"
    "  0 vlan_edit_profile 0 vid_index 0 vid 0 pcp_dei_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_EPNI_SMALL_EM_RESULT_MEMORY_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_SMALL_EM_RESULT_MEMORY_TBL_GET_UNSAFE_EPNI_SMALL_EM_RESULT_MEMORY_TBL_GET_UNSAFE_ID, 
    "epni_small_em_result_memory_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_small_em_result_memory_tbl_get_unsafe entry_offset_ndx\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_SMALL_EM_RESULT_MEMORY_TBL_GET_UNSAFE_EPNI_SMALL_EM_RESULT_MEMORY_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PCP_DEI_TABLE_TBL_SET_UNSAFE_EPNI_PCP_DEI_TABLE_TBL_SET_UNSAFE_ID, 
    "epni_pcp_dei_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pcp_dei_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pcp_enc_table 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PCP_DEI_TABLE_TBL_SET_UNSAFE_EPNI_PCP_DEI_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PCP_DEI_TABLE_TBL_SET_UNSAFE_EPNI_PCP_DEI_TABLE_TBL_SET_UNSAFE_TBL_DATA_PCP_ENC_TABLE_ID, 
    "pcp_enc_table", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pcp_enc_table:\n\r"
    "  uint32 pcp_enc_table\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pcp_dei_table_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  pcp_enc_table 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PCP_DEI_TABLE_TBL_SET_UNSAFE_EPNI_PCP_DEI_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PCP_DEI_TABLE_TBL_GET_UNSAFE_EPNI_PCP_DEI_TABLE_TBL_GET_UNSAFE_ID, 
    "epni_pcp_dei_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pcp_dei_table_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PCP_DEI_TABLE_TBL_GET_UNSAFE_EPNI_PCP_DEI_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID, 
    "epni_pp_pct_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_COUNTER_COMPENSATION_ID, 
    "counter_compensation", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.counter_compensation:\n\r"
    "  uint32 counter_compensation\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_COUNT_ENABLE_ID, 
    "count_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.count_enable:\n\r"
    "  uint32 count_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_COUNT_MODE_ID, 
    "count_mode", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.count_mode:\n\r"
    "  uint32 count_mode\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_MPLS_ETHERTYPE_SELECT_ID, 
    "mpls_ethertype_select", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mpls_ethertype_select:\n\r"
    "  uint32 mpls_ethertype_select\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_LLVP_PROFILE_ID, 
    "llvp_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.llvp_profile:\n\r"
    "  uint32 llvp_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_CEP_C_VLAN_EDIT_ID, 
    "cep_c_vlan_edit", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cep_c_vlan_edit:\n\r"
    "  uint32 cep_c_vlan_edit\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_EEI_TYPE_ID, 
    "eei_type", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.eei_type:\n\r"
    "  uint32 eei_type\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_VLAN_DOMAIN_ID, 
    "vlan_domain", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vlan_domain:\n\r"
    "  uint32 vlan_domain\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_TAG_PROFILE_ID, 
    "tag_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tag_profile:\n\r"
    "  uint32 tag_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_S_TPID_INDEX_ID, 
    "s_tpid_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.s_tpid_index:\n\r"
    "  uint32 s_tpid_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_C_TPID_INDEX_ID, 
    "c_tpid_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c_tpid_index:\n\r"
    "  uint32 c_tpid_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_EXP_MAP_PROFILE_ID, 
    "exp_map_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.exp_map_profile:\n\r"
    "  uint32 exp_map_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_DEFAULT_SEM_RESULT_14_1_ID, 
    "default_sem_result_14_1", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.default_sem_result_14_1:\n\r"
    "  uint32 default_sem_result_14_1\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_DEFAULT_SEM_RESULT_0_ID, 
    "default_sem_result_0", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.default_sem_result_0:\n\r"
    "  uint32 default_sem_result_0\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_DISABLE_FILTER_ID, 
    "disable_filter", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.disable_filter:\n\r"
    "  uint32 disable_filter\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_EGRESS_VSI_FILTER_ENABLE_ID, 
    "egress_vsi_filter_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.egress_vsi_filter_enable:\n\r"
    "  uint32 egress_vsi_filter_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_EGRESS_STP_FILTER_ENABLE_ID, 
    "egress_stp_filter_enable", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.egress_stp_filter_enable:\n\r"
    "  uint32 egress_stp_filter_enable\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_PORT_IS_PBP_ID, 
    "port_is_pbp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.port_is_pbp:\n\r"
    "  uint32 port_is_pbp\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_TBL_DATA_ACCEPTABLE_FRAME_TYPE_PROFILE_ID, 
    "acceptable_frame_type_profile", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.acceptable_frame_type_profile:\n\r"
    "  uint32 acceptable_frame_type_profile\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  counter_compensation 0 count_enable 0 count_mode 0 mpls_ethertype_select 0\n\r"
    "  llvp_profile 0 cep_c_vlan_edit 0 eei_type 0 vlan_domain 0 tag_profile 0\n\r"
    "  s_tpid_index 0 c_tpid_index 0 exp_map_profile 0 default_sem_result_14_1 0\n\r"
    "  default_sem_result_0 0 disable_filter 0 egress_vsi_filter_enable 0\n\r"
    "  egress_stp_filter_enable 0 port_is_pbp 0 acceptable_frame_type_profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_SET_UNSAFE_EPNI_PP_PCT_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PP_PCT_TBL_GET_UNSAFE_EPNI_PP_PCT_TBL_GET_UNSAFE_ID, 
    "epni_pp_pct_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_pp_pct_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PP_PCT_TBL_GET_UNSAFE_EPNI_PP_PCT_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_ID, 
    "epni_llvp_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_llvp_table_tbl_set_unsafe tpid_profile_ndx 0\n\r"
    "  pkt_tag_format_ndx 0 entry_offset_ndx 0 llvp_incoming_tag_format 0\n\r"
    "  llvp_packet_has_pcp_dei 0 llvp_packet_has_up 0 llvp_packet_has_c_tag 0\n\r"
    "  llvp_c_tag_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_TPID_PROFILE_NDX_ID, 
    "key_tpid_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tpid_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tpid_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_llvp_table_tbl_set_unsafe tpid_profile_ndx 0\n\r"
    "  pkt_tag_format_ndx 0 entry_offset_ndx 0 llvp_incoming_tag_format 0\n\r"
    "  llvp_packet_has_pcp_dei 0 llvp_packet_has_up 0 llvp_packet_has_c_tag 0\n\r"
    "  llvp_c_tag_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_PKT_TAG_FORMAT_NDX_ID, 
    "key_pkt_tag_format_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pkt_tag_format_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  pkt_tag_format_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_llvp_table_tbl_set_unsafe tpid_profile_ndx 0\n\r"
    "  pkt_tag_format_ndx 0 entry_offset_ndx 0 llvp_incoming_tag_format 0\n\r"
    "  llvp_packet_has_pcp_dei 0 llvp_packet_has_up 0 llvp_packet_has_c_tag 0\n\r"
    "  llvp_c_tag_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_TBL_DATA_LLVP_INCOMING_TAG_FORMAT_ID, 
    "llvp_incoming_tag_format", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.llvp_incoming_tag_format:\n\r"
    "  uint32 llvp_incoming_tag_format\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_llvp_table_tbl_set_unsafe tpid_profile_ndx 0\n\r"
    "  pkt_tag_format_ndx 0 entry_offset_ndx 0 llvp_incoming_tag_format 0\n\r"
    "  llvp_packet_has_pcp_dei 0 llvp_packet_has_up 0 llvp_packet_has_c_tag 0\n\r"
    "  llvp_c_tag_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_TBL_DATA_LLVP_PACKET_HAS_PCP_DEI_ID, 
    "llvp_packet_has_pcp_dei", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.llvp_packet_has_pcp_dei:\n\r"
    "  uint32 llvp_packet_has_pcp_dei\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_llvp_table_tbl_set_unsafe tpid_profile_ndx 0\n\r"
    "  pkt_tag_format_ndx 0 entry_offset_ndx 0 llvp_incoming_tag_format 0\n\r"
    "  llvp_packet_has_pcp_dei 0 llvp_packet_has_up 0 llvp_packet_has_c_tag 0\n\r"
    "  llvp_c_tag_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_TBL_DATA_LLVP_PACKET_HAS_UP_ID, 
    "llvp_packet_has_up", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.llvp_packet_has_up:\n\r"
    "  uint32 llvp_packet_has_up\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_llvp_table_tbl_set_unsafe tpid_profile_ndx 0\n\r"
    "  pkt_tag_format_ndx 0 entry_offset_ndx 0 llvp_incoming_tag_format 0\n\r"
    "  llvp_packet_has_pcp_dei 0 llvp_packet_has_up 0 llvp_packet_has_c_tag 0\n\r"
    "  llvp_c_tag_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_TBL_DATA_LLVP_PACKET_HAS_C_TAG_ID, 
    "llvp_packet_has_c_tag", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.llvp_packet_has_c_tag:\n\r"
    "  uint32 llvp_packet_has_c_tag\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_llvp_table_tbl_set_unsafe tpid_profile_ndx 0\n\r"
    "  pkt_tag_format_ndx 0 entry_offset_ndx 0 llvp_incoming_tag_format 0\n\r"
    "  llvp_packet_has_pcp_dei 0 llvp_packet_has_up 0 llvp_packet_has_c_tag 0\n\r"
    "  llvp_c_tag_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_TBL_DATA_LLVP_C_TAG_OFFSET_ID, 
    "llvp_c_tag_offset", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.llvp_c_tag_offset:\n\r"
    "  uint32 llvp_c_tag_offset\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_llvp_table_tbl_set_unsafe tpid_profile_ndx 0\n\r"
    "  pkt_tag_format_ndx 0 entry_offset_ndx 0 llvp_incoming_tag_format 0\n\r"
    "  llvp_packet_has_pcp_dei 0 llvp_packet_has_up 0 llvp_packet_has_c_tag 0\n\r"
    "  llvp_c_tag_offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_EPNI_LLVP_TABLE_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_LLVP_TABLE_TBL_GET_UNSAFE_EPNI_LLVP_TABLE_TBL_GET_UNSAFE_ID, 
    "epni_llvp_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_llvp_table_tbl_get_unsafe tpid_profile_ndx 0\n\r"
    "  pkt_tag_format_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_LLVP_TABLE_TBL_GET_UNSAFE_EPNI_LLVP_TABLE_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_LLVP_TABLE_TBL_GET_UNSAFE_EPNI_LLVP_TABLE_TBL_GET_UNSAFE_TPID_PROFILE_NDX_ID, 
    "key_tpid_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tpid_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tpid_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_llvp_table_tbl_get_unsafe tpid_profile_ndx 0\n\r"
    "  pkt_tag_format_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_LLVP_TABLE_TBL_GET_UNSAFE_EPNI_LLVP_TABLE_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_LLVP_TABLE_TBL_GET_UNSAFE_EPNI_LLVP_TABLE_TBL_GET_UNSAFE_PKT_TAG_FORMAT_NDX_ID, 
    "key_pkt_tag_format_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pkt_tag_format_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  pkt_tag_format_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_llvp_table_tbl_get_unsafe tpid_profile_ndx 0\n\r"
    "  pkt_tag_format_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_LLVP_TABLE_TBL_GET_UNSAFE_EPNI_LLVP_TABLE_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_ID, 
    "epni_egress_edit_cmd_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_set_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0 tags_to_remove 0 inner_pcp_dei_source 0\n\r"
    "  outer_pcp_dei_source 0 inner_vid_source 0 outer_vid_source 0 inner_tpid_index\n\r"
    "  0 outer_tpid_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_TAG_FORMAT_NDX_ID, 
    "key_tag_format_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tag_format_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tag_format_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_set_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0 tags_to_remove 0 inner_pcp_dei_source 0\n\r"
    "  outer_pcp_dei_source 0 inner_vid_source 0 outer_vid_source 0 inner_tpid_index\n\r"
    "  0 outer_tpid_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EDIT_PROFILE_NDX_ID, 
    "key_edit_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  edit_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  edit_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_set_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0 tags_to_remove 0 inner_pcp_dei_source 0\n\r"
    "  outer_pcp_dei_source 0 inner_vid_source 0 outer_vid_source 0 inner_tpid_index\n\r"
    "  0 outer_tpid_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_TBL_DATA_TAGS_TO_REMOVE_ID, 
    "tags_to_remove", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tags_to_remove:\n\r"
    "  uint32 tags_to_remove\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_set_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0 tags_to_remove 0 inner_pcp_dei_source 0\n\r"
    "  outer_pcp_dei_source 0 inner_vid_source 0 outer_vid_source 0 inner_tpid_index\n\r"
    "  0 outer_tpid_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_TBL_DATA_INNER_PCP_DEI_SOURCE_ID, 
    "inner_pcp_dei_source", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inner_pcp_dei_source:\n\r"
    "  uint32 inner_pcp_dei_source\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_set_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0 tags_to_remove 0 inner_pcp_dei_source 0\n\r"
    "  outer_pcp_dei_source 0 inner_vid_source 0 outer_vid_source 0 inner_tpid_index\n\r"
    "  0 outer_tpid_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_TBL_DATA_OUTER_PCP_DEI_SOURCE_ID, 
    "outer_pcp_dei_source", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.outer_pcp_dei_source:\n\r"
    "  uint32 outer_pcp_dei_source\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_set_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0 tags_to_remove 0 inner_pcp_dei_source 0\n\r"
    "  outer_pcp_dei_source 0 inner_vid_source 0 outer_vid_source 0 inner_tpid_index\n\r"
    "  0 outer_tpid_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_TBL_DATA_INNER_VID_SOURCE_ID, 
    "inner_vid_source", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inner_vid_source:\n\r"
    "  uint32 inner_vid_source\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_set_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0 tags_to_remove 0 inner_pcp_dei_source 0\n\r"
    "  outer_pcp_dei_source 0 inner_vid_source 0 outer_vid_source 0 inner_tpid_index\n\r"
    "  0 outer_tpid_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_TBL_DATA_OUTER_VID_SOURCE_ID, 
    "outer_vid_source", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.outer_vid_source:\n\r"
    "  uint32 outer_vid_source\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_set_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0 tags_to_remove 0 inner_pcp_dei_source 0\n\r"
    "  outer_pcp_dei_source 0 inner_vid_source 0 outer_vid_source 0 inner_tpid_index\n\r"
    "  0 outer_tpid_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_TBL_DATA_INNER_TPID_INDEX_ID, 
    "inner_tpid_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inner_tpid_index:\n\r"
    "  uint32 inner_tpid_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_set_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0 tags_to_remove 0 inner_pcp_dei_source 0\n\r"
    "  outer_pcp_dei_source 0 inner_vid_source 0 outer_vid_source 0 inner_tpid_index\n\r"
    "  0 outer_tpid_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_TBL_DATA_OUTER_TPID_INDEX_ID, 
    "outer_tpid_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.outer_tpid_index:\n\r"
    "  uint32 outer_tpid_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_set_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0 tags_to_remove 0 inner_pcp_dei_source 0\n\r"
    "  outer_pcp_dei_source 0 inner_vid_source 0 outer_vid_source 0 inner_tpid_index\n\r"
    "  0 outer_tpid_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_GET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_GET_UNSAFE_ID, 
    "epni_egress_edit_cmd_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_get_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_GET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_GET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_GET_UNSAFE_TAG_FORMAT_NDX_ID, 
    "key_tag_format_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tag_format_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  tag_format_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_get_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_GET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_GET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_GET_UNSAFE_EDIT_PROFILE_NDX_ID, 
    "key_edit_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  edit_profile_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  edit_profile_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_egress_edit_cmd_tbl_get_unsafe tag_format_ndx 0\n\r"
    "  edit_profile_ndx 0 entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_EGRESS_EDIT_CMD_TBL_GET_UNSAFE_EPNI_EGRESS_EDIT_CMD_TBL_GET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_ID, 
    "epni_program_vars_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_program_vars_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  system_header_size 0 remove_network_header 0 add_network_header 0\n\r"
    "  new_header_size 0 program_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_TBL_DATA_SYSTEM_HEADER_SIZE_ID, 
    "system_header_size", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.system_header_size:\n\r"
    "  uint32 system_header_size\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_program_vars_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  system_header_size 0 remove_network_header 0 add_network_header 0\n\r"
    "  new_header_size 0 program_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_TBL_DATA_REMOVE_NETWORK_HEADER_ID, 
    "remove_network_header", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.remove_network_header:\n\r"
    "  uint32 remove_network_header\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_program_vars_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  system_header_size 0 remove_network_header 0 add_network_header 0\n\r"
    "  new_header_size 0 program_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_TBL_DATA_ADD_NETWORK_HEADER_ID, 
    "add_network_header", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.add_network_header:\n\r"
    "  uint32 add_network_header\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_program_vars_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  system_header_size 0 remove_network_header 0 add_network_header 0\n\r"
    "  new_header_size 0 program_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_TBL_DATA_NEW_HEADER_SIZE_ID, 
    "new_header_size", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.new_header_size:\n\r"
    "  uint32 new_header_size\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_program_vars_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  system_header_size 0 remove_network_header 0 add_network_header 0\n\r"
    "  new_header_size 0 program_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_TBL_DATA_PROGRAM_INDEX_ID, 
    "program_index", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.program_index:\n\r"
    "  uint32 program_index\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_program_vars_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  system_header_size 0 remove_network_header 0 add_network_header 0\n\r"
    "  new_header_size 0 program_index 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_EPNI_PROGRAM_VARS_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_PROGRAM_VARS_TBL_GET_UNSAFE_EPNI_PROGRAM_VARS_TBL_GET_UNSAFE_ID, 
    "epni_program_vars_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_program_vars_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_PROGRAM_VARS_TBL_GET_UNSAFE_EPNI_PROGRAM_VARS_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID, 
    "epni_ingress_vlan_edit_command_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_INNER_TPID_NDX_ID, 
    "inner_tpid_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.inner_tpid_ndx:\n\r"
    "  uint32 inner_tpid_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_OUTER_TPID_NDX_ID, 
    "outer_tpid_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.outer_tpid_ndx:\n\r"
    "  uint32 outer_tpid_ndx\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_EDIT_COMMAND_BYTES_TO_REMOVE_ID, 
    "edit_command_bytes_to_remove", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.edit_command_bytes_to_remove:\n\r"
    "  uint32 edit_command_bytes_to_remove\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_EDIT_COMMAND_INNER_PCP_DEI_SOURCE_ID, 
    "edit_command_inner_pcp_dei_source", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.edit_command_inner_pcp_dei_source:\n\r"
    "  uint32 edit_command_inner_pcp_dei_source\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_EDIT_COMMAND_INNER_VID_SOURCE_ID, 
    "edit_command_inner_vid_source", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.edit_command_inner_vid_source:\n\r"
    "  uint32 edit_command_inner_vid_source\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_EDIT_COMMAND_OUTER_PCP_DEI_SOURCE_ID, 
    "edit_command_outer_pcp_dei_source", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.edit_command_outer_pcp_dei_source:\n\r"
    "  uint32 edit_command_outer_pcp_dei_source\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_EDIT_COMMAND_OUTER_VID_SOURCE_ID, 
    "edit_command_outer_vid_source", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.edit_command_outer_vid_source:\n\r"
    "  uint32 edit_command_outer_vid_source\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_TBL_DATA_TPID_PROFILE_LINK_ID, 
    "tpid_profile_link", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tpid_profile_link:\n\r"
    "  uint32 tpid_profile_link\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ingress_vlan_edit_command_map_tbl_set_unsafe\n\r"
    "  entry_offset_ndx 0 inner_tpid_ndx 0 outer_tpid_ndx 0\n\r"
    "  edit_command_bytes_to_remove 0 edit_command_inner_pcp_dei_source 0\n\r"
    "  edit_command_inner_vid_source 0 edit_command_outer_pcp_dei_source 0\n\r"
    "  edit_command_outer_vid_source 0 tpid_profile_link 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_GET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_GET_UNSAFE_ID, 
    "epni_ingress_vlan_edit_command_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ingress_vlan_edit_command_map_tbl_get_unsafe\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_GET_UNSAFE_EPNI_INGRESS_VLAN_EDIT_COMMAND_MAP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_IP_EXP_MAP_TBL_SET_UNSAFE_EPNI_IP_EXP_MAP_TBL_SET_UNSAFE_ID, 
    "epni_ip_exp_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ip_exp_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ip_exp_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_IP_EXP_MAP_TBL_SET_UNSAFE_EPNI_IP_EXP_MAP_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_IP_EXP_MAP_TBL_SET_UNSAFE_EPNI_IP_EXP_MAP_TBL_SET_UNSAFE_TBL_DATA_IP_EXP_MAP_ID, 
    "ip_exp_map", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ip_exp_map:\n\r"
    "  uint32 ip_exp_map\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ip_exp_map_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  ip_exp_map 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_IP_EXP_MAP_TBL_SET_UNSAFE_EPNI_IP_EXP_MAP_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_IP_EXP_MAP_TBL_GET_UNSAFE_EPNI_IP_EXP_MAP_TBL_GET_UNSAFE_ID, 
    "epni_ip_exp_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_ip_exp_map_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_IP_EXP_MAP_TBL_GET_UNSAFE_EPNI_IP_EXP_MAP_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ETPP_DEBUG_TBL_SET_UNSAFE_EPNI_ETPP_DEBUG_TBL_SET_UNSAFE_ID, 
    "epni_etpp_debug_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_etpp_debug_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  etpp_debug 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ETPP_DEBUG_TBL_SET_UNSAFE_EPNI_ETPP_DEBUG_TBL_SET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ETPP_DEBUG_TBL_SET_UNSAFE_EPNI_ETPP_DEBUG_TBL_SET_UNSAFE_TBL_DATA_ETPP_DEBUG_ID, 
    "etpp_debug", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.etpp_debug:\n\r"
    "  uint32 etpp_debug\n\r"
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_etpp_debug_tbl_set_unsafe entry_offset_ndx 0\n\r"
    "  etpp_debug 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ETPP_DEBUG_TBL_SET_UNSAFE_EPNI_ETPP_DEBUG_TBL_SET_UNSAFE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_EPNI_ETPP_DEBUG_TBL_GET_UNSAFE_EPNI_ETPP_DEBUG_TBL_GET_UNSAFE_ID, 
    "epni_etpp_debug_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_free_vals[0], 
    (sizeof(soc_pb_pp_acc_free_vals) / sizeof(soc_pb_pp_acc_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_PP_ACC_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_pp_acc soc_pb_pp_ind_acc epni_etpp_debug_tbl_get_unsafe entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_EPNI_ETPP_DEBUG_TBL_GET_UNSAFE_EPNI_ETPP_DEBUG_TBL_GET_UNSAFE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_IND_ACC_ID, 
    "pp", 
    (PARAM_VAL_RULES *)&soc_pb_pp_acc_empty_vals[0], 
    (sizeof(soc_pb_pp_acc_empty_vals) / sizeof(soc_pb_pp_acc_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_PP_IND_ACC_FIRST_ID,FUN_PB_PP_IND_ACC_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } soc_pb_pp_ind_acc*/
#ifdef UI_PB_IND_ACC/* { soc_pb_ind_acc*/
  { 
    PARAM_PB_OLP_PGE_MEM_TBL_SET_OLP_PGE_MEM_TBL_SET_ID, 
    "olp_pge_mem_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc olp_pge_mem_tbl_set entry_offset_ndx 0 pge_mem 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_OLP_PGE_MEM_TBL_SET_OLP_PGE_MEM_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_OLP_PGE_MEM_TBL_SET_OLP_PGE_MEM_TBL_SET_TBL_DATA_PGE_MEM_ID, 
    "pge_mem", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pge_mem:\n\r"
    "  uint32 pge_mem\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc olp_pge_mem_tbl_set entry_offset_ndx 0 pge_mem 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_OLP_PGE_MEM_TBL_SET_OLP_PGE_MEM_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_OLP_PGE_MEM_TBL_GET_OLP_PGE_MEM_TBL_GET_ID, 
    "olp_pge_mem_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc olp_pge_mem_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_OLP_PGE_MEM_TBL_GET_OLP_PGE_MEM_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_NIF_CTXT_MAP_TBL_SET_IRE_NIF_CTXT_MAP_TBL_SET_ID, 
    "ire_nif_ctxt_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_nif_ctxt_map_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  fap_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_NIF_CTXT_MAP_TBL_SET_IRE_NIF_CTXT_MAP_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_NIF_CTXT_MAP_TBL_SET_IRE_NIF_CTXT_MAP_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_nif_ctxt_map_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  fap_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_NIF_CTXT_MAP_TBL_SET_IRE_NIF_CTXT_MAP_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_NIF_CTXT_MAP_TBL_SET_IRE_NIF_CTXT_MAP_TBL_SET_TBL_DATA_FAP_PORT_ID, 
    "fap_port", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fap_port:\n\r"
    "  uint32 fap_port\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_nif_ctxt_map_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  fap_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_NIF_CTXT_MAP_TBL_SET_IRE_NIF_CTXT_MAP_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_NIF_CTXT_MAP_TBL_GET_IRE_NIF_CTXT_MAP_TBL_GET_ID, 
    "ire_nif_ctxt_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_nif_ctxt_map_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_NIF_CTXT_MAP_TBL_GET_IRE_NIF_CTXT_MAP_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_ID, 
    "ire_nif_port_to_ctxt_bit_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_nif_port_to_ctxt_bit_map_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 contexts_bit_mapping_index 0 contexts_bit_mapping 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_nif_port_to_ctxt_bit_map_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 contexts_bit_mapping_index 0 contexts_bit_mapping 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_TBL_DATA_CONTEXTS_BIT_MAPPING_INDEX_ID, 
    "contexts_bit_mapping_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  contexts_bit_mapping_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_nif_port_to_ctxt_bit_map_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 contexts_bit_mapping_index 0 contexts_bit_mapping 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_TBL_DATA_CONTEXTS_BIT_MAPPING_ID, 
    "contexts_bit_mapping", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.contexts_bit_mapping[ prm_contexts_bit_mapping_index]:\n\r"
    "  uint32 contexts_bit_mapping[3]\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_nif_port_to_ctxt_bit_map_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 contexts_bit_mapping_index 0 contexts_bit_mapping 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_GET_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_GET_ID, 
    "ire_nif_port_to_ctxt_bit_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_nif_port_to_ctxt_bit_map_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_GET_IRE_NIF_PORT_TO_CTXT_BIT_MAP_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_RCY_CTXT_MAP_TBL_SET_IRE_RCY_CTXT_MAP_TBL_SET_ID, 
    "ire_rcy_ctxt_map_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_rcy_ctxt_map_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  fap_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_RCY_CTXT_MAP_TBL_SET_IRE_RCY_CTXT_MAP_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_RCY_CTXT_MAP_TBL_SET_IRE_RCY_CTXT_MAP_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_rcy_ctxt_map_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  fap_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_RCY_CTXT_MAP_TBL_SET_IRE_RCY_CTXT_MAP_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_RCY_CTXT_MAP_TBL_SET_IRE_RCY_CTXT_MAP_TBL_SET_TBL_DATA_FAP_PORT_ID, 
    "fap_port", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fap_port:\n\r"
    "  uint32 fap_port\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_rcy_ctxt_map_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  fap_port 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_RCY_CTXT_MAP_TBL_SET_IRE_RCY_CTXT_MAP_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_RCY_CTXT_MAP_TBL_GET_IRE_RCY_CTXT_MAP_TBL_GET_ID, 
    "ire_rcy_ctxt_map_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_rcy_ctxt_map_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_RCY_CTXT_MAP_TBL_GET_IRE_RCY_CTXT_MAP_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_TDM_CONFIG_TBL_SET_IRE_TDM_CONFIG_TBL_SET_ID, 
    "ire_tdm_config_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_tdm_config_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  header_index 0 header 0 cpu 0 mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_TDM_CONFIG_TBL_SET_IRE_TDM_CONFIG_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_TDM_CONFIG_TBL_SET_IRE_TDM_CONFIG_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_tdm_config_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  header_index 0 header 0 cpu 0 mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_TDM_CONFIG_TBL_SET_IRE_TDM_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_TDM_CONFIG_TBL_SET_IRE_TDM_CONFIG_TBL_SET_TBL_DATA_HEADER_INDEX_ID, 
    "header_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  header_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_tdm_config_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  header_index 0 header 0 cpu 0 mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_TDM_CONFIG_TBL_SET_IRE_TDM_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_TDM_CONFIG_TBL_SET_IRE_TDM_CONFIG_TBL_SET_TBL_DATA_HEADER_ID, 
    "header", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.header[ prm_header_index]:\n\r"
    "  uint32 header[2]\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_tdm_config_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  header_index 0 header 0 cpu 0 mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_TDM_CONFIG_TBL_SET_IRE_TDM_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_TDM_CONFIG_TBL_SET_IRE_TDM_CONFIG_TBL_SET_TBL_DATA_CPU_ID, 
    "cpu", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cpu:\n\r"
    "  uint32 cpu\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_tdm_config_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  header_index 0 header 0 cpu 0 mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_TDM_CONFIG_TBL_SET_IRE_TDM_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_TDM_CONFIG_TBL_SET_IRE_TDM_CONFIG_TBL_SET_TBL_DATA_MODE_ID, 
    "mode", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mode:\n\r"
    "  uint32 mode\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_tdm_config_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  header_index 0 header 0 cpu 0 mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_TDM_CONFIG_TBL_SET_IRE_TDM_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRE_TDM_CONFIG_TBL_GET_IRE_TDM_CONFIG_TBL_GET_ID, 
    "ire_tdm_config_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ire_tdm_config_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRE_TDM_CONFIG_TBL_GET_IRE_TDM_CONFIG_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_CONTEXT_MRU_TBL_SET_IDR_CONTEXT_MRU_TBL_SET_ID, 
    "idr_context_mru_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_context_mru_tbl_set entry_offset_ndx 0 parity 0 size\n\r"
    "  0 org_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_CONTEXT_MRU_TBL_SET_IDR_CONTEXT_MRU_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_CONTEXT_MRU_TBL_SET_IDR_CONTEXT_MRU_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_context_mru_tbl_set entry_offset_ndx 0 parity 0 size\n\r"
    "  0 org_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_CONTEXT_MRU_TBL_SET_IDR_CONTEXT_MRU_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_CONTEXT_MRU_TBL_SET_IDR_CONTEXT_MRU_TBL_SET_TBL_DATA_SIZE_ID, 
    "size", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.size:\n\r"
    "  uint32 size\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_context_mru_tbl_set entry_offset_ndx 0 parity 0 size\n\r"
    "  0 org_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_CONTEXT_MRU_TBL_SET_IDR_CONTEXT_MRU_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_CONTEXT_MRU_TBL_SET_IDR_CONTEXT_MRU_TBL_SET_TBL_DATA_ORG_SIZE_ID, 
    "org_size", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.org_size:\n\r"
    "  uint32 org_size\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_context_mru_tbl_set entry_offset_ndx 0 parity 0 size\n\r"
    "  0 org_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_CONTEXT_MRU_TBL_SET_IDR_CONTEXT_MRU_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_CONTEXT_MRU_TBL_GET_IDR_CONTEXT_MRU_TBL_GET_ID, 
    "idr_context_mru_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_context_mru_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_CONTEXT_MRU_TBL_GET_IDR_CONTEXT_MRU_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_COMPLETE_PC_TBL_SET_IDR_COMPLETE_PC_TBL_SET_ID, 
    "idr_complete_pc_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_complete_pc_tbl_set entry_offset_ndx 0 ecc 0\n\r"
    "  dbuff_cnt 0 pcb_pointer 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_COMPLETE_PC_TBL_SET_IDR_COMPLETE_PC_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_COMPLETE_PC_TBL_SET_IDR_COMPLETE_PC_TBL_SET_TBL_DATA_ECC_ID, 
    "ecc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ecc:\n\r"
    "  uint32 ecc\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_complete_pc_tbl_set entry_offset_ndx 0 ecc 0\n\r"
    "  dbuff_cnt 0 pcb_pointer 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_COMPLETE_PC_TBL_SET_IDR_COMPLETE_PC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_COMPLETE_PC_TBL_SET_IDR_COMPLETE_PC_TBL_SET_TBL_DATA_DBUFF_CNT_ID, 
    "dbuff_cnt", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.dbuff_cnt:\n\r"
    "  uint32 dbuff_cnt\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_complete_pc_tbl_set entry_offset_ndx 0 ecc 0\n\r"
    "  dbuff_cnt 0 pcb_pointer 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_COMPLETE_PC_TBL_SET_IDR_COMPLETE_PC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_COMPLETE_PC_TBL_SET_IDR_COMPLETE_PC_TBL_SET_TBL_DATA_PCB_POINTER_ID, 
    "pcb_pointer", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pcb_pointer:\n\r"
    "  uint32 pcb_pointer\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_complete_pc_tbl_set entry_offset_ndx 0 ecc 0\n\r"
    "  dbuff_cnt 0 pcb_pointer 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_COMPLETE_PC_TBL_SET_IDR_COMPLETE_PC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_COMPLETE_PC_TBL_GET_IDR_COMPLETE_PC_TBL_GET_ID, 
    "idr_complete_pc_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_complete_pc_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_COMPLETE_PC_TBL_GET_IDR_COMPLETE_PC_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_ID, 
    "idr_ethernet_meter_profiles_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_TBL_DATA_PACKET_MODE_ID, 
    "packet_mode", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.packet_mode:\n\r"
    "  uint32 packet_mode\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_TBL_DATA_BURST_EXP_ID, 
    "burst_exp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.burst_exp:\n\r"
    "  uint32 burst_exp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_TBL_DATA_BURST_MANTISSA_ID, 
    "burst_mantissa", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.burst_mantissa:\n\r"
    "  uint32 burst_mantissa\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_TBL_DATA_RATE_EXP_ID, 
    "rate_exp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.rate_exp:\n\r"
    "  uint32 rate_exp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_TBL_DATA_RATE_MANTISSA_ID, 
    "rate_mantissa", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.rate_mantissa:\n\r"
    "  uint32 rate_mantissa\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_PROFILES_TBL_SET_IDR_ETHERNET_METER_PROFILES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_PROFILES_TBL_GET_IDR_ETHERNET_METER_PROFILES_TBL_GET_ID, 
    "idr_ethernet_meter_profiles_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_profiles_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_PROFILES_TBL_GET_IDR_ETHERNET_METER_PROFILES_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_CONFIG_TBL_SET_IDR_ETHERNET_METER_CONFIG_TBL_SET_ID, 
    "idr_ethernet_meter_config_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_config_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 global_meter_ptr 0 profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_CONFIG_TBL_SET_IDR_ETHERNET_METER_CONFIG_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_CONFIG_TBL_SET_IDR_ETHERNET_METER_CONFIG_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_config_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 global_meter_ptr 0 profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_CONFIG_TBL_SET_IDR_ETHERNET_METER_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_CONFIG_TBL_SET_IDR_ETHERNET_METER_CONFIG_TBL_SET_TBL_DATA_GLOBAL_METER_PTR_ID, 
    "global_meter_ptr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.global_meter_ptr:\n\r"
    "  uint32 global_meter_ptr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_config_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 global_meter_ptr 0 profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_CONFIG_TBL_SET_IDR_ETHERNET_METER_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_CONFIG_TBL_SET_IDR_ETHERNET_METER_CONFIG_TBL_SET_TBL_DATA_PROFILE_ID, 
    "profile", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.profile:\n\r"
    "  uint32 profile\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_config_tbl_set entry_offset_ndx 0\n\r"
    "  parity 0 global_meter_ptr 0 profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_CONFIG_TBL_SET_IDR_ETHERNET_METER_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_ETHERNET_METER_CONFIG_TBL_GET_IDR_ETHERNET_METER_CONFIG_TBL_GET_ID, 
    "idr_ethernet_meter_config_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_ethernet_meter_config_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_ETHERNET_METER_CONFIG_TBL_GET_IDR_ETHERNET_METER_CONFIG_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_ID, 
    "idr_global_meter_profiles_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_global_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  enable 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_TBL_DATA_ENABLE_ID, 
    "enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.enable:\n\r"
    "  uint32 enable\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_global_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  enable 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_TBL_DATA_PACKET_MODE_ID, 
    "packet_mode", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.packet_mode:\n\r"
    "  uint32 packet_mode\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_global_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  enable 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_TBL_DATA_BURST_EXP_ID, 
    "burst_exp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.burst_exp:\n\r"
    "  uint32 burst_exp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_global_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  enable 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_TBL_DATA_BURST_MANTISSA_ID, 
    "burst_mantissa", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.burst_mantissa:\n\r"
    "  uint32 burst_mantissa\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_global_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  enable 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_TBL_DATA_RATE_EXP_ID, 
    "rate_exp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.rate_exp:\n\r"
    "  uint32 rate_exp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_global_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  enable 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_TBL_DATA_RATE_MANTISSA_ID, 
    "rate_mantissa", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.rate_mantissa:\n\r"
    "  uint32 rate_mantissa\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_global_meter_profiles_tbl_set entry_offset_ndx 0\n\r"
    "  enable 0 packet_mode 0 burst_exp 0 burst_mantissa 0 rate_exp 0 rate_mantissa 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_GLOBAL_METER_PROFILES_TBL_SET_IDR_GLOBAL_METER_PROFILES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_GLOBAL_METER_PROFILES_TBL_GET_IDR_GLOBAL_METER_PROFILES_TBL_GET_ID, 
    "idr_global_meter_profiles_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_global_meter_profiles_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_GLOBAL_METER_PROFILES_TBL_GET_IDR_GLOBAL_METER_PROFILES_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_GLOBAL_METER_STATUS_TBL_SET_IDR_GLOBAL_METER_STATUS_TBL_SET_ID, 
    "idr_global_meter_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_global_meter_status_tbl_set entry_offset_ndx 0 level\n\r"
    "  0 time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_GLOBAL_METER_STATUS_TBL_SET_IDR_GLOBAL_METER_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_GLOBAL_METER_STATUS_TBL_SET_IDR_GLOBAL_METER_STATUS_TBL_SET_TBL_DATA_LEVEL_ID, 
    "level", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.level:\n\r"
    "  uint32 level\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_global_meter_status_tbl_set entry_offset_ndx 0 level\n\r"
    "  0 time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_GLOBAL_METER_STATUS_TBL_SET_IDR_GLOBAL_METER_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_GLOBAL_METER_STATUS_TBL_SET_IDR_GLOBAL_METER_STATUS_TBL_SET_TBL_DATA_TIME_STAMP_ID, 
    "time_stamp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.time_stamp:\n\r"
    "  uint32 time_stamp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_global_meter_status_tbl_set entry_offset_ndx 0 level\n\r"
    "  0 time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_GLOBAL_METER_STATUS_TBL_SET_IDR_GLOBAL_METER_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IDR_GLOBAL_METER_STATUS_TBL_GET_IDR_GLOBAL_METER_STATUS_TBL_GET_ID, 
    "idr_global_meter_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc idr_global_meter_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IDR_GLOBAL_METER_STATUS_TBL_GET_IDR_GLOBAL_METER_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_ID, 
    "irr_irdb_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_irdb_tbl_set entry_offset_ndx 0 ingress_replication0\n\r"
    "  0 ingress_replication1 0 ingress_replication2 0 ingress_replication3 0\n\r"
    "  ingress_replication4 0 ingress_replication5 0 ingress_replication6 0\n\r"
    "  ingress_replication7 0 parity 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_TBL_DATA_INGRESS_REPLICATION0_ID, 
    "ingress_replication0", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ingress_replication0:\n\r"
    "  uint32 ingress_replication0\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_irdb_tbl_set entry_offset_ndx 0 ingress_replication0\n\r"
    "  0 ingress_replication1 0 ingress_replication2 0 ingress_replication3 0\n\r"
    "  ingress_replication4 0 ingress_replication5 0 ingress_replication6 0\n\r"
    "  ingress_replication7 0 parity 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_TBL_DATA_INGRESS_REPLICATION1_ID, 
    "ingress_replication1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ingress_replication1:\n\r"
    "  uint32 ingress_replication1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_irdb_tbl_set entry_offset_ndx 0 ingress_replication0\n\r"
    "  0 ingress_replication1 0 ingress_replication2 0 ingress_replication3 0\n\r"
    "  ingress_replication4 0 ingress_replication5 0 ingress_replication6 0\n\r"
    "  ingress_replication7 0 parity 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_TBL_DATA_INGRESS_REPLICATION2_ID, 
    "ingress_replication2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ingress_replication2:\n\r"
    "  uint32 ingress_replication2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_irdb_tbl_set entry_offset_ndx 0 ingress_replication0\n\r"
    "  0 ingress_replication1 0 ingress_replication2 0 ingress_replication3 0\n\r"
    "  ingress_replication4 0 ingress_replication5 0 ingress_replication6 0\n\r"
    "  ingress_replication7 0 parity 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_TBL_DATA_INGRESS_REPLICATION3_ID, 
    "ingress_replication3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ingress_replication3:\n\r"
    "  uint32 ingress_replication3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_irdb_tbl_set entry_offset_ndx 0 ingress_replication0\n\r"
    "  0 ingress_replication1 0 ingress_replication2 0 ingress_replication3 0\n\r"
    "  ingress_replication4 0 ingress_replication5 0 ingress_replication6 0\n\r"
    "  ingress_replication7 0 parity 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_TBL_DATA_INGRESS_REPLICATION4_ID, 
    "ingress_replication4", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ingress_replication4:\n\r"
    "  uint32 ingress_replication4\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_irdb_tbl_set entry_offset_ndx 0 ingress_replication0\n\r"
    "  0 ingress_replication1 0 ingress_replication2 0 ingress_replication3 0\n\r"
    "  ingress_replication4 0 ingress_replication5 0 ingress_replication6 0\n\r"
    "  ingress_replication7 0 parity 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_TBL_DATA_INGRESS_REPLICATION5_ID, 
    "ingress_replication5", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ingress_replication5:\n\r"
    "  uint32 ingress_replication5\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_irdb_tbl_set entry_offset_ndx 0 ingress_replication0\n\r"
    "  0 ingress_replication1 0 ingress_replication2 0 ingress_replication3 0\n\r"
    "  ingress_replication4 0 ingress_replication5 0 ingress_replication6 0\n\r"
    "  ingress_replication7 0 parity 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_TBL_DATA_INGRESS_REPLICATION6_ID, 
    "ingress_replication6", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ingress_replication6:\n\r"
    "  uint32 ingress_replication6\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_irdb_tbl_set entry_offset_ndx 0 ingress_replication0\n\r"
    "  0 ingress_replication1 0 ingress_replication2 0 ingress_replication3 0\n\r"
    "  ingress_replication4 0 ingress_replication5 0 ingress_replication6 0\n\r"
    "  ingress_replication7 0 parity 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_TBL_DATA_INGRESS_REPLICATION7_ID, 
    "ingress_replication7", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ingress_replication7:\n\r"
    "  uint32 ingress_replication7\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_irdb_tbl_set entry_offset_ndx 0 ingress_replication0\n\r"
    "  0 ingress_replication1 0 ingress_replication2 0 ingress_replication3 0\n\r"
    "  ingress_replication4 0 ingress_replication5 0 ingress_replication6 0\n\r"
    "  ingress_replication7 0 parity 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_irdb_tbl_set entry_offset_ndx 0 ingress_replication0\n\r"
    "  0 ingress_replication1 0 ingress_replication2 0 ingress_replication3 0\n\r"
    "  ingress_replication4 0 ingress_replication5 0 ingress_replication6 0\n\r"
    "  ingress_replication7 0 parity 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IRDB_TBL_SET_IRR_IRDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IRDB_TBL_GET_IRR_IRDB_TBL_GET_ID, 
    "irr_irdb_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_irdb_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IRDB_TBL_GET_IRR_IRDB_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_ID, 
    "irr_mcdb_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_tbl_set entry_offset_ndx 0 parity 0 link_ptr 0\n\r"
    "  cud2 0 cud1 0 dest2 0 dest1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_tbl_set entry_offset_ndx 0 parity 0 link_ptr 0\n\r"
    "  cud2 0 cud1 0 dest2 0 dest1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_TBL_DATA_LINK_PTR_ID, 
    "link_ptr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.link_ptr:\n\r"
    "  uint32 link_ptr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_tbl_set entry_offset_ndx 0 parity 0 link_ptr 0\n\r"
    "  cud2 0 cud1 0 dest2 0 dest1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_TBL_DATA_CUD2_ID, 
    "cud2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cud2:\n\r"
    "  uint32 cud2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_tbl_set entry_offset_ndx 0 parity 0 link_ptr 0\n\r"
    "  cud2 0 cud1 0 dest2 0 dest1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_TBL_DATA_CUD1_ID, 
    "cud1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cud1:\n\r"
    "  uint32 cud1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_tbl_set entry_offset_ndx 0 parity 0 link_ptr 0\n\r"
    "  cud2 0 cud1 0 dest2 0 dest1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_TBL_DATA_DEST2_ID, 
    "dest2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.dest2:\n\r"
    "  uint32 dest2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_tbl_set entry_offset_ndx 0 parity 0 link_ptr 0\n\r"
    "  cud2 0 cud1 0 dest2 0 dest1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_TBL_DATA_DEST1_ID, 
    "dest1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.dest1:\n\r"
    "  uint32 dest1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_tbl_set entry_offset_ndx 0 parity 0 link_ptr 0\n\r"
    "  cud2 0 cud1 0 dest2 0 dest1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_TBL_SET_IRR_MCDB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_TBL_GET_IRR_MCDB_TBL_GET_ID, 
    "irr_mcdb_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_TBL_GET_IRR_MCDB_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_ID, 
    "irr_mcdb_egress_format_b_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_b_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 otm_port2 0 cud3 0 multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_TBL_DATA_LINK_PTR_ID, 
    "link_ptr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.link_ptr:\n\r"
    "  uint32 link_ptr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_b_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 otm_port2 0 cud3 0 multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_TBL_DATA_FORMAT_SELECT_ID, 
    "format_select", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.format_select:\n\r"
    "  uint32 format_select\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_b_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 otm_port2 0 cud3 0 multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_TBL_DATA_CUD2_ID, 
    "cud2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cud2:\n\r"
    "  uint32 cud2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_b_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 otm_port2 0 cud3 0 multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_TBL_DATA_OTM_PORT2_ID, 
    "otm_port2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.otm_port2:\n\r"
    "  uint32 otm_port2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_b_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 otm_port2 0 cud3 0 multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_TBL_DATA_CUD3_ID, 
    "cud3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cud3:\n\r"
    "  uint32 cud3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_b_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 otm_port2 0 cud3 0 multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_TBL_DATA_MULTICAST_BITMAP_PTR3_ID, 
    "multicast_bitmap_ptr3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.multicast_bitmap_ptr3:\n\r"
    "  uint32 multicast_bitmap_ptr3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_b_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 otm_port2 0 cud3 0 multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_IRR_MCDB_EGRESS_FORMAT_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_GET_IRR_MCDB_EGRESS_FORMAT_B_TBL_GET_ID, 
    "irr_mcdb_egress_format_b_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_b_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_B_TBL_GET_IRR_MCDB_EGRESS_FORMAT_B_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_ID, 
    "irr_mcdb_egress_format_c_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_c_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 multicast_bitmap_ptr2 0 cud3 0\n\r"
    "  multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_TBL_DATA_LINK_PTR_ID, 
    "link_ptr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.link_ptr:\n\r"
    "  uint32 link_ptr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_c_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 multicast_bitmap_ptr2 0 cud3 0\n\r"
    "  multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_TBL_DATA_FORMAT_SELECT_ID, 
    "format_select", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.format_select:\n\r"
    "  uint32 format_select\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_c_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 multicast_bitmap_ptr2 0 cud3 0\n\r"
    "  multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_TBL_DATA_CUD2_ID, 
    "cud2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cud2:\n\r"
    "  uint32 cud2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_c_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 multicast_bitmap_ptr2 0 cud3 0\n\r"
    "  multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_TBL_DATA_MULTICAST_BITMAP_PTR2_ID, 
    "multicast_bitmap_ptr2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.multicast_bitmap_ptr2:\n\r"
    "  uint32 multicast_bitmap_ptr2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_c_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 multicast_bitmap_ptr2 0 cud3 0\n\r"
    "  multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_TBL_DATA_CUD3_ID, 
    "cud3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cud3:\n\r"
    "  uint32 cud3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_c_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 multicast_bitmap_ptr2 0 cud3 0\n\r"
    "  multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_TBL_DATA_MULTICAST_BITMAP_PTR3_ID, 
    "multicast_bitmap_ptr3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.multicast_bitmap_ptr3:\n\r"
    "  uint32 multicast_bitmap_ptr3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_c_tbl_set entry_offset_ndx 0\n\r"
    "  link_ptr 0 format_select 0 cud2 0 multicast_bitmap_ptr2 0 cud3 0\n\r"
    "  multicast_bitmap_ptr3 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_IRR_MCDB_EGRESS_FORMAT_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_GET_IRR_MCDB_EGRESS_FORMAT_C_TBL_GET_ID, 
    "irr_mcdb_egress_format_c_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcdb_egress_format_c_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCDB_EGRESS_FORMAT_C_TBL_GET_IRR_MCDB_EGRESS_FORMAT_C_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_ID, 
    "irr_snoop_mirror_table0_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table0_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_ow 0 dp 0 tc_ow 0 tc 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table0_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_ow 0 dp 0 tc_ow 0 tc 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_TBL_DATA_DP_OW_ID, 
    "dp_ow", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.dp_ow:\n\r"
    "  uint32 dp_ow\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table0_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_ow 0 dp 0 tc_ow 0 tc 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_TBL_DATA_DP_ID, 
    "dp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.dp:\n\r"
    "  uint32 dp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table0_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_ow 0 dp 0 tc_ow 0 tc 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_TBL_DATA_TC_OW_ID, 
    "tc_ow", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc_ow:\n\r"
    "  uint32 tc_ow\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table0_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_ow 0 dp 0 tc_ow 0 tc 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_TBL_DATA_TC_ID, 
    "tc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc:\n\r"
    "  uint32 tc\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table0_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_ow 0 dp 0 tc_ow 0 tc 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_TBL_DATA_DESTINATION_ID, 
    "destination", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination:\n\r"
    "  uint32 destination\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table0_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_ow 0 dp 0 tc_ow 0 tc 0 destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_IRR_SNOOP_MIRROR_TABLE0_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_GET_IRR_SNOOP_MIRROR_TABLE0_TBL_GET_ID, 
    "irr_snoop_mirror_table0_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table0_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE0_TBL_GET_IRR_SNOOP_MIRROR_TABLE0_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID, 
    "irr_snoop_mirror_table1_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_cmd_ow 0 dp_cmd 0 counter_ptr1_ow 0 counter_ptr1 0 counter_ptr0_ow 0\n\r"
    "  counter_ptr0 0 meter_ptr1_ow 0 meter_ptr1 0 meter_ptr0_ow 0 meter_ptr0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_cmd_ow 0 dp_cmd 0 counter_ptr1_ow 0 counter_ptr1 0 counter_ptr0_ow 0\n\r"
    "  counter_ptr0 0 meter_ptr1_ow 0 meter_ptr1 0 meter_ptr0_ow 0 meter_ptr0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_TBL_DATA_DP_CMD_OW_ID, 
    "dp_cmd_ow", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.dp_cmd_ow:\n\r"
    "  uint32 dp_cmd_ow\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_cmd_ow 0 dp_cmd 0 counter_ptr1_ow 0 counter_ptr1 0 counter_ptr0_ow 0\n\r"
    "  counter_ptr0 0 meter_ptr1_ow 0 meter_ptr1 0 meter_ptr0_ow 0 meter_ptr0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_TBL_DATA_DP_CMD_ID, 
    "dp_cmd", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.dp_cmd:\n\r"
    "  uint32 dp_cmd\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_cmd_ow 0 dp_cmd 0 counter_ptr1_ow 0 counter_ptr1 0 counter_ptr0_ow 0\n\r"
    "  counter_ptr0 0 meter_ptr1_ow 0 meter_ptr1 0 meter_ptr0_ow 0 meter_ptr0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_TBL_DATA_COUNTER_PTR1_OW_ID, 
    "counter_ptr1_ow", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.counter_ptr1_ow:\n\r"
    "  uint32 counter_ptr1_ow\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_cmd_ow 0 dp_cmd 0 counter_ptr1_ow 0 counter_ptr1 0 counter_ptr0_ow 0\n\r"
    "  counter_ptr0 0 meter_ptr1_ow 0 meter_ptr1 0 meter_ptr0_ow 0 meter_ptr0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_TBL_DATA_COUNTER_PTR1_ID, 
    "counter_ptr1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.counter_ptr1:\n\r"
    "  uint32 counter_ptr1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_cmd_ow 0 dp_cmd 0 counter_ptr1_ow 0 counter_ptr1 0 counter_ptr0_ow 0\n\r"
    "  counter_ptr0 0 meter_ptr1_ow 0 meter_ptr1 0 meter_ptr0_ow 0 meter_ptr0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_TBL_DATA_COUNTER_PTR0_OW_ID, 
    "counter_ptr0_ow", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.counter_ptr0_ow:\n\r"
    "  uint32 counter_ptr0_ow\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_cmd_ow 0 dp_cmd 0 counter_ptr1_ow 0 counter_ptr1 0 counter_ptr0_ow 0\n\r"
    "  counter_ptr0 0 meter_ptr1_ow 0 meter_ptr1 0 meter_ptr0_ow 0 meter_ptr0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_TBL_DATA_COUNTER_PTR0_ID, 
    "counter_ptr0", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.counter_ptr0:\n\r"
    "  uint32 counter_ptr0\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_cmd_ow 0 dp_cmd 0 counter_ptr1_ow 0 counter_ptr1 0 counter_ptr0_ow 0\n\r"
    "  counter_ptr0 0 meter_ptr1_ow 0 meter_ptr1 0 meter_ptr0_ow 0 meter_ptr0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_TBL_DATA_METER_PTR1_OW_ID, 
    "meter_ptr1_ow", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.meter_ptr1_ow:\n\r"
    "  uint32 meter_ptr1_ow\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_cmd_ow 0 dp_cmd 0 counter_ptr1_ow 0 counter_ptr1 0 counter_ptr0_ow 0\n\r"
    "  counter_ptr0 0 meter_ptr1_ow 0 meter_ptr1 0 meter_ptr0_ow 0 meter_ptr0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_TBL_DATA_METER_PTR1_ID, 
    "meter_ptr1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.meter_ptr1:\n\r"
    "  uint32 meter_ptr1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_cmd_ow 0 dp_cmd 0 counter_ptr1_ow 0 counter_ptr1 0 counter_ptr0_ow 0\n\r"
    "  counter_ptr0 0 meter_ptr1_ow 0 meter_ptr1 0 meter_ptr0_ow 0 meter_ptr0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_TBL_DATA_METER_PTR0_OW_ID, 
    "meter_ptr0_ow", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.meter_ptr0_ow:\n\r"
    "  uint32 meter_ptr0_ow\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_cmd_ow 0 dp_cmd 0 counter_ptr1_ow 0 counter_ptr1 0 counter_ptr0_ow 0\n\r"
    "  counter_ptr0 0 meter_ptr1_ow 0 meter_ptr1 0 meter_ptr0_ow 0 meter_ptr0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_TBL_DATA_METER_PTR0_ID, 
    "meter_ptr0", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.meter_ptr0:\n\r"
    "  uint32 meter_ptr0\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_set entry_offset_ndx 0 parity\n\r"
    "  0 dp_cmd_ow 0 dp_cmd 0 counter_ptr1_ow 0 counter_ptr1 0 counter_ptr0_ow 0\n\r"
    "  counter_ptr0 0 meter_ptr1_ow 0 meter_ptr1 0 meter_ptr0_ow 0 meter_ptr0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_IRR_SNOOP_MIRROR_TABLE1_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_GET_IRR_SNOOP_MIRROR_TABLE1_TBL_GET_ID, 
    "irr_snoop_mirror_table1_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_snoop_mirror_table1_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SNOOP_MIRROR_TABLE1_TBL_GET_IRR_SNOOP_MIRROR_TABLE1_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_FREE_PCB_MEMORY_TBL_SET_IRR_FREE_PCB_MEMORY_TBL_SET_ID, 
    "irr_free_pcb_memory_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_free_pcb_memory_tbl_set entry_offset_ndx 0 pcp 0 ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_FREE_PCB_MEMORY_TBL_SET_IRR_FREE_PCB_MEMORY_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_FREE_PCB_MEMORY_TBL_SET_IRR_FREE_PCB_MEMORY_TBL_SET_TBL_DATA_PCP_ID, 
    "pcp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pcp:\n\r"
    "  uint32 pcp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_free_pcb_memory_tbl_set entry_offset_ndx 0 pcp 0 ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_FREE_PCB_MEMORY_TBL_SET_IRR_FREE_PCB_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_FREE_PCB_MEMORY_TBL_SET_IRR_FREE_PCB_MEMORY_TBL_SET_TBL_DATA_ECC_ID, 
    "ecc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ecc:\n\r"
    "  uint32 ecc\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_free_pcb_memory_tbl_set entry_offset_ndx 0 pcp 0 ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_FREE_PCB_MEMORY_TBL_SET_IRR_FREE_PCB_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_FREE_PCB_MEMORY_TBL_GET_IRR_FREE_PCB_MEMORY_TBL_GET_ID, 
    "irr_free_pcb_memory_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_free_pcb_memory_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_FREE_PCB_MEMORY_TBL_GET_IRR_FREE_PCB_MEMORY_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_PCB_LINK_TABLE_TBL_SET_IRR_PCB_LINK_TABLE_TBL_SET_ID, 
    "irr_pcb_link_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_pcb_link_table_tbl_set entry_offset_ndx 0 pcp 0 ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_PCB_LINK_TABLE_TBL_SET_IRR_PCB_LINK_TABLE_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_PCB_LINK_TABLE_TBL_SET_IRR_PCB_LINK_TABLE_TBL_SET_TBL_DATA_PCP_ID, 
    "pcp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pcp:\n\r"
    "  uint32 pcp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_pcb_link_table_tbl_set entry_offset_ndx 0 pcp 0 ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_PCB_LINK_TABLE_TBL_SET_IRR_PCB_LINK_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_PCB_LINK_TABLE_TBL_SET_IRR_PCB_LINK_TABLE_TBL_SET_TBL_DATA_ECC_ID, 
    "ecc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ecc:\n\r"
    "  uint32 ecc\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_pcb_link_table_tbl_set entry_offset_ndx 0 pcp 0 ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_PCB_LINK_TABLE_TBL_SET_IRR_PCB_LINK_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_PCB_LINK_TABLE_TBL_GET_IRR_PCB_LINK_TABLE_TBL_GET_ID, 
    "irr_pcb_link_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_pcb_link_table_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_PCB_LINK_TABLE_TBL_GET_IRR_PCB_LINK_TABLE_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IS_FREE_PCB_MEMORY_TBL_SET_IRR_IS_FREE_PCB_MEMORY_TBL_SET_ID, 
    "irr_is_free_pcb_memory_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_is_free_pcb_memory_tbl_set entry_offset_ndx 0 is_pcp\n\r"
    "  0 ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IS_FREE_PCB_MEMORY_TBL_SET_IRR_IS_FREE_PCB_MEMORY_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IS_FREE_PCB_MEMORY_TBL_SET_IRR_IS_FREE_PCB_MEMORY_TBL_SET_TBL_DATA_IS_PCP_ID, 
    "is_pcp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.is_pcp:\n\r"
    "  uint32 is_pcp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_is_free_pcb_memory_tbl_set entry_offset_ndx 0 is_pcp\n\r"
    "  0 ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IS_FREE_PCB_MEMORY_TBL_SET_IRR_IS_FREE_PCB_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IS_FREE_PCB_MEMORY_TBL_SET_IRR_IS_FREE_PCB_MEMORY_TBL_SET_TBL_DATA_ECC_ID, 
    "ecc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ecc:\n\r"
    "  uint32 ecc\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_is_free_pcb_memory_tbl_set entry_offset_ndx 0 is_pcp\n\r"
    "  0 ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IS_FREE_PCB_MEMORY_TBL_SET_IRR_IS_FREE_PCB_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IS_FREE_PCB_MEMORY_TBL_GET_IRR_IS_FREE_PCB_MEMORY_TBL_GET_ID, 
    "irr_is_free_pcb_memory_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_is_free_pcb_memory_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IS_FREE_PCB_MEMORY_TBL_GET_IRR_IS_FREE_PCB_MEMORY_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IS_PCB_LINK_TABLE_TBL_SET_IRR_IS_PCB_LINK_TABLE_TBL_SET_ID, 
    "irr_is_pcb_link_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_is_pcb_link_table_tbl_set entry_offset_ndx 0 is_pcp 0\n\r"
    "  ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IS_PCB_LINK_TABLE_TBL_SET_IRR_IS_PCB_LINK_TABLE_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IS_PCB_LINK_TABLE_TBL_SET_IRR_IS_PCB_LINK_TABLE_TBL_SET_TBL_DATA_IS_PCP_ID, 
    "is_pcp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.is_pcp:\n\r"
    "  uint32 is_pcp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_is_pcb_link_table_tbl_set entry_offset_ndx 0 is_pcp 0\n\r"
    "  ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IS_PCB_LINK_TABLE_TBL_SET_IRR_IS_PCB_LINK_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IS_PCB_LINK_TABLE_TBL_SET_IRR_IS_PCB_LINK_TABLE_TBL_SET_TBL_DATA_ECC_ID, 
    "ecc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ecc:\n\r"
    "  uint32 ecc\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_is_pcb_link_table_tbl_set entry_offset_ndx 0 is_pcp 0\n\r"
    "  ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IS_PCB_LINK_TABLE_TBL_SET_IRR_IS_PCB_LINK_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_IS_PCB_LINK_TABLE_TBL_GET_IRR_IS_PCB_LINK_TABLE_TBL_GET_ID, 
    "irr_is_pcb_link_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_is_pcb_link_table_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_IS_PCB_LINK_TABLE_TBL_GET_IRR_IS_PCB_LINK_TABLE_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_RPF_MEMORY_TBL_SET_IRR_RPF_MEMORY_TBL_SET_ID, 
    "irr_rpf_memory_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_rpf_memory_tbl_set entry_offset_ndx 0 pointer 0 ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_RPF_MEMORY_TBL_SET_IRR_RPF_MEMORY_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_RPF_MEMORY_TBL_SET_IRR_RPF_MEMORY_TBL_SET_TBL_DATA_POINTER_ID, 
    "pointer", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pointer:\n\r"
    "  uint32 pointer\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_rpf_memory_tbl_set entry_offset_ndx 0 pointer 0 ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_RPF_MEMORY_TBL_SET_IRR_RPF_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_RPF_MEMORY_TBL_SET_IRR_RPF_MEMORY_TBL_SET_TBL_DATA_ECC_ID, 
    "ecc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ecc:\n\r"
    "  uint32 ecc\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_rpf_memory_tbl_set entry_offset_ndx 0 pointer 0 ecc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_RPF_MEMORY_TBL_SET_IRR_RPF_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_RPF_MEMORY_TBL_GET_IRR_RPF_MEMORY_TBL_GET_ID, 
    "irr_rpf_memory_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_rpf_memory_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_RPF_MEMORY_TBL_GET_IRR_RPF_MEMORY_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCR_MEMORY_TBL_SET_IRR_MCR_MEMORY_TBL_SET_ID, 
    "irr_mcr_memory_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcr_memory_tbl_set entry_offset_ndx 0 ecc 0\n\r"
    "  descriptor_index 0 descriptor 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCR_MEMORY_TBL_SET_IRR_MCR_MEMORY_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCR_MEMORY_TBL_SET_IRR_MCR_MEMORY_TBL_SET_TBL_DATA_ECC_ID, 
    "ecc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ecc:\n\r"
    "  uint32 ecc\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcr_memory_tbl_set entry_offset_ndx 0 ecc 0\n\r"
    "  descriptor_index 0 descriptor 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCR_MEMORY_TBL_SET_IRR_MCR_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCR_MEMORY_TBL_SET_IRR_MCR_MEMORY_TBL_SET_TBL_DATA_DESCRIPTOR_INDEX_ID, 
    "descriptor_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  descriptor_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcr_memory_tbl_set entry_offset_ndx 0 ecc 0\n\r"
    "  descriptor_index 0 descriptor 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCR_MEMORY_TBL_SET_IRR_MCR_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCR_MEMORY_TBL_SET_IRR_MCR_MEMORY_TBL_SET_TBL_DATA_DESCRIPTOR_ID, 
    "descriptor", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.descriptor[ prm_descriptor_index]:\n\r"
    "  uint32 descriptor[3]\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcr_memory_tbl_set entry_offset_ndx 0 ecc 0\n\r"
    "  descriptor_index 0 descriptor 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCR_MEMORY_TBL_SET_IRR_MCR_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_MCR_MEMORY_TBL_GET_IRR_MCR_MEMORY_TBL_GET_ID, 
    "irr_mcr_memory_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_mcr_memory_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_MCR_MEMORY_TBL_GET_IRR_MCR_MEMORY_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_ISF_MEMORY_TBL_SET_IRR_ISF_MEMORY_TBL_SET_ID, 
    "irr_isf_memory_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_isf_memory_tbl_set entry_offset_ndx 0 ecc 0\n\r"
    "  descriptor_index 0 descriptor 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_ISF_MEMORY_TBL_SET_IRR_ISF_MEMORY_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_ISF_MEMORY_TBL_SET_IRR_ISF_MEMORY_TBL_SET_TBL_DATA_ECC_ID, 
    "ecc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ecc:\n\r"
    "  uint32 ecc\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_isf_memory_tbl_set entry_offset_ndx 0 ecc 0\n\r"
    "  descriptor_index 0 descriptor 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_ISF_MEMORY_TBL_SET_IRR_ISF_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_ISF_MEMORY_TBL_SET_IRR_ISF_MEMORY_TBL_SET_TBL_DATA_DESCRIPTOR_INDEX_ID, 
    "descriptor_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  descriptor_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_isf_memory_tbl_set entry_offset_ndx 0 ecc 0\n\r"
    "  descriptor_index 0 descriptor 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_ISF_MEMORY_TBL_SET_IRR_ISF_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_ISF_MEMORY_TBL_SET_IRR_ISF_MEMORY_TBL_SET_TBL_DATA_DESCRIPTOR_ID, 
    "descriptor", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.descriptor[ prm_descriptor_index]:\n\r"
    "  uint32 descriptor[2]\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_isf_memory_tbl_set entry_offset_ndx 0 ecc 0\n\r"
    "  descriptor_index 0 descriptor 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_ISF_MEMORY_TBL_SET_IRR_ISF_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_ISF_MEMORY_TBL_GET_IRR_ISF_MEMORY_TBL_GET_ID, 
    "irr_isf_memory_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_isf_memory_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_ISF_MEMORY_TBL_GET_IRR_ISF_MEMORY_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_DESTINATION_TABLE_TBL_SET_IRR_DESTINATION_TABLE_TBL_SET_ID, 
    "irr_destination_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_destination_table_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  tc_profile 0 queue_valid 0 queue_number 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_DESTINATION_TABLE_TBL_SET_IRR_DESTINATION_TABLE_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_DESTINATION_TABLE_TBL_SET_IRR_DESTINATION_TABLE_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_destination_table_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  tc_profile 0 queue_valid 0 queue_number 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_DESTINATION_TABLE_TBL_SET_IRR_DESTINATION_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_DESTINATION_TABLE_TBL_SET_IRR_DESTINATION_TABLE_TBL_SET_TBL_DATA_TC_PROFILE_ID, 
    "tc_profile", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tc_profile:\n\r"
    "  uint32 tc_profile\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_destination_table_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  tc_profile 0 queue_valid 0 queue_number 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_DESTINATION_TABLE_TBL_SET_IRR_DESTINATION_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_DESTINATION_TABLE_TBL_SET_IRR_DESTINATION_TABLE_TBL_SET_TBL_DATA_QUEUE_VALID_ID, 
    "queue_valid", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.queue_valid:\n\r"
    "  uint32 queue_valid\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_destination_table_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  tc_profile 0 queue_valid 0 queue_number 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_DESTINATION_TABLE_TBL_SET_IRR_DESTINATION_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_DESTINATION_TABLE_TBL_SET_IRR_DESTINATION_TABLE_TBL_SET_TBL_DATA_QUEUE_NUMBER_ID, 
    "queue_number", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.queue_number:\n\r"
    "  uint32 queue_number\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_destination_table_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  tc_profile 0 queue_valid 0 queue_number 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_DESTINATION_TABLE_TBL_SET_IRR_DESTINATION_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_DESTINATION_TABLE_TBL_GET_IRR_DESTINATION_TABLE_TBL_GET_ID, 
    "irr_destination_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_destination_table_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_DESTINATION_TABLE_TBL_GET_IRR_DESTINATION_TABLE_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_TO_LAG_RANGE_TBL_SET_IRR_LAG_TO_LAG_RANGE_TBL_SET_ID, 
    "irr_lag_to_lag_range_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_to_lag_range_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  mode 0 range 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_TO_LAG_RANGE_TBL_SET_IRR_LAG_TO_LAG_RANGE_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_TO_LAG_RANGE_TBL_SET_IRR_LAG_TO_LAG_RANGE_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_to_lag_range_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  mode 0 range 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_TO_LAG_RANGE_TBL_SET_IRR_LAG_TO_LAG_RANGE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_TO_LAG_RANGE_TBL_SET_IRR_LAG_TO_LAG_RANGE_TBL_SET_TBL_DATA_MODE_ID, 
    "mode", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mode:\n\r"
    "  uint32 mode\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_to_lag_range_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  mode 0 range 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_TO_LAG_RANGE_TBL_SET_IRR_LAG_TO_LAG_RANGE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_TO_LAG_RANGE_TBL_SET_IRR_LAG_TO_LAG_RANGE_TBL_SET_TBL_DATA_RANGE_ID, 
    "range", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.range:\n\r"
    "  uint32 range\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_to_lag_range_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  mode 0 range 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_TO_LAG_RANGE_TBL_SET_IRR_LAG_TO_LAG_RANGE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_TO_LAG_RANGE_TBL_GET_IRR_LAG_TO_LAG_RANGE_TBL_GET_ID, 
    "irr_lag_to_lag_range_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_to_lag_range_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_TO_LAG_RANGE_TBL_GET_IRR_LAG_TO_LAG_RANGE_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_MAPPING_TBL_SET_IRR_LAG_MAPPING_TBL_SET_ID, 
    "irr_lag_mapping_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_mapping_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_MAPPING_TBL_SET_IRR_LAG_MAPPING_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_MAPPING_TBL_SET_IRR_LAG_MAPPING_TBL_SET_MEMBER_ID, 
    "member", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_mapping_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_MAPPING_TBL_SET_IRR_LAG_MAPPING_TBL_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_MAPPING_TBL_SET_IRR_LAG_MAPPING_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_mapping_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_MAPPING_TBL_SET_IRR_LAG_MAPPING_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_MAPPING_TBL_SET_IRR_LAG_MAPPING_TBL_SET_TBL_DATA_DESTINATION_ID, 
    "destination", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.destination:\n\r"
    "  uint32 destination\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_mapping_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_MAPPING_TBL_SET_IRR_LAG_MAPPING_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_MAPPING_TBL_GET_IRR_LAG_MAPPING_TBL_GET_ID, 
    "irr_lag_mapping_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_mapping_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_MAPPING_TBL_GET_IRR_LAG_MAPPING_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_MAPPING_TBL_GET_IRR_LAG_MAPPING_TBL_GET_MEMBER_ID, 
    "member", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_mapping_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  destination 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_MAPPING_TBL_GET_IRR_LAG_MAPPING_TBL_GET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_NEXT_MEMBER_TBL_SET_IRR_LAG_NEXT_MEMBER_TBL_SET_ID, 
    "irr_lag_next_member_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_next_member_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_NEXT_MEMBER_TBL_SET_IRR_LAG_NEXT_MEMBER_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_NEXT_MEMBER_TBL_SET_IRR_LAG_NEXT_MEMBER_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_next_member_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_NEXT_MEMBER_TBL_SET_IRR_LAG_NEXT_MEMBER_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_NEXT_MEMBER_TBL_SET_IRR_LAG_NEXT_MEMBER_TBL_SET_TBL_DATA_OFFSET_ID, 
    "offset", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.offset:\n\r"
    "  uint32 offset\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_next_member_tbl_set entry_offset_ndx 0 parity 0\n\r"
    "  offset 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_NEXT_MEMBER_TBL_SET_IRR_LAG_NEXT_MEMBER_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_LAG_NEXT_MEMBER_TBL_GET_IRR_LAG_NEXT_MEMBER_TBL_GET_ID, 
    "irr_lag_next_member_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_lag_next_member_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_LAG_NEXT_MEMBER_TBL_GET_IRR_LAG_NEXT_MEMBER_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SMOOTH_DIVISION_TBL_SET_IRR_SMOOTH_DIVISION_TBL_SET_ID, 
    "irr_smooth_division_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_smooth_division_tbl_set lag_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SMOOTH_DIVISION_TBL_SET_IRR_SMOOTH_DIVISION_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SMOOTH_DIVISION_TBL_SET_IRR_SMOOTH_DIVISION_TBL_SET_LAG_SIZE_ID, 
    "lag_size", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lag_size:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  lag_size\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_smooth_division_tbl_set lag_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SMOOTH_DIVISION_TBL_SET_IRR_SMOOTH_DIVISION_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SMOOTH_DIVISION_TBL_SET_IRR_SMOOTH_DIVISION_TBL_SET_HASH_VAL_ID, 
    "hash_val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  hash_val:\n\r"
    "  SOC_SAND_IN\n\r"
    "  uint32\n\r"
    "  hash_val\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_smooth_division_tbl_set lag_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SMOOTH_DIVISION_TBL_SET_IRR_SMOOTH_DIVISION_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SMOOTH_DIVISION_TBL_SET_IRR_SMOOTH_DIVISION_TBL_SET_TBL_DATA_PARITY_ID, 
    "parity", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.parity:\n\r"
    "  uint32 parity\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_smooth_division_tbl_set lag_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SMOOTH_DIVISION_TBL_SET_IRR_SMOOTH_DIVISION_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SMOOTH_DIVISION_TBL_SET_IRR_SMOOTH_DIVISION_TBL_SET_TBL_DATA_MEMBER_ID, 
    "member", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.member:\n\r"
    "  uint32 member\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_smooth_division_tbl_set lag_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SMOOTH_DIVISION_TBL_SET_IRR_SMOOTH_DIVISION_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_SMOOTH_DIVISION_TBL_GET_IRR_SMOOTH_DIVISION_TBL_GET_ID, 
    "irr_smooth_division_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_smooth_division_tbl_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_SMOOTH_DIVISION_TBL_GET_IRR_SMOOTH_DIVISION_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_TRAFFIC_CLASS_MAPPING_TBL_SET_IRR_TRAFFIC_CLASS_MAPPING_TBL_SET_ID, 
    "irr_traffic_class_mapping_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_traffic_class_mapping_tbl_set entry_offset_ndx 0\n\r"
    "  traffic_class_mapping_index 0 traffic_class_mapping 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_TRAFFIC_CLASS_MAPPING_TBL_SET_IRR_TRAFFIC_CLASS_MAPPING_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_TRAFFIC_CLASS_MAPPING_TBL_SET_IRR_TRAFFIC_CLASS_MAPPING_TBL_SET_TBL_DATA_TRAFFIC_CLASS_MAPPING_INDEX_ID, 
    "traffic_class_mapping_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  traffic_class_mapping_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_traffic_class_mapping_tbl_set entry_offset_ndx 0\n\r"
    "  traffic_class_mapping_index 0 traffic_class_mapping 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_TRAFFIC_CLASS_MAPPING_TBL_SET_IRR_TRAFFIC_CLASS_MAPPING_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_TRAFFIC_CLASS_MAPPING_TBL_SET_IRR_TRAFFIC_CLASS_MAPPING_TBL_SET_TBL_DATA_TRAFFIC_CLASS_MAPPING_ID, 
    "traffic_class_mapping", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.traffic_class_mapping[ prm_traffic_class_mapping_index]:\n\r"
    "  uint32 traffic_class_mapping[SOC_PETRA_NOF_TRAFFIC_CLASSES]\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_traffic_class_mapping_tbl_set entry_offset_ndx 0\n\r"
    "  traffic_class_mapping_index 0 traffic_class_mapping 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_TRAFFIC_CLASS_MAPPING_TBL_SET_IRR_TRAFFIC_CLASS_MAPPING_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IRR_TRAFFIC_CLASS_MAPPING_TBL_GET_IRR_TRAFFIC_CLASS_MAPPING_TBL_GET_ID, 
    "irr_traffic_class_mapping_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc irr_traffic_class_mapping_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IRR_TRAFFIC_CLASS_MAPPING_TBL_GET_IRR_TRAFFIC_CLASS_MAPPING_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_ID, 
    "ihp_port_mine_table_lag_port_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_port_mine_table_lag_port_tbl_set entry_offset_ndx 0\n\r"
    "  lag_port_mine3 0 lag_port_mine2 0 lag_port_mine1 0 lag_port_mine0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_TBL_DATA_LAG_PORT_MINE3_ID, 
    "lag_port_mine3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lag_port_mine3:\n\r"
    "  uint32 lag_port_mine3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_port_mine_table_lag_port_tbl_set entry_offset_ndx 0\n\r"
    "  lag_port_mine3 0 lag_port_mine2 0 lag_port_mine1 0 lag_port_mine0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_TBL_DATA_LAG_PORT_MINE2_ID, 
    "lag_port_mine2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lag_port_mine2:\n\r"
    "  uint32 lag_port_mine2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_port_mine_table_lag_port_tbl_set entry_offset_ndx 0\n\r"
    "  lag_port_mine3 0 lag_port_mine2 0 lag_port_mine1 0 lag_port_mine0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_TBL_DATA_LAG_PORT_MINE1_ID, 
    "lag_port_mine1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lag_port_mine1:\n\r"
    "  uint32 lag_port_mine1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_port_mine_table_lag_port_tbl_set entry_offset_ndx 0\n\r"
    "  lag_port_mine3 0 lag_port_mine2 0 lag_port_mine1 0 lag_port_mine0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_TBL_DATA_LAG_PORT_MINE0_ID, 
    "lag_port_mine0", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.lag_port_mine0:\n\r"
    "  uint32 lag_port_mine0\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_port_mine_table_lag_port_tbl_set entry_offset_ndx 0\n\r"
    "  lag_port_mine3 0 lag_port_mine2 0 lag_port_mine1 0 lag_port_mine0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_GET_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_GET_ID, 
    "ihp_port_mine_table_lag_port_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_port_mine_table_lag_port_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_GET_IHP_PORT_MINE_TABLE_LAG_PORT_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_ID, 
    "ihp_tm_port_pp_port_config_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_pp_port_config_tbl_set entry_offset_ndx 0\n\r"
    "  pp_port_use_offset_directly 0 pp_port_profile 0 pp_port_offset2 0\n\r"
    "  pp_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_TBL_DATA_PP_PORT_USE_OFFSET_DIRECTLY_ID, 
    "pp_port_use_offset_directly", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_use_offset_directly:\n\r"
    "  uint32 pp_port_use_offset_directly\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_pp_port_config_tbl_set entry_offset_ndx 0\n\r"
    "  pp_port_use_offset_directly 0 pp_port_profile 0 pp_port_offset2 0\n\r"
    "  pp_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_TBL_DATA_PP_PORT_PROFILE_ID, 
    "pp_port_profile", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_profile:\n\r"
    "  uint32 pp_port_profile\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_pp_port_config_tbl_set entry_offset_ndx 0\n\r"
    "  pp_port_use_offset_directly 0 pp_port_profile 0 pp_port_offset2 0\n\r"
    "  pp_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_TBL_DATA_PP_PORT_OFFSET2_ID, 
    "pp_port_offset2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_offset2:\n\r"
    "  uint32 pp_port_offset2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_pp_port_config_tbl_set entry_offset_ndx 0\n\r"
    "  pp_port_use_offset_directly 0 pp_port_profile 0 pp_port_offset2 0\n\r"
    "  pp_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_TBL_DATA_PP_PORT_OFFSET1_ID, 
    "pp_port_offset1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_offset1:\n\r"
    "  uint32 pp_port_offset1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_pp_port_config_tbl_set entry_offset_ndx 0\n\r"
    "  pp_port_use_offset_directly 0 pp_port_profile 0 pp_port_offset2 0\n\r"
    "  pp_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_IHP_TM_PORT_PP_PORT_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_PP_PORT_CONFIG_TBL_GET_IHP_TM_PORT_PP_PORT_CONFIG_TBL_GET_ID, 
    "ihp_tm_port_pp_port_config_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_pp_port_config_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_PP_PORT_CONFIG_TBL_GET_IHP_TM_PORT_PP_PORT_CONFIG_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_ID, 
    "ihp_tm_port_sys_port_config_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_sys_port_config_tbl_set entry_offset_ndx 0\n\r"
    "  system_port_value_to_use 0 system_port_profile 0 system_port_value 0\n\r"
    "  system_port_offset2 0 system_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_TBL_DATA_SYSTEM_PORT_VALUE_TO_USE_ID, 
    "system_port_value_to_use", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.system_port_value_to_use:\n\r"
    "  uint32 system_port_value_to_use\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_sys_port_config_tbl_set entry_offset_ndx 0\n\r"
    "  system_port_value_to_use 0 system_port_profile 0 system_port_value 0\n\r"
    "  system_port_offset2 0 system_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_TBL_DATA_SYSTEM_PORT_PROFILE_ID, 
    "system_port_profile", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.system_port_profile:\n\r"
    "  uint32 system_port_profile\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_sys_port_config_tbl_set entry_offset_ndx 0\n\r"
    "  system_port_value_to_use 0 system_port_profile 0 system_port_value 0\n\r"
    "  system_port_offset2 0 system_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_TBL_DATA_SYSTEM_PORT_VALUE_ID, 
    "system_port_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.system_port_value:\n\r"
    "  uint32 system_port_value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_sys_port_config_tbl_set entry_offset_ndx 0\n\r"
    "  system_port_value_to_use 0 system_port_profile 0 system_port_value 0\n\r"
    "  system_port_offset2 0 system_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_TBL_DATA_SYSTEM_PORT_OFFSET2_ID, 
    "system_port_offset2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.system_port_offset2:\n\r"
    "  uint32 system_port_offset2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_sys_port_config_tbl_set entry_offset_ndx 0\n\r"
    "  system_port_value_to_use 0 system_port_profile 0 system_port_value 0\n\r"
    "  system_port_offset2 0 system_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_TBL_DATA_SYSTEM_PORT_OFFSET1_ID, 
    "system_port_offset1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.system_port_offset1:\n\r"
    "  uint32 system_port_offset1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_sys_port_config_tbl_set entry_offset_ndx 0\n\r"
    "  system_port_value_to_use 0 system_port_profile 0 system_port_value 0\n\r"
    "  system_port_offset2 0 system_port_offset1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_GET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_GET_ID, 
    "ihp_tm_port_sys_port_config_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_tm_port_sys_port_config_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_GET_IHP_TM_PORT_SYS_PORT_CONFIG_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_PP_PORT_INFO_TBL_SET_IHP_PP_PORT_INFO_TBL_SET_ID, 
    "ihp_pp_port_info_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_pp_port_info_tbl_set entry_offset_ndx 0\n\r"
    "  outer_header_start 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_PP_PORT_INFO_TBL_SET_IHP_PP_PORT_INFO_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_PP_PORT_INFO_TBL_SET_IHP_PP_PORT_INFO_TBL_SET_TBL_DATA_OUTER_HEADER_START_ID, 
    "outer_header_start", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.outer_header_start:\n\r"
    "  uint32 outer_header_start\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_pp_port_info_tbl_set entry_offset_ndx 0\n\r"
    "  outer_header_start 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_PP_PORT_INFO_TBL_SET_IHP_PP_PORT_INFO_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_PP_PORT_INFO_TBL_GET_IHP_PP_PORT_INFO_TBL_GET_ID, 
    "ihp_pp_port_info_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_pp_port_info_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_PP_PORT_INFO_TBL_GET_IHP_PP_PORT_INFO_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_PP_PORT_VALUES_TBL_SET_IHP_PP_PORT_VALUES_TBL_SET_ID, 
    "ihp_pp_port_values_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_pp_port_values_tbl_set entry_offset_ndx 0\n\r"
    "  pp_port_system_port_value 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_PP_PORT_VALUES_TBL_SET_IHP_PP_PORT_VALUES_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_PP_PORT_VALUES_TBL_SET_IHP_PP_PORT_VALUES_TBL_SET_TBL_DATA_PP_PORT_SYSTEM_PORT_VALUE_ID, 
    "pp_port_system_port_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pp_port_system_port_value:\n\r"
    "  uint32 pp_port_system_port_value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_pp_port_values_tbl_set entry_offset_ndx 0\n\r"
    "  pp_port_system_port_value 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_PP_PORT_VALUES_TBL_SET_IHP_PP_PORT_VALUES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IHP_PP_PORT_VALUES_TBL_GET_IHP_PP_PORT_VALUES_TBL_GET_ID, 
    "ihp_pp_port_values_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc ihp_pp_port_values_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IHP_PP_PORT_VALUES_TBL_GET_IHP_PP_PORT_VALUES_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_QDR_QDR_MEM_TBL_SET_QDR_QDR_MEM_TBL_SET_ID, 
    "qdr_qdr_mem_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc qdr_qdr_mem_tbl_set entry_offset_ndx 0 qdr_mem 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_QDR_QDR_MEM_TBL_SET_QDR_QDR_MEM_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_QDR_QDR_MEM_TBL_SET_QDR_QDR_MEM_TBL_SET_TBL_DATA_QDR_MEM_ID, 
    "qdr_mem", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qdr_mem:\n\r"
    "  uint32 qdr_mem\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc qdr_qdr_mem_tbl_set entry_offset_ndx 0 qdr_mem 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_QDR_QDR_MEM_TBL_SET_QDR_QDR_MEM_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_QDR_QDR_MEM_TBL_GET_QDR_QDR_MEM_TBL_GET_ID, 
    "qdr_qdr_mem_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc qdr_qdr_mem_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_QDR_QDR_MEM_TBL_GET_QDR_QDR_MEM_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_QDR_QDR_DLL_MEM_TBL_SET_QDR_QDR_DLL_MEM_TBL_SET_ID, 
    "qdr_qdr_dll_mem_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc qdr_qdr_dll_mem_tbl_set entry_offset_ndx 0 qdr_dll_mem 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_QDR_QDR_DLL_MEM_TBL_SET_QDR_QDR_DLL_MEM_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_QDR_QDR_DLL_MEM_TBL_SET_QDR_QDR_DLL_MEM_TBL_SET_TBL_DATA_QDR_DLL_MEM_ID, 
    "qdr_dll_mem", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qdr_dll_mem:\n\r"
    "  uint32 qdr_dll_mem\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc qdr_qdr_dll_mem_tbl_set entry_offset_ndx 0 qdr_dll_mem 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_QDR_QDR_DLL_MEM_TBL_SET_QDR_QDR_DLL_MEM_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_QDR_QDR_DLL_MEM_TBL_GET_QDR_QDR_DLL_MEM_TBL_GET_ID, 
    "qdr_qdr_dll_mem_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc qdr_qdr_dll_mem_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_QDR_QDR_DLL_MEM_TBL_GET_QDR_QDR_DLL_MEM_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#if UI_PB_IND_ACC_MMU
  { 
    PARAM_PB_MMU_DRAM_ADDRESS_SPACE_TBL_SET_MMU_DRAM_ADDRESS_SPACE_TBL_SET_ID, 
    "mmu_dram_address_space_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_dram_address_space_tbl_set entry_offset_ndx 0\n\r"
    "  data_index 0 data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_DRAM_ADDRESS_SPACE_TBL_SET_MMU_DRAM_ADDRESS_SPACE_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_DRAM_ADDRESS_SPACE_TBL_SET_MMU_DRAM_ADDRESS_SPACE_TBL_SET_TBL_DATA_DATA_INDEX_ID, 
    "data_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  data_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_dram_address_space_tbl_set entry_offset_ndx 0\n\r"
    "  data_index 0 data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_DRAM_ADDRESS_SPACE_TBL_SET_MMU_DRAM_ADDRESS_SPACE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_DRAM_ADDRESS_SPACE_TBL_SET_MMU_DRAM_ADDRESS_SPACE_TBL_SET_TBL_DATA_DATA_ID, 
    "data", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.data[ prm_data_index]:\n\r"
    "  uint32 data[16]\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_dram_address_space_tbl_set entry_offset_ndx 0\n\r"
    "  data_index 0 data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_DRAM_ADDRESS_SPACE_TBL_SET_MMU_DRAM_ADDRESS_SPACE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_DRAM_ADDRESS_SPACE_TBL_GET_MMU_DRAM_ADDRESS_SPACE_TBL_GET_ID, 
    "mmu_dram_address_space_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_dram_address_space_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_DRAM_ADDRESS_SPACE_TBL_GET_MMU_DRAM_ADDRESS_SPACE_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_IDF_TBL_SET_MMU_IDF_TBL_SET_ID, 
    "mmu_idf_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_idf_tbl_set entry_offset_ndx 0 data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_IDF_TBL_SET_MMU_IDF_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_IDF_TBL_SET_MMU_IDF_TBL_SET_TBL_DATA_DATA_ID, 
    "data", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.data:\n\r"
    "  uint32 data\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_idf_tbl_set entry_offset_ndx 0 data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_IDF_TBL_SET_MMU_IDF_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_IDF_TBL_GET_MMU_IDF_TBL_GET_ID, 
    "mmu_idf_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_idf_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_IDF_TBL_GET_MMU_IDF_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_FDF_TBL_SET_MMU_FDF_TBL_SET_ID, 
    "mmu_fdf_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_fdf_tbl_set entry_offset_ndx 0 data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_FDF_TBL_SET_MMU_FDF_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_FDF_TBL_SET_MMU_FDF_TBL_SET_TBL_DATA_DATA_ID, 
    "data", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.data:\n\r"
    "  uint32 data\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_fdf_tbl_set entry_offset_ndx 0 data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_FDF_TBL_SET_MMU_FDF_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_FDF_TBL_GET_MMU_FDF_TBL_GET_ID, 
    "mmu_fdf_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_fdf_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_FDF_TBL_GET_MMU_FDF_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAF_HALFA_WADDR_TBL_SET_MMU_WAF_HALFA_WADDR_TBL_SET_ID, 
    "mmu_waf_halfa_waddr_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waf_halfa_waddr_tbl_set entry_offset_ndx 0\n\r"
    "  waddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAF_HALFA_WADDR_TBL_SET_MMU_WAF_HALFA_WADDR_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAF_HALFA_WADDR_TBL_SET_MMU_WAF_HALFA_WADDR_TBL_SET_TBL_DATA_WADDR_HALF_A_ID, 
    "waddr_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.waddr_half_a:\n\r"
    "  uint32 waddr_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waf_halfa_waddr_tbl_set entry_offset_ndx 0\n\r"
    "  waddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAF_HALFA_WADDR_TBL_SET_MMU_WAF_HALFA_WADDR_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAF_HALFA_WADDR_TBL_GET_MMU_WAF_HALFA_WADDR_TBL_GET_ID, 
    "mmu_waf_halfa_waddr_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waf_halfa_waddr_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAF_HALFA_WADDR_TBL_GET_MMU_WAF_HALFA_WADDR_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAF_HALFB_WADDR_TBL_SET_MMU_WAF_HALFB_WADDR_TBL_SET_ID, 
    "mmu_waf_halfb_waddr_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waf_halfb_waddr_tbl_set entry_offset_ndx 0\n\r"
    "  waddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAF_HALFB_WADDR_TBL_SET_MMU_WAF_HALFB_WADDR_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAF_HALFB_WADDR_TBL_SET_MMU_WAF_HALFB_WADDR_TBL_SET_TBL_DATA_WADDR_HALF_B_ID, 
    "waddr_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.waddr_half_b:\n\r"
    "  uint32 waddr_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waf_halfb_waddr_tbl_set entry_offset_ndx 0\n\r"
    "  waddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAF_HALFB_WADDR_TBL_SET_MMU_WAF_HALFB_WADDR_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAF_HALFB_WADDR_TBL_GET_MMU_WAF_HALFB_WADDR_TBL_GET_ID, 
    "mmu_waf_halfb_waddr_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waf_halfb_waddr_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAF_HALFB_WADDR_TBL_GET_MMU_WAF_HALFB_WADDR_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFA_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFA_HALFA_RADDR_STATUS_TBL_SET_ID, 
    "mmu_wafa_halfa_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafa_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFA_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFA_HALFA_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFA_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFA_HALFA_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_HALF_A_ID, 
    "status_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status_half_a:\n\r"
    "  uint32 status_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafa_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFA_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFA_HALFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFA_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFA_HALFA_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_HALF_A_ID, 
    "raddr_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr_half_a:\n\r"
    "  uint32 raddr_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafa_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFA_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFA_HALFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFA_HALFA_RADDR_STATUS_TBL_GET_MMU_WAFA_HALFA_RADDR_STATUS_TBL_GET_ID, 
    "mmu_wafa_halfa_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafa_halfa_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFA_HALFA_RADDR_STATUS_TBL_GET_MMU_WAFA_HALFA_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFB_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFB_HALFA_RADDR_STATUS_TBL_SET_ID, 
    "mmu_wafb_halfa_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafb_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFB_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFB_HALFA_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFB_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFB_HALFA_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_HALF_A_ID, 
    "status_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status_half_a:\n\r"
    "  uint32 status_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafb_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFB_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFB_HALFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFB_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFB_HALFA_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_HALF_A_ID, 
    "raddr_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr_half_a:\n\r"
    "  uint32 raddr_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafb_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFB_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFB_HALFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFB_HALFA_RADDR_STATUS_TBL_GET_MMU_WAFB_HALFA_RADDR_STATUS_TBL_GET_ID, 
    "mmu_wafb_halfa_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafb_halfa_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFB_HALFA_RADDR_STATUS_TBL_GET_MMU_WAFB_HALFA_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFC_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFC_HALFA_RADDR_STATUS_TBL_SET_ID, 
    "mmu_wafc_halfa_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafc_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFC_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFC_HALFA_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFC_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFC_HALFA_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_HALF_A_ID, 
    "status_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status_half_a:\n\r"
    "  uint32 status_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafc_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFC_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFC_HALFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFC_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFC_HALFA_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_HALF_A_ID, 
    "raddr_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr_half_a:\n\r"
    "  uint32 raddr_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafc_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFC_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFC_HALFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFC_HALFA_RADDR_STATUS_TBL_GET_MMU_WAFC_HALFA_RADDR_STATUS_TBL_GET_ID, 
    "mmu_wafc_halfa_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafc_halfa_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFC_HALFA_RADDR_STATUS_TBL_GET_MMU_WAFC_HALFA_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFD_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFD_HALFA_RADDR_STATUS_TBL_SET_ID, 
    "mmu_wafd_halfa_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafd_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFD_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFD_HALFA_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFD_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFD_HALFA_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_HALF_A_ID, 
    "status_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status_half_a:\n\r"
    "  uint32 status_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafd_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFD_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFD_HALFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFD_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFD_HALFA_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_HALF_A_ID, 
    "raddr_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr_half_a:\n\r"
    "  uint32 raddr_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafd_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFD_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFD_HALFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFD_HALFA_RADDR_STATUS_TBL_GET_MMU_WAFD_HALFA_RADDR_STATUS_TBL_GET_ID, 
    "mmu_wafd_halfa_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafd_halfa_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFD_HALFA_RADDR_STATUS_TBL_GET_MMU_WAFD_HALFA_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFE_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFE_HALFA_RADDR_STATUS_TBL_SET_ID, 
    "mmu_wafe_halfa_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafe_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFE_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFE_HALFA_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFE_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFE_HALFA_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_HALF_A_ID, 
    "status_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status_half_a:\n\r"
    "  uint32 status_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafe_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFE_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFE_HALFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFE_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFE_HALFA_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_HALF_A_ID, 
    "raddr_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr_half_a:\n\r"
    "  uint32 raddr_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafe_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFE_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFE_HALFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFE_HALFA_RADDR_STATUS_TBL_GET_MMU_WAFE_HALFA_RADDR_STATUS_TBL_GET_ID, 
    "mmu_wafe_halfa_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafe_halfa_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFE_HALFA_RADDR_STATUS_TBL_GET_MMU_WAFE_HALFA_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFF_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFF_HALFA_RADDR_STATUS_TBL_SET_ID, 
    "mmu_waff_halfa_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waff_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFF_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFF_HALFA_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFF_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFF_HALFA_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_HALF_A_ID, 
    "status_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status_half_a:\n\r"
    "  uint32 status_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waff_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFF_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFF_HALFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFF_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFF_HALFA_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_HALF_A_ID, 
    "raddr_half_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr_half_a:\n\r"
    "  uint32 raddr_half_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waff_halfa_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_a 0 raddr_half_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFF_HALFA_RADDR_STATUS_TBL_SET_MMU_WAFF_HALFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFF_HALFA_RADDR_STATUS_TBL_GET_MMU_WAFF_HALFA_RADDR_STATUS_TBL_GET_ID, 
    "mmu_waff_halfa_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waff_halfa_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFF_HALFA_RADDR_STATUS_TBL_GET_MMU_WAFF_HALFA_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFA_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFA_HALFB_RADDR_STATUS_TBL_SET_ID, 
    "mmu_wafa_halfb_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafa_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFA_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFA_HALFB_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFA_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFA_HALFB_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_HALF_B_ID, 
    "status_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status_half_b:\n\r"
    "  uint32 status_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafa_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFA_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFA_HALFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFA_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFA_HALFB_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_HALF_B_ID, 
    "raddr_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr_half_b:\n\r"
    "  uint32 raddr_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafa_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFA_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFA_HALFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFA_HALFB_RADDR_STATUS_TBL_GET_MMU_WAFA_HALFB_RADDR_STATUS_TBL_GET_ID, 
    "mmu_wafa_halfb_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafa_halfb_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFA_HALFB_RADDR_STATUS_TBL_GET_MMU_WAFA_HALFB_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFB_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFB_HALFB_RADDR_STATUS_TBL_SET_ID, 
    "mmu_wafb_halfb_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafb_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFB_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFB_HALFB_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFB_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFB_HALFB_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_HALF_B_ID, 
    "status_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status_half_b:\n\r"
    "  uint32 status_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafb_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFB_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFB_HALFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFB_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFB_HALFB_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_HALF_B_ID, 
    "raddr_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr_half_b:\n\r"
    "  uint32 raddr_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafb_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFB_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFB_HALFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFB_HALFB_RADDR_STATUS_TBL_GET_MMU_WAFB_HALFB_RADDR_STATUS_TBL_GET_ID, 
    "mmu_wafb_halfb_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafb_halfb_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFB_HALFB_RADDR_STATUS_TBL_GET_MMU_WAFB_HALFB_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFC_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFC_HALFB_RADDR_STATUS_TBL_SET_ID, 
    "mmu_wafc_halfb_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafc_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFC_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFC_HALFB_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFC_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFC_HALFB_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_HALF_B_ID, 
    "status_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status_half_b:\n\r"
    "  uint32 status_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafc_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFC_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFC_HALFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFC_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFC_HALFB_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_HALF_B_ID, 
    "raddr_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr_half_b:\n\r"
    "  uint32 raddr_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafc_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFC_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFC_HALFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFC_HALFB_RADDR_STATUS_TBL_GET_MMU_WAFC_HALFB_RADDR_STATUS_TBL_GET_ID, 
    "mmu_wafc_halfb_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafc_halfb_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFC_HALFB_RADDR_STATUS_TBL_GET_MMU_WAFC_HALFB_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFD_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFD_HALFB_RADDR_STATUS_TBL_SET_ID, 
    "mmu_wafd_halfb_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafd_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFD_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFD_HALFB_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFD_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFD_HALFB_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_HALF_B_ID, 
    "status_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status_half_b:\n\r"
    "  uint32 status_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafd_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFD_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFD_HALFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFD_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFD_HALFB_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_HALF_B_ID, 
    "raddr_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr_half_b:\n\r"
    "  uint32 raddr_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafd_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFD_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFD_HALFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFD_HALFB_RADDR_STATUS_TBL_GET_MMU_WAFD_HALFB_RADDR_STATUS_TBL_GET_ID, 
    "mmu_wafd_halfb_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafd_halfb_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFD_HALFB_RADDR_STATUS_TBL_GET_MMU_WAFD_HALFB_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFE_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFE_HALFB_RADDR_STATUS_TBL_SET_ID, 
    "mmu_wafe_halfb_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafe_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFE_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFE_HALFB_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFE_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFE_HALFB_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_HALF_B_ID, 
    "status_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status_half_b:\n\r"
    "  uint32 status_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafe_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFE_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFE_HALFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFE_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFE_HALFB_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_HALF_B_ID, 
    "raddr_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr_half_b:\n\r"
    "  uint32 raddr_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafe_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFE_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFE_HALFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFE_HALFB_RADDR_STATUS_TBL_GET_MMU_WAFE_HALFB_RADDR_STATUS_TBL_GET_ID, 
    "mmu_wafe_halfb_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_wafe_halfb_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFE_HALFB_RADDR_STATUS_TBL_GET_MMU_WAFE_HALFB_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFF_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFF_HALFB_RADDR_STATUS_TBL_SET_ID, 
    "mmu_waff_halfb_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waff_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFF_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFF_HALFB_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFF_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFF_HALFB_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_HALF_B_ID, 
    "status_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status_half_b:\n\r"
    "  uint32 status_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waff_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFF_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFF_HALFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFF_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFF_HALFB_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_HALF_B_ID, 
    "raddr_half_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr_half_b:\n\r"
    "  uint32 raddr_half_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waff_halfb_raddr_status_tbl_set entry_offset_ndx 0\n\r"
    "  status_half_b 0 raddr_half_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFF_HALFB_RADDR_STATUS_TBL_SET_MMU_WAFF_HALFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_WAFF_HALFB_RADDR_STATUS_TBL_GET_MMU_WAFF_HALFB_RADDR_STATUS_TBL_GET_ID, 
    "mmu_waff_halfb_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_waff_halfb_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_WAFF_HALFB_RADDR_STATUS_TBL_GET_MMU_WAFF_HALFB_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAF_WADDR_TBL_SET_MMU_RAF_WADDR_TBL_SET_ID, 
    "mmu_raf_waddr_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_raf_waddr_tbl_set entry_offset_ndx 0 waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAF_WADDR_TBL_SET_MMU_RAF_WADDR_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAF_WADDR_TBL_SET_MMU_RAF_WADDR_TBL_SET_TBL_DATA_WADDR_ID, 
    "waddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.waddr:\n\r"
    "  uint32 waddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_raf_waddr_tbl_set entry_offset_ndx 0 waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAF_WADDR_TBL_SET_MMU_RAF_WADDR_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAF_WADDR_TBL_GET_MMU_RAF_WADDR_TBL_GET_ID, 
    "mmu_raf_waddr_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_raf_waddr_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAF_WADDR_TBL_GET_MMU_RAF_WADDR_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFA_RADDR_STATUS_TBL_SET_MMU_RAFA_RADDR_STATUS_TBL_SET_ID, 
    "mmu_rafa_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafa_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFA_RADDR_STATUS_TBL_SET_MMU_RAFA_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFA_RADDR_STATUS_TBL_SET_MMU_RAFA_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_ID, 
    "status", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status:\n\r"
    "  uint32 status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafa_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFA_RADDR_STATUS_TBL_SET_MMU_RAFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFA_RADDR_STATUS_TBL_SET_MMU_RAFA_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_ID, 
    "raddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr:\n\r"
    "  uint32 raddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafa_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFA_RADDR_STATUS_TBL_SET_MMU_RAFA_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFA_RADDR_STATUS_TBL_GET_MMU_RAFA_RADDR_STATUS_TBL_GET_ID, 
    "mmu_rafa_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafa_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFA_RADDR_STATUS_TBL_GET_MMU_RAFA_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFB_RADDR_STATUS_TBL_SET_MMU_RAFB_RADDR_STATUS_TBL_SET_ID, 
    "mmu_rafb_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafb_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFB_RADDR_STATUS_TBL_SET_MMU_RAFB_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFB_RADDR_STATUS_TBL_SET_MMU_RAFB_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_ID, 
    "status", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status:\n\r"
    "  uint32 status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafb_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFB_RADDR_STATUS_TBL_SET_MMU_RAFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFB_RADDR_STATUS_TBL_SET_MMU_RAFB_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_ID, 
    "raddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr:\n\r"
    "  uint32 raddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafb_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFB_RADDR_STATUS_TBL_SET_MMU_RAFB_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFB_RADDR_STATUS_TBL_GET_MMU_RAFB_RADDR_STATUS_TBL_GET_ID, 
    "mmu_rafb_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafb_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFB_RADDR_STATUS_TBL_GET_MMU_RAFB_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFC_RADDR_STATUS_TBL_SET_MMU_RAFC_RADDR_STATUS_TBL_SET_ID, 
    "mmu_rafc_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafc_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFC_RADDR_STATUS_TBL_SET_MMU_RAFC_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFC_RADDR_STATUS_TBL_SET_MMU_RAFC_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_ID, 
    "status", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status:\n\r"
    "  uint32 status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafc_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFC_RADDR_STATUS_TBL_SET_MMU_RAFC_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFC_RADDR_STATUS_TBL_SET_MMU_RAFC_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_ID, 
    "raddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr:\n\r"
    "  uint32 raddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafc_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFC_RADDR_STATUS_TBL_SET_MMU_RAFC_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFC_RADDR_STATUS_TBL_GET_MMU_RAFC_RADDR_STATUS_TBL_GET_ID, 
    "mmu_rafc_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafc_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFC_RADDR_STATUS_TBL_GET_MMU_RAFC_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFD_RADDR_STATUS_TBL_SET_MMU_RAFD_RADDR_STATUS_TBL_SET_ID, 
    "mmu_rafd_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafd_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFD_RADDR_STATUS_TBL_SET_MMU_RAFD_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFD_RADDR_STATUS_TBL_SET_MMU_RAFD_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_ID, 
    "status", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status:\n\r"
    "  uint32 status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafd_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFD_RADDR_STATUS_TBL_SET_MMU_RAFD_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFD_RADDR_STATUS_TBL_SET_MMU_RAFD_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_ID, 
    "raddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr:\n\r"
    "  uint32 raddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafd_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFD_RADDR_STATUS_TBL_SET_MMU_RAFD_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFD_RADDR_STATUS_TBL_GET_MMU_RAFD_RADDR_STATUS_TBL_GET_ID, 
    "mmu_rafd_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafd_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFD_RADDR_STATUS_TBL_GET_MMU_RAFD_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFE_RADDR_STATUS_TBL_SET_MMU_RAFE_RADDR_STATUS_TBL_SET_ID, 
    "mmu_rafe_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafe_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFE_RADDR_STATUS_TBL_SET_MMU_RAFE_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFE_RADDR_STATUS_TBL_SET_MMU_RAFE_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_ID, 
    "status", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status:\n\r"
    "  uint32 status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafe_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFE_RADDR_STATUS_TBL_SET_MMU_RAFE_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFE_RADDR_STATUS_TBL_SET_MMU_RAFE_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_ID, 
    "raddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr:\n\r"
    "  uint32 raddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafe_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFE_RADDR_STATUS_TBL_SET_MMU_RAFE_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFE_RADDR_STATUS_TBL_GET_MMU_RAFE_RADDR_STATUS_TBL_GET_ID, 
    "mmu_rafe_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rafe_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFE_RADDR_STATUS_TBL_GET_MMU_RAFE_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFF_RADDR_STATUS_TBL_SET_MMU_RAFF_RADDR_STATUS_TBL_SET_ID, 
    "mmu_raff_raddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_raff_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFF_RADDR_STATUS_TBL_SET_MMU_RAFF_RADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFF_RADDR_STATUS_TBL_SET_MMU_RAFF_RADDR_STATUS_TBL_SET_TBL_DATA_STATUS_ID, 
    "status", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status:\n\r"
    "  uint32 status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_raff_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFF_RADDR_STATUS_TBL_SET_MMU_RAFF_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFF_RADDR_STATUS_TBL_SET_MMU_RAFF_RADDR_STATUS_TBL_SET_TBL_DATA_RADDR_ID, 
    "raddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr:\n\r"
    "  uint32 raddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_raff_raddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFF_RADDR_STATUS_TBL_SET_MMU_RAFF_RADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RAFF_RADDR_STATUS_TBL_GET_MMU_RAFF_RADDR_STATUS_TBL_GET_ID, 
    "mmu_raff_raddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_raff_raddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RAFF_RADDR_STATUS_TBL_GET_MMU_RAFF_RADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFA_WADDR_STATUS_TBL_SET_MMU_RDFA_WADDR_STATUS_TBL_SET_ID, 
    "mmu_rdfa_waddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfa_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFA_WADDR_STATUS_TBL_SET_MMU_RDFA_WADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFA_WADDR_STATUS_TBL_SET_MMU_RDFA_WADDR_STATUS_TBL_SET_TBL_DATA_STATUS_ID, 
    "status", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status:\n\r"
    "  uint32 status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfa_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFA_WADDR_STATUS_TBL_SET_MMU_RDFA_WADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFA_WADDR_STATUS_TBL_SET_MMU_RDFA_WADDR_STATUS_TBL_SET_TBL_DATA_WADDR_ID, 
    "waddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.waddr:\n\r"
    "  uint32 waddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfa_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFA_WADDR_STATUS_TBL_SET_MMU_RDFA_WADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFA_WADDR_STATUS_TBL_GET_MMU_RDFA_WADDR_STATUS_TBL_GET_ID, 
    "mmu_rdfa_waddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfa_waddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFA_WADDR_STATUS_TBL_GET_MMU_RDFA_WADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFB_WADDR_STATUS_TBL_SET_MMU_RDFB_WADDR_STATUS_TBL_SET_ID, 
    "mmu_rdfb_waddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfb_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFB_WADDR_STATUS_TBL_SET_MMU_RDFB_WADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFB_WADDR_STATUS_TBL_SET_MMU_RDFB_WADDR_STATUS_TBL_SET_TBL_DATA_STATUS_ID, 
    "status", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status:\n\r"
    "  uint32 status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfb_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFB_WADDR_STATUS_TBL_SET_MMU_RDFB_WADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFB_WADDR_STATUS_TBL_SET_MMU_RDFB_WADDR_STATUS_TBL_SET_TBL_DATA_WADDR_ID, 
    "waddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.waddr:\n\r"
    "  uint32 waddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfb_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFB_WADDR_STATUS_TBL_SET_MMU_RDFB_WADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFB_WADDR_STATUS_TBL_GET_MMU_RDFB_WADDR_STATUS_TBL_GET_ID, 
    "mmu_rdfb_waddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfb_waddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFB_WADDR_STATUS_TBL_GET_MMU_RDFB_WADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFC_WADDR_STATUS_TBL_SET_MMU_RDFC_WADDR_STATUS_TBL_SET_ID, 
    "mmu_rdfc_waddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfc_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFC_WADDR_STATUS_TBL_SET_MMU_RDFC_WADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFC_WADDR_STATUS_TBL_SET_MMU_RDFC_WADDR_STATUS_TBL_SET_TBL_DATA_STATUS_ID, 
    "status", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status:\n\r"
    "  uint32 status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfc_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFC_WADDR_STATUS_TBL_SET_MMU_RDFC_WADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFC_WADDR_STATUS_TBL_SET_MMU_RDFC_WADDR_STATUS_TBL_SET_TBL_DATA_WADDR_ID, 
    "waddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.waddr:\n\r"
    "  uint32 waddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfc_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFC_WADDR_STATUS_TBL_SET_MMU_RDFC_WADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFC_WADDR_STATUS_TBL_GET_MMU_RDFC_WADDR_STATUS_TBL_GET_ID, 
    "mmu_rdfc_waddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfc_waddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFC_WADDR_STATUS_TBL_GET_MMU_RDFC_WADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFD_WADDR_STATUS_TBL_SET_MMU_RDFD_WADDR_STATUS_TBL_SET_ID, 
    "mmu_rdfd_waddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfd_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFD_WADDR_STATUS_TBL_SET_MMU_RDFD_WADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFD_WADDR_STATUS_TBL_SET_MMU_RDFD_WADDR_STATUS_TBL_SET_TBL_DATA_STATUS_ID, 
    "status", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status:\n\r"
    "  uint32 status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfd_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFD_WADDR_STATUS_TBL_SET_MMU_RDFD_WADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFD_WADDR_STATUS_TBL_SET_MMU_RDFD_WADDR_STATUS_TBL_SET_TBL_DATA_WADDR_ID, 
    "waddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.waddr:\n\r"
    "  uint32 waddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfd_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFD_WADDR_STATUS_TBL_SET_MMU_RDFD_WADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFD_WADDR_STATUS_TBL_GET_MMU_RDFD_WADDR_STATUS_TBL_GET_ID, 
    "mmu_rdfd_waddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfd_waddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFD_WADDR_STATUS_TBL_GET_MMU_RDFD_WADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFE_WADDR_STATUS_TBL_SET_MMU_RDFE_WADDR_STATUS_TBL_SET_ID, 
    "mmu_rdfe_waddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfe_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFE_WADDR_STATUS_TBL_SET_MMU_RDFE_WADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFE_WADDR_STATUS_TBL_SET_MMU_RDFE_WADDR_STATUS_TBL_SET_TBL_DATA_STATUS_ID, 
    "status", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status:\n\r"
    "  uint32 status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfe_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFE_WADDR_STATUS_TBL_SET_MMU_RDFE_WADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFE_WADDR_STATUS_TBL_SET_MMU_RDFE_WADDR_STATUS_TBL_SET_TBL_DATA_WADDR_ID, 
    "waddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.waddr:\n\r"
    "  uint32 waddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfe_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFE_WADDR_STATUS_TBL_SET_MMU_RDFE_WADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFE_WADDR_STATUS_TBL_GET_MMU_RDFE_WADDR_STATUS_TBL_GET_ID, 
    "mmu_rdfe_waddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdfe_waddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFE_WADDR_STATUS_TBL_GET_MMU_RDFE_WADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFF_WADDR_STATUS_TBL_SET_MMU_RDFF_WADDR_STATUS_TBL_SET_ID, 
    "mmu_rdff_waddr_status_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdff_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFF_WADDR_STATUS_TBL_SET_MMU_RDFF_WADDR_STATUS_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFF_WADDR_STATUS_TBL_SET_MMU_RDFF_WADDR_STATUS_TBL_SET_TBL_DATA_STATUS_ID, 
    "status", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.status:\n\r"
    "  uint32 status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdff_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFF_WADDR_STATUS_TBL_SET_MMU_RDFF_WADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFF_WADDR_STATUS_TBL_SET_MMU_RDFF_WADDR_STATUS_TBL_SET_TBL_DATA_WADDR_ID, 
    "waddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.waddr:\n\r"
    "  uint32 waddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdff_waddr_status_tbl_set entry_offset_ndx 0 status 0\n\r"
    "  waddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFF_WADDR_STATUS_TBL_SET_MMU_RDFF_WADDR_STATUS_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDFF_WADDR_STATUS_TBL_GET_MMU_RDFF_WADDR_STATUS_TBL_GET_ID, 
    "mmu_rdff_waddr_status_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdff_waddr_status_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDFF_WADDR_STATUS_TBL_GET_MMU_RDFF_WADDR_STATUS_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDF_RADDR_TBL_SET_MMU_RDF_RADDR_TBL_SET_ID, 
    "mmu_rdf_raddr_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdf_raddr_tbl_set entry_offset_ndx 0 raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDF_RADDR_TBL_SET_MMU_RDF_RADDR_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDF_RADDR_TBL_SET_MMU_RDF_RADDR_TBL_SET_TBL_DATA_RADDR_ID, 
    "raddr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.raddr:\n\r"
    "  uint32 raddr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdf_raddr_tbl_set entry_offset_ndx 0 raddr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDF_RADDR_TBL_SET_MMU_RDF_RADDR_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MMU_RDF_RADDR_TBL_GET_MMU_RDF_RADDR_TBL_GET_ID, 
    "mmu_rdf_raddr_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc mmu_rdf_raddr_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MMU_RDF_RADDR_TBL_GET_MMU_RDF_RADDR_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /*UI_PB_IND_ACC_MMU*/
  { 
    PARAM_PB_IQM_BDB_LINK_LIST_TBL_SET_IQM_BDB_LINK_LIST_TBL_SET_ID, 
    "iqm_bdb_link_list_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_bdb_link_list_tbl_set entry_offset_ndx 0\n\r"
    "  bdb_link_list 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_BDB_LINK_LIST_TBL_SET_IQM_BDB_LINK_LIST_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_BDB_LINK_LIST_TBL_SET_IQM_BDB_LINK_LIST_TBL_SET_TBL_DATA_BDB_LINK_LIST_ID, 
    "bdb_link_list", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.bdb_link_list:\n\r"
    "  uint32 bdb_link_list\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_bdb_link_list_tbl_set entry_offset_ndx 0\n\r"
    "  bdb_link_list 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_BDB_LINK_LIST_TBL_SET_IQM_BDB_LINK_LIST_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_BDB_LINK_LIST_TBL_GET_IQM_BDB_LINK_LIST_TBL_GET_ID, 
    "iqm_bdb_link_list_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_bdb_link_list_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_BDB_LINK_LIST_TBL_GET_IQM_BDB_LINK_LIST_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_DYNAMIC_TBL_SET_IQM_DYNAMIC_TBL_SET_ID, 
    "iqm_dynamic_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_dynamic_tbl_set entry_offset_ndx 0 pq_avrg_szie 0\n\r"
    "  pq_inst_que_size 0 que_not_empty 0 pq_head_ptr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_DYNAMIC_TBL_SET_IQM_DYNAMIC_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_DYNAMIC_TBL_SET_IQM_DYNAMIC_TBL_SET_TBL_DATA_PQ_AVRG_SZIE_ID, 
    "pq_avrg_szie", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pq_avrg_szie:\n\r"
    "  uint32 pq_avrg_szie\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_dynamic_tbl_set entry_offset_ndx 0 pq_avrg_szie 0\n\r"
    "  pq_inst_que_size 0 que_not_empty 0 pq_head_ptr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_DYNAMIC_TBL_SET_IQM_DYNAMIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_DYNAMIC_TBL_SET_IQM_DYNAMIC_TBL_SET_TBL_DATA_PQ_INST_QUE_SIZE_ID, 
    "pq_inst_que_size", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pq_inst_que_size:\n\r"
    "  uint32 pq_inst_que_size\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_dynamic_tbl_set entry_offset_ndx 0 pq_avrg_szie 0\n\r"
    "  pq_inst_que_size 0 que_not_empty 0 pq_head_ptr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_DYNAMIC_TBL_SET_IQM_DYNAMIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_DYNAMIC_TBL_SET_IQM_DYNAMIC_TBL_SET_TBL_DATA_QUE_NOT_EMPTY_ID, 
    "que_not_empty", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.que_not_empty:\n\r"
    "  uint32 que_not_empty\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_dynamic_tbl_set entry_offset_ndx 0 pq_avrg_szie 0\n\r"
    "  pq_inst_que_size 0 que_not_empty 0 pq_head_ptr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_DYNAMIC_TBL_SET_IQM_DYNAMIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_DYNAMIC_TBL_SET_IQM_DYNAMIC_TBL_SET_TBL_DATA_PQ_HEAD_PTR_ID, 
    "pq_head_ptr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pq_head_ptr:\n\r"
    "  uint32 pq_head_ptr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_dynamic_tbl_set entry_offset_ndx 0 pq_avrg_szie 0\n\r"
    "  pq_inst_que_size 0 que_not_empty 0 pq_head_ptr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_DYNAMIC_TBL_SET_IQM_DYNAMIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_DYNAMIC_TBL_GET_IQM_DYNAMIC_TBL_GET_ID, 
    "iqm_dynamic_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_dynamic_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_DYNAMIC_TBL_GET_IQM_DYNAMIC_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_STATIC_TBL_SET_IQM_STATIC_TBL_SET_ID, 
    "iqm_static_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_static_tbl_set entry_offset_ndx 0 que_signature 0\n\r"
    "  traffic_class 0 connection_class 0 rate_class 0 credit_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_STATIC_TBL_SET_IQM_STATIC_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_STATIC_TBL_SET_IQM_STATIC_TBL_SET_TBL_DATA_QUE_SIGNATURE_ID, 
    "que_signature", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.que_signature:\n\r"
    "  uint32 que_signature\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_static_tbl_set entry_offset_ndx 0 que_signature 0\n\r"
    "  traffic_class 0 connection_class 0 rate_class 0 credit_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_STATIC_TBL_SET_IQM_STATIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_STATIC_TBL_SET_IQM_STATIC_TBL_SET_TBL_DATA_TRAFFIC_CLASS_ID, 
    "traffic_class", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.traffic_class:\n\r"
    "  uint32 traffic_class\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_static_tbl_set entry_offset_ndx 0 que_signature 0\n\r"
    "  traffic_class 0 connection_class 0 rate_class 0 credit_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_STATIC_TBL_SET_IQM_STATIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_STATIC_TBL_SET_IQM_STATIC_TBL_SET_TBL_DATA_CONNECTION_CLASS_ID, 
    "connection_class", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.connection_class:\n\r"
    "  uint32 connection_class\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_static_tbl_set entry_offset_ndx 0 que_signature 0\n\r"
    "  traffic_class 0 connection_class 0 rate_class 0 credit_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_STATIC_TBL_SET_IQM_STATIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_STATIC_TBL_SET_IQM_STATIC_TBL_SET_TBL_DATA_RATE_CLASS_ID, 
    "rate_class", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.rate_class:\n\r"
    "  uint32 rate_class\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_static_tbl_set entry_offset_ndx 0 que_signature 0\n\r"
    "  traffic_class 0 connection_class 0 rate_class 0 credit_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_STATIC_TBL_SET_IQM_STATIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_STATIC_TBL_SET_IQM_STATIC_TBL_SET_TBL_DATA_CREDIT_CLASS_ID, 
    "credit_class", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.credit_class:\n\r"
    "  uint32 credit_class\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_static_tbl_set entry_offset_ndx 0 que_signature 0\n\r"
    "  traffic_class 0 connection_class 0 rate_class 0 credit_class 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_STATIC_TBL_SET_IQM_STATIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_STATIC_TBL_GET_IQM_STATIC_TBL_GET_ID, 
    "iqm_static_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_static_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_STATIC_TBL_GET_IQM_STATIC_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_TAIL_POINTER_TBL_SET_IQM_PACKET_QUEUE_TAIL_POINTER_TBL_SET_ID, 
    "iqm_packet_queue_tail_pointer_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_tail_pointer_tbl_set entry_offset_ndx 0\n\r"
    "  tail_ptr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_TAIL_POINTER_TBL_SET_IQM_PACKET_QUEUE_TAIL_POINTER_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_TAIL_POINTER_TBL_SET_IQM_PACKET_QUEUE_TAIL_POINTER_TBL_SET_TBL_DATA_TAIL_PTR_ID, 
    "tail_ptr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.tail_ptr:\n\r"
    "  uint32 tail_ptr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_tail_pointer_tbl_set entry_offset_ndx 0\n\r"
    "  tail_ptr 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_TAIL_POINTER_TBL_SET_IQM_PACKET_QUEUE_TAIL_POINTER_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_TAIL_POINTER_TBL_GET_IQM_PACKET_QUEUE_TAIL_POINTER_TBL_GET_ID, 
    "iqm_packet_queue_tail_pointer_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_tail_pointer_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_TAIL_POINTER_TBL_GET_IQM_PACKET_QUEUE_TAIL_POINTER_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_SET_ID, 
    "iqm_packet_queue_red_weight_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_weight_table_tbl_set\n\r"
    "  entry_offset_ndx 0 avrg_en 0 pq_weight 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_SET_TBL_DATA_AVRG_EN_ID, 
    "avrg_en", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.avrg_en:\n\r"
    "  uint32 avrg_en\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_weight_table_tbl_set\n\r"
    "  entry_offset_ndx 0 avrg_en 0 pq_weight 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_SET_TBL_DATA_PQ_WEIGHT_ID, 
    "pq_weight", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pq_weight:\n\r"
    "  uint32 pq_weight\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_weight_table_tbl_set\n\r"
    "  entry_offset_ndx 0 avrg_en 0 pq_weight 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_GET_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_GET_ID, 
    "iqm_packet_queue_red_weight_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_weight_table_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_GET_IQM_PACKET_QUEUE_RED_WEIGHT_TABLE_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CREDIT_DISCOUNT_TABLE_TBL_SET_IQM_CREDIT_DISCOUNT_TABLE_TBL_SET_ID, 
    "iqm_credit_discount_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_credit_discount_table_tbl_set entry_offset_ndx 0\n\r"
    "  discnt_sign 0 crdt_disc_val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CREDIT_DISCOUNT_TABLE_TBL_SET_IQM_CREDIT_DISCOUNT_TABLE_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CREDIT_DISCOUNT_TABLE_TBL_SET_IQM_CREDIT_DISCOUNT_TABLE_TBL_SET_TBL_DATA_DISCNT_SIGN_ID, 
    "discnt_sign", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.discnt_sign:\n\r"
    "  uint32 discnt_sign\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_credit_discount_table_tbl_set entry_offset_ndx 0\n\r"
    "  discnt_sign 0 crdt_disc_val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CREDIT_DISCOUNT_TABLE_TBL_SET_IQM_CREDIT_DISCOUNT_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CREDIT_DISCOUNT_TABLE_TBL_SET_IQM_CREDIT_DISCOUNT_TABLE_TBL_SET_TBL_DATA_CRDT_DISC_VAL_ID, 
    "crdt_disc_val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.crdt_disc_val:\n\r"
    "  uint32 crdt_disc_val\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_credit_discount_table_tbl_set entry_offset_ndx 0\n\r"
    "  discnt_sign 0 crdt_disc_val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CREDIT_DISCOUNT_TABLE_TBL_SET_IQM_CREDIT_DISCOUNT_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CREDIT_DISCOUNT_TABLE_TBL_GET_IQM_CREDIT_DISCOUNT_TABLE_TBL_GET_ID, 
    "iqm_credit_discount_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_credit_discount_table_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CREDIT_DISCOUNT_TABLE_TBL_GET_IQM_CREDIT_DISCOUNT_TABLE_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_FULL_USER_COUNT_MEMORY_TBL_SET_IQM_FULL_USER_COUNT_MEMORY_TBL_SET_ID, 
    "iqm_full_user_count_memory_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_full_user_count_memory_tbl_set entry_offset_ndx 0\n\r"
    "  flus_cnt 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_FULL_USER_COUNT_MEMORY_TBL_SET_IQM_FULL_USER_COUNT_MEMORY_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_FULL_USER_COUNT_MEMORY_TBL_SET_IQM_FULL_USER_COUNT_MEMORY_TBL_SET_TBL_DATA_FLUS_CNT_ID, 
    "flus_cnt", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.flus_cnt:\n\r"
    "  uint32 flus_cnt\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_full_user_count_memory_tbl_set entry_offset_ndx 0\n\r"
    "  flus_cnt 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_FULL_USER_COUNT_MEMORY_TBL_SET_IQM_FULL_USER_COUNT_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_FULL_USER_COUNT_MEMORY_TBL_GET_IQM_FULL_USER_COUNT_MEMORY_TBL_GET_ID, 
    "iqm_full_user_count_memory_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_full_user_count_memory_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_FULL_USER_COUNT_MEMORY_TBL_GET_IQM_FULL_USER_COUNT_MEMORY_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_SET_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_SET_ID, 
    "iqm_mini_multicast_user_count_memory_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_mini_multicast_user_count_memory_tbl_set\n\r"
    "  entry_offset_ndx 0 mn_us_cnt_index 0 mn_us_cnt 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_SET_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_SET_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_SET_TBL_DATA_MN_US_CNT_INDEX_ID, 
    "mn_us_cnt_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mn_us_cnt_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_mini_multicast_user_count_memory_tbl_set\n\r"
    "  entry_offset_ndx 0 mn_us_cnt_index 0 mn_us_cnt 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_SET_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_SET_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_SET_TBL_DATA_MN_US_CNT_ID, 
    "mn_us_cnt", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.mn_us_cnt[ prm_mn_us_cnt_index]:\n\r"
    "  uint32 mn_us_cnt[2]\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_mini_multicast_user_count_memory_tbl_set\n\r"
    "  entry_offset_ndx 0 mn_us_cnt_index 0 mn_us_cnt 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_SET_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_GET_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_GET_ID, 
    "iqm_mini_multicast_user_count_memory_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_mini_multicast_user_count_memory_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_GET_IQM_MINI_MULTICAST_USER_COUNT_MEMORY_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_ID, 
    "iqm_packet_queue_red_parameters_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_parameters_table_tbl_set\n\r"
    "  entry_offset_ndx 0 addmit_logic 0 pq_wred_pckt_sz_ignr 0 pq_avrg_min_th 0\n\r"
    "  pq_avrg_max_th 0 pq_c1 0 pq_c3 0 pq_c2 0 pq_wred_en 0 pq_max_que_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_ADDMIT_LOGIC_ID, 
    "addmit_logic", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.addmit_logic:\n\r"
    "  uint32 addmit_logic\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_parameters_table_tbl_set\n\r"
    "  entry_offset_ndx 0 addmit_logic 0 pq_wred_pckt_sz_ignr 0 pq_avrg_min_th 0\n\r"
    "  pq_avrg_max_th 0 pq_c1 0 pq_c3 0 pq_c2 0 pq_wred_en 0 pq_max_que_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_PQ_WRED_PCKT_SZ_IGNR_ID, 
    "pq_wred_pckt_sz_ignr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pq_wred_pckt_sz_ignr:\n\r"
    "  uint32 pq_wred_pckt_sz_ignr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_parameters_table_tbl_set\n\r"
    "  entry_offset_ndx 0 addmit_logic 0 pq_wred_pckt_sz_ignr 0 pq_avrg_min_th 0\n\r"
    "  pq_avrg_max_th 0 pq_c1 0 pq_c3 0 pq_c2 0 pq_wred_en 0 pq_max_que_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_PQ_AVRG_MIN_TH_ID, 
    "pq_avrg_min_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pq_avrg_min_th:\n\r"
    "  uint32 pq_avrg_min_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_parameters_table_tbl_set\n\r"
    "  entry_offset_ndx 0 addmit_logic 0 pq_wred_pckt_sz_ignr 0 pq_avrg_min_th 0\n\r"
    "  pq_avrg_max_th 0 pq_c1 0 pq_c3 0 pq_c2 0 pq_wred_en 0 pq_max_que_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_PQ_AVRG_MAX_TH_ID, 
    "pq_avrg_max_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pq_avrg_max_th:\n\r"
    "  uint32 pq_avrg_max_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_parameters_table_tbl_set\n\r"
    "  entry_offset_ndx 0 addmit_logic 0 pq_wred_pckt_sz_ignr 0 pq_avrg_min_th 0\n\r"
    "  pq_avrg_max_th 0 pq_c1 0 pq_c3 0 pq_c2 0 pq_wred_en 0 pq_max_que_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_PQ_C1_ID, 
    "pq_c1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pq_c1:\n\r"
    "  uint32 pq_c1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_parameters_table_tbl_set\n\r"
    "  entry_offset_ndx 0 addmit_logic 0 pq_wred_pckt_sz_ignr 0 pq_avrg_min_th 0\n\r"
    "  pq_avrg_max_th 0 pq_c1 0 pq_c3 0 pq_c2 0 pq_wred_en 0 pq_max_que_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_PQ_C3_ID, 
    "pq_c3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pq_c3:\n\r"
    "  uint32 pq_c3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_parameters_table_tbl_set\n\r"
    "  entry_offset_ndx 0 addmit_logic 0 pq_wred_pckt_sz_ignr 0 pq_avrg_min_th 0\n\r"
    "  pq_avrg_max_th 0 pq_c1 0 pq_c3 0 pq_c2 0 pq_wred_en 0 pq_max_que_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_PQ_C2_ID, 
    "pq_c2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pq_c2:\n\r"
    "  uint32 pq_c2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_parameters_table_tbl_set\n\r"
    "  entry_offset_ndx 0 addmit_logic 0 pq_wred_pckt_sz_ignr 0 pq_avrg_min_th 0\n\r"
    "  pq_avrg_max_th 0 pq_c1 0 pq_c3 0 pq_c2 0 pq_wred_en 0 pq_max_que_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_PQ_WRED_EN_ID, 
    "pq_wred_en", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pq_wred_en:\n\r"
    "  uint32 pq_wred_en\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_parameters_table_tbl_set\n\r"
    "  entry_offset_ndx 0 addmit_logic 0 pq_wred_pckt_sz_ignr 0 pq_avrg_min_th 0\n\r"
    "  pq_avrg_max_th 0 pq_c1 0 pq_c3 0 pq_c2 0 pq_wred_en 0 pq_max_que_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_PQ_MAX_QUE_SIZE_ID, 
    "pq_max_que_size", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.pq_max_que_size:\n\r"
    "  uint32 pq_max_que_size\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_parameters_table_tbl_set\n\r"
    "  entry_offset_ndx 0 addmit_logic 0 pq_wred_pckt_sz_ignr 0 pq_avrg_min_th 0\n\r"
    "  pq_avrg_max_th 0 pq_c1 0 pq_c3 0 pq_c2 0 pq_wred_en 0 pq_max_que_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_GET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_GET_ID, 
    "iqm_packet_queue_red_parameters_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_packet_queue_red_parameters_table_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_GET_IQM_PACKET_QUEUE_RED_PARAMETERS_TABLE_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_A_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_A_TBL_SET_ID, 
    "iqm_vsq_descriptor_rate_class_group_a_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_descriptor_rate_class_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_rc_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_A_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_A_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_A_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_A_TBL_SET_TBL_DATA_VSQ_RC_A_ID, 
    "vsq_rc_a", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_rc_a:\n\r"
    "  uint32 vsq_rc_a\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_descriptor_rate_class_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_rc_a 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_A_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_A_TBL_GET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_A_TBL_GET_ID, 
    "iqm_vsq_descriptor_rate_class_group_a_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_descriptor_rate_class_group_a_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_A_TBL_GET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_A_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_B_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_B_TBL_SET_ID, 
    "iqm_vsq_descriptor_rate_class_group_b_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_descriptor_rate_class_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_rc_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_B_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_B_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_B_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_B_TBL_SET_TBL_DATA_VSQ_RC_B_ID, 
    "vsq_rc_b", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_rc_b:\n\r"
    "  uint32 vsq_rc_b\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_descriptor_rate_class_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_rc_b 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_B_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_B_TBL_GET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_B_TBL_GET_ID, 
    "iqm_vsq_descriptor_rate_class_group_b_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_descriptor_rate_class_group_b_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_B_TBL_GET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_B_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_C_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_C_TBL_SET_ID, 
    "iqm_vsq_descriptor_rate_class_group_c_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_descriptor_rate_class_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_rc_c 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_C_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_C_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_C_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_C_TBL_SET_TBL_DATA_VSQ_RC_C_ID, 
    "vsq_rc_c", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_rc_c:\n\r"
    "  uint32 vsq_rc_c\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_descriptor_rate_class_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_rc_c 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_C_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_C_TBL_GET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_C_TBL_GET_ID, 
    "iqm_vsq_descriptor_rate_class_group_c_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_descriptor_rate_class_group_c_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_C_TBL_GET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_C_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_D_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_D_TBL_SET_ID, 
    "iqm_vsq_descriptor_rate_class_group_d_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_descriptor_rate_class_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_rc_d 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_D_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_D_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_D_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_D_TBL_SET_TBL_DATA_VSQ_RC_D_ID, 
    "vsq_rc_d", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_rc_d:\n\r"
    "  uint32 vsq_rc_d\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_descriptor_rate_class_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_rc_d 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_D_TBL_SET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_D_TBL_GET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_D_TBL_GET_ID, 
    "iqm_vsq_descriptor_rate_class_group_d_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_descriptor_rate_class_group_d_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_D_TBL_GET_IQM_VSQ_DESCRIPTOR_RATE_CLASS_GROUP_D_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_SET_ID, 
    "iqm_vsq_qsize_memory_group_a_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_a_tbl_set entry_offset_ndx 0\n\r"
    "  vsq_size_bds 0 vsq_size_wrds 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_SET_TBL_DATA_VSQ_SIZE_BDS_ID, 
    "vsq_size_bds", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_size_bds:\n\r"
    "  uint32 vsq_size_bds\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_a_tbl_set entry_offset_ndx 0\n\r"
    "  vsq_size_bds 0 vsq_size_wrds 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_SET_TBL_DATA_VSQ_SIZE_WRDS_ID, 
    "vsq_size_wrds", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_size_wrds:\n\r"
    "  uint32 vsq_size_wrds\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_a_tbl_set entry_offset_ndx 0\n\r"
    "  vsq_size_bds 0 vsq_size_wrds 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_GET_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_GET_ID, 
    "iqm_vsq_qsize_memory_group_a_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_a_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_GET_IQM_VSQ_QSIZE_MEMORY_GROUP_A_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_SET_ID, 
    "iqm_vsq_qsize_memory_group_b_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_b_tbl_set entry_offset_ndx 0\n\r"
    "  vsq_size_bds 0 vsq_size_wrds 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_SET_TBL_DATA_VSQ_SIZE_BDS_ID, 
    "vsq_size_bds", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_size_bds:\n\r"
    "  uint32 vsq_size_bds\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_b_tbl_set entry_offset_ndx 0\n\r"
    "  vsq_size_bds 0 vsq_size_wrds 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_SET_TBL_DATA_VSQ_SIZE_WRDS_ID, 
    "vsq_size_wrds", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_size_wrds:\n\r"
    "  uint32 vsq_size_wrds\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_b_tbl_set entry_offset_ndx 0\n\r"
    "  vsq_size_bds 0 vsq_size_wrds 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_GET_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_GET_ID, 
    "iqm_vsq_qsize_memory_group_b_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_b_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_GET_IQM_VSQ_QSIZE_MEMORY_GROUP_B_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_SET_ID, 
    "iqm_vsq_qsize_memory_group_c_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_c_tbl_set entry_offset_ndx 0\n\r"
    "  vsq_size_bds 0 vsq_size_wrds 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_SET_TBL_DATA_VSQ_SIZE_BDS_ID, 
    "vsq_size_bds", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_size_bds:\n\r"
    "  uint32 vsq_size_bds\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_c_tbl_set entry_offset_ndx 0\n\r"
    "  vsq_size_bds 0 vsq_size_wrds 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_SET_TBL_DATA_VSQ_SIZE_WRDS_ID, 
    "vsq_size_wrds", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_size_wrds:\n\r"
    "  uint32 vsq_size_wrds\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_c_tbl_set entry_offset_ndx 0\n\r"
    "  vsq_size_bds 0 vsq_size_wrds 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_GET_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_GET_ID, 
    "iqm_vsq_qsize_memory_group_c_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_c_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_GET_IQM_VSQ_QSIZE_MEMORY_GROUP_C_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_SET_ID, 
    "iqm_vsq_qsize_memory_group_d_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_d_tbl_set entry_offset_ndx 0\n\r"
    "  vsq_size_bds 0 vsq_size_wrds 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_SET_TBL_DATA_VSQ_SIZE_BDS_ID, 
    "vsq_size_bds", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_size_bds:\n\r"
    "  uint32 vsq_size_bds\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_d_tbl_set entry_offset_ndx 0\n\r"
    "  vsq_size_bds 0 vsq_size_wrds 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_SET_TBL_DATA_VSQ_SIZE_WRDS_ID, 
    "vsq_size_wrds", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_size_wrds:\n\r"
    "  uint32 vsq_size_wrds\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_d_tbl_set entry_offset_ndx 0\n\r"
    "  vsq_size_bds 0 vsq_size_wrds 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_SET_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_GET_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_GET_ID, 
    "iqm_vsq_qsize_memory_group_d_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_qsize_memory_group_d_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_GET_IQM_VSQ_QSIZE_MEMORY_GROUP_D_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_A_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_A_TBL_SET_ID, 
    "iqm_vsq_average_qsize_memory_group_a_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_average_qsize_memory_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_avrg_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_A_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_A_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_A_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_A_TBL_SET_TBL_DATA_VSQ_AVRG_SIZE_ID, 
    "vsq_avrg_size", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_avrg_size:\n\r"
    "  uint32 vsq_avrg_size\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_average_qsize_memory_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_avrg_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_A_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_A_TBL_GET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_A_TBL_GET_ID, 
    "iqm_vsq_average_qsize_memory_group_a_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_average_qsize_memory_group_a_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_A_TBL_GET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_A_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_B_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_B_TBL_SET_ID, 
    "iqm_vsq_average_qsize_memory_group_b_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_average_qsize_memory_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_avrg_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_B_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_B_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_B_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_B_TBL_SET_TBL_DATA_VSQ_AVRG_SIZE_ID, 
    "vsq_avrg_size", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_avrg_size:\n\r"
    "  uint32 vsq_avrg_size\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_average_qsize_memory_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_avrg_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_B_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_B_TBL_GET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_B_TBL_GET_ID, 
    "iqm_vsq_average_qsize_memory_group_b_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_average_qsize_memory_group_b_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_B_TBL_GET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_B_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_C_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_C_TBL_SET_ID, 
    "iqm_vsq_average_qsize_memory_group_c_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_average_qsize_memory_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_avrg_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_C_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_C_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_C_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_C_TBL_SET_TBL_DATA_VSQ_AVRG_SIZE_ID, 
    "vsq_avrg_size", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_avrg_size:\n\r"
    "  uint32 vsq_avrg_size\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_average_qsize_memory_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_avrg_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_C_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_C_TBL_GET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_C_TBL_GET_ID, 
    "iqm_vsq_average_qsize_memory_group_c_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_average_qsize_memory_group_c_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_C_TBL_GET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_C_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_D_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_D_TBL_SET_ID, 
    "iqm_vsq_average_qsize_memory_group_d_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_average_qsize_memory_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_avrg_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_D_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_D_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_D_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_D_TBL_SET_TBL_DATA_VSQ_AVRG_SIZE_ID, 
    "vsq_avrg_size", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vsq_avrg_size:\n\r"
    "  uint32 vsq_avrg_size\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_average_qsize_memory_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vsq_avrg_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_D_TBL_SET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_D_TBL_GET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_D_TBL_GET_ID, 
    "iqm_vsq_average_qsize_memory_group_d_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_average_qsize_memory_group_d_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_D_TBL_GET_IQM_VSQ_AVERAGE_QSIZE_MEMORY_GROUP_D_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID, 
    "iqm_vsq_flow_control_parameters_table_group_a_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_CLEAR_THRESHOLD_BD_ID, 
    "clear_threshold_bd", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.clear_threshold_bd:\n\r"
    "  uint32 clear_threshold_bd\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_SET_THRESHOLD_BD_ID, 
    "set_threshold_bd", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.set_threshold_bd:\n\r"
    "  uint32 set_threshold_bd\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_CLEAR_THRESHOLD_WORDS_ID, 
    "clear_threshold_words", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.clear_threshold_words:\n\r"
    "  uint32 clear_threshold_words\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_SET_THRESHOLD_WORDS_ID, 
    "set_threshold_words", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.set_threshold_words:\n\r"
    "  uint32 set_threshold_words\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_RED_WEIGHT_Q_ID, 
    "red_weight_q", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.red_weight_q:\n\r"
    "  uint32 red_weight_q\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_AVRG_SIZE_EN_ID, 
    "avrg_size_en", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.avrg_size_en:\n\r"
    "  uint32 avrg_size_en\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_WRED_EN_ID, 
    "wred_en", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.wred_en:\n\r"
    "  uint32 wred_en\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_GET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_GET_ID, 
    "iqm_vsq_flow_control_parameters_table_group_a_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_a_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_GET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_A_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID, 
    "iqm_vsq_flow_control_parameters_table_group_b_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_CLEAR_THRESHOLD_BD_ID, 
    "clear_threshold_bd", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.clear_threshold_bd:\n\r"
    "  uint32 clear_threshold_bd\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_SET_THRESHOLD_BD_ID, 
    "set_threshold_bd", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.set_threshold_bd:\n\r"
    "  uint32 set_threshold_bd\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_CLEAR_THRESHOLD_WORDS_ID, 
    "clear_threshold_words", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.clear_threshold_words:\n\r"
    "  uint32 clear_threshold_words\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_SET_THRESHOLD_WORDS_ID, 
    "set_threshold_words", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.set_threshold_words:\n\r"
    "  uint32 set_threshold_words\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_RED_WEIGHT_Q_ID, 
    "red_weight_q", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.red_weight_q:\n\r"
    "  uint32 red_weight_q\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_AVRG_SIZE_EN_ID, 
    "avrg_size_en", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.avrg_size_en:\n\r"
    "  uint32 avrg_size_en\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_WRED_EN_ID, 
    "wred_en", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.wred_en:\n\r"
    "  uint32 wred_en\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_GET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_GET_ID, 
    "iqm_vsq_flow_control_parameters_table_group_b_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_b_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_GET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_B_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID, 
    "iqm_vsq_flow_control_parameters_table_group_c_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_CLEAR_THRESHOLD_BD_ID, 
    "clear_threshold_bd", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.clear_threshold_bd:\n\r"
    "  uint32 clear_threshold_bd\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_SET_THRESHOLD_BD_ID, 
    "set_threshold_bd", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.set_threshold_bd:\n\r"
    "  uint32 set_threshold_bd\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_CLEAR_THRESHOLD_WORDS_ID, 
    "clear_threshold_words", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.clear_threshold_words:\n\r"
    "  uint32 clear_threshold_words\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_SET_THRESHOLD_WORDS_ID, 
    "set_threshold_words", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.set_threshold_words:\n\r"
    "  uint32 set_threshold_words\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_RED_WEIGHT_Q_ID, 
    "red_weight_q", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.red_weight_q:\n\r"
    "  uint32 red_weight_q\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_AVRG_SIZE_EN_ID, 
    "avrg_size_en", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.avrg_size_en:\n\r"
    "  uint32 avrg_size_en\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_WRED_EN_ID, 
    "wred_en", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.wred_en:\n\r"
    "  uint32 wred_en\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_GET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_GET_ID, 
    "iqm_vsq_flow_control_parameters_table_group_c_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_c_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_GET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_C_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID, 
    "iqm_vsq_flow_control_parameters_table_group_d_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_CLEAR_THRESHOLD_BD_ID, 
    "clear_threshold_bd", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.clear_threshold_bd:\n\r"
    "  uint32 clear_threshold_bd\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_SET_THRESHOLD_BD_ID, 
    "set_threshold_bd", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.set_threshold_bd:\n\r"
    "  uint32 set_threshold_bd\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_CLEAR_THRESHOLD_WORDS_ID, 
    "clear_threshold_words", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.clear_threshold_words:\n\r"
    "  uint32 clear_threshold_words\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_SET_THRESHOLD_WORDS_ID, 
    "set_threshold_words", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.set_threshold_words:\n\r"
    "  uint32 set_threshold_words\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_RED_WEIGHT_Q_ID, 
    "red_weight_q", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.red_weight_q:\n\r"
    "  uint32 red_weight_q\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_AVRG_SIZE_EN_ID, 
    "avrg_size_en", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.avrg_size_en:\n\r"
    "  uint32 avrg_size_en\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_WRED_EN_ID, 
    "wred_en", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.wred_en:\n\r"
    "  uint32 wred_en\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 clear_threshold_bd 0 set_threshold_bd 0\n\r"
    "  clear_threshold_words 0 set_threshold_words 0 red_weight_q 0 avrg_size_en 0\n\r"
    "  wred_en 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_GET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_GET_ID, 
    "iqm_vsq_flow_control_parameters_table_group_d_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_flow_control_parameters_table_group_d_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_GET_IQM_VSQ_FLOW_CONTROL_PARAMETERS_TABLE_GROUP_D_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID, 
    "iqm_vsq_queue_parameters_table_group_a_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_VQ_MAX_SIZE_WORDS_ID, 
    "vq_max_size_words", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vq_max_size_words:\n\r"
    "  uint32 vq_max_size_words\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_VQ_MAX_SIZE_BDS_ID, 
    "vq_max_size_bds", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vq_max_size_bds:\n\r"
    "  uint32 vq_max_size_bds\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_VQ_WRED_PCKT_SZ_IGNR_ID, 
    "vq_wred_pckt_sz_ignr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vq_wred_pckt_sz_ignr:\n\r"
    "  uint32 vq_wred_pckt_sz_ignr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_MIN_AVRG_TH_ID, 
    "min_avrg_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.min_avrg_th:\n\r"
    "  uint32 min_avrg_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_MAX_AVRG_TH_ID, 
    "max_avrg_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.max_avrg_th:\n\r"
    "  uint32 max_avrg_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_C1_ID, 
    "c1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c1:\n\r"
    "  uint32 c1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_C3_ID, 
    "c3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c3:\n\r"
    "  uint32 c3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_TBL_DATA_C2_ID, 
    "c2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c2:\n\r"
    "  uint32 c2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_a_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_GET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_GET_ID, 
    "iqm_vsq_queue_parameters_table_group_a_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_a_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_GET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_A_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID, 
    "iqm_vsq_queue_parameters_table_group_b_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_VQ_MAX_SIZE_WORDS_ID, 
    "vq_max_size_words", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vq_max_size_words:\n\r"
    "  uint32 vq_max_size_words\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_VQ_MAX_SIZE_BDS_ID, 
    "vq_max_size_bds", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vq_max_size_bds:\n\r"
    "  uint32 vq_max_size_bds\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_VQ_WRED_PCKT_SZ_IGNR_ID, 
    "vq_wred_pckt_sz_ignr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vq_wred_pckt_sz_ignr:\n\r"
    "  uint32 vq_wred_pckt_sz_ignr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_MIN_AVRG_TH_ID, 
    "min_avrg_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.min_avrg_th:\n\r"
    "  uint32 min_avrg_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_MAX_AVRG_TH_ID, 
    "max_avrg_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.max_avrg_th:\n\r"
    "  uint32 max_avrg_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_C1_ID, 
    "c1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c1:\n\r"
    "  uint32 c1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_C3_ID, 
    "c3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c3:\n\r"
    "  uint32 c3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_TBL_DATA_C2_ID, 
    "c2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c2:\n\r"
    "  uint32 c2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_b_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_GET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_GET_ID, 
    "iqm_vsq_queue_parameters_table_group_b_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_b_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_GET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_B_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID, 
    "iqm_vsq_queue_parameters_table_group_c_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_VQ_MAX_SIZE_WORDS_ID, 
    "vq_max_size_words", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vq_max_size_words:\n\r"
    "  uint32 vq_max_size_words\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_VQ_MAX_SIZE_BDS_ID, 
    "vq_max_size_bds", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vq_max_size_bds:\n\r"
    "  uint32 vq_max_size_bds\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_VQ_WRED_PCKT_SZ_IGNR_ID, 
    "vq_wred_pckt_sz_ignr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vq_wred_pckt_sz_ignr:\n\r"
    "  uint32 vq_wred_pckt_sz_ignr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_MIN_AVRG_TH_ID, 
    "min_avrg_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.min_avrg_th:\n\r"
    "  uint32 min_avrg_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_MAX_AVRG_TH_ID, 
    "max_avrg_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.max_avrg_th:\n\r"
    "  uint32 max_avrg_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_C1_ID, 
    "c1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c1:\n\r"
    "  uint32 c1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_C3_ID, 
    "c3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c3:\n\r"
    "  uint32 c3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_TBL_DATA_C2_ID, 
    "c2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c2:\n\r"
    "  uint32 c2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_c_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_GET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_GET_ID, 
    "iqm_vsq_queue_parameters_table_group_c_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_c_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_GET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_C_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID, 
    "iqm_vsq_queue_parameters_table_group_d_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_VQ_MAX_SIZE_WORDS_ID, 
    "vq_max_size_words", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vq_max_size_words:\n\r"
    "  uint32 vq_max_size_words\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_VQ_MAX_SIZE_BDS_ID, 
    "vq_max_size_bds", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vq_max_size_bds:\n\r"
    "  uint32 vq_max_size_bds\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_VQ_WRED_PCKT_SZ_IGNR_ID, 
    "vq_wred_pckt_sz_ignr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.vq_wred_pckt_sz_ignr:\n\r"
    "  uint32 vq_wred_pckt_sz_ignr\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_MIN_AVRG_TH_ID, 
    "min_avrg_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.min_avrg_th:\n\r"
    "  uint32 min_avrg_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_MAX_AVRG_TH_ID, 
    "max_avrg_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.max_avrg_th:\n\r"
    "  uint32 max_avrg_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_C1_ID, 
    "c1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c1:\n\r"
    "  uint32 c1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_C3_ID, 
    "c3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c3:\n\r"
    "  uint32 c3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_TBL_DATA_C2_ID, 
    "c2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.c2:\n\r"
    "  uint32 c2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_d_tbl_set\n\r"
    "  entry_offset_ndx 0 vq_max_size_words 0 vq_max_size_bds 0 vq_wred_pckt_sz_ignr\n\r"
    "  0 min_avrg_th 0 max_avrg_th 0 c1 0 c3 0 c2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_GET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_GET_ID, 
    "iqm_vsq_queue_parameters_table_group_d_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_vsq_queue_parameters_table_group_d_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_GET_IQM_VSQ_QUEUE_PARAMETERS_TABLE_GROUP_D_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_ID, 
    "iqm_system_red_parameters_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_parameters_table_tbl_set entry_offset_ndx\n\r"
    "  0 sys_red_en 0 drp_prob_indx2 0 drp_prob_indx1 0 drp_th 0 prob_th 0 adm_th 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_SYS_RED_EN_ID, 
    "sys_red_en", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.sys_red_en:\n\r"
    "  uint32 sys_red_en\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_parameters_table_tbl_set entry_offset_ndx\n\r"
    "  0 sys_red_en 0 drp_prob_indx2 0 drp_prob_indx1 0 drp_th 0 prob_th 0 adm_th 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_DRP_PROB_INDX2_ID, 
    "drp_prob_indx2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.drp_prob_indx2:\n\r"
    "  uint32 drp_prob_indx2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_parameters_table_tbl_set entry_offset_ndx\n\r"
    "  0 sys_red_en 0 drp_prob_indx2 0 drp_prob_indx1 0 drp_th 0 prob_th 0 adm_th 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_DRP_PROB_INDX1_ID, 
    "drp_prob_indx1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.drp_prob_indx1:\n\r"
    "  uint32 drp_prob_indx1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_parameters_table_tbl_set entry_offset_ndx\n\r"
    "  0 sys_red_en 0 drp_prob_indx2 0 drp_prob_indx1 0 drp_th 0 prob_th 0 adm_th 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_DRP_TH_ID, 
    "drp_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.drp_th:\n\r"
    "  uint32 drp_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_parameters_table_tbl_set entry_offset_ndx\n\r"
    "  0 sys_red_en 0 drp_prob_indx2 0 drp_prob_indx1 0 drp_th 0 prob_th 0 adm_th 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_PROB_TH_ID, 
    "prob_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.prob_th:\n\r"
    "  uint32 prob_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_parameters_table_tbl_set entry_offset_ndx\n\r"
    "  0 sys_red_en 0 drp_prob_indx2 0 drp_prob_indx1 0 drp_th 0 prob_th 0 adm_th 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_TBL_DATA_ADM_TH_ID, 
    "adm_th", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.adm_th:\n\r"
    "  uint32 adm_th\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_parameters_table_tbl_set entry_offset_ndx\n\r"
    "  0 sys_red_en 0 drp_prob_indx2 0 drp_prob_indx1 0 drp_th 0 prob_th 0 adm_th 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_GET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_GET_ID, 
    "iqm_system_red_parameters_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_parameters_table_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_GET_IQM_SYSTEM_RED_PARAMETERS_TABLE_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_DROP_PROBABILITY_VALUES_TBL_SET_IQM_SYSTEM_RED_DROP_PROBABILITY_VALUES_TBL_SET_ID, 
    "iqm_system_red_drop_probability_values_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_drop_probability_values_tbl_set\n\r"
    "  entry_offset_ndx 0 drp_prob 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_DROP_PROBABILITY_VALUES_TBL_SET_IQM_SYSTEM_RED_DROP_PROBABILITY_VALUES_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_DROP_PROBABILITY_VALUES_TBL_SET_IQM_SYSTEM_RED_DROP_PROBABILITY_VALUES_TBL_SET_TBL_DATA_DRP_PROB_ID, 
    "drp_prob", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.drp_prob:\n\r"
    "  uint32 drp_prob\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_drop_probability_values_tbl_set\n\r"
    "  entry_offset_ndx 0 drp_prob 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_DROP_PROBABILITY_VALUES_TBL_SET_IQM_SYSTEM_RED_DROP_PROBABILITY_VALUES_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_DROP_PROBABILITY_VALUES_TBL_GET_IQM_SYSTEM_RED_DROP_PROBABILITY_VALUES_TBL_GET_ID, 
    "iqm_system_red_drop_probability_values_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_drop_probability_values_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_DROP_PROBABILITY_VALUES_TBL_GET_IQM_SYSTEM_RED_DROP_PROBABILITY_VALUES_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID, 
    "iqm_system_red_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH14_ID, 
    "qsz_rng_th14", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th14:\n\r"
    "  uint32 qsz_rng_th14\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH13_ID, 
    "qsz_rng_th13", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th13:\n\r"
    "  uint32 qsz_rng_th13\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH12_ID, 
    "qsz_rng_th12", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th12:\n\r"
    "  uint32 qsz_rng_th12\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH11_ID, 
    "qsz_rng_th11", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th11:\n\r"
    "  uint32 qsz_rng_th11\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH10_ID, 
    "qsz_rng_th10", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th10:\n\r"
    "  uint32 qsz_rng_th10\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH9_ID, 
    "qsz_rng_th9", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th9:\n\r"
    "  uint32 qsz_rng_th9\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH8_ID, 
    "qsz_rng_th8", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th8:\n\r"
    "  uint32 qsz_rng_th8\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH7_ID, 
    "qsz_rng_th7", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th7:\n\r"
    "  uint32 qsz_rng_th7\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH6_ID, 
    "qsz_rng_th6", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th6:\n\r"
    "  uint32 qsz_rng_th6\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH5_ID, 
    "qsz_rng_th5", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th5:\n\r"
    "  uint32 qsz_rng_th5\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH4_ID, 
    "qsz_rng_th4", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th4:\n\r"
    "  uint32 qsz_rng_th4\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH3_ID, 
    "qsz_rng_th3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th3:\n\r"
    "  uint32 qsz_rng_th3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH2_ID, 
    "qsz_rng_th2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th2:\n\r"
    "  uint32 qsz_rng_th2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH1_ID, 
    "qsz_rng_th1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th1:\n\r"
    "  uint32 qsz_rng_th1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_TBL_DATA_QSZ_RNG_TH0_ID, 
    "qsz_rng_th0", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.qsz_rng_th0:\n\r"
    "  uint32 qsz_rng_th0\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_set entry_offset_ndx 0 qsz_rng_th14 0\n\r"
    "  qsz_rng_th13 0 qsz_rng_th12 0 qsz_rng_th11 0 qsz_rng_th10 0 qsz_rng_th9 0\n\r"
    "  qsz_rng_th8 0 qsz_rng_th7 0 qsz_rng_th6 0 qsz_rng_th5 0 qsz_rng_th4 0\n\r"
    "  qsz_rng_th3 0 qsz_rng_th2 0 qsz_rng_th1 0 qsz_rng_th0 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_SET_IQM_SYSTEM_RED_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_SYSTEM_RED_TBL_GET_IQM_SYSTEM_RED_TBL_GET_ID, 
    "iqm_system_red_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_system_red_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_SYSTEM_RED_TBL_GET_IQM_SYSTEM_RED_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_ID, 
    "iqm_cnm_descriptor_static_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_descriptor_static_tbl_set entry_offset_ndx 0\n\r"
    "  cp_id 0 cp_class 0 cp_enable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_TBL_DATA_CP_ID_ID, 
    "cp_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_id:\n\r"
    "  uint32 cp_id\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_descriptor_static_tbl_set entry_offset_ndx 0\n\r"
    "  cp_id 0 cp_class 0 cp_enable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_TBL_DATA_CP_CLASS_ID, 
    "cp_class", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_class:\n\r"
    "  uint32 cp_class\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_descriptor_static_tbl_set entry_offset_ndx 0\n\r"
    "  cp_id 0 cp_class 0 cp_enable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_TBL_DATA_CP_ENABLE_ID, 
    "cp_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_enable:\n\r"
    "  uint32 cp_enable\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_descriptor_static_tbl_set entry_offset_ndx 0\n\r"
    "  cp_id 0 cp_class 0 cp_enable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_IQM_CNM_DESCRIPTOR_STATIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_DESCRIPTOR_STATIC_TBL_GET_IQM_CNM_DESCRIPTOR_STATIC_TBL_GET_ID, 
    "iqm_cnm_descriptor_static_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_descriptor_static_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_DESCRIPTOR_STATIC_TBL_GET_IQM_CNM_DESCRIPTOR_STATIC_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_SET_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_SET_ID, 
    "iqm_cnm_descriptor_dynamic_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_descriptor_dynamic_tbl_set entry_offset_ndx 0\n\r"
    "  cp_qsize_old 0 cp_enqued1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_SET_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_SET_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_SET_TBL_DATA_CP_QSIZE_OLD_ID, 
    "cp_qsize_old", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_qsize_old:\n\r"
    "  uint32 cp_qsize_old\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_descriptor_dynamic_tbl_set entry_offset_ndx 0\n\r"
    "  cp_qsize_old 0 cp_enqued1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_SET_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_SET_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_SET_TBL_DATA_CP_ENQUED1_ID, 
    "cp_enqued1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_enqued1:\n\r"
    "  uint32 cp_enqued1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_descriptor_dynamic_tbl_set entry_offset_ndx 0\n\r"
    "  cp_qsize_old 0 cp_enqued1 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_SET_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_GET_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_GET_ID, 
    "iqm_cnm_descriptor_dynamic_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_descriptor_dynamic_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_GET_IQM_CNM_DESCRIPTOR_DYNAMIC_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID, 
    "iqm_cnm_parameters_table_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_FIXED_SAMPLE_BASE_ID, 
    "cp_fixed_sample_base", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_fixed_sample_base:\n\r"
    "  uint32 cp_fixed_sample_base\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_SAMPLE_BASE7_ID, 
    "cp_sample_base7", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_sample_base7:\n\r"
    "  uint32 cp_sample_base7\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_SAMPLE_BASE6_ID, 
    "cp_sample_base6", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_sample_base6:\n\r"
    "  uint32 cp_sample_base6\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_SAMPLE_BASE5_ID, 
    "cp_sample_base5", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_sample_base5:\n\r"
    "  uint32 cp_sample_base5\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_SAMPLE_BASE4_ID, 
    "cp_sample_base4", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_sample_base4:\n\r"
    "  uint32 cp_sample_base4\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_SAMPLE_BASE3_ID, 
    "cp_sample_base3", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_sample_base3:\n\r"
    "  uint32 cp_sample_base3\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_SAMPLE_BASE2_ID, 
    "cp_sample_base2", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_sample_base2:\n\r"
    "  uint32 cp_sample_base2\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_SAMPLE_BASE1_ID, 
    "cp_sample_base1", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_sample_base1:\n\r"
    "  uint32 cp_sample_base1\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_SAMPLE_BASE0_ID, 
    "cp_sample_base0", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_sample_base0:\n\r"
    "  uint32 cp_sample_base0\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_QUANT_DIV_ID, 
    "cp_quant_div", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_quant_div:\n\r"
    "  uint32 cp_quant_div\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_FB_MAX_VAL_ID, 
    "cp_fb_max_val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_fb_max_val:\n\r"
    "  uint32 cp_fb_max_val\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_W_ID, 
    "cp_w", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_w:\n\r"
    "  uint32 cp_w\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_TBL_DATA_CP_QEQ_ID, 
    "cp_qeq", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cp_qeq:\n\r"
    "  uint32 cp_qeq\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_set entry_offset_ndx 0\n\r"
    "  cp_fixed_sample_base 0 cp_sample_base7 0 cp_sample_base6 0 cp_sample_base5 0\n\r"
    "  cp_sample_base4 0 cp_sample_base3 0 cp_sample_base2 0 cp_sample_base1 0\n\r"
    "  cp_sample_base0 0 cp_quant_div 0 cp_fb_max_val 0 cp_w 0 cp_qeq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_SET_IQM_CNM_PARAMETERS_TABLE_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNM_PARAMETERS_TABLE_TBL_GET_IQM_CNM_PARAMETERS_TABLE_TBL_GET_ID, 
    "iqm_cnm_parameters_table_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnm_parameters_table_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNM_PARAMETERS_TABLE_TBL_GET_IQM_CNM_PARAMETERS_TABLE_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_SET_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_SET_ID, 
    "iqm_meter_processor_result_resolve_table_static_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_meter_processor_result_resolve_table_static_tbl_set\n\r"
    "  entry_offset_ndx 0 etm_de 0 iqm_dp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_SET_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_SET_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_SET_TBL_DATA_ETM_DE_ID, 
    "etm_de", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.etm_de:\n\r"
    "  uint32 etm_de\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_meter_processor_result_resolve_table_static_tbl_set\n\r"
    "  entry_offset_ndx 0 etm_de 0 iqm_dp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_SET_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_SET_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_SET_TBL_DATA_IQM_DP_ID, 
    "iqm_dp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.iqm_dp:\n\r"
    "  uint32 iqm_dp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_meter_processor_result_resolve_table_static_tbl_set\n\r"
    "  entry_offset_ndx 0 etm_de 0 iqm_dp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_SET_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_GET_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_GET_ID, 
    "iqm_meter_processor_result_resolve_table_static_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_meter_processor_result_resolve_table_static_tbl_get\n\r"
    "  entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_GET_IQM_METER_PROCESSOR_RESULT_RESOLVE_TABLE_STATIC_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFSELA_TBL_SET_IQM_PRFSELA_TBL_SET_ID, 
    "iqm_prfsela_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfsela_tbl_set entry_offset_ndx 0 profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFSELA_TBL_SET_IQM_PRFSELA_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFSELA_TBL_SET_IQM_PRFSELA_TBL_SET_TBL_DATA_PROFILE_ID, 
    "profile", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.profile:\n\r"
    "  uint32 profile\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfsela_tbl_set entry_offset_ndx 0 profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFSELA_TBL_SET_IQM_PRFSELA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFSELA_TBL_GET_IQM_PRFSELA_TBL_GET_ID, 
    "iqm_prfsela_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfsela_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFSELA_TBL_GET_IQM_PRFSELA_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFSELB_TBL_SET_IQM_PRFSELB_TBL_SET_ID, 
    "iqm_prfselb_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfselb_tbl_set entry_offset_ndx 0 profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFSELB_TBL_SET_IQM_PRFSELB_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFSELB_TBL_SET_IQM_PRFSELB_TBL_SET_TBL_DATA_PROFILE_ID, 
    "profile", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.profile:\n\r"
    "  uint32 profile\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfselb_tbl_set entry_offset_ndx 0 profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFSELB_TBL_SET_IQM_PRFSELB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFSELB_TBL_GET_IQM_PRFSELB_TBL_GET_ID, 
    "iqm_prfselb_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfselb_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFSELB_TBL_GET_IQM_PRFSELB_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID, 
    "iqm_prfcfga_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_EBS_EXPONENT_ID, 
    "ebs_exponent", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ebs_exponent:\n\r"
    "  uint32 ebs_exponent\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_EBS_MANTISSA_64_ID, 
    "ebs_mantissa_64", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ebs_mantissa_64:\n\r"
    "  uint32 ebs_mantissa_64\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_RESET_EIR_ID, 
    "reset_eir", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.reset_eir:\n\r"
    "  uint32 reset_eir\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_EIR_REVERSE_EXPONENT_ID, 
    "eir_reverse_exponent", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.eir_reverse_exponent:\n\r"
    "  uint32 eir_reverse_exponent\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_EIR_MANTISSA_64_ID, 
    "eir_mantissa_64", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.eir_mantissa_64:\n\r"
    "  uint32 eir_mantissa_64\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_CBS_EXPONENT_ID, 
    "cbs_exponent", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cbs_exponent:\n\r"
    "  uint32 cbs_exponent\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_CBS_MANTISSA_64_ID, 
    "cbs_mantissa_64", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cbs_mantissa_64:\n\r"
    "  uint32 cbs_mantissa_64\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_RESET_CIR_ID, 
    "reset_cir", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.reset_cir:\n\r"
    "  uint32 reset_cir\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_CIR_REVERSE_EXPONENT_ID, 
    "cir_reverse_exponent", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cir_reverse_exponent:\n\r"
    "  uint32 cir_reverse_exponent\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_CIR_MANTISSA_64_ID, 
    "cir_mantissa_64", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cir_mantissa_64:\n\r"
    "  uint32 cir_mantissa_64\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_FAIRNESS_MODE_ID, 
    "fairness_mode", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fairness_mode:\n\r"
    "  uint32 fairness_mode\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_COUPLING_FLAG_ID, 
    "coupling_flag", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.coupling_flag:\n\r"
    "  uint32 coupling_flag\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_TBL_DATA_COLOR_AWARE_ID, 
    "color_aware", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.color_aware:\n\r"
    "  uint32 color_aware\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_SET_IQM_PRFCFGA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGA_TBL_GET_IQM_PRFCFGA_TBL_GET_ID, 
    "iqm_prfcfga_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfga_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGA_TBL_GET_IQM_PRFCFGA_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID, 
    "iqm_prfcfgb_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_EBS_EXPONENT_ID, 
    "ebs_exponent", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ebs_exponent:\n\r"
    "  uint32 ebs_exponent\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_EBS_MANTISSA_64_ID, 
    "ebs_mantissa_64", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ebs_mantissa_64:\n\r"
    "  uint32 ebs_mantissa_64\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_RESET_EIR_ID, 
    "reset_eir", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.reset_eir:\n\r"
    "  uint32 reset_eir\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_EIR_REVERSE_EXPONENT_ID, 
    "eir_reverse_exponent", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.eir_reverse_exponent:\n\r"
    "  uint32 eir_reverse_exponent\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_EIR_MANTISSA_64_ID, 
    "eir_mantissa_64", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.eir_mantissa_64:\n\r"
    "  uint32 eir_mantissa_64\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_CBS_EXPONENT_ID, 
    "cbs_exponent", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cbs_exponent:\n\r"
    "  uint32 cbs_exponent\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_CBS_MANTISSA_64_ID, 
    "cbs_mantissa_64", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cbs_mantissa_64:\n\r"
    "  uint32 cbs_mantissa_64\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_RESET_CIR_ID, 
    "reset_cir", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.reset_cir:\n\r"
    "  uint32 reset_cir\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_CIR_REVERSE_EXPONENT_ID, 
    "cir_reverse_exponent", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cir_reverse_exponent:\n\r"
    "  uint32 cir_reverse_exponent\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_CIR_MANTISSA_64_ID, 
    "cir_mantissa_64", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cir_mantissa_64:\n\r"
    "  uint32 cir_mantissa_64\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_FAIRNESS_MODE_ID, 
    "fairness_mode", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.fairness_mode:\n\r"
    "  uint32 fairness_mode\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_COUPLING_FLAG_ID, 
    "coupling_flag", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.coupling_flag:\n\r"
    "  uint32 coupling_flag\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_TBL_DATA_COLOR_AWARE_ID, 
    "color_aware", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.color_aware:\n\r"
    "  uint32 color_aware\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_set entry_offset_ndx 0 ebs_exponent 0\n\r"
    "  ebs_mantissa_64 0 reset_eir 0 eir_reverse_exponent 0 eir_mantissa_64 0\n\r"
    "  cbs_exponent 0 cbs_mantissa_64 0 reset_cir 0 cir_reverse_exponent 0\n\r"
    "  cir_mantissa_64 0 fairness_mode 0 coupling_flag 0 color_aware 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_SET_IQM_PRFCFGB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_PRFCFGB_TBL_GET_IQM_PRFCFGB_TBL_GET_ID, 
    "iqm_prfcfgb_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_prfcfgb_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_PRFCFGB_TBL_GET_IQM_PRFCFGB_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_NORMAL_DYNAMICA_TBL_SET_IQM_NORMAL_DYNAMICA_TBL_SET_ID, 
    "iqm_normal_dynamica_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_normal_dynamica_tbl_set entry_offset_ndx 0 ebl 0 cbl\n\r"
    "  0 time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_NORMAL_DYNAMICA_TBL_SET_IQM_NORMAL_DYNAMICA_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_NORMAL_DYNAMICA_TBL_SET_IQM_NORMAL_DYNAMICA_TBL_SET_TBL_DATA_EBL_ID, 
    "ebl", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ebl:\n\r"
    "  uint32 ebl\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_normal_dynamica_tbl_set entry_offset_ndx 0 ebl 0 cbl\n\r"
    "  0 time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_NORMAL_DYNAMICA_TBL_SET_IQM_NORMAL_DYNAMICA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_NORMAL_DYNAMICA_TBL_SET_IQM_NORMAL_DYNAMICA_TBL_SET_TBL_DATA_CBL_ID, 
    "cbl", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cbl:\n\r"
    "  uint32 cbl\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_normal_dynamica_tbl_set entry_offset_ndx 0 ebl 0 cbl\n\r"
    "  0 time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_NORMAL_DYNAMICA_TBL_SET_IQM_NORMAL_DYNAMICA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_NORMAL_DYNAMICA_TBL_SET_IQM_NORMAL_DYNAMICA_TBL_SET_TBL_DATA_TIME_STAMP_ID, 
    "time_stamp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.time_stamp:\n\r"
    "  uint32 time_stamp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_normal_dynamica_tbl_set entry_offset_ndx 0 ebl 0 cbl\n\r"
    "  0 time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_NORMAL_DYNAMICA_TBL_SET_IQM_NORMAL_DYNAMICA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_NORMAL_DYNAMICA_TBL_GET_IQM_NORMAL_DYNAMICA_TBL_GET_ID, 
    "iqm_normal_dynamica_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_normal_dynamica_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_NORMAL_DYNAMICA_TBL_GET_IQM_NORMAL_DYNAMICA_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_NORMAL_DYNAMICB_TBL_SET_IQM_NORMAL_DYNAMICB_TBL_SET_ID, 
    "iqm_normal_dynamicb_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_normal_dynamicb_tbl_set entry_offset_ndx 0 ebl 0 cbl\n\r"
    "  0 time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_NORMAL_DYNAMICB_TBL_SET_IQM_NORMAL_DYNAMICB_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_NORMAL_DYNAMICB_TBL_SET_IQM_NORMAL_DYNAMICB_TBL_SET_TBL_DATA_EBL_ID, 
    "ebl", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ebl:\n\r"
    "  uint32 ebl\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_normal_dynamicb_tbl_set entry_offset_ndx 0 ebl 0 cbl\n\r"
    "  0 time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_NORMAL_DYNAMICB_TBL_SET_IQM_NORMAL_DYNAMICB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_NORMAL_DYNAMICB_TBL_SET_IQM_NORMAL_DYNAMICB_TBL_SET_TBL_DATA_CBL_ID, 
    "cbl", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cbl:\n\r"
    "  uint32 cbl\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_normal_dynamicb_tbl_set entry_offset_ndx 0 ebl 0 cbl\n\r"
    "  0 time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_NORMAL_DYNAMICB_TBL_SET_IQM_NORMAL_DYNAMICB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_NORMAL_DYNAMICB_TBL_SET_IQM_NORMAL_DYNAMICB_TBL_SET_TBL_DATA_TIME_STAMP_ID, 
    "time_stamp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.time_stamp:\n\r"
    "  uint32 time_stamp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_normal_dynamicb_tbl_set entry_offset_ndx 0 ebl 0 cbl\n\r"
    "  0 time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_NORMAL_DYNAMICB_TBL_SET_IQM_NORMAL_DYNAMICB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_NORMAL_DYNAMICB_TBL_GET_IQM_NORMAL_DYNAMICB_TBL_GET_ID, 
    "iqm_normal_dynamicb_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_normal_dynamicb_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_NORMAL_DYNAMICB_TBL_GET_IQM_NORMAL_DYNAMICB_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_HIGH_DYNAMICA_TBL_SET_IQM_HIGH_DYNAMICA_TBL_SET_ID, 
    "iqm_high_dynamica_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_high_dynamica_tbl_set entry_offset_ndx 0 ebl 0 cbl 0\n\r"
    "  time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_HIGH_DYNAMICA_TBL_SET_IQM_HIGH_DYNAMICA_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_HIGH_DYNAMICA_TBL_SET_IQM_HIGH_DYNAMICA_TBL_SET_TBL_DATA_EBL_ID, 
    "ebl", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ebl:\n\r"
    "  uint32 ebl\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_high_dynamica_tbl_set entry_offset_ndx 0 ebl 0 cbl 0\n\r"
    "  time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_HIGH_DYNAMICA_TBL_SET_IQM_HIGH_DYNAMICA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_HIGH_DYNAMICA_TBL_SET_IQM_HIGH_DYNAMICA_TBL_SET_TBL_DATA_CBL_ID, 
    "cbl", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cbl:\n\r"
    "  uint32 cbl\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_high_dynamica_tbl_set entry_offset_ndx 0 ebl 0 cbl 0\n\r"
    "  time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_HIGH_DYNAMICA_TBL_SET_IQM_HIGH_DYNAMICA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_HIGH_DYNAMICA_TBL_SET_IQM_HIGH_DYNAMICA_TBL_SET_TBL_DATA_TIME_STAMP_ID, 
    "time_stamp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.time_stamp:\n\r"
    "  uint32 time_stamp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_high_dynamica_tbl_set entry_offset_ndx 0 ebl 0 cbl 0\n\r"
    "  time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_HIGH_DYNAMICA_TBL_SET_IQM_HIGH_DYNAMICA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_HIGH_DYNAMICA_TBL_GET_IQM_HIGH_DYNAMICA_TBL_GET_ID, 
    "iqm_high_dynamica_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_high_dynamica_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_HIGH_DYNAMICA_TBL_GET_IQM_HIGH_DYNAMICA_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_HIGH_DYNAMICB_TBL_SET_IQM_HIGH_DYNAMICB_TBL_SET_ID, 
    "iqm_high_dynamicb_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_high_dynamicb_tbl_set entry_offset_ndx 0 ebl 0 cbl 0\n\r"
    "  time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_HIGH_DYNAMICB_TBL_SET_IQM_HIGH_DYNAMICB_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_HIGH_DYNAMICB_TBL_SET_IQM_HIGH_DYNAMICB_TBL_SET_TBL_DATA_EBL_ID, 
    "ebl", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ebl:\n\r"
    "  uint32 ebl\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_high_dynamicb_tbl_set entry_offset_ndx 0 ebl 0 cbl 0\n\r"
    "  time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_HIGH_DYNAMICB_TBL_SET_IQM_HIGH_DYNAMICB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_HIGH_DYNAMICB_TBL_SET_IQM_HIGH_DYNAMICB_TBL_SET_TBL_DATA_CBL_ID, 
    "cbl", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.cbl:\n\r"
    "  uint32 cbl\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_high_dynamicb_tbl_set entry_offset_ndx 0 ebl 0 cbl 0\n\r"
    "  time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_HIGH_DYNAMICB_TBL_SET_IQM_HIGH_DYNAMICB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_HIGH_DYNAMICB_TBL_SET_IQM_HIGH_DYNAMICB_TBL_SET_TBL_DATA_TIME_STAMP_ID, 
    "time_stamp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.time_stamp:\n\r"
    "  uint32 time_stamp\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_high_dynamicb_tbl_set entry_offset_ndx 0 ebl 0 cbl 0\n\r"
    "  time_stamp 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_HIGH_DYNAMICB_TBL_SET_IQM_HIGH_DYNAMICB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_HIGH_DYNAMICB_TBL_GET_IQM_HIGH_DYNAMICB_TBL_GET_ID, 
    "iqm_high_dynamicb_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_high_dynamicb_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_HIGH_DYNAMICB_TBL_GET_IQM_HIGH_DYNAMICB_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNTS_MEMA_TBL_SET_IQM_CNTS_MEMA_TBL_SET_ID, 
    "iqm_cnts_mema_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnts_mema_tbl_set entry_offset_ndx 0 octets_counter 0\n\r"
    "  packets_counter 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNTS_MEMA_TBL_SET_IQM_CNTS_MEMA_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNTS_MEMA_TBL_SET_IQM_CNTS_MEMA_TBL_SET_TBL_DATA_OCTETS_COUNTER_ID, 
    "octets_counter", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.octets_counter:\n\r"
    "  uint32 octets_counter\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnts_mema_tbl_set entry_offset_ndx 0 octets_counter 0\n\r"
    "  packets_counter 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNTS_MEMA_TBL_SET_IQM_CNTS_MEMA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNTS_MEMA_TBL_SET_IQM_CNTS_MEMA_TBL_SET_TBL_DATA_PACKETS_COUNTER_ID, 
    "packets_counter", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.packets_counter:\n\r"
    "  uint32 packets_counter\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnts_mema_tbl_set entry_offset_ndx 0 octets_counter 0\n\r"
    "  packets_counter 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNTS_MEMA_TBL_SET_IQM_CNTS_MEMA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNTS_MEMA_TBL_GET_IQM_CNTS_MEMA_TBL_GET_ID, 
    "iqm_cnts_mema_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnts_mema_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNTS_MEMA_TBL_GET_IQM_CNTS_MEMA_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNTS_MEMB_TBL_SET_IQM_CNTS_MEMB_TBL_SET_ID, 
    "iqm_cnts_memb_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnts_memb_tbl_set entry_offset_ndx 0 octets_counter 0\n\r"
    "  packets_counter 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNTS_MEMB_TBL_SET_IQM_CNTS_MEMB_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNTS_MEMB_TBL_SET_IQM_CNTS_MEMB_TBL_SET_TBL_DATA_OCTETS_COUNTER_ID, 
    "octets_counter", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.octets_counter:\n\r"
    "  uint32 octets_counter\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnts_memb_tbl_set entry_offset_ndx 0 octets_counter 0\n\r"
    "  packets_counter 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNTS_MEMB_TBL_SET_IQM_CNTS_MEMB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNTS_MEMB_TBL_SET_IQM_CNTS_MEMB_TBL_SET_TBL_DATA_PACKETS_COUNTER_ID, 
    "packets_counter", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.packets_counter:\n\r"
    "  uint32 packets_counter\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnts_memb_tbl_set entry_offset_ndx 0 octets_counter 0\n\r"
    "  packets_counter 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNTS_MEMB_TBL_SET_IQM_CNTS_MEMB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_CNTS_MEMB_TBL_GET_IQM_CNTS_MEMB_TBL_GET_ID, 
    "iqm_cnts_memb_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_cnts_memb_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_CNTS_MEMB_TBL_GET_IQM_CNTS_MEMB_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_OVTH_MEMA_TBL_SET_IQM_OVTH_MEMA_TBL_SET_ID, 
    "iqm_ovth_mema_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_ovth_mema_tbl_set entry_offset_ndx 0\n\r"
    "  ovth_counter_bits_index 0 ovth_counter_bits 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_OVTH_MEMA_TBL_SET_IQM_OVTH_MEMA_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_OVTH_MEMA_TBL_SET_IQM_OVTH_MEMA_TBL_SET_TBL_DATA_OVTH_COUNTER_BITS_INDEX_ID, 
    "ovth_counter_bits_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ovth_counter_bits_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_ovth_mema_tbl_set entry_offset_ndx 0\n\r"
    "  ovth_counter_bits_index 0 ovth_counter_bits 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_OVTH_MEMA_TBL_SET_IQM_OVTH_MEMA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_OVTH_MEMA_TBL_SET_IQM_OVTH_MEMA_TBL_SET_TBL_DATA_OVTH_COUNTER_BITS_ID, 
    "ovth_counter_bits", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ovth_counter_bits[ prm_ovth_counter_bits_index]:\n\r"
    "  uint32 ovth_counter_bits[2]\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_ovth_mema_tbl_set entry_offset_ndx 0\n\r"
    "  ovth_counter_bits_index 0 ovth_counter_bits 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_OVTH_MEMA_TBL_SET_IQM_OVTH_MEMA_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_OVTH_MEMA_TBL_GET_IQM_OVTH_MEMA_TBL_GET_ID, 
    "iqm_ovth_mema_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_ovth_mema_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_OVTH_MEMA_TBL_GET_IQM_OVTH_MEMA_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_OVTH_MEMB_TBL_SET_IQM_OVTH_MEMB_TBL_SET_ID, 
    "iqm_ovth_memb_tbl_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_ovth_memb_tbl_set entry_offset_ndx 0\n\r"
    "  ovth_counter_bits_index 0 ovth_counter_bits 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_OVTH_MEMB_TBL_SET_IQM_OVTH_MEMB_TBL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_OVTH_MEMB_TBL_SET_IQM_OVTH_MEMB_TBL_SET_TBL_DATA_OVTH_COUNTER_BITS_INDEX_ID, 
    "ovth_counter_bits_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ovth_counter_bits_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_ovth_memb_tbl_set entry_offset_ndx 0\n\r"
    "  ovth_counter_bits_index 0 ovth_counter_bits 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_OVTH_MEMB_TBL_SET_IQM_OVTH_MEMB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_OVTH_MEMB_TBL_SET_IQM_OVTH_MEMB_TBL_SET_TBL_DATA_OVTH_COUNTER_BITS_ID, 
    "ovth_counter_bits", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.ovth_counter_bits[ prm_ovth_counter_bits_index]:\n\r"
    "  uint32 ovth_counter_bits[2]\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_ovth_memb_tbl_set entry_offset_ndx 0\n\r"
    "  ovth_counter_bits_index 0 ovth_counter_bits 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_OVTH_MEMB_TBL_SET_IQM_OVTH_MEMB_TBL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IQM_OVTH_MEMB_TBL_GET_IQM_OVTH_MEMB_TBL_GET_ID, 
    "iqm_ovth_memb_tbl_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api soc_pb_ind_acc iqm_ovth_memb_tbl_get entry_offset_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_IQM_OVTH_MEMB_TBL_GET_IQM_OVTH_MEMB_TBL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_IND_ACC_ID, 
    "tm", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_IND_ACC_FIRST_ID,FUN_PB_IND_ACC_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } soc_pb_ind_acc*/
#ifdef UI_PB_SIG_READ_ACC/* { UI_PB_SIG_READ_ACC*/
  { 
    PARAM_PB_REG_ACCESS_SIGNAL_ING_READ_ID, 
    "signal_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_PB_REG_ACC_SIGNAL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_REG_ACCESS_SIGNAL_ING_READ_BLOCK_ID, 
    "block_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_PB_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_REG_ACCESS_SIGNAL_ING_READ_ADDR_HIGH_ID, 
    "addr_high", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_PB_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_REG_ACCESS_SIGNAL_ING_READ_ADDR_LOW_ID, 
    "addr_low", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_PB_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_REG_ACCESS_SIGNAL_ING_READ_LSB_ID, 
    "lsb", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "",   
    "",
    BIT_UI_16(FUN_PB_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_REG_ACCESS_SIGNAL_ING_READ_MSB_ID, 
    "msb", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_PB_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_REG_ACCESS_SIGNAL_ING_READ_BLOCK_ID_IS_EG, 
    "eg", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_PB_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_REG_ACCESS_SIGNALS_DUMP_ID, 
    "signals_dump", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_PB_REG_ACC_SIGNAL_DUMP_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_REG_ACCESS_ID, 
    "reg_access", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_REG_ACC_FIRST_ID,FUN_PB_REG_ACC_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } UI_PB_SIG_READ_ACC*/
#ifdef UI_ARAD_SIG_READ_ACC/* { UI_ARAD_SIG_READ_ACC*/
  { 
    PARAM_ARAD_REG_ACCESS_SIGNAL_ING_READ_ID, 
    "signal_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_ARAD_REG_ACC_SIGNAL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_ARAD_REG_ACCESS_SIGNAL_ING_READ_BLOCK_ID, 
    "block_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_ARAD_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_ARAD_REG_ACCESS_SIGNAL_ING_READ_CORE_ID, 
    "core_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_ARAD_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_ARAD_REG_ACCESS_SIGNAL_ING_READ_ADDR_HIGH_ID, 
    "addr_high", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_ARAD_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_ARAD_REG_ACCESS_SIGNAL_ING_READ_ADDR_LOW_ID, 
    "addr_low", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_ARAD_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_ARAD_REG_ACCESS_SIGNAL_ING_READ_LSB_ID, 
    "lsb", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "",   
    "",
    BIT_UI_16(FUN_ARAD_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_ARAD_REG_ACCESS_SIGNAL_ING_READ_MSB_ID, 
    "msb", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_ARAD_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_ARAD_REG_ACCESS_SIGNAL_ING_READ_BLOCK_ID_IS_EG, 
    "eg", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_ARAD_REG_ACC_SIGNAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_ARAD_REG_ACCESS_SIGNALS_DUMP_ID, 
    "signals_dump", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16(FUN_ARAD_REG_ACC_SIGNAL_DUMP_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_ARAD_REG_ACCESS_ID, 
    "reg_access_arad", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_ARAD_REG_ACC_FIRST_ID,FUN_ARAD_REG_ACC_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } UI_PB_SIG_READ_ACC*/

/* 
 * Last element. Do not remove.
 */ 
  { 
    PARAM_END_OF_LIST 
  } 
} 
#endif  
;  
/* } */

#include <soc/dpp/SAND/Utils/sand_footer.h>

/* } __UI_ROM_DEFI_PB_PP_ACC_INCLUDED__*/
#endif

