/* $Id: ui_rom_defi_fap21v_api.h,v 1.6 Broadcom SDK $
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
*/
                                                                    
                                                                    
#ifndef __UI_ROM_DEFI_FAP21V_API_INCLUDED__                       
/* { */                                                             
#define __UI_ROM_DEFI_FAP21V_API_INCLUDED__                       
                                                                    
#ifdef  __cplusplus                                                 
extern "C" {                                                      
#endif                                                              
                                                                    
#ifdef _MSC_VER                                                     
  /*                                                                
   * On MS-Windows platform this attribute is not defined.          
   */                                                               
  #define __ATTRIBUTE_PACKED__                                      
  #pragma pack(push)                                                
  #pragma pack(1)                                                   
                                                                    
#elif __GNUC__                                                      
    /*                                                              
     * GNUC packing attribute                                       
     */                                                             
     #define __ATTRIBUTE_PACKED__  __attribute__ ((packed))         
#else                                                               
     #error  "Add your system support for packed attribute."      
#endif                                                              
                                                                    
#include <appl/dpp/UserInterface/ui_pure_defi_fap21v_api.h>                        
#include <soc/dpp/fap21v/fap21v_api_mngmnt.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_network_interface.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_ingress_packet_queueing.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_ingress_traffic_management.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_egress_queues.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_egress_ports.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_end2end_scheduler.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_multicast_egress.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_multicast_fabric.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_multicast_recycling.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_fabric_links.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_general.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_packet.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_cell.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_ssr.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_callback.h>                                                               
#include <soc/dpp/fap21v/fap21v_api_diagnostics.h>    

#define UI_DIAGNOSTICS
#define UI_NETWORK_INTERFACE
#define UI_INGRESS_PACKET_QUEUEING
#define UI_INGRESS_TRAFFIC_MANAGEMENT
#define UI_EGRESS_QUEUES
#define UI_EGRESS_PORTS
#define UI_END2END_SCHEDULER
#define UI_MULTICAST_EGRESS
#define UI_MULTICAST_FABRIC
#define UI_MULTICAST_RECYCLING
#define UI_FABRIC_LINKS
#define UI_GENERAL
#define UI_CELL
#define UI_PACKET
#define UI_STATISTICS
  
 /* 
  * ENUM RULES 
  * {
  */
/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
      FAP21V_TBLS_DUMP_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "selective",
    {
      {
        FAP21V_DIAG_TBLS_DUMP_MODE_SELECTIVE,
        (long)""
        "  Dumps only part of device tables. \r\n"
        "  These are the tables that are relevant for most debug cases.\r\n"
        "",
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "full",
    {
      {
        FAP21V_DIAG_TBLS_DUMP_MODE_FULL,
        (long)""
        "  Dumps all device tables. \r\n"
        "",
        (long)NULL
      }
    }
  },   
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
   }                                                                             
#endif                                                                        
   ;    
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_DRAM_BUFF_SIZE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "size_64",                       
    {                                                                         
      {                                                                       
        FAP21V_DRAM_BUFF_SIZE_64,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_DRAM_BUFF_SIZE.FAP21V_DRAM_BUFF_SIZE_64\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "size_128",                       
    {                                                                         
      {                                                                       
        FAP21V_DRAM_BUFF_SIZE_128,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_DRAM_BUFF_SIZE.FAP21V_DRAM_BUFF_SIZE_128\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "size_256",                       
    {                                                                         
      {                                                                       
        FAP21V_DRAM_BUFF_SIZE_256,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_DRAM_BUFF_SIZE.FAP21V_DRAM_BUFF_SIZE_256\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "size_512",                       
    {                                                                         
      {                                                                       
        FAP21V_DRAM_BUFF_SIZE_512,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_DRAM_BUFF_SIZE.FAP21V_DRAM_BUFF_SIZE_512\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "size_1024",                       
    {                                                                         
      {                                                                       
        FAP21V_DRAM_BUFF_SIZE_1024,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_DRAM_BUFF_SIZE.FAP21V_DRAM_BUFF_SIZE_1024\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "size_2048",                       
    {                                                                         
      {                                                                       
        FAP21V_DRAM_BUFF_SIZE_2048,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_DRAM_BUFF_SIZE.FAP21V_DRAM_BUFF_SIZE_2048\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_MULTICAST_CLASS_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        3,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
  /*
   * Last element. Do not remove.
   */
  {
    VAL_END_OF_LIST
  }
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SPI4_2_INTERFACE_MGMT_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "a",                       
    {                                                                         
      {                                                                       
        FAP21V_SPI4_2_INTERFACE_A,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SPI4_2_INTERFACE_MGMT.FAP21V_SPI4_2_INTERFACE_A:\r\n"
        "  Only interface A.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "b",                       
    {                                                                         
      {                                                                       
        FAP21V_SPI4_2_INTERFACE_B,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SPI4_2_INTERFACE_MGMT.FAP21V_SPI4_2_INTERFACE_B:\r\n"
        "  Only interface B.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "a_b",                       
    {                                                                         
      {                                                                       
        FAP21V_SPI4_2_INTERFACE_A_B,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SPI4_2_INTERFACE_MGMT.FAP21V_SPI4_2_INTERFACE_A_B:\r\n"
        "  Both on interface A and B.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_REVISION_ID_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "fap21v_revision_id_1",                       
    {                                                                         
      {                                                                       
        FAP21V_REVISION_ID_1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_REVISION_ID.FAP21V_REVISION_ID_1:\r\n"
        "  The first SOC_SAND_FAP21V device revision\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_REVISION_SUB_TYPE_ID_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "fap21v",                       
    {                                                                         
      {                                                                       
        FAP21V_REVISION_TYPE_FAP21V,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_REVISION_SUB_TYPE_ID.FAP21V_REVISION_TYPE_FAP21V:\r\n"
        "  Device type: DN-SOC_SAND_FAP21V-DV\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "fap20v_c",                       
    {                                                                         
      {                                                                       
        FAP21V_REVISION_TYPE_FAP20V_C,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_REVISION_SUB_TYPE_ID.FAP21V_REVISION_TYPE_FAP20V_C:\r\n"
        "  Device type: DN-SOC_SAND_FAP20V-C-DV \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_NIF_FC_PORT_MODE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "spi_status_channel",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_FC_PORT_SPI_STATUS_CHANNEL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_FC_PORT_MODE.FAP21V_NIF_FC_PORT_SPI_STATUS_CHANNEL:\r\n"
        "  On the SPI4.2 status channel as calendar.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "auxiliary_channel",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_FC_PORT_AUXILIARY_CHANNEL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_FC_PORT_MODE.FAP21V_NIF_FC_PORT_AUXILIARY_CHANNEL:\r\n"
        "  On the auxiliary channel as calendar.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "inband_packets",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_FC_PORT_INBAND_PACKETS,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_FC_PORT_MODE.FAP21V_NIF_FC_PORT_INBAND_PACKETS:\r\n"
        "  On the Ingress data channel as a special flow-control data frame.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_NIF_SPI4_2_CALENDAR_LOC_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "out_of_band",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_SPI4_2_CALENDAR_OUT_OF_BAND,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_SPI4_2_CALENDAR_LOC.FAP21V_NIF_SPI4_2_CALENDAR_OUT_OF_BAND:\r\n"
        "  Calendar at the auxiliary channel, Out-of-Band.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "source_status",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_SPI4_2_CALENDAR_SOURCE_STATUS,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_SPI4_2_CALENDAR_LOC.FAP21V_NIF_SPI4_2_CALENDAR_SOURCE_STATUS:\r\n"
        "  Calendar at the status channel, Primary. Source.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sink_status",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_SPI4_2_CALENDAR_SINK_STATUS,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_SPI4_2_CALENDAR_LOC.FAP21V_NIF_SPI4_2_CALENDAR_SINK_STATUS:\r\n"
        "  Calendar at the status channel, Primary. Sink.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_NIF_SPI_BURST_SIZE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "size_64",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_SPI_BURST_SIZE_64,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_SPI_BURST_SIZE.FAP21V_NIF_SPI_BURST_SIZE_64:\r\n"
        "  Burst size is 64B\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "size_128",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_SPI_BURST_SIZE_128,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_SPI_BURST_SIZE.FAP21V_NIF_SPI_BURST_SIZE_128:\r\n"
        "  Burst size is 128B\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_NIF_HDR_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "fap20v",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_HDR_TYPE_FAP20V,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_HDR_TYPE.FAP21V_NIF_HDR_TYPE_FAP20V:\r\n"
        "  The SOC_SAND_FAP21V device works with SOC_SAND_FAP20V headers \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "fap21v",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_HDR_TYPE_PETRA,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_HDR_TYPE.FAP21V_NIF_HDR_TYPE_PETRA:\r\n"
        "  The SOC_SAND_FAP21V device works with SOC_PETRA headers \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_NIF_OTMH_EXT_OPTIONS_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "no_header",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_OTMH_EXT_NON,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_OTMH_EXT_OPTIONS.FAP21V_NIF_OTMH_EXT_NON\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "no_extension",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_OTMH_EXT_BSE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_OTMH_EXT_OPTIONS.FAP21V_NIF_OTMH_EXT_BSE:\r\n"
        "  Add base to OTMH\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ext_src",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_OTMH_EXT_SRC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_OTMH_EXT_OPTIONS.FAP21V_NIF_OTMH_EXT_SRC:\r\n"
        "  Add src ext to OTMH\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ext_dst",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_OTMH_EXT_DST,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_OTMH_EXT_OPTIONS.FAP21V_NIF_OTMH_EXT_DST:\r\n"
        "  Add dst ext to OTMH\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ext_lif",                       
    {                                                                         
      {                                                                       
        FAP21V_NIF_OTMH_EXT_LIF,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_NIF_OTMH_EXT_OPTIONS.FAP21V_NIF_OTMH_EXT_LIF:\r\n"
        "  Add outlif ext to OTMH\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_ITM_QUEUE_TYPE_QDP_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        15,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
  /*
   * Last element. Do not remove.
   */
  {
    VAL_END_OF_LIST
  }
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_ITM_QUEUE_TYPE_IPS_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        15,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SYS_RED_CONSTS_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "drop_p_val",                       
    {                                                                         
      {                                                                       
        FAP21V_SYS_RED_CONST_DROP_P_VAL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SYS_RED_CONSTS.FAP21V_SYS_RED_CONST_DROP_P_VAL:\r\n"
        "  1% is equal to 100, in the drop-probability values.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_ITM_PRIO_CONSTS_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "bit_size",                       
    {                                                                         
      {                                                                       
        FAP21V_ITM_PRIO_CONST_MAP_BIT_SIZE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_ITM_PRIO_CONSTS.FAP21V_ITM_PRIO_CONST_MAP_BIT_SIZE:\r\n"
        "  Per MAP there are 64 bits. One per queue.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "long_size",                       
    {                                                                         
      {                                                                       
        FAP21V_ITM_PRIO_CONST_MAP_LONG_SIZE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_ITM_PRIO_CONSTS.FAP21V_ITM_PRIO_CONST_MAP_LONG_SIZE:\r\n"
        "  Two 32 bits long holds 64 bit information about queue-priority.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_EGQ_QUEUE_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        3,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
  /*
   * Last element. Do not remove.
   */
  {
    VAL_END_OF_LIST
  }
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_EGQ_PORT_PRIORITY_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "low",                       
    {                                                                         
      {                                                                       
        FAP21V_EGQ_PORT_PRIORITY_LOW,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_EGQ_PORT_PRIORITY.FAP21V_EGQ_PORT_PRIORITY_LOW:\r\n"
        "  Low priority\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mid",                       
    {                                                                         
      {                                                                       
        FAP21V_EGQ_PORT_PRIORITY_MID,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_EGQ_PORT_PRIORITY.FAP21V_EGQ_PORT_PRIORITY_MID:\r\n"
        "  Medium priority\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "high",                       
    {                                                                         
      {                                                                       
        FAP21V_EGQ_PORT_PRIORITY_HIGH,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_EGQ_PORT_PRIORITY.FAP21V_EGQ_PORT_PRIORITY_HIGH:\r\n"
        "  High priority\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_EGQ_QUEUES_PER_PORT_MODE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "queues_per_egq_port_2",
    {                                                                         
      {                                                                       
        FAP21V_EGQ_2_QUEUES_PER_PORT_MODE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_EGQ_QUEUES_PER_PORT_MODE.FAP21V_EGQ_2_QUEUES_PER_PORT_MODE:\r\n"
        "  2 queues for each port. The first is dedicated for scheduled traffic and the\r\n"
        "  second is dedicated for unscheduled traffic. Ports range 0-63\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "queues_per_egq_port_4",                       
    {                                                                         
      {                                                                       
        FAP21V_EGQ_4_QUEUES_PER_PORT_MODE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_EGQ_QUEUES_PER_PORT_MODE.FAP21V_EGQ_4_QUEUES_PER_PORT_MODE:\r\n"
        "  4 queues for each port. Two are dedicated for scheduled traffic and the other\r\n"
        "  two are dedicated for unscheduled traffic. Ports range 0-30\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_EGQ_MCI_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "mci_0",                       
    {                                                                         
      {                                                                       
        FAP21V_EGQ_MCI_0,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_EGQ_MCI_TYPE.FAP21V_EGQ_MCI_0\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mci_1",                       
    {                                                                         
      {                                                                       
        FAP21V_EGQ_MCI_1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_EGQ_MCI_TYPE.FAP21V_EGQ_MCI_1\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_EGQ_PACKET_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "uc_packet",                       
    {                                                                         
      {                                                                       
        FAP21V_EGQ_UC_PACKET,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_EGQ_PACKET_TYPE.FAP21V_EGQ_UC_PACKET\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mc_sch_packet",                       
    {                                                                         
      {                                                                       
        FAP21V_EGQ_MC_SCH_PACKET,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_EGQ_PACKET_TYPE.FAP21V_EGQ_MC_SCH_PACKET\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mc_usc_packet",                       
    {                                                                         
      {                                                                       
        FAP21V_EGQ_MC_USC_PACKET,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_EGQ_PACKET_TYPE.FAP21V_EGQ_MC_USC_PACKET\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_INTERFACE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                                                                                                       
  {                                                                           
    VAL_SYMBOL,                                                               
    "spi_a",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SPI_A,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_INTERFACE.FAP21V_SCH_SPI_A:\r\n"
        "  Network interface 0\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "spi_b",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SPI_B,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_INTERFACE.FAP21V_SCH_SPI_B:\r\n"
        "  Network interface 1\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "cpu",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_IF_CPU,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_INTERFACE.FAP21V_SCH_IF_CPU:\r\n"
        "  CPU port interface\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "rcy",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_IF_RCY,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_INTERFACE.FAP21V_SCH_IF_RCY:\r\n"
        "  Recycling port (Recycling port) interface\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                                                                                                         
  {                                                                           
    VAL_SYMBOL,                                                               
    "class_ef1",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_EF1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS.FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_EF1:\r\n"
        "  SP1 - strict priority one, the highest\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "class_ef2",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_EF2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS.FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_EF2:\r\n"
        "  SP2\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "class_ef3",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_EF3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS.FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_EF3:\r\n"
        "  SP3\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "single_class_af1_wfq",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_PORT_LOWEST_HP_HR_SINGLE_CLASS_AF1_WFQ,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS.FAP21V_SCH_PORT_LOWEST_HP_HR_SINGLE_CLASS_\r\n"
        "  F1_WFQ:\r\n"
        "  Valid for single HR only\r\n"
        "  SP4 (WFQ)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "dual_or_enhanced",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_PORT_LOWEST_HP_HR_DUAL_OR_ENHANCED,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS.FAP21V_SCH_PORT_LOWEST_HP_HR_DUAL_OR_ENHAN\r\n"
        "  ED:\r\n"
        "  Valid for dual or enhanced HR onlyFor dual HR: SP4 (WFQ)For enhanced HR: SP9\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_CL_CLASS_MODE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                                                                                                         
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        5,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
  /*
   * Last element. Do not remove.
   */
  {
    VAL_END_OF_LIST
  }
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_CL_CLASS_WEIGHTS_MODE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                                                                                                         
  {                                                                           
    VAL_SYMBOL,                                                               
    "independent_per_flow",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_CL_WEIGHTS_MODE_INDEPENDENT_PER_FLOW,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_CL_CLASS_WEIGHTS_MODE.FAP21V_SCH_CL_WEIGHTS_MODE_INDEPENDENT_PER_F\r\n"
        "  OW:\r\n"
        "  Each flow installed on the CL-Scheduler WFQ has its own independent weight\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "discrete_per_flow",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_CL_WEIGHTS_MODE_DISCRETE_PER_FLOW,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_CL_CLASS_WEIGHTS_MODE.FAP21V_SCH_CL_WEIGHTS_MODE_DISCRETE_PER_FLOW:\r\n"
        "  Each flow installed on the CL-Scheduler WFQ is assigned one of 2, 3, or 4\r\n"
        "  weights. The number of available weights depends on the number of\r\n"
        "  strict-priority levels (i.e.1 level => 4 weights, 2 levels =>3 weights, 3\r\n"
        "  levels =>2 weights). All flows installed on the WFQ compete according to that\r\n"
        "  weight.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "discrete_per_class",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_CL_WEIGHTS_MODE_DISCRETE_PER_CLASS,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_CL_CLASS_WEIGHTS_MODE.FAP21V_SCH_CL_WEIGHTS_MODE_DISCRETE_PER_CLAS\r\n"
        "  :\r\n"
        "  Each flow installed on the CL-Scheduler WFQ is assigned to a class. Each\r\n"
        "  class is assigned a weight. Bandwidth is distributed among the classes\r\n"
        "  according to the weight of the class. All flows belonging to the class share\r\n"
        "  the class bandwidth equally.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_CL_ENHANCED_MODE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "disabled",                       
    {                                                                         
      {                                                                       
        FAP21V_CL_ENHANCED_MODE_DISABLED,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_CL_ENHANCED_MODE.FAP21V_CL_ENHANCED_MODE_DISABLED:\r\n"
        "  CL not in enhanced mode\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "enabled_hp",                       
    {                                                                         
      {                                                                       
        FAP21V_CL_ENHANCED_MODE_ENABLED_HP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_CL_ENHANCED_MODE.FAP21V_CL_ENHANCED_MODE_ENABLED_HP:\r\n"
        "  CL in enhanced mode, additional FQ at high priority (SP1)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "enabled",                       
    {                                                                         
      {                                                                       
        FAP21V_CL_ENHANCED_MODE_ENABLED_LP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_CL_ENHANCED_MODE_ENABLED_LP.FAP21V_CL_ENHANCED_MODE_ENABLED_LP:\r\n"
        "  2  CL in enhanced mode, additional FQ at low priority (SP5)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_SE_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                                                                                                         
  {                                                                           
    VAL_SYMBOL,                                                               
    "hr",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SE_TYPE_HR,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SE_TYPE.FAP21V_SCH_SE_TYPE_HR:\r\n"
        "  HR scheduler element\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "cl",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SE_TYPE_CL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SE_TYPE.FAP21V_SCH_SE_TYPE_CL:\r\n"
        "  CL scheduler element\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "fq",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SE_TYPE_FQ,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SE_TYPE.FAP21V_SCH_SE_TYPE_FQ:\r\n"
        "  FQ scheduler element\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_SE_STATE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "disable",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SE_STATE_DISABLE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SE_STATE.FAP21V_SCH_SE_STATE_DISABLE:\r\n"
        "  scheduler element disabled\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "enable",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SE_STATE_ENABLE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SE_STATE.FAP21V_SCH_SE_STATE_ENABLE:\r\n"
        "  scheduler element enabled\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;     

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_GROUP_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "a",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SE_STATE_DISABLE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_GROUP.FAP21V_SCH_GROUP_A:\r\n"
        "  Scheduler flow group A \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },
  {                                                                           
    VAL_SYMBOL,                                                               
    "b",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SE_STATE_DISABLE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_GROUP.FAP21V_SCH_GROUP_B:\r\n"
        "  Scheduler flow group B \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },
  {                                                                           
    VAL_SYMBOL,                                                               
    "c",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SE_STATE_DISABLE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_GROUP.FAP21V_SCH_GROUP_C:\r\n"
        "  Scheduler flow group C \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },
  {                                                                           
    VAL_SYMBOL,                                                               
    "auto",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SE_STATE_DISABLE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_GROUP.FAP21V_SCH_GROUP_AUTO:\r\n"
        "  Scheduler flow group will be determined \r\n"
        "  by the driver, according to flow group assignment policy \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },
                                                                            
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                                 

/********************************************************/        
/********************************************************/        

EXTERN CONST
   PARAM_VAL_RULES
     FAP21V_TRUE_OR_FALSE_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        1,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        

EXTERN CONST
   PARAM_VAL_RULES
     FAP21V_SCH_SE_CL_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        255,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        

EXTERN CONST
   PARAM_VAL_RULES
     FAP21V_SCH_SE_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        FAP21V_SCH_MAX_SE_ID,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        

EXTERN CONST
   PARAM_VAL_RULES
     FAP21V_SCH_FLOW_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        FAP21V_SCH_MAX_FLOW_ID,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        

EXTERN CONST
   PARAM_VAL_RULES
     FAP21V_SCH_SUBFLOW_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        1,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        

EXTERN CONST
   PARAM_VAL_RULES
     FAP21V_SCH_K_FLOW_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        55,
        24,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        

EXTERN CONST
   PARAM_VAL_RULES
     FAP21V_SCH_QUARTET_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        (16*1024 - 1),
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        

EXTERN CONST
   PARAM_VAL_RULES
     FAP21V_SCH_FIP_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        FAP21V_NOF_FAPS_IN_SYSTEM - 1,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        

EXTERN CONST
   PARAM_VAL_RULES
     FAP21V_SCH_PORT_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        79,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
 
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        

EXTERN CONST
   PARAM_VAL_RULES
     FAP21V_SCH_PORT_MAX_RATE_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        FAP21V_SCH_IF_MAX_RATE_MBPS,
        1,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
  {                                                                           
    VAL_SYMBOL,                                                               
    "auto",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_PORT_MAX_EXPECTED_RATE_AUTO,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SE_STATE.FAP21V_SCH_SE_STATE_ENABLE:\r\n"
        "  FAP21V_SCH_PORT_MAX_EXPECTED_RATE_AUTO\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_SE_HR_MODE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                                                                                                         
  {                                                                           
    VAL_SYMBOL,                                                               
    "single_wfq",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_HR_MODE_SINGLE_WFQ,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SE_HR_MODE.FAP21V_SCH_HR_MODE_SINGLE_WFQ:\r\n"
        "  SP2, SP3, SP4 WFQ(1:4K), SP5\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "dual_wfq",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_HR_MODE_DUAL_WFQ,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SE_HR_MODE.FAP21V_SCH_HR_MODE_DUAL_WFQ:\r\n"
        "  SP2, SP3, SP4 WFQ(1:4K), SP5 WFQ(1:4K), SP6\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "enhanced_prio_wfq",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_HR_MODE_ENHANCED_PRIO_WFQ,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SE_HR_MODE.FAP21V_SCH_HR_MODE_ENHANCED_PRIO_WFQ:\r\n"
        "  SP2, SP3, SP4, SP5, SP6, SP7, SP8, SP9, SP10- WFQ(1:4K), SP11\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_SUB_FLOW_HR_CLASS_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                                                                                                         
  {                                                                           
    VAL_SYMBOL,                                                               
    "class_ef1",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_CLASS_EF1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_CLASS_EF1:\r\n"
        "  SP1 - strict priority one, the highest\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "class_ef2",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_CLASS_EF2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_CLASS_EF2:\r\n"
        "  SP2\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "class_ef3",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_CLASS_EF3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_CLASS_EF3:\r\n"
        "  SP3\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "single_class_af1_wfq",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_SINGLE_CLASS_AF1_WFQ,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_SINGLE_CLASS_AF1_WFQ:\r\n"
        "  SP4 (WFQ) \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "single_class_be1",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_SINGLE_CLASS_BE1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_SINGLE_CLASS_BE1:\r\n"
        "  SP5\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "dual_class_af1_wfq",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_DUAL_CLASS_AF1_WFQ,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_DUAL_CLASS_AF1_WFQ:\r\n"
        "  SP4 (WFQ)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "dual_class_be1_wfq",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_DUAL_CLASS_BE1_WFQ,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_DUAL_CLASS_BE1_WFQ:\r\n"
        "  SP5 (WFQ)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "dual_class_be2",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_DUAL_CLASS_BE2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_DUAL_CLASS_BE2:\r\n"
        "  SP6\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "enhanced_class_af1",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_AF1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_AF1:\r\n"
        "  SP4\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "enhanced_class_af2",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_AF2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_AF2:\r\n"
        "  SP5\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "enhanced_class_af3",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_AF3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_AF3:\r\n"
        "  SP6\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "enhanced_class_af4",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_AF4,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_AF4:\r\n"
        "  SP7\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "enhanced_class_af5",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_AF5,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_AF5:\r\n"
        "  SP8\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "enhanced_class_af6",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_AF6,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_AF6:\r\n"
        "  SP9\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "enhanced_class_be1_wfq",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_BE1_WFQ,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_BE1_WFQ:\r\n"
        "  SP10 (WFQ)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "enhanced_class_be2",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_BE2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_HR_CLASS.FAP21V_SCH_FLOW_HR_ENHANCED_CLASS_BE2:\r\n"
        "  SP11\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_SUB_FLOW_CL_CLASS_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                                                                                                         
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp1",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP1:\r\n"
        "  SP1 - strict priority one, the highest\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp2",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP2:\r\n"
        "  SP2\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp3",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP3:\r\n"
        "  SP3\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp4",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP4,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP4:\r\n"
        "  SP4\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp1_wfq",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ:\r\n"
        "  SP1 with independent flow weight on WFQ\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp1_wfq1",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ1:\r\n"
        "  SP1 with discrete weight 1 on WFQ\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp1_wfq2",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ2:\r\n"
        "  SP1 with discrete weight 2 on WFQ\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp1_wfq3",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ3:\r\n"
        "  SP1 with discrete weight 3 on WFQ\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp1_wfq4",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ4,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ4:\r\n"
        "  SP1 with discrete weight 4 on WFQ\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp2_wfq",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ:\r\n"
        "  SP2 with independent flow weight on WFQ\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp2_wfq1",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ1:\r\n"
        "  SP2 with discrete weight 1 on WFQ\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp2_wfq2",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ2:\r\n"
        "  SP2 with discrete weight 2 on WFQ\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp2_wfq3",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ3:\r\n"
        "  SP2 with discrete weight 3 on WFQ\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp3_wfq1",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP3_WFQ1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP3_WFQ1:\r\n"
        "  SP3 with discrete weight 1 on WFQ\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp3_wfq2",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP3_WFQ2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP3_WFQ2:\r\n"
        "  SP3 with discrete weight 2 on WFQ\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp_0_enhanced",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP_0_ENHANCED,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP_0_ENHANCED:\r\n"
        "  SP 0 when using enhanced CL\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sp_5_enhanced",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SUB_FLOW_CL_CLASS_SP_5_ENHANCED,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SUB_FLOW_CL_CLASS.FAP21V_SCH_SUB_FLOW_CL_CLASS_SP_5_ENHANCED:\r\n"
        "  SP 5 when using enhanced CL\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_SLOW_RATE_NDX_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                                                                                                       
  {                                                                           
    VAL_SYMBOL,                                                               
    "rate_1",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SLOW_RATE_1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SLOW_RATE_NDX.FAP21V_SCH_SLOW_RATE_1:\r\n"
        "  Use ShaperSlowRate1 when in slow state\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "rate_2",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_SLOW_RATE_2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_SLOW_RATE_NDX.FAP21V_SCH_SLOW_RATE_2:\r\n"
        "  Use ShaperSlowRate1 when in slow state\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_FLOW_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                                                                                                         
  {                                                                           
    VAL_SYMBOL,                                                               
    "simple",                       
    {                                                                         
      {                                                                       
        FAP21V_FLOW_SIMPLE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_FLOW_TYPE.FAP21V_FLOW_SIMPLE:\r\n"
        "  - not an aggregate\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "aggregate",                       
    {                                                                         
      {                                                                       
        FAP21V_FLOW_AGGREGATE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_FLOW_TYPE.FAP21V_FLOW_AGGREGATE:\r\n"
        "  - used both as a scheduling element and as a scheduler flow.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_SCH_FLOW_STATUS_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "flow_off",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_OFF,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_FLOW_STATUS.FAP21V_SCH_FLOW_OFF:\r\n"
        "  The flow does not consume credits.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "flow_on",                       
    {                                                                         
      {                                                                       
        FAP21V_SCH_FLOW_ON,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_SCH_FLOW_STATUS.FAP21V_SCH_FLOW_ON:\r\n"
        "  The flow consumes credits.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_MULTICAST_EG_MIF_MODE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "mode_0",                       
    {                                                                         
      {                                                                       
        FAP21V_MULTICAST_EG_TABLE_MODE_0,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_MULTICAST_EG_MIF_MODE.FAP21V_MULTICAST_EG_TABLE_MODE_0:\r\n"
        "  Bit map representing 64 ports with up to 3 copies per port (2 entries), Or\r\n"
        "  representing 64 ports with up to 1 copies per port (1 entry).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mode_1",                       
    {                                                                         
      {                                                                       
        FAP21V_MULTICAST_EG_TABLE_MODE_1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_MULTICAST_EG_MIF_MODE.FAP21V_MULTICAST_EG_TABLE_MODE_1:\r\n"
        "  Bit map representing 26 ports with up to 31 copies per port (2 entries),or as\r\n"
        "  representing 13 ports with up to 31 copies per port (1 entry).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mode_2",                       
    {                                                                         
      {                                                                       
        FAP21V_MULTICAST_EG_TABLE_MODE_2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_MULTICAST_EG_MIF_MODE.FAP21V_MULTICAST_EG_TABLE_MODE_2:\r\n"
        "  Bit map representing 22 ports with up to 63 copies per port (2 entries),or as\r\n"
        "  representing 22 ports with up to 7 copies per port (1 entry).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mode_3",                       
    {                                                                         
      {                                                                       
        FAP21V_MULTICAST_EG_TABLE_MODE_3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_MULTICAST_EG_MIF_MODE.FAP21V_MULTICAST_EG_TABLE_MODE_3:\r\n"
        "  Bit map representing 16 ports with up to 127 copies per port (2 entries),or\r\n"
        "  as representing 16 ports with up to 15 copies per port (1 entry).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_MULTICAST_RCY_TREE_NODE_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "inner",                       
    {                                                                         
      {                                                                       
        FAP21V_MULTICAST_RCY_TREE_NODE_TYPE_NODE_INNER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_MULTICAST_RCY_TREE_NODE_TYPE_NODE_INNER.FAP21V_MULTICAST_RCY_TREE_NODE_TYPE_NODE_INNER:\r\n"
        "  0  Entry in MCR table with this type is a part of a multicast tree\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "last",                       
    {                                                                         
      {                                                                       
        FAP21V_MULTICAST_RCY_TREE_NODE_TYPE_NODE_LAST,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_MULTICAST_RCY_TREE_NODE_TYPE.FAP21V_MULTICAST_RCY_TREE_NODE_TYPE_NODE_\r\n"
        "  AST:\r\n"
        "  Entry in MCR table with this type is the last part of a multicast tree, and\r\n"
        "  will be output at the EGQ\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     FAP21V_FABRIC_LINKS_MODE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "fe",                       
    {                                                                         
      {                                                                       
        FAP21V_FABRIC_LINKS_MODE_FE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_FABRIC_LINKS_MODE.FAP21V_FABRIC_LINKS_MODE_FE:\r\n"
        "  Indicate FAP Fabric interface is connected to FE device.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "back2back",                       
    {                                                                         
      {                                                                       
        FAP21V_FABRIC_LINKS_MODE_BACK2BACK,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_FABRIC_LINKS_MODE.FAP21V_FABRIC_LINKS_MODE_BACK2BACK:\r\n"
        "  Indicate FAP Fabric interface is connected to another FAP device.Total are 2\r\n"
        "  FAP devices in the system. No FE devices\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mesh",                       
    {                                                                         
      {                                                                       
        FAP21V_FABRIC_LINKS_MODE_MESH,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_FABRIC_LINKS_MODE.FAP21V_FABRIC_LINKS_MODE_MESH:\r\n"
        "  Indicate FAP Fabric interface is connected to another 2 FAP.Total are 3, 4,\r\n"
        "  ... FAP devices in the system. No FE devices\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mult_stage_fe",                       
    {                                                                         
      {                                                                       
        FAP21V_FABRIC_LINKS_MODE_MULT_STAGE_FE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  FAP21V_FABRIC_LINKS_MODE.FAP21V_FABRIC_LINKS_MODE_MULT_STAGE_FE:\r\n"
        "  Indicate FAP Fabric interface is connected to FE device, and that the system\r\n"
        "  is multistage system\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

 /* 
  * } ENUM RULES 
  */
/********************************************************/    
/********************************************************/        
EXTERN CONST
   PARAM_VAL_RULES
     FAP21V_CELL_LINKS_NUMBER_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0 ,0,
          /*
           * Number of times this value can be repeated (i.e.,
           * value is an array). Must be at least 1!
           */
        FAP21V_CELL_NOF_LINKS_IN_PATH_LINKS,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
/********************************************************/        
/********************************************************/        
EXTERN CONST
   PARAM_VAL_RULES
     FAP21V_CELL_CPU2CPU_DATA_IN_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0 ,0,
          /*
           * Number of times this value can be repeated (i.e.,
           * value is an array). Must be at least 1!
           */
        SOC_SAND_DATA_CELL_PAYLOAD_IN_UINT32S,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
      FAP21V_SAND_DEVICE_ENTITY_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "FE1", 
    { 
      { 
        SOC_SAND_FE1_ENTITY, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  FAP21V_SAND_DEVICE_ENTITY.SOC_SAND_FE1_ENTITY:\r\n"
        "  FE1 Entity.\r\n"
        "",
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "FE2", 
    { 
      { 
        SOC_SAND_FE2_ENTITY, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  FAP21V_SAND_DEVICE_ENTITY.SOC_SAND_FE2_ENTITY:\r\n"
        "  FE2 Entity.\r\n"
        "",
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "FE3", 
    { 
      { 
        SOC_SAND_FE3_ENTITY, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  FAP21V_SAND_DEVICE_ENTITY.SOC_SAND_FE3_ENTITY:\r\n"
        "  FE3 Entity.\r\n"
        "",
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
      "FOP", 
    { 
      { 
        SOC_SAND_FOP_ENTITY, 
          /* 
          * Casting added here just to keep the compiler silent. 
          */ 
          (long)"" 
          "  FAP21V_SAND_DEVICE_ENTITY.SOC_SAND_FOP_ENTITY:\r\n"
          "  FIP Entity.\r\n"
          "",
          /* 
          * Pointer to a function to call after symbolic value 
          * has been accepted. Casting should be 'VAL_PROC_PTR'. 
          * Casting to 'long' added here just to keep the 
          * compiler silent. 
          */ 
          (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

 /* 
  * } ENUM RULES 
  */
/********************************************************/        
/********************************************************/        
EXTERN CONST                                                     
   PARAM_VAL_RULES                                               
     fap21v_api_free_vals[]                                 
#ifdef INIT                                                      
   =                                                             
{                                                                
  {                                                              
    VAL_NUMERIC,SYMB_NAME_NUMERIC,                               
    {                                                            
      {                                                          
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,                     
        0,0,                                                     
          /*                                                     
           * Number of times this value can be repeated (i.e.,   
           * value is an array). Must be at least 1!             
           */                                                    
        1,                                                       
        (VAL_PROC_PTR)NULL                                       
      }                                                          
    }                                                            
  },                                                             
/*                                                               
 * Last element. Do not remove.                                  
 */                                                              
  {                                                              
    VAL_END_OF_LIST                                              
  }                                                              
}                                                                
#endif                                                           
;                                                                
EXTERN CONST                                                     
   PARAM_VAL_RULES                                               
     fap21v_api_empty_vals[]                                 
#ifdef INIT                                                      
   =                                                             
{                                                                
/*                                                               
 * Last element. Do not remove.                                  
 */                                                              
  {                                                              
    VAL_END_OF_LIST                                              
  }                                                              
}                                                                
#endif                                                           
;      

EXTERN CONST
   PARAM_VAL_RULES
     Fap21v_api_mngmnt_mngr_fabrics_ctrl_cells_map[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        0x7FFFFFFF,
        0x80000000,
        4,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

EXTERN CONST
   PARAM_VAL_RULES
     Fap21v_api_fabric_links_mesh_mode_topology[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        0xffffff,
        0,
        10,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                          

EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_diag_iddr_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0,
        0,
        FAP21V_DIAG_IDRAM_WORD_NOF_LONGS,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                          
EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_channel_ids_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0,
        0,
        FAP21V_NOF_SPI_CHANNELS,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                          
EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_packet_payload_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        0xff,
        0,
        FAP21V_PKT_MAX_TX_CPU_PACKET_BYTE_SIZE,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                          
EXTERN CONST
   PARAM_VAL_RULES
     Fap21v_api_multicast_egress_eg_entry[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        4095,
        0,
        128,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                          
EXTERN CONST
   PARAM_VAL_RULES
     Fap21v_api_multicast_egress_port_eg_entry[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        4095,
        0,
        2,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
  
EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_lag_member_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        0x1fff,
        0,
        FAP21V_IPQ_MAX_LAG_SIZE,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                                                                                  
EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_filter_header_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        0xffffffff,
        0,
        3,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                                                                                  
EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_filter_mask_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        0xffffffff,
        0,
        3,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                                                                                  
EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_queue_size_boundaries_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        0xffff,
        0,
        FAP21V_SYS_RED_CONST_NOF_RANGES-1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                                                                                  
EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_consumed_buffers_boundaries_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        0x3fffff,
        0,
        FAP21V_SYS_RED_CONST_NOF_RANGES-1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                                                                                  
EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_tbl_rates_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_NO_MAX_VALUE,
        0,
        0,
        FAP21V_NOF_DATA_PORTS * 2,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                                                                                  
EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_coexist_mode_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        0xffffffff,
        0,
        FAP21V_FABRIC_LINKS_NOF_COEXIST_DEVICES_LONG,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                                                                                  
EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_pad_data_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        0xff,
        0,
        FAP21V_CPU_TX_FRAG_BYTE_SIZE,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;                                                                                                                  
                                                                                                                  
EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_itmh_map_2_clss_to_3_clss_0[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        7,
        0,
        4,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
                                                                                                                  
EXTERN CONST
   PARAM_VAL_RULES
     fap21v_api_otmh_map_3_mc_clss_to_2_mc_clss_0[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        3,
        0,
        8,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        
EXTERN CONST                                                                               
   PARAM                                                                                   
     fap21v_api_params[]                                                   
#ifdef INIT                                                                                
   =                                                                                       
{                                                                                          
#ifdef UI_DEFAULT_SECTION/* { default_section*/
#endif /* } default_section*/
#ifdef UI_MNGMNT/* { mngmnt*/
  {                                                                                        
    PARAM_FAP21V_REGISTER_DEVICE_REGISTER_DEVICE_ID,                                                            
    "register_device",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure registers a new device to be taken\r\n"
    "  care of by this device driver. Physical device\r\n"
    "  must be accessible by CPU when this call is made..\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt register_device bse_ddrss 0 rst_dvc_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(0), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_REGISTER_DEVICE_REGISTER_DEVICE_BASE_ADDRESS_ID,                                                            
    "bse_ddrss",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  base_address:\r\n"
    "  Base address of direct access memory assigned\r\n"
    "  for device's registers.\r\n"
    "  This parameter needs to be specified even if\r\n"
    "  physical access to device is not by direct\r\n"
    "  access memory since all logic, within driver,\r\n"
    "  up to actual physical access, assumes 'virtual'\r\n"
    "  direct access memory.\r\n"
    "  Memory block assigned by this pointer must not\r\n"
    "  overlap other memory blocks in user's system\r\n"
    "  and certainly not memory blocks assigned to other\r\n"
    "  SOC_SAND_FAP21V devices using this procedure.\r\n"
    "  RESET_DEVICE_FUNC_PTR reset_device_ptr -\r\n"
    "  BSP-function for device reset.\r\n"
    "  Refer to 'SOC_SAND_RESET_DEVICE_FUNC_PTR' definition.\r\n"
    "  uint32 *unit_ptr -\r\n"
    "  This procedure loads pointed memory with\r\n"
    "  identifier of newly added device. This identifier\r\n"
    "  is to be used by the caller for further accesses\r\n"
    "  to this device..RETURN\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt register_device bse_ddrss 0 rst_dvc_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(0), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_REGISTER_DEVICE_REGISTER_DEVICE_RESET_DEVICE_PTR_ID,                                                            
    "rst_dvc_ptr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  reset_device_ptr:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt register_device bse_ddrss 0 rst_dvc_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(0), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_UNREGISTER_DEVICE_UNREGISTER_DEVICE_ID,                                                            
    "unregister_device",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Undo fap21v_register_device()\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt unregister_device\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(1), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_ID,                                                            
    "operation_mode_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set supported feature list.\r\n"
    "  This function initialize the software databases.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_REVISION_CONTROL_REVISION_INFO_0_ENABLE_FEATURES_ID,                                                            
    "rvsn_cntrl_rvsn_nfo_0_nbl_ftrs",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  revision_control.revision_info[0].enable_features:\r\n"
    "  Enable features added in 'device_rev_id'\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_REVISION_CONTROL_REVISION_INFO_0_ENABLE_BUG_FIXES_ID,                                                            
    "rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  revision_control.revision_info[0].enable_bug_fixes:\r\n"
    "  Enable bug fixes added in 'device_rev_id'\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_REVISION_CONTROL_REVISION_INFO_0_DEVICE_REV_ID_ID,                                                            
    "rvsn_cntrl_rvsn_nfo_0_dvc_rev_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  revision_control.revision_info[0].device_rev_id:\r\n"
    "  The device revision ID. According to the device revision information read\r\n"
    "  from the device\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_REVISION_CONTROL_NOF_VALID_ENTRIES_ID,                                                            
    "rvsn_cntrl_nof_vld_ntrs",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  revision_control.nof_valid_entries:\r\n"
    "  The valid entries in the revision_info structure\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_DEVICE_SUB_TYPE_ID,                                                            
    "prtn_mod_dvc_sub_typ",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.device_sub_type:\r\n"
    "  Rev20c/21\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_OUTGOING_TM_EXTENSIONS_0_ID,                                                            
    "prtn_mod_hdr_nfo_tgng_tm_xtnsns_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.outgoing_tm.extensions[0]:\r\n"
    "  OTMH extensions\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_OUTGOING_TM_MAP_3_MC_CLASS_TO_2_MC_CLASS_0_ID,                                                            
    "prtn_mod_hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.outgoing_tm.map_3_mc_class_to_2_mc_class[0]:\r\n"
    "  ;  Map 3 bit mc to 2 bit mc. Range: 0 - 3.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_OUTGOING_TM_TYPE_ID,                                                            
    "prtn_mod_hdr_nfo_tgng_tm_typ",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.outgoing_tm.type:\r\n"
    "  The OTMH Type.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_FABRIC_TM_EXTENDED_HEADER_ID,                                                            
    "prtn_mod_hdr_nfo_fbrc_tm_xtndd_hdr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.fabric_tm.extended_header:\r\n"
    "  TRUE to enable extended Soc_petra header. FALSE otherwise.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_FABRIC_TM_MAP_3_CLASS_TO_2_CLASS_0_ID,                                                            
    "prtn_mod_hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.fabric_tm.map_3_class_to_2_class[0]:\r\n"
    "  Class mapping 3 bits (Soc_petra FTMH) to 2 bits. Range: 0 -3.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_FABRIC_TM_TYPE_ID,                                                            
    "prtn_mod_hdr_nfo_fbrc_tm_typ",
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.fabric_tm.type_in:\r\n"
    "  The FTMH Type in (i.e. LBP out).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_INGRESS_TM_EXTENDED_HEADER_ID,                                                            
    "prtn_mod_hdr_nfo_ngrss_tm_xtndd_hdr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.ingress_tm.extended_header:\r\n"
    "  If the ITMH type is Soc_petra\r\n"
    "  TRUE - enables Soc_petra header.\r\n"
    "  FALSE - disables Soc_petra header..else if the ITMH type is SOC_SAND_FAP20V\r\n"
    "  TRUE - enables SOC_SAND_FAP20V enhanced ITMH.\r\n"
    "  FALSE - disables SOC_SAND_FAP20V enhanced ITMH.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_INGRESS_TM_MAP_2_CLASS_TO_3_CLASS_0_ID,                                                            
    "prtn_mod_hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.ingress_tm.map_2_class_to_3_class[0]:\r\n"
    "  Class mapping 2 bits (FAP20 TMI mc/rcy) to 3 bits\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_INGRESS_TM_FAP21V_FTMH_MC_64_FAPS_ID,                                                            
    "prtn_mod_hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.ingress_tm.fap21v_ftmh_mc_64_faps:\r\n"
    "  Configuration to build the Soc_petra FTMH when transformation from FAP20 Recycle\r\n"
    "  header\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_INGRESS_TM_FAP21V_FTMH_EXT_MC_MSB_ID,                                                            
    "prtn_mod_hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.ingress_tm.fap21v_ftmh_ext_mc_msb:\r\n"
    "  MSB bits to be put in Soc_petra FTMH extension when transforming from SOC_SAND_FAP20V TMI\r\n"
    "  Multicast header\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_INGRESS_TM_FAP21V_FTMH_EXT_FLW_MSB_ID,                                                            
    "prtn_mod_hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.ingress_tm.fap21v_ftmh_ext_flow_msb:\r\n"
    "  MSB bit to be put in Soc_petra FTMH extension when transforming from SOC_SAND_FAP20V TMI\r\n"
    "  Flow header\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_INGRESS_TM_FAP21V_FTMH_EXT_UC_MSB_ID,                                                            
    "prtn_mod_hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.ingress_tm.fap21v_ftmh_ext_uc_msb:\r\n"
    "  MSB bits to be put in Soc_petra FTMH Outlif extension when\r\n"
    "  transforming from FAP20 TMI Unicast header.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_HEADER_INFO_INGRESS_TM_TYPE_ID,                                                            
    "prtn_mod_hdr_nfo_ngrss_tm_typ",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.header_info.ingress_tm.type:\r\n"
    "  The OTMH Type.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_ENABLE_4_EG_QUEUES_PER_PORT_ENABLE_4_EGRESS_QUEUES_PER_PORT_MC_SP_ID,                                                            
    "prtn_mod_nbl_4_eg_qs_per_prt_nbl_4_grss_qs_per_prt_mc_sp",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.enable_4_eg_queues_per_port.enable_4_egress_queues_per_port_mc\r\n"
    "  sp:\r\n"
    "  Choose if wfq is not chosen, who will get the high priority\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_ENABLE_4_EG_QUEUES_PER_PORT_ENABLE_4_EGRESS_QUEUES_PER_PORT_WFQ_ENA_ID,                                                            
    "prtn_mod_nbl_4_eg_qs_per_prt_nbl_4_grss_qs_per_prt_wfq_ena",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.enable_4_eg_queues_per_port.enable_4_egress_queues_per_port_wf\r\n"
    "  _ena:\r\n"
    "  choose to use wfq between hi priorities or sp\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_SET_MNGR_OPERATION_MODE_SET_OPERATION_MODE_ENABLE_4_EG_QUEUES_PER_PORT_ENABLE_4_EGRESS_QUEUES_PER_PORT_ENA_ID,                                                            
    "prtn_mod_nbl_4_eg_qs_per_prt_nbl_4_grss_qs_per_prt_ena",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_mode.enable_4_eg_queues_per_port.enable_4_egress_queues_per_port_en\r\n"
    "  :\r\n"
    "  enable enhanced 4 queues per port in egress\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_set rvsn_cntrl_rvsn_nfo_0_nbl_ftrs 0\r\n"
    "  rvsn_cntrl_rvsn_nfo_0_nbl_bug_fxs 0 rvsn_cntrl_rvsn_nfo_0_dvc_rev_id 0\r\n"
    "  rvsn_cntrl_nof_vld_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_OPERATION_MODE_GET_MNGR_OPERATION_MODE_GET_ID,                                                            
    "operation_mode_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set supported feature list.\r\n"
    "  This function initialize the software databases.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_operation_mode_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(3), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_NOF_QUEUES_GET_MNGR_NOF_QUEUES_GET_ID,                                                            
    "nof_queues_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Retrieves the number of queues per device, which depends on the\r\n"
    "  type of the card (FAP20C/FAP21)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_nof_queues_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(4), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_NOF_FLOWS_GET_MNGR_NOF_FLOWS_GET_ID,                                                            
    "nof_flows_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Retrieves the number of flows per device, which depends on the\r\n"
    "  type of the card (FAP20C/FAP21)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_nof_flows_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(5), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_CREDIT_WORTH_SET_MNGR_CREDIT_WORTH_SET_ID,                                                            
    "credit_worth_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Credit worth can be between 256 to 8K bytes.\r\n"
    "  It should be configured the same in all the FAPs in the systems,\r\n"
    "  and should be set before programming the scheduler.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_credit_worth_set crdt_wrth 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(6), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_CREDIT_WORTH_SET_MNGR_CREDIT_WORTH_SET_CREDIT_WORTH_ID,                                                            
    "crdt_wrth",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  credit_worth:\r\n"
    "  Credit worth. Range 256 to 8191.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_credit_worth_set crdt_wrth 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(6), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_CREDIT_WORTH_GET_MNGR_CREDIT_WORTH_GET_ID,                                                            
    "credit_worth_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Credit worth can be between 256 to 8K bytes.\r\n"
    "  It should be configured the same in all the FAPs in the systems,\r\n"
    "  and should be set before programming the scheduler.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_credit_worth_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(7), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_FAP_FABRIC_ID_SET_MNGR_FAP_FABRIC_ID_SET_ID,                                                            
    "fap_fabric_id_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the fabric system ID of the device (Unique in the system).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_fap_fabric_id_set fbrc_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(8), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_FAP_FABRIC_ID_SET_MNGR_FAP_FABRIC_ID_SET_FABRIC_ID_ID,                                                            
    "fbrc_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fabric_id:\r\n"
    "  the system ID of the device (Unique in the system).\r\n"
    "  Range: 0 - 2047.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_fap_fabric_id_set fbrc_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(8), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_FAP_FABRIC_ID_GET_MNGR_FAP_FABRIC_ID_GET_ID,                                                            
    "fap_fabric_id_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the fabric system ID of the device (Unique in the system).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_fap_fabric_id_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(9), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_ID,                                                            
    "init_sequence_phase1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Initialize the device, including:1.  Prevent all the control\r\n"
    "  cells2.  Initialize the device memories.3.  Update the device memories\r\n"
    "  initialization according to the 'hw_ajust'\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_VALID_ID,                                                            
    "hw_jst_ddr_vld",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_valid:\r\n"
    "  When asserted, the relevant interface parameter values should be set\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_TRAIN_SEQUENCE_ID,                                                            
    "hw_jst_ddr_nfo_trn_sqnc",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.train_sequence:\r\n"
    "  0x[a/b/c/d]09\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_INIT_SEQUENCE_ID,                                                            
    "hw_jst_ddr_nfo_nt_sqnc",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.init_sequence:\r\n"
    "  0x[a/b/c/d]06 Wait period between commands during INITsequence.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_AC_OP_COND_3_ID,                                                            
    "hw_jst_ddr_nfo_ac_op_cnd_3",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ac_op_cond[3]:\r\n"
    "  0x[a/b/c/d]040x[a/b/c/d]050x[a/b/c/d]070x[a/b/c/d]1a\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_AC_OP_COND_2_ID,                                                            
    "hw_jst_ddr_nfo_ac_op_cnd_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ac_op_cond[2]:\r\n"
    "  0x[a/b/c/d]040x[a/b/c/d]050x[a/b/c/d]070x[a/b/c/d]1a\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_AC_OP_COND_1_ID,                                                            
    "hw_jst_ddr_nfo_ac_op_cnd_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ac_op_cond[1]:\r\n"
    "  0x[a/b/c/d]040x[a/b/c/d]050x[a/b/c/d]070x[a/b/c/d]1a\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_AC_OP_COND_0_ID,                                                            
    "hw_jst_ddr_nfo_ac_op_cnd_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ac_op_cond[0]:\r\n"
    "  0x[a/b/c/d]040x[a/b/c/d]050x[a/b/c/d]070x[a/b/c/d]1a\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_EXT_MODE_WR_1_ID,                                                            
    "hw_jst_ddr_nfo_ddr_ext_mod_wr_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_ext_mode_wr[1]:\r\n"
    "  0x[a/b/c/d]160x[a/b/c/d]17\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_EXT_MODE_WR_0_ID,                                                            
    "hw_jst_ddr_nfo_ddr_ext_mod_wr_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_ext_mode_wr[0]:\r\n"
    "  0x[a/b/c/d]160x[a/b/c/d]17\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_EXT_MODE_2_ID,                                                            
    "hw_jst_ddr_nfo_ddr_ext_mod_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_ext_mode[2]:\r\n"
    "  0x[a/b/c/d]030x[a/b/c/d]180x[a/b/c/d]19\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_EXT_MODE_1_ID,                                                            
    "hw_jst_ddr_nfo_ddr_ext_mod_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_ext_mode[1]:\r\n"
    "  0x[a/b/c/d]030x[a/b/c/d]180x[a/b/c/d]19\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_EXT_MODE_0_ID,                                                            
    "hw_jst_ddr_nfo_ddr_ext_mod_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_ext_mode[0]:\r\n"
    "  0x[a/b/c/d]030x[a/b/c/d]180x[a/b/c/d]19\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_MODE_1_ID,                                                            
    "hw_jst_ddr_nfo_ddr_mod_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_mode[1]:\r\n"
    "  0x[a/b/c/d]010x[a/b/c/d]02\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_MODE_0_ID,                                                            
    "hw_jst_ddr_nfo_ddr_mod_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_mode[0]:\r\n"
    "  0x[a/b/c/d]010x[a/b/c/d]02\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_CONTROL_TRIGGER_DDR_CKE_DIS_ID,                                                            
    "hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_control_trigger.ddr_cke_dis:\r\n"
    "  If this bit is asserted, the DRC performs the init sequence without\r\n"
    "  de-asserting the CKE signal towards the DRAM\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_CONTROL_TRIGGER_DDR_INIT_DIS_ID,                                                            
    "hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_control_trigger.ddr_init_dis:\r\n"
    "  If the bit is asserted, the DRC does not perform the init sequence after reset\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_CONTROL_TRIGGER_DDR_DEF_VALN_ID,                                                            
    "hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_control_trigger.ddr_def_valn:\r\n"
    "  When negated after reset the hardware defaults are loaded; otherwise, the CPU\r\n"
    "  programmed values are loaded\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_CONTROL_TRIGGER_DDR_RSTN_ID,                                                            
    "hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_control_trigger.ddr_rstn:\r\n"
    "  Soft reset to all DRAM controller registers other than this register. When\r\n"
    "  asserted, depending on the value of DDRDefValn, the configuration registers\r\n"
    "  are loaded with either hardware default value or the programmed value\r\n"
    "  presently in the registers\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_ENABLE_8_BANKS_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.enable_8_banks:\r\n"
    "  True - when working with an 8-bank DRAMFALSE - when not working with an\r\n"
    "  8-bank DRAM\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_DDR_RESET_POLARITY_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.ddr_reset_polarity:\r\n"
    "  True - the reset signal towards the DRAM is active high. FALSE - the reset\r\n"
    "  signal towards the DRAM is active low.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_ODT_INFO_DYN_ODT_LENGTH_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.odt_info.dyn_odt_length:\r\n"
    "  This counter determines the number of clocks the external ODT pin is asserted\r\n"
    "  every write command. A value of 0x0 causes the ODT pin to be constant 0\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_ODT_INFO_DYN_ODT_START_DELAY_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.odt_info.dyn_odt_start_delay:\r\n"
    "  This register can be used to determine when the external ODT pin is asserted\r\n"
    "  in relation to the write command. If this register receives the same value as\r\n"
    "  WrLatency, the ODT pin is asserted in the same cycle as the write data. If\r\n"
    "  this register is set to 0, the ODT pin is asserted together with the Write\r\n"
    "  command..\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_ODT_INFO_STATIC_ODT_ENABLE_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.odt_info.static_odt_enable:\r\n"
    "  True - the DRC will assert the ODT pin after loading the extended mode\r\n"
    "  register as part of the DRAM initialization FALSE - the DRC will not assert\r\n"
    "  the ODT pin after loading the extended mode register as part of the DRAM\r\n"
    "  initialization\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_ADD_TERM_HALF_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.add_term_half:\r\n"
    "  True - the address and command termination are set to 0.5 of ZQ. FALSE - the\r\n"
    "  termination is set to ZQ.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_BURST_SIZE_MODE_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.burst_size_mode:\r\n"
    "  True - the DRC accesses the DRAM in 16B burstsFALSE - the DRC accesses the\r\n"
    "  DRAM in 32B bursts\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_WRITE_LATENCY_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.write_latency:\r\n"
    "  Write latency parameter. This register shouldreceive (write latency - 1). \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_DDR_ROLLING_TFOW_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.ddr_rolling_tfow:\r\n"
    "  No more than four banks may be activated in a rolling tFAW window\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_CNT_READ_PERIOD_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.cnt_read_period:\r\n"
    "  Minimum period between two successive Read commands (bursts) is calculated as\r\n"
    "  CntRdPrd (Burst length / 2).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_CNT_WRITE_PERIOD_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.cnt_write_period:\r\n"
    "  Minimum period between two successive Write commands (bursts) is calculated\r\n"
    "  as CntWrPrd + (Burst length / 2).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_REFRESH_BURST_SIZE_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.refresh_burst_size:\r\n"
    "  The number of consecutive refresh commands performed by the DRC. The DRC\r\n"
    "  accumulates refresh commands until it needs to perform RefreshBurstSize\r\n"
    "  commands in a single burst.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_HW_AJUST_DDR_INFO_DDR_INFO_NOF_COLUMNS_ID,                                                            
    "hw_jst_ddr_nfo_ddr_nfo_nof_clmns",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_ajust.ddr_info.ddr_info.nof_columns:\r\n"
    "  0xa13 bits 6:4 NumCols:Determines the number of bits used for columns\r\n"
    "  addressing: 0 - 8\r\n"
    "  columns bits (256 columns) 1 - 9\r\n"
    "  columns bits (512\r\n"
    "  columns) 2 - 10 columns bits (1024 columns) 3 - 11 columns bits (2048\r\n"
    "  columns) 4 - 12 columns bits (4096 columns)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE1_MNGR_INIT_SEQUENCE_PHASE1_SILENT_ID,                                                            
    "slnt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  silent:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase1 hw_jst_ddr_vld 0\r\n"
    "  hw_jst_ddr_nfo_trn_sqnc 0 hw_jst_ddr_nfo_nt_sqnc 0 hw_jst_ddr_nfo_ac_op_cnd_3\r\n"
    "  0 hw_jst_ddr_nfo_ac_op_cnd_2 0 hw_jst_ddr_nfo_ac_op_cnd_1 0\r\n"
    "  hw_jst_ddr_nfo_ac_op_cnd_0 0 hw_jst_ddr_nfo_ddr_ext_mod_wr_1 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_wr_0 0 hw_jst_ddr_nfo_ddr_ext_mod_2 0\r\n"
    "  hw_jst_ddr_nfo_ddr_ext_mod_1 0 hw_jst_ddr_nfo_ddr_ext_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_mod_1 0 hw_jst_ddr_nfo_ddr_mod_0 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_jst_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0 hw_jst_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_add_trm_hlf 0 hw_jst_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_wrt_ltncy 0 hw_jst_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_cnt_red_prd 0 hw_jst_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_jst_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0 hw_jst_ddr_nfo_ddr_nfo_uto_prchrg_pos\r\n"
    "  0 hw_jst_ddr_nfo_ddr_nfo_nof_clmns 0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_FABRICS_CTRL_CELLS_MAP_MNGR_FABRICS_CTRL_CELLS_SET_MAP_ID,                                                            
    "fabrics_ctrl_cells_map_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Maps for the first 128 devices if they are fap20v in order to send\r\n"
    "  them control cells from the older version. All devices with fap_id\r\n"
    "  higher than 128 are assume to be SOC_SAND_FAP21V/Soc_petra and will be treated\r\n"
    "  as such while sending them control cells. This function should be\r\n"
    "  called before fap21v_mngr_init_sequence_phase2.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_fabrics_ctrl_cells_map map 0xffffffff 0 0 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(11), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_FABRICS_CTRL_CELLS_MAP_MNGR_FABRICS_CTRL_CELLS_SET_MAP_MAP_0_ID,                                                            
    "map",                                                                       
    (PARAM_VAL_RULES *)&Fap21v_api_mngmnt_mngr_fabrics_ctrl_cells_map[0],                                            
    (sizeof(Fap21v_api_mngmnt_mngr_fabrics_ctrl_cells_map) / sizeof(Fap21v_api_mngmnt_mngr_fabrics_ctrl_cells_map[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,                                                                         
    "  map[0]:\r\n"
    "  FAP21V_MAX_FAP20V_IN_MIXED_SYSTEMS_IN_LONGS]-\r\n"
    "  4 longs mapping for the first 128 FAP ids whether they are fap20v\r\n"
    "  or not.\r\n"
    "  1 - SOC_SAND_FAP20V\r\n"
    "  0 - Not SOC_SAND_FAP20V.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_fabrics_ctrl_cells_map map 0xffffffff 0 0 0\r\n"
#endif
    "  The first 32 devices use SOC_SAND_FAP20V ctrl cells. All the other use Soc_petra ctrl cells",
    "",                                                                                  
    {BIT(11), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_MNGR_FABRICS_CTRL_CELLS_MAP_MNGR_FABRICS_CTRL_CELLS_GET_MAP_ID,                                                            
    "fabrics_ctrl_cells_map_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Maps for the first 128 devices if they are fap20v in order to send\r\n"
    "  them control cells from the older version. All devices with fap_id\r\n"
    "  higher than 128 are assume to be SOC_SAND_FAP21V/Soc_petra and will be treated\r\n"
    "  as such while sending them control cells. This function should be\r\n"
    "  called before fap21v_mngr_init_sequence_phase2.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_fabrics_ctrl_cells_map_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(13)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_INIT_SEQUENCE_PHASE2_MNGR_INIT_SEQUENCE_PHASE2_ID,                                                            
    "init_sequence_phase2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Enable / Disable the device from receiving and transmitting\r\n"
    "  control cells.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_init_sequence_phase2\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_ID,                                                            
    "hw_interfaces_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Initialize a sub-set of the HW interfaces of the device.\r\n"
    "  The function might be called more than once, each time with\r\n"
    "  different fields, indicated to be written to the device\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_VALID_ID,                                                            
    "hw_djstmnt_ddr_vld",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_valid:\r\n"
    "  When asserted, the relevant interface parameter values should be set\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_TRAIN_SEQUENCE_ID,                                                            
    "hw_djstmnt_ddr_nfo_trn_sqnc",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.train_sequence:\r\n"
    "  0x[a/b/c/d]09\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_INIT_SEQUENCE_ID,                                                            
    "hw_djstmnt_ddr_nfo_nt_sqnc",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.init_sequence:\r\n"
    "  0x[a/b/c/d]06 Wait period between commands during INITsequence.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_AC_OP_COND_3_ID,                                                            
    "hw_djstmnt_ddr_nfo_ac_op_cnd_3",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ac_op_cond[3]:\r\n"
    "  0x[a/b/c/d]040x[a/b/c/d]050x[a/b/c/d]070x[a/b/c/d]1a\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_AC_OP_COND_2_ID,                                                            
    "hw_djstmnt_ddr_nfo_ac_op_cnd_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ac_op_cond[2]:\r\n"
    "  0x[a/b/c/d]040x[a/b/c/d]050x[a/b/c/d]070x[a/b/c/d]1a\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_AC_OP_COND_1_ID,                                                            
    "hw_djstmnt_ddr_nfo_ac_op_cnd_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ac_op_cond[1]:\r\n"
    "  0x[a/b/c/d]040x[a/b/c/d]050x[a/b/c/d]070x[a/b/c/d]1a\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_AC_OP_COND_0_ID,                                                            
    "hw_djstmnt_ddr_nfo_ac_op_cnd_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ac_op_cond[0]:\r\n"
    "  0x[a/b/c/d]040x[a/b/c/d]050x[a/b/c/d]070x[a/b/c/d]1a\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_EXT_MODE_WR_1_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_ext_mode_wr[1]:\r\n"
    "  0x[a/b/c/d]160x[a/b/c/d]17\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_EXT_MODE_WR_0_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_ext_mode_wr[0]:\r\n"
    "  0x[a/b/c/d]160x[a/b/c/d]17\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_EXT_MODE_2_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_ext_mod_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_ext_mode[2]:\r\n"
    "  0x[a/b/c/d]030x[a/b/c/d]180x[a/b/c/d]19\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_EXT_MODE_1_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_ext_mod_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_ext_mode[1]:\r\n"
    "  0x[a/b/c/d]030x[a/b/c/d]180x[a/b/c/d]19\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_EXT_MODE_0_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_ext_mod_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_ext_mode[0]:\r\n"
    "  0x[a/b/c/d]030x[a/b/c/d]180x[a/b/c/d]19\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_MODE_1_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_mod_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_mode[1]:\r\n"
    "  0x[a/b/c/d]010x[a/b/c/d]02\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_MODE_0_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_mod_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_mode[0]:\r\n"
    "  0x[a/b/c/d]010x[a/b/c/d]02\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_CONTROL_TRIGGER_DDR_CKE_DIS_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_control_trigger.ddr_cke_dis:\r\n"
    "  If this bit is asserted, the DRC performs the init sequence without\r\n"
    "  de-asserting the CKE signal towards the DRAM\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_CONTROL_TRIGGER_DDR_INIT_DIS_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_control_trigger.ddr_init_dis:\r\n"
    "  If the bit is asserted, the DRC does not perform the init sequence after reset\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_CONTROL_TRIGGER_DDR_DEF_VALN_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_control_trigger.ddr_def_valn:\r\n"
    "  When negated after reset the hardware defaults are loaded; otherwise, the CPU\r\n"
    "  programmed values are loaded\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_CONTROL_TRIGGER_DDR_RSTN_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_control_trigger.ddr_rstn:\r\n"
    "  Soft reset to all DRAM controller registers other than this register. When\r\n"
    "  asserted, depending on the value of DDRDefValn, the configuration registers\r\n"
    "  are loaded with either hardware default value or the programmed value\r\n"
    "  presently in the registers\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_ENABLE_8_BANKS_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.enable_8_banks:\r\n"
    "  True - when working with an 8-bank DRAMFALSE - when not working with an\r\n"
    "  8-bank DRAM\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_DDR_RESET_POLARITY_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.ddr_reset_polarity:\r\n"
    "  True - the reset signal towards the DRAM is active high. FALSE - the reset\r\n"
    "  signal towards the DRAM is active low.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_ODT_INFO_DYN_ODT_LENGTH_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.odt_info.dyn_odt_length:\r\n"
    "  This counter determines the number of clocks the external ODT pin is asserted\r\n"
    "  every write command. A value of 0x0 causes the ODT pin to be constant 0\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_ODT_INFO_DYN_ODT_START_DELAY_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.odt_info.dyn_odt_start_delay:\r\n"
    "  This register can be used to determine when the external ODT pin is asserted\r\n"
    "  in relation to the write command. If this register receives the same value as\r\n"
    "  WrLatency, the ODT pin is asserted in the same cycle as the write data. If\r\n"
    "  this register is set to 0, the ODT pin is asserted together with the Write\r\n"
    "  command..\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_ODT_INFO_STATIC_ODT_ENABLE_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.odt_info.static_odt_enable:\r\n"
    "  True - the DRC will assert the ODT pin after loading the extended mode\r\n"
    "  register as part of the DRAM initialization FALSE - the DRC will not assert\r\n"
    "  the ODT pin after loading the extended mode register as part of the DRAM\r\n"
    "  initialization\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_ADD_TERM_HALF_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.add_term_half:\r\n"
    "  True - the address and command termination are set to 0.5 of ZQ. FALSE - the\r\n"
    "  termination is set to ZQ.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_BURST_SIZE_MODE_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.burst_size_mode:\r\n"
    "  True - the DRC accesses the DRAM in 16B burstsFALSE - the DRC accesses the\r\n"
    "  DRAM in 32B bursts\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_WRITE_LATENCY_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.write_latency:\r\n"
    "  Write latency parameter. This register shouldreceive (write latency - 1). \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_DDR_ROLLING_TFOW_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.ddr_rolling_tfow:\r\n"
    "  No more than four banks may be activated in a rolling tFAW window\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_CNT_READ_PERIOD_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.cnt_read_period:\r\n"
    "  Minimum period between two successive Read commands (bursts) is calculated as\r\n"
    "  CntRdPrd (Burst length / 2).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_CNT_WRITE_PERIOD_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.cnt_write_period:\r\n"
    "  Minimum period between two successive Write commands (bursts) is calculated\r\n"
    "  as CntWrPrd + (Burst length / 2).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_REFRESH_BURST_SIZE_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.refresh_burst_size:\r\n"
    "  The number of consecutive refresh commands performed by the DRC. The DRC\r\n"
    "  accumulates refresh commands until it needs to perform RefreshBurstSize\r\n"
    "  commands in a single burst.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_SET_MNGR_HW_INTERFACES_SET_HW_ADJUSTMENT_DDR_INFO_DDR_INFO_NOF_COLUMNS_ID,                                                            
    "hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hw_adjustment.ddr_info.ddr_info.nof_columns:\r\n"
    "  0xa13 bits 6:4 NumCols:Determines the number of bits used for columns\r\n"
    "  addressing: 0 - 8\r\n"
    "  columns bits (256 columns) 1 - 9\r\n"
    "  columns bits (512\r\n"
    "  columns) 2 - 10 columns bits (1024 columns) 3 - 11 columns bits (2048\r\n"
    "  columns) 4 - 12 columns bits (4096 columns)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_set hw_djstmnt_ddr_vld 0\r\n"
    "  hw_djstmnt_ddr_nfo_trn_sqnc 0 hw_djstmnt_ddr_nfo_nt_sqnc 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_3 0 hw_djstmnt_ddr_nfo_ac_op_cnd_2 0\r\n"
    "  hw_djstmnt_ddr_nfo_ac_op_cnd_1 0 hw_djstmnt_ddr_nfo_ac_op_cnd_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_1 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_wr_0 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_2 0 hw_djstmnt_ddr_nfo_ddr_ext_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_ext_mod_0 0 hw_djstmnt_ddr_nfo_ddr_mod_1 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_mod_0 0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_cke_dis\r\n"
    "  0 hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_nt_dis 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_def_vln 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_cntrl_trggr_ddr_rstn 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nbl_8_bnks 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rst_plrty 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_lngth 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_dyn_odt_strt_dly 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_odt_nfo_sttc_odt_nbl 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_add_trm_hlf 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_brst_siz_mod 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_wrt_ltncy 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_ddr_rllng_tfw 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_red_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_cnt_wrt_prd 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_rfrsh_brst_siz 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_uto_prchrg_pos 0\r\n"
    "  hw_djstmnt_ddr_nfo_ddr_nfo_nof_clmns 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_HW_INTERFACES_GET_MNGR_HW_INTERFACES_GET_ID,                                                            
    "hw_interfaces_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Initialize a sub-set of the HW interfaces of the device.\r\n"
    "  The function might be called more than once, each time with\r\n"
    "  different fields, indicated to be written to the device\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_hw_interfaces_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(14), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_ALL_CTRL_CELLS_ENABLE_MNGR_ALL_CTRL_CELLS_ENABLE_ID,                                                            
    "all_ctrl_cells_enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Enable / Disable the device from receiving and transmitting\r\n"
    "  control cells.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_all_ctrl_cells_enable nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(15), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_ALL_CTRL_CELLS_ENABLE_MNGR_ALL_CTRL_CELLS_ENABLE_ENABLE_ID,                                                            
    "enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  enable:\r\n"
    "  TRUE - enables receiving/transmitting of cells\r\n"
    "  towards the fabric.\r\n"
    "  FALSE - disables receiving/transmitting of cells\r\n"
    "  towards the fabric.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_all_ctrl_cells_enable nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(15), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_ENABLE_TRAFFIC_SET_MNGR_ENABLE_TRAFFIC_SET_ID,                                                            
    "enable_traffic_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Enable / Disable the device from receiving and transmitting\r\n"
    "  traffic.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_enable_traffic_set nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_ENABLE_TRAFFIC_SET_MNGR_ENABLE_TRAFFIC_SET_ENABLE_ID,                                                            
    "enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  enable:\r\n"
    "  TRUE - enable traffic.\r\n"
    "  FALSE - disables traffic.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_enable_traffic_set nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_ENABLE_TRAFFIC_GET_MNGR_ENABLE_TRAFFIC_GET_ID,                                                            
    "enable_traffic_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Enable / Disable the device from receiving and transmitting\r\n"
    "  traffic.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_enable_traffic_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(17), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BLOCK_DIVISION_SET_MNGR_DDR_BLOCK_DIVISION_SET_ID,                                                            
    "ddr_block_division_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Divides the DDR memory to 4 blocks.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_block_division_set blcks_0_bffr_lst 0\r\n"
    "  blcks_0_quu_lst 0 nof_blcks 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BLOCK_DIVISION_SET_MNGR_DDR_BLOCK_DIVISION_SET_INFO_BLOCKS_0_BUFFER_LAST_ID,                                                            
    "blcks_0_bffr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.blocks[0].buffer_last:\r\n"
    "  The last buffer of the blockRange: 0 - 0x1FFFFF\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_block_division_set blcks_0_bffr_lst 0\r\n"
    "  blcks_0_quu_lst 0 nof_blcks 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BLOCK_DIVISION_SET_MNGR_DDR_BLOCK_DIVISION_SET_INFO_BLOCKS_0_QUEUE_LAST_ID,                                                            
    "blcks_0_quu",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.blocks[0].queue_last:\r\n"
    "  The last queue of the block.Ranges SOC_SAND_FAP21V: 0 - 32K Ranges SOC_SAND_FAP20V C:\r\n"
    "  0 - 8K\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_block_division_set blcks_0_bffr_lst 0\r\n"
    "  blcks_0_quu_lst 0 nof_blcks 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BLOCK_DIVISION_SET_MNGR_DDR_BLOCK_DIVISION_SET_INFO_BLOCKS_1_BUFFER_LAST_ID,                                                            
    "blcks_1_bffr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.blocks[0].buffer_last:\r\n"
    "  The last buffer of the blockRange: 0 - 0x1FFFFF\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_block_division_set blcks_1_bffr_lst 0\r\n"
    "  blcks_0_quu_lst 1 nof_blcks 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BLOCK_DIVISION_SET_MNGR_DDR_BLOCK_DIVISION_SET_INFO_BLOCKS_1_QUEUE_LAST_ID,                                                            
    "blcks_1_quu",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.blocks[0].queue_last:\r\n"
    "  The last queue of the block.Ranges SOC_SAND_FAP21V: 0 - 32K Ranges SOC_SAND_FAP20V C:\r\n"
    "  0 - 8K\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_block_division_set blcks_1_bffr_lst 0\r\n"
    "  blcks_0_quu_lst 1 nof_blcks 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BLOCK_DIVISION_SET_MNGR_DDR_BLOCK_DIVISION_SET_INFO_BLOCKS_2_BUFFER_LAST_ID,                                                            
    "blcks_2_bffr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.blocks[0].buffer_last:\r\n"
    "  The last buffer of the blockRange: 0 - 0x1FFFFF\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_block_division_set blcks_2_bffr_lst 0\r\n"
    "  blcks_0_quu_lst 2 nof_blcks 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BLOCK_DIVISION_SET_MNGR_DDR_BLOCK_DIVISION_SET_INFO_BLOCKS_2_QUEUE_LAST_ID,                                                            
    "blcks_2_quu",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.blocks[0].queue_last:\r\n"
    "  The last queue of the block.Ranges SOC_SAND_FAP21V: 0 - 32K Ranges SOC_SAND_FAP20V C:\r\n"
    "  0 - 8K\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_block_division_set blcks_2_bffr_lst 0\r\n"
    "  blcks_0_quu_lst 2 nof_blcks 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BLOCK_DIVISION_SET_MNGR_DDR_BLOCK_DIVISION_SET_INFO_BLOCKS_3_BUFFER_LAST_ID,                                                            
    "blcks_3_bffr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.blocks[0].buffer_last:\r\n"
    "  The last buffer of the blockRange: 0 - 0x1FFFFF\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_block_division_set blcks_3_bffr_lst 0\r\n"
    "  blcks_0_quu_lst 0 nof_blcks 3\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BLOCK_DIVISION_SET_MNGR_DDR_BLOCK_DIVISION_SET_INFO_BLOCKS_3_QUEUE_LAST_ID,                                                            
    "blcks_3_quu",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.blocks[0].queue_last:\r\n"
    "  The last queue of the block.Ranges SOC_SAND_FAP21V: 0 - 32K Ranges SOC_SAND_FAP20V C:\r\n"
    "  0 - 8K\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_block_division_set blcks_3_bffr_lst 0\r\n"
    "  blcks_0_quu_lst 3 nof_blcks 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BLOCK_DIVISION_GET_MNGR_DDR_BLOCK_DIVISION_GET_ID,                                                            
    "ddr_block_division_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Divides the DDR memory to 4 blocks.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_block_division_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(19), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BUFFER_SIZE_SET_MNGR_DDR_BUFFER_SIZE_SET_ID,                                                            
    "ddr_buffer_size_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the DDR buffer size.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_buffer_size_set siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(20), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BUFFER_SIZE_SET_MNGR_DDR_BUFFER_SIZE_SET_SIZE_ID,                                                            
    "size",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_DRAM_BUFF_SIZE_rule[0],                                            
    (sizeof(FAP21V_DRAM_BUFF_SIZE_rule) / sizeof(FAP21V_DRAM_BUFF_SIZE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  size:\r\n"
    "  The DDR buffer size\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_buffer_size_set siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(20), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MNGR_DDR_BUFFER_SIZE_GET_MNGR_DDR_BUFFER_SIZE_GET_ID,                                                            
    "ddr_buffer_size_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the DDR buffer size.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api mngmnt mngr_ddr_buffer_size_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(21), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_MNGMNT_ID,                                                            
    "mngmnt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21), 0, 0, 0, 0, 0, 0, BIT(13)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } mngmnt*/
#ifdef UI_NETWORK_INTERFACE/* { network_interface*/
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_INTERFACE_ENABLE_SET_NIF_SPI_INTERFACE_ENABLE_SET_ID,                                                            
    "spi_interface_enable_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Enables / disables device SPI4.2 interface.\r\n"
    "  Disable/enable:\r\n"
    "  1. Source Data\r\n"
    "  (Transmitters).\r\n"
    "  2. Sink Status\r\n"
    "  (Transmitters).\r\n"
    "  3. Sink Data\r\n"
    "  (Receivers).\r\n"
    "  4. Source Status (Receivers).\r\n"
    "  Even when disabled, device SPI4.2 'Source Data' transmit clock,\r\n"
    "  so the NP can synchronize on it.\r\n"
    "  Before enabling the interface make sure that the NP transmit\r\n"
    "  its 'Source Data' clock\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_interface_enable_set spi_ntrfc_ndx 0 nbl\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(22), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_INTERFACE_ENABLE_SET_NIF_SPI_INTERFACE_ENABLE_SET_SPI_INTERFACE_NDX_ID,                                                            
    "spi_ntrfc_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface_ndx:\r\n"
    "  The SPI to enable/disable. Range: A, B or both.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_interface_enable_set spi_ntrfc_ndx 0 nbl\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(22), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_INTERFACE_ENABLE_SET_NIF_SPI_INTERFACE_ENABLE_SET_ENABLE_ID,                                                            
    "enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  enable:\r\n"
    "  TRUE\r\n"
    "  - Enables device SPI4.2 interface.\r\n"
    "  FALSE - Disables device SPI4.2 interface.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_interface_enable_set spi_ntrfc_ndx 0 nbl\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(22), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_INTERFACE_ENABLE_GET_NIF_SPI_INTERFACE_ENABLE_GET_ID,                                                            
    "spi_interface_enable_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Enables / disables device SPI4.2 interface.\r\n"
    "  Disable/enable:\r\n"
    "  1. Source Data\r\n"
    "  (Transmitters).\r\n"
    "  2. Sink Status\r\n"
    "  (Transmitters).\r\n"
    "  3. Sink Data\r\n"
    "  (Receivers).\r\n"
    "  4. Source Status (Receivers).\r\n"
    "  Even when disabled, device SPI4.2 'Source Data' transmit clock,\r\n"
    "  so the NP can synchronize on it.\r\n"
    "  Before enabling the interface make sure that the NP transmit\r\n"
    "  its 'Source Data' clock\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_interface_enable_get spi_ntrfc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(23), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_INTERFACE_ENABLE_GET_NIF_SPI_INTERFACE_ENABLE_GET_SPI_INTERFACE_NDX_ID,                                                            
    "spi_ntrfc_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface_ndx:\r\n"
    "  The SPI to enable/disable. Range: A, B or both.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_interface_enable_get spi_ntrfc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(23), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_RECYCLE_PORT_ENABLE_SET_NIF_RECYCLE_PORT_ENABLE_SET_ID,                                                            
    "recycle_port_enable_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets data-port 63 with recycling port and thus enables multicast\r\n"
    "  recycling. Optionally, Also, the device can be set to support\r\n"
    "  standalone recycling.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_recycle_port_enable_set nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_RECYCLE_PORT_ENABLE_SET_NIF_RECYCLE_PORT_ENABLE_SET_ENABLE_ID,                                                            
    "enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  enable:\r\n"
    "  TRUE - Data-port 63 is recycling port.\r\n"
    "  FALSE - Data-port 63 is regular data-port. Note that while\r\n"
    "  working with 4 queues per egress port mode, the user may\r\n"
    "  not configure this port to be a regular port. If disabled\r\n"
    "  it cannot be used.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_recycle_port_enable_set nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_RECYCLE_PORT_ENABLE_SET_NIF_RECYCLE_PORT_ENABLE_SET_ENABLE_SINGLE_FAP_RECYCLE_ID,                                                            
    "enable_sngl_fap_rcycl",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  enable_single_fap_recycle:\r\n"
    "  TRUE -\r\n"
    "  The device supports standalone recycling, by\r\n"
    "  overriding the tree ID lsb with the Left-Copy-Flag\r\n"
    "  for Multicast table lookups.\r\n"
    "  FALSE - The device does not support standalone recycling.\r\n"
    "  The tree ID is used as is for Multicast table lookups.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_recycle_port_enable_set nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_RECYCLE_PORT_ENABLE_SET_NIF_RECYCLE_PORT_ENABLE_SET_ENABLE_UNICAST_RECYCLE_ID,                                                            
    "enable_ncst_rcycl",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  enable_unicast_recycle:\r\n"
    "  TRUE -\r\n"
    "  unicast recycling is enabled (unicast packet to port\r\n"
    "  63 is forwarded to the LBP with the unicast header\r\n"
    "  stripped).\r\n"
    "  FALSE - unicast recycling is disabled.\r\n"
    "  Note that ingress shaping is only enabled when this bit\r\n"
    "  is enabled.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_recycle_port_enable_set nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_RECYCLE_PORT_ENABLE_GET_NIF_RECYCLE_PORT_ENABLE_GET_ID,                                                            
    "recycle_port_enable_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets data-port 63 with recycling port and thus enables multicast\r\n"
    "  recycling. Optionally, Also, the device can be set to support\r\n"
    "  standalone recycling.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_recycle_port_enable_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(25), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_CPU_PORT_ENABLE_SET_NIF_CPU_PORT_ENABLE_SET_ID,                                                            
    "cpu_port_enable_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets data-port 0 with CPU port and thus enables CPU capture\r\n"
    "  of packets.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_cpu_port_enable_set nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(26), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_CPU_PORT_ENABLE_SET_NIF_CPU_PORT_ENABLE_SET_ENABLE_ID,                                                            
    "enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  enable:\r\n"
    "  TRUE - Data-port 0 is CPU port.\r\n"
    "  FALSE - Data-port 0 is regular data-port.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_cpu_port_enable_set nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(26), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_CPU_PORT_ENABLE_GET_NIF_CPU_PORT_ENABLE_GET_ID,                                                            
    "cpu_port_enable_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets data-port 0 with CPU port and thus enables CPU capture\r\n"
    "  of packets.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_cpu_port_enable_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(27), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_PORT_SET_NIF_SPI_CHANNEL_PORT_SET_ID,                                                            
    "spi_channel_port_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Data-Port to channel tables and their reverse tables\r\n"
    "  (FAP-port to SPI4-channel table, SPI4-channel to FAP-port table\r\n"
    "  for interface A/B, SPI4_SEL0/1).\r\n"
    "  Note: In the used data-ports/channel identifiers, the mapping\r\n"
    "  should be 1-1.. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_port_set fap_dt_prt_ndx 0\r\n"
    "  chnnl_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(28), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_PORT_SET_NIF_SPI_CHANNEL_PORT_SET_FAP_DATA_PORT_NDX_ID,                                                            
    "fap_dt_prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fap_data_port_ndx:\r\n"
    "  The local Data Port in the device. This number is also used as\r\n"
    "  the scheduler port id. Range 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_port_set fap_dt_prt_ndx 0\r\n"
    "  chnnl_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(28), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_PORT_SET_NIF_SPI_CHANNEL_PORT_SET_CHANNEL_ID_ID,                                                            
    "chnnl_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  channel_id:\r\n"
    "  The SPI4.2 channel. Range 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_port_set fap_dt_prt_ndx 0\r\n"
    "  chnnl_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(28), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_PORT_SET_NIF_SPI_CHANNEL_PORT_SET_SPI_INTERFACE_ID,                                                            
    "spi_ntrfc",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface:\r\n"
    "  Interface A/B this channel belongs to.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_port_set fap_dt_prt_ndx 0\r\n"
    "  chnnl_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(28), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_PORT_GET_NIF_SPI_CHANNEL_PORT_GET_ID,                                                            
    "spi_channel_port_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Data-Port to channel tables and their reverse tables\r\n"
    "  (FAP-port to SPI4-channel table, SPI4-channel to FAP-port table\r\n"
    "  for interface A/B, SPI4_SEL0/1).\r\n"
    "  Note: In the used data-ports/channel identifiers, the mapping\r\n"
    "  should be 1-1.. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_port_get fap_dt_prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(29), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_PORT_GET_NIF_SPI_CHANNEL_PORT_GET_FAP_DATA_PORT_NDX_ID,                                                            
    "fap_dt_prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fap_data_port_ndx:\r\n"
    "  The local Data Port in the device. This number is also used as\r\n"
    "  the scheduler port id. Range 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_port_get fap_dt_prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(29), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_TO_PORT_SET_NIF_SPI_CHANNEL_TO_PORT_SET_ID,                                                            
    "spi_channel_to_port_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Channel to Data-Port tables.\r\n"
    "  Should only be used when the mapping of data-ports/channel\r\n"
    "  identifiers isn't 1-1. Otherwise, the function\r\n"
    "  fap21v_spi_channel_port_set() should be used. Note that similar\r\n"
    "  table exist in the LBP and is used for purpose of mirroring.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_to_port_set spi_ntrfc_ndx 0\r\n"
    "  chnnl_id_ndx 0 fap_dt_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(30), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_TO_PORT_SET_NIF_SPI_CHANNEL_TO_PORT_SET_SPI_INTERFACE_NDX_ID,                                                            
    "spi_ntrfc_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface_ndx:\r\n"
    "  Interface A/B this channel belongs to.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_to_port_set spi_ntrfc_ndx 0\r\n"
    "  chnnl_id_ndx 0 fap_dt_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(30), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_TO_PORT_SET_NIF_SPI_CHANNEL_TO_PORT_SET_CHANNEL_ID_NDX_ID,                                                            
    "chnnl_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  channel_id_ndx:\r\n"
    "  The SPI4.2 channel. Range 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_to_port_set spi_ntrfc_ndx 0\r\n"
    "  chnnl_id_ndx 0 fap_dt_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(30), 0, 0, 0},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_TO_PORT_SET_NIF_SPI_CHANNEL_TO_PORT_SET_FAP_DATA_PORT_ID,                                                            
    "fap_dt_prt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fap_data_port:\r\n"
    "  The local Data Port in the device. This number is also used as\r\n"
    "  the scheduler port id. Range 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_to_port_set spi_ntrfc_ndx 0\r\n"
    "  chnnl_id_ndx 0 fap_dt_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(30), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_TO_PORT_GET_NIF_SPI_CHANNEL_TO_PORT_GET_ID,                                                            
    "spi_channel_to_port_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Channel to Data-Port tables.\r\n"
    "  Should only be used when the mapping of data-ports/channel\r\n"
    "  identifiers isn't 1-1. Otherwise, the function\r\n"
    "  fap21v_spi_channel_port_set() should be used. Note that similar\r\n"
    "  table exist in the LBP and is used for purpose of mirroring.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_to_port_get spi_ntrfc_ndx 0\r\n"
    "  chnnl_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(31), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_TO_PORT_GET_NIF_SPI_CHANNEL_TO_PORT_GET_SPI_INTERFACE_NDX_ID,                                                            
    "spi_ntrfc_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface_ndx:\r\n"
    "  Interface A/B this channel belongs to.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_to_port_get spi_ntrfc_ndx 0\r\n"
    "  chnnl_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(31), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI_CHANNEL_TO_PORT_GET_NIF_SPI_CHANNEL_TO_PORT_GET_CHANNEL_ID_NDX_ID,                                                            
    "chnnl_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  channel_id_ndx:\r\n"
    "  The SPI4.2 channel. Range 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi_channel_to_port_get spi_ntrfc_ndx 0\r\n"
    "  chnnl_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(31), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_PORT_TO_SPI_CHANNEL_SET_NIF_PORT_TO_SPI_CHANNEL_SET_ID,                                                            
    "port_to_spi_channel_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the FAP-port to SPI4-channel table.\r\n"
    "  Should only be used when the mapping of data-ports/channel\r\n"
    "  identifiers isn't 1-1. Otherwise, the function\r\n"
    "  fap21v_spi_channel_port_set() should be used.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_port_to_spi_channel_set fap_dt_prt_ndx 0\r\n"
    "  spi_ntrfc 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_PORT_TO_SPI_CHANNEL_SET_NIF_PORT_TO_SPI_CHANNEL_SET_FAP_DATA_PORT_NDX_ID,                                                            
    "fap_dt_prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fap_data_port_ndx:\r\n"
    "  The local Data Port in the device. This number is also used as\r\n"
    "  the scheduler port id. Range 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_port_to_spi_channel_set fap_dt_prt_ndx 0\r\n"
    "  spi_ntrfc 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_PORT_TO_SPI_CHANNEL_SET_NIF_PORT_TO_SPI_CHANNEL_SET_SPI_INTERFACE_ID,                                                            
    "spi_ntrfc",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface:\r\n"
    "  Interface A/B this channel belongs to.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_port_to_spi_channel_set fap_dt_prt_ndx 0\r\n"
    "  spi_ntrfc 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_PORT_TO_SPI_CHANNEL_SET_NIF_PORT_TO_SPI_CHANNEL_SET_CHANNEL_ID_ID,                                                            
    "chnnl_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  channel_id:\r\n"
    "  The SPI4.2 channel. Range 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_port_to_spi_channel_set fap_dt_prt_ndx 0\r\n"
    "  spi_ntrfc 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_PORT_TO_SPI_CHANNEL_GET_NIF_PORT_TO_SPI_CHANNEL_GET_ID,                                                            
    "port_to_spi_channel_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the FAP-port to SPI4-channel table.\r\n"
    "  Should only be used when the mapping of data-ports/channel\r\n"
    "  identifiers isn't 1-1. Otherwise, the function\r\n"
    "  fap21v_spi_channel_port_set() should be used.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_port_to_spi_channel_get fap_dt_prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_PORT_TO_SPI_CHANNEL_GET_NIF_PORT_TO_SPI_CHANNEL_GET_FAP_DATA_PORT_NDX_ID,                                                            
    "fap_dt_prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fap_data_port_ndx:\r\n"
    "  The local Data Port in the device. This number is also used as\r\n"
    "  the scheduler port id. Range 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_port_to_spi_channel_get fap_dt_prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_MULTICAST_PRUNING_ENABLE_SET_NIF_EGRESS_MULTICAST_PRUNING_ENABLE_SET_ID,                                                            
    "egress_multicast_pruning_enable_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Enables/Disables Multicast-Pruning.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_egress_multicast_pruning_enable_set nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_MULTICAST_PRUNING_ENABLE_SET_NIF_EGRESS_MULTICAST_PRUNING_ENABLE_SET_ENABLE_ID,                                                            
    "enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  enable:\r\n"
    "  TRUE - Enable Multicast-Pruning.\r\n"
    "  FALSE - Disable Multicast-Pruning.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_egress_multicast_pruning_enable_set nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_MULTICAST_PRUNING_ENABLE_SET_NIF_EGRESS_MULTICAST_PRUNING_ENABLE_SET_ENABLE_LAG_PRUNING_ID,                                                            
    "enable_lag_prnng",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  enable_lag_pruning:\r\n"
    "  TRUE - Enable Multicast-Lag-Pruning.\r\n"
    "  FALSE - Disable Multicast-Lag-Pruning.\r\n"
    "  When the Lag-Pruning is enabled, the multicast pruning is active\r\n"
    "  according to the egress-LAG mapping.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_egress_multicast_pruning_enable_set nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_MULTICAST_PRUNING_ENABLE_GET_NIF_EGRESS_MULTICAST_PRUNING_ENABLE_GET_ID,                                                            
    "egress_multicast_pruning_enable_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Enables/Disables Multicast-Pruning.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_egress_multicast_pruning_enable_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(3), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_MULTICAST_PRUNNING_TABLE_SET_NIF_EGRESS_MULTICAST_PRUNNING_TABLE_SET_ID,                                                            
    "multicast_prunning_table_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the 'FAP-data-port' to be excluded as a destination of the\r\n"
    "  packet (per channel and interface), i.e., deletes packet if pruning\r\n"
    "  is enabled, 'Exclude-Src' is set (in packet header), 'Source-FAP-\r\n"
    "  ID' is equal to the local FAP-ID, 'source-channel-id' is equal to\r\n"
    "  channel_id, and the SPI interface is the right one.\r\n"
    "  Note: The ability to use a different channel to data_port mapping\r\n"
    "  than that which was set with fap21v_spi_channel_port_set gives\r\n"
    "  the device port-trunking capabilities. For other applications, use\r\n"
    "  2 calls with the same parameters.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_multicast_prunning_table_set chnnl_id_ndx 0\r\n"
    "  spi_ntrfc_ndx 0 fap_dt_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(4), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_MULTICAST_PRUNNING_TABLE_SET_NIF_MULTICAST_PRUNNING_TABLE_SET_CHANNEL_ID_NDX_ID,                                                            
    "chnnl_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  channel_id_ndx:\r\n"
    "  The SPI4.2 channel. Range 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_multicast_prunning_table_set chnnl_id_ndx 0\r\n"
    "  spi_ntrfc_ndx 0 fap_dt_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(4), 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_MULTICAST_PRUNNING_TABLE_SET_NIF_MULTICAST_PRUNNING_TABLE_SET_SPI_INTERFACE_NDX_ID,                                                            
    "spi_ntrfc_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface_ndx:\r\n"
    "  Interface A/B this channel belongs to.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_multicast_prunning_table_set chnnl_id_ndx 0\r\n"
    "  spi_ntrfc_ndx 0 fap_dt_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(4), 0, 0},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_MULTICAST_PRUNNING_TABLE_SET_NIF_MULTICAST_PRUNNING_TABLE_SET_FAP_DATA_PORT_ID,                                                            
    "fap_dt_prt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fap_data_port:\r\n"
    "  The DataPort in the device to be excluded. This number is\r\n"
    "  also used as the scheduler port id. Range 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_multicast_prunning_table_set chnnl_id_ndx 0\r\n"
    "  spi_ntrfc_ndx 0 fap_dt_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(4), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {           
    PARAM_FAP21V_NIF_EGRESS_MULTICAST_PRUNNING_TABLE_GET_NIF_EGRESS_MULTICAST_PRUNNING_TABLE_GET_ID,                                                            
    "multicast_prunning_table_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the 'FAP-data-port' to be excluded as a destination of the\r\n"
    "  packet (per channel and interface), i.e., deletes packet if pruning\r\n"
    "  is enabled, 'Exclude-Src' is set (in packet header), 'Source-FAP-\r\n"
    "  ID' is equal to the local FAP-ID, 'source-channel-id' is equal to\r\n"
    "  channel_id, and the SPI interface is the right one.\r\n"
    "  Note: The ability to use a different channel to data_port mapping\r\n"
    "  than that which was set with fap21v_spi_channel_port_set gives\r\n"
    "  the device port-trunking capabilities. For other applications, use\r\n"
    "  2 calls with the same parameters.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_multicast_prunning_table_get chnnl_id_ndx 0\r\n"
    "  spi_ntrfc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(5), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_MULTICAST_PRUNNING_TABLE_GET_NIF_MULTICAST_PRUNNING_TABLE_GET_CHANNEL_ID_NDX_ID,                                                            
    "chnnl_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  channel_id_ndx:\r\n"
    "  The SPI4.2 channel. Range 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_multicast_prunning_table_get chnnl_id_ndx 0\r\n"
    "  spi_ntrfc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(5), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_MULTICAST_PRUNNING_TABLE_GET_NIF_MULTICAST_PRUNNING_TABLE_GET_SPI_INTERFACE_NDX_ID,                                                            
    "spi_ntrfc_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface_ndx:\r\n"
    "  Interface A/B this channel belongs to.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_multicast_prunning_table_get chnnl_id_ndx 0\r\n"
    "  spi_ntrfc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(5), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_PHYSICAL_INTERFACE_FC_SET_NIF_PHYSICAL_INTERFACE_FC_SET_ID,                                                            
    "physical_interface_fc_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the device Flow-Control mode for port-FC.\r\n"
    "  Registers:\r\n"
    "  - flow-control configuration (Enable spi4a/b in-band flow-control)\r\n"
    "  - General Configuration Register out-of-band flow-control for\r\n"
    "  spi4a/b (Enable source status path).\r\n"
    "  Note that in band has strict priority on auxiliary channel which\r\n"
    "  has strict priority on the SPI status channels. However, if the\r\n"
    "  first entry of the calendar passed by the SPI status channel is\r\n"
    "  asserted,, a flow control of the entire link will occur.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_physical_interface_fc_set fc_mod 1\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_PHYSICAL_INTERFACE_FC_SET_NIF_PHYSICAL_INTERFACE_FC_SET_SPI_NDX_ID,
    "spi_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    ""                                                                    
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_PHYSICAL_INTERFACE_FC_SET_NIF_PHYSICAL_INTERFACE_FC_SET_FC_MODE_ID,                                                            
    "fc_mod",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_NIF_FC_PORT_MODE_rule[0],                                            
    (sizeof(FAP21V_NIF_FC_PORT_MODE_rule) / sizeof(FAP21V_NIF_FC_PORT_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fc_mode:\r\n"
    "  The FC-Port mode the device should work with (status, auxiliary\r\n"
    "  or ingress-data channel). Allowed configurations are\r\n"
    "  SPI_STATUS_CHANNEL - Link level FC enabled.\r\n"
    "  AUXILIARY_CHANNEL - Link level FC disabled\r\n"
    "  INBAND_PACKETS - Link level FC disabled\r\n"
    "  AUXILIARY_CHANNEL | SPI_STATUS_CHANNEL - Link level FC enabled\r\n"
    "  INBAND_PACKETS| SPI_STATUS_CHANNEL - Link level FC enabled.\r\n"
    "  Other combinations will result in error.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_physical_interface_fc_set fc_mod 1\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_PHYSICAL_INTERFACE_FC_GET_NIF_PHYSICAL_INTERFACE_FC_GET_SPI_NDX_ID,
    "spi_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    ""                                                                    
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_PHYSICAL_INTERFACE_FC_GET_NIF_PHYSICAL_INTERFACE_FC_GET_ID,                                                            
    "physical_interface_fc_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the device Flow-Control mode for port-FC.\r\n"
    "  Registers:\r\n"
    "  - flow-control configuration (Enable spi4a/b in-band flow-control)\r\n"
    "  - General Configuration Register out-of-band flow-control for\r\n"
    "  spi4a/b (Enable source status path).\r\n"
    "  Note that in band has strict priority on auxiliary channel which\r\n"
    "  has strict priority on the SPI status channels. However, if the\r\n"
    "  first entry of the calendar passed by the SPI status channel is\r\n"
    "  asserted,, a flow control of the entire link will occur.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_physical_interface_fc_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI4_2_CALENDAR_FC_SET_NIF_SPI4_2_CALENDAR_FC_SET_ID,                                                            
    "spi4_2_calendar_fc_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the device Flow-Control SPI4.2 calendar mapping.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi4_2_calendar_fc_set clndr_lctn_ndx 0\r\n"
    "  spi_ntrfc_ndx 0 spi_clndr_chnnl_ids_0 0 spi_clndr_clndr_m 0\r\n"
    "  spi_clndr_clndr_len 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(8), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI4_2_CALENDAR_FC_SET_NIF_SPI4_2_CALENDAR_FC_SET_CALENDAR_LOCATION_NDX_ID,                                                            
    "clndr_lctn_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_NIF_SPI4_2_CALENDAR_LOC_rule[0],                                            
    (sizeof(FAP21V_NIF_SPI4_2_CALENDAR_LOC_rule) / sizeof(FAP21V_NIF_SPI4_2_CALENDAR_LOC_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  calendar_location_ndx:\r\n"
    "  Specify the calendar table to set. Range: 0 - 2.\r\n"
    "  Range:\r\n"
    "  FAP21V_NIF_SPI4_2_CALENDAR_OUT_OF_BAND -\r\n"
    "  Out-of-band flow-control calendar table.\r\n"
    "  FAP21V_NIF_SPI4_2_CALENDAR_SOURCE_STATUS -\r\n"
    "  Source FIFO status channel calendar table.\r\n"
    "  FAP21V_NIF_SPI4_2_CALENDAR_SIN_STATUS -\r\n"
    "  Sink FIFO status channel calendar table.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi4_2_calendar_fc_set clndr_lctn_ndx 0\r\n"
    "  spi_ntrfc_ndx 0 spi_clndr_chnnl_ids_0 0 spi_clndr_clndr_m 0\r\n"
    "  spi_clndr_clndr_len 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(8), 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI4_2_CALENDAR_FC_SET_NIF_SPI4_2_CALENDAR_FC_SET_SPI_INTERFACE_NDX_ID,                                                            
    "spi_ntrfc_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface_ndx:\r\n"
    "  Interface A/B to configure.\r\n"
    "  Range:\r\n"
    "  FAP21V_SPI4_2_INTERFACE_A -\r\n"
    "  Only interface A.\r\n"
    "  FAP21V_SPI4_2_INTERFACE_B\r\n"
    "  Only interface B.\r\n"
    "  FAP21V_SPI4_2_INTERFACE_A_B\r\n"
    "  Both on interface A and B.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi4_2_calendar_fc_set clndr_lctn_ndx 0\r\n"
    "  spi_ntrfc_ndx 0 spi_clndr_chnnl_ids_0 0 spi_clndr_clndr_m 0\r\n"
    "  spi_clndr_clndr_len 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(8), 0, 0},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI4_2_CALENDAR_FC_SET_NIF_SPI4_2_CALENDAR_FC_SET_SPI_CALENDAR_CHANNEL_IDS_0_ID,                                                            
    "spi_clndr_chnnl_ids",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_channel_ids_vals) / sizeof(fap21v_api_channel_ids_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_calendar.channel_ids[0]:\r\n"
    "  Consecutive channel-ids array. A channel may occur several times within the\r\n"
    "  calendar to allow it a faster response to changing flow control signals.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi4_2_calendar_fc_set clndr_lctn_ndx 0\r\n"
    "  spi_ntrfc_ndx 0 spi_clndr_chnnl_ids_0 0 spi_clndr_clndr_m 0\r\n"
    "  spi_clndr_clndr_len 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(8), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI4_2_CALENDAR_FC_SET_NIF_SPI4_2_CALENDAR_FC_SET_SPI_CALENDAR_CALENDAR_M_ID,                                                            
    "spi_clndr_clndr_m",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_calendar.calendar_m:\r\n"
    "  Number of Calendars within a FIFO status frame.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi4_2_calendar_fc_set clndr_lctn_ndx 0\r\n"
    "  spi_ntrfc_ndx 0 spi_clndr_chnnl_ids_0 0 spi_clndr_clndr_m 0\r\n"
    "  spi_clndr_clndr_len 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(8), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI4_2_CALENDAR_FC_SET_NIF_SPI4_2_CALENDAR_FC_SET_SPI_CALENDAR_CALENDAR_LEN_ID,                                                            
    "spi_clndr_clndr_len",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_calendar.calendar_len:\r\n"
    "  Number of valid channels in the 'channel_ids' array. Range 1-64.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi4_2_calendar_fc_set clndr_lctn_ndx 0\r\n"
    "  spi_ntrfc_ndx 0 spi_clndr_chnnl_ids_0 0 spi_clndr_clndr_m 0\r\n"
    "  spi_clndr_clndr_len 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(8), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI4_2_CALENDAR_FC_GET_NIF_SPI4_2_CALENDAR_FC_GET_ID,                                                            
    "spi4_2_calendar_fc_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the device Flow-Control SPI4.2 calendar mapping.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi4_2_calendar_fc_get clndr_lctn_ndx 0\r\n"
    "  spi_ntrfc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(9), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI4_2_CALENDAR_FC_GET_NIF_SPI4_2_CALENDAR_FC_GET_CALENDAR_LOCATION_NDX_ID,                                                            
    "clndr_lctn_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_NIF_SPI4_2_CALENDAR_LOC_rule[0],                                            
    (sizeof(FAP21V_NIF_SPI4_2_CALENDAR_LOC_rule) / sizeof(FAP21V_NIF_SPI4_2_CALENDAR_LOC_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  calendar_location_ndx:\r\n"
    "  Specify the calendar table to set. Range: 0 - 2.\r\n"
    "  Range:\r\n"
    "  FAP21V_NIF_SPI4_2_CALENDAR_OUT_OF_BAND -\r\n"
    "  Out-of-band flow-control calendar table.\r\n"
    "  FAP21V_NIF_SPI4_2_CALENDAR_SOURCE_STATUS -\r\n"
    "  Source FIFO status channel calendar table.\r\n"
    "  FAP21V_NIF_SPI4_2_CALENDAR_SIN_STATUS -\r\n"
    "  Sink FIFO status channel calendar table.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi4_2_calendar_fc_get clndr_lctn_ndx 0\r\n"
    "  spi_ntrfc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(9), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_SPI4_2_CALENDAR_FC_GET_NIF_SPI4_2_CALENDAR_FC_GET_SPI_INTERFACE_NDX_ID,                                                            
    "spi_ntrfc_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface_ndx:\r\n"
    "  Interface A/B to configure.\r\n"
    "  Range:\r\n"
    "  FAP21V_SPI4_2_INTERFACE_A -\r\n"
    "  Only interface A.\r\n"
    "  FAP21V_SPI4_2_INTERFACE_B\r\n"
    "  Only interface B.\r\n"
    "  FAP21V_SPI4_2_INTERFACE_A_B\r\n"
    "  Both on interface A and B.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_spi4_2_calendar_fc_get clndr_lctn_ndx 0\r\n"
    "  spi_ntrfc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(9), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_SPI_FULL_PACKET_MODE_SET_NIF_EGRESS_SPI_FULL_PACKET_MODE_SET_ID,                                                            
    "egress_spi_full_packet_mode_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the packet mode (full or interleaved) for a single SPI (egress\r\n"
    "  only)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_egress_spi_full_packet_mode_set\r\n"
    "  spi_ntrfc_ndx 0 fll_pckt_mod 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(10), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_SPI_FULL_PACKET_MODE_SET_NIF_EGRESS_SPI_FULL_PACKET_MODE_SET_SPI_INTERFACE_NDX_ID,                                                            
    "spi_ntrfc_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface_ndx:\r\n"
    "  FAP21V_SPI4_2_INTERFACE_A -\r\n"
    "  Only interface A.\r\n"
    "  FAP21V_SPI4_2_INTERFACE_B -\r\n"
    "  Only interface B.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_egress_spi_full_packet_mode_set\r\n"
    "  spi_ntrfc_ndx 0 fll_pckt_mod 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(10), 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_SPI_FULL_PACKET_MODE_SET_NIF_EGRESS_SPI_FULL_PACKET_MODE_SET_FULL_PACKET_MODE_ID,                                                            
    "fll_pckt_mod",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  full_packet_mode:\r\n"
    "  Indicator.\r\n"
    "  TRUE - the device is transmitting in full packet mode\r\n"
    "  (no fragmentation) to spi4.\r\n"
    "  FALSE - the device is transmitting with fragmentation to spi4.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_egress_spi_full_packet_mode_set\r\n"
    "  spi_ntrfc_ndx 0 fll_pckt_mod 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(10), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_SPI_FULL_PACKET_MODE_GET_NIF_EGRESS_SPI_FULL_PACKET_MODE_GET_ID,                                                            
    "egress_spi_full_packet_mode_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the packet mode (full or interleaved) for a single SPI (egress\r\n"
    "  only)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_egress_spi_full_packet_mode_get\r\n"
    "  spi_ntrfc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(11), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_SPI_FULL_PACKET_MODE_GET_NIF_EGRESS_SPI_FULL_PACKET_MODE_GET_SPI_INTERFACE_NDX_ID,                                                            
    "spi_ntrfc_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface_ndx:\r\n"
    "  FAP21V_SPI4_2_INTERFACE_A -\r\n"
    "  Only interface A.\r\n"
    "  FAP21V_SPI4_2_INTERFACE_B -\r\n"
    "  Only interface B.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_egress_spi_full_packet_mode_get\r\n"
    "  spi_ntrfc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(11), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_SPI_BURST_SIZE_SET_NIF_EGRESS_SPI_BURST_SIZE_SET_ID,                                                            
    "egress_spi_burst_size_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the device burst size when transmitting to the SPI (egress\r\n"
    "  only).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_egress_spi_burst_size_set brst_siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(12), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_SPI_BURST_SIZE_SET_NIF_EGRESS_SPI_BURST_SIZE_SET_BURST_SIZE_ID,                                                            
    "brst_siz",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_NIF_SPI_BURST_SIZE_rule[0],                                            
    (sizeof(FAP21V_NIF_SPI_BURST_SIZE_rule) / sizeof(FAP21V_NIF_SPI_BURST_SIZE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  burst_size:\r\n"
    "  The burst size that will be used by both SPI interfaces.\r\n"
    "  Range:\r\n"
    "  FAP21V_NIF_SPI_BURST_SIZE_64 -\r\n"
    "  Burst size is 64B.\r\n"
    "  FAP21V_NIF_SPI_BURST_SIZE_128 -\r\n"
    "  Burst size is 128B.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_egress_spi_burst_size_set brst_siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(12), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_EGRESS_SPI_BURST_SIZE_GET_NIF_EGRESS_SPI_BURST_SIZE_GET_ID,                                                            
    "egress_spi_burst_size_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the device burst size when transmitting to the SPI (egress\r\n"
    "  only).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_egress_spi_burst_size_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(13), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_ID,                                                            
    "header_info_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the fabric header mode including ingress, fabric and egress.\r\n"
    "  In egress the user may use egress-stripping mode for a\r\n"
    "  single SPI. This mode determines whether or not packets that are\r\n"
    "  transmitted by the SPI, would be prepended by Dune Egress Header.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_OUTGOING_TM_EXTENSIONS_0_ID,                                                            
    "otmh_xtnsns_spia",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.outgoing_tm.extensions[0]:\r\n"
    "  OTMH extensions\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_OUTGOING_TM_EXTENSIONS_1_ID,                                                            
    "otmh_xtnsns_spib",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.outgoing_tm.extensions[0]:\r\n"
    "  OTMH extensions\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_OUTGOING_TM_MAP_3_MC_CLASS_TO_2_MC_CLASS_0_ID,                                                            
    "otmh_map_3_mc_clss_to_2_mc_clss_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_otmh_map_3_mc_clss_to_2_mc_clss_0[0],                                            
    (sizeof(fap21v_api_otmh_map_3_mc_clss_to_2_mc_clss_0) / sizeof(fap21v_api_otmh_map_3_mc_clss_to_2_mc_clss_0[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.outgoing_tm.map_3_mc_class_to_2_mc_class[0]:\r\n"
    "  ;  Map 3 bit mc to 2 bit mc. Range: 0 - 3.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_OUTGOING_TM_TYPE_ID,                                                            
    "otmh_typ",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_NIF_HDR_TYPE_rule[0],                                            
    (sizeof(FAP21V_NIF_HDR_TYPE_rule) / sizeof(FAP21V_NIF_HDR_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.outgoing_tm.type:\r\n"
    "  The OTMH Type.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_FABRIC_TM_EXTENDED_HEADER_ID,                                                            
    "ftmh_xtndd_hdr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.fabric_tm.extended_header:\r\n"
    "  TRUE to enable extended Soc_petra header. FALSE otherwise.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_FABRIC_TM_TYPE_ID,
    "ftmh_typ",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_NIF_HDR_TYPE_rule[0],                                            
    (sizeof(FAP21V_NIF_HDR_TYPE_rule) / sizeof(FAP21V_NIF_HDR_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.fabric_tm.type_out:\r\n"
    "  The FTMH Type out (i.e. EGQ in).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_INGRESS_TM_EXTENDED_HEADER_ID,                                                            
    "itmh_xtndd_hdr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.ingress_tm.extended_header:\r\n"
    "  If the ITMH type is Soc_petra\r\n"
    "  TRUE - enables Soc_petra header.\r\n"
    "  FALSE - disables Soc_petra header..else if the ITMH type is SOC_SAND_FAP20V\r\n"
    "  TRUE - enables SOC_SAND_FAP20V enhanced ITMH.\r\n"
    "  FALSE - disables SOC_SAND_FAP20V enhanced ITMH.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_INGRESS_TM_MAP_2_CLASS_TO_3_CLASS_0_ID,                                                            
    "itmh_map_2_clss_to_3_clss_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_itmh_map_2_clss_to_3_clss_0[0],                                            
    (sizeof(fap21v_api_itmh_map_2_clss_to_3_clss_0) / sizeof(fap21v_api_itmh_map_2_clss_to_3_clss_0[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.ingress_tm.map_2_class_to_3_class[0]:\r\n"
    "  Class mapping 2 bits (FAP20 TMI mc/rcy) to 3 bits\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_INGRESS_TM_FAP21V_FTMH_MC_64_FAPS_ID,                                                            
    "itmh_ptr_ftmh_mc_64_fps",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.ingress_tm.fap21v_ftmh_mc_64_faps:\r\n"
    "  Configuration to build the Soc_petra FTMH when transformation from FAP20 Recycle\r\n"
    "  header\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_INGRESS_TM_FAP21V_FTMH_EXT_MC_MSB_ID,                                                            
    "itmh_ptr_ftmh_ext_mc_msb",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.ingress_tm.fap21v_ftmh_ext_mc_msb:\r\n"
    "  MSB bits to be put in Soc_petra FTMH extension when transforming from SOC_SAND_FAP20V TMI\r\n"
    "  Multicast header\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_INGRESS_TM_FAP21V_FTMH_EXT_FLW_MSB_ID,                                                            
    "itmh_ptr_ftmh_ext_flow_msb",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.ingress_tm.fap21v_ftmh_ext_flow_msb:\r\n"
    "  MSB bit to be put in Soc_petra FTMH extension when transforming from SOC_SAND_FAP20V TMI\r\n"
    "  Flow header\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_INGRESS_TM_FAP21V_FTMH_EXT_UC_MSB_ID,                                                            
    "itmh_ptr_ftmh_ext_uc_msb",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.ingress_tm.fap21v_ftmh_ext_uc_msb:\r\n"
    "  MSB bits to be put in Soc_petra FTMH Outlif extension when\r\n"
    "  transforming from FAP20 TMI Unicast header.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_SET_NIF_HEADER_INFO_SET_HDR_INFO_INGRESS_TM_TYPE_ID,                                                            
    "itmh_typ",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_NIF_HDR_TYPE_rule[0],                                            
    (sizeof(FAP21V_NIF_HDR_TYPE_rule) / sizeof(FAP21V_NIF_HDR_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hdr_info.ingress_tm.type:\r\n"
    "  The OTMH Type.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_set hdr_nfo_tgng_tm_xtnsns_0 0\r\n"
    "  hdr_nfo_tgng_tm_map_3_mc_clss_to_2_mc_clss_0 0 hdr_nfo_tgng_tm_typ 0\r\n"
    "  hdr_nfo_fbrc_tm_xtndd_hdr 0 hdr_nfo_fbrc_tm_map_3_clss_to_2_clss_0 0\r\n"
    "  hdr_nfo_fbrc_tm_typ_out 0 hdr_nfo_fbrc_tm_typ_in 0 hdr_nfo_ngrss_tm_xtndd_hdr\r\n"
    "  0 hdr_nfo_ngrss_tm_map_2_clss_to_3_clss_0 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_mc_64_fps 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_mc_msb 0\r\n"
    "  hdr_nfo_ngrss_tm_ptr_ftmh_ext_flow_msb 0 hdr_nfo_ngrss_tm_ptr_ftmh_ext_uc_msb\r\n"
    "  0 hdr_nfo_ngrss_tm_typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_HEADER_INFO_GET_NIF_HEADER_INFO_GET_ID,                                                            
    "header_info_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the fabric header mode including ingress, fabric and egress.\r\n"
    "  In egress the user may use egress-stripping mode for a\r\n"
    "  single SPI. This mode determines whether or not packets that are\r\n"
    "  transmitted by the SPI, would be prepended by Dune Egress Header.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_header_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(15), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_IQS_SIG_SET_NIF_IQS_SIG_SET_ID,                                                            
    "iqs_sig_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets, for a specified queue, the stamping info to stamp.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_iqs_sig_set iqs_def_stmp_val 0\r\n"
    "  bttm_uqs 0 iqs_ena_def_stmp 0 iqs_ena 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_IQS_SIG_SET_NIF_IQS_SIG_SET_INFO_IQS_DEF_STAMP_VAL_ID,                                                            
    "iqs_def_stmp_val",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.iqs_def_stamp_val:\r\n"
    "  The value to stamp in the Ing-Q-Sig field in the Soc_petra FTMH for queues that\r\n"
    "  are NOT in the range of BottomUQS to BottomUQS+511. This value will only be\r\n"
    "  stamped if both IqsEna and IqsEnaDefStamp configuration bits are asserted\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_iqs_sig_set iqs_def_stmp_val 0\r\n"
    "  bttm_uqs 0 iqs_ena_def_stmp 0 iqs_ena 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_IQS_SIG_SET_NIF_IQS_SIG_SET_INFO_BOTTOM_UQS_ID,                                                            
    "bttm_uqs",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.bottom_uqs:\r\n"
    "  Defines the range of Unique Queue Signature queues to receive stamping of the\r\n"
    "  Ing-Q-Sig field in the Soc_petra FTMH header according to a configurable value.\r\n"
    "  The range is between BottomUQS and BottomUQS+511. The stamping will be done\r\n"
    "  according to the IQS table.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_iqs_sig_set iqs_def_stmp_val 0\r\n"
    "  bttm_uqs 0 iqs_ena_def_stmp 0 iqs_ena 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_IQS_SIG_SET_NIF_IQS_SIG_SET_INFO_IQS_ENA_DEF_STAMP_ID,                                                            
    "iqs_ena_def_stmp",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.iqs_ena_def_stamp:\r\n"
    "  If asserted, enables the stamping of the Ing-Q-Sig field in the Soc_petra FTMH\r\n"
    "  for queues that are NOT in the range of BottomUQS to BottomUQS+511. These\r\n"
    "  queues will be stamped with the value in IqsDefStampVal\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_iqs_sig_set iqs_def_stmp_val 0\r\n"
    "  bttm_uqs 0 iqs_ena_def_stmp 0 iqs_ena 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_IQS_SIG_SET_NIF_IQS_SIG_SET_INFO_IQS_ENA_ID,                                                            
    "iqs_ena",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.iqs_ena:\r\n"
    "  If asserted, enables the stamping of the Ing-Q-Sig field in the Soc_petra FTMH. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_iqs_sig_set iqs_def_stmp_val 0\r\n"
    "  bttm_uqs 0 iqs_ena_def_stmp 0 iqs_ena 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_IQS_SIG_GET_NIF_IQS_SIG_GET_ID,                                                            
    "iqs_sig_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets, for a specified queue, the stamping info to stamp.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_iqs_sig_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(9)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_IQS_QUEUE_SIG_SET_NIF_IQS_QUEUE_SIG_SET_ID,                                                            
    "iqs_queue_sig_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets, for a specified queue, the stamping info to stamp.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_iqs_queue_sig_set quu_ndx 0 stmpng_bts 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_IQS_QUEUE_SIG_SET_NIF_IQS_QUEUE_SIG_SET_QUEUE_NDX_ID,                                                            
    "quu_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_ndx:\r\n"
    "  The queue to configure (offset from BottomUQS). Range: 0 - 511.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_iqs_queue_sig_set quu_ndx 0 stmpng_bts 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_IQS_QUEUE_SIG_SET_NIF_IQS_QUEUE_SIG_SET_STAMPING_BITS_ID,                                                            
    "stmpng_bts",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  stamping_bits:\r\n"
    "  The stamping bits for the specified queue. Range: 0 - 3.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_iqs_queue_sig_set quu_ndx 0 stmpng_bts 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_IQS_QUEUE_SIG_GET_NIF_IQS_QUEUE_SIG_GET_ID,                                                            
    "iqs_queue_sig_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets, for a specified queue, the stamping info to stamp.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_iqs_queue_sig_get quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_NIF_IQS_QUEUE_SIG_GET_NIF_IQS_QUEUE_SIG_GET_QUEUE_NDX_ID,                                                            
    "quu_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_ndx:\r\n"
    "  The queue to configure (offset from BottomUQS). Range: 0 - 511.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api network_interface nif_iqs_queue_sig_get quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_NETWORK_INTERFACE_ID,                                                            
    "network_interface",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15), 0, 0, 0, 0, 0, 0, BIT(8)|BIT(9)|BIT(10)|BIT(11)},
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } network_interface*/
#ifdef UI_INGRESS_PACKET_QUEUEING/* { ingress_packet_queueing*/
  {                                                                                        
    PARAM_FAP21V_SEARCH_ALL_NON_EMPTY_QUEUES_ID,                                                            
    "non_empty_queues_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_FLOW_ID_PACKETS_BASE_QUEUE_ID_SET_IPQ_FLOW_ID_PACKETS_BASE_QUEUE_ID_SET_ID,                                                            
    "flow_id_packets_base_queue_id_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Explicit Flow Unicast packets mapping to queue\r\n"
    "  information. Doesn't affects packets that arrive with\r\n"
    "  destination_id in the header.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_flow_id_packets_base_queue_id_set\r\n"
    "  add_clss 0 ncrmnt_ndctr 0 bse_quu_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(16), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_FLOW_ID_PACKETS_BASE_QUEUE_ID_SET_IPQ_FLOW_ID_PACKETS_BASE_QUEUE_ID_SET_INFO_ADD_CLASS_ID,                                                            
    "add_clss",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.add_class:\r\n"
    "  When TRUE, the class_id in the 'Explicit Flow Unicast' packets header is\r\n"
    "  added to the queue ID that the packet is stored in.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_flow_id_packets_base_queue_id_set\r\n"
    "  add_clss 0 ncrmnt_ndctr 0 bse_quu_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(16), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_FLOW_ID_PACKETS_BASE_QUEUE_ID_SET_IPQ_FLOW_ID_PACKETS_BASE_QUEUE_ID_SET_INFO_INCREMENT_INDICATOR_ID,                                                            
    "ncrmnt_ndctr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.increment_indicator:\r\n"
    "  TRUE - queue is 'base_queue_id' + Packet's FLOW_ID.FALSE - queue is\r\n"
    "  'base_queue_id' - Packet's FLOW_ID.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_flow_id_packets_base_queue_id_set\r\n"
    "  add_clss 0 ncrmnt_ndctr 0 bse_quu_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(16), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_FLOW_ID_PACKETS_BASE_QUEUE_ID_SET_IPQ_FLOW_ID_PACKETS_BASE_QUEUE_ID_SET_INFO_BASE_QUEUE_ID_ID,                                                            
    "bse_quu_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.base_queue_id:\r\n"
    "  Explicit Flow packet base queue number. Range 4-nof_queues.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_flow_id_packets_base_queue_id_set\r\n"
    "  add_clss 0 ncrmnt_ndctr 0 bse_quu_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(16), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_FLOW_ID_PACKETS_BASE_QUEUE_ID_GET_IPQ_FLOW_ID_PACKETS_BASE_QUEUE_ID_GET_ID,                                                            
    "flow_id_packets_base_queue_id_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Explicit Flow Unicast packets mapping to queue\r\n"
    "  information. Doesn't affects packets that arrive with\r\n"
    "  destination_id in the header.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_flow_id_packets_base_queue_id_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(17), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_ID,                                                            
    "destination_id_packets_base_queue_id_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Class Unicast packets mapping to queue information.\r\n"
    "  Doesn't affects packets that arrive with flow_id in the header.\r\n"
    "  Each destination ID is mapped to a base_queue, when the packet is\r\n"
    "  stored in queue: base_queue + class \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing\r\n"
    "  ipq_destination_id_packets_base_queue_id_set dst_ndx 0 bse_quu 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(18), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_DEST_NDX_ID,                                                            
    "dst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dest_ndx:\r\n"
    "  The destination Id from the packet.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing\r\n"
    "  ipq_destination_id_packets_base_queue_id_set dst_ndx 0 bse_quu 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(18), 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_BASE_QUEUE_ID,                                                            
    "bse_quu",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  base_queue:\r\n"
    "  Packet is stored in queue: base_queue + class.\r\n"
    "  Valid values: 0 - 32K (8K for 20V-C devices) or\r\n"
    "  FAP21V_INVALID_QUEUE_ID, when a dest_ndx is not in use.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing\r\n"
    "  ipq_destination_id_packets_base_queue_id_set dst_ndx 0 bse_quu 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(18), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_VALID_ID,                                                            
    "valid",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  base_queue:\r\n"
    "  Packet is stored in queue: base_queue + class.\r\n"
    "  Valid values: 0 - 32K (8K for 20V-C devices) or\r\n"
    "  FAP21V_INVALID_QUEUE_ID, when a dest_ndx is not in use.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing\r\n"
    "  ipq_destination_id_packets_base_queue_id_set dst_ndx 0 bse_quu 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(18), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_GET_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_GET_ID,                                                            
    "destination_id_packets_base_queue_id_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Class Unicast packets mapping to queue information.\r\n"
    "  Doesn't affects packets that arrive with flow_id in the header.\r\n"
    "  Each destination ID is mapped to a base_queue, when the packet is\r\n"
    "  stored in queue: base_queue + class \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing\r\n"
    "  ipq_destination_id_packets_base_queue_id_get dst_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(19), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_GET_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_GET_DEST_NDX_ID,                                                            
    "dst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dest_ndx:\r\n"
    "  The destination Id from the packet.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing\r\n"
    "  ipq_destination_id_packets_base_queue_id_get dst_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(19), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUEUE_INTEDIGITATED_MODE_SET_IPQ_QUEUE_INTEDIGITATED_MODE_SET_ID,                                                            
    "queue_interdigitated_mode_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Map 1K of queues (256 quartets) to be in interdigitated mode or\r\n"
    "  not. Queue Quartets that configured to be in interdigitated mode\r\n"
    "  should only be configured with interdigitated flow quartets, and\r\n"
    "  the other-way around.\r\n"
    "  When interdigitated mode is set, all queue quartets range are\r\n"
    "  reset using fap21v_ipq_quartet_reset(), in order to prevent\r\n"
    "  illegal interdigitated/composite state.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_queue_interdigitated_mode_set k_quu_ndx\r\n"
    "  0 is_ntrdgttd 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUEUE_INTEDIGITATED_MODE_SET_IPQ_QUEUE_INTEDIGITATED_MODE_SET_K_QUEUE_NDX_ID,                                                            
    "k_quu_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  k_queue_ndx:\r\n"
    "  The K queues to configure are\r\n"
    "  (k_queue_ndx * 1024) - (k_queue_ndx * 1024 + 1023)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_queue_interdigitated_mode_set k_quu_ndx\r\n"
    "  0 is_ntrdgttd 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUEUE_INTEDIGITATED_MODE_SET_IPQ_QUEUE_INTEDIGITATED_MODE_SET_IS_INTERDIGITATED_ID,                                                            
    "is_ntrdgttd",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  is_interdigitated:\r\n"
    "  If TRUE, the K queues which k_queue_index points to will be set\r\n"
    "  to interdigitated mode.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_queue_interdigitated_mode_set k_quu_ndx\r\n"
    "  0 is_ntrdgttd 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUEUE_INTEDIGITATED_MODE_GET_IPQ_QUEUE_INTEDIGITATED_MODE_GET_ID,                                                            
    "queue_interdigitated_mode_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Map 1K of queues (256 quartets) to be in interdigitated mode or\r\n"
    "  not. Queue Quartets that configured to be in interdigitated mode\r\n"
    "  should only be configured with interdigitated flow quartets, and\r\n"
    "  the other-way around.\r\n"
    "  When interdigitated mode is set, all queue quartets range are\r\n"
    "  reset using fap21v_ipq_quartet_reset(), in order to prevent\r\n"
    "  illegal interdigitated/composite state.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_queue_interdigitated_mode_get k_quu_ndx\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(23), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUEUE_INTEDIGITATED_MODE_GET_IPQ_QUEUE_INTEDIGITATED_MODE_GET_K_QUEUE_NDX_ID,                                                            
    "k_quu_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  k_queue_ndx:\r\n"
    "  The K queues to configure are\r\n"
    "  (k_queue_ndx * 1024) - (k_queue_ndx * 1024 + 1023)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_queue_interdigitated_mode_get k_quu_ndx\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(23), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUEUE_TO_FLOW_MAPPING_SET_IPQ_QUEUE_TO_FLOW_MAPPING_SET_ID,                                                            
    "queue_to_flow_mapping_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Map a queues-quartet to system port and flow-quartet(s).\r\n"
    "  This function should only be called after calling to\r\n"
    "  fap21v_ipq_queue_interdigitated_mode_set()\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_queue_to_flow_mapping_set quu_qrtt_ndx\r\n"
    "  0 flow_qrtt_nfo_systm_physcl_prt 0 flow_qrtt_nfo_is_cmpst 0\r\n"
    "  flow_qrtt_nfo_flow_qrtt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(24), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUEUE_TO_FLOW_MAPPING_SET_IPQ_QUEUE_TO_FLOW_MAPPING_SET_QUEUE_QUARTET_NDX_ID,                                                            
    "quu_qrtt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_quartet_ndx:\r\n"
    "  The 4 queues currently configured are:\r\n"
    "  (queue_quartet_ndx * 4) - (queue_quartet_ndx * 4 + 3)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_queue_to_flow_mapping_set quu_qrtt_ndx\r\n"
    "  0 flow_qrtt_nfo_systm_physcl_prt 0 flow_qrtt_nfo_is_cmpst 0\r\n"
    "  flow_qrtt_nfo_flow_qrtt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(24), 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUEUE_TO_FLOW_MAPPING_SET_IPQ_QUEUE_TO_FLOW_MAPPING_SET_FLOW_QUARTET_INFO_SYSTEM_PHYSICAL_PORT_ID,                                                            
    "systm_physcl_prt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow_quartet_info.system_physical_port:\r\n"
    "  The system physical port to which the queue quartet is destined. Refer to\r\n"
    "  function fap21v_ipq_system_physical_port_set for more info.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_queue_to_flow_mapping_set quu_qrtt_ndx\r\n"
    "  0 flow_qrtt_nfo_systm_physcl_prt 0 flow_qrtt_nfo_is_cmpst 0\r\n"
    "  flow_qrtt_nfo_flow_qrtt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(24), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUEUE_TO_FLOW_MAPPING_SET_IPQ_QUEUE_TO_FLOW_MAPPING_SET_FLOW_QUARTET_INFO_IS_COMPOSITE_ID,                                                            
    "is_cmpst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow_quartet_info.is_composite:\r\n"
    "  When TRUE, the flow quartets that this queue quartet points to, might use\r\n"
    "  composite flows.The user might configure the flows to use only one sub-flow,\r\n"
    "  but the second sub-flow is still reserved as far as the flow-queues mapping\r\n"
    "  concerns.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_queue_to_flow_mapping_set quu_qrtt_ndx\r\n"
    "  0 flow_qrtt_nfo_systm_physcl_prt 0 flow_qrtt_nfo_is_cmpst 0\r\n"
    "  flow_qrtt_nfo_flow_qrtt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(24), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUEUE_TO_FLOW_MAPPING_SET_IPQ_QUEUE_TO_FLOW_MAPPING_SET_FLOW_QUARTET_INFO_FLOW_QUARTET_INDEX_ID,                                                            
    "flow_qrtt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow_quartet_info.flow_quartet_index:\r\n"
    "  The index of the first flow quartet to which the queue quatet points. A\r\n"
    "  single queue quartet might point to 1 quartets of flows, 2 quartets of flows\r\n"
    "  or 4 quartets of flow, depending on the 'Interdigitated' and 'Composite'\r\n"
    "  modes.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_queue_to_flow_mapping_set quu_qrtt_ndx\r\n"
    "  0 flow_qrtt_nfo_systm_physcl_prt 0 flow_qrtt_nfo_is_cmpst 0\r\n"
    "  flow_qrtt_nfo_flow_qrtt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(24), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUEUE_TO_FLOW_MAPPING_GET_IPQ_QUEUE_TO_FLOW_MAPPING_GET_ID,                                                            
    "queue_to_flow_mapping_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Map a queues-quartet to system port and flow-quartet(s).\r\n"
    "  This function should only be called after calling to\r\n"
    "  fap21v_ipq_queue_interdigitated_mode_set()\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_queue_to_flow_mapping_get quu_qrtt_ndx\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(25), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUEUE_TO_FLOW_MAPPING_GET_IPQ_QUEUE_TO_FLOW_MAPPING_GET_QUEUE_QUARTET_NDX_ID,                                                            
    "quu_qrtt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_quartet_ndx:\r\n"
    "  The 4 queues currently configured are:\r\n"
    "  (queue_quartet_ndx * 4) - (queue_quartet_ndx * 4 + 3)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_queue_to_flow_mapping_get quu_qrtt_ndx\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(25), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUARTET_RESET_IPQ_QUARTET_RESET_ID,                                                            
    "quartet_reset",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Resets a quartet to default values.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_quartet_reset quu_qrtt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(26), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_QUARTET_RESET_IPQ_QUARTET_RESET_QUEUE_QUARTET_NDX_ID,                                                            
    "quu_qrtt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_quartet_ndx:\r\n"
    "  The 4 queues currently configured are:\r\n"
    "  (queue_quartet_ndx * 4) - (queue_quartet_ndx * 4 + 3)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_quartet_reset quu_qrtt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(26), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_SET_IPQ_SNOOPING_INFO_SET_ID,                                                            
    "snooping_info_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Per Snooping Command user configures: enable/disable,\r\n"
    "  forward action destination and the size from the packet to be\r\n"
    "  snooped.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_set snp_cmd_ndx 0\r\n"
    "  prrty_ovr_mrrr 0 snp_tc_use 0 snp_tc 0 snp_dp_use 0\r\n"
    "  snp_dp 0 is_flow_id_hdr 0 dstntn 0 snp_siz 0 snp_fll_pckt\r\n"
    "  0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_SET_IPQ_SNOOPING_INFO_SET_SNP_CMD_NDX_ID,                                                            
    "snp_cmd_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  snp_cmd_ndx:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_set snp_cmd_ndx 0\r\n"
    "  prrty_ovr_mrrr 0 snp_tc_use 0 snp_tc 0 snp_dp_use 0\r\n"
    "  snp_dp 0 is_flow_id_hdr 0 dstntn 0 snp_siz 0 snp_fll_pckt\r\n"
    "  0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_SET_IPQ_SNOOPING_INFO_SET_INFO_PRIORITY_OVER_MIRROR_ID,                                                            
    "prrty_ovr_mrrr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.priority_over_mirror:\r\n"
    "  If asserted and snoop_full_packet is asserted, then snooping will have\r\n"
    "  priority over inbound mirroring, when both actions are possible.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_set snp_cmd_ndx 0\r\n"
    "  prrty_ovr_mrrr 0 snp_tc_use 0 snp_tc 0 snp_dp_use 0\r\n"
    "  snp_dp 0 is_flow_id_hdr 0 dstntn 0 snp_siz 0 snp_fll_pckt\r\n"
    "  0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_SET_IPQ_SNOOPING_INFO_SET_INFO_SNP_TC_USE_ID,                                                            
    "snp_tc_use",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.snp_tc_use:\r\n"
    "  Indicator:TRUE - use 'snp_tc' above in the snooped packetFALSE - use original\r\n"
    "  TC in the snooped packet \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_set snp_cmd_ndx 0\r\n"
    "  prrty_ovr_mrrr 0 snp_tc_use 0 snp_tc 0 snp_dp_use 0\r\n"
    "  snp_dp 0 is_flow_id_hdr 0 dstntn 0 snp_siz 0 snp_fll_pckt\r\n"
    "  0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_SET_IPQ_SNOOPING_INFO_SET_INFO_SNP_TC_ID,                                                            
    "snp_tc",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.snp_tc:\r\n"
    "  Traffic Class value of the packet\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_set snp_cmd_ndx 0\r\n"
    "  prrty_ovr_mrrr 0 snp_tc_use 0 snp_tc 0 snp_dp_use 0\r\n"
    "  snp_dp 0 is_flow_id_hdr 0 dstntn 0 snp_siz 0 snp_fll_pckt\r\n"
    "  0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_SET_IPQ_SNOOPING_INFO_SET_INFO_SNP_DP_USE_ID,                                                            
    "snp_dp_use",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.snp_dp_use:\r\n"
    "  TRUE - use 'snp_dp' above in the snooped packetFALSE - use original DP in the\r\n"
    "  snooped packet \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_set snp_cmd_ndx 0\r\n"
    "  prrty_ovr_mrrr 0 snp_tc_use 0 snp_tc 0 snp_dp_use 0\r\n"
    "  snp_dp 0 is_flow_id_hdr 0 dstntn 0 snp_siz 0 snp_fll_pckt\r\n"
    "  0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_SET_IPQ_SNOOPING_INFO_SET_INFO_SNP_DP_ID,                                                            
    "snp_dp",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.snp_dp:\r\n"
    "  Drop Precedence value of the packet\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_set snp_cmd_ndx 0\r\n"
    "  prrty_ovr_mrrr 0 snp_tc_use 0 snp_tc 0 snp_dp_use 0\r\n"
    "  snp_dp 0 is_flow_id_hdr 0 dstntn 0 snp_siz 0 snp_fll_pckt\r\n"
    "  0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_SET_IPQ_SNOOPING_INFO_SET_INFO_IS_FLOW_ID_HDR_ID,                                                            
    "is_flw_id_hdr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.is_flow_id_hdr:\r\n"
    "  When True, the destination ID above is the 15bit value, according to\r\n"
    "  Explicit-Flow headers. Else, it is the 13bit value mapped according to\r\n"
    "  Unicast-Class headers.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_set snp_cmd_ndx 0\r\n"
    "  prrty_ovr_mrrr 0 snp_tc_use 0 snp_tc 0 snp_dp_use 0\r\n"
    "  snp_dp 0 is_flow_id_hdr 0 dstntn 0 snp_siz 0 snp_fll_pckt\r\n"
    "  0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_SET_IPQ_SNOOPING_INFO_SET_INFO_DESTINATION_ID,                                                            
    "dstntn",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.destination:\r\n"
    "  Queue or system port to send the snooped packet, according to is_flow_id_hdr.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_set snp_cmd_ndx 0\r\n"
    "  prrty_ovr_mrrr 0 snp_tc_use 0 snp_tc 0 snp_dp_use 0\r\n"
    "  snp_dp 0 is_flow_id_hdr 0 dstntn 0 snp_siz 0 snp_fll_pckt\r\n"
    "  0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_SET_IPQ_SNOOPING_INFO_SET_INFO_SNOOP_SIZE_ID,                                                            
    "snp_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.snoop_size:\r\n"
    "  Snoop size, in multiples of 32. Valid when snoop_full_packet is negated.\r\n"
    "  Range: 0-2K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_set snp_cmd_ndx 0\r\n"
    "  prrty_ovr_mrrr 0 snp_tc_use 0 snp_tc 0 snp_dp_use 0\r\n"
    "  snp_dp 0 is_flow_id_hdr 0 dstntn 0 snp_siz 0 snp_fll_pckt\r\n"
    "  0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_SET_IPQ_SNOOPING_INFO_SET_INFO_SNOOP_FULL_PACKET_ID,                                                            
    "snp_fll_pckt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.snoop_full_packet:\r\n"
    "  TRUE - full packets is snooped.FALSE - Only the beginning of the packet is\r\n"
    "  snooped, up to snoop_size (see next).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_set snp_cmd_ndx 0\r\n"
    "  prrty_ovr_mrrr 0 snp_tc_use 0 snp_tc 0 snp_dp_use 0\r\n"
    "  snp_dp 0 is_flow_id_hdr 0 dstntn 0 snp_siz 0 snp_fll_pckt\r\n"
    "  0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_SET_IPQ_SNOOPING_INFO_SET_INFO_ENABLE_ID,                                                            
    "enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.enable:\r\n"
    "  TRUE - enable command.FALSE - disable command. In this case the rest of the\r\n"
    "  structure is ignored.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_set snp_cmd_ndx 0\r\n"
    "  prrty_ovr_mrrr 0 snp_tc_use 0 snp_tc 0 snp_dp_use 0\r\n"
    "  snp_dp 0 is_flow_id_hdr 0 dstntn 0 snp_siz 0 snp_fll_pckt\r\n"
    "  0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_GET_IPQ_SNOOPING_INFO_GET_ID,                                                            
    "snooping_info_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Per Snooping Command user configures: enable/disable,\r\n"
    "  forward action destination and the size from the packet to be\r\n"
    "  snooped.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_get snp_cmd_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(28), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SNOOPING_INFO_GET_IPQ_SNOOPING_INFO_GET_SNP_CMD_NDX_ID,                                                            
    "snp_cmd_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  snp_cmd_ndx:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_snooping_info_get snp_cmd_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(28), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SYSTEM_PHYSICAL_PORT_TO_DEST_PORT_SET_IPQ_SYSTEM_PHYSICAL_PORT_TO_DEST_PORT_SET_ID,                                                            
    "system_physical_port_to_dest_port_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Map a system port to a device and port IDs (configures the\r\n"
    "  Destination Device And Port Lookup Table).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_system_physical_port_to_dest_port_set\r\n"
    "  systm_physcl_prt_ndx 0 dst_dvc_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(29), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SYSTEM_PHYSICAL_PORT_TO_DEST_PORT_SET_IPQ_SYSTEM_PHYSICAL_PORT_TO_DEST_PORT_SET_SYSTEM_PHYSICAL_PORT_NDX_ID,                                                            
    "systm_physcl_prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  system_physical_port_ndx:\r\n"
    "  A unique system physical port. Range: 0-4095.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_system_physical_port_to_dest_port_set\r\n"
    "  systm_physcl_prt_ndx 0 dst_dvc_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(29), 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SYSTEM_PHYSICAL_PORT_TO_DEST_PORT_SET_IPQ_SYSTEM_PHYSICAL_PORT_TO_DEST_PORT_SET_DEST_DEVICE_ID_ID,                                                            
    "dst_dvc_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dest_unit:\r\n"
    "  Destination device id. Range: 0-2047\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_system_physical_port_to_dest_port_set\r\n"
    "  systm_physcl_prt_ndx 0 dst_dvc_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(29), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SYSTEM_PHYSICAL_PORT_TO_DEST_PORT_SET_IPQ_SYSTEM_PHYSICAL_PORT_TO_DEST_PORT_SET_DEST_PORT_ID_ID,                                                            
    "dst_prt_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dest_port_id:\r\n"
    "  Destination port id. Range: 0-255.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_system_physical_port_to_dest_port_set\r\n"
    "  systm_physcl_prt_ndx 0 dst_dvc_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(29), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SYSTEM_PHYSICAL_PORT_TO_DEST_PORT_GET_IPQ_SYSTEM_PHYSICAL_PORT_TO_DEST_PORT_GET_ID,                                                            
    "system_physical_port_to_dest_port_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Map a system port to a device and port IDs (configures the\r\n"
    "  Destination Device And Port Lookup Table).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_system_physical_port_to_dest_port_get\r\n"
    "  systm_physcl_prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(30), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_SYSTEM_PHYSICAL_PORT_TO_DEST_PORT_GET_IPQ_SYSTEM_PHYSICAL_PORT_TO_DEST_PORT_GET_SYSTEM_PHYSICAL_PORT_NDX_ID,                                                            
    "systm_physcl_prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  system_physical_port_ndx:\r\n"
    "  A unique system physical port. Range: 0-4095.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_system_physical_port_to_dest_port_get\r\n"
    "  systm_physcl_prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(30), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LOCAL_PORT_TO_SYSTEM_PORT_SET_IPQ_LOCAL_PORT_TO_SYSTEM_PORT_SET_ID,                                                            
    "local_port_to_system_port_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Map a local port to a system port (configures System-FAP-Port\r\n"
    "  lookup Table). This is used to determine if a packet has arrived\r\n"
    "  from a LAG-port ,and used at the egress for LAGs multicast pruning.\r\n"
    "  Note that this system port is different from the physical system\r\n"
    "  physical port.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_local_port_to_system_port_set\r\n"
    "  lcl_prt_ndx 0 systm_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(31), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LOCAL_PORT_TO_SYSTEM_PORT_SET_IPQ_LOCAL_PORT_TO_SYSTEM_PORT_SET_LOCAL_PORT_NDX_ID,                                                            
    "lcl_prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  Local port id. Range: 0-63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_local_port_to_system_port_set\r\n"
    "  lcl_prt_ndx 0 systm_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(31), 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LOCAL_PORT_TO_SYSTEM_PORT_SET_IPQ_LOCAL_PORT_TO_SYSTEM_PORT_SET_SYSTEM_PORT_ID,                                                            
    "systm_prt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  system_port:\r\n"
    "  The system port is a 13 bit field, as following:\r\n"
    "  system_port[12] = 1 iff the local port is a member of a lag.\r\n"
    "  if (is_lag)\r\n"
    "  system_port[11:8] = port index in the LAG. Can be passed with\r\n"
    "  headers till egerss, for use of PP.\r\n"
    "  system_port[7:0] = LAG ID\r\n"
    "  else\r\n"
    "  system_port[11:0] = system physical port\r\n"
    "  endif\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_local_port_to_system_port_set\r\n"
    "  lcl_prt_ndx 0 systm_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(31), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LOCAL_PORT_TO_SYSTEM_PORT_GET_IPQ_LOCAL_PORT_TO_SYSTEM_PORT_GET_ID,                                                            
    "local_port_to_system_port_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Map a local port to a system port (configures System-FAP-Port\r\n"
    "  lookup Table). This is used to determine if a packet has arrived\r\n"
    "  from a LAG-port ,and used at the egress for LAGs multicast pruning.\r\n"
    "  Note that this system port is different from the physical system\r\n"
    "  physical port.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_local_port_to_system_port_get\r\n"
    "  lcl_prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(0), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LOCAL_PORT_TO_SYSTEM_PORT_GET_IPQ_LOCAL_PORT_TO_SYSTEM_PORT_GET_LOCAL_PORT_NDX_ID,                                                            
    "lcl_prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  Local port id. Range: 0-63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_local_port_to_system_port_get\r\n"
    "  lcl_prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(0), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LOCAL_PORT_MAP_SET_IPQ_LOCAL_PORT_MAP_SET_ID,                                                            
    "local_port_map_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Maps spi interface and channel to local port at the ingress.\r\n"
    "  Configures the Incoming-FAP-Port Lookup Table.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_local_port_map_set spi_if_ndx 0\r\n"
    "  spi_chn_ndx 0 lcl_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(1), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LOCAL_PORT_MAP_SET_IPQ_LOCAL_PORT_MAP_SET_SPI_IF_NDX_ID,                                                            
    "spi_if_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_if_ndx:\r\n"
    "  SPI_A / SPI_B\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_local_port_map_set spi_if_ndx 0\r\n"
    "  spi_chn_ndx 0 lcl_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(1), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LOCAL_PORT_MAP_SET_IPQ_LOCAL_PORT_MAP_SET_SPI_CHAN_NDX_ID,                                                            
    "spi_chn_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_chan_ndx:\r\n"
    "  Channel-ID\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_local_port_map_set spi_if_ndx 0\r\n"
    "  spi_chn_ndx 0 lcl_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(1), 0},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LOCAL_PORT_MAP_SET_IPQ_LOCAL_PORT_MAP_SET_LOCAL_PORT_ID,                                                            
    "lcl_prt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port:\r\n"
    "  Packets arrived with the above SPI interface and channel, are\r\n"
    "  mapped to this Ingress-Local-Port. This local port is used for\r\n"
    "  inbound mirroring. Range: 0-63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_local_port_map_set spi_if_ndx 0\r\n"
    "  spi_chn_ndx 0 lcl_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(1), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LOCAL_PORT_MAP_GET_IPQ_LOCAL_PORT_MAP_GET_ID,                                                            
    "local_port_map_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Maps spi interface and channel to local port at the ingress.\r\n"
    "  Configures the Incoming-FAP-Port Lookup Table.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_local_port_map_get spi_if_ndx 0\r\n"
    "  spi_chn_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LOCAL_PORT_MAP_GET_IPQ_LOCAL_PORT_MAP_GET_SPI_IF_NDX_ID,                                                            
    "spi_if_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SPI4_2_INTERFACE_MGMT_rule[0],                                            
    (sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule) / sizeof(FAP21V_SPI4_2_INTERFACE_MGMT_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_if_ndx:\r\n"
    "  SPI_A / SPI_B\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_local_port_map_get spi_if_ndx 0\r\n"
    "  spi_chn_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LOCAL_PORT_MAP_GET_IPQ_LOCAL_PORT_MAP_GET_SPI_CHAN_NDX_ID,                                                            
    "spi_chn_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_chan_ndx:\r\n"
    "  Channel-ID\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_local_port_map_get spi_if_ndx 0\r\n"
    "  spi_chn_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_MIRRORING_SET_IPQ_MIRRORING_SET_ID,                                                            
    "mirroring_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Enable/disable inbound mirroring on ports 0-62\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_mirroring_set prt_ndx 0 dstntn 0\r\n"
    "  is_flow_id_hdr 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(3), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_MIRRORING_SET_IPQ_MIRRORING_SET_PORT_NDX_ID,                                                            
    "prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  The local port to be configured.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_mirroring_set prt_ndx 0 dstntn 0\r\n"
    "  is_flow_id_hdr 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(3), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_MIRRORING_SET_IPQ_MIRRORING_SET_INFO_DESTINATION_ID,                                                            
    "dstntn",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.destination:\r\n"
    "  Might be destination_id or flow_id according to is_flow_id_header\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_mirroring_set prt_ndx 0 dstntn 0\r\n"
    "  is_flow_id_hdr 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(3), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_MIRRORING_SET_IPQ_MIRRORING_SET_INFO_IS_FLOW_ID_HEADER_ID,                                                            
    "is_flw_id_hdr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.is_flow_id_header:\r\n"
    "  When TRUE, the above is 15bits flow_id, otherwise, 13bit destination_id. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_mirroring_set prt_ndx 0 dstntn 0\r\n"
    "  is_flow_id_hdr 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(3), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_MIRRORING_SET_IPQ_MIRRORING_SET_INFO_ENABLE_ID,                                                            
    "enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.enable:\r\n"
    "  Enable/disable. The rest of the structure is only valid when TRUE.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_mirroring_set prt_ndx 0 dstntn 0\r\n"
    "  is_flow_id_hdr 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(3), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_MIRRORING_GET_IPQ_MIRRORING_GET_ID,                                                            
    "mirroring_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Enable/disable inbound mirroring on ports 0-62\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_mirroring_get prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(4), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_MIRRORING_GET_IPQ_MIRRORING_GET_PORT_NDX_ID,                                                            
    "prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  The local port to be configured.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_mirroring_get prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(4), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LAG_GLOBAL_INFO_SET_IPQ_LAG_GLOBAL_INFO_SET_ID,                                                            
    "lag_global_info_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets global LAG parameters.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_lag_global_info_set\r\n"
    "  lag_glbl_nfo_FAP20V_B_ITMHLAG_prfx 0 lag_glbl_nfo_hsh_key_ffst_shp 0\r\n"
    "  lag_glbl_nfo_hsh_key_ffst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(5), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LAG_GLOBAL_INFO_SET_IPQ_LAG_GLOBAL_INFO_SET_LAG_GLOBAL_INFO_FAP20V_B_ITMHLAG_PREFIX_ID,                                                            
    "lag_glbl_nfo_FAP20V_B_ITMHLAG_prfx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  lag_global_info.FAP20V_B_ITMHLAG_prefix:\r\n"
    "  If the device is working in a SOC_SAND_FAP20V ITMH mode, than if\r\n"
    "  Unicast-Destination-ID[11:8] == FAP20V_ITMH_prefix than the Destination is a\r\n"
    "  Lag port (If the device is working in SOC_SAND_FAP21V ITMH Mode than\r\n"
    "  Unicast-Destination-ID[12] is the indication).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_lag_global_info_set\r\n"
    "  lag_glbl_nfo_FAP20V_B_ITMHLAG_prfx 0 lag_glbl_nfo_hsh_key_ffst_shp 0\r\n"
    "  lag_glbl_nfo_hsh_key_ffst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(5), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LAG_GLOBAL_INFO_SET_IPQ_LAG_GLOBAL_INFO_SET_LAG_GLOBAL_INFO_HASH_KEY_OFFSET_SHP_ID,                                                            
    "lag_glbl_nfo_hsh_key_ffst_shp",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  lag_global_info.hash_key_offset_shp:\r\n"
    "  Same as hash_key_offset, but is valid for ingress shaped packets\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_lag_global_info_set\r\n"
    "  lag_glbl_nfo_FAP20V_B_ITMHLAG_prfx 0 lag_glbl_nfo_hsh_key_ffst_shp 0\r\n"
    "  lag_glbl_nfo_hsh_key_ffst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(5), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LAG_GLOBAL_INFO_SET_IPQ_LAG_GLOBAL_INFO_SET_LAG_GLOBAL_INFO_HASH_KEY_OFFSET_ID,                                                            
    "lag_glbl_nfo_hsh_key_ffst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  lag_global_info.hash_key_offset:\r\n"
    "  The offset of the hash-key (the hash-key itself is 8 bit) from the end of the\r\n"
    "  DUNE header (meaning, from the beginning of the payload), in Byte resolution,\r\n"
    "  up to 16B. This field is valid for packets arriving from the SPI4, CPU\r\n"
    "  injected packets, and Outbound mirrored packets from recycling port\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_lag_global_info_set\r\n"
    "  lag_glbl_nfo_FAP20V_B_ITMHLAG_prfx 0 lag_glbl_nfo_hsh_key_ffst_shp 0\r\n"
    "  lag_glbl_nfo_hsh_key_ffst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(5), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LAG_GLOBAL_INFO_GET_IPQ_LAG_GLOBAL_INFO_GET_ID,                                                            
    "lag_global_info_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets global LAG parameters.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_lag_global_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(6), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LAG_MEMEBERS_SET_IPQ_LAG_MEMEBERS_SET_ID,                                                            
    "lag_memebers_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Per-Lag information\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_lag_memebers_set lag_ndx 0\r\n"
    "  systm_physcl_prts 0 nof_prts 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(7), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LAG_MEMEBERS_SET_IPQ_LAG_MEMEBERS_SET_LAG_NDX_ID,                                                            
    "lag_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  lag_ndx:\r\n"
    "  The LAG ID to be defined, valid values are 0-255\r\n"
    "  (destination_id[7:0] in the ITMH header).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_lag_memebers_set lag_ndx 0\r\n"
    "  systm_physcl_prts 0 nof_prts 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(7), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LAG_MEMEBERS_SET_IPQ_LAG_MEMEBERS_SET_INFO_SYSTEM_PHYSICAL_PORTS_0_ID,                                                            
    "lag_member",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_lag_member_vals[0],                                            
    (sizeof(fap21v_api_lag_member_vals) / sizeof(fap21v_api_lag_member_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.system_physical_ports[0]:\r\n"
    "  System physical ports which belong to this LAG. A system physical port is a\r\n"
    "  unique system port id (Range: 0 - FAP21V_IQM_NOF_SYSTEM_PHYSICAL_PORTS-1).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_lag_memebers_set lag_ndx 0\r\n"
    "  systm_physcl_prts 0 nof_prts 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(7), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_IPQ_LAG_MEMEBERS_GET_IPQ_LAG_MEMEBERS_GET_ID,                                                            
    "lag_memebers_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Per-Lag information\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_lag_memebers_get lag_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(8), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_LAG_MEMEBERS_GET_IPQ_LAG_MEMEBERS_GET_LAG_NDX_ID,                                                            
    "lag_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  lag_ndx:\r\n"
    "  The LAG ID to be defined, valid values are 0-255\r\n"
    "  (destination_id[7:0] in the ITMH header).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_lag_memebers_get lag_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(8), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_PACKET_FILTER_SET_IPQ_PACKET_FILTER_SET_ID,                                                            
    "packet_filter_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set headers and masks, according to which packets are discarded.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_packet_filter_set msk_2_0 0\r\n"
    "  hdr_2_0 0 msk_1_0 0 hdr_1_0 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(9), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_PACKET_FILTER_SET_IPQ_PACKET_FILTER_SET_INFO_MASK_2_0_ID,                                                            
    "filter_mask_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_filter_mask_vals[0],                                            
    (sizeof(fap21v_api_filter_mask_vals) / sizeof(fap21v_api_filter_mask_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.mask_2[0]:\r\n"
    "  Masking the first 80 bits of a header. When the first 80 bits of the packet\r\n"
    "  fit the preconfigured (header_2 | mask_2) the packet is discarded.See\r\n"
    "  header_1 for explanation regarding the bit array.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_packet_filter_set msk_2_0 0\r\n"
    "  hdr_2_0 0 msk_1_0 0 hdr_1_0 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(9), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_PACKET_FILTER_SET_IPQ_PACKET_FILTER_SET_INFO_HEADER_2_0_ID,                                                            
    "filter_header_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_filter_header_vals[0],                                            
    (sizeof(fap21v_api_filter_header_vals) / sizeof(fap21v_api_filter_header_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.header_2[0]:\r\n"
    "  The first 80 bits of a header.When the first 80 bits of the packet fit the\r\n"
    "  preconfigured (header_2 | mask_2) the packet is discarded.See header_1 for\r\n"
    "  explanation regarding the bit array.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_packet_filter_set msk_2_0 0\r\n"
    "  hdr_2_0 0 msk_1_0 0 hdr_1_0 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(9), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_PACKET_FILTER_SET_IPQ_PACKET_FILTER_SET_INFO_MASK_1_0_ID,                                                            
    "filter_mask_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_filter_mask_vals[0],                                            
    (sizeof(fap21v_api_filter_mask_vals) / sizeof(fap21v_api_filter_mask_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.mask_1[0]:\r\n"
    "  Masking the first 80 bits of a header. When the first 80 bits of the packet\r\n"
    "  fit the preconfigured (header_1 | mask_1) the packet is discarded.See\r\n"
    "  header_1 for explanation regarding the bit array.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_packet_filter_set msk_2_0 0\r\n"
    "  hdr_2_0 0 msk_1_0 0 hdr_1_0 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(9), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_PACKET_FILTER_SET_IPQ_PACKET_FILTER_SET_INFO_HEADER_1_0_ID,                                                            
    "filter_header_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_filter_header_vals[0],                                            
    (sizeof(fap21v_api_filter_header_vals) / sizeof(fap21v_api_filter_header_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.header_1[0]:\r\n"
    "  The first 80 bits of a header.When the first 80 bits of the packet fit the\r\n"
    "  preconfigured (header_1 | mask_1) the packet is discarded.Note that\r\n"
    "  header_1[0] is the LSBs, and header_1[2] is the MSBs. Some examples:Bit 3 is\r\n"
    "  header_1[0] & 1 << 3bit 36 is header_1[1] & 1 << 4bit 79 is header_1[2] & 1\r\n"
    "  << 15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_packet_filter_set msk_2_0 0\r\n"
    "  hdr_2_0 0 msk_1_0 0 hdr_1_0 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(9), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_PACKET_FILTER_SET_IPQ_PACKET_FILTER_SET_INFO_ENABLE_ID,                                                            
    "enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.enable:\r\n"
    "  Indicator:Enable filtering packets according to predefined header.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_packet_filter_set msk_2_0 0\r\n"
    "  hdr_2_0 0 msk_1_0 0 hdr_1_0 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(9), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_IPQ_PACKET_FILTER_GET_IPQ_PACKET_FILTER_GET_ID,                                                            
    "packet_filter_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set headers and masks, according to which packets are discarded.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_packet_queueing ipq_packet_filter_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(10), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_INGRESS_PACKET_QUEUEING_ID,                                                            
    "ingress_packet_queueing",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10), 0, 0, 0, 0, 0, BIT(14)|BIT(20)},
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } ingress_packet_queueing*/
#ifdef UI_INGRESS_TRAFFIC_MANAGEMENT/* { ingress_traffic_management*/
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_ID,                                                            
    "cr_request_conf_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Per queue the device maintains an Off/Normal/Slow Credit Request State. The\r\n"
    "  device has 16 'Credit Request Configurations', one per Traffic-Class\r\n"
    "  Sets the (1) Queue-Size-Thresholds (2) Credit-Balance-Thresholds (3)\r\n"
    "  Empty-Queue-Thresholds (4) Credit-Watchdog\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_QUEUE_TYPE_IPS_NDX_ID,                                                            
    "quu_typ_ips_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_ITM_QUEUE_TYPE_IPS_rule[0],                                            
    (sizeof(FAP21V_ITM_QUEUE_TYPE_IPS_rule) / sizeof(FAP21V_ITM_QUEUE_TYPE_IPS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_type_ips_ndx:\r\n"
    "  Ingress IPS Queue Type. Range: 0 to 15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_INFO_SATISFIED_TH_EMPTY_QUEUES_EXCEED_MAX_EMPTY_Q_ID,                                                            
    "stsfd_th_mpty_qs_xcd_max_mpty_q",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.satisfied_th.empty_queues.exceed_max_empty_q:\r\n"
    "  Exceed Max Empty Queue Credit Balance. This indication permits the credit\r\n"
    "  balance of an empty queue to exceed configured 'Exceed Max Empty Queue Credit\r\n"
    "  Balance' up to (Credit Value minus 1), when a credit is received. This is\r\n"
    "  used to prevent the deletion of partial credits\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_INFO_SATISFIED_TH_EMPTY_QUEUES_MAX_CREDIT_BALANCE_EMPTY_Q_ID,                                                            
    "stsfd_th_mpty_qs_max_crdt_blnc_mpty_q",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.satisfied_th.empty_queues.max_credit_balance_empty_q:\r\n"
    "  In byte resolution.Max Empty Queue Credit Balance.This value is the maximum\r\n"
    "  credits an empty queue can accumulate.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_INFO_SATISFIED_TH_EMPTY_QUEUES_SATISFIED_EMPTY_Q_TH_ID,                                                            
    "stsfd_th_mpty_qs_stsfd_mpty_q_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.satisfied_th.empty_queues.satisfied_empty_q_th:\r\n"
    "  In byte resolution. When Qsize==0 and CrBal >= EmptyQSatisfiedCrBal, CRS is\r\n"
    "  changed to OFF. This threshold is a specific case of\r\n"
    "  FAP21V_ITM_CR_REQUEST_CR_BALANCE_TH. backlog_enter_th threshold.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_INFO_SATISFIED_TH_BACKLOG_TH_BACKLOG_EXIT_TH_ID,                                                            
    "stsfd_th_bcklg_th_bcklg_xit_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.satisfied_th.backlog_th.backlog_exit_th:\r\n"
    "  In byte resolution.Hysteresis value for to the 'Backlog Enter'.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_INFO_SATISFIED_TH_BACKLOG_TH_BACKLOG_ENTER_TH_ID,                                                            
    "stsfd_th_bcklg_th_bcklg_ntr_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.satisfied_th.backlog_th.backlog_enter_th:\r\n"
    "  In byte resolution.When the Credit Balance is bigger 'Backlog Enter\r\n"
    "  threshold' bytes than the queue size, the device sends OFF message to the\r\n"
    "  scheduler. This threshold acts as Slow/Norm to off threshold.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_INFO_SATISFIED_TH_BACKOFF_TH_BACKOFF_EXIT_TH_ID,                                                            
    "stsfd_th_bckff_th_bckff_xit_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.satisfied_th.backoff_th.backoff_exit_th:\r\n"
    "  In byte resolution.Hysteresis value for to the 'Backoff Enter'.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_INFO_SATISFIED_TH_BACKOFF_TH_BACKOFF_ENTER_TH_ID,                                                            
    "stsfd_th_bckff_th_bckff_ntr_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.satisfied_th.backoff_th.backoff_enter_th:\r\n"
    "  In byte resolution.When the Credit Balance is bigger than the threshold, the\r\n"
    "  device sends OFF message to the scheduler. This is to prevent credit\r\n"
    "  accumulation from a certain threshold.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_INFO_HUNGRY_TH_MULTIPLIER_ID,                                                            
    "hngry_th_mltplr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.hungry_th.multiplier:\r\n"
    "  In byte resolution. When queue size crosses a multiply of 'multiplier' a new\r\n"
    "  Flow-Status Cell is generated.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_INFO_HUNGRY_TH_NORMAL_TO_SLOW_TH_ID,                                                            
    "hngry_th_nrml_to_slw_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.hungry_th.normal_to_slow_th:\r\n"
    "  In byte resolution. When (Qsize-CrBal) < normal_to_slow_th, and CRS==NORM,\r\n"
    "  CRS may be changed to SLOW.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_INFO_HUNGRY_TH_SLOW_TO_NORMAL_TH_ID,                                                            
    "hngry_th_slw_to_nrml_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.hungry_th.slow_to_normal_th:\r\n"
    "  In byte resolution. When (Qsize-CrBal) > slow_to_normal_th, and CRS==SLOW,\r\n"
    "  CRS may be changed to NORM.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_INFO_HUNGRY_TH_OFF_TO_NORMAL_TH_ID,                                                            
    "hngry_th_off_to_nrml_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.hungry_th.off_to_normal_th:\r\n"
    "  In byte resolution. When (Qsize-CrBal) > off_to_normal_th, and CRS==OFF, CRS\r\n"
    "  may be changed to NORM.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_SET_ITM_CR_REQUEST_INFO_SET_INFO_HUNGRY_TH_OFF_TO_SLOW_TH_ID,                                                            
    "hngry_th_off_to_slw_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.hungry_th.off_to_slow_th:\r\n"
    "  In byte resolution. When (Qsize-CrBal) > off_to_slow_th, and CRS==OFF, CRS\r\n"
    "  may be changed to SLOW.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_set quu_typ_ips_ndx\r\n"
    "  0 stsfd_th_mpty_qs_xcd_max_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_max_crdt_blnc_mpty_q 0\r\n"
    "  stsfd_th_mpty_qs_stsfd_mpty_q_th 0 stsfd_th_bcklg_th_bcklg_xit_th 0\r\n"
    "  stsfd_th_bcklg_th_bcklg_ntr_th 0 stsfd_th_bckff_th_bckff_xit_th 0\r\n"
    "  stsfd_th_bckff_th_bckff_ntr_th 0 hngry_th_mltplr 0\r\n"
    "  hngry_th_nrml_to_slw_th 0 hngry_th_slw_to_nrml_th 0\r\n"
    "  hngry_th_off_to_nrml_th 0 hngry_th_off_to_slw_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_GET_ITM_CR_REQUEST_INFO_GET_ID,                                                            
    "cr_request_conf_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Per queue the device maintains an Off/Normal/Slow Credit Request State. The\r\n"
    "  device has 16 'Credit Request Configurations', one per Traffic-Class\r\n"
    "  Sets the (1) Queue-Size-Thresholds (2) Credit-Balance-Thresholds (3)\r\n"
    "  Empty-Queue-Thresholds (4) Credit-Watchdog\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_get quu_typ_ips_ndx\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(12), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_CR_REQUEST_INFO_GET_ITM_CR_REQUEST_INFO_GET_QUEUE_TYPE_IPS_NDX_ID,                                                            
    "quu_typ_ips_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_ITM_QUEUE_TYPE_IPS_rule[0],                                            
    (sizeof(FAP21V_ITM_QUEUE_TYPE_IPS_rule) / sizeof(FAP21V_ITM_QUEUE_TYPE_IPS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_type_ips_ndx:\r\n"
    "  Ingress IPS Queue Type. Range: 0 to 15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_request_conf_get quu_typ_ips_ndx\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(12), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPE_INFO_SET_ITM_QUEUE_TYPE_INFO_SET_ID,                                                            
    "queue_type_info_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  The device has 16 possible credit-discount possibilities.\r\n"
    "  This procedure sets the 16 options.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_discount_conf_set\r\n"
    "  q_type 0 dscnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(13), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPE_INFO_SET_ITM_QUEUE_TYPE_INFO_SET_QUEUE_TYPE_QDP_NDX_ID,                                                            
    "q_type",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_ITM_QUEUE_TYPE_QDP_rule[0],                                            
    (sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule) / sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_type_qdp_ndx:\r\n"
    "  Ingress QDP Queue Type. Range: 0 to 15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_discount_conf_set\r\n"
    "  q_type 0 dscnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(13), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPE_INFO_SET_ITM_QUEUE_TYPE_INFO_SET_INFO_DISCOUNT_ID,                                                            
    "dscnt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.discount:\r\n"
    "  Range: +/- 0 to 63 bytes. AKA header compensation. When a packet is sent and\r\n"
    "  a credit is deducted from the queue's credit balance, NP/external header (or\r\n"
    "  any other size) can be discounted from result, in order not to affect overall\r\n"
    "  output rate (note that this discount is signed, which means it can be added\r\n"
    "  to the credit balance).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_discount_conf_set\r\n"
    "  q_type 0 dscnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(13), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPE_INFO_GET_ITM_QUEUE_TYPE_INFO_GET_ID,                                                            
    "queue_type_info_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  The device has 16 possible credit-discount possibilities.\r\n"
    "  This procedure sets the 16 options.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_discount_conf_get\r\n"
    "  q_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(14), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPE_INFO_GET_ITM_QUEUE_TYPE_INFO_GET_QUEUE_TYPE_QDP_NDX_ID,                                                            
    "q_type",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_ITM_QUEUE_TYPE_QDP_rule[0],                                            
    (sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule) / sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_type_qdp_ndx:\r\n"
    "  Ingress QDP Queue Type. Range: 0 to 15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_cr_discount_conf_get\r\n"
    "  q_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(14), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPE_INFO_SET_ITM_QUEUE_TYPE_INFO_SET_INFO_WRED_INFO_DISCARD_PACKET_SIZE_ID,                                                            
    "dscrd_pckt_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.discard_packet_size:\r\n"
    "  Indicator:1 - discard packet size in WRED test0 - consider packet size in\r\n"
    "  WRED test\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_set q_type 0\r\n"
    "  dscrd_pckt_siz 0 max_nst_q_siz 0 exp_wght 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(13), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPE_INFO_SET_ITM_QUEUE_TYPE_INFO_SET_INFO_WRED_INFO_MAX_INST_Q_SIZ_ID,                                                            
    "max_nst_q_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.max_inst_q_siz:\r\n"
    "  if (instantaneous-queue-size > maximum-instantaneous-queue-size) then the\r\n"
    "  packet is discarded\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_set q_type 0\r\n"
    "  dscrd_pckt_siz 0 max_nst_q_siz 0 exp_wght 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(13), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPE_INFO_SET_ITM_QUEUE_TYPE_INFO_SET_INFO_WRED_INFO_EXP_WEIGHT_ID,                                                            
    "exp_wght",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.exp_weight:\r\n"
    "  Constant for average queue size calculation.The calculation the device is\r\n"
    "  doing:Average_constant = 2^(-RED_exp_weight)if (Instantaneous-Queue-size <\r\n"
    "  Average-queue-size)\r\n"
    "  Average-queue-size = Instantaneous-Queue-sizeelse\r\n"
    "  Average-queue-size =\r\n"
    "  (1-Average_constant)*Average-queue-size +\r\n"
    "  Average_constant*Instantaneous-Queue-sizeRange\r\n"
    "  0-31.I.e., make the average factor from 1 to 2^(-31).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_set q_type 0\r\n"
    "  dscrd_pckt_siz 0 max_nst_q_siz 0 exp_wght 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(13), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPE_INFO_SET_ITM_QUEUE_TYPE_INFO_SET_INFO_WRED_INFO_ENABLE_ID,                                                            
    "wred_enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.enable:\r\n"
    "  Indicator:1 - enable WRED test0 - disable test (always accept)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_set q_type 0\r\n"
    "  dscrd_pckt_siz 0 max_nst_q_siz 0 exp_wght 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(13), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_WRED_QT_GET_ITM_WRED_QT_GET_QUEUE_TYPE_QDP_NDX_ID,                                                            
    "q_type",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_ITM_QUEUE_TYPE_QDP_rule[0],                                            
    (sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule) / sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_type_qdp_ndx:\r\n"
    "  Ingress QDP Queue Type. Range: 0 to 15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_get q_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(16), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_WRED_QT_DP_SET_ITM_WRED_QT_DP_SET_ID,                                                            
    "wred_qt_dp_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets WRED parameters per rate-class and drop precedence, includes:\r\n"
    "  max-queue, WRED, WRED-thresholds/probability. To configure WRED\r\n"
    "  configuration which are per queue-type, use the function\r\n"
    "  fap21_itm_wred_enablers_set.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_dp_set q_type 0\r\n"
    "  drp_prcdnc_ndx 0 max_prbblty 0 max_pckt_siz 0 max_vrg_th 0\r\n"
    "  min_vrg_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(17), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_WRED_QT_DP_SET_ITM_WRED_QT_DP_SET_QUEUE_TYPE_QDP_NDX_ID,                                                            
    "q_type",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_ITM_QUEUE_TYPE_QDP_rule[0],                                            
    (sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule) / sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_type_qdp_ndx:\r\n"
    "  Ingress QDP Queue Type. Range: 0 to 15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_dp_set q_type 0\r\n"
    "  drp_prcdnc_ndx 0 max_prbblty 0 max_pckt_siz 0 max_vrg_th 0\r\n"
    "  min_vrg_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(17), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_WRED_QT_DP_SET_ITM_WRED_QT_DP_SET_DROP_PRECEDENCE_NDX_ID,                                                            
    "drp_prcdnc_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  drop_precedence_ndx:\r\n"
    "  The drop precedence to set. Range: 0-3.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_dp_set q_type 0\r\n"
    "  drp_prcdnc_ndx 0 max_prbblty 0 max_pckt_siz 0 max_vrg_th 0\r\n"
    "  min_vrg_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(17), 0},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_WRED_QT_DP_SET_ITM_WRED_QT_DP_SET_INFO_MAX_PROBABILITY_ID,                                                            
    "max_prbblty",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.max_probability:\r\n"
    "  The maximum probability of discarding a packet (when the queue reaches the\r\n"
    "  maximum average size ('max_avrg_th') and the packet size is the maximum size\r\n"
    "  ('max_packet_size')).1%\r\n"
    "  = 123% = 23\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_dp_set q_type 0\r\n"
    "  drp_prcdnc_ndx 0 max_prbblty 0 max_pckt_siz 0 max_vrg_th 0\r\n"
    "  min_vrg_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(17), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_WRED_QT_DP_SET_ITM_WRED_QT_DP_SET_INFO_MAX_PACKET_SIZE_ID,                                                            
    "max_pckt_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.max_packet_size:\r\n"
    "  Max packet size for the WRED algorithm.Size of packet in bytes.In the WRED\r\n"
    "  algorithm, the device granularity is of power of 2 packet sizes. Between 2^0\r\n"
    "  to 2^15E.g., 127 bytes will be round up to 128 bytes.\r\n"
    "  Note - this size should not exceed FAP21V_WRED_MAX_PACKET_SIZE.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_dp_set q_type 0\r\n"
    "  drp_prcdnc_ndx 0 max_prbblty 0 max_pckt_siz 0 max_vrg_th 0\r\n"
    "  min_vrg_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(17), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_WRED_QT_DP_SET_ITM_WRED_QT_DP_SET_INFO_MAX_AVRG_TH_ID,                                                            
    "max_vrg_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.max_avrg_th:\r\n"
    "  Relating to queue average size.Maximum Average Threshold - Above this\r\n"
    "  threshold, packet is discarded from the queue.Resolution of bytes.The device\r\n"
    "  resolution is of 16 bytes. Has to be higher than max_avrg_th.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_dp_set q_type 0\r\n"
    "  drp_prcdnc_ndx 0 max_prbblty 0 max_pckt_siz 0 max_vrg_th 0\r\n"
    "  min_vrg_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(17), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_WRED_QT_DP_SET_ITM_WRED_QT_DP_SET_INFO_MIN_AVRG_TH_ID,                                                            
    "min_vrg_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.min_avrg_th:\r\n"
    "  Relating to queue average size.Minimum Average Threshold - Below this\r\n"
    "  threshold, packet is admitted into the queue.Resolution of bytes.The device\r\n"
    "  resolution is of 16 bytes. Has to be lower than max_avrg_th.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_dp_set q_type 0\r\n"
    "  drp_prcdnc_ndx 0 max_prbblty 0 max_pckt_siz 0 max_vrg_th 0\r\n"
    "  min_vrg_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(17), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_WRED_QT_DP_GET_ITM_WRED_QT_DP_GET_ID,                                                            
    "wred_qt_dp_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets WRED parameters per rate-class and drop precedence, includes:\r\n"
    "  max-queue, WRED, WRED-thresholds/probability. To configure WRED\r\n"
    "  configuration which are per queue-type, use the function\r\n"
    "  fap21_itm_wred_enablers_set.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_dp_get q_type 0\r\n"
    "  drp_prcdnc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(18), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_WRED_QT_DP_GET_ITM_WRED_QT_DP_GET_QUEUE_TYPE_QDP_NDX_ID,                                                            
    "q_type",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_ITM_QUEUE_TYPE_QDP_rule[0],                                            
    (sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule) / sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_type_qdp_ndx:\r\n"
    "  Ingress QDP Queue Type. Range: 0 to 15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_dp_get q_type 0\r\n"
    "  drp_prcdnc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(18), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_WRED_QT_DP_GET_ITM_WRED_QT_DP_GET_DROP_PRECEDENCE_NDX_ID,                                                            
    "drp_prcdnc_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  drop_precedence_ndx:\r\n"
    "  The drop precedence to set. Range: 0-3.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_wred_qt_dp_get q_type 0\r\n"
    "  drp_prcdnc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(18), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPES_SET_ITM_QUEUE_TYPES_SET_ID,                                                            
    "queue_types_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the queue types of a queue\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_queue_type_set quu_ndx 0\r\n"
    "  quu_typ_qdp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(19), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPES_SET_ITM_QUEUE_TYPES_SET_QUEUE_NDX_ID,                                                            
    "quu_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_ndx:\r\n"
    "  The ID of the queue to be set.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_queue_type_set quu_ndx 0\r\n"
    "  quu_typ_qdp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(19), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPES_SET_ITM_QUEUE_TYPES_SET_QUEUE_TYPE_QDP_ID,                                                            
    "quu_typ_qdp",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_ITM_QUEUE_TYPE_QDP_rule[0],                                            
    (sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule) / sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_type_qdp:\r\n"
    "  Queue type 1 to set.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_queue_type_set quu_ndx 0\r\n"
    "  quu_typ_qdp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(19), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPES_SET_ITM_QUEUE_TYPES_SET_QUEUE_TYPE_IPS_ID,                                                            
    "quu_typ_ips",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_ITM_QUEUE_TYPE_IPS_rule[0],                                            
    (sizeof(FAP21V_ITM_QUEUE_TYPE_IPS_rule) / sizeof(FAP21V_ITM_QUEUE_TYPE_IPS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_type_ips:\r\n"
    "  Queue type 2 to set.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_queue_type_set quu_ndx 0\r\n"
    "  quu_typ_qdp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(19), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPES_GET_ITM_QUEUE_TYPES_GET_ID,                                                            
    "queue_types_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the queue types of a queue\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_queue_type_get quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(20), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_QUEUE_TYPES_GET_ITM_QUEUE_TYPES_GET_QUEUE_NDX_ID,                                                            
    "quu_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_ndx:\r\n"
    "  The ID of the queue to be set.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_queue_type_get quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(20), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_SET_ITM_SYS_RED_QT_SET_ID,                                                            
    "sys_red_qt_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  System Red ingress parameters, per queue type. If enabled, the queue size\r\n"
    "  ranges table is set. For each queue type and drop-precedence,\r\n"
    "  drop/pass/drop-with-probability parameters are set using the function\r\n"
    "  fap21v_sys_red_ingress_per_dp_set.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_set q_type 0\r\n"
    "  quu_siz_bndrs_0 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(21), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_SET_ITM_SYS_RED_QT_SET_INFO_QUEUE_SIZE_BOUNDARIES_0_ID,                                                            
    "queue_size_boundaries",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_queue_size_boundaries_vals[0],                                            
    (sizeof(fap21v_api_queue_size_boundaries_vals) / sizeof(fap21v_api_queue_size_boundaries_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.queue_size_boundaries[0]:\r\n"
    "  Boundaries which map queue size to system red Virtual-OFP-Queue-Size\r\n"
    "  index.Virtual-OFP-Queue-Size 0 is mapped by 0 --\r\n"
    "  queue_size_boundaries[0].Virtual-OFP-Queue-Size 1 is mapped by\r\n"
    "  queue_size_boundaries[0] - queue_size_boundaries[1]....Virtual-OFP-Queue-Size\r\n"
    "  15 is mapped by queue_size_boundaries[14] - max_q_size.Range (for each\r\n"
    "  entry): 0 - 65024, In Byte resolution.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_set q_type 0\r\n"
    "  quu_siz_bndrs_0 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(21), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_SET_ITM_SYS_RED_QT_SET_INFO_ENABLE_ID,                                                            
    "enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.enable:\r\n"
    "  Enable for system red, per Queue type 1. Other fields of this struct are\r\n"
    "  valid only if TRUE.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_set q_type 0\r\n"
    "  quu_siz_bndrs_0 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(21), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_GET_ITM_SYS_RED_QT_GET_ID,                                                            
    "sys_red_qt_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  System Red ingress parameters, per queue type. If enabled, the queue size\r\n"
    "  ranges table is set. For each queue type and drop-precedence,\r\n"
    "  drop/pass/drop-with-probability parameters are set using the function\r\n"
    "  fap21v_sys_red_ingress_per_dp_set.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_get q_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(22), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_DP_SET_ITM_SYS_RED_QT_DP_SET_ID,                                                            
    "sys_red_qt_dp_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Configures the ingress system red parameters per drop-precedence. This\r\n"
    "  includes the thresholds and drop probability, which determine the behavior of\r\n"
    "  the algorithm according to the queue size index which is received from the\r\n"
    "  egress (see function fap21v_sys_red_ingress_set for more details).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_dp_set q_type 0\r\n"
    "  sys_red_dp_ndx 0 drp_prb_2 0 drp_prb_1 0 drp_th 0 prb_th 0\r\n"
    "  adm_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(23), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_DP_SET_ITM_SYS_RED_QT_DP_SET_QUEUE_TYPE_QDP_NDX_ID,                                                            
    "q_type",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_ITM_QUEUE_TYPE_QDP_rule[0],                                            
    (sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule) / sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_type_qdp_ndx:\r\n"
    "  Ingress QDP Queue Type. Range: 0 to 15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_dp_set q_type 0\r\n"
    "  sys_red_dp_ndx 0 drp_prb_2 0 drp_prb_1 0 drp_th 0 prb_th 0\r\n"
    "  adm_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(23), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_DP_SET_ITM_SYS_RED_QT_DP_SET_SYS_RED_DP_NDX_ID,                                                            
    "sys_red_dp_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_red_dp_ndx:\r\n"
    "  The drop precedence to be affected by this configuration.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_dp_set q_type 0\r\n"
    "  sys_red_dp_ndx 0 drp_prb_2 0 drp_prb_1 0 drp_th 0 prb_th 0\r\n"
    "  adm_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(23), 0},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_DP_SET_ITM_SYS_RED_QT_DP_SET_INFO_DRP_PROB_2_ID,                                                            
    "drp_prb_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.drp_prob_2:\r\n"
    "  Drop probability, used when Q-size range is between prob_th and drp_th .\r\n"
    "  Range: 0 - 10000, when 1% is 100.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_dp_set q_type 0\r\n"
    "  sys_red_dp_ndx 0 drp_prb_2 0 drp_prb_1 0 drp_th 0 prb_th 0\r\n"
    "  adm_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(23), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_DP_SET_ITM_SYS_RED_QT_DP_SET_INFO_DRP_PROB_1_ID,                                                            
    "drp_prb_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.drp_prob_1:\r\n"
    "  Drop probability, used when Q-size range is between adm_th and prob_th.Range:\r\n"
    "  0 - 10000, when 1% is 100.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_dp_set q_type 0\r\n"
    "  sys_red_dp_ndx 0 drp_prb_2 0 drp_prb_1 0 drp_th 0 prb_th 0\r\n"
    "  adm_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(23), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_DP_SET_ITM_SYS_RED_QT_DP_SET_INFO_DRP_TH_ID,                                                            
    "drp_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.drp_th:\r\n"
    "  Drop threshold: above this threshold packet is always dropped. Range: 0-15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_dp_set q_type 0\r\n"
    "  sys_red_dp_ndx 0 drp_prb_2 0 drp_prb_1 0 drp_th 0 prb_th 0\r\n"
    "  adm_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(23), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_DP_SET_ITM_SYS_RED_QT_DP_SET_INFO_PROB_TH_ID,                                                            
    "prb_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.prob_th:\r\n"
    "  Should be above adm_th and below drp_th drop with probability. Range: 0-15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_dp_set q_type 0\r\n"
    "  sys_red_dp_ndx 0 drp_prb_2 0 drp_prb_1 0 drp_th 0 prb_th 0\r\n"
    "  adm_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(23), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_DP_SET_ITM_SYS_RED_QT_DP_SET_INFO_ADM_TH_ID,                                                            
    "adm_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.adm_th:\r\n"
    "  Admit Threshold: Threshold below which packets are admitted . Range: 0-15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_dp_set q_type 0\r\n"
    "  sys_red_dp_ndx 0 drp_prb_2 0 drp_prb_1 0 drp_th 0 prb_th 0\r\n"
    "  adm_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(23), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_DP_GET_ITM_SYS_RED_QT_DP_GET_ID,                                                            
    "sys_red_qt_dp_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Configures the ingress system red parameters per drop-precedence. This\r\n"
    "  includes the thresholds and drop probability, which determine the behavior of\r\n"
    "  the algorithm according to the queue size index which is received from the\r\n"
    "  egress (see function fap21v_sys_red_ingress_set for more details).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_dp_get q_type 0\r\n"
    "  sys_red_dp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(24), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_DP_GET_ITM_SYS_RED_QT_DP_GET_QUEUE_TYPE_QDP_NDX_ID,                                                            
    "q_type",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_ITM_QUEUE_TYPE_QDP_rule[0],                                            
    (sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule) / sizeof(FAP21V_ITM_QUEUE_TYPE_QDP_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_type_qdp_ndx:\r\n"
    "  Ingress QDP Queue Type. Range: 0 to 15.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_dp_get q_type 0\r\n"
    "  sys_red_dp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(24), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_QT_DP_GET_ITM_SYS_RED_QT_DP_GET_SYS_RED_DP_NDX_ID,                                                            
    "sys_red_dp_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_red_dp_ndx:\r\n"
    "  The drop precedence to be affected by this configuration.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_qt_dp_get q_type 0\r\n"
    "  sys_red_dp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(24), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_CONSUMED_BUFFERS_SET_ITM_SYS_RED_CONSUMED_BUFFERS_SET_ID,                                                            
    "sys_red_consumed_buffers_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Configures system red consumed buffer thresholds which are used by\r\n"
    "  the QDP do define system red size. The value which is sent to the\r\n"
    "  egress is the maximum between this size and the\r\n"
    "  Virtual-OFP-Queue-Size caluclated according to the\r\n"
    "  queue_size_boundaries set in fap21v_itm_sys_red_qt_set().\r\n"
    "  Remark: The size the QDP calculates is the maximum between all\r\n"
    "  memory block. This means that a packet could be discarded even\r\n"
    "  though it was not destined to the overloaded block. For this\r\n"
    "  reason, this feature is advised to be used when only only 1 block\r\n"
    "  is used.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_consumed_buffers_set\r\n"
    "  blck_ndx 0 cnf 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(25), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_CONSUMED_BUFFERS_SET_ITM_SYS_RED_CONSUMED_BUFFERS_SET_BLOCK_NDX_ID,                                                            
    "blck_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  block_ndx:\r\n"
    "  Memory block to be configured. Range: 0-3.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_consumed_buffers_set\r\n"
    "  blck_ndx 0 cnf 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(25), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_CONSUMED_BUFFERS_SET_ITM_SYS_RED_CONSUMED_BUFFERS_SET_INFO_ID,                                                            
    "consumed_buffers_boundaries",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_consumed_buffers_boundaries_vals[0],                                            
    (sizeof(fap21v_api_consumed_buffers_boundaries_vals) / sizeof(fap21v_api_consumed_buffers_boundaries_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  conf:\r\n"
    "  Consumed beffers thresholds to be configured.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_consumed_buffers_set\r\n"
    "  blck_ndx 0 cnf 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(25), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_CONSUMED_BUFFERS_GET_ITM_SYS_RED_CONSUMED_BUFFERS_GET_ID,                                                            
    "sys_red_consumed_buffers_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Configures system red consumed buffer thresholds which are used by\r\n"
    "  the QDP do define system red size. The value which is sent to the\r\n"
    "  egress is the maximum between this size and the\r\n"
    "  Virtual-OFP-Queue-Size caluclated according to the\r\n"
    "  queue_size_boundaries set in fap21v_itm_sys_red_qt_set().\r\n"
    "  Remark: The size the QDP calculates is the maximum between all\r\n"
    "  memory block. This means that a packet could be discarded even\r\n"
    "  though it was not destined to the overloaded block. For this\r\n"
    "  reason, this feature is advised to be used when only only 1 block\r\n"
    "  is used.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_consumed_buffers_get\r\n"
    "  blck_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(26), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SYS_RED_CONSUMED_BUFFERS_GET_ITM_SYS_RED_CONSUMED_BUFFERS_GET_BLOCK_NDX_ID,                                                            
    "blck_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  block_ndx:\r\n"
    "  Memory block to be configured. Range: 0-3.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_sys_red_consumed_buffers_get\r\n"
    "  blck_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(26), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SYS_RED_EGRESS_SET_SYS_RED_EGRESS_SET_ID,                                                            
    "sys_red_egress_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  At the outgoing FAP port, a System-Queue-Size is maintained. Per a\r\n"
    "  configurable aging-period time the queue is aged. System-Queue-Size has two\r\n"
    "  again models (when aging time arrived): reset or decrement. Reset sets the\r\n"
    "  System-Queue-Size to zero, decrement decrease the size of the OFP\r\n"
    "  System-Queue-Size with one.\r\n"
    "  Note: though this function is not an ITM function, it resides here due to\r\n"
    "  relevance to other System RED functions.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management sys_red_egress_set nbl 0\r\n"
    "  gng_nly_dec_q_siz 0 rst_xprd_q_siz 0 gng_tmr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(27), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SYS_RED_EGRESS_SET_SYS_RED_EGRESS_SET_INFO_ENABLE_ID,                                                            
    "enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.enable:\r\n"
    "  Indicator:1 - System RED is enabled. 0 - System RED is disabled.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management sys_red_egress_set nbl 0\r\n"
    "  gng_nly_dec_q_siz 0 rst_xprd_q_siz 0 gng_tmr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(27), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SYS_RED_EGRESS_SET_SYS_RED_EGRESS_SET_INFO_AGING_ONLY_DEC_Q_SIZE_ID,                                                            
    "gng_nly_dec_q_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.aging_only_dec_q_size:\r\n"
    "  TRUE - Only aging decrements the SRED queue size.FALSE - Flow status message\r\n"
    "  and aging can decrement SRED queue size.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management sys_red_egress_set nbl 0\r\n"
    "  gng_nly_dec_q_siz 0 rst_xprd_q_siz 0 gng_tmr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(27), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SYS_RED_EGRESS_SET_SYS_RED_EGRESS_SET_INFO_RESET_EXPIRED_Q_SIZE_ID,                                                            
    "rst_xprd_q_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.reset_expired_q_size:\r\n"
    "  Indicator:1 - the mechanism resets the queue size. 0 - the mechanism\r\n"
    "  decrements it by one. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management sys_red_egress_set nbl 0\r\n"
    "  gng_nly_dec_q_siz 0 rst_xprd_q_siz 0 gng_tmr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(27), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SYS_RED_EGRESS_SET_SYS_RED_EGRESS_SET_INFO_AGING_TIMER_ID,                                                            
    "gng_tmr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.aging_timer:\r\n"
    "  Unit in millisecond. Every 'aging_timer' the aging mechanism accesses the\r\n"
    "  queue size saved for a port. If a message has been received with an updated\r\n"
    "  queue size since the last time the aging mechanism accessed the port this\r\n"
    "  mechanism continues on to the next port. Otherwise it changes the queue size\r\n"
    "  according to 'reset_expired_q_size'. Values of 0 or 1 means do not decrement\r\n"
    "  the queue size values.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management sys_red_egress_set nbl 0\r\n"
    "  gng_nly_dec_q_siz 0 rst_xprd_q_siz 0 gng_tmr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(27), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SYS_RED_EGRESS_GET_SYS_RED_EGRESS_GET_ID,                                                            
    "sys_red_egress_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  At the outgoing FAP port, a System-Queue-Size is maintained. Per a\r\n"
    "  configurable aging-period time the queue is aged. System-Queue-Size has two\r\n"
    "  again models (when aging time arrived): reset or decrement. Reset sets the\r\n"
    "  System-Queue-Size to zero, decrement decrease the size of the OFP\r\n"
    "  System-Queue-Size with one.\r\n"
    "  Note: though this function is not an ITM function, it resides here due to\r\n"
    "  relevance to other System RED functions.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management sys_red_egress_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(28), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_PRIORITY_MAP_SET_ITM_PRIORITY_MAP_SET_ID,                                                            
    "priority_map_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Four sets of queues-priorities maps are held in the device. Per map:\r\n"
    "  describes a segment of 64 contiguous queues. Each queue is either high or low\r\n"
    "  priority.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_priority_map_set map_ndx 0\r\n"
    "  map_1 0 map_0 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(29), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_PRIORITY_MAP_SET_ITM_PRIORITY_MAP_SET_MAP_NDX_ID,                                                            
    "map_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  map_ndx:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_priority_map_set map_ndx 0\r\n"
    "  map_1 0 map_0 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(29), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_PRIORITY_MAP_SET_ITM_PRIORITY_MAP_SET_INFO_MAP_1_ID,                                                            
    "map_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.map[1]:\r\n"
    "  Describes one segment of 64 contiguous queues. If bit value is 1: high\r\n"
    "  priority.If bit value is 0: low priority.Note that map[0] is the LSBs, and\r\n"
    "  that map[FAP21V_ITM_PRIO_CONST_MAP_LONG_SIZE-1] is the MSBs.Some examples,\r\n"
    "  assuming that [FAP21V_ITM_PRIO_CONST_MAP_LONG_SIZE is 2:Segment 2 is map[0] &\r\n"
    "  1 << 2Segment 40 is map[1] & 1 << 8\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_priority_map_set map_ndx 0\r\n"
    "  map_1 0 map_0 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(29), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_PRIORITY_MAP_SET_ITM_PRIORITY_MAP_SET_INFO_MAP_0_ID,                                                            
    "map_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.map[0]:\r\n"
    "  Describes one segment of 64 contiguous queues. If bit value is 1: high\r\n"
    "  priority.If bit value is 0: low priority.Note that map[0] is the LSBs, and\r\n"
    "  that map[FAP21V_ITM_PRIO_CONST_MAP_LONG_SIZE-1] is the MSBs.Some examples,\r\n"
    "  assuming that [FAP21V_ITM_PRIO_CONST_MAP_LONG_SIZE is 2:Segment 2 is map[0] &\r\n"
    "  1 << 2Segment 40 is map[1] & 1 << 8\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_priority_map_set map_ndx 0\r\n"
    "  map_1 0 map_0 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(29), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_PRIORITY_MAP_GET_ITM_PRIORITY_MAP_GET_ID,                                                            
    "priority_map_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Four sets of queues-priorities maps are held in the device. Per map:\r\n"
    "  describes a segment of 64 contiguous queues. Each queue is either high or low\r\n"
    "  priority.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_priority_map_get map_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(30), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_PRIORITY_MAP_GET_ITM_PRIORITY_MAP_GET_MAP_NDX_ID,                                                            
    "map_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  map_ndx:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_priority_map_get map_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(30), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_PRIORITY_SET_ITM_PRIORITY_SET_ID,                                                            
    "priority_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  The 32K (SOC_SAND_FAP21V) / 8K (SOC_SAND_FAP20V RevC) ingress-queues range is segmented into\r\n"
    "  512 (SOC_SAND_FAP21V) / 128 (SOC_SAND_FAP20V RevC) segments of 64 contiguous queues, that is,\r\n"
    "  queues 64N to 64N+63 that all have the same map-id (one of four).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_priority_set quu_64_ndx 0 prrty_map\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(31), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_PRIORITY_SET_ITM_PRIORITY_SET_QUEUE_64_NDX_ID,                                                            
    "quu_64_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_64_ndx:\r\n"
    "  queues segment to be configured.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_priority_set quu_64_ndx 0 prrty_map\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(31), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_PRIORITY_SET_ITM_PRIORITY_SET_PRIORITY_MAP_ID,                                                            
    "prrty_map",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  priority_map:\r\n"
    "  Priority map index. Range: 0-3.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_priority_set quu_64_ndx 0 prrty_map\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(31), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_PRIORITY_GET_ITM_PRIORITY_GET_ID,                                                            
    "priority_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  The 32K (SOC_SAND_FAP21V) / 8K (SOC_SAND_FAP20V RevC) ingress-queues range is segmented into\r\n"
    "  512 (SOC_SAND_FAP21V) / 128 (SOC_SAND_FAP20V RevC) segments of 64 contiguous queues, that is,\r\n"
    "  queues 64N to 64N+63 that all have the same map-id (one of four).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_priority_get quu_64_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(0)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_PRIORITY_GET_ITM_PRIORITY_GET_QUEUE_64_NDX_ID,                                                            
    "quu_64_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_64_ndx:\r\n"
    "  queues segment to be configured.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_priority_get quu_64_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SCRUBBER_SET_ITM_SCRUBBER_SET_ID,                                                            
    "scrubber_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets ingress-queue scrubber configuration, includes:\r\n"
    "  start-queue, end-queue, scrubber-rates \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_scrubber_set top_quu 0\r\n"
    "  bttm_quu 0 gen_off_msgs 0 max_flow_msg_gen_brst_siz 0\r\n"
    "  max_flow_msg_gen_rte_nno 0 min_scn_cycl_prd_mcr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(1)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SCRUBBER_SET_ITM_SCRUBBER_SET_INFO_TOP_QUEUE_ID,                                                            
    "top_quu",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.top_queue:\r\n"
    "  Top queue for Scrubber\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_scrubber_set top_quu 0\r\n"
    "  bttm_quu 0 gen_off_msgs 0 max_flow_msg_gen_brst_siz 0\r\n"
    "  max_flow_msg_gen_rte_nno 0 min_scn_cycl_prd_mcr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SCRUBBER_SET_ITM_SCRUBBER_SET_INFO_BOTTOM_QUEUE_ID,                                                            
    "bttm_quu",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.bottom_queue:\r\n"
    "  The Scrubber scans between bottom queue and top queue in cyclic manner, at a\r\n"
    "  minimum rate.This value is the bottom queue for the Scrubber\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_scrubber_set top_quu 0\r\n"
    "  bttm_quu 0 gen_off_msgs 0 max_flow_msg_gen_brst_siz 0\r\n"
    "  max_flow_msg_gen_rte_nno 0 min_scn_cycl_prd_mcr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SCRUBBER_SET_ITM_SCRUBBER_SET_INFO_GEN_OFF_MSGS_ID,                                                            
    "gen_off_msgs",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.gen_off_msgs:\r\n"
    "  Indicator:1 - Scrubber will generate off messages (as well as SLOW/ON)0 -\r\n"
    "  Scrubber will generate only SLOW/ON.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_scrubber_set top_quu 0\r\n"
    "  bttm_quu 0 gen_off_msgs 0 max_flow_msg_gen_brst_siz 0\r\n"
    "  max_flow_msg_gen_rte_nno 0 min_scn_cycl_prd_mcr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SCRUBBER_SET_ITM_SCRUBBER_SET_INFO_MAX_FLOW_MSG_GEN_BURST_SIZE_ID,                                                            
    "max_flw_msg_gen_brst_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.max_flow_msg_gen_burst_size:\r\n"
    "  The maximum size of the token bucket\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_scrubber_set top_quu 0\r\n"
    "  bttm_quu 0 gen_off_msgs 0 max_flow_msg_gen_brst_siz 0\r\n"
    "  max_flow_msg_gen_rte_nno 0 min_scn_cycl_prd_mcr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SCRUBBER_SET_ITM_SCRUBBER_SET_INFO_MAX_FLOW_MSG_GEN_RATE_NANO_ID,                                                            
    "max_flw_msg_gen_rte_nno",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.max_flow_msg_gen_rate_nano:\r\n"
    "  This value defines the period in clocks in which a token bucket is\r\n"
    "  incremented. Value in nanosecond. Range: 0 - 1542.0 - disables message\r\n"
    "  generation, meaning the FSM scrubber may send as many messages as it can.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_scrubber_set top_quu 0\r\n"
    "  bttm_quu 0 gen_off_msgs 0 max_flow_msg_gen_brst_siz 0\r\n"
    "  max_flow_msg_gen_rte_nno 0 min_scn_cycl_prd_mcr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SCRUBBER_SET_ITM_SCRUBBER_SET_INFO_MIN_SCAN_CYCLE_PERIOD_MICRO_ID,                                                            
    "min_scn_cycl_prd_mcr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.min_scan_cycle_period_micro:\r\n"
    "  Scrubber has a given minimum scan rate between top and bottom queue. The scan\r\n"
    "  time can be longer if the scrubber access is restrained by other events, or\r\n"
    "  if many queues need to be serviced by the scrubber (then it is restrained by\r\n"
    "  it's own flow status generation limit).This value is the minimum time between\r\n"
    "  two full scan of the queues. Value in microsecond. Range: 0 - 50533.0 -\r\n"
    "  disable the Scrubber\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_scrubber_set top_quu 0\r\n"
    "  bttm_quu 0 gen_off_msgs 0 max_flow_msg_gen_brst_siz 0\r\n"
    "  max_flow_msg_gen_rte_nno 0 min_scn_cycl_prd_mcr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_ITM_SCRUBBER_GET_ITM_SCRUBBER_GET_ID,                                                            
    "scrubber_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets ingress-queue scrubber configuration, includes:\r\n"
    "  start-queue, end-queue, scrubber-rates \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ingress_traffic_management itm_scrubber_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_INGRESS_TRAFFIC_MANAGEMENT_ID,                                                            
    "ingress_traffic_management",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } ingress_traffic_management*/
#ifdef UI_EGRESS_QUEUES/* { egress_queues*/
  {                                                                                        
    PARAM_FAP21V_EGQ_QUEUE_SET_EGQ_QUEUE_SET_ID,                                                            
    "port_info_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Apply settings for each pair of FAP-port queues.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_queue_set prt_ndx 0 quu_prrty_ndx 0\r\n"
    "  nschdld_wght 0 schdld_wght 0 prrty 0 typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(5)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_QUEUE_SET_EGQ_QUEUE_SET_PORT_NDX_ID,                                                            
    "port_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  The output local port to which the settings are applied.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_queue_set prt_ndx 0 quu_prrty_ndx 0\r\n"
    "  nschdld_wght 0 schdld_wght 0 prrty 0 typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(5)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_QUEUE_SET_EGQ_QUEUE_SET_MODE_ID,                                                            
    "mode",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_EGQ_QUEUES_PER_PORT_MODE_rule[0],                                            
    (sizeof(FAP21V_EGQ_QUEUES_PER_PORT_MODE_rule) / sizeof(FAP21V_EGQ_QUEUES_PER_PORT_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  The output local port to which the settings are applied.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_queue_set prt_ndx 0 quu_prrty_ndx 0\r\n"
    "  nschdld_wght 0 schdld_wght 0 prrty 0 typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(5)},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_QUEUE_SET_EGQ_QUEUE_SET_INFO_PORT_PRIO_ID,                                                            
    "port_priority",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_EGQ_PORT_PRIORITY_rule[0],                                            
    (sizeof(FAP21V_EGQ_PORT_PRIORITY_rule) / sizeof(FAP21V_EGQ_PORT_PRIORITY_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.unscheduled_weight:\r\n"
    "  The port's unscheduled traffic weight (0 for Strict priority above the\r\n"
    "  scheduled traffic, as long as the scheduled_weight was not defined as 0 as\r\n"
    "  well). Range is 0 - 255.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_queue_set prt_ndx 0 quu_prrty_ndx 0\r\n"
    "  nschdld_wght 0 schdld_wght 0 prrty 0 typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(5)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_QUEUE_SET_EGQ_QUEUE_SET_INFO_UNSCHEDULED_WEIGHT_ID,                                                            
    "nschdld_wght",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.unscheduled_weight:\r\n"
    "  The port's unscheduled traffic weight (0 for Strict priority above the\r\n"
    "  scheduled traffic, as long as the scheduled_weight was not defined as 0 as\r\n"
    "  well). Range is 0 - 255.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_queue_set prt_ndx 0 quu_prrty_ndx 0\r\n"
    "  nschdld_wght 0 schdld_wght 0 prrty 0 typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(5)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_QUEUE_SET_EGQ_QUEUE_SET_INFO_SCHEDULED_WEIGHT_ID,                                                            
    "schdld_wght",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.scheduled_weight:\r\n"
    "  The port's scheduled traffic weight (0 for Strict priority above the\r\n"
    "  unscheduled traffic). Range is 0 - 255\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_queue_set prt_ndx 0 quu_prrty_ndx 0\r\n"
    "  nschdld_wght 0 schdld_wght 0 prrty 0 typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(5)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_QUEUE_SET_EGQ_QUEUE_SET_INFO_UNSCHEDULED_WEIGHT_HIGH_ID,                                                            
    "nschdld_wght_high",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.unscheduled_weight:\r\n"
    "  The port's unscheduled traffic weight (0 for Strict priority above the\r\n"
    "  scheduled traffic, as long as the scheduled_weight was not defined as 0 as\r\n"
    "  well). Range is 0 - 255.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_queue_set prt_ndx 0 quu_prrty_ndx 0\r\n"
    "  nschdld_wght 0 schdld_wght 0 prrty 0 typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(5)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_QUEUE_SET_EGQ_QUEUE_SET_INFO_SCHEDULED_WEIGHT_HIGH_ID,                                                            
    "schdld_wght_high",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.scheduled_weight:\r\n"
    "  The port's scheduled traffic weight (0 for Strict priority above the\r\n"
    "  unscheduled traffic). Range is 0 - 255\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_queue_set prt_ndx 0 quu_prrty_ndx 0\r\n"
    "  nschdld_wght 0 schdld_wght 0 prrty 0 typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(5)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_QUEUE_SET_EGQ_QUEUE_SET_INFO_QUEUE_TYPE_ID,                                                            
    "queue_type",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_EGQ_QUEUE_TYPE_rule[0],                                            
    (sizeof(FAP21V_EGQ_QUEUE_TYPE_rule) / sizeof(FAP21V_EGQ_QUEUE_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.type:\r\n"
    "  One of 4 queue types\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_queue_set prt_ndx 0 quu_prrty_ndx 0\r\n"
    "  nschdld_wght 0 schdld_wght 0 prrty 0 typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(5)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_QUEUE_SET_EGQ_QUEUE_SET_INFO_QUEUE_TYPE_HIGH_ID,                                                            
    "queue_type_high",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_EGQ_QUEUE_TYPE_rule[0],                                            
    (sizeof(FAP21V_EGQ_QUEUE_TYPE_rule) / sizeof(FAP21V_EGQ_QUEUE_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.type:\r\n"
    "  One of 4 queue types\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_queue_set prt_ndx 0 quu_prrty_ndx 0\r\n"
    "  nschdld_wght 0 schdld_wght 0 prrty 0 typ 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(5)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_QUEUE_GET_EGQ_QUEUE_GET_ID,                                                            
    "port_info_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Apply settings for each pair of FAP-port queues.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_queue_get prt_ndx 0 quu_prrty_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_QUEUE_GET_EGQ_QUEUE_GET_PORT_NDX_ID,                                                            
    "prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  The output local port to which the settings are applied.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_queue_get prt_ndx 0 quu_prrty_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_TC_PRIORITY_SET_EGQ_TC_PRIORITY_SET_ID,                                                            
    "tc_priority_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Active only in 4 queues per egress port mode. Determines for a\r\n"
    "  packet with given system traffic class and system drop precedence if they\r\n"
    "  represent high or low priority.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_tc_priority_set pckt_typ_ndx 0 systm_tc_ndx 0\r\n"
    "  systm_dp_ndx 0 is_hgh_prrty 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(7)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_TC_PRIORITY_SET_EGQ_TC_PRIORITY_SET_PACKET_TYPE_NDX_ID,                                                            
    "pckt_typ_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_EGQ_PACKET_TYPE_rule[0],                                            
    (sizeof(FAP21V_EGQ_PACKET_TYPE_rule) / sizeof(FAP21V_EGQ_PACKET_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  packet_type_ndx:\r\n"
    "  The packet type (scheduled, multicast unscheduled and multicast\r\n"
    "  scheduled\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_tc_priority_set pckt_typ_ndx 0 systm_tc_ndx 0\r\n"
    "  systm_dp_ndx 0 is_hgh_prrty 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(7)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_TC_PRIORITY_SET_EGQ_TC_PRIORITY_SET_SYSTEM_TC_NDX_ID,                                                            
    "systm_tc_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  system_tc_ndx:\r\n"
    "  System traffic class. Range: 0 - 7.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_tc_priority_set pckt_typ_ndx 0 systm_tc_ndx 0\r\n"
    "  systm_dp_ndx 0 is_hgh_prrty 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(7)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_TC_PRIORITY_SET_EGQ_TC_PRIORITY_SET_SYSTEM_DP_NDX_ID,                                                            
    "systm_dp_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  system_dp_ndx:\r\n"
    "  System drop precedence. Range: 0 - 3.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_tc_priority_set pckt_typ_ndx 0 systm_tc_ndx 0\r\n"
    "  systm_dp_ndx 0 is_hgh_prrty 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(7)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_TC_PRIORITY_SET_EGQ_TC_PRIORITY_SET_IS_HIGH_PRIORITY_ID,                                                            
    "is_hgh_prrty",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  is_high_priority:\r\n"
    "  TRUE for high priority.\r\n"
    "  FALSE otherwise.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_tc_priority_set pckt_typ_ndx 0 systm_tc_ndx 0\r\n"
    "  systm_dp_ndx 0 is_hgh_prrty 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_TC_PRIORITY_GET_EGQ_TC_PRIORITY_GET_ID,                                                            
    "tc_priority_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Active only in 4 queues per egress port mode. Determines for a\r\n"
    "  packet with given system traffic class and system drop precedence if they\r\n"
    "  represent high or low priority.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_tc_priority_get pckt_typ_ndx 0 systm_tc_ndx 0\r\n"
    "  systm_dp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_TC_PRIORITY_GET_EGQ_TC_PRIORITY_GET_PACKET_TYPE_NDX_ID,                                                            
    "pckt_typ_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_EGQ_PACKET_TYPE_rule[0],                                            
    (sizeof(FAP21V_EGQ_PACKET_TYPE_rule) / sizeof(FAP21V_EGQ_PACKET_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  packet_type_ndx:\r\n"
    "  The packet type (scheduled, multicast unscheduled and multicast\r\n"
    "  scheduled\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_tc_priority_get pckt_typ_ndx 0 systm_tc_ndx 0\r\n"
    "  systm_dp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_TC_PRIORITY_GET_EGQ_TC_PRIORITY_GET_SYSTEM_TC_NDX_ID,                                                            
    "systm_tc_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  system_tc_ndx:\r\n"
    "  System traffic class. Range: 0 - 7.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_tc_priority_get pckt_typ_ndx 0 systm_tc_ndx 0\r\n"
    "  systm_dp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_TC_PRIORITY_GET_EGQ_TC_PRIORITY_GET_SYSTEM_DP_NDX_ID,                                                            
    "systm_dp_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  system_dp_ndx:\r\n"
    "  System drop precedence. Range: 0 - 3.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_tc_priority_get pckt_typ_ndx 0 systm_tc_ndx 0\r\n"
    "  systm_dp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_TC_SET_EGQ_MC_TC_SET_ID,                                                            
    "mc_tc_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Determines for a multicast packet with given system traffic class\r\n"
    "  and system drop precedence their multicast class.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_tc_set systm_tc_ndx 0 systm_dp_ndx 0 mc_clss 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(9)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_TC_SET_EGQ_MC_TC_SET_SYSTEM_TC_NDX_ID,                                                            
    "systm_tc_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  system_tc_ndx:\r\n"
    "  System traffic class. Range: 0 - 7.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_tc_set systm_tc_ndx 0 systm_dp_ndx 0 mc_clss 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(9)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_TC_SET_EGQ_MC_TC_SET_SYSTEM_DP_NDX_ID,                                                            
    "systm_dp_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  system_dp_ndx:\r\n"
    "  System drop precedence. Range: 0 - 3\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_tc_set systm_tc_ndx 0 systm_dp_ndx 0 mc_clss 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(9)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_TC_SET_EGQ_MC_TC_SET_MC_CLASS_ID,                                                            
    "mc_clss",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_MULTICAST_CLASS_rule[0],                                            
    (sizeof(FAP21V_MULTICAST_CLASS_rule) / sizeof(FAP21V_MULTICAST_CLASS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_class:\r\n"
    "  One of 4 multicast classes.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_tc_set systm_tc_ndx 0 systm_dp_ndx 0 mc_clss 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_TC_GET_EGQ_MC_TC_GET_ID,                                                            
    "mc_tc_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Determines for a multicast packet with given system traffic class\r\n"
    "  and system drop precedence their multicast class.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_tc_get systm_tc_ndx 0 systm_dp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(10)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_TC_GET_EGQ_MC_TC_GET_SYSTEM_TC_NDX_ID,                                                            
    "systm_tc_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  system_tc_ndx:\r\n"
    "  System traffic class. Range: 0 - 7.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_tc_get systm_tc_ndx 0 systm_dp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_TC_GET_EGQ_MC_TC_GET_SYSTEM_DP_NDX_ID,                                                            
    "systm_dp_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  system_dp_ndx:\r\n"
    "  System drop precedence. Range: 0 - 3\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_tc_get systm_tc_ndx 0 systm_dp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_ID,                                                            
    "fc_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets EGQ flow control thresholds.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_INFO_PORT_SCHD_WRDS_FC_TH_3_ID,                                                            
    "prt_schd_wrds_fc_th_3",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_schd_wrds_fc_th[3]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in scheduled\r\n"
    "  queues that are configured to the corresponding port types, Per-port\r\n"
    "  flow-control to the scheduler is asserted when the threshold is exceeded\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_INFO_PORT_SCHD_WRDS_FC_TH_2_ID,                                                            
    "prt_schd_wrds_fc_th_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_schd_wrds_fc_th[2]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in scheduled\r\n"
    "  queues that are configured to the corresponding port types, Per-port\r\n"
    "  flow-control to the scheduler is asserted when the threshold is exceeded\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_INFO_PORT_SCHD_WRDS_FC_TH_1_ID,                                                            
    "prt_schd_wrds_fc_th_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_schd_wrds_fc_th[1]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in scheduled\r\n"
    "  queues that are configured to the corresponding port types, Per-port\r\n"
    "  flow-control to the scheduler is asserted when the threshold is exceeded\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_INFO_PORT_SCHD_WRDS_FC_TH_0_ID,                                                            
    "prt_schd_wrds_fc_th_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_schd_wrds_fc_th[0]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in scheduled\r\n"
    "  queues that are configured to the corresponding port types, Per-port\r\n"
    "  flow-control to the scheduler is asserted when the threshold is exceeded\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_INFO_TOTAL_SPI_B_SCHD_PKTS_FC_TH_ID,                                                            
    "ttl_spi_b_schd_pkts_fc_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_spi_b_schd_pkts_fc_th:\r\n"
    "  Threshold of the number of packets in all queues assigned to SPI4 B to assert\r\n"
    "  SPI4 B flow-control to the scheduler when exceeded\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_INFO_TOTAL_SPI_B_WRDS_FC_TH_ID,                                                            
    "ttl_spi_b_wrds_fc_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_spi_b_wrds_fc_th:\r\n"
    "  Threshold of the number of 32B words in all queues assigned to SPI4 B to\r\n"
    "  assert SPI4 B flow-control to the scheduler when exceeded\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_INFO_TOTAL_SPI_A_SCHD_PKTS_FC_TH_ID,                                                            
    "ttl_spi_a_schd_pkts_fc_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_spi_a_schd_pkts_fc_th:\r\n"
    "  Threshold of the number of packets in all queues assigned to SPI4 A to assert\r\n"
    "  SPI4 A flow-control to the scheduler when exceeded\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_INFO_TOTAL_SPI_A_WRDS_FC_TH_ID,                                                            
    "ttl_spi_a_wrds_fc_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_spi_a_wrds_fc_th:\r\n"
    "  Threshold of the number of 32B words in all queues assigned to SPI4 A to\r\n"
    "  assert SPI4 A flow-control to the scheduler when exceeded\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_INFO_FREE_DESC_FC_TH_ID,                                                            
    "fr_dsc_fc_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.free_desc_fc_th:\r\n"
    "  Threshold of the number of available descriptors below which the device\r\n"
    "  flow-control to the scheduler is asserted\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_INFO_FREE_BUF_FC_TH_ID,                                                            
    "fr_buf_fc_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.free_buf_fc_th:\r\n"
    "  Threshold of the number of available buffers below which the device\r\n"
    "  flow-control to the scheduler is asserted\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_INFO_TOTAL_SCHD_PKTS_FC_TH_ID,                                                            
    "ttl_schd_pkts_fc_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_schd_pkts_fc_th:\r\n"
    "  Threshold of total number of packets in all scheduled queues above which the\r\n"
    "  device flow-control to the scheduler is asserted\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_SET_EGQ_FC_SET_INFO_TOTAL_SCHD_WRDS_FC_TH_ID,                                                            
    "ttl_schd_wrds_fc_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_schd_wrds_fc_th:\r\n"
    "  Threshold of total number of 32B words in all scheduled queues above which\r\n"
    "  the device flow-control to the scheduler is asserted.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_set prt_schd_wrds_fc_th_3 0\r\n"
    "  prt_schd_wrds_fc_th_2 0 prt_schd_wrds_fc_th_1 0\r\n"
    "  prt_schd_wrds_fc_th_0 0 ttl_spi_b_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_b_wrds_fc_th 0 ttl_spi_a_schd_pkts_fc_th 0\r\n"
    "  ttl_spi_a_wrds_fc_th 0 fr_dsc_fc_th 0 fr_buf_fc_th 0\r\n"
    "  ttl_schd_pkts_fc_th 0 ttl_schd_wrds_fc_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_FC_GET_EGQ_FC_GET_ID,                                                            
    "fc_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets EGQ flow control thresholds.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_fc_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_SET_EGQ_MC_SET_ID,                                                            
    "mc_thresholds_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets EGQ multicast thresholds on multicast classes.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_set mc_clss_ndx 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_3 0 prt_nschd_wrds_mc_clss_th_2 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_1 0 prt_nschd_wrds_mc_clss_th_0 0\r\n"
    "  fr_dsc_nschd_mc_clss_th 0 ttl_nschd_mc_clss_pkts_th 0\r\n"
    "  ttl_nschd_mc_clss_wrds_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_SET_EGQ_MC_SET_EGRESS_MC_CLASS_NDX_ID,                                                            
    "mc_clss_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_MULTICAST_CLASS_rule[0],                                            
    (sizeof(FAP21V_MULTICAST_CLASS_rule) / sizeof(FAP21V_MULTICAST_CLASS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  egress_mc_class_ndx:\r\n"
    "  One of 4 multicast egress classes classes.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_set mc_clss_ndx 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_3 0 prt_nschd_wrds_mc_clss_th_2 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_1 0 prt_nschd_wrds_mc_clss_th_0 0\r\n"
    "  fr_dsc_nschd_mc_clss_th 0 ttl_nschd_mc_clss_pkts_th 0\r\n"
    "  ttl_nschd_mc_clss_wrds_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_SET_EGQ_MC_SET_INFO_PORT_UNSCHD_WRDS_MC_CLASS_TH_3_ID,                                                            
    "prt_nschd_wrds_mc_clss_th_3",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_unschd_wrds_mc_class_th[3]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in unscheduled\r\n"
    "  queues that are configured to the corresponding port type, above which\r\n"
    "  unscheduled packets of this multicast class are rejected.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_set mc_clss_ndx 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_3 0 prt_nschd_wrds_mc_clss_th_2 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_1 0 prt_nschd_wrds_mc_clss_th_0 0\r\n"
    "  fr_dsc_nschd_mc_clss_th 0 ttl_nschd_mc_clss_pkts_th 0\r\n"
    "  ttl_nschd_mc_clss_wrds_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_SET_EGQ_MC_SET_INFO_PORT_UNSCHD_WRDS_MC_CLASS_TH_2_ID,                                                            
    "prt_nschd_wrds_mc_clss_th_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_unschd_wrds_mc_class_th[2]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in unscheduled\r\n"
    "  queues that are configured to the corresponding port type, above which\r\n"
    "  unscheduled packets of this multicast class are rejected.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_set mc_clss_ndx 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_3 0 prt_nschd_wrds_mc_clss_th_2 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_1 0 prt_nschd_wrds_mc_clss_th_0 0\r\n"
    "  fr_dsc_nschd_mc_clss_th 0 ttl_nschd_mc_clss_pkts_th 0\r\n"
    "  ttl_nschd_mc_clss_wrds_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_SET_EGQ_MC_SET_INFO_PORT_UNSCHD_WRDS_MC_CLASS_TH_1_ID,                                                            
    "prt_nschd_wrds_mc_clss_th_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_unschd_wrds_mc_class_th[1]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in unscheduled\r\n"
    "  queues that are configured to the corresponding port type, above which\r\n"
    "  unscheduled packets of this multicast class are rejected.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_set mc_clss_ndx 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_3 0 prt_nschd_wrds_mc_clss_th_2 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_1 0 prt_nschd_wrds_mc_clss_th_0 0\r\n"
    "  fr_dsc_nschd_mc_clss_th 0 ttl_nschd_mc_clss_pkts_th 0\r\n"
    "  ttl_nschd_mc_clss_wrds_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_SET_EGQ_MC_SET_INFO_PORT_UNSCHD_WRDS_MC_CLASS_TH_0_ID,                                                            
    "prt_nschd_wrds_mc_clss_th_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_unschd_wrds_mc_class_th[0]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in unscheduled\r\n"
    "  queues that are configured to the corresponding port type, above which\r\n"
    "  unscheduled packets of this multicast class are rejected.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_set mc_clss_ndx 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_3 0 prt_nschd_wrds_mc_clss_th_2 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_1 0 prt_nschd_wrds_mc_clss_th_0 0\r\n"
    "  fr_dsc_nschd_mc_clss_th 0 ttl_nschd_mc_clss_pkts_th 0\r\n"
    "  ttl_nschd_mc_clss_wrds_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_SET_EGQ_MC_SET_INFO_FREE_DESC_UNSCHD_MC_CLASS_TH_ID,                                                            
    "fr_dsc_nschd_mc_clss_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.free_desc_unschd_mc_class_th:\r\n"
    "  Threshold of the number of available descriptors below which unscheduled\r\n"
    "  multicast packets of this multicast class are rejected.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_set mc_clss_ndx 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_3 0 prt_nschd_wrds_mc_clss_th_2 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_1 0 prt_nschd_wrds_mc_clss_th_0 0\r\n"
    "  fr_dsc_nschd_mc_clss_th 0 ttl_nschd_mc_clss_pkts_th 0\r\n"
    "  ttl_nschd_mc_clss_wrds_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_SET_EGQ_MC_SET_INFO_TOTAL_UNSCHD_MC_CLASS_PKTS_TH_ID,                                                            
    "ttl_nschd_mc_clss_pkts_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_unschd_mc_class_pkts_th:\r\n"
    "  Threshold of the total number of packets in all the unscheduled queues above\r\n"
    "  which unscheduled multicast packets of this multicast class are rejected.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_set mc_clss_ndx 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_3 0 prt_nschd_wrds_mc_clss_th_2 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_1 0 prt_nschd_wrds_mc_clss_th_0 0\r\n"
    "  fr_dsc_nschd_mc_clss_th 0 ttl_nschd_mc_clss_pkts_th 0\r\n"
    "  ttl_nschd_mc_clss_wrds_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_SET_EGQ_MC_SET_INFO_TOTAL_UNSCHD_MC_CLASS_WRDS_TH_ID,                                                            
    "ttl_nschd_mc_clss_wrds_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_unschd_mc_class_wrds_th:\r\n"
    "  Threshold of the total number of 32B words in all the unscheduled queues\r\n"
    "  above which unscheduled multicast packets of this multicast class are\r\n"
    "  rejected.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_set mc_clss_ndx 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_3 0 prt_nschd_wrds_mc_clss_th_2 0\r\n"
    "  prt_nschd_wrds_mc_clss_th_1 0 prt_nschd_wrds_mc_clss_th_0 0\r\n"
    "  fr_dsc_nschd_mc_clss_th 0 ttl_nschd_mc_clss_pkts_th 0\r\n"
    "  ttl_nschd_mc_clss_wrds_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_GET_EGQ_MC_GET_ID,                                                            
    "mc_thresholds_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets EGQ multicast thresholds on multicast classes.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_get mc_clss_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MC_GET_EGQ_MC_GET_EGRESS_MC_CLASS_NDX_ID,                                                            
    "mc_clss_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_MULTICAST_CLASS_rule[0],                                            
    (sizeof(FAP21V_MULTICAST_CLASS_rule) / sizeof(FAP21V_MULTICAST_CLASS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  egress_mc_class_ndx:\r\n"
    "  One of 4 multicast egress classes classes.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mc_get mc_clss_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SCHEDULED_TRAFFIC_SET_EGQ_SCHEDULED_TRAFFIC_SET_ID,                                                            
    "scheduled_traffic_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets EGQ scheduled traffic thresholds on scheduled packets.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_scheduled_traffic_set prt_schd_wrds_th_3 0\r\n"
    "  prt_schd_wrds_th_2 0 prt_schd_wrds_th_1 0 prt_schd_wrds_th_0 0\r\n"
    "  fr_dsc_schd_th_hp 0 ttl_schd_pkts_th_hp 0 ttl_schd_wrds_th_hp 0\r\n"
    "  fr_dsc_schd_th_lp 0 ttl_schd_pkts_th_lp 0 ttl_schd_wrds_th_lp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SCHEDULED_TRAFFIC_SET_EGQ_SCHEDULED_TRAFFIC_SET_INFO_PORT_SCHD_WRDS_TH_3_ID,                                                            
    "prt_schd_wrds_th_3",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_schd_wrds_th[3]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in scheduled\r\n"
    "  queues that are configured to the corresponding port type, above which\r\n"
    "  scheduled packets are rejected\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_scheduled_traffic_set prt_schd_wrds_th_3 0\r\n"
    "  prt_schd_wrds_th_2 0 prt_schd_wrds_th_1 0 prt_schd_wrds_th_0 0\r\n"
    "  fr_dsc_schd_th_hp 0 ttl_schd_pkts_th_hp 0 ttl_schd_wrds_th_hp 0\r\n"
    "  fr_dsc_schd_th_lp 0 ttl_schd_pkts_th_lp 0 ttl_schd_wrds_th_lp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SCHEDULED_TRAFFIC_SET_EGQ_SCHEDULED_TRAFFIC_SET_INFO_PORT_SCHD_WRDS_TH_2_ID,                                                            
    "prt_schd_wrds_th_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_schd_wrds_th[2]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in scheduled\r\n"
    "  queues that are configured to the corresponding port type, above which\r\n"
    "  scheduled packets are rejected\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_scheduled_traffic_set prt_schd_wrds_th_3 0\r\n"
    "  prt_schd_wrds_th_2 0 prt_schd_wrds_th_1 0 prt_schd_wrds_th_0 0\r\n"
    "  fr_dsc_schd_th_hp 0 ttl_schd_pkts_th_hp 0 ttl_schd_wrds_th_hp 0\r\n"
    "  fr_dsc_schd_th_lp 0 ttl_schd_pkts_th_lp 0 ttl_schd_wrds_th_lp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SCHEDULED_TRAFFIC_SET_EGQ_SCHEDULED_TRAFFIC_SET_INFO_PORT_SCHD_WRDS_TH_1_ID,                                                            
    "prt_schd_wrds_th_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_schd_wrds_th[1]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in scheduled\r\n"
    "  queues that are configured to the corresponding port type, above which\r\n"
    "  scheduled packets are rejected\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_scheduled_traffic_set prt_schd_wrds_th_3 0\r\n"
    "  prt_schd_wrds_th_2 0 prt_schd_wrds_th_1 0 prt_schd_wrds_th_0 0\r\n"
    "  fr_dsc_schd_th_hp 0 ttl_schd_pkts_th_hp 0 ttl_schd_wrds_th_hp 0\r\n"
    "  fr_dsc_schd_th_lp 0 ttl_schd_pkts_th_lp 0 ttl_schd_wrds_th_lp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SCHEDULED_TRAFFIC_SET_EGQ_SCHEDULED_TRAFFIC_SET_INFO_PORT_SCHD_WRDS_TH_0_ID,                                                            
    "prt_schd_wrds_th_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_schd_wrds_th[0]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in scheduled\r\n"
    "  queues that are configured to the corresponding port type, above which\r\n"
    "  scheduled packets are rejected\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_scheduled_traffic_set prt_schd_wrds_th_3 0\r\n"
    "  prt_schd_wrds_th_2 0 prt_schd_wrds_th_1 0 prt_schd_wrds_th_0 0\r\n"
    "  fr_dsc_schd_th_hp 0 ttl_schd_pkts_th_hp 0 ttl_schd_wrds_th_hp 0\r\n"
    "  fr_dsc_schd_th_lp 0 ttl_schd_pkts_th_lp 0 ttl_schd_wrds_th_lp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SCHEDULED_TRAFFIC_SET_EGQ_SCHEDULED_TRAFFIC_SET_INFO_FREE_DESC_SCHD_TH_HP_ID,                                                            
    "fr_dsc_schd_th_hp",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.free_desc_schd_th_hp:\r\n"
    "  Threshold of the number of available descriptors below which scheduled\r\n"
    "  packets are rejected\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_scheduled_traffic_set prt_schd_wrds_th_3 0\r\n"
    "  prt_schd_wrds_th_2 0 prt_schd_wrds_th_1 0 prt_schd_wrds_th_0 0\r\n"
    "  fr_dsc_schd_th_hp 0 ttl_schd_pkts_th_hp 0 ttl_schd_wrds_th_hp 0\r\n"
    "  fr_dsc_schd_th_lp 0 ttl_schd_pkts_th_lp 0 ttl_schd_wrds_th_lp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SCHEDULED_TRAFFIC_SET_EGQ_SCHEDULED_TRAFFIC_SET_INFO_TOTAL_SCHD_PKTS_TH_HP_ID,                                                            
    "ttl_schd_pkts_th_hp",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_schd_pkts_th_hp:\r\n"
    "  Threshold of the total number of packets in all the scheduled queues above\r\n"
    "  which scheduled packets are rejected\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_scheduled_traffic_set prt_schd_wrds_th_3 0\r\n"
    "  prt_schd_wrds_th_2 0 prt_schd_wrds_th_1 0 prt_schd_wrds_th_0 0\r\n"
    "  fr_dsc_schd_th_hp 0 ttl_schd_pkts_th_hp 0 ttl_schd_wrds_th_hp 0\r\n"
    "  fr_dsc_schd_th_lp 0 ttl_schd_pkts_th_lp 0 ttl_schd_wrds_th_lp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SCHEDULED_TRAFFIC_SET_EGQ_SCHEDULED_TRAFFIC_SET_INFO_TOTAL_SCHD_WRDS_TH_HP_ID,                                                            
    "ttl_schd_wrds_th_hp",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_schd_wrds_th_hp:\r\n"
    "  Threshold of the total number of 32B words in all the scheduled queues above\r\n"
    "  which scheduled packets are rejected.Irrelevant when working in 64 ports mode.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_scheduled_traffic_set prt_schd_wrds_th_3 0\r\n"
    "  prt_schd_wrds_th_2 0 prt_schd_wrds_th_1 0 prt_schd_wrds_th_0 0\r\n"
    "  fr_dsc_schd_th_hp 0 ttl_schd_pkts_th_hp 0 ttl_schd_wrds_th_hp 0\r\n"
    "  fr_dsc_schd_th_lp 0 ttl_schd_pkts_th_lp 0 ttl_schd_wrds_th_lp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SCHEDULED_TRAFFIC_SET_EGQ_SCHEDULED_TRAFFIC_SET_INFO_FREE_DESC_SCHD_TH_LP_ID,                                                            
    "fr_dsc_schd_th_lp",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.free_desc_schd_th_lp:\r\n"
    "  Threshold of the number of available descriptors below whichscheduled packets\r\n"
    "  are rejectedIrrelevant when working in 64 ports mode. When working in 64\r\n"
    "  ports mode, sets the...\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_scheduled_traffic_set prt_schd_wrds_th_3 0\r\n"
    "  prt_schd_wrds_th_2 0 prt_schd_wrds_th_1 0 prt_schd_wrds_th_0 0\r\n"
    "  fr_dsc_schd_th_hp 0 ttl_schd_pkts_th_hp 0 ttl_schd_wrds_th_hp 0\r\n"
    "  fr_dsc_schd_th_lp 0 ttl_schd_pkts_th_lp 0 ttl_schd_wrds_th_lp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SCHEDULED_TRAFFIC_SET_EGQ_SCHEDULED_TRAFFIC_SET_INFO_TOTAL_SCHD_PKTS_TH_LP_ID,                                                            
    "ttl_schd_pkts_th_lp",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_schd_pkts_th_lp:\r\n"
    "  Threshold of the total number of packets in all the scheduled queues above\r\n"
    "  which scheduled packets are rejected\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_scheduled_traffic_set prt_schd_wrds_th_3 0\r\n"
    "  prt_schd_wrds_th_2 0 prt_schd_wrds_th_1 0 prt_schd_wrds_th_0 0\r\n"
    "  fr_dsc_schd_th_hp 0 ttl_schd_pkts_th_hp 0 ttl_schd_wrds_th_hp 0\r\n"
    "  fr_dsc_schd_th_lp 0 ttl_schd_pkts_th_lp 0 ttl_schd_wrds_th_lp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SCHEDULED_TRAFFIC_SET_EGQ_SCHEDULED_TRAFFIC_SET_INFO_TOTAL_SCHD_WRDS_TH_LP_ID,                                                            
    "ttl_schd_wrds_th_lp",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_schd_wrds_th_lp:\r\n"
    "  Threshold of the total number of 32B words in all the scheduled queues above\r\n"
    "  which scheduled packets are rejected\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_scheduled_traffic_set prt_schd_wrds_th_3 0\r\n"
    "  prt_schd_wrds_th_2 0 prt_schd_wrds_th_1 0 prt_schd_wrds_th_0 0\r\n"
    "  fr_dsc_schd_th_hp 0 ttl_schd_pkts_th_hp 0 ttl_schd_wrds_th_hp 0\r\n"
    "  fr_dsc_schd_th_lp 0 ttl_schd_pkts_th_lp 0 ttl_schd_wrds_th_lp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SCHEDULED_TRAFFIC_GET_EGQ_SCHEDULED_TRAFFIC_GET_ID,                                                            
    "scheduled_traffic_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets EGQ scheduled traffic thresholds on scheduled packets.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_scheduled_traffic_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MCI_SET_EGQ_MCI_SET_ID,                                                            
    "mci_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets EGQ MCI (multicast congestion indication) thresholds.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mci_set mci_typ_ndx 0\r\n"
    "  prt_nschd_wrds_mci_th_3 0 prt_nschd_wrds_mci_th_2 0\r\n"
    "  prt_nschd_wrds_mci_th_1 0 prt_nschd_wrds_mci_th_0 0 fr_dsc_mci_th\r\n"
    "  0 fr_buf_mci_th 0 ttl_nschd_pkts_mci_th 0 ttl_nschd_wrds_mci_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MCI_SET_EGQ_MCI_SET_MCI_TYPE_NDX_ID,                                                            
    "mci_typ_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_EGQ_MCI_TYPE_rule[0],                                            
    (sizeof(FAP21V_EGQ_MCI_TYPE_rule) / sizeof(FAP21V_EGQ_MCI_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mci_type_ndx:\r\n"
    "  One of 2 MCI's\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mci_set mci_typ_ndx 0\r\n"
    "  prt_nschd_wrds_mci_th_3 0 prt_nschd_wrds_mci_th_2 0\r\n"
    "  prt_nschd_wrds_mci_th_1 0 prt_nschd_wrds_mci_th_0 0 fr_dsc_mci_th\r\n"
    "  0 fr_buf_mci_th 0 ttl_nschd_pkts_mci_th 0 ttl_nschd_wrds_mci_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MCI_SET_EGQ_MCI_SET_INFO_PORT_UNSCHD_WRDS_MCI_TH_3_ID,                                                            
    "prt_nschd_wrds_mci_th_3",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_unschd_wrds_mci_th[3]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in unscheduled\r\n"
    "  queues that are configured to the corresponding port types, above which MCI\r\n"
    "  is asserted\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mci_set mci_typ_ndx 0\r\n"
    "  prt_nschd_wrds_mci_th_3 0 prt_nschd_wrds_mci_th_2 0\r\n"
    "  prt_nschd_wrds_mci_th_1 0 prt_nschd_wrds_mci_th_0 0 fr_dsc_mci_th\r\n"
    "  0 fr_buf_mci_th 0 ttl_nschd_pkts_mci_th 0 ttl_nschd_wrds_mci_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MCI_SET_EGQ_MCI_SET_INFO_PORT_UNSCHD_WRDS_MCI_TH_2_ID,                                                            
    "prt_nschd_wrds_mci_th_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_unschd_wrds_mci_th[2]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in unscheduled\r\n"
    "  queues that are configured to the corresponding port types, above which MCI\r\n"
    "  is asserted\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mci_set mci_typ_ndx 0\r\n"
    "  prt_nschd_wrds_mci_th_3 0 prt_nschd_wrds_mci_th_2 0\r\n"
    "  prt_nschd_wrds_mci_th_1 0 prt_nschd_wrds_mci_th_0 0 fr_dsc_mci_th\r\n"
    "  0 fr_buf_mci_th 0 ttl_nschd_pkts_mci_th 0 ttl_nschd_wrds_mci_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MCI_SET_EGQ_MCI_SET_INFO_PORT_UNSCHD_WRDS_MCI_TH_1_ID,                                                            
    "prt_nschd_wrds_mci_th_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_unschd_wrds_mci_th[1]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in unscheduled\r\n"
    "  queues that are configured to the corresponding port types, above which MCI\r\n"
    "  is asserted\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mci_set mci_typ_ndx 0\r\n"
    "  prt_nschd_wrds_mci_th_3 0 prt_nschd_wrds_mci_th_2 0\r\n"
    "  prt_nschd_wrds_mci_th_1 0 prt_nschd_wrds_mci_th_0 0 fr_dsc_mci_th\r\n"
    "  0 fr_buf_mci_th 0 ttl_nschd_pkts_mci_th 0 ttl_nschd_wrds_mci_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MCI_SET_EGQ_MCI_SET_INFO_PORT_UNSCHD_WRDS_MCI_TH_0_ID,                                                            
    "prt_nschd_wrds_mci_th_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.port_unschd_wrds_mci_th[0]:\r\n"
    "  Thresholds per port type (0-3), of the number of 32B words in unscheduled\r\n"
    "  queues that are configured to the corresponding port types, above which MCI\r\n"
    "  is asserted\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mci_set mci_typ_ndx 0\r\n"
    "  prt_nschd_wrds_mci_th_3 0 prt_nschd_wrds_mci_th_2 0\r\n"
    "  prt_nschd_wrds_mci_th_1 0 prt_nschd_wrds_mci_th_0 0 fr_dsc_mci_th\r\n"
    "  0 fr_buf_mci_th 0 ttl_nschd_pkts_mci_th 0 ttl_nschd_wrds_mci_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MCI_SET_EGQ_MCI_SET_INFO_FREE_DESC_MCI_TH_ID,                                                            
    "fr_dsc_mci_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.free_desc_mci_th:\r\n"
    "  Threshold of the total number of available descriptors below which MCI is\r\n"
    "  asserted.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mci_set mci_typ_ndx 0\r\n"
    "  prt_nschd_wrds_mci_th_3 0 prt_nschd_wrds_mci_th_2 0\r\n"
    "  prt_nschd_wrds_mci_th_1 0 prt_nschd_wrds_mci_th_0 0 fr_dsc_mci_th\r\n"
    "  0 fr_buf_mci_th 0 ttl_nschd_pkts_mci_th 0 ttl_nschd_wrds_mci_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MCI_SET_EGQ_MCI_SET_INFO_FREE_BUF_MCI_TH_ID,                                                            
    "fr_buf_mci_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.free_buf_mci_th:\r\n"
    "  Threshold of the total number of available buffers for unscheduled packets\r\n"
    "  below which MCI is asserted\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mci_set mci_typ_ndx 0\r\n"
    "  prt_nschd_wrds_mci_th_3 0 prt_nschd_wrds_mci_th_2 0\r\n"
    "  prt_nschd_wrds_mci_th_1 0 prt_nschd_wrds_mci_th_0 0 fr_dsc_mci_th\r\n"
    "  0 fr_buf_mci_th 0 ttl_nschd_pkts_mci_th 0 ttl_nschd_wrds_mci_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MCI_SET_EGQ_MCI_SET_INFO_TOTAL_UNSCHD_PKTS_MCI_TH_ID,                                                            
    "ttl_nschd_pkts_mci_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_unschd_pkts_mci_th:\r\n"
    "  Threshold of the total number of packets in all the unscheduled queues above\r\n"
    "  which MCI is asserted\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mci_set mci_typ_ndx 0\r\n"
    "  prt_nschd_wrds_mci_th_3 0 prt_nschd_wrds_mci_th_2 0\r\n"
    "  prt_nschd_wrds_mci_th_1 0 prt_nschd_wrds_mci_th_0 0 fr_dsc_mci_th\r\n"
    "  0 fr_buf_mci_th 0 ttl_nschd_pkts_mci_th 0 ttl_nschd_wrds_mci_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MCI_SET_EGQ_MCI_SET_INFO_TOTAL_UNSCHD_WRDS_MCI_TH_ID,                                                            
    "ttl_nschd_wrds_mci_th",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.total_unschd_wrds_mci_th:\r\n"
    "  Threshold of the total number of 32B words in all the unscheduled queues\r\n"
    "  above which MCI is asserted\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mci_set mci_typ_ndx 0\r\n"
    "  prt_nschd_wrds_mci_th_3 0 prt_nschd_wrds_mci_th_2 0\r\n"
    "  prt_nschd_wrds_mci_th_1 0 prt_nschd_wrds_mci_th_0 0 fr_dsc_mci_th\r\n"
    "  0 fr_buf_mci_th 0 ttl_nschd_pkts_mci_th 0 ttl_nschd_wrds_mci_th 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MCI_GET_EGQ_MCI_GET_ID,                                                            
    "mci_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets EGQ MCI (multicast congestion indication) thresholds.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mci_get mci_typ_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MCI_GET_EGQ_MCI_GET_MCI_TYPE_NDX_ID,                                                            
    "mci_typ_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_EGQ_MCI_TYPE_rule[0],                                            
    (sizeof(FAP21V_EGQ_MCI_TYPE_rule) / sizeof(FAP21V_EGQ_MCI_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mci_type_ndx:\r\n"
    "  One of 2 MCI's\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mci_get mci_typ_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_RECYCLING_QUEUE_SET_EGQ_RECYCLING_QUEUE_SET_ID,                                                            
    "recycling_queue_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets EGQ recycling port thresholds. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_recycling_queue_set thrshld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(19)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_RECYCLING_QUEUE_SET_EGQ_RECYCLING_QUEUE_SET_THRESHOLD_ID,                                                            
    "thrshld",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  threshold:\r\n"
    "  A threshold that once reached sends flow control to the scheduler\r\n"
    "  in order to stop traffic.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_recycling_queue_set thrshld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_RECYCLING_QUEUE_GET_EGQ_RECYCLING_QUEUE_GET_ID,                                                            
    "recycling_queue_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets EGQ recycling port thresholds. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_recycling_queue_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(20)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SHAPING_SET_EGQ_SHAPING_SET_ID,                                                            
    "shaping_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets EGQ shapers thresholds. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_shaping_set mulcst_cr_adjust_spi_b 0\r\n"
    "  crdt_djst_spi_b_cst_djst_sp4 0 mulcst_cr_adjust_spi_a 0\r\n"
    "  crdt_djst_spi_a_cst_djst_sp4 0 prts_max_brst 0\r\n"
    "  spi_b_shpr_max_brst 0 spi_b_shpr_rte 0 spi_a_shpr_max_brst 0\r\n"
    "  spi_a_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SHAPING_SET_EGQ_SHAPING_SET_INFO_CREDIT_ADJUST_SPI_B_MCAST_ADJUST_SPI4_ID,                                                            
    "mulcst_cr_adjust_spi_b",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.credit_adjust_spi_b.mcast_adjust_spi4:\r\n"
    "  Number of Bytes to be adjusted for every multicast packet.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_shaping_set mulcst_cr_adjust_spi_b 0\r\n"
    "  crdt_djst_spi_b_cst_djst_sp4 0 mulcst_cr_adjust_spi_a 0\r\n"
    "  crdt_djst_spi_a_cst_djst_sp4 0 prts_max_brst 0\r\n"
    "  spi_b_shpr_max_brst 0 spi_b_shpr_rte 0 spi_a_shpr_max_brst 0\r\n"
    "  spi_a_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SHAPING_SET_EGQ_SHAPING_SET_INFO_CREDIT_ADJUST_SPI_B_UCAST_ADJUST_SPI4_ID,                                                            
    "unicst_cr_adjust_spi_b",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.credit_adjust_spi_b.ucast_adjust_spi4:\r\n"
    "  Number of Bytes to be adjusted for every unicast packet.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_shaping_set mulcst_cr_adjust_spi_b 0\r\n"
    "  crdt_djst_spi_b_cst_djst_sp4 0 mulcst_cr_adjust_spi_a 0\r\n"
    "  crdt_djst_spi_a_cst_djst_sp4 0 prts_max_brst 0\r\n"
    "  spi_b_shpr_max_brst 0 spi_b_shpr_rte 0 spi_a_shpr_max_brst 0\r\n"
    "  spi_a_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SHAPING_SET_EGQ_SHAPING_SET_INFO_CREDIT_ADJUST_SPI_A_MCAST_ADJUST_SPI4_ID,                                                            
    "mulcst_cr_adjust_spi_a",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.credit_adjust_spi_a.mcast_adjust_spi4:\r\n"
    "  Number of Bytes to be adjusted for every multicast packet.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_shaping_set mulcst_cr_adjust_spi_b 0\r\n"
    "  crdt_djst_spi_b_cst_djst_sp4 0 mulcst_cr_adjust_spi_a 0\r\n"
    "  crdt_djst_spi_a_cst_djst_sp4 0 prts_max_brst 0\r\n"
    "  spi_b_shpr_max_brst 0 spi_b_shpr_rte 0 spi_a_shpr_max_brst 0\r\n"
    "  spi_a_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SHAPING_SET_EGQ_SHAPING_SET_INFO_CREDIT_ADJUST_SPI_A_UCAST_ADJUST_SPI4_ID,                                                            
    "unicst_cr_adjust_spi_a",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.credit_adjust_spi_a.ucast_adjust_spi4:\r\n"
    "  Number of Bytes to be adjusted for every unicast packet.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_shaping_set mulcst_cr_adjust_spi_b 0\r\n"
    "  crdt_djst_spi_b_cst_djst_sp4 0 mulcst_cr_adjust_spi_a 0\r\n"
    "  crdt_djst_spi_a_cst_djst_sp4 0 prts_max_brst 0\r\n"
    "  spi_b_shpr_max_brst 0 spi_b_shpr_rte 0 spi_a_shpr_max_brst 0\r\n"
    "  spi_a_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SHAPING_SET_EGQ_SHAPING_SET_INFO_PORTS_MAX_BURST_ID,                                                            
    "prts_max_brst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.ports_max_burst:\r\n"
    "  Max burst size of a single port (in bytes)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_shaping_set mulcst_cr_adjust_spi_b 0\r\n"
    "  crdt_djst_spi_b_cst_djst_sp4 0 mulcst_cr_adjust_spi_a 0\r\n"
    "  crdt_djst_spi_a_cst_djst_sp4 0 prts_max_brst 0\r\n"
    "  spi_b_shpr_max_brst 0 spi_b_shpr_rte 0 spi_a_shpr_max_brst 0\r\n"
    "  spi_a_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SHAPING_SET_EGQ_SHAPING_SET_INFO_SPI_B_SHAPER_MAX_BURST_ID,                                                            
    "spi_b_shpr_max_brst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.spi_b_shaper.max_burst:\r\n"
    "  Maximal burst size of the SPI in bytes\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_shaping_set mulcst_cr_adjust_spi_b 0\r\n"
    "  crdt_djst_spi_b_cst_djst_sp4 0 mulcst_cr_adjust_spi_a 0\r\n"
    "  crdt_djst_spi_a_cst_djst_sp4 0 prts_max_brst 0\r\n"
    "  spi_b_shpr_max_brst 0 spi_b_shpr_rte 0 spi_a_shpr_max_brst 0\r\n"
    "  spi_a_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SHAPING_SET_EGQ_SHAPING_SET_INFO_SPI_B_SHAPER_RATE_ID,                                                            
    "spi_b_shpr_rte",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.spi_b_shaper.rate:\r\n"
    "  Maximal rate in Mega-Bit-Sec (the required port rate in the NP).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_shaping_set mulcst_cr_adjust_spi_b 0\r\n"
    "  crdt_djst_spi_b_cst_djst_sp4 0 mulcst_cr_adjust_spi_a 0\r\n"
    "  crdt_djst_spi_a_cst_djst_sp4 0 prts_max_brst 0\r\n"
    "  spi_b_shpr_max_brst 0 spi_b_shpr_rte 0 spi_a_shpr_max_brst 0\r\n"
    "  spi_a_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SHAPING_SET_EGQ_SHAPING_SET_INFO_SPI_A_SHAPER_MAX_BURST_ID,                                                            
    "spi_a_shpr_max_brst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.spi_a_shaper.max_burst:\r\n"
    "  Maximal burst size of the SPI in bytes\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_shaping_set mulcst_cr_adjust_spi_b 0\r\n"
    "  crdt_djst_spi_b_cst_djst_sp4 0 mulcst_cr_adjust_spi_a 0\r\n"
    "  crdt_djst_spi_a_cst_djst_sp4 0 prts_max_brst 0\r\n"
    "  spi_b_shpr_max_brst 0 spi_b_shpr_rte 0 spi_a_shpr_max_brst 0\r\n"
    "  spi_a_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SHAPING_SET_EGQ_SHAPING_SET_INFO_SPI_A_SHAPER_RATE_ID,                                                            
    "spi_a_shpr_rte",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.spi_a_shaper.rate:\r\n"
    "  Maximal rate in Mega-Bit-Sec (the required port rate in the NP).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_shaping_set mulcst_cr_adjust_spi_b 0\r\n"
    "  crdt_djst_spi_b_cst_djst_sp4 0 mulcst_cr_adjust_spi_a 0\r\n"
    "  crdt_djst_spi_a_cst_djst_sp4 0 prts_max_brst 0\r\n"
    "  spi_b_shpr_max_brst 0 spi_b_shpr_rte 0 spi_a_shpr_max_brst 0\r\n"
    "  spi_a_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_SHAPING_GET_EGQ_SHAPING_GET_ID,                                                            
    "shaping_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets EGQ shapers thresholds. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_shaping_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(22)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MIRRORING_ENABLE_SET_EGQ_MIRRORING_ENABLE_SET_ID,                                                            
    "mirroring_enable_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Enable/disable egress mirroring on ports 0-62\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mirroring_enable_set prt_ndx 0 dstntn 0\r\n"
    "  is_flow_id_hdr 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(23)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MIRRORING_ENABLE_SET_EGQ_MIRRORING_ENABLE_SET_PORT_NDX_ID,                                                            
    "prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  The local port to be configured. (63 doesn't need mirroring.\r\n"
    "  Should return error if is tried to be configured)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mirroring_enable_set prt_ndx 0 dstntn 0\r\n"
    "  is_flow_id_hdr 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(23)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MIRRORING_ENABLE_SET_EGQ_MIRRORING_ENABLE_SET_INFO_DESTINATION_ID,                                                            
    "dstntn",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.destination:\r\n"
    "  Might be destination_id or flow_id according to is_flow_id_header\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mirroring_enable_set prt_ndx 0 dstntn 0\r\n"
    "  is_flow_id_hdr 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MIRRORING_ENABLE_SET_EGQ_MIRRORING_ENABLE_SET_INFO_IS_FLOW_ID_HEADER_ID,                                                            
    "is_flw_id_hdr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.is_flow_id_header:\r\n"
    "  When TRUE, the above is 15bits flow_id, otherwise, 13bit destination_id. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mirroring_enable_set prt_ndx 0 dstntn 0\r\n"
    "  is_flow_id_hdr 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MIRRORING_ENABLE_SET_EGQ_MIRRORING_ENABLE_SET_INFO_ENABLE_ID,                                                            
    "enable",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.enable:\r\n"
    "  Enable/disable. The rest of the structure is only valid when TRUE.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mirroring_enable_set prt_ndx 0 dstntn 0\r\n"
    "  is_flow_id_hdr 0 nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MIRRORING_ENABLE_GET_EGQ_MIRRORING_ENABLE_GET_ID,                                                            
    "mirroring_enable_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Enable/disable egress mirroring on ports 0-62\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mirroring_enable_get prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(24)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_MIRRORING_ENABLE_GET_EGQ_MIRRORING_ENABLE_GET_PORT_NDX_ID,                                                            
    "prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  The local port to be configured. (63 doesn't need mirroring.\r\n"
    "  Should return error if is tried to be configured)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_queues egq_mirroring_enable_get prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_LOCAL_PORT_TO_SYSTEM_PORT_SET_EGQ_LOCAL_PORT_TO_SYSTEM_PORT_SET_ID,                                                            
    "local_port_to_system_port_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Map a local port to a system port (configures System-FAP-Port\r\n"
    "  lookup Table). This is used to determine if a packet has arrived\r\n"
    "  from a LAG-port ,and used at the egress for LAGs multicast pruning.\r\n"
    "  Note that this system port is different from the physical system\r\n"
    "  physical port.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports egq_local_port_to_system_port_set lcl_prt_ndx 0\r\n"
    "  systm_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_LOCAL_PORT_TO_SYSTEM_PORT_SET_EGQ_LOCAL_PORT_TO_SYSTEM_PORT_SET_LOCAL_PORT_NDX_ID,                                                            
    "lcl_prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  Local port id. Range: 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports egq_local_port_to_system_port_set lcl_prt_ndx 0\r\n"
    "  systm_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_LOCAL_PORT_TO_SYSTEM_PORT_SET_EGQ_LOCAL_PORT_TO_SYSTEM_PORT_SET_SYSTEM_PORT_ID,                                                            
    "systm_prt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  system_port:\r\n"
    "  The system port is a 13 bit field, as following:\r\n"
    "  system_port[12] = 1 iff the local port is a member of a lag.\r\n"
    "  if (is_lag)\r\n"
    "  system_port[11:8] = port index in the LAG. Can be passed with\r\n"
    "  headers till egerss, for use of PP.\r\n"
    "  system_port[7:0] = LAG ID\r\n"
    "  else\r\n"
    "  system_port[11:0] = system physical port\r\n"
    "  endif\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports egq_local_port_to_system_port_set lcl_prt_ndx 0\r\n"
    "  systm_prt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_LOCAL_PORT_TO_SYSTEM_PORT_GET_EGQ_LOCAL_PORT_TO_SYSTEM_PORT_GET_ID,                                                            
    "local_port_to_system_port_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Map a local port to a system port (configures System-FAP-Port\r\n"
    "  lookup Table). This is used to determine if a packet has arrived\r\n"
    "  from a LAG-port ,and used at the egress for LAGs multicast pruning.\r\n"
    "  Note that this system port is different from the physical system\r\n"
    "  physical port.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports egq_local_port_to_system_port_get lcl_prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(6)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EGQ_LOCAL_PORT_TO_SYSTEM_PORT_GET_EGQ_LOCAL_PORT_TO_SYSTEM_PORT_GET_LOCAL_PORT_NDX_ID,                                                            
    "lcl_prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  Local port id. Range: 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports egq_local_port_to_system_port_get lcl_prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_EGRESS_QUEUES_ID,                                                            
    "egress_queues",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24), 0, 0, 0, 0, BIT(5)|BIT(6)},
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } egress_queues*/
#ifdef UI_EGRESS_PORTS/* { egress_ports*/
  {                                                                                        
    PARAM_FAP21V_EG_PORTS_PORTS_QOS_SET_EG_PORTS_PORTS_QOS_SET_ID,                                                            
    "ports_qos_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Writes calendar to device. The function calculates from\r\n"
    "  the given table the calendar granularity, writes it to the device\r\n"
    "  and changes the active calendar. It also saves the values in sw db\r\n"
    "  for changes in single entries in the future.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports eg_ports_ports_qos_set  0\r\n"
    "  credit_and_max_rate_map 10000000 22222222 \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(25)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EG_PORTS_PORTS_QOS_SET_EG_PORTS_PORTS_QOS_SET_SPI_RATES_TBL_RATES_0_SPI_CREDIT_RATE_ID,                                                            
    "credit_and_max_rate_map",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_tbl_rates_vals[0],                                            
    (sizeof(fap21v_api_tbl_rates_vals) / sizeof(fap21v_api_tbl_rates_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_rates_tbl.rates[0].credit_rate:\r\n"
    "  Spi credit rate\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports eg_ports_ports_qos_set  0\r\n"
    "  credit_and_max_rate_map 10000000 22222222 \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_EG_PORTS_PORTS_QOS_GET_EG_PORTS_PORTS_QOS_GET_ID,                                                            
    "ports_qos_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Writes calendar to device. The function calculates from\r\n"
    "  the given table the calendar granularity, writes it to the device\r\n"
    "  and changes the active calendar. It also saves the values in sw db\r\n"
    "  for changes in single entries in the future.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports eg_ports_ports_qos_get spi_ntrfc_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(26)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EG_PORTS_SINGLE_PORT_QOS_SET_EG_PORTS_SINGLE_PORT_QOS_SET_ID,                                                            
    "single_port_qos_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Writes single calendar entry to device. The function calculates\r\n"
    "  from the stored table and the new values the calendar granularity,\r\n"
    "  writes it to the device and changes the active calendar. It also\r\n"
    "  saves the values in sw db for changes in single entries in the future\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports eg_ports_single_port_qos_set spi_ntrfc_ndx 0 prt_ndx\r\n"
    "  0 spi_rte_spi_crdt_rte 0 spi_rte_spi_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(27)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EG_PORTS_SINGLE_PORT_QOS_SET_EG_PORTS_SINGLE_PORT_QOS_SET_PORT_NDX_ID,                                                            
    "port_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_interface_ndx:\r\n"
    "  Spi channel. A or B\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports eg_ports_single_port_qos_set spi_ntrfc_ndx 0 prt_ndx\r\n"
    "  0 spi_rte_spi_crdt_rte 0 spi_rte_spi_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(27)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EG_PORTS_SINGLE_PORT_QOS_SET_EG_PORTS_SINGLE_PORT_QOS_SET_SPI_RATE_SPI_CREDIT_RATE_ID,                                                            
    "cr_rate",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_rate.credit_rate:\r\n"
    "  Spi credit rate\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports eg_ports_single_port_qos_set spi_ntrfc_ndx 0 prt_ndx\r\n"
    "  0 spi_rte_spi_crdt_rte 0 spi_rte_spi_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(27)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EG_PORTS_SINGLE_PORT_QOS_SET_EG_PORTS_SINGLE_PORT_QOS_SET_SPI_RATE_SPI_SHAPER_RATE_ID,                                                            
    "max_rate",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  spi_rate.maximum_rate:\r\n"
    "  Spi shaper rate\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports eg_ports_single_port_qos_set spi_ntrfc_ndx 0 prt_ndx\r\n"
    "  0 spi_rte_spi_crdt_rte 0 spi_rte_spi_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(27)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EG_PORTS_SINGLE_PORT_QOS_GET_EG_PORTS_SINGLE_PORT_QOS_GET_ID,                                                            
    "single_port_qos_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Writes single calendar entry to device. The function calculates\r\n"
    "  from the stored table and the new values the calendar granularity,\r\n"
    "  writes it to the device and changes the active calendar. It also\r\n"
    "  saves the values in sw db for changes in single entries in the future\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports eg_ports_single_port_qos_get spi_ntrfc_ndx 0 prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(28)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_EG_PORTS_SINGLE_PORT_QOS_GET_EG_PORTS_SINGLE_PORT_QOS_GET_PORT_NDX_ID,                                                            
    "prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  Local port index. Range: 0 - 63.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api egress_ports eg_ports_single_port_qos_get spi_ntrfc_ndx 0 prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(28)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_EGRESS_PORTS_ID,                                                            
    "egress_ports",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } egress_ports*/
#ifdef UI_END2END_SCHEDULER/* { end2end_scheduler*/
  {                                                                                        
    PARAM_FAP21V_SCH_PRINT_FLOW_UP_ID,                                                            
    "print_flow_up",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PRINT_FLOW_ID,                                                            
    "flow_id",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_FLOW_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_FLOW_ID_rule) / sizeof(FAP21V_SCH_FLOW_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_UP_STAT_ID,                                                            
    "print_stat",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_SCHED_SET_SCH_DEVICE_SCHED_SET_ID,                                                            
    "print_stat",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Device Scheduler configuration as a whole. This includes\r\n"
    "  the Device Rate Table, and the Device Interfaces Scheduler. The\r\n"
    "  Device Scheduler is normally configured once during the system\r\n"
    "  initialization process, and it is static by nature.\r\n"
    "  The driver writes to the following tables:  Device Rate Memory (DRM) \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_sched_set\r\n"
    "  interface 0\r\n"
    "  if_rate 0\r\n"
    "  if_weight 0 fcg_rate 0\r\n"
    "  fcg_nof_active_links 0 fcg_nof_rci_lvls 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(4)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_SCHED_SET_SCH_DEVICE_SCHED_SET_DEV_SCHEDULER_DEV_IF_SCHEDULER_IF_VALS_0_SCH_IF_ID,                                                            
    "interface",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_INTERFACE_rule[0],                                            
    (sizeof(FAP21V_SCH_INTERFACE_rule) / sizeof(FAP21V_SCH_INTERFACE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dev_scheduler.dev_if_scheduler.if_vals[0].sch_if:\r\n"
    "  The scheduler interface this is index to\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_sched_set\r\n"
    "  nof_entries 1 interface\r\n"
    "  0 if_rate 0\r\n"
    "  if_weight 0 fcg_rate 0\r\n"
    "  fcg_nof_active_links 0 fcg_nof_rci_lvls 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_SCHED_SET_SCH_DEVICE_SCHED_SET_DEV_SCHEDULER_DEV_IF_SCHEDULER_IF_VALS_0_RATE_ID,                                                            
    "if_rate",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dev_scheduler.dev_if_scheduler.if_vals[0].rate:\r\n"
    "  Maximum credit rate in Mega-Bit-Sec\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_sched_set\r\n"
    "  nof_entries 1 interface\r\n"
    "  0 if_rate 0\r\n"
    "  if_weight 0 fcg_rate 0\r\n"
    "  fcg_nof_active_links 0 fcg_nof_rci_lvls 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_SCHED_SET_SCH_DEVICE_SCHED_SET_DEV_SCHEDULER_DEV_IF_SCHEDULER_IF_VALS_0_WEIGHT_ID,                                                            
    "if_weight",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dev_scheduler.dev_if_scheduler.if_vals[0].weight:\r\n"
    "  The interface weight for NIF-i (SPI A / SPI B), and RCY\r\n"
    "  (CPU interface is SP).The interface portion of the bandwidthRange: 1 - 1023\r\n"
    "  (0 means desabled and is invalid for an active interface)distributed by the\r\n"
    "  WFQ will be: (1/my_weight) / (SUM: 1/i_weight), when i is running on all\r\n"
    "  interfaces.A Zero value stands for a non-active interface.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_sched_set\r\n"
    "  nof_entries 1 interface\r\n"
    "  0 if_rate 0\r\n"
    "  if_weight 0 fcg_rate 0\r\n"
    "  fcg_nof_active_links 0 fcg_nof_rci_lvls 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_SCHED_SET_SCH_DEVICE_SCHED_SET_DEV_SCHEDULER_FCG_RATES_0_RATE_ID,                                                            
    "fcg_rate",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dev_scheduler.fcg.rates[0].rate:\r\n"
    "  The credit generation rate, in Mega-Bit-Sec.if 0 - no credits will be\r\n"
    "  generated.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_sched_set\r\n"
    "  nof_entries 1 interface\r\n"
    "  0 if_rate 0\r\n"
    "  if_weight 0 fcg_rate 0\r\n"
    "  fcg_nof_active_links 0 fcg_nof_rci_lvls 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_SCHED_SET_SCH_DEVICE_SCHED_SET_DEV_SCHEDULER_FCG_RATES_0_NUM_ACTIVE_LINKS_ID,                                                            
    "fcg_nof_active_links",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dev_scheduler.fcg.rates[0].num_active_links:\r\n"
    "  number of current active links range: 0 - 24\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_sched_set\r\n"
    "  nof_entries 1 interface\r\n"
    "  0 if_rate 0\r\n"
    "  if_weight 0 fcg_rate 0\r\n"
    "  fcg_nof_active_links 0 fcg_nof_rci_lvls 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_SCHED_SET_SCH_DEVICE_SCHED_SET_DEV_SCHEDULER_FCG_RATES_0_RCI_LEVEL_ID,                                                            
    "fcg_nof_rci_lvls",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dev_scheduler.fcg.rates[0].rci_level:\r\n"
    "  RCI bucket level.range: 0 - 7\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_sched_set\r\n"
    "  nof_entries 1 interface\r\n"
    "  0 if_rate 0\r\n"
    "  if_weight 0 fcg_rate 0\r\n"
    "  fcg_nof_active_links 0 fcg_nof_rci_lvls 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_SCHED_GET_SCH_DEVICE_SCHED_GET_ID,                                                            
    "device_sched_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Device Scheduler configuration as a whole. This includes\r\n"
    "  the Device Rate Table, and the Device Interfaces Scheduler. The\r\n"
    "  Device Scheduler is normally configured once during the system\r\n"
    "  initialization process, and it is static by nature.\r\n"
    "  The driver writes to the following tables:  Device Rate Memory (DRM) \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_sched_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(5)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_RATE_ENTRY_SET_SCH_DEVICE_RATE_ENTRY_SET_ID,                                                            
    "device_rate_entry_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This function sets an entry in the device rate table. Each entry\r\n"
    "  sets a credit generation rate, for a given pair of fabric\r\n"
    "  congestion (presented by rci_level) and the number of active fabric\r\n"
    "  links.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Device Rate Memory (DRM)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_rate_entry_set rate 0\r\n"
    "  nof_active_links 0 rci_level 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(6)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_RATE_ENTRY_SET_SCH_DEVICE_RATE_ENTRY_SET_DEV_RATE_RATE_ID,                                                            
    "rate",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dev_rate.rate:\r\n"
    "  The credit generation rate, in Mega-Bit-Sec.if 0 - no credits will be\r\n"
    "  generated.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_rate_entry_set rate 0\r\n"
    "  nof_active_links 0 rci_level 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_RATE_ENTRY_SET_SCH_DEVICE_RATE_ENTRY_SET_DEV_RATE_NUM_ACTIVE_LINKS_ID,                                                            
    "nof_active_links",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dev_rate.num_active_links:\r\n"
    "  number of current active links range: 0 - 24\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_rate_entry_set rate 0\r\n"
    "  nof_active_links 0 rci_level 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_RATE_ENTRY_SET_SCH_DEVICE_RATE_ENTRY_SET_DEV_RATE_RCI_LEVEL_ID,                                                            
    "rci_level",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dev_rate.rci_level:\r\n"
    "  RCI bucket level.range: 0 - 7\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_rate_entry_set rate 0\r\n"
    "  nof_active_links 0 rci_level 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_RATE_ENTRY_GET_SCH_DEVICE_RATE_ENTRY_GET_ID,                                                            
    "device_rate_entry_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This function sets an entry in the device rate table. Each entry\r\n"
    "  sets a credit generation rate, for a given pair of fabric\r\n"
    "  congestion (presented by rci_level) and the number of active fabric\r\n"
    "  links.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Device Rate Memory (DRM)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_rate_entry_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(7)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_IF_SCHED_SET_SCH_DEVICE_IF_SCHED_SET_ID,                                                            
    "device_if_sched_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This function sets the device interfaces scheduler.\r\n"
    "  For each interface (NIF-Ports, recycling & CPU) it\r\n"
    "  sets a maximum credit rate, and a weight for the\r\n"
    "  interfaces WFQ. The CPU interface does not have a weight,\r\n"
    "  as it has a strict priority over all others interfaces.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_if_sched_set 0\r\n"
    "  interface_type 0 rate 0\r\n"
    "  weight 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(8)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_IF_SCHED_SET_SCH_DEVICE_IF_SCHED_SET_DEV_IF_SCH_IF_VALS_0_SCH_IF_ID,                                                            
    "interface_type",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_INTERFACE_rule[0],                                            
    (sizeof(FAP21V_SCH_INTERFACE_rule) / sizeof(FAP21V_SCH_INTERFACE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dev_if_sch.if_vals[0].sch_if:\r\n"
    "  The scheduler interface this is index to\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_if_sched_set  0\r\n"
    "  interface_type 0 rate 0\r\n"
    "  weight 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_IF_SCHED_SET_SCH_DEVICE_IF_SCHED_SET_DEV_IF_SCH_IF_VALS_0_RATE_ID,                                                            
    "rate_mbps",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dev_if_sch.if_vals[0].rate:\r\n"
    "  Maximum credit rate in Mega-Bit-Sec\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_if_sched_set  0\r\n"
    "  interface_type 0 rate 0\r\n"
    "  weight 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_IF_SCHED_SET_SCH_DEVICE_IF_SCHED_SET_DEV_IF_SCH_IF_VALS_0_WEIGHT_ID,                                                            
    "weight",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dev_if_sch.if_vals[0].weight:\r\n"
    "  The interface weight for NIF-i (SPI A / SPI B), and RCY\r\n"
    "  (CPU interface is SP).The interface portion of the bandwidthRange: 1 - 1023\r\n"
    "  (0 means desabled and is invalid for an active interface)distributed by the\r\n"
    "  WFQ will be: (1/my_weight) / (SUM: 1/i_weight), when i is running on all\r\n"
    "  interfaces.A Zero value stands for a non-active interface.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_if_sched_set  0\r\n"
    "  interface_type 0 rate 0\r\n"
    "  weight 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_DEVICE_IF_SCHED_GET_SCH_DEVICE_IF_SCHED_GET_ID,                                                            
    "device_if_sched_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This function sets the device interfaces scheduler.\r\n"
    "  For each interface (NIF-Ports, recycling & CPU) it\r\n"
    "  sets a maximum credit rate, and a weight for the\r\n"
    "  interfaces WFQ. The CPU interface does not have a weight,\r\n"
    "  as it has a strict priority over all others interfaces.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler device_if_sched_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(9)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_ID,                                                            
    "class_type_params_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  :\r\n"
    "  Sets a single class type in the table. The driver writes\r\n"
    "  to the following tables: CL-Schedulers Type (SCT)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(10)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CL_TYPE_NDX_ID,                                                            
    "cl_typ_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SE_CL_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_SE_CL_ID_rule) / sizeof(FAP21V_SCH_SE_CL_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cl_type_ndx:\r\n"
    "  The index of the class type to configure (0-255).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(10)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_ENHANCED_MODE_ID,                                                            
    "enhanced_mode_enable",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_CL_ENHANCED_MODE_rule[0],                                            
    (sizeof(FAP21V_SCH_CL_ENHANCED_MODE_rule) / sizeof(FAP21V_SCH_CL_ENHANCED_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  class_type.enhanced_mode:\r\n"
    "  One of three CL enhanced modes: disabled/enabled high priority/enabled low\r\n"
    "  priority\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_WEIGHT_MODE_ID,                                                            
    "weight_mode",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_CL_CLASS_WEIGHTS_MODE_rule[0],                                            
    (sizeof(FAP21V_SCH_CL_CLASS_WEIGHTS_MODE_rule) / sizeof(FAP21V_SCH_CL_CLASS_WEIGHTS_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  class_type.weight_mode:\r\n"
    "  independent, discrete per-flow, discrete per-class\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_WEIGHT_0_ID,                                                            
    "cl_weight_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  class_type.weight[0]:\r\n"
    "  The discrete weights per flow or per class when they compete for credits on a\r\n"
    "  WFQ scheduler.TBD add tables of modes and weightsrange: 1 - 1024\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_WEIGHT_1_ID,                                                            
    "cl_weight_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  class_type.weight[1]:\r\n"
    "  The discrete weights per flow or per class when they compete for credits on a\r\n"
    "  WFQ scheduler.TBD add tables of modes and weightsrange: 1 - 1024\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_1 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_MODE_ID,                                                            
    "cl_mode",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_CL_CLASS_MODE_rule[0],                                            
    (sizeof(FAP21V_SCH_CL_CLASS_MODE_rule) / sizeof(FAP21V_SCH_CL_CLASS_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  class_type.mode:\r\n"
    "  Class mode.range: 1 - 5\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_GET_SCH_CLASS_TYPE_PARAMS_GET_ID,                                                            
    "class_type_params_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  :\r\n"
    "  Sets a single class type in the table. The driver writes\r\n"
    "  to the following tables: CL-Schedulers Type (SCT)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_get cl_typ_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(11)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_GET_SCH_CLASS_TYPE_PARAMS_GET_CL_TYPE_NDX_ID,                                                            
    "cl_typ_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SE_CL_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_SE_CL_ID_rule) / sizeof(FAP21V_SCH_SE_CL_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cl_type_ndx:\r\n"
    "  The index of the class type to configure (0-255).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_get cl_typ_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_DELETE_ID,                                                            
    "flow_delete",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(12)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_DELETE_FLOW_ID,                                                            
    "flow_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_TABLE_GET_SCH_CLASS_TYPE_PARAMS_TABLE_GET_ID,                                                            
    "class_type_params_table_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the scheduler class type table as a whole. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_table_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(13)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_SLOW_MAX_RATES_SET_SCH_SLOW_MAX_RATES_SET_ID,                                                            
    "slow_max_rates_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This function sets the slow rates.\r\n"
    "  A flow might be in slow state, and in that case lower\r\n"
    "  rate is needed.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler slow_max_rates_set rate_0 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(14)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_SLOW_MAX_RATES_SET_SCH_SLOW_MAX_RATES_SET_SLOW_MAX_RATES_RATES_0_ID,                                                            
    "rate_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  slow_max_rates.rates[0]:\r\n"
    "  Maximal rate for a flow with slow enabled, when in slow state.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler slow_max_rates_set rate_0 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_SLOW_MAX_RATES_SET_SCH_SLOW_MAX_RATES_SET_SLOW_MAX_RATES_RATES_1_ID,                                                            
    "rate_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  slow_max_rates.rates[1]:\r\n"
    "  Maximal rate for a flow with slow enabled, when in slow state.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler slow_max_rates_set rate_1 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_SLOW_MAX_RATES_GET_SCH_SLOW_MAX_RATES_GET_ID,                                                            
    "slow_max_rates_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This function sets the slow rates.\r\n"
    "  A flow might be in slow state, and in that case lower\r\n"
    "  rate is needed.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler slow_max_rates_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(15)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_SCHED_SET_SCH_PORT_SCHED_SET_ID,                                                            
    "port_sched_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  :\r\n"
    "  Sets the scheduler-port state (enable/disable), its\r\n"
    "  HR mode of operation (single or dual) and low flow control\r\n"
    "  ignore policy.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Scheduler Enable Memory (SEM),\r\n"
    "  HR-Scheduler-Configuration (SHC),\r\n"
    "  Flow Group Memory (FGM)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_sched_set prt_ndx 0\r\n"
    "  lowest_hp_class 0 hr_mode 0 max_expected_rate 0 is_enabled 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(16)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_SCHED_SET_SCH_PORT_SCHED_SET_PORT_NDX_ID,                                                            
    "prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_PORT_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_PORT_ID_rule) / sizeof(FAP21V_SCH_PORT_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  Port index (0-63). \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_sched_set prt_ndx 0\r\n"
    "  lowest_hp_class 0 hr_mode 0 max_expected_rate 0 is_enabled 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(16)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_SCHED_SET_SCH_PORT_SCHED_SET_PORT_INFO_LOWEST_HP_CLASS_ID,                                                            
    "lowest_hp_class",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0],                                            
    (sizeof(FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule) / sizeof(FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.lowest_hp_class:\r\n"
    "  The classes with priority specified by lowest_hp_class and above\r\n"
    "  will not be effected by low priority flow control.\r\n"
    "  Those classes will only be effected by\r\n"
    "  high priority flow control.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_sched_set prt_ndx 0\r\n"
    "  lowest_hp_class 0 hr_mode 0 max_expected_rate 0 is_enabled 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_SCHED_SET_SCH_PORT_SCHED_SET_PORT_INFO_HR_MODE_ID,                                                            
    "hr_mode",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SE_HR_MODE_rule[0],                                            
    (sizeof(FAP21V_SCH_SE_HR_MODE_rule) / sizeof(FAP21V_SCH_SE_HR_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.hr_mode:\r\n"
    "  The mode of the HR scheduling element used by the scheduler port\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_sched_set prt_ndx 0\r\n"
    "  lowest_hp_class 0 hr_mode 0 max_expected_rate 0 is_enabled 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_SCHED_SET_SCH_PORT_SCHED_SET_PORT_INFO_MAX_EXPECTED_RATE_ID,                                                            
    "max_expected_rate",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_PORT_MAX_RATE_rule[0],                                            
    (sizeof(FAP21V_SCH_PORT_MAX_RATE_rule) / sizeof(FAP21V_SCH_PORT_MAX_RATE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.max_expected_rate:\r\n"
    "  Maximal expected port rate.Units: Mega-Bit-Sec.When opening a scheduler port,\r\n"
    "  this value is used to define port group.It should reflect the maximal rate\r\n"
    "  the port is expected to have,as opposed to current port rate.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_sched_set prt_ndx 0\r\n"
    "  lowest_hp_class 0 hr_mode 0 max_expected_rate 0 is_enabled 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_SCHED_SET_SCH_PORT_SCHED_SET_PORT_INFO_ENABLE_ID,                                                            
    "is_enabled",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.enable:\r\n"
    "  enable == TRUE means port open/update.enable == FALSE means port close.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_sched_set prt_ndx 0\r\n"
    "  lowest_hp_class 0 hr_mode 0 max_expected_rate 0 is_enabled 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_SCHED_GET_SCH_PORT_SCHED_GET_ID,                                                            
    "port_sched_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  :\r\n"
    "  Sets the scheduler-port state (enable/disable), its\r\n"
    "  HR mode of operation (single or dual) and low flow control\r\n"
    "  ignore policy.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Scheduler Enable Memory (SEM),\r\n"
    "  HR-Scheduler-Configuration (SHC),\r\n"
    "  Flow Group Memory (FGM)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_sched_get prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(17)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_SCHED_GET_SCH_PORT_SCHED_GET_PORT_NDX_ID,                                                            
    "prt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  Port index (0-63). \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_sched_get prt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_HP_CLASS_CONF_SET_SCH_PORT_HP_CLASS_CONF_SET_ID,                                                            
    "port_hp_class_conf_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the group of available configurations for high priority\r\n"
    "  hr class settings.\r\n"
    "  Out of 5 possible configurations, 4 are available at any time.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_hp_class_conf_set\r\n"
    "  lowest_hp_clss_0 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(18)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_HP_CLASS_CONF_SET_SCH_PORT_HP_CLASS_CONF_SET_HP_CLASS_INFO_LOWEST_HP_CLASS_0_ID,                                                            
    "lowest_hp_clss_0",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0],                                            
    (sizeof(FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule) / sizeof(FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hp_class_info.lowest_hp_class[0]:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_hp_class_conf_set\r\n"
    "  lowest_hp_clss_0 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_HP_CLASS_CONF_SET_SCH_PORT_HP_CLASS_CONF_SET_HP_CLASS_INFO_LOWEST_HP_CLASS_1_ID,                                                            
    "lowest_hp_clss_1",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0],                                            
    (sizeof(FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule) / sizeof(FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hp_class_info.lowest_hp_class[1]:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_hp_class_conf_set\r\n"
    "  lowest_hp_clss_1 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_HP_CLASS_CONF_SET_SCH_PORT_HP_CLASS_CONF_SET_HP_CLASS_INFO_LOWEST_HP_CLASS_2_ID,                                                            
    "lowest_hp_clss_2",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0],                                            
    (sizeof(FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule) / sizeof(FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hp_class_info.lowest_hp_class[2]:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_hp_class_conf_set\r\n"
    "  lowest_hp_clss_2 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_HP_CLASS_CONF_SET_SCH_PORT_HP_CLASS_CONF_SET_HP_CLASS_INFO_LOWEST_HP_CLASS_3_ID,                                                            
    "lowest_hp_clss_3",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0],                                            
    (sizeof(FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule) / sizeof(FAP21V_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  hp_class_info.lowest_hp_class[3]:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_hp_class_conf_set\r\n"
    "  lowest_hp_clss_3 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_PORT_HP_CLASS_CONF_GET_SCH_PORT_HP_CLASS_CONF_GET_ID,                                                            
    "port_hp_class_conf_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the group of available configurations for high priority\r\n"
    "  hr class settings.\r\n"
    "  Out of 5 possible configurations, 4 are available at any time.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler port_hp_class_conf_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(19)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_ID,                                                            
    "class_type_params_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets a single class type in the table.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  CL-Schedulers Type (SCT)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(20)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CL_TYPE_NDX_ID,                                                            
    "cl_typ_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SE_CL_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_SE_CL_ID_rule) / sizeof(FAP21V_SCH_SE_CL_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cl_type_ndx:\r\n"
    "  The index of the class type to configure (0-255).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(20)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_ENHANCED_MODE_ID,                                                            
    "enhanced_enable",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_CL_ENHANCED_MODE_rule[0],                                            
    (sizeof(FAP21V_SCH_CL_ENHANCED_MODE_rule) / sizeof(FAP21V_SCH_CL_ENHANCED_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  class_type.enhanced_mode:\r\n"
    "  One of three CL enhanced modes: disabled/enabled high priority/enabled low\r\n"
    "  priority\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_WEIGHT_MODE_ID,                                                            
    "weight_mode",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_CL_CLASS_WEIGHTS_MODE_rule[0],                                            
    (sizeof(FAP21V_SCH_CL_CLASS_WEIGHTS_MODE_rule) / sizeof(FAP21V_SCH_CL_CLASS_WEIGHTS_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  class_type.weight_mode:\r\n"
    "  independent, discrete per-flow, discrete per-class\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_WEIGHT_0_ID,                                                            
    "cl_weight_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  class_type.weight[0]:\r\n"
    "  The discrete weights per flow or per class when they compete for credits on a\r\n"
    "  WFQ scheduler.TBD add tables of modes and weightsrange: 1 - 1024\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_WEIGHT_1_ID,                                                            
    "cl_weight_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  class_type.weight[1]:\r\n"
    "  The discrete weights per flow or per class when they compete for credits on a\r\n"
    "  WFQ scheduler.TBD add tables of modes and weightsrange: 1 - 1024\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_WEIGHT_2_ID,                                                            
    "cl_weight_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  class_type.weight[2]:\r\n"
    "  The discrete weights per flow or per class when they compete for credits on a\r\n"
    "  WFQ scheduler.TBD add tables of modes and weightsrange: 1 - 1024\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_WEIGHT_3_ID,                                                            
    "cl_weight_3",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  class_type.weight[3]:\r\n"
    "  The discrete weights per flow or per class when they compete for credits on a\r\n"
    "  WFQ scheduler.TBD add tables of modes and weightsrange: 1 - 1024\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_MODE_ID,                                                            
    "cl_mode",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_CL_CLASS_MODE_rule[0],                                            
    (sizeof(FAP21V_SCH_CL_CLASS_MODE_rule) / sizeof(FAP21V_SCH_CL_CLASS_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  class_type.mode:\r\n"
    "  Class mode.range: 1 - 5\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_set cl_typ_ndx 0\r\n"
    "  enhanced_enable 0 weight_mode 0 cl_weight_0 0 cl_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_GET_SCH_CLASS_TYPE_PARAMS_GET_ID,                                                            
    "class_type_params_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets a single class type in the table.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  CL-Schedulers Type (SCT)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_get cl_typ_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(21)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_CLASS_TYPE_PARAMS_GET_SCH_CLASS_TYPE_PARAMS_GET_CL_TYPE_NDX_ID,                                                            
    "cl_typ_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SE_CL_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_SE_CL_ID_rule) / sizeof(FAP21V_SCH_SE_CL_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cl_type_ndx:\r\n"
    "  The index of the class type to configure (0-255).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler class_type_params_get cl_typ_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_ID,                                                            
    "aggr_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets an aggregate scheduler.\r\n"
    "  It configures an elementary scheduler, and defines\r\n"
    "  a credit flow to this scheduler from a 'father' scheduler.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Scheduler Enable Memory (SEM),\r\n"
    "  HR-Scheduler-Configuration (SHC),\r\n"
    "  CL-Schedulers Configuration (SCC),\r\n"
    "  Flow Group Memory (FGM)\r\n"
    "  Shaper Descriptor Memory (SHD)\r\n"
    "  Flow Sub-Flow (FSF)\r\n"
    "  Flow Descriptor Memory (FDM)\r\n"
    "  Shaper Descriptor Memory Static(SHDS)\r\n"
    "  Flow Descriptor Memory Static (FDMS)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_SE_NDX_ID,                                                            
    "se_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SE_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_SE_ID_rule) / sizeof(FAP21V_SCH_SE_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  se_ndx:\r\n"
    "  Scheduler element index.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_SET_SUBFLOW_ID,                                                            
    "subflow_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SUBFLOW_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_SUBFLOW_ID_rule) / sizeof(FAP21V_SCH_SUBFLOW_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  subflow_ndx:\r\n"
    "  Which one (if any) of the two subflows to modify.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_SE_GROUP_ID,                                                            
    "se_grp",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_GROUP_rule[0],                                            
    (sizeof(FAP21V_SCH_GROUP_rule) / sizeof(FAP21V_SCH_GROUP_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  se.group:\r\n"
    "  scheduler flow group (A-C/Auto/None).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_SE_IS_DUAL_ID,                                                            
    "se_is_dual",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_TRUE_OR_FALSE_rule[0],                                            
    (sizeof(FAP21V_TRUE_OR_FALSE_rule) / sizeof(FAP21V_TRUE_OR_FALSE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  se.is_dual:\r\n"
    "  TRUE/FALSE indication. Dual configuration effects two consecutive SE-s, and\r\n"
    "  is only relevant when both are enabled. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_SE_TYPE_INFO_CL_ID_ID,                                                            
    "cl_id",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SE_CL_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_SE_CL_ID_rule) / sizeof(FAP21V_SCH_SE_CL_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  se.type_info.cl.id:\r\n"
    "  CL type scheduling element\r\n"
    "  The index in the class table of CL parameters\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_SE_TYPE_INFO_HR_MODE_ID,                                                            
    "hr_mod",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SE_HR_MODE_rule[0],                                            
    (sizeof(FAP21V_SCH_SE_HR_MODE_rule) / sizeof(FAP21V_SCH_SE_HR_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  se.type_info.hr.mode:\r\n"
    "  HR type scheduling element\r\n"
    "  Relevant for HR type scheduling element only\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_SE_STATE_ID,                                                            
    "enable_state",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SE_STATE_rule[0],                                            
    (sizeof(FAP21V_SCH_SE_STATE_rule) / sizeof(FAP21V_SCH_SE_STATE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  se.state:\r\n"
    "  enable/disable\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_IS_SLOW_ENABLED_ID,                                                            
    "is_slow_enabled",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_TRUE_OR_FALSE_rule[0],                                            
    (sizeof(FAP21V_TRUE_OR_FALSE_rule) / sizeof(FAP21V_TRUE_OR_FALSE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.is_slow_enabled:\r\n"
    "  Relevant for Queue bounded (simple) flows only.If TRUE, shapes credit rate\r\n"
    "  according to ShaperSlowRate1 or ShaperSlowRate2 (per-subflow configuration)\r\n"
    "  when the flow is in slow state.If FALSE, slow state is treated as normal\r\n"
    "  state (slow messages are ignored).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_FLOW_TYPE_ID,                                                            
    "flow_type",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_FLOW_TYPE_rule[0],                                            
    (sizeof(FAP21V_SCH_FLOW_TYPE_rule) / sizeof(FAP21V_SCH_FLOW_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.flow_type:\r\n"
    "  A the legal combinations of flow attributes (Simple/aggregate/composite/dual\r\n"
    "  etc.)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_0_CREDIT_SOURCE_ID_ID,                                                            
    "credit_src_id",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SE_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_SE_ID_rule) / sizeof(FAP21V_SCH_SE_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].credit_source.id:\r\n"
    "  Scheduler element id of the credit source.Valid range 0 - 16K-1.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_0_CREDIT_SOURCE_SE_INFO_CL_WEIGHT_ID,                                                            
    "credit_src_cl_weight",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].credit_source.se_info.cl.weight:\r\n"
    "  The sub-flow weight when it competes for credits on a WFQ schedulerThe weight\r\n"
    "  range is dependent on the CL scheduler mode:FAP21V_SCH_CL_MODE_1: 4\r\n"
    "  strict-priority levels: [SP1, SP2, SP3, SP4] - N/AFAP21V_SCH_CL_MODE_2: 3\r\n"
    "  strict-priority levels: [SP1, SP2, SP3-WFQ(2)]FAP21V_SCH_CL_MODE_3: 2\r\n"
    "  strict-priority levels: [SP1-WFQ(1:63), SP2] or [SP1\r\n"
    "  WFQ(3),SP2]FAP21V_SCH_CL_MODE_4: 2 strict-priority levels: [SP1,SP2-WFQ(3)]\r\n"
    "  or [SP1, SP2 WFQ(1:63)]FAP21V_SCH_CL_MODE_5: 1 strict-priority level: WFQ\r\n"
    "  (1:253)] or [SP-WFQ(4)]In the above description, the range is:for WFQ(X):\r\n"
    "  range - 1-Xfor WFQ(1:X): range - 1-X\r\n"
    "  INDEPENDENT_PER_FLOW:low weight <-> high priorityDISCRETE_PER_FLOW:the weight\r\n"
    "  is an index to a weight table.In that table,low weight <-> high\r\n"
    "  priority.DISCRETE_PER_CLASS:low weight <-> low priority\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_0_CREDIT_SOURCE_SE_INFO_CL_SP_CLASS_ID,                                                            
    "credit_src_cl_sp_clss",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SUB_FLOW_CL_CLASS_rule[0],                                            
    (sizeof(FAP21V_SCH_SUB_FLOW_CL_CLASS_rule) / sizeof(FAP21V_SCH_SUB_FLOW_CL_CLASS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].credit_source.se_info.cl.sp_class:\r\n"
    "  To which of the sp classes and wfq weights is this sub-flow attached.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_0_CREDIT_SOURCE_SE_INFO_HR_WEIGHT_ID,                                                            
    "credit_src_hr_weight",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].credit_source.se_info.hr.weight:\r\n"
    "  The sub-flow weight when it competes for credits on a WFQ scheduler.range: 1\r\n"
    "  - 4K-1low weight <-> high priority\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_0_CREDIT_SOURCE_SE_INFO_HR_SP_CLASS_ID,                                                            
    "credit_src_hr_sp_clss",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SUB_FLOW_HR_CLASS_rule[0],                                            
    (sizeof(FAP21V_SCH_SUB_FLOW_HR_CLASS_rule) / sizeof(FAP21V_SCH_SUB_FLOW_HR_CLASS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].credit_source.se_info.hr.sp_class:\r\n"
    "  On which of the sp classes is this sub-flow attached to. Values with _WFQ_\r\n"
    "  mean that the sub-flow competes on a WFQ scheduler.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_0_SLOW_RATE_NDX_ID,                                                            
    "sub_flow_slow_rate_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SLOW_RATE_NDX_rule[0],                                            
    (sizeof(FAP21V_SCH_SLOW_RATE_NDX_rule) / sizeof(FAP21V_SCH_SLOW_RATE_NDX_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].slow_rate_ndx:\r\n"
    "  slow rate index.Valid range 1 or 2\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_0_SHAPER_MAX_BURST_ID,                                                            
    "sub_flow_shpr_max_brst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].shaper.max_burst:\r\n"
    "  Maximum bytes for a bursty flowrange: 0 - 512 * credit size\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_0_SHAPER_MAX_RATE_ID,                                                            
    "sub_flow_shpr_max_rate",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].shaper.max_rate:\r\n"
    "  Maximum rate in the flow in kbps. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_0_IS_VALID_ID,                                                            
    "sub_flow_is_vld",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_TRUE_OR_FALSE_rule[0],                                            
    (sizeof(FAP21V_TRUE_OR_FALSE_rule) / sizeof(FAP21V_TRUE_OR_FALSE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].is_valid:\r\n"
    "  If true, this is a valid subflow\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_set se_ndx 0 subflow_ndx 1 se_grp 0 se_is_dual 0\r\n"
    "  hr_mod 0 enable_state enable\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_GET_SCH_AGGREGATE_GET_ID,                                                            
    "aggr_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets an aggregate scheduler.\r\n"
    "  It configures an elementary scheduler, and defines\r\n"
    "  a credit flow to this scheduler from a 'father' scheduler.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Scheduler Enable Memory (SEM),\r\n"
    "  HR-Scheduler-Configuration (SHC),\r\n"
    "  CL-Schedulers Configuration (SCC),\r\n"
    "  Flow Group Memory (FGM)\r\n"
    "  Shaper Descriptor Memory (SHD)\r\n"
    "  Flow Sub-Flow (FSF)\r\n"
    "  Flow Descriptor Memory (FDM)\r\n"
    "  Shaper Descriptor Memory Static(SHDS)\r\n"
    "  Flow Descriptor Memory Static (FDMS)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_get se_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(23)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_AGGREGATE_GET_SCH_AGGREGATE_GET_SE_NDX_ID,                                                            
    "se_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SE_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_SE_ID_rule) / sizeof(FAP21V_SCH_SE_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  se_ndx:\r\n"
    "  Scheduler element index.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler aggr_get se_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_SET_ID,                                                            
    "flow_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets a scheduler flow,\r\n"
    "  from a scheduling element (or elements) another element.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Scheduler Enable Memory (SEM),\r\n"
    "  Shaper Descriptor Memory Static(SHDS)\r\n"
    "  Flow Sub-Flow (FSF)\r\n"
    "  Flow Descriptor Memory Static (FDMS)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_NDX_ID,                                                            
    "flow_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_FLOW_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_FLOW_ID_rule) / sizeof(FAP21V_SCH_FLOW_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow_ndx:\r\n"
    "  Flow index to configure. This index must be identical\r\n"
    "  to the subflow index of the first (even) subflow\r\n"
    "  in the flow structure.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_SET_SUBFLOW_ID,                                                            
    "subflow_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SUBFLOW_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_SUBFLOW_ID_rule) / sizeof(FAP21V_SCH_SUBFLOW_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  subflow_ndx:\r\n"
    "  Which one (if any) of the two subflows to modify.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                         
    {0, 0, 0, 0, BIT(24)},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_IS_SLOW_ENABLED_ID,                                                            
    "is_slow_enabled",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_TRUE_OR_FALSE_rule[0],                                            
    (sizeof(FAP21V_TRUE_OR_FALSE_rule) / sizeof(FAP21V_TRUE_OR_FALSE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.is_slow_enabled:\r\n"
    "  Relevant for Queue bounded (simple) flows only.If TRUE, shapes credit rate\r\n"
    "  according to ShaperSlowRate1 or ShaperSlowRate2 (per-subflow configuration)\r\n"
    "  when the flow is in slow state.If FALSE, slow state is treated as normal\r\n"
    "  state (slow messages are ignored).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_FLOW_TYPE_ID,                                                            
    "flow_type",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_FLOW_TYPE_rule[0],                                            
    (sizeof(FAP21V_SCH_FLOW_TYPE_rule) / sizeof(FAP21V_SCH_FLOW_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.flow_type:\r\n"
    "  A the legal combinations of flow attributes (Simple/aggregate/composite/dual\r\n"
    "  etc.)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_0_CREDIT_SOURCE_ID_ID,                                                            
    "credit_src_id",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SE_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_SE_ID_rule) / sizeof(FAP21V_SCH_SE_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].credit_source.id:\r\n"
    "  Scheduler element id of the credit source.Valid range 0 - 16K-1.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_0_CREDIT_SOURCE_SE_INFO_CL_WEIGHT_ID,                                                            
    "credit_src_cl_weight",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].credit_source.se_info.cl.weight:\r\n"
    "  The sub-flow weight when it competes for credits on a WFQ schedulerThe weight\r\n"
    "  range is dependent on the CL scheduler mode:FAP21V_SCH_CL_MODE_1: 4\r\n"
    "  strict-priority levels: [SP1, SP2, SP3, SP4] - N/AFAP21V_SCH_CL_MODE_2: 3\r\n"
    "  strict-priority levels: [SP1, SP2, SP3-WFQ(2)]FAP21V_SCH_CL_MODE_3: 2\r\n"
    "  strict-priority levels: [SP1-WFQ(1:63), SP2] or [SP1\r\n"
    "  WFQ(3),SP2]FAP21V_SCH_CL_MODE_4: 2 strict-priority levels: [SP1,SP2-WFQ(3)]\r\n"
    "  or [SP1, SP2 WFQ(1:63)]FAP21V_SCH_CL_MODE_5: 1 strict-priority level: WFQ\r\n"
    "  (1:253)] or [SP-WFQ(4)]In the above description, the range is:for WFQ(X):\r\n"
    "  range - 1-Xfor WFQ(1:X): range - 1-X\r\n"
    "  INDEPENDENT_PER_FLOW:low weight <-> high priorityDISCRETE_PER_FLOW:the weight\r\n"
    "  is an index to a weight table.In that table,low weight <-> high\r\n"
    "  priority.DISCRETE_PER_CLASS:low weight <-> low priority\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_0_CREDIT_SOURCE_SE_INFO_CL_SP_CLASS_ID,                                                            
    "credit_src_cl_sp_clss",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SUB_FLOW_CL_CLASS_rule[0],                                            
    (sizeof(FAP21V_SCH_SUB_FLOW_CL_CLASS_rule) / sizeof(FAP21V_SCH_SUB_FLOW_CL_CLASS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].credit_source.se_info.cl.sp_class:\r\n"
    "  To which of the sp classes and wfq weights is this sub-flow attached.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_0_CREDIT_SOURCE_SE_INFO_HR_WEIGHT_ID,                                                            
    "credit_src_hr_weight",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].credit_source.se_info.hr.weight:\r\n"
    "  The sub-flow weight when it competes for credits on a WFQ scheduler.range: 1\r\n"
    "  - 4K-1low weight <-> high priority\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_0_CREDIT_SOURCE_SE_INFO_HR_SP_CLASS_ID,                                                            
    "credit_src_hr_sp_clss",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SUB_FLOW_HR_CLASS_rule[0],                                            
    (sizeof(FAP21V_SCH_SUB_FLOW_HR_CLASS_rule) / sizeof(FAP21V_SCH_SUB_FLOW_HR_CLASS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].credit_source.se_info.hr.sp_class:\r\n"
    "  On which of the sp classes is this sub-flow attached to. Values with _WFQ_\r\n"
    "  mean that the sub-flow competes on a WFQ scheduler.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_0_SLOW_RATE_NDX_ID,                                                            
    "sub_flow_slow_rate_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_SLOW_RATE_NDX_rule[0],                                            
    (sizeof(FAP21V_SCH_SLOW_RATE_NDX_rule) / sizeof(FAP21V_SCH_SLOW_RATE_NDX_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].slow_rate_ndx:\r\n"
    "  slow rate index.Valid range 1 or 2\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_0_SHAPER_MAX_BURST_ID,                                                            
    "sub_flow_shpr_max_brst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].shaper.max_burst:\r\n"
    "  Maximum bytes for a bursty flowrange: 0 - 512 * credit size\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_0_SHAPER_MAX_RATE_ID,                                                            
    "sub_flow_shpr_max_rate",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow.sub_flow[subflow_ndx].shaper.max_rate:\r\n"
    "  Maximum rate in the flow in kbps. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 credit_src_id 0 \r\n"
    "  credit_src_cl_weight 0\r\n"
    "  credit_src_cl_sp_clss 0\r\n"
    "  sub_flow_shpr_max_brst 0 sub_flow_shpr_max_rate 0\r\n"
    "  sub_flow_is_vld 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },      
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_GET_SCH_FLOW_GET_ID,                                                            
    "flow_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets a scheduler flow,\r\n"
    "  from a scheduling element (or elements) another element.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Scheduler Enable Memory (SEM),\r\n"
    "  Shaper Descriptor Memory Static(SHDS)\r\n"
    "  Flow Sub-Flow (FSF)\r\n"
    "  Flow Descriptor Memory Static (FDMS)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_get flow_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(25)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_GET_SCH_FLOW_GET_FLOW_NDX_ID,                                                            
    "flow_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_FLOW_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_FLOW_ID_rule) / sizeof(FAP21V_SCH_FLOW_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow_ndx:\r\n"
    "  Flow index to configure. This index must be identical\r\n"
    "  to the subflow index of the first (even) subflow\r\n"
    "  in the flow structure.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_get flow_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_STATUS_SET_SCH_FLOW_STATUS_SET_ID,                                                            
    "flow_status_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set flow state to off/on.\r\n"
    "  The state of the flow will be updated,\r\n"
    "  unless was configured otherwise.\r\n"
    "  Note: useful for virtual flows,\r\n"
    "  for which the flow state must be explicitly set\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_status_set flow_ndx 0 status 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(26)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_STATUS_SET_SCH_FLOW_STATUS_SET_FLOW_NDX_ID,                                                            
    "flow_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_FLOW_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_FLOW_ID_rule) / sizeof(FAP21V_SCH_FLOW_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flow_ndx:\r\n"
    "  The flow id (0-56K) of the requested flow.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_status_set flow_ndx 0 status 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(26)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_STATUS_SET_SCH_FLOW_STATUS_SET_STATE_ID,                                                            
    "status",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_FLOW_STATUS_rule[0],                                            
    (sizeof(FAP21V_SCH_FLOW_STATUS_rule) / sizeof(FAP21V_SCH_FLOW_STATUS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  state:\r\n"
    "  The requested state.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_status_set flow_ndx 0 status 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(26)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },        
  {                                                                                        
    PARAM_FAP21V_SCH_PER1K_INFO_SET_SCH_PER1K_INFO_SET_ID,                                                            
    "per1k_info_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets flow configuration for 1K flows (256 quartets).\r\n"
    "  Flows interdigitated mode configuration must mach\r\n"
    "  the interdigitated mode configuration\r\n"
    "  of the queues they are mapped to.\r\n"
    "  Note1: the following flow configuration is not allowed:\r\n"
    "  interdigitated = TRUE, odd_even = FALSE.\r\n"
    "  The reason for this is that interdigitated configuration\r\n"
    "  defines flow-queue mapping,\r\n"
    "  but a flow with odd_even configuration = FALSE\r\n"
    "  cannot be mapped to a queue.\r\n"
    "  Note2: this configuration is only relevant to flow_id-s\r\n"
    "  in the range 24K - 56K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler per1k_info_set k_flow_ndx 24\r\n"
    "  is_cl_cir 0 is_odd_even 0 is_interdigitated 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(2)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PER1K_INFO_SET_SCH_PER1K_INFO_SET_K_FLOW_NDX_ID,                                                            
    "k_flow_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_K_FLOW_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_K_FLOW_ID_rule) / sizeof(FAP21V_SCH_K_FLOW_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  k_flow_ndx:\r\n"
    "  The index of the 1K flows to configure.\r\n"
    "  Range: 0 - 31.\r\n"
    "  Corresponds to flow-id range of 24K - 56K-1\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler per1k_info_set k_flow_ndx 24\r\n"
    "  is_cl_cir 0 is_odd_even 0 is_interdigitated 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(2)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PER1K_INFO_SET_SCH_PER1K_INFO_SET_PER1K_INFO_IS_CL_CIR_ID,                                                            
    "is_cl_cir",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_TRUE_OR_FALSE_rule[0],                                            
    (sizeof(FAP21V_TRUE_OR_FALSE_rule) / sizeof(FAP21V_TRUE_OR_FALSE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  per1k_info.is_cl_cir:\r\n"
    "  In dual shaper configuration - defines whether CL\r\n"
    "  functions as CIR (and FQ/HR as EIR), or as EIR (and FQ/HR as CIR).The\r\n"
    "  configuration is per 256 CL-FQ/HR pairs (covers 1K flow id-s)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler per1k_info_set k_flow_ndx 24\r\n"
    "  is_cl_cir 0 is_odd_even 0 is_interdigitated 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PER1K_INFO_SET_SCH_PER1K_INFO_SET_PER1K_INFO_IS_ODD_EVEN_ID,                                                            
    "is_odd_even",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_TRUE_OR_FALSE_rule[0],                                            
    (sizeof(FAP21V_TRUE_OR_FALSE_rule) / sizeof(FAP21V_TRUE_OR_FALSE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  per1k_info.is_odd_even:\r\n"
    "  TRUE/FALSE indication. Effects composite flow configuration.In a quartet\r\n"
    "  configured with odd_even = TRUE (AKA 0-1configuration), the even flow is\r\n"
    "  combined of even and the adjacent odd subflows.In a quartet configured with\r\n"
    "  odd_even = FALSE (AKA 0-2 configuration), the even flow x is combined of\r\n"
    "  subflow x and subflow x+2.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler per1k_info_set k_flow_ndx 24\r\n"
    "  is_cl_cir 0 is_odd_even 0 is_interdigitated 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PER1K_INFO_SET_SCH_PER1K_INFO_SET_PER1K_INFO_IS_INTERDIGITATED_ID,                                                            
    "is_interdigitated",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_TRUE_OR_FALSE_rule[0],                                            
    (sizeof(FAP21V_TRUE_OR_FALSE_rule) / sizeof(FAP21V_TRUE_OR_FALSE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  per1k_info.is_interdigitated:\r\n"
    "  TRUE/FALSE indication. Effects flow-queue mapping. A quartet configured with\r\n"
    "  interdigitated = TRUE is combined of two scheduling elements and two simple\r\n"
    "  flows. The simple flows are mapped to queues.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler per1k_info_set k_flow_ndx 24\r\n"
    "  is_cl_cir 0 is_odd_even 0 is_interdigitated 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PER1K_INFO_GET_SCH_PER1K_INFO_GET_ID,                                                            
    "per1k_info_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets flow configuration for 1K flows (256 quartets).\r\n"
    "  Flows interdigitated mode configuration must mach\r\n"
    "  the interdigitated mode configuration\r\n"
    "  of the queues they are mapped to.\r\n"
    "  Note1: the following flow configuration is not allowed:\r\n"
    "  interdigitated = TRUE, odd_even = FALSE.\r\n"
    "  The reason for this is that interdigitated configuration\r\n"
    "  defines flow-queue mapping,\r\n"
    "  but a flow with odd_even configuration = FALSE\r\n"
    "  cannot be mapped to a queue.\r\n"
    "  Note2: this configuration is only relevant to flow_id-s\r\n"
    "  in the range 24K - 56K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler per1k_info_get k_flow_ndx 24\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(1)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_PER1K_INFO_GET_SCH_PER1K_INFO_GET_K_FLOW_NDX_ID,                                                            
    "k_flow_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_K_FLOW_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_K_FLOW_ID_rule) / sizeof(FAP21V_SCH_K_FLOW_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  k_flow_ndx:\r\n"
    "  The index of the 1K flows to configure.\r\n"
    "  Range: 0 - 31.\r\n"
    "  Corresponds to flow-id range of 24K - 56K-1\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler per1k_info_get k_flow_ndx 24\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_TO_QUEUE_MAPPING_SET_SCH_FLOW_TO_QUEUE_MAPPING_SET_ID,                                                            
    "flow_to_queue_mapping_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the mapping from flow to queue and to source fap.\r\n"
    "  The configuration is per quartet (up to 4 quartets).\r\n"
    "  The mapping depends on the following parameters:\r\n"
    "  - interdigitated mode\r\n"
    "  - composite mode\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Flow to Queue Mapping (FQM)\r\n"
    "  Flow to FIP Mapping (FFM)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_to_queue_mapping_set qrtt_ndx 0\r\n"
    "  nof_qrtts_to_map 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(0)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_TO_QUEUE_MAPPING_SET_SCH_FLOW_TO_QUEUE_MAPPING_SET_QUARTET_NDX_ID,                                                            
    "qrtt_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_QUARTET_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_QUARTET_ID_rule) / sizeof(FAP21V_SCH_QUARTET_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  quartet_ndx:\r\n"
    "  The index of the base quartet to configure.\r\n"
    "  Range: 0 - 16K-1.\r\n"
    "  Corresponds to flow-id range of 0 - 56K -1.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_to_queue_mapping_set qrtt_ndx 0\r\n"
    "  nof_qrtts_to_map 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(0)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_TO_QUEUE_MAPPING_SET_SCH_FLOW_TO_QUEUE_MAPPING_SET_QUARTET_FLOW_INFO_FIP_ID_ID,                                                            
    "fip_id",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_FIP_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_FIP_ID_rule) / sizeof(FAP21V_SCH_FIP_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  quartet_flow_info.fip_id:\r\n"
    "  source fap id.range: 0 - 2047\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_to_queue_mapping_set qrtt_ndx 0\r\n"
    "  nof_qrtts_to_map 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_TO_QUEUE_MAPPING_SET_SCH_FLOW_TO_QUEUE_MAPPING_SET_QUARTET_FLOW_INFO_IS_COMPOSITE_ID,                                                            
    "is_composite",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_TRUE_OR_FALSE_rule[0],                                            
    (sizeof(FAP21V_TRUE_OR_FALSE_rule) / sizeof(FAP21V_TRUE_OR_FALSE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  quartet_flow_info.is_composite:\r\n"
    "  TRUE/FALSE indication. If true, two adjacent subflows will be mapped to the\r\n"
    "  same queue.this configuration must be coherent with FSF (flow-subflow)\r\n"
    "  configuration, defining whether two subflows compose a single flow.per-quartet\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_to_queue_mapping_set qrtt_ndx 0\r\n"
    "  nof_qrtts_to_map 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_TO_QUEUE_MAPPING_SET_SCH_FLOW_TO_QUEUE_MAPPING_SET_QUARTET_FLOW_INFO_BASE_QUEUE_ID_ID,                                                            
    "base_q_id",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_FLOW_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_FLOW_ID_rule) / sizeof(FAP21V_SCH_FLOW_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  quartet_flow_info.base_queue_id:\r\n"
    "  The exact flow id-s that will be mapped depend on base_flow_id\r\n"
    "  and is_composite values, and also on interdigitated mode.range: 0 -\r\n"
    "  56K-4.per-quartet\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_to_queue_mapping_set qrtt_ndx 0\r\n"
    "  nof_qrtts_to_map 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_TO_QUEUE_MAPPING_GET_SCH_FLOW_TO_QUEUE_MAPPING_GET_ID,                                                            
    "flow_to_queue_mapping_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the mapping from flow to queue and to source fap.\r\n"
    "  The configuration is per quartet (up to 4 quartets).\r\n"
    "  The mapping depends on the following parameters:\r\n"
    "  - interdigitated mode\r\n"
    "  - composite mode\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Flow to Queue Mapping (FQM)\r\n"
    "  Flow to FIP Mapping (FFM)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_to_queue_mapping_get qrtt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(31)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_TO_QUEUE_MAPPING_GET_SCH_FLOW_TO_QUEUE_MAPPING_GET_QUARTET_NDX_ID,                                                            
    "qrtt_ndx",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_SCH_QUARTET_ID_rule[0],                                            
    (sizeof(FAP21V_SCH_QUARTET_ID_rule) / sizeof(FAP21V_SCH_QUARTET_ID_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  quartet_ndx:\r\n"
    "  The index of the base quartet to configure.\r\n"
    "  Range: 0 - 16K-1.\r\n"
    "  Corresponds to flow-id range of 0 - 56K -1.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api scheduler flow_to_queue_mapping_get qrtt_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(31)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_TO_QUEUE_MAPPING_UNBIND_ID,                                                            
    "flow_to_queue_mapping_unbind",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(21)},                                                                                                                         
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_TO_QUEUE_MAPPING_UNBIND_QRTT_NDX_ID,                                                            
    "qrtt_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(21)},                                                                                                                         
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SCH_FLOW_TO_QUEUE_MAPPING_UNBIND_NOF_QRTT_ID,                                                            
    "nof_qrtts",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(21)},                                                                                                                         
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                       
    PARAM_FAP21V_API_END2END_SCHEDULER_ID,                                                            
    "scheduler",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                      
    {0, 0, 0, BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26), 0, 0, 0, BIT(15)|BIT(21)},
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } end2end_scheduler*/
#ifdef UI_MULTICAST_EGRESS/* { multicast_egress*/
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_TEST_RUN_NOF_GROUPS_ID,                                                            
    "nof_groups",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_TEST_RUN_ID,                                                            
    "run_test",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(17)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_GROUP_OPEN_GROUP_OPEN_ID,                                                            
    "group_open",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This API enables the egress-multicast-replication for the\r\n"
    "  specific multicast-id, and creates in the device the\r\n"
    "  needed link-list/bitmap. The user only specifies the\r\n"
    "  multicast-id and copies. All inner link-list nodes and bitmap are\r\n"
    "  allocated and handled by the driver. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress group_open eg_mltcst_ndx 0 grp_tbl_0_nof_cps 0\r\n"
    "  grp_tbl_0_dst 0 grp_nof_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(31)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_GROUP_OPEN_GROUP_OPEN_EG_MULTICAST_NDX_ID,                                                            
    "eg_mltcst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  eg_multicast_ndx:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress group_open eg_mltcst_ndx 0 grp_tbl_0_nof_cps 0\r\n"
    "  grp_tbl_0_dst 0 grp_nof_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(31)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_GROUP_OPEN_GROUP_OPEN_GROUP_TABLE_ID,                                                            
    "dest_nof_copies",                                                                       
    (PARAM_VAL_RULES *)&Fap21v_api_multicast_egress_eg_entry[0],                                            
    (sizeof(Fap21v_api_multicast_egress_eg_entry) / sizeof(Fap21v_api_multicast_egress_eg_entry[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  group.table[0].dest:\r\n"
    "  Out Going FAP-Port Id. 0 to 63\r\n"
    "  group.table[0].nof_copies:\r\n"
    "  Number of copies per dest-port.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress group_open eg_mltcst_ndx 0 dest-nof_copies 0 1 1 2 2 3 3 4\r\n"
    "  grp_tbl_0_dst 0 grp_nof_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(31)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_GROUP_UPDATE_GROUP_UPDATE_ID,                                                            
    "group_update",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This API updates the egress-multicast-replication definitions for\r\n"
    "  the specific multicast-id, and creates in the device the\r\n"
    "  needed link-list/bitmap. The user only specifies the\r\n"
    "  multicast-id and copies.\r\n"
    "  All inner link-list nodes and bitmap are allocated\r\n"
    "  and handled by the driver. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress group_update eg_mltcst_ndx 0 grp_tbl_0_nof_cps 0\r\n"
    "  grp_tbl_0_dst 0 grp_nof_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(0)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_GROUP_UPDATE_GROUP_UPDATE_EG_MULTICAST_NDX_ID,                                                            
    "eg_mltcst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  eg_multicast_ndx:\r\n"
    "  Egress-Multicast ID to set. Range: 0 - 16K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress group_update eg_mltcst_ndx 0 grp_tbl_0_nof_cps 0\r\n"
    "  grp_tbl_0_dst 0 grp_nof_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_GROUP_UPDATE_GROUP_UPDATE_GROUP_TABLE_ID,                                                            
    "grp_tbl",                                                                       
    (PARAM_VAL_RULES *)&Fap21v_api_multicast_egress_eg_entry[0],                                            
    (sizeof(Fap21v_api_multicast_egress_eg_entry) / sizeof(Fap21v_api_multicast_egress_eg_entry[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  group.table[0].nof_copies:\r\n"
    "  Number of copies per dest-port.\r\n"
    "  group.table[0].dest:\r\n"
    "  Out Going FAP-Port Id. 0 to 63\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress group_update eg_mltcst_ndx 0 grp_tbl 0 0 \r\n"
    "  grp_tbl_0_dst 0 grp_nof_ntrs 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_GROUP_CLOSE_GROUP_CLOSE_ID,                                                            
    "group_close",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This API closes egress-multicast-replication group\r\n"
    "  for the specific multicast-id.\r\n"
    "  The user only specifies the multicast-id.\r\n"
    "  All inner link-list/bitmap nodes are freed and\r\n"
    "  handled by the driver\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress group_close eg_mltcst_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(1)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_GROUP_CLOSE_GROUP_CLOSE_EG_MULTICAST_NDX_ID,                                                            
    "eg_mltcst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  eg_multicast_ndx:\r\n"
    "  Egress-Multicast ID to set. Range: 0 - 16K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress group_close eg_mltcst_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_PORT_ADD_PORT_ADD_ID,                                                            
    "port_add",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Add port members of the Egress-Multicast and/or modify the\r\n"
    "  number of logical copies required at port.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress port_add mltcst_ndx 0 lgc_prt_ntry_nof_cps 0\r\n"
    "  lgc_prt_ntry_dst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(2)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_PORT_ADD_PORT_ADD_MULTICAST_NDX_ID,                                                            
    "mltcst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  multicast_ndx:\r\n"
    "  bit multicast-ID (as given from the NP). Range: 0 - 16K.\r\n"
    "  FAP21V_MULTICAST_EG_ENTRY\r\n"
    "  *logic_port_entry -\r\n"
    "  Data-port and number of copies per port.\r\n"
    "  SOC_SAND_OUT uint8\r\n"
    "  *success -\r\n"
    "  Indicates if the action succeeded or failed.\r\n"
    "  TRUE - the group was opens as requested.\r\n"
    "  FALSE - the group was opens as requested due to insufficient\r\n"
    "  space. RETURN\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress port_add mltcst_ndx 0 lgc_prt_ntry_nof_cps 0\r\n"
    "  lgc_prt_ntry_dst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_PORT_ADD_PORT_ADD_LOGIC_PORT_ENTRY_ID,                                                            
    "lgc_prt_ntry",                                                                       
    (PARAM_VAL_RULES *)&Fap21v_api_multicast_egress_port_eg_entry[0],                                            
    (sizeof(Fap21v_api_multicast_egress_port_eg_entry) / sizeof(Fap21v_api_multicast_egress_port_eg_entry[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  logic_port_entry.nof_copies:\r\n"
    "  Number of copies per dest-port.\r\n"
    "  logic_port_entry.dest:\r\n"
    "  Out Going FAP-Port Id. 0 to 63\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress port_add mltcst_ndx 0 lgc_prt_ntry 0 0\r\n"
    "  lgc_prt_ntry_dst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_PORT_REMOVE_PORT_REMOVE_ID,                                                            
    "port_remove",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Removes a port member of the egress multicast.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress port_remove mltcst_ndx 0 dt_prt_nof_cps 0\r\n"
    "  dt_prt_dst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(3)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_PORT_REMOVE_PORT_REMOVE_MULTICAST_NDX_ID,                                                            
    "mltcst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  multicast_ndx:\r\n"
    "  bit multicast-ID (as given from the NP). Range: 0 - 16K.\r\n"
    "  SOC_SAND_OUT uint32 data_port -\r\n"
    "  Data-port to remove from multicast group. Range: 0 - 63 (0 - 30\r\n"
    "  while working with 4 queues per egress port mode).\r\n"
    "  SOC_SAND_OUT uint8*       \r\n"
    "  success -\r\n"
    "  Indicates if the action succeeded or failed.\r\n"
    "  TRUE - the group was opens as requested.\r\n"
    "  FALSE - the group was opens as requested due to insufficient\r\n"
    "  space.RETURN\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress port_remove mltcst_ndx 0 dt_prt_nof_cps 0\r\n"
    "  dt_prt_dst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(3)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_PORT_REMOVE_PORT_REMOVE_DATA_PORT_ID,                                                            
    "lgc_prt_ntry",                                                                       
    (PARAM_VAL_RULES *)&Fap21v_api_multicast_egress_port_eg_entry[0],                                            
    (sizeof(Fap21v_api_multicast_egress_port_eg_entry) / sizeof(Fap21v_api_multicast_egress_port_eg_entry[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  data_port.nof_copies:\r\n"
    "  Number of copies per dest-port.\r\n"
    "  data_port.dest:\r\n"
    "  Out Going FAP-Port Id. 0 to 63\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress port_remove mltcst_ndx 0 lgc_prt_ntry 0 0\r\n"
    "  dt_prt_dst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(3)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_TABLE_MODE_SET_TABLE_MODE_SET_ID,                                                            
    "table_mode_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Egress multicast registers modes. Note, this call should\r\n"
    "  be done as part of the initialization sequence of the device and\r\n"
    "  should not be changed in working mode.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress table_mode_set mod_for_k_nbl 0 mod_top_prt 0\r\n"
    "  mod_mif_mod 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(4)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_TABLE_MODE_SET_TABLE_MODE_SET_MODE_FOUR_K_ENABLE_ID,                                                            
    "mod_for_k_nbl",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mode.four_k_enable:\r\n"
    "  Egress multicast CFGEn4KMCCopies register value\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress table_mode_set mod_for_k_nbl 0 mod_top_prt 0\r\n"
    "  mod_mif_mod 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_TABLE_MODE_SET_TABLE_MODE_SET_MODE_TOP_PORT_ID,                                                            
    "mod_top_prt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mode.top_port:\r\n"
    "  Egress multicast TopMcBmpPort register value\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress table_mode_set mod_for_k_nbl 0 mod_top_prt 0\r\n"
    "  mod_mif_mod 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_TABLE_MODE_SET_TABLE_MODE_SET_MODE_MIF_MODE_ID,                                                            
    "mod_mif_mod",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mode.mif_mode:\r\n"
    "  Egress multicast MIF register value\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress table_mode_set mod_for_k_nbl 0 mod_top_prt 0\r\n"
    "  mod_mif_mod 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_TABLE_MODE_GET_TABLE_MODE_GET_ID,                                                            
    "table_mode_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Egress multicast registers modes. Note, this call should\r\n"
    "  be done as part of the initialization sequence of the device and\r\n"
    "  should not be changed in working mode.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress table_mode_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(5)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_GROUP_GET_GROUP_GET_ID,                                                            
    "group_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets the multicast group with the specified multicast id. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress group_get mltcst_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_GROUP_GET_GROUP_GET_MULTICAST_NDX_ID,                                                            
    "mltcst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  multicast_ndx:\r\n"
    "  bit multicast-ID (as given from the NP). Range: 0 - 16K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress group_get mltcst_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_EGRESS_ALL_GROUPS_CLOSE_ALL_GROUPS_CLOSE_ID,                                                            
    "all_groups_close",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Closes all opened egress multicast groups. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_egress all_groups_close\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_MULTICAST_EGRESS_ID,                                                            
    "multicast_egress",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",         
    {0, 0, 0, 0, BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7), 0, 0, BIT(17)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } multicast_egress*/
#ifdef UI_MULTICAST_FABRIC/* { multicast_fabric*/
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_ID,                                                            
    "info_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the Fabric Multicast credit generator configuration.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_CREDITS_VIA_SCH_ID,                                                            
    "crdts_via_sch",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.credits_via_sch:\r\n"
    "  Determines if the scheduler will distribute credits or the IPS directly.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_MAX_RATE_ID,                                                            
    "nfo_max_rate",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.max_rate:\r\n"
    "  The maximum rate in which credits are generated.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SCH_PORT_0_WEIGHT_ID,                                                            
    "bst_ffrt_be_sch_prt_0_wght",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.best_effrt.be_sch_port[0].weight:\r\n"
    "  The proportion in which credits are generated. Range 0 (max) to 15 (min). \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SCH_PORT_0_BE_SCH_PORT_MULTICAST_CLASS_VALID_ID,                                                            
    "bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.best_effrt.be_sch_port[0].be_sch_port.multicast_class_valid:\r\n"
    "  If this bit is set, then the scheduler enables the IPS to generate credits\r\n"
    "  for the Multicast Class port. Suppose the value is FALSE the credits are\r\n"
    "  given to the queue directly from the IPS.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SCH_PORT_0_BE_SCH_PORT_MCAST_CLASS_PORT_ID_ID,                                                            
    "bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.best_effrt.be_sch_port[0].be_sch_port.mcast_class_port_id:\r\n"
    "  Multicast class Port Id. one of 64 outgoing FAP ports.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SCH_PORT_1_WEIGHT_ID,                                                            
    "bst_ffrt_be_sch_prt_1_wght",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.best_effrt.be_sch_port[1].weight:\r\n"
    "  The proportion in which credits are generated. Range 0 (max) to 15 (min). \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SCH_PORT_1_BE_SCH_PORT_MULTICAST_CLASS_VALID_ID,                                                            
    "bst_ffrt_be_sch_prt_1_be_sch_prt_mltcst_clss_vld",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.best_effrt.be_sch_port[1].be_sch_port.multicast_class_valid:\r\n"
    "  If this bit is set, then the scheduler enables the IPS to generate credits\r\n"
    "  for the Multicast Class port. Suppose the value is FALSE the credits are\r\n"
    "  given to the queue directly from the IPS.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SCH_PORT_1_BE_SCH_PORT_MCAST_CLASS_PORT_ID_ID,                                                            
    "bst_ffrt_be_sch_prt_1_be_sch_prt_mcst_clss_prt_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.best_effrt.be_sch_port[1].be_sch_port.mcast_class_port_id:\r\n"
    "  Multicast class Port Id. one of 64 outgoing FAP ports.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SCH_PORT_2_WEIGHT_ID,                                                            
    "bst_ffrt_be_sch_prt_2_wght",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.best_effrt.be_sch_port[2].weight:\r\n"
    "  The proportion in which credits are generated. Range 0 (max) to 15 (min). \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SCH_PORT_2_BE_SCH_PORT_MULTICAST_CLASS_VALID_ID,                                                            
    "bst_ffrt_be_sch_prt_2_be_sch_prt_mltcst_clss_vld",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.best_effrt.be_sch_port[2].be_sch_port.multicast_class_valid:\r\n"
    "  If this bit is set, then the scheduler enables the IPS to generate credits\r\n"
    "  for the Multicast Class port. Suppose the value is FALSE the credits are\r\n"
    "  given to the queue directly from the IPS.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SCH_PORT_2_BE_SCH_PORT_MCAST_CLASS_PORT_ID_ID,                                                            
    "bst_ffrt_be_sch_prt_2_be_sch_prt_mcst_clss_prt_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.best_effrt.be_sch_port[2].be_sch_port.mcast_class_port_id:\r\n"
    "  Multicast class Port Id. one of 64 outgoing FAP ports.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_WFQ_ENABLE_ID,                                                            
    "bst_ffrt_wfq_nbl",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.best_effrt.wfq_enable:\r\n"
    "  If asserted the credit will be distributed in the following order: MC2 > MC1\r\n"
    "  > MC0\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SHAPER_MAX_BURST_ID,                                                            
    "bst_ffrt_be_shpr_max_brst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.best_effrt.be_shaper.max_burst:\r\n"
    "  The maximum number of credits the generator can hold when credits are not\r\n"
    "  needed.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SHAPER_RATE_ID,                                                            
    "bst_ffrt_be_shpr_rte",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.best_effrt.be_shaper.rate:\r\n"
    "  The maximum rate credits are given to best effort/guaranteed traffic queues.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_GUARANTEED_GR_SCH_PORT_MULTICAST_CLASS_VALID_ID,                                                            
    "grntd_gr_sch_prt_mltcst_clss_vld",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.guaranteed.gr_sch_port.multicast_class_valid:\r\n"
    "  If this bit is set, then the scheduler enables the IPS to generate credits\r\n"
    "  for the Multicast Class port. Suppose the value is FALSE the credits are\r\n"
    "  given to the queue directly from the IPS.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_GUARANTEED_GR_SCH_PORT_MCAST_CLASS_PORT_ID_ID,                                                            
    "grntd_gr_sch_prt_mcst_clss_prt_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.guaranteed.gr_sch_port.mcast_class_port_id:\r\n"
    "  Multicast class Port Id. one of 64 outgoing FAP ports.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_GUARANTEED_GR_SHAPER_MAX_BURST_ID,                                                            
    "grntd_gr_shpr_max_brst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.guaranteed.gr_shaper.max_burst:\r\n"
    "  The maximum number of credits the generator can hold when credits are not\r\n"
    "  needed.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_SET_CREDIT_SOURCE_SET_INFO_GUARANTEED_GR_SHAPER_RATE_ID,                                                            
    "grntd_gr_shpr_rte",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.guaranteed.gr_shaper.rate:\r\n"
    "  The maximum rate credits are given to best effort/guaranteed traffic queues.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_set crdts_via_sch 0 max_rate\r\n"
    "  0 bst_ffrt_be_sch_prt_0_wght 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mltcst_clss_vld 0\r\n"
    "  bst_ffrt_be_sch_prt_0_be_sch_prt_mcst_clss_prt_id 0 bst_ffrt_wfq_nbl\r\n"
    "  0 bst_ffrt_be_shpr_max_brst 0 bst_ffrt_be_shpr_rte 0\r\n"
    "  grntd_gr_sch_prt_mltcst_clss_vld 0 grntd_gr_sch_prt_mcst_clss_prt_id\r\n"
    "  0 grntd_gr_shpr_max_brst 0 grntd_gr_shpr_rte 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_CREDIT_SOURCE_GET_CREDIT_SOURCE_GET_ID,                                                            
    "info_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the Fabric Multicast credit generator configuration.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric credit_source_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(9)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_ACTIVE_LINKS_SET_ACTIVE_LINKS_SET_ID,                                                            
    "active_links_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure sets the FAP links that are eligible for multicast\r\n"
    "  fabric traffic.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric active_links_set ctv_mc_lnks 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(10)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_ACTIVE_LINKS_SET_ACTIVE_LINKS_SET_ACTIVE_MC_LINKS_ID,                                                            
    "ctv_mc_lnks",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  active_mc_links:\r\n"
    "  A bitmap of the device links. if bit (0 - 23) is up, then its\r\n"
    "  corresponding link (0 - 23) is eligible for spatial multicast\r\n"
    "  distribution. Range: 0 - 0xFFFFFF (24 LSB).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric active_links_set ctv_mc_lnks 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_ACTIVE_LINKS_SET_ACTIVE_LINKS_SET_TBL_REFRESH_ENABLE_ID,                                                            
    "tbl_rfrsh_nbl",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  tbl_refresh_enable:\r\n"
    "  Since multicast distribution table does not exist, the data is\r\n"
    "  taken from link map the user supplies (active_mc_links), and may\r\n"
    "  be combined with data from unicast distribution table. This\r\n"
    "  parameter sets the refresh rate in which, is case of the combined\r\n"
    "  data as explained above, the data is taken from the unicast\r\n"
    "  distribution table.\r\n"
    "  TRUE - Combine calculated data from UC distribution table with\r\n"
    "  active_mc_links.\r\n"
    "  FALSE - Do not combine calculated data from UC distribution table\r\n"
    "  with active_mc_links.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric active_links_set ctv_mc_lnks 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_ACTIVE_LINKS_GET_ACTIVE_LINKS_GET_ID,                                                            
    "active_links_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure sets the FAP links that are eligible for multicast\r\n"
    "  fabric traffic.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric active_links_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(11)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_GROUP_OPEN_GROUP_OPEN_ID,                                                            
    "group_open",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Open multicast fabric multicast group in multicast table. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric group_open mltcst_ndx 0 bse_quu 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(12)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_GROUP_OPEN_GROUP_OPEN_MULTICAST_NDX_ID,                                                            
    "mltcst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  multicast_ndx:\r\n"
    "  Multicast group id. Range: 0 - 16K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric group_open mltcst_ndx 0 bse_quu 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_GROUP_OPEN_GROUP_OPEN_BASE_QUEUE_ID,                                                            
    "bse_quu",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  base_queue:\r\n"
    "  The base queue number to assign to packets coming with\r\n"
    "  multicast_ndx Range: 0 - 32K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric group_open mltcst_ndx 0 bse_quu 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_GROUP_GET_GROUP_GET_ID,                                                            
    "group_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets the queue corresponding to the specified multicast ID from the\r\n"
    "  multicast table. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric group_get mltcst_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(13)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_GROUP_GET_GROUP_GET_MULTICAST_NDX_ID,                                                            
    "mltcst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  multicast_ndx:\r\n"
    "  Multicast group id. Range: 0 - 16K.\r\n"
    "  SOC_SAND_IN uint32\r\n"
    "  *base_queue -\r\n"
    "  The base queue number to which the multicast group is assigned.\r\n"
    "  Range: 0 - 32KRETURN\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric group_get mltcst_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_GROUP_UPDATE_GROUP_UPDATE_ID,                                                            
    "group_update",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Updates multicast fabric multicast base queue. The function calls\r\n"
    "  fap21v_multicast_fabric_group_open in order to update group.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric group_update mltcst_ndx 0 bse_quu 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_GROUP_UPDATE_GROUP_UPDATE_MULTICAST_NDX_ID,                                                            
    "mltcst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  multicast_ndx:\r\n"
    "  Multicast group id. Range: 0 - 16K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric group_update mltcst_ndx 0 bse_quu 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_GROUP_UPDATE_GROUP_UPDATE_BASE_QUEUE_ID,                                                            
    "bse_quu",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  base_queue:\r\n"
    "  The base queue number to assign to packets coming with\r\n"
    "  multicast_ndx. Range: 0 - 32K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric group_update mltcst_ndx 0 bse_quu 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_GROUP_CLOSE_GROUP_CLOSE_ID,                                                            
    "group_close",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Closes multicast fabric multicast group. The driver writes preset\r\n"
    "  data instead of the old closed group.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric group_close mltcst_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(15)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_GROUP_CLOSE_GROUP_CLOSE_MULTICAST_NDX_ID,                                                            
    "mltcst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  multicast_ndx:\r\n"
    "  Multicast group id to close. Range: 0 - 16K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric group_close mltcst_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_MESH_MODE_SET_MESH_MODE_SET_ID,                                                            
    "mesh_mode_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the device to send the specified multicast group to the members in he\r\n"
    "  mesh that are asserted.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric mesh_mode_set mltcst_ndx 0 msh_dvc 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(16)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_MESH_MODE_SET_MESH_MODE_SET_MULTICAST_NDX_ID,                                                            
    "mltcst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  multicast_ndx:\r\n"
    "  Multicast group id. Range: 0 -16K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric mesh_mode_set mltcst_ndx 0 msh_dvc 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(16)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_MESH_MODE_SET_MESH_MODE_SET_MESH_DEVICE_ID,                                                            
    "msh_dvc",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mesh_device:\r\n"
    "  SOC_SAND_FAP21V can work with up to 5 more other FAPs in a mesh mode. A\r\n"
    "  special mechanism called context maps between each of these FAPs\r\n"
    "  to its fap_id and the links it relies upon. Bit i is implies that\r\n"
    "  the specified multicast id is relevant while sending multicast\r\n"
    "  packets to a fap configured in the context mechanism i.\r\n"
    "  Range: 0 - 0x3F.SEE ALSO\r\n"
    "  More information is available in\r\n"
    "  fap21v_fabric_links_mesh_mode_topology_set/get\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric mesh_mode_set mltcst_ndx 0 msh_dvc 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_MESH_MODE_GET_MESH_MODE_GET_ID,                                                            
    "mesh_mode_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the device to send the specified multicast group to the members in he\r\n"
    "  mesh that are asserted.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric mesh_mode_get mltcst_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(17)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_MESH_MODE_GET_MESH_MODE_GET_MULTICAST_NDX_ID,                                                            
    "mltcst_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  multicast_ndx:\r\n"
    "  Multicast group id. Range: 0 -16K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric mesh_mode_get mltcst_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_PRE_DEFINED_QUEUE_SET_PRE_DEFINED_QUEUE_SET_ID,                                                            
    "pre_defined_queue_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Opens a new multicast snooping queue.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric pre_defined_queue_set quu_ndx 0 stmpng_nfo_dp 0\r\n"
    "  stmpng_nfo_dp_stmp_nbl 0 stmpng_nfo_tc 0 stmpng_nfo_tc_stmp_nbl 0\r\n"
    "  stmpng_nfo_mltcst_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(18)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_PRE_DEFINED_QUEUE_SET_PRE_DEFINED_QUEUE_SET_QUEUE_NDX_ID,                                                            
    "quu_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_ndx:\r\n"
    "  The snooping queue to configure.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric pre_defined_queue_set quu_ndx 0 stmpng_nfo_dp 0\r\n"
    "  stmpng_nfo_dp_stmp_nbl 0 stmpng_nfo_tc 0 stmpng_nfo_tc_stmp_nbl 0\r\n"
    "  stmpng_nfo_mltcst_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(18)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_PRE_DEFINED_QUEUE_SET_PRE_DEFINED_QUEUE_SET_STAMPING_INFO_DP_ID,                                                            
    "stmpng_nfo_dp",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  stamping_info.dp:\r\n"
    "  Drop precedence to stamp on packet headers. Range: 0...3. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric pre_defined_queue_set quu_ndx 0 stmpng_nfo_dp 0\r\n"
    "  stmpng_nfo_dp_stmp_nbl 0 stmpng_nfo_tc 0 stmpng_nfo_tc_stmp_nbl 0\r\n"
    "  stmpng_nfo_mltcst_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_PRE_DEFINED_QUEUE_SET_PRE_DEFINED_QUEUE_SET_STAMPING_INFO_DP_STAMP_ENABLE_ID,                                                            
    "stmpng_nfo_dp_stmp_nbl",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  stamping_info.dp_stamp_enable:\r\n"
    "  TRUE - Enable drop precedence stamping.FALSE - disable drop precedence\r\n"
    "  stamping.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric pre_defined_queue_set quu_ndx 0 stmpng_nfo_dp 0\r\n"
    "  stmpng_nfo_dp_stmp_nbl 0 stmpng_nfo_tc 0 stmpng_nfo_tc_stmp_nbl 0\r\n"
    "  stmpng_nfo_mltcst_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_PRE_DEFINED_QUEUE_SET_PRE_DEFINED_QUEUE_SET_STAMPING_INFO_TC_ID,                                                            
    "stmpng_nfo_tc",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  stamping_info.tc:\r\n"
    "  Traffic class to stamp on packet headers. Range: 0...7.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric pre_defined_queue_set quu_ndx 0 stmpng_nfo_dp 0\r\n"
    "  stmpng_nfo_dp_stmp_nbl 0 stmpng_nfo_tc 0 stmpng_nfo_tc_stmp_nbl 0\r\n"
    "  stmpng_nfo_mltcst_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_PRE_DEFINED_QUEUE_SET_PRE_DEFINED_QUEUE_SET_STAMPING_INFO_TC_STAMP_ENABLE_ID,                                                            
    "stmpng_nfo_tc_stmp_nbl",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  stamping_info.tc_stamp_enable:\r\n"
    "  TRUE - Enable traffic class stamping.FALSE - disable traffic class stamping.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric pre_defined_queue_set quu_ndx 0 stmpng_nfo_dp 0\r\n"
    "  stmpng_nfo_dp_stmp_nbl 0 stmpng_nfo_tc 0 stmpng_nfo_tc_stmp_nbl 0\r\n"
    "  stmpng_nfo_mltcst_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_PRE_DEFINED_QUEUE_SET_PRE_DEFINED_QUEUE_SET_STAMPING_INFO_MULTICAST_ID_ID,                                                            
    "stmpng_nfo_mltcst_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  stamping_info.multicast_id:\r\n"
    "  Multicast_id to stamp on packet headers. Range: 0...16K. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric pre_defined_queue_set quu_ndx 0 stmpng_nfo_dp 0\r\n"
    "  stmpng_nfo_dp_stmp_nbl 0 stmpng_nfo_tc 0 stmpng_nfo_tc_stmp_nbl 0\r\n"
    "  stmpng_nfo_mltcst_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_PRE_DEFINED_QUEUE_GET_PRE_DEFINED_QUEUE_GET_ID,                                                            
    "pre_defined_queue_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Opens a new multicast snooping queue.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric pre_defined_queue_get quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(19)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_FABRIC_PRE_DEFINED_QUEUE_GET_PRE_DEFINED_QUEUE_GET_QUEUE_NDX_ID,                                                            
    "quu_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_ndx:\r\n"
    "  The snooping queue to configure.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_fabric pre_defined_queue_get quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_MULTICAST_FABRIC_ID,                                                            
    "multicast_fabric",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } multicast_fabric*/
#ifdef UI_MULTICAST_RECYCLING/* { multicast_recycling*/
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_NODE_SET_MULTICAST_RCY_NODE_SET_ID,                                                            
    "node_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(22)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_NODE_SET_MULTICAST_RCY_NODE_SET_TREE_NDX_ID,                                                            
    "tr_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(22)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_NODE_SET_MULTICAST_RCY_NODE_SET_TREE_NODE_TYPE_ID,                                                            
    "type",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_MULTICAST_RCY_TREE_NODE_TYPE_rule[0],                                            
    (sizeof(FAP21V_MULTICAST_RCY_TREE_NODE_TYPE_rule) / sizeof(FAP21V_MULTICAST_RCY_TREE_NODE_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(22)},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_NODE_SET_MULTICAST_RCY_NODE_SET_TREE_NODE_TYPE_INNER_NEXT_TREE_NDX_ID,                                                            
    "inner_nxt_tr_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_NODE_SET_MULTICAST_RCY_NODE_SET_TREE_NODE_TYPE_INNER_RECYCLE_QUEUES_0_ID,                                                            
    "inner_queue_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_NODE_SET_MULTICAST_RCY_NODE_SET_TREE_NODE_TYPE_INNER_RECYCLE_QUEUES_1_ID,                                                            
    "inner_queue_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_NODE_SET_MULTICAST_RCY_NODE_SET_TREE_NODE_TYPE_LAST_RECYCLE_QUEUES_0_Q_ID,                                                            
    "last_que_num_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_NODE_SET_MULTICAST_RCY_NODE_SET_TREE_NODE_TYPE_LAST_RECYCLE_QUEUES_0_V_ID,                                                            
    "last_que_val_0",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_NODE_SET_MULTICAST_RCY_NODE_SET_TREE_NODE_TYPE_LAST_RECYCLE_QUEUES_1_Q_ID,                                                            
    "last_que_num_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_NODE_SET_MULTICAST_RCY_NODE_SET_TREE_NODE_TYPE_LAST_RECYCLE_QUEUES_1_V_ID,                                                            
    "last_que_val_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_QUEUE_OPEN_MULTICAST_RCY_QUEUE_OPEN_ID,                                                            
    "queue_open",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure adds a recycling queue by setting the\r\n"
    "  recycle_queue_ndx to point to the new queue_ndx.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_recycling multicast_rcy_queue_open rcycl_quu_ndx 0\r\n"
    "  quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(23)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_QUEUE_OPEN_MULTICAST_RCY_QUEUE_OPEN_VALID_ID,                                                            
    "rcycl_quu_valid",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  recycle_queue_ndx:\r\n"
    "  Index in the Recycling-Queue table. Range from 0 to 255.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_recycling multicast_rcy_queue_open rcycl_quu_ndx 0\r\n"
    "  quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_QUEUE_OPEN_MULTICAST_RCY_QUEUE_OPEN_RECYCLE_QUEUE_NDX_ID,                                                            
    "rcycl_quu_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  recycle_queue_ndx:\r\n"
    "  Index in the Recycling-Queue table. Range from 0 to 255.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_recycling multicast_rcy_queue_open rcycl_quu_ndx 0\r\n"
    "  quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_QUEUE_OPEN_MULTICAST_RCY_QUEUE_OPEN_QUEUE_NDX_ID,                                                            
    "quu_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  queue_ndx:\r\n"
    "  Queue identifier. Range: 4 - 32K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_recycling multicast_rcy_queue_open rcycl_quu_ndx 0\r\n"
    "  quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_QUEUE_CLOSE_MULTICAST_RCY_QUEUE_CLOSE_ID,                                                            
    "queue_close",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure deletes a recycling queue by setting the FAP -\r\n"
    "  recycle_queue_ndx to preset values.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_recycling multicast_rcy_queue_close rcycl_quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_QUEUE_CLOSE_MULTICAST_RCY_QUEUE_CLOSE_RECYCLE_QUEUE_NDX_ID,                                                            
    "rcycl_quu_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  recycle_queue_ndx:\r\n"
    "  Index in the Recycling-Queue table. Range: 0 - 255.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_recycling multicast_rcy_queue_close rcycl_quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_QUEUE_GET_MULTICAST_RCY_QUEUE_GET_ID,                                                            
    "queue_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_recycling multicast_rcy_queue_get rcycl_quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(25)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_QUEUE_GET_MULTICAST_RCY_QUEUE_GET_RECYCLE_QUEUE_NDX_ID,                                                            
    "rcycl_quu_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  recycle_queue_ndx:\r\n"
    "  Index in the Recycling-Queue table. Range: 0 -16K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_recycling multicast_rcy_queue_get rcycl_quu_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_NODE_GET_MULTICAST_RCY_NODE_GET_ID,                                                            
    "node_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets the tree node with the specified index from MCR table.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_recycling multicast_rcy_node_get tr_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(26)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_MULTICAST_RCY_NODE_GET_MULTICAST_RCY_NODE_GET_TREE_NDX_ID,                                                            
    "tr_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  tree_ndx:\r\n"
    "  The tree node index. Entry in multicast / recycling tree table.\r\n"
    "  Range: 0 to 16K.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api multicast_recycling multicast_rcy_node_get tr_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(26)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_MULTICAST_RECYCLING_ID,                                                            
    "multicast_recycling",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } multicast_recycling*/
#ifdef UI_FABRIC_LINKS/* { fabric_links*/
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_FC_ENABLE_SET_FC_ENABLE_SET_ID,                                                            
    "fc_enable_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure enables/disables flow-control on fabric link. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links fc_enable_set tx_nbl 0 rx_nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(27)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_FC_ENABLE_SET_FC_ENABLE_SET_INFO_TX_ENABLE_ID,                                                            
    "tx_nbl",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.tx_enable:\r\n"
    "  Indicators regarding the TX of link-level flow control. TRUE enables TX flow\r\n"
    "  control. FALSE disable TX flow control.SOC_SAND_BIT 0 - indicates link 0SAND_BIT\r\n"
    "  1 - indicates link 1....SOC_SAND_BIT 23 - indicates link 23.Link should be enable\r\n"
    "  to transmit Fabric-Link Flow-Control, only if it is connected with this\r\n"
    "  specific link to device, that can handle this flow-control.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links fc_enable_set tx_nbl 0 rx_nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(27)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_FC_ENABLE_SET_FC_ENABLE_SET_INFO_RX_ENABLE_ID,                                                            
    "rx_nbl",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.rx_enable:\r\n"
    "  Indicators regarding the RX of link-level flow control. TRUE enables RX flow\r\n"
    "  control. FALSE disable RX flow control. SOC_SAND_BIT 0 - indicates link 0SAND_BIT\r\n"
    "  1 - indicates link 1....SOC_SAND_BIT 23 - indicates link 23\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links fc_enable_set tx_nbl 0 rx_nbl 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(27)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_FC_ENABLE_GET_FC_ENABLE_GET_ID,                                                            
    "fc_enable_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure enables/disables flow-control on fabric link. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links fc_enable_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(28)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_SERDES_RESET_SERDES_RESET_ID,                                                            
    "serdes_reset",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure resets specified SerDes. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links serdes_reset lnk_ndx 0 rst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(29)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_SERDES_RESET_SERDES_RESET_LINK_NDX_ID,                                                            
    "lnk_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  link_ndx:\r\n"
    "  The link to be reset. Range: 0 - 23.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links serdes_reset lnk_ndx 0 rst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(29)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_SERDES_RESET_SERDES_RESET_RESET_ID,                                                            
    "rst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  reset:\r\n"
    "  TRUE - set.\r\n"
    "  FALSE - reset.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links serdes_reset lnk_ndx 0 rst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(29)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_INFO_SET_INFO_SET_ID,                                                            
    "info_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure sets electrical configuration of a link.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links info_set lnk_ndx 0 lcl_lpbck 0 low_drv 0\r\n"
    "  hi_drv 0 drvr_eq 0 drvr_tx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_INFO_SET_INFO_SET_LINK_NDX_ID,                                                            
    "lnk_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  link_ndx:\r\n"
    "  The links id. Range: 0 - 23.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links info_set lnk_ndx 0 lcl_lpbck 0 low_drv 0\r\n"
    "  hi_drv 0 drvr_eq 0 drvr_tx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_INFO_SET_INFO_SET_INFO_LOCAL_LOOPBACK_ID,                                                            
    "lcl_lpbck",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.local_loopback:\r\n"
    "  When 1, the loopback function is enabled. The high-speed output signals from\r\n"
    "  all four transmit channels are routed directly to the inputs of four receive\r\n"
    "  channels. This mode provides a self-test capability.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links info_set lnk_ndx 0 lcl_lpbck 0 low_drv 0\r\n"
    "  hi_drv 0 drvr_eq 0 drvr_tx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_INFO_SET_INFO_SET_INFO_LOW_DRV_ID,                                                            
    "low_drv",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.low_drv:\r\n"
    "  Mode bit to decrease the nominal value of the channel's driver current level.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links info_set lnk_ndx 0 lcl_lpbck 0 low_drv 0\r\n"
    "  hi_drv 0 drvr_eq 0 drvr_tx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_INFO_SET_INFO_SET_INFO_HI_DRV_ID,                                                            
    "hi_drv",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.hi_drv:\r\n"
    "  Mode bit to increase the nominal value of the channel's driver current level.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links info_set lnk_ndx 0 lcl_lpbck 0 low_drv 0\r\n"
    "  hi_drv 0 drvr_eq 0 drvr_tx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_INFO_SET_INFO_SET_INFO_DRIVER_EQ_ID,                                                            
    "drvr_eq",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.driver_eq:\r\n"
    "  4-bit digital word to control the Driver Equalization level.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links info_set lnk_ndx 0 lcl_lpbck 0 low_drv 0\r\n"
    "  hi_drv 0 drvr_eq 0 drvr_tx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_INFO_SET_INFO_SET_INFO_DRIVER_TX_ID,                                                            
    "drvr_tx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.driver_tx:\r\n"
    "  4-bit digital word to control the Driver current level.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links info_set lnk_ndx 0 lcl_lpbck 0 low_drv 0\r\n"
    "  hi_drv 0 drvr_eq 0 drvr_tx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_INFO_GET_INFO_GET_ID,                                                            
    "info_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure sets electrical configuration of a link.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links info_get lnk_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(31)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_INFO_GET_INFO_GET_LINK_NDX_ID,                                                            
    "lnk_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  link_ndx:\r\n"
    "  The links id. Range: 0 - 23.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links info_get lnk_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(31)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_LOGIC_INFO_SET_LOGIC_INFO_SET_ID,                                                            
    "logic_info_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure sets logical configuration on links.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links logic_info_set sgmnttn 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(0)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_LOGIC_INFO_SET_LOGIC_INFO_SET_INFO_SEGMENTATION_ID,                                                            
    "sgmnttn",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.segmentation:\r\n"
    "  Fabric Segmentation improves the fabric performance in fixed size cell\r\n"
    "  systems.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links logic_info_set sgmnttn 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_LOGIC_INFO_GET_LOGIC_INFO_GET_ID,                                                            
    "logic_info_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure sets logical configuration on links.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links logic_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(1)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_SERDES_POWER_DOWN_SET_SERDES_POWER_DOWN_SET_ID,                                                            
    "serdes_power_down_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure powers down / powers up a single link. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links serdes_power_down_set lnk_ndx 0 sht_dwn 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(2)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_SERDES_POWER_DOWN_SET_SERDES_POWER_DOWN_SET_LINK_NDX_ID,                                                            
    "lnk_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  link_ndx:\r\n"
    "  The link to power down / power up. Range: 0 - 23.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links serdes_power_down_set lnk_ndx 0 sht_dwn 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(2)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_SERDES_POWER_DOWN_SET_SERDES_POWER_DOWN_SET_SHUT_DOWN_ID,                                                            
    "sht_dwn",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  shut_down:\r\n"
    "  TRUE - power up link.\r\n"
    "  FALSE - power down link.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links serdes_power_down_set lnk_ndx 0 sht_dwn 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_SERDES_POWER_DOWN_GET_SERDES_POWER_DOWN_GET_ID,                                                            
    "serdes_power_down_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure powers down / powers up a single link. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links serdes_power_down_get lnk_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(3)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_SERDES_POWER_DOWN_GET_SERDES_POWER_DOWN_GET_LINK_NDX_ID,                                                            
    "lnk_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  link_ndx:\r\n"
    "  The link to power down / power up. Range: 0 - 23.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links serdes_power_down_get lnk_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(3)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_COEXIST_MODE_SET_COEXIST_MODE_SET_ID,                                                            
    "coexist_mode_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets coexist parameters in order to distribute traffic more evenly\r\n"
    "  over links.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links coexist_mode_set mul_cxst_nbl 0 uni_cox_bmp_0\r\n"
    "  0 fp20_cxst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(4)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_COEXIST_MODE_SET_COEXIST_MODE_SET_INFO_MUL_COEXIST_ENABLE_ID,                                                            
    "mul_cxst_nbl",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.mul_coexist_enable:\r\n"
    "  If enabled, all multicast ids will be consider as coexist ids. An LFSR will\r\n"
    "  determine the next lsb of the multicast ID.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links coexist_mode_set mul_cxst_nbl 0 uni_cox_bmp_0\r\n"
    "  0 fp20_cxst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_COEXIST_MODE_SET_COEXIST_MODE_SET_INFO_UNI_COEX_BMP_0_ID,                                                            
    "uni_cox_bmp",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_coexist_mode_vals[0],                                            
    (sizeof(fap21v_api_coexist_mode_vals) / sizeof(fap21v_api_coexist_mode_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.uni_coex_bmp[0]:\r\n"
    "  Define, for the first 256 device ids, if they are coexist destination (1 bit\r\n"
    "  for two consequents destination). 4 longs.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links coexist_mode_set mul_cxst_nbl 0 uni_cox_bmp_0\r\n"
    "  0 fp20_cxst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_COEXIST_MODE_SET_COEXIST_MODE_SET_INFO_FAP20_COEXIST_ID,                                                            
    "fp20_cxst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  info.fap20_coexist:\r\n"
    "  Bit per serial link that determines the LSB of the FAPID that the RTP\r\n"
    "  transmits in the reachability cells. This bit should be used when the FAP is\r\n"
    "  configured as SOC_SAND_FAP20V in a system that includes a FAP10V The RTP will transmit\r\n"
    "  over link 'n' a source FAP-ID == {PipeID[10:1], DestCfg[n]} This register\r\n"
    "  corresponds to links 0 to 23.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links coexist_mode_set mul_cxst_nbl 0 uni_cox_bmp_0\r\n"
    "  0 fp20_cxst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_COEXIST_MODE_GET_COEXIST_MODE_GET_ID,                                                            
    "coexist_mode_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets coexist parameters in order to distribute traffic more evenly\r\n"
    "  over links.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links coexist_mode_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(5)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_CONNECTIVITY_MAP_GET_CONNECTIVITY_MAP_GET_ID,                                                            
    "connectivity_map_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This function gets the connectivity map from the device.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links connectivity_map_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(6)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_MODE_SET_MODE_SET_ID,                                                            
    "mode_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Configure the fabric mode to work in one of 3 modes: FE, back to\r\n"
    "  back, mesh or multi stage FE.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links mode_set fbrc_mod 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(7)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_MODE_SET_MODE_SET_FABRIC_MODE_ID,                                                            
    "fbrc_mod",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_FABRIC_LINKS_MODE_rule[0],                                            
    (sizeof(FAP21V_FABRIC_LINKS_MODE_rule) / sizeof(FAP21V_FABRIC_LINKS_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fabric_mode:\r\n"
    "  The fabric mode to apply.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links mode_set fbrc_mod 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_MODE_GET_MODE_GET_ID,                                                            
    "mode_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Configure the fabric mode to work in one of 3 modes: FE, back to\r\n"
    "  back, mesh or multi stage FE.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links mode_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(8)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_MESH_MODE_TOPOLOGY_SET_MESH_MODE_TOPOLOGY_SET_ID,                                                            
    "mesh_mode_topology_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  The function maps mesh topology in the system in order to enable\r\n"
    "  multicast traffic over links\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links mesh_mode_topology_set tplgy_nof_msh_dvcs 0\r\n"
    "  tplgy_tplgs_3_lnks_btmp 0 tplgy_tplgs_3_fap_id 0 tplgy_tplgs_2_lnks_btmp 0\r\n"
    "  tplgy_tplgs_2_fap_id 0 tplgy_tplgs_1_lnks_btmp 0 tplgy_tplgs_1_fap_id 0\r\n"
    "  tplgy_tplgs_0_lnks_btmp 0 tplgy_tplgs_0_fap_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(9)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_MESH_MODE_TOPOLOGY_SET_MESH_MODE_TOPOLOGY_SET_TOPOLOGY_ID,
    "topology",                                                                       
    (PARAM_VAL_RULES *)&Fap21v_api_fabric_links_mesh_mode_topology[0],                                            
    (sizeof(Fap21v_api_fabric_links_mesh_mode_topology) / sizeof(Fap21v_api_fabric_links_mesh_mode_topology[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  topology.nof_mesh_devices:\r\n"
    "  24 long bitmap of the fabric links that connect to the above FAP ID\r\n"
    "  topology.topologies[i].links_bitmap:\r\n"
    "  24 long bitmap of the fabric links that connect to the above FAP ID\r\n"
    "  topology.topologies[i].fap_id:\r\n"
    "  The FAP ID of the FAP in the other side of the bellow links\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links mesh_mode_topology_set  0\r\n"
    "  topology 0 5443 1 34677 20 55677 \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_MESH_MODE_TOPOLOGY_GET_MESH_MODE_TOPOLOGY_GET_ID,                                                            
    "mesh_mode_topology_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  The function maps mesh topology in the system in order to enable\r\n"
    "  multicast traffic over links\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links mesh_mode_topology_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(10)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_STAND_ALONE_FAP_MODE_SET_STAND_ALONE_FAP_MODE_SET_ID,                                                            
    "stand_alone_fap_mode_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Systems that consist only of single FAP in a standalone mode, that switch\r\n"
    "  data only among its ports, require special configuration. Use this function\r\n"
    "  to set/unset this mode. The fap21v_set_single_fap_mode() is to be used with\r\n"
    "  no relation\r\n"
    "  to the presence of FE in the system. If the system is designed to be with ONE\r\n"
    "  fap, set SINGLE-FAP mode. If the system is designed to be with more than one\r\n"
    "  FAP:\r\n"
    "  + If it start from ONE fap, set the FAP to SINGLE-FAP mode.\r\n"
    "  + When at least, one more FAP is in the system, set to NOT in SINGLE-FAP mode.\r\n"
    "  + If the system is with many FAPs, and all FAPs (but one) are\r\n"
    "  removed, set the remaining FAP to be in SINGLE-FAP mode.\r\n"
    "  (again, change it when another FAP is in)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links stand_alone_fap_mode_set sngl_fap_mod 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(11)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_STAND_ALONE_FAP_MODE_SET_STAND_ALONE_FAP_MODE_SET_SINGLE_FAP_MODE_ID,                                                            
    "sngl_fap_mod",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  single_fap_mode:\r\n"
    "  Indicator.\r\n"
    "  TRUE\r\n"
    "  - Device is in SINGLE-FAP mode.\r\n"
    "  FALSE - Device is NOT in SINGLE-FAP mode.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links stand_alone_fap_mode_set sngl_fap_mod 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_STAND_ALONE_FAP_MODE_GET_STAND_ALONE_FAP_MODE_GET_ID,                                                            
    "stand_alone_fap_mode_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Systems that consist only of single FAP in a standalone mode, that switch\r\n"
    "  data only among its ports, require special configuration. Use this function\r\n"
    "  to set/unset this mode. The fap21v_set_single_fap_mode() is to be used with\r\n"
    "  no relation\r\n"
    "  to the presence of FE in the system. If the system is designed to be with ONE\r\n"
    "  fap, set SINGLE-FAP mode. If the system is designed to be with more than one\r\n"
    "  FAP:\r\n"
    "  + If it start from ONE fap, set the FAP to SINGLE-FAP mode.\r\n"
    "  + When at least, one more FAP is in the system, set to NOT in SINGLE-FAP mode.\r\n"
    "  + If the system is with many FAPs, and all FAPs (but one) are\r\n"
    "  removed, set the remaining FAP to be in SINGLE-FAP mode.\r\n"
    "  (again, change it when another FAP is in)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links stand_alone_fap_mode_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(12)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_STAND_ALONE_FAP_MODE_DETECT_STAND_ALONE_FAP_MODE_DETECT_ID,                                                            
    "stand_alone_fap_mode_detect",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This function should be called before calling to to\r\n"
    "  fap21v_set_single_fap_mode()The value in 'single_fap_mode_required' indicates\r\n"
    "  on-line if the device is in single FAP mode.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api fabric_links stand_alone_fap_mode_detect\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(13)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_FABRIC_LINKS_ERRORS_PRINT_ID,                                                            
    "links_errors_print",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(13)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_FABRIC_LINKS_ID,                                                            
    "fabric_links",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                      
    {0, 0, 0, 0, 0, BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13), 0, BIT(18)},
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } fabric_links*/
#ifdef UI_GENERAL/* { general*/
  {                                                                                        
    PARAM_FAP21V_GENERAL_GENERIC_CODE_TEST_ID,                                                            
    "generic_code_test",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(14)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_GENERAL_ID,                                                            
    "general",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                   
    {0, 0, 0, 0, 0, 0, BIT(14)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } general*/
#ifdef UI_PACKET/* { statistics*/
  {                                                                                        
    PARAM_FAP21V_STAT_ALL_COUNTERS_GET_ID,                                                            
    "all_counters_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(19)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_STATISTICS_ID,                                                            
    "statistics",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(19)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } statistics*/
#ifdef UI_PACKET/* { packet*/
  {                                                                                        
    PARAM_FAP21V_PACKET_SEND_SEND_ID,                                                            
    "send",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure transmits a packet to the destination FAP.\r\n"
    "  The packet that gets sent is unicast packet or fabric multicast.\r\n"
    "  The packet is sent directly to the FAP Fabric interface,\r\n"
    "  and is aimed to the other FAP CPU interface,\r\n"
    "  that is, no Queuing or Scheduling is involved.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api packet send pckt_ncst_ndctr 0 pckt_dstntn_fap 0 pckt_pyld_byt_siz\r\n"
    "  0 pckt_payload 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(15)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_PACKET_SEND_SEND_PACKET_UNICAST_INDICATOR_ID,                                                            
    "pckt_ncst_ndctr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  packet.unicast_indicator:\r\n"
    "  Indicator.1 - Unicast packet.0 - Fabric Multicast packet.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api packet send pckt_ncst_ndctr 0 pckt_dstntn_fap 0 pckt_pyld_byt_siz\r\n"
    "  0 pckt_payload 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_PACKET_SEND_SEND_PACKET_DESTINATION_FAP_ID,                                                            
    "pckt_dstntn_fap",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  packet.destination_fap:\r\n"
    "  Target FAP identifier, range: 0-2047, when unicast packet.Fabric Multicast\r\n"
    "  identifier, range: 0-16K-1, when fabric multicast packet.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api packet send pckt_ncst_ndctr 0 pckt_dstntn_fap 0 pckt_pyld_byt_siz\r\n"
    "  0 pckt_payload 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_PACKET_SEND_SEND_PACKET_PAYLOAD_BYTE_SIZE_ID,                                                            
    "pckt_pyld_byt_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  packet.payload_byte_size:\r\n"
    "  Number of bytes to send (related to 'payload').\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api packet send pckt_ncst_ndctr 0 pckt_dstntn_fap 0 pckt_pyld_byt_siz\r\n"
    "  0 pckt_payload 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_PACKET_SEND_SEND_PACKET_PAYLOAD_0_ID,                                                            
    "pckt_payload",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_packet_payload_vals[0],                                            
    (sizeof(fap21v_api_packet_payload_vals) / sizeof(fap21v_api_packet_payload_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  packet.payload[0]:\r\n"
    "  4K byte Data buffer to carry on packet payload\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api packet send pckt_ncst_ndctr 0 pckt_dstntn_fap 0 pckt_pyld_byt_siz\r\n"
    "  0 pckt_payload 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_PACKET_RECV_RECV_ID,                                                            
    "recv",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure receives one packet from the device CPU interface.\r\n"
    "  This procedure reads the packet regardless of its origin. That is,\r\n"
    "  if it was sent from fap21v_send_packet, or any other method.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api packet recv\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(16)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_PACKET_ID,                                                            
    "packet",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(15)|BIT(16)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } packet*/
#ifdef UI_CELL/* { cell*/
  {
    PARAM_FAP21V_API_CELLS_ID,
    "cell",
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)},  
    1,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_READ_DIRECT_ID,
    "read_direct",
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell read_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(17)},  
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_WRITE_DIRECT_ID,
    "write_direct",
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell write_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(18)},  
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_READ_INDIRECT_ID,
    "read_indirect",
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(19)},  
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_WRITE_INDIRECT_ID,
    "write_indirect",
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell write_indirect destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(20)},  
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_CPU2CPU_ID,
    "cpu_to_cpu_write",
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell cpu2cpu destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(21)},  
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_CPU2CPU_READ_ID,
    "cpu_to_cpu_read",
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell cpu2cpu destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(22)},  
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_READ_DIRECT_DEST_ENTITY_TYPE_ID,
    "destination_entity_type",
    (PARAM_VAL_RULES *)&FAP21V_SAND_DEVICE_ENTITY_rule[0],
    (sizeof(FAP21V_SAND_DEVICE_ENTITY_rule) / sizeof(FAP21V_SAND_DEVICE_ENTITY_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell read_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(17)},  
    3,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_READ_DIRECT_LINK_FIP_TO_FE_ID,
    "fip_fe1_fe2_fe3_output_links",
    (PARAM_VAL_RULES *)&FAP21V_CELL_LINKS_NUMBER_rule[0],
    (sizeof(FAP21V_CELL_LINKS_NUMBER_rule) / sizeof(FAP21V_CELL_LINKS_NUMBER_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell read_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(17)},  
    4,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_READ_DIRECT_OFFSET_ID,
    "offset",
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell read_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(17)},  
    5,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_WRITE_DIRECT_DEST_ENTITY_TYPE_ID,
    "destination_entity_type",
    (PARAM_VAL_RULES *)&FAP21V_SAND_DEVICE_ENTITY_rule[0],
    (sizeof(FAP21V_SAND_DEVICE_ENTITY_rule) / sizeof(FAP21V_SAND_DEVICE_ENTITY_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell write_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(18)},  
    3,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_WRITE_DIRECT_LINK_FIP_TO_FE_ID,
    "fip_fe1_fe2_fe3_output_links",
    (PARAM_VAL_RULES *)&FAP21V_CELL_LINKS_NUMBER_rule[0],
    (sizeof(FAP21V_CELL_LINKS_NUMBER_rule) / sizeof(FAP21V_CELL_LINKS_NUMBER_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell write_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(18)},  
    4,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_WRITE_DIRECT_OFFSET_ID,
    "offset",
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell write_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(18)},  
    5,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_WRITE_DIRECT_DATA_IN_ID,
    "data_to_write",
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell write_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(18)},  
    6,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_READ_INDIRECT_DEST_ENTITY_TYPE_ID,
    "destination_entity_type",
    (PARAM_VAL_RULES *)&FAP21V_SAND_DEVICE_ENTITY_rule[0],
    (sizeof(FAP21V_SAND_DEVICE_ENTITY_rule) / sizeof(FAP21V_SAND_DEVICE_ENTITY_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(19)},  
    3,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_READ_INDIRECT_LINK_FIP_TO_FE_ID,
      "fip_fe1_fe2_fe3_output_links",
    (PARAM_VAL_RULES *)&FAP21V_CELL_LINKS_NUMBER_rule[0],
    (sizeof(FAP21V_CELL_LINKS_NUMBER_rule) / sizeof(FAP21V_CELL_LINKS_NUMBER_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(19)},  
    4,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_READ_INDIRECT_OFFSET_ID,
    "offset",
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(19)},  
    5,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_WRITE_INDIRECT_DEST_ENTITY_TYPE_ID,
    "destination_entity_type",
    (PARAM_VAL_RULES *)&FAP21V_SAND_DEVICE_ENTITY_rule[0],
    (sizeof(FAP21V_SAND_DEVICE_ENTITY_rule) / sizeof(FAP21V_SAND_DEVICE_ENTITY_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell write_indirect destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(20)},  
    3,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_WRITE_INDIRECT_LINK_FIP_TO_FE_ID,
    "fip_fe1_fe2_fe3_output_links",
    (PARAM_VAL_RULES *)&FAP21V_CELL_LINKS_NUMBER_rule[0],
    (sizeof(FAP21V_CELL_LINKS_NUMBER_rule) / sizeof(FAP21V_CELL_LINKS_NUMBER_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell write_indirect destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(20)},  
    4,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_WRITE_INDIRECT_OFFSET_ID,
    "offset",
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell write_indirect destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(20)},  
    5,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_WRITE_INDIRECT_DATA_IN_ID,
    "data_to_write",
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell write_indirect destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(20)},  
    6,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_CPU2CPU_DEST_ENTITY_TYPE_ID,
    "destination_entity_type",
    (PARAM_VAL_RULES *)&FAP21V_SAND_DEVICE_ENTITY_rule[0],
    (sizeof(FAP21V_SAND_DEVICE_ENTITY_rule) / sizeof(FAP21V_SAND_DEVICE_ENTITY_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(21)},  
    3,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_CPU2CPU_LINK_FIP_TO_FE_ID,
    "fip_fe1_fe2_fe3_output_links",
    (PARAM_VAL_RULES *)&FAP21V_CELL_LINKS_NUMBER_rule[0],
    (sizeof(FAP21V_CELL_LINKS_NUMBER_rule) / sizeof(FAP21V_CELL_LINKS_NUMBER_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(21)},  
    4,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_CELL_CPU2CPU_DATA_IN_ID,
    "data_in",
    (PARAM_VAL_RULES *)&FAP21V_CELL_CPU2CPU_DATA_IN_rule[0],
    (sizeof(FAP21V_CELL_CPU2CPU_DATA_IN_rule) / sizeof(FAP21V_CELL_CPU2CPU_DATA_IN_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  fap21v_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(21)},  
    LAST_ORDINAL,
    (VAL_PROC_PTR)NULL
  },


#endif/* { cell*/

#ifdef UI_SSR/* { ssr*/
  {                                                                                        
    PARAM_FAP21V_SAND_SSR_GET_BUFF_SIZE_GET_BUFF_SIZE_ID,                                                            
    "get_buff_size",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure returns with buffer size to be passed to the\r\n"
    "  'soc_sand_ssr_to_buff()' function.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ssr get_buff_size\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(20)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_SSR_TO_BUFF_TO_BUFF_ID,                                                            
    "to_buff",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure loads to 'store_buff' internal information\r\n"
    "  regarding the soc_sand module. It should be called once. Before calling\r\n"
    "  this function, all SOC_SAND/device APIs call must be stopped.\r\n"
    "  It is recommended that this buffer have some protection (CRC). \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ssr to_buff bff_byt_siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(21)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_SSR_TO_BUFF_TO_BUFF_BUFF_BYTE_SIZE_ID,                                                            
    "bff_byt_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  buff_byte_size:\r\n"
    "  Size in bytes of the 'store_buff' buffer.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ssr to_buff bff_byt_siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_SSR_FROM_BUFF_FROM_BUFF_ID,                                                            
    "from_buff",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure driver loads internal information from 'store_buff'\r\n"
    "  regarding the soc_sand module. It should be called once.\r\n"
    "  It is recommended that this buffer have some protection (CRC). \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ssr from_buff str_bff 0 bff_byt_siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(22)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_SSR_FROM_BUFF_FROM_BUFF_STORE_BUFF_ID,                                                            
    "str_bff",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  store_buff:\r\n"
    "  Buffer to load information from.\r\n"
    "  Size of the buffer in bytes is 'buff_byte_size'.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ssr from_buff str_bff 0 bff_byt_siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_SSR_FROM_BUFF_FROM_BUFF_BUFF_BYTE_SIZE_ID,                                                            
    "bff_byt_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  buff_byte_size:\r\n"
    "  Size in bytes of the 'store_buff' buffer.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ssr from_buff str_bff 0 bff_byt_siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SSR_GET_BUFF_SIZE_GET_BUFF_SIZE_ID,                                                            
    "get_buff_size",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure returns with buffer size to be passed to\r\n"
    "  'fap21v_ssr_to_buff()' function.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ssr get_buff_size\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(23)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SSR_TO_BUFF_TO_BUFF_ID,                                                            
    "to_buff",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure loads to 'store_buff' with internal information\r\n"
    "  regarding SOC_SAND_FAP21V module. It should be called once. Before calling\r\n"
    "  this function, all SOC_SAND/device APIs call must be stopped.\r\n"
    "  It is recommended that this buffer have some protection (CRC). \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ssr to_buff bff_byt_siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(24)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SSR_TO_BUFF_TO_BUFF_BUFF_BYTE_SIZE_ID,                                                            
    "bff_byt_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  buff_byte_size:\r\n"
    "  Size in bytes of the 'store_buff' buffer.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ssr to_buff bff_byt_siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SSR_FROM_BUFF_FROM_BUFF_ID,                                                            
    "from_buff",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure driver loads internal information from 'store_buff'\r\n"
    "  regarding SOC_SAND_FAP21V module. It should be called once.\r\n"
    "  It is recommended that this buffer have some protection (CRC). \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ssr from_buff str_bff 0 bff_byt_siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(25)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SSR_FROM_BUFF_FROM_BUFF_STORE_BUFF_ID,                                                            
    "str_bff",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  store_buff:\r\n"
    "  Buffer to load information from.\r\n"
    "  Size of the buffer in bytes is 'buff_byte_size'.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ssr from_buff str_bff 0 bff_byt_siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SSR_FROM_BUFF_FROM_BUFF_BUFF_BYTE_SIZE_ID,                                                            
    "bff_byt_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  buff_byte_size:\r\n"
    "  Size in bytes of the 'store_buff' buffer.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api ssr from_buff str_bff 0 bff_byt_siz 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_SSR_ID,                                                            
    "ssr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } ssr*/
#ifdef UI_CALLBACK/* { callback*/
  {                                                                                        
    PARAM_FAP21V_REGISTER_CALLBACK_FUNCTION_FUNCTION_ID,                                                            
    "function",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure registers the asked function ('function_id')\r\n"
    "  to be called later on (interrupt or periodically)\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback function fnctn_ndx 0 usr_cllbck_strctr 0 cllbck_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(26)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_REGISTER_CALLBACK_FUNCTION_FUNCTION_FUNCTION_NDX_ID,                                                            
    "fnctn_ndx",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  function_ndx:\r\n"
    "  Identifier of API service to be invoked.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback function fnctn_ndx 0 usr_cllbck_strctr 0 cllbck_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(26)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_REGISTER_CALLBACK_FUNCTION_FUNCTION_USER_CALLBACK_STRUCTURE_ID,                                                            
    "usr_cllbck_strctr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  user_callback_structure:\r\n"
    "  Parameter the function induced by 'function_id', and user\r\n"
    "  supplied callback function\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback function fnctn_ndx 0 usr_cllbck_strctr 0 cllbck_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(26)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_REGISTER_CALLBACK_FUNCTION_FUNCTION_CALLBACK_ID_ID,                                                            
    "cllbck_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  callback_id:\r\n"
    "  Loaded with identifier to the callback service. To be used to\r\n"
    "  unregistered this service.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback function fnctn_ndx 0 usr_cllbck_strctr 0 cllbck_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(26)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_UNREGISTER_CALLBACK_FUNCTION_FUNCTION_ID,                                                            
    "function",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure stop an ongoing deferred service, using the\r\n"
    "  'callback_id' that was handed over to the user when the service\r\n"
    "  was registered.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback function drvr_cllbck_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(27)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_UNREGISTER_CALLBACK_FUNCTION_FUNCTION_DRIVER_CALLBACK_ID_ID,                                                            
    "drvr_cllbck_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  driver_callback_id:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback function drvr_cllbck_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(27)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_UNREGISTER_ALL_CALLBACK_FUNCTIONS_FUNCTIONS_ID,                                                            
    "functions",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  This procedure stop an all ongoing deferred services from the\r\n"
    "  device. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback functions\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(28)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_MALLOC_SAND_OS_MALLOC_ID,                                                            
    "soc_sand_os_malloc",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Allocate a block of memory from the system memory partition. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_malloc\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(29)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_FREE_SAND_OS_FREE_ID,                                                            
    "soc_sand_os_free",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Free a block of memory. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_free\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(30)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_TASK_DELAY_SAND_OS_TASK_DELAY_ID,                                                            
    "soc_sand_os_task_delay",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Delay a task from executing. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_task_delay\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(31)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_NANO_SLEEP_SAND_OS_NANO_SLEEP_ID,                                                            
    "soc_sand_os_nano_sleep",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Delay a task from executing (nanoseconds resolution). \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_nano_sleep\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(0)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_MSG_Q_CREATE_SAND_OS_MSG_Q_CREATE_ID,                                                            
    "soc_sand_os_msg_q_create",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Create a message queue for inter-task communication. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_msg_q_create\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(1)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_MSG_Q_RECV_SAND_OS_MSG_Q_RECV_ID,                                                            
    "soc_sand_os_msg_q_recv",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Receive a message from message queue.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_msg_q_recv\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(2)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_MSG_Q_SEND_SAND_OS_MSG_Q_SEND_ID,                                                            
    "soc_sand_os_msg_q_send",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Send a message to message queue.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_msg_q_send\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(3)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_MSG_Q_DELETE_SAND_OS_MSG_Q_DELETE_ID,                                                            
    "soc_sand_os_msg_q_delete",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Delete an existing message queue. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_msg_q_delete\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(4)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_MUTEX_CREATE_SAND_OS_MUTEX_CREATE_ID,                                                            
    "soc_sand_os_mutex_create",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Create a semaphore for inter-task synchronization. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_mutex_create\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(5)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_MUTEX_TAKE_SAND_OS_MUTEX_TAKE_ID,                                                            
    "soc_sand_os_mutex_take",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Take a semaphore (capture).\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_mutex_take\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(6)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_MUTEX_GIVE_SAND_OS_MUTEX_GIVE_ID,                                                            
    "soc_sand_os_mutex_give",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Give up a semaphore.\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_mutex_give\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(7)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_MUTEX_DELETE_SAND_OS_MUTEX_DELETE_ID,                                                            
    "soc_sand_os_mutex_delete",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Delete an existing semaphore. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_mutex_delete\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(8)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_TASK_SPAWN_SAND_OS_TASK_SPAWN_ID,                                                            
    "soc_sand_os_task_spawn",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Spawn a task. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_task_spawn\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(9)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_TASK_DELETE_SAND_OS_TASK_DELETE_ID,                                                            
    "soc_sand_os_task_delete",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Delete an existing task. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_task_delete\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(10)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_DISABLE_INTERRUPT_SAND_OS_DISABLE_INTERRUPT_ID,                                                            
    "soc_sand_os_disable_interrupt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Disable interrupts. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_disable_interrupt\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(11)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_SAND_OS_ENABLE_INTERRUPT_SAND_OS_ENABLE_INTERRUPT_ID,                                                            
    "soc_sand_os_enable_interrupt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Operating system service: Enable interrupts. \r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api callback soc_sand_os_enable_interrupt\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(12)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_CALLBACK_ID,                                                            
    "callback",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } callback*/
#ifdef UI_DIAGNOSTICS/* { diagnostics*/
  {                                                                                        
    PARAM_FAP21V_DIAG_PRBS_MODE_SET_DIAG_PRBS_MODE_SET_ID,                                                            
    "prbs_mode_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_prbs_mode_set prbs_stp_prbs_gnrtr_chckr_nit_0_vld\r\n"
    "  0 prbs_stp_prbs_gnrtr_chckr_nit_0_lcl_lpbck_on 0\r\n"
    "  prbs_stp_prbs_gnrtr_chckr_nit_0_ctvt_prbs_chckr 0\r\n"
    "  prbs_stp_prbs_gnrtr_chckr_nit_0_ctvt_prbs_gnrtr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(14)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_PRBS_MODE_SET_DIAG_PRBS_MODE_SET_PRBS_SETUP_PRBS_GENERATOR_CHECKER_UNIT_0_VALID_ID,                                                            
    "prbs_stp_prbs_gnrtr_chckr_nit_0_vld",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prbs_setup.prbs_generator_checker_unit[0].valid:\r\n"
    "  Flag. Indicates whether this entry is valid. Case Zero -- not valid and this\r\n"
    "  checker unit is skipped\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_prbs_mode_set prbs_stp_prbs_gnrtr_chckr_nit_0_vld\r\n"
    "  0 prbs_stp_prbs_gnrtr_chckr_nit_0_lcl_lpbck_on 0\r\n"
    "  prbs_stp_prbs_gnrtr_chckr_nit_0_ctvt_prbs_chckr 0\r\n"
    "  prbs_stp_prbs_gnrtr_chckr_nit_0_ctvt_prbs_gnrtr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_PRBS_MODE_SET_DIAG_PRBS_MODE_SET_PRBS_SETUP_PRBS_GENERATOR_CHECKER_UNIT_0_LOCAL_LOOPBACK_ON_ID,                                                            
    "prbs_stp_prbs_gnrtr_chckr_nit_0_lcl_lpbck_on",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prbs_setup.prbs_generator_checker_unit[0].local_loopback_on:\r\n"
    "  Flag. If non-zero indicates local loop on the link. I.e., from FAP core to\r\n"
    "  the MACs and back to the core. No Seres are in the game in this mode\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_prbs_mode_set prbs_stp_prbs_gnrtr_chckr_nit_0_vld\r\n"
    "  0 prbs_stp_prbs_gnrtr_chckr_nit_0_lcl_lpbck_on 0\r\n"
    "  prbs_stp_prbs_gnrtr_chckr_nit_0_ctvt_prbs_chckr 0\r\n"
    "  prbs_stp_prbs_gnrtr_chckr_nit_0_ctvt_prbs_gnrtr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_PRBS_MODE_SET_DIAG_PRBS_MODE_SET_PRBS_SETUP_PRBS_GENERATOR_CHECKER_UNIT_0_ACTIVATE_PRBS_CHECKER_ID,                                                            
    "prbs_stp_prbs_gnrtr_chckr_nit_0_ctvt_prbs_chckr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prbs_setup.prbs_generator_checker_unit[0].activate_prbs_checker:\r\n"
    "  Flag. If non-zero then PRBS checker is activated on link specified below\r\n"
    "  ('prbs_link') expecting continuous pseudo random bit stream\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_prbs_mode_set prbs_stp_prbs_gnrtr_chckr_nit_0_vld\r\n"
    "  0 prbs_stp_prbs_gnrtr_chckr_nit_0_lcl_lpbck_on 0\r\n"
    "  prbs_stp_prbs_gnrtr_chckr_nit_0_ctvt_prbs_chckr 0\r\n"
    "  prbs_stp_prbs_gnrtr_chckr_nit_0_ctvt_prbs_gnrtr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_PRBS_MODE_SET_DIAG_PRBS_MODE_SET_PRBS_SETUP_PRBS_GENERATOR_CHECKER_UNIT_0_ACTIVATE_PRBS_GENERATOR_ID,                                                            
    "prbs_stp_prbs_gnrtr_chckr_nit_0_ctvt_prbs_gnrtr",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prbs_setup.prbs_generator_checker_unit[0].activate_prbs_generator:\r\n"
    "  Flag. If non-zero then PRBS generator is activated on link specified below\r\n"
    "  ('prbs_link') creating continuous pseudo random bit stream\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_prbs_mode_set prbs_stp_prbs_gnrtr_chckr_nit_0_vld\r\n"
    "  0 prbs_stp_prbs_gnrtr_chckr_nit_0_lcl_lpbck_on 0\r\n"
    "  prbs_stp_prbs_gnrtr_chckr_nit_0_ctvt_prbs_chckr 0\r\n"
    "  prbs_stp_prbs_gnrtr_chckr_nit_0_ctvt_prbs_gnrtr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_PRBS_MODE_GET_DIAG_PRBS_MODE_GET_ID,                                                            
    "prbs_mode_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_prbs_mode_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(15)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_PRBS_TEST_INFO_CLEAR_DIAG_PRBS_TEST_INFO_CLEAR_ID,                                                            
    "prbs_test_info_clear",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_prbs_test_info_clear\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(16)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_PRBS_TEST_START_DIAG_PRBS_TEST_START_ID,                                                            
    "prbs_test_start",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_prbs_test_start\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(17)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_PRBS_TEST_STOP_DIAG_PRBS_TEST_STOP_ID,                                                            
    "prbs_test_stop",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_prbs_test_stop\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(18)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_BER_COUNTERS_GET_DIAG_BER_COUNTERS_GET_ID,                                                            
    "ber_counters_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_ber_counters_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(19)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_QDP_INIT_SEQUENCE_DIAG_QDP_INIT_SEQUENCE_ID,                                                            
    "QDP_init_sequence",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_QDP_init_sequence wit_tim_in_nno_sec 0 do_drm_tst\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(20)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_QDP_INIT_SEQUENCE_DIAG_QDP_INIT_SEQUENCE_WAIT_TIME_IN_NANO_SEC_ID,                                                            
    "wit_tim_in_nno_sec",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  wait_time_in_nano_sec:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_QDP_init_sequence wit_tim_in_nno_sec 0 do_drm_tst\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_QDP_INIT_SEQUENCE_DIAG_QDP_INIT_SEQUENCE_SILENT_ID,                                                            
    "slnt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  wait_time_in_nano_sec:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_QDP_init_sequence wit_tim_in_nno_sec 0 do_drm_tst\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_QDP_INIT_SEQUENCE_DIAG_QDP_INIT_SEQUENCE_DO_DRAM_TEST_ID,                                                            
    "do_drm_tst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  do_dram_test:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_QDP_init_sequence wit_tim_in_nno_sec 0 do_drm_tst\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_CONF_SAVE_DIAG_LBG_CONF_SAVE_START_ID,                                                            
    "lbg_conf_save_start",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_conf_save slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(21)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_CONF_SAVE_DIAG_LBG_CONF_SAVE_START_SILENT_ID,                                                            
    "slnt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  silent:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_conf_save slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {
    PARAM_FAP21V_DIAG_LBG_PACKET_SEND_DIAG_LBG_PACKET_SEND_ID,                                                            
    "lbg_packet_send",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_packet_send pkt_byt_siz 0 nof_pkt 0 pad_dt_0\r\n"
    "  0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(23)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_PACKET_SEND_DIAG_LBG_PACKET_SEND_PKT_BYTE_SIZE_ID,                                                            
    "pkt_byt_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pkt_byte_size:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_packet_send pkt_byt_siz 0 nof_pkt 0 pad_dt_0\r\n"
    "  0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_PACKET_SEND_DIAG_LBG_PACKET_SEND_NOF_PKT_ID,                                                            
    "nof_pkt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  nof_pkt:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_packet_send pkt_byt_siz 0 nof_pkt 0 pad_dt_0\r\n"
    "  0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_PACKET_SEND_DIAG_LBG_PACKET_SEND_PAD_DATA_0_ID,                                                            
    "pad_data",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_pad_data_vals[0],                                            
    (sizeof(fap21v_api_pad_data_vals) / sizeof(fap21v_api_pad_data_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pad_data[0]:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_packet_send pkt_byt_siz 0 nof_pkt 0 pad_dt_0\r\n"
    "  0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_PACKET_SEND_DIAG_LBG_PACKET_SEND_SILENT_ID,                                                            
    "slnt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  silent:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_packet_send pkt_byt_siz 0 nof_pkt 0 pad_dt_0\r\n"
    "  0 slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_RATE_GET_DIAG_LBG_RATE_GET_ID,                                                            
    "lbg_rate_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_rate_get vrg_pkt_byt_siz 0 tim_to_wit_in_mls 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(24)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_RATE_GET_DIAG_LBG_RATE_GET_AVRG_PKT_BYTE_SIZE_ID,                                                            
    "vrg_pkt_byt_siz",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  avrg_pkt_byte_size:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_rate_get vrg_pkt_byt_siz 0 tim_to_wit_in_mls 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_RATE_GET_DIAG_LBG_RATE_GET_TIME_TO_WAIT_IN_MILIS_ID,                                                            
    "tim_to_wit_in_mls",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  time_to_wait_in_milis:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_rate_get vrg_pkt_byt_siz 0 tim_to_wit_in_mls 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_CONF_RESTORE_DIAG_LBG_CONF_RESTORE_ID,                                                            
    "lbg_conf_restore",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_conf_restore slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(25)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_CONF_RESTORE_DIAG_LBG_CONF_RESTORE_SILENT_ID,                                                            
    "slnt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  silent:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_conf_restore slnt 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_SEND_PKT_TEST_DIAG_LBG_SEND_PKT_TEST_ID,                                                            
    "lbg_send_pkt_test",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_send_pkt_test wit_tim_in_nno_sec 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(26)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_SEND_PKT_TEST_DIAG_LBG_SEND_PKT_TEST_SILENT_ID,                                                            
    "slnt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  wait_time_in_nano_sec:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_send_pkt_test wit_tim_in_nno_sec 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(26)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_SEND_PKT_TEST_DIAG_LBG_SEND_PKT_TEST_WAIT_TIME_IN_NANO_SEC_ID,                                                            
    "wit_tim_in_nno_sec",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  wait_time_in_nano_sec:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_send_pkt_test wit_tim_in_nno_sec 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(26)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_TEST_DIAG_LBG_TEST_ID,                                                            
    "lbg_test",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_test\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(27)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_IDDR_SET_DIAG_IDDR_SET_ID,                                                            
    "iddr_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_iddr_set drm_ffst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(28)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_IDDR_SET_DIAG_IDDR_SET_DRAM_OFFSET_ID,                                                            
    "drm_ffst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dram_offset:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_iddr_set drm_ffst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(28)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_IDDR_SET_DIAG_IDDR_SET_DATA_0_ID,                                                            
    "data",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_diag_iddr_vals[0],                                            
    (sizeof(fap21v_api_diag_iddr_vals) / sizeof(fap21v_api_diag_iddr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  data[0]:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_iddr_set drm_ffst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(28)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_IDDR_GET_DIAG_IDDR_GET_ID,                                                            
    "iddr_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_iddr_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(29)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_IDDR_GET_DIAG_IDDR_GET_DRAM_OFFSET_ID,                                                            
    "drm_ffst",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dram_offset:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_iddr_get drm_ffst 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_REGS_DUMP_DIAG_REGS_DUMP_START_ID,                                                            
    "start",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_regs_dump\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(31)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_REGS_DUMP_DIAG_REGS_DUMP_END_ID,                                                            
    "end",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                          
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_regs_dump\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(31)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_REGS_DUMP_DIAG_REGS_DUMP_ID,                                                            
    "regs_dump",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_regs_dump\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(31)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_TBLS_DUMP_DIAG_TBLS_DUMP_ID,                                                            
    "tbls_dump",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_tbls_dump prnt_zro 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(0)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_DUMP_TBLS_TABLE_DUMP_MODE_ID,                                                            
    "mode",                                                                       
    (PARAM_VAL_RULES *)&FAP21V_TBLS_DUMP_MODE_rule[0],                                            
    (sizeof(FAP21V_TBLS_DUMP_MODE_rule) / sizeof(FAP21V_TBLS_DUMP_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                                      
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_TBLS_DUMP_DIAG_TBLS_DUMP_PRINT_ZERO_ID,                                                            
    "prnt_zro",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  print_zero:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_tbls_dump prnt_zro 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_HEADER_PRINT_DIAG_HEADER_PRINT_ID,                                                            
    "header_print",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_header_print dt 0 shrt_frmt 0 prnt_new_lin 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(1)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_HEADER_PRINT_DIAG_HEADER_PRINT_DATA_ID,                                                            
    "dt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  data:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_header_print dt 0 shrt_frmt 0 prnt_new_lin 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_HEADER_PRINT_DIAG_HEADER_PRINT_SHORT_FORMAT_ID,                                                            
    "shrt_frmt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  short_format:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_header_print dt 0 shrt_frmt 0 prnt_new_lin 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_HEADER_PRINT_DIAG_HEADER_PRINT_PRINT_NEW_LINE_ID,                                                            
    "prnt_new_lin",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  print_new_line:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_header_print dt 0 shrt_frmt 0 prnt_new_lin 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_HEADER_LAST_PACKET_HEADER_PRINT_DIAG_HEADER_LAST_PACKET_HEADER_PRINT_ID,                                                            
    "header_last_packet_header_print",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_header_last_packet_header_print\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(2)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_RATE_DISPLAY_DIAG_LBG_RATE_DISPLAY_ID,                                                            
    "lbg_rate_display",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_rate_display\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(3)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_RATE_VALIDATE_DIAG_LBG_RATE_VALIDATE_ID,                                                            
    "lbg_rate_validate",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_rate_validate xpctd_rte_kb 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_LBG_RATE_VALIDATE_DIAG_LBG_RATE_VALIDATE_EXPECTED_RATE_KB_ID,                                                            
    "xpctd_rte_kb",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  expected_rate_kb:\r\n"
    "",
#ifdef UI_FAP21V_API_ADD_EXAMPLE
    "Ex:\r\n"                                                                    
    "  fap21v_api diagnostics diag_lbg_rate_validate xpctd_rte_kb 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_CLEAR_AND_PRINT_ALL_COUNTERS_AND_INTERRUPTS_PRINT_ID,                                                            
    "print_interrupt",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    ""
    ""
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_CLEAR_AND_PRINT_ALL_COUNTERS_AND_INTERRUPTS_ID,                                                            
    "clear_and_print_all_counters_and_interrupts",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    ""
    ""
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(7)},                                                                             
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_PACKET_WALKTROUGH_PRINT_ID,                                                            
    "packet_walktrough_print",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    ""
    ""
    ""
    "",
    ""                                                                    
    ""
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},                                                                             
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_PACKET_WALKTROUGH_PRINT_DEST_ID,                                                            
    "dest_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    ""
    ""
    ""
    "",
    ""                                                                    
    ""
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},                                                                             
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_PACKET_WALKTROUGH_PRINT_CLASS_ID,                                                            
    "class_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},                                                                             
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_ALL2ALL_PACKET_WALKTROUGH_PRINT_ID,                                                            
    "all2all_packet_walktrough_print",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(13)},                                                                             
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_ALL2ALL_PACKET_WALKTROUGH_PRINT_S_ID,                                                            
    "from_dest",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(13)},                                                                             
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_DIAG_ALL2ALL_PACKET_WALKTROUGH_PRINT_E_ID,                                                            
    "to_dest",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(13)},                                                                             
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_DIAG_ZBT_GET_ID,                                                            
    "zbt_get",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(23)},                                                                             
    2,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_DIAG_ZBT_GET_OFFSET_ID,                                                            
    "offset",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(23)},                                                                             
    3,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_DIAG_ZBT_TEST_ID,                                                            
    "zbt_test",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(24)},                                                                             
    2,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_DIAG_ZBT_TEST_NOF_LINES_ID,                                                            
    "nof_addr_lines",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(24)},                                                                             
    3,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_DIAG_ZBT_TEST_IF_ID,                                                            
    "if_test",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(24)},                                                                             
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_DIAG_ZBT_SET_ID,                                                            
    "zbt_set",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(22)},                                                                             
    2,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_DIAG_ZBT_SET_OFFSET_ID,                                                            
    "offset",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(22)},                                                                             
    3,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_DIAG_ZBT_SET_DATA_1_ID,                                                            
    "data_1",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(22)},                                                                             
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_DIAG_ZBT_SET_DATA_2_ID,                                                            
    "data_2",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "", 
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(22)},                                                                             
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_DIAGNOSTICS_ID,                                                            
    "diagnostics",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(25)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(7)|BIT(12)|BIT(13)|BIT(22)|BIT(23) | BIT(24)},
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_UI_UTILS_DEVICE_ID_ID,
    "default_dev_id",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],                                            
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(22)},
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_FAP21V_API_UI_UTILS_ATM_ID,
    "atm_test",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(16)},
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {
    PARAM_FAP21V_API_DIRECT_ADDRESS_SHIFT_ID,
    "shift",
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,
    HAS_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)&fap21v_api_free_vals,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_API_DIRECT_ADDRESS_MASK_ID,
    "mask",
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,
    HAS_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)&fap21v_api_free_vals,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_API_DIRECT_ADDRESS_ID,
    "offset",
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(25)},
    3,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_API_DIRECT_WRITE_ID,
    "direct_write",
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(25)},
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_API_DIRECT_READ_ADDRESS_ID,
    "offset",
    (PARAM_VAL_RULES *)&fap21v_api_free_vals[0],
    (sizeof(fap21v_api_free_vals) / sizeof(fap21v_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(26)},
    3,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_API_DIRECT_READ_ID,
    "direct_read",
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(26)},
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_FAP21V_API_ACCESS_ID,
    "access",
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(25)|BIT(26)},
    1,
    (VAL_PROC_PTR)NULL
  },
  {                                                                                        
    PARAM_FAP21V_API_UI_UTILS_ID,                                                            
    "ui_utils",                                                                       
    (PARAM_VAL_RULES *)&fap21v_api_empty_vals[0],                                            
    (sizeof(fap21v_api_empty_vals) / sizeof(fap21v_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(16)|BIT(22)},
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } diagnostics*/
                                                                                           
/*                                                                                         
 * Last element. Do not remove. Last bit in use: {0, 0, 0, 0, 0, 0, 0, 0, BIT(29)},                                                        
 */                                                                                        
  {                                                                                        
    PARAM_END_OF_LIST                                                                      
  }                                                                                        
}                                                                                          
#endif                                                                                     
;  
                                                                   
/* } */                                                             
                                                                    
                                                                    
#ifdef _MSC_VER                                                     
  #pragma pack(pop)                                                 
#endif                                                              
                                                                    
#ifdef  __cplusplus                                                 
}                                                                   
#endif                                                              
                                                                    
                                                                    
/* } __UI_ROM_DEFI_FAP21V_API_INCLUDED__*/                        
#endif                                                              
