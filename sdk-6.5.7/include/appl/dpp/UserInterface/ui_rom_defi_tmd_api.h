/* $Id: ui_rom_defi_tmd_api.h,v 1.5 Broadcom SDK $
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
*/


#ifndef __UI_ROM_DEFI_TMD_API_INCLUDED__
/* { */
#define __UI_ROM_DEFI_TMD_API_INCLUDED__

#include <soc/dpp/SAND/Utils/sand_header.h>

#include <appl/dpp/UserInterface/ui_pure_defi_tmd_api.h>

#include <soc/dpp/TMD/tmd_api_mgmt.h>
#include <soc/dpp/TMD/tmd_api_general.h>
#include <soc/dpp/TMD/tmd_api_ports.h>
#include <soc/dpp/TMD/tmd_api_diagnostics.h>
#include <soc/dpp/TMD/tmd_api_ingress_packet_queuing.h>
#include <soc/dpp/TMD/tmd_api_ingress_traffic_mgmt.h>
#include <soc/dpp/TMD/tmd_api_ingress_scheduler.h>
#include <soc/dpp/TMD/tmd_api_egr_queuing.h>
#include <soc/dpp/TMD/tmd_api_ofp_rates.h>
#include <soc/dpp/TMD/tmd_api_end2end_scheduler.h>
#include <soc/dpp/TMD/tmd_api_multicast_ingress.h>
#include <soc/dpp/TMD/tmd_api_multicast_egress.h>
#include <soc/dpp/TMD/tmd_api_multicast_fabric.h>
#include <soc/dpp/TMD/tmd_api_fabric.h>
#include <soc/dpp/TMD/tmd_api_header_parsing_utils.h>
#include <soc/dpp/TMD/tmd_api_packet.h>
#include <soc/dpp/TMD/tmd_api_reg_access.h>
#include <soc/dpp/TMD/tmd_api_cell.h>
#include <soc/dpp/TMD/tmd_api_debug.h>
/* #define DEFAULT_SECTION */

#undef UI_UNDEF
#undef UI_UNDEF_TEMP
#define UI_UTILS
#define UI_MGMT
#define UI_PORTS
/* #define UI_NIF */
#define UI_DIAGNOSTICS
#define UI_INGRESS_PACKET_QUEUING
#define UI_INGRESS_TRAFFIC_MGMT
#define UI_INGRESS_SCHEDULER
#define UI_EGR_QUEUING
#define UI_OFP_RATES
#define UI_END2END_SCHEDULER
/*#define UI_AUTO_QUEUE_FLOW_MGMT*/
#define UI_MULTICAST_INGRESS
#define UI_MULTICAST_EGRESS
#define UI_MULTICAST_FABRIC
#define UI_SERDES
#define UI_SERDES_UTILS
#define UI_FABRIC
#define UI_FLOW_CONTROL
#define UI_INGRESS_HEADER_PARSING
#define UI_TMD_HEADER_PARSING_UTILS
#define UI_PACKET
#define UI_CELL
#define UI_ATM
/* #define UI_INTERRUPTS */
/* #define UI_STATISTICS */
/* #define UI_PACKET */
/* #define UI_SSR */
#define UI_REG_ACCESS
#define UI_DEBUG
#define UI_TBL_ACCESS

 /*
  * ENUM RULES
  * {
  */
/********************************************************/
/********************************************************/


/********************************************************/
EXTERN CONST
   PARAM_VAL_RULES
     tmd_addr_and_data[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0 ,0,
          /*
           * Number of times this value can be repeated (i.e.,
           * value is an array). Must be at least 1!
           */
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

#if UI_UNDEF_TEMP
EXTERN CONST
   PARAM_VAL_RULES
     TMD_REVISION_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "rev_1",
    {
      {
        TMD_REVISION_ID_1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_REVISION_ID.TMD_REVISION_ID_1:\r\n"
        "  Tmd device revision: 1\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#endif /* UI_UNDEF_TEMP */

EXTERN CONST
   PARAM_VAL_RULES
     tmd_api_packet_payload_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        0xff,
        0,
        TMD_DIAG_LBG_PAYLOAD_BYTE_SIZE,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#if UI_UNDEF_TEMP
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_REVISION_SUB_TYPE_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "type_88210",
    {
      {
        TMD_REVISION_TYPE_88210,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_REVISION_SUB_TYPE_ID.TMD_REVISION_TYPE_88210:\r\n"
        "  Device type: DN-88210-DV - 1 x OC768c\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "type_88220",
    {
      {
        TMD_REVISION_TYPE_88220,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_REVISION_SUB_TYPE_ID.TMD_REVISION_TYPE_88220:\r\n"
        "  Device type: DN-88220-DV - 2 x OC192 or 2 x 10GE \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "type_88230",
    {
      {
        TMD_REVISION_TYPE_88230,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_REVISION_SUB_TYPE_ID.TMD_REVISION_TYPE_88230:\r\n"
        "  Device type: DN-88230-DV- 8 x 10GE or 4 x OC192\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "type_88330",
    {
      {
        TMD_REVISION_TYPE_88330,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_REVISION_SUB_TYPE_ID.TMD_REVISION_TYPE_88330:\r\n"
        "  Device type: DN-88330-DV- 8 x 10GE or 4 x OC192 + PP\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_HW_QDR_PROTECT_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "parity",
    {
      {
        TMD_HW_QDR_PROTECT_TYPE_PARITY,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_HW_QDR_PROTECT_TYPE.TMD_HW_QDR_PROTECT_TYPE_PARITY:\r\n"
        "  te QDR data is parity protected (4 bits parity, 32 bits of data).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ecc",
    {
      {
        TMD_HW_QDR_PROTECT_TYPE_ECC,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_HW_QDR_PROTECT_TYPE.TMD_HW_QDR_PROTECT_TYPE_ECC:\r\n"
        "  te QDR data is ECC protected (6 bits for ECC, 30 bits of data).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_MGMT_PCKT_SIZE_CONF_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "extern",
    {
      {
        TMD_MGMT_PCKT_SIZE_CONF_MODE_EXTERN,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_MGMT_PCKT_SIZE_CONF_MODE.TMD_MGMT_PCKT_SIZE_CONF_MODE_EXTERN:\r\n"
        "  Limit the Packet Size, sampled before ingress editing.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "intern",
    {
      {
        TMD_MGMT_PCKT_SIZE_CONF_MODE_INTERN,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_MGMT_PCKT_SIZE_CONF_MODE.TMD_MGMT_PCKT_SIZE_CONF_MODE_INTERN:\r\n"
        "  Limit the Packet Size, sampled after ingress editing.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
EXTERN CONST
   PARAM_VAL_RULES
     TMD_MGMT_FABRIC_HDR_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "tmd",
    {
      {
        TMD_MGMT_FABRIC_HDR_TYPE_TMD,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_MGMT_FABRIC_HDR_TYPE.TMD_MGMT_FABRIC_HDR_TYPE_TMD:\r\n"
        "  FTMH type - Tmd\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fap20",
    {
      {
        TMD_MGMT_FABRIC_HDR_TYPE_FAP20,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_MGMT_FABRIC_HDR_TYPE.TMD_MGMT_FABRIC_HDR_TYPE_FAP20:\r\n"
        "  FTMH type - fap20 compatible\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fap10m",
    {
      {
        TMD_MGMT_FABRIC_HDR_TYPE_FAP10M,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_MGMT_FABRIC_HDR_TYPE.TMD_MGMT_FABRIC_HDR_TYPE_FAP10M:\r\n"
        "  FTMH type - fap10m compatible\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#endif /* UI_UNDEF_TEMP */
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_INTERFACE_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "if_none",
    {
      {
        TMD_IF_TYPE_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_INTERFACE_TYPE.TMD_IF_TYPE_NONE:\r\n"
        "  default value, undefined\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "if_cpu",
    {
      {
        TMD_IF_TYPE_CPU,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_INTERFACE_TYPE.TMD_IF_TYPE_TYPE_CPU:\r\n"
        "  CPU port interface, channelized\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "if_rcy",
    {
      {
        TMD_IF_TYPE_RCY,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_INTERFACE_TYPE.TMD_IF_TYPE_TYPE_RCY:\r\n"
        "  Recycling port interface, channelized\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "if_olp",
    {
      {
        TMD_IF_TYPE_OLP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_INTERFACE_TYPE.TMD_IF_TYPE_TYPE_OLP:\r\n"
        "  Offload processor port interface, not channelized\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "if_nif",
    {
      {
        TMD_IF_TYPE_NIF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_INTERFACE_TYPE.TMD_IF_TYPE_TYPE_NIF:\r\n"
        "  Network interface, channelized or non-channelized\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#if UI_UNDEF_TEMP 
/********************************************************/
EXTERN CONST
   PARAM_VAL_RULES
     TMD_STAT_SAMPLING_PERIOD_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        TMD_MAX_SAMPLING_PERIOD_IN_MS, 0,
        1,
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

#endif /* UI_UNDEF_TEMP */
/********************************************************/
EXTERN CONST
   PARAM_VAL_RULES
     TMD_SUBFLOW_NDX_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        1, 0,
        1,
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_INTERFACE_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        TMD_MAX_NIF_ID, 0,
        1,
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cpu",
    {
      {
        TMD_IF_ID_CPU,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_INTERFACE_ID.TMD_IF_ID_CPU:\r\n"
        "  CPU port interface\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "olp",
    {
      {
        TMD_IF_ID_OLP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_INTERFACE_ID.TMD_IF_ID_OLP:\r\n"
        "  OLP port interface\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rcy",
    {
      {
        TMD_IF_ID_RCY,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_INTERFACE_ID.TMD_IF_ID_RCY:\r\n"
        "  Recycling port interface\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
 
/*
 *  MAL equivalent -
 *  MAL-id for Network interfaces, or
 *  equivalent for other interfaces (CPU/OLP/
 */
EXTERN CONST
   PARAM_VAL_RULES
     TMD_MAL_EQUIV_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        TMD_NOF_MAC_LANES - 1, 0,
        1,
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cpu",
    {
      {
        TMD_MAL_ID_CPU,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_MAL_ID_CPU:\r\n"
        "  CPU port interface\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "olp",
    {
      {
        TMD_MAL_ID_OLP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_MAL_ID_OLP:\r\n"
        "  OLP port interface\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rcy",
    {
      {
        TMD_MAL_ID_RCY,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_MAL_ID_RCY:\r\n"
        "  Recycling port interface\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "erp",
    {
      {
        TMD_MAL_ID_ERP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_MAL_ID_ERP:\r\n"
        "  Egress Replication port interface\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

#if UI_UNDEF_TEMP
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_STAT_PRINT_LEVEL_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "error-only",
    {
      {
        TMD_STAT_PRINT_LEVEL_ERROR_ONLY,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_PRINT_LEVEL.TMD_STAT_PRINT_LEVEL_ERROR_ONLY:\r\n"
        "  Logical presentation of errors. Printed for all print levels.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "packet_walkthrough",
    {
      {
        TMD_STAT_PRINT_LEVEL_PACKET_WALKTHROUGH,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_PRINT_LEVEL.TMD_STAT_PRINT_LEVEL_PACKET_WALKTHROUGH:\r\n"
        "  Counters that present the packet walk-through. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "all",
    {
      {
        TMD_STAT_PRINT_LEVEL_ALL,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_STAT_PRINT_LEVEL.TMD_STAT_PRINT_LEVEL_ALL:\r\n"
          "  Represents resources counters and packet walk-through. \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#endif /* UI_UNDEF_TEMP */
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_FC_DIRECTION_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "gen",
    {
      {
        TMD_FC_DIRECTION_GEN,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_DIRECTION.TMD_FC_DIRECTION_GEN:\r\n"
        "  Flow Control direction - generation.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rec",
    {
      {
        TMD_FC_DIRECTION_REC,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_DIRECTION.TMD_FC_DIRECTION_REC:\r\n"
        "  Flow Control direction - reception.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_PORT_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "none",
    {
      {
        TMD_PORT_HEADER_TYPE_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORT_TYPE.TMD_PORT_TYPE_NONE:\r\n"
        "  Port type: undefined. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_DEST_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "queue",
    {
      {
        TMD_DEST_TYPE_QUEUE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DEST_TYPE.TMD_DEST_TYPE_QUEUE:\r\n"
        "  Destination type: Incoming Queue.Matching Index Range: 0 - 32K-1\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "multicast",
    {
      {
        TMD_DEST_TYPE_MULTICAST,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DEST_TYPE.TMD_DEST_TYPE_MULTICAST:\r\n"
        "  Destination type: Multicast Group.Matching Index Range: 0 - 16K-1\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sys_phy_port",
    {
      {
        TMD_DEST_TYPE_SYS_PHY_PORT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DEST_TYPE.TMD_DEST_TYPE_SYS_PHY_PORT:\r\n"
        "  System Physical FAP Port.Matching Index Range: 0 - 4095.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "lag",
    {
      {
        TMD_DEST_TYPE_LAG,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DEST_TYPE.TMD_DEST_TYPE_LAG:\r\n"
        "  System LAG Id. Matching Index Range: 0 - 255.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_DEST_SYS_PORT_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "sys_phy_port",
    {
      {
        TMD_DEST_SYS_PORT_TYPE_SYS_PHY_PORT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DEST_SYS_PORT_TYPE.TMD_DEST_SYS_PORT_TYPE_SYS_PHY_PORT:\r\n"
        "  System Physical FAP Port.Matching Index Range: 0 - 4095.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "lag",
    {
      {
        TMD_DEST_SYS_PORT_TYPE_LAG,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DEST_SYS_PORT_TYPE.TMD_DEST_SYS_PORT_TYPE_LAG:\r\n"
        "  System LAG Id. Matching Index Range: 0 - 255.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_CONNECTION_DIRECTION_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "rx",
    {
      {
        TMD_CONNECTION_DIRECTION_RX,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_CONNECTION_DIRECTION.TMD_CONNECTION_DIRECTION_RX:\r\n"
        "  Connection direction - receive (RX).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tx",
    {
      {
        TMD_CONNECTION_DIRECTION_TX,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_CONNECTION_DIRECTION.TMD_CONNECTION_DIRECTION_TX:\r\n"
        "  Connection direction - transmit (TX).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "both",
    {
      {
        TMD_CONNECTION_DIRECTION_BOTH,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_CONNECTION_DIRECTION.TMD_CONNECTION_DIRECTION_BOTH:\r\n"
        "  Connection direction - both receive and transmit (RX/TX).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_PORT_DIRECTION_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "incoming",
    {
      {
        TMD_PORT_DIRECTION_INCOMING,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORT_DIRECTION.TMD_PORT_DIRECTION_INCOMING:\r\n"
        "  Port direction - incoming (IFP).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "outgoing",
    {
      {
        TMD_PORT_DIRECTION_OUTGOING,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORT_DIRECTION.TMD_PORT_DIRECTION_OUTGOING:\r\n"
        "  Port direction - outgoing (OFP).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "both",
    {
      {
        TMD_PORT_DIRECTION_BOTH,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORT_DIRECTION.TMD_PORT_DIRECTION_BOTH:\r\n"
        "  Port direction - both incoming (IFP) and outgoing (OFP).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_PORT_HEADER_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "eth",
    {
      {
        TMD_PORT_HEADER_TYPE_ETH,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORT_HEADER_TYPE.TMD_PORT_HEADER_TYPE_ETH:\r\n"
        "  Port header processing type: Ethernet.Supported direction: incoming /\r\n"
        "  outgoing. Switching and TM functions are based on Ethernet packet\r\n"
        "  processing.Incoming and outgoing outermost header is Ethernet.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "raw",
    {
      {
        TMD_PORT_HEADER_TYPE_RAW,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORT_HEADER_TYPE.TMD_PORT_HEADER_TYPE_RAW:\r\n"
        "  Port header processing type: Raw. Supported direction: incoming / outgoing.\r\n"
        "  Simple static switching; entire packet is payload.No header is assumed.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tm",
    {
      {
        TMD_PORT_HEADER_TYPE_TM,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORT_HEADER_TYPE.TMD_PORT_HEADER_TYPE_TM:\r\n"
        "  Port header processing type: TM. Supported direction: incoming / outgoing.\r\n"
        "  Designed to enable use of the TM features of the TmdIncoming/Outgoing\r\n"
        "  packets have an outermost Incoming/Outgoing-TM-Header (ITMH/OTMH).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "prog",
    {
      {
        TMD_PORT_HEADER_TYPE_PROG,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORT_HEADER_TYPE.TMD_PORT_HEADER_TYPE_PROG:\r\n"
        "  Port header processing type: programmable. Supported direction: incoming.\r\n"
        "  User programmable ingress processing.There are 4 programmable types that\r\n"
        "  define the different starting program for classification of the packet.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cpu",
    {
      {
        TMD_PORT_HEADER_TYPE_CPU,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORT_HEADER_TYPE.TMD_PORT_HEADER_TYPE_CPU:\r\n"
        "  Port header processing type: CPU.Supported direction: Outgoing. Designed to\r\n"
        "  support CPU protocol processing.Outgoing packet has a Fabric-TM-Header (FTMH).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_PORTS_SNOOP_SIZE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "bytes_64",
    {
      {
        TMD_PORTS_SNOOP_SIZE_BYTES_64,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORTS_SNOOP_SIZE.TMD_PORTS_SNOOP_SIZE_BYTES_64:\r\n"
        "  Snoop the first 64 bytes of the packet.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "bytes_192",
    {
      {
        TMD_PORTS_SNOOP_SIZE_BYTES_192,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORTS_SNOOP_SIZE.TMD_PORTS_SNOOP_SIZE_BYTES_192:\r\n"
        "  Snoop the first 192 bytes of the packet. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "all",
    {
      {
        TMD_PORTS_SNOOP_SIZE_ALL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORTS_SNOOP_SIZE.TMD_PORTS_SNOOP_SIZE_ALL:\r\n"
        "  Snoop the entire packet.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_PORTS_FTMH_EXT_OUTLIF_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "never",
    {
      {
        TMD_PORTS_FTMH_EXT_OUTLIF_NEVER,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORTS_FTMH_EXT_OUTLIF.TMD_PORTS_FTMH_EXT_OUTLIF_NEVER:\r\n"
        "  Never add an FTMH extension. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "if_mc",
    {
      {
        TMD_PORTS_FTMH_EXT_OUTLIF_IF_MC,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORTS_FTMH_EXT_OUTLIF.TMD_PORTS_FTMH_EXT_OUTLIF_IF_MC:\r\n"
        "  Add FTMH extension only if multicast.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "always",
    {
      {
        TMD_PORTS_FTMH_EXT_OUTLIF_ALWAYS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORTS_FTMH_EXT_OUTLIF.TMD_PORTS_FTMH_EXT_OUTLIF_ALWAYS:\r\n"
        "  Always add an FTMH extension.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "a",
    {
      {
        TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_A,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE.TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_A:\r\n"
        "  Egress header credit discount (AKA header compensation), type A. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "b",
    {
      {
        TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_B,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE.TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_B:\r\n"
        "  Egress header credit discount (AKA header compensation), type B. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#if UI_UNDEF_TEMP
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_NIF_SERDES_RATE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "single",
    {
      {
        TMD_NIF_SERDES_RATE_SINGLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_SERDES_RATE.TMD_NIF_SERDES_RATE_SINGLE:\r\n"
        "  Single rate - each SerDes physical lane holds single Logical Lane (LL)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "double",
    {
      {
        TMD_NIF_SERDES_RATE_DOUBLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_SERDES_RATE.TMD_NIF_SERDES_RATE_DOUBLE:\r\n"
        "  Double rate - each SerDes physical lane holds two Logical Lanes (LL)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_NIF_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "xaui",
    {
      {
        TMD_NIF_TYPE_XAUI,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_TYPE.TMD_NIF_TYPE_XAUI:\r\n"
        "  XAUI standard 10Gbps interface\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "spaui",
    {
      {
        TMD_NIF_TYPE_SPAUI,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_TYPE.TMD_NIF_TYPE_SPAUI:\r\n"
        "  SPAUI interface (extended XAUI) - 3.125Gbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sgmii",
    {
      {
        TMD_NIF_TYPE_SGMII,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_TYPE.TMD_NIF_TYPE_SGMII:\r\n"
        "  SGMII standard interface - 1 Gbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_NIF_PREAMBLE_SIZE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "prmbl_size_columns_0",
    {
      {
        TMD_NIF_PRMBL_SIZE_COLUMNS_0,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_PREAMBLE_SIZE.TMD_NIF_PRMBL_SIZE_COLUMNS_0:\r\n"
        "  Preamble size 0 columns.No preamble completion will be preformed (i.e. only\r\n"
        "  SOP and/or BCT).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "prmbl_size_columns_1",
    {
      {
        TMD_NIF_PRMBL_SIZE_COLUMNS_1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_PREAMBLE_SIZE.TMD_NIF_PRMBL_SIZE_COLUMNS_1:\r\n"
        "  Preamble size 1 columns - complete to one column.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "prmbl_size_columns_2",
    {
      {
        TMD_NIF_PRMBL_SIZE_COLUMNS_2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_PREAMBLE_SIZE.TMD_NIF_PRMBL_SIZE_COLUMNS_2:\r\n"
        "  Preamble size 2 columns - complete to two columns.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_NIF_IPG_DIC_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "average",
    {
      {
        TMD_NIF_IPG_DIC_MODE_AVERAGE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_IPG_DIC_MODE.TMD_NIF_IPG_DIC_MODE_AVERAGE:\r\n"
        "  Inter-Packet Gap Deficit Idle Count mode.Use average number of characters\r\n"
        "  between frames configuration.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "minimum",
    {
      {
        TMD_NIF_IPG_DIC_MODE_MINIMUM,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_IPG_DIC_MODE.TMD_NIF_IPG_DIC_MODE_MINIMUM:\r\n"
        "  Use minimal number of characters between frames configuration.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_NIF_CRC_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "crc_32",
    {
      {
        TMD_NIF_CRC_MODE_32,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_CRC_MODE.TMD_NIF_CRC_MODE_32:\r\n"
        "  Standard 4B CRC-32\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "crc_24",
    {
      {
        TMD_NIF_CRC_MODE_24,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_CRC_MODE.TMD_NIF_CRC_MODE_24:\r\n"
        "  Non-standard 3B CRC-24\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "no_crc",
    {
      {
        TMD_NIF_CRC_MODE_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  RX: no CRC is expected, and the NIF does not \n\r"
        "  remove the CRC bytes from the packet. \n\r"
        "  TX: no CRC is calculated and added to the packet.  \n\r"
        "  This mode can be used when the packet CRC is handled by an external logic. \n\r"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_NIF_1GE_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "mode_1000base_x",
    {
      {
        TMD_NIF_1GE_MODE_1000BASE_X,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_1GE_MODE.TMD_NIF_1GE_MODE_1000BASE_X:\r\n"
        "  1000BASE-X Gigabit Ethernet - 1G Ethernet MAC/PHY which connects directly to\r\n"
        "  the fiber.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mode_sgmii",
    {
      {
        TMD_NIF_1GE_MODE_SGMII,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_1GE_MODE.TMD_NIF_1GE_MODE_SGMII:\r\n"
        "  SGMII MAC which communicates with an external PHY device. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_NIF_SGMII_RATE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "mbps_10",
    {
      {
        TMD_NIF_SGMII_RATE_10Mbps,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_SGMII_RATE.TMD_NIF_SGMII_RATE_10Mbps:\r\n"
        "  SGMII rate is 10Mbit/sec\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_100",
    {
      {
        TMD_NIF_SGMII_RATE_100Mbps,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_SGMII_RATE.TMD_NIF_SGMII_RATE_100Mbps:\r\n"
        "  SGMII rate is 100Mbit/sec\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_1000",
    {
      {
        TMD_NIF_SGMII_RATE_1000Mbps,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_SGMII_RATE.TMD_NIF_SGMII_RATE_1000Mbps:\r\n"
        "  SGMII rate is 1000Mbit/sec\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_NIF_SGMII_RFLT_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "ok",
    {
      {
        TMD_NIF_SGMII_RFLT_OK,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_SGMII_RFLT.TMD_NIF_SGMII_RFLT_OK:\r\n"
        "  Indication of type of Remote Fault\r\n"
        "  - OK, no error. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "offline_req",
    {
      {
        TMD_NIF_SGMII_RFLT_OFFLINE_REQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_SGMII_RFLT.TMD_NIF_SGMII_RFLT_OFFLINE_REQ:\r\n"
        "  Indication of type of Remote Fault\r\n"
        "  - Offline request by link partner. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "lnk_fail",
    {
      {
        TMD_NIF_SGMII_RFLT_LNK_FAIL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_SGMII_RFLT.TMD_NIF_SGMII_RFLT_LNK_FAIL:\r\n"
        "  Indication of type of Remote Fault\r\n"
        "  - Link failure detected by partner.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "autoneg_err",
    {
      {
        TMD_NIF_SGMII_RFLT_AUTONEG_ERR,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_SGMII_RFLT.TMD_NIF_SGMII_RFLT_AUTONEG_ERR:\r\n"
        "  Indication of type of Remote Fault - AutoNegotiation Error.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_NIF_STATE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "on",
    {
      {
        TMD_NIF_STATE_ON,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_STATE.TMD_NIF_STATE_ON:\r\n"
        "  NIF is turned on (normal operation).\r\n"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "off",
    {
      {
        TMD_NIF_STATE_OFF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_STATE.TMD_NIF_STATE_OFF:\r\n"
        "  NIF is turned off.\r\n"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_NIF_LL_FC_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "disable",
    {
      {
        TMD_NIF_LL_FC_MODE_DISABLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_LL_FC_MODE.TMD_NIF_LL_FC_MODE_DISABLE:\r\n"
        "  Disable Link Level flow control in the specified direction\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enable_pause_frame",
    {
      {
        TMD_NIF_LL_FC_MODE_ENABLE_PAUSE_FRAME,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_LL_FC_MODE.TMD_NIF_LL_FC_MODE_ENABLE_PAUSE_FRAME:\r\n"
        "  Link Level flow control using standard 802.3x pause frame\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enable_bct",
    {
      {
        TMD_NIF_LL_FC_MODE_ENABLE_BCT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_LL_FC_MODE.TMD_NIF_LL_FC_MODE_ENABLE_BCT:\r\n"
        "  Link Level flow control via Burst Control Tag\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#endif /* UI_UNDEF_TEMP */
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_ITM_DBUFF_SIZE_BYTES_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "bytes_256",
    {
      {
        TMD_ITM_DBUFF_SIZE_BYTES_256,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_DBUFF_SIZE_BYTES.TMD_ITM_DBUFF_SIZE_BYTES_256:\r\n"
        "  The size of a single data buffer in the DRAM - 256 bytes.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "bytes_512",
    {
      {
        TMD_ITM_DBUFF_SIZE_BYTES_512,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_DBUFF_SIZE_BYTES.TMD_ITM_DBUFF_SIZE_BYTES_512:\r\n"
        "  The size of a single data buffer in the DRAM - 512 bytes.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "bytes_1024",
    {
      {
        TMD_ITM_DBUFF_SIZE_BYTES_1024,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_DBUFF_SIZE_BYTES.TMD_ITM_DBUFF_SIZE_BYTES_1024:\r\n"
        "  The size of a single data buffer in the DRAM - 1024 bytes.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "bytes_2048",
    {
      {
        TMD_ITM_DBUFF_SIZE_BYTES_2048,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_DBUFF_SIZE_BYTES.TMD_ITM_DBUFF_SIZE_BYTES_2048:\r\n"
        "  The size of a single data buffer in the DRAM - 2048 bytes.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_ITM_VSQ_GROUP_SIZE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "groupa_sze",
    {
      {
        TMD_ITM_VSQ_GROUPA_SZE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_VSQ_GROUP_SIZE.TMD_ITM_VSQ_GROUPA_SZE:\r\n"
        "  4:\r\n"
        "  Category VSQsThere are 4 categories.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "groupb_sze",
    {
      {
        TMD_ITM_VSQ_GROUPB_SZE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_VSQ_GROUP_SIZE.TMD_ITM_VSQ_GROUPB_SZE:\r\n"
        "  32:\r\n"
        "  Category & Traffic Class VSQs4 categories * 8 Traffic Classes\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "groupc_sze",
    {
      {
        TMD_ITM_VSQ_GROUPC_SZE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_VSQ_GROUP_SIZE.TMD_ITM_VSQ_GROUPC_SZE:\r\n"
        "  64:\r\n"
        "  32 Category2/3 & Connection Class VSQs.(1 Category2 * 32 Connection Class)+\r\n"
        "  (1Category3 * 32 Connection Class)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "groupd_sze",
    {
      {
        TMD_ITM_VSQ_GROUPD_SZE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_VSQ_GROUP_SIZE.TMD_ITM_VSQ_GROUPD_SZE:\r\n"
        "  256: Statistics VSQs\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_ITM_VSQ_NDX_RNG_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "min",
    {
      {
        TMD_ITM_VSQ_NDX_MIN,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_VSQ_NDX_RNG.TMD_ITM_VSQ_NDX_MIN:\r\n"
        "  ITM-VSQ first index: Value 0\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "max",
    {
      {
        TMD_ITM_VSQ_NDX_MAX,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_VSQ_NDX_RNG.TMD_ITM_VSQ_NDX_MAX:\r\n"
        "  ITM-VSQ last index = sum of group sizes:Value 355.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_ITM_ADMIT_TSTS_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "tst_00",
    {
      {
        TMD_ITM_ADMIT_TST_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_ADMIT_TSTS.TMD_ITM_ADMIT_TST_00:\r\n"
        "  Admission-test-templates 0.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tst_01",
    {
      {
        TMD_ITM_ADMIT_TST_01,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_ADMIT_TSTS.TMD_ITM_ADMIT_TST_01:\r\n"
        "  Admission-test-templates 1.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tst_02",
    {
      {
        TMD_ITM_ADMIT_TST_02,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_ADMIT_TSTS.TMD_ITM_ADMIT_TST_02:\r\n"
        "  Admission-test-templates 2.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tst_03",
    {
      {
        TMD_ITM_ADMIT_TST_03,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_ADMIT_TSTS.TMD_ITM_ADMIT_TST_03:\r\n"
        "  Admission-test-templates 3.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_ITM_VSQ_GROUP_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "ctgry",
    {
      {
        TMD_ITM_VSQ_GROUP_CTGRY,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_VSQ_GROUP.TMD_ITM_VSQ_GROUP_CTGRY:\r\n"
        "  VSQ group A - category\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ctgry_traffic_cls",
    {
      {
        TMD_ITM_VSQ_GROUP_CTGRY_TRAFFIC_CLS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_VSQ_GROUP.TMD_ITM_VSQ_GROUP_CTGRY_TRAFFIC_CLS:\r\n"
        "  VSQ group B - category and traffic class\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ctgry_2_3_cnctn_cls",
    {
      {
        TMD_ITM_VSQ_GROUP_CTGRY_2_3_CNCTN_CLS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_VSQ_GROUP.TMD_ITM_VSQ_GROUP_CTGRY_2_3_CNCTN_CLS:\r\n"
        "  VSQ group C - category 2/3 and connection class\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "stag",
    {
      {
        TMD_ITM_VSQ_GROUP_STTSTCS_TAG,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_VSQ_GROUP.TMD_ITM_VSQ_GROUP_STTSTCS_TAG:\r\n"
        "  VSQ group D - statistics tag\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_ING_SCH_MESH_CONTEXTS_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "local",
    {
      {
        TMD_ING_SCH_MESH_LOCAL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ING_SCH_MESH_CONTEXTS.TMD_ING_SCH_MESH_LOCAL:\r\n"
        "  Local destination\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "con1",
    {
      {
        TMD_ING_SCH_MESH_CON1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ING_SCH_MESH_CONTEXTS.TMD_ING_SCH_MESH_CON1:\r\n"
        "  FAP-1 destination\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "con2",
    {
      {
        TMD_ING_SCH_MESH_CON2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ING_SCH_MESH_CONTEXTS.TMD_ING_SCH_MESH_CON2:\r\n"
        "  FAP-2 destination\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "con3",
    {
      {
        TMD_ING_SCH_MESH_CON3,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ING_SCH_MESH_CONTEXTS.TMD_ING_SCH_MESH_CON3:\r\n"
        "  FAP-3 destination\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "con4",
    {
      {
        TMD_ING_SCH_MESH_CON4,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ING_SCH_MESH_CONTEXTS.TMD_ING_SCH_MESH_CON4:\r\n"
        "  FAP-4 destination\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "con5",
    {
      {
        TMD_ING_SCH_MESH_CON5,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ING_SCH_MESH_CONTEXTS.TMD_ING_SCH_MESH_CON5:\r\n"
        "  FAP-5 destination\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "con6",
    {
      {
        TMD_ING_SCH_MESH_CON6,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ING_SCH_MESH_CONTEXTS.TMD_ING_SCH_MESH_CON6:\r\n"
        "  FAP-6 destination\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "con7",
    {
      {
        TMD_ING_SCH_MESH_CON7,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ING_SCH_MESH_CONTEXTS.TMD_ING_SCH_MESH_CON7:\r\n"
        "  FAP-7 destination\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "last",
    {
      {
        TMD_ING_SCH_MESH_LAST,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ING_SCH_MESH_CONTEXTS.TMD_ING_SCH_MESH_LAST:\r\n"
        "  Last value of enumerator\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_EGR_Q_PRIO_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "low",
    {
      {
        TMD_EGR_Q_PRIO_LOW,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_Q_PRIO.TMD_EGR_Q_PRIO_LOW:\r\n"
        "  Egress priority for unscheduled traffic - low\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "high",
    {
      {
        TMD_EGR_Q_PRIO_HIGH,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_Q_PRIO.TMD_EGR_Q_PRIO_HIGH:\r\n"
        "  Egress priority for unscheduled traffic - high\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_EGR_PORT_THRESH_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "type_0",
    {
      {
        TMD_EGR_PORT_THRESH_TYPE_0,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_PORT_THRESH_TYPE.TMD_EGR_PORT_THRESH_TYPE_0:\r\n"
        "  Port threshold type 0.Port threshold type defines the set of packet\r\n"
        "  thresholds for\r\n"
        "  Drop Precedence and Flow Control, that will be applied to the egress queue\r\n"
        "  belonging to this type.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "type_1",
    {
      {
        TMD_EGR_PORT_THRESH_TYPE_1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_PORT_THRESH_TYPE.TMD_EGR_PORT_THRESH_TYPE_1:\r\n"
        "  Port threshold type 1.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "type_2",
    {
      {
        TMD_EGR_PORT_THRESH_TYPE_2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_PORT_THRESH_TYPE.TMD_EGR_PORT_THRESH_TYPE_2:\r\n"
        "  Port threshold type 2.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "type_3",
    {
      {
        TMD_EGR_PORT_THRESH_TYPE_3,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_PORT_THRESH_TYPE.TMD_EGR_PORT_THRESH_TYPE_3:\r\n"
        "  Port threshold type 3.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_EGR_FC_MCI_EN_STATUS_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "enable",
    {
      {
        TMD_EGR_FC_MCI_ENABLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_FC_MCI_EN_STATUS.TMD_EGR_FC_MCI_ENABLE:\r\n"
        "  Enable MCI0 (guaranteed) and MCI1 (best effort) flow control.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "disable",
    {
      {
        TMD_EGR_FC_MCI_DISABLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_FC_MCI_EN_STATUS.TMD_EGR_FC_MCI_DISABLE:\r\n"
        "  Disable all MCI flow control\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enable_erp",
    {
      {
        TMD_EGR_FC_MCI_ENABLE_ERP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_FC_MCI_EN_STATUS.TMD_EGR_FC_MCI_ENABLE_ERP:\r\n"
        "  Enable MCI0 (guaranteed) flow control, use MCI1 (best effort) threshold for\r\n"
        "  ERP (egress replication port) flow control.In this mode MCI1 (best effort)\r\n"
        "  flow control is disabled.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_EGR_MCI_PRIO_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "guaranteed",
    {
      {
        TMD_EGR_MCI_GUARANTEED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_MCI_PRIO.TMD_EGR_MCI_GUARANTEED:\r\n"
        "  Multicast congestion indication: guaranteed (MCI0)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "be",
    {
      {
        TMD_EGR_MCI_BE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_MCI_PRIO.TMD_EGR_MCI_BE:\r\n"
        "  Multicast congestion indication: best effort (MCI1)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_EGR_OFP_INTERFACE_PRIO_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "high",
    {
      {
        TMD_EGR_OFP_INTERFACE_PRIO_HIGH,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_OFP_INTERFACE_PRIO.TMD_EGR_OFP_INTERFACE_PRIO_HIGH:\r\n"
        "  Outgoing FAP Strict Priority, for egress scheduling - highNote: this priority\r\n"
        "  is only valid for ports mapped to channelized NIF port! Otherwise - ignored.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mid",
    {
      {
        TMD_EGR_OFP_INTERFACE_PRIO_MID,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_OFP_INTERFACE_PRIO.TMD_EGR_OFP_INTERFACE_PRIO_MID:\r\n"
        "  OFP priority - medium\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "low",
    {
      {
        TMD_EGR_OFP_INTERFACE_PRIO_LOW,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_OFP_INTERFACE_PRIO.TMD_EGR_OFP_INTERFACE_PRIO_LOW:\r\n"
        "  OFP priority - low\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "chnif_nof_priorities",
    {
      {
        TMD_EGR_OFP_CHNIF_NOF_PRIORITIES,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_OFP_INTERFACE_PRIO.TMD_EGR_OFP_CHNIF_NOF_PRIORITIES:\r\n"
        "  Must be the last value.Indicates the number of OFP scheduling priorities. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_EGR_OFP_SCH_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "hp_over_lp_all",
    {
      {
        TMD_EGR_HP_OVER_LP_ALL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_OFP_SCH_MODE.TMD_EGR_HP_OVER_LP_ALL:\r\n"
        "  All High Priority traffic (Scheduled and Unscheduled) Strict Priority over\r\n"
        "  Low Priority traffic.Also, High Priority Scheduled traffic Strict Priority\r\n"
        "  over High Priority Unscheduled traffic.Low Priority traffic - WFQ, set\r\n"
        "  per-port.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "hp_over_lp_per_type",
    {
      {
        TMD_EGR_HP_OVER_LP_PER_TYPE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_OFP_SCH_MODE.TMD_EGR_HP_OVER_LP_PER_TYPE:\r\n"
        "  High Priority\r\n"
        "  scheduled traffic Strict Priority over Low Priority scheduled traffic. Same\r\n"
        "  for unscheduled.WFQ between Scheduled and Unscheduled, set per-port.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_EGR_Q_PRIO_MAPPING_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "ucast_to_sched",
    {
      {
        TMD_EGR_UCAST_TO_SCHED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_Q_PRIO_MAPPING_TYPE.TMD_EGR_UCAST_TO_SCHED:\r\n"
        "  Mapping from Traffic Class and Drop Precedence to Egress Queue\r\n"
        "  Priority:Unicast packets to scheduled queues.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mcast_to_sched",
    {
      {
        TMD_EGR_MCAST_TO_SCHED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_Q_PRIO_MAPPING_TYPE.TMD_EGR_MCAST_TO_SCHED:\r\n"
        "  Multicast packets to scheduled queues (scheduled multicast).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mcast_to_unsched",
    {
      {
        TMD_EGR_MCAST_TO_UNSCHED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_EGR_Q_PRIO_MAPPING_TYPE.TMD_EGR_MCAST_TO_UNSCHED:\r\n"
        "  Multicast packets to unscheduled queues (unscheduled multicast).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_OFP_RATES_CAL_SET_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "a",
    {
      {
        TMD_OFP_RATES_CAL_SET_A,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_OFP_RATES_CAL_SET.TMD_OFP_RATES_CAL_SET_A:\r\n"
        "  Calendar Set A - scheduler and EGQ. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "b",
    {
      {
        TMD_OFP_RATES_CAL_SET_B,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_OFP_RATES_CAL_SET.TMD_OFP_RATES_CAL_SET_B:\r\n"
        "  Calendar Set B - scheduler and EGQ.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_OFP_SHPR_UPDATE_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "sum_of_ports",
    {
      {
        TMD_OFP_SHPR_UPDATE_MODE_SUM_OF_PORTS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_OFP_SHPR_UPDATE_MODE.TMD_OFP_SHPR_UPDATE_MODE_SUM_OF_PORTS:\r\n"
        "  Set the shaper value according to the accumulated value of the interface\r\n"
        "  ports. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "override",
    {
      {
        TMD_OFP_SHPR_UPDATE_MODE_OVERRIDE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_OFP_SHPR_UPDATE_MODE.TMD_OFP_SHPR_UPDATE_MODE_OVERRIDE:\r\n"
        "  Set the shaper value as specified.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "dont_tuch",
    {
      {
        TMD_OFP_SHPR_UPDATE_MODE_DONT_TUCH,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_OFP_SHPR_UPDATE_MODE.TMD_OFP_SHPR_UPDATE_MODE_DONT_TUCH:\r\n"
        "  Do not change shaper value\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_PORT_LOWEST_HP_HR_CLASS_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "ef1",
    {
      {
        TMD_SCH_PORT_LOWEST_HP_HR_CLASS_EF1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_PORT_LOWEST_HP_HR_CLASS.TMD_SCH_PORT_LOWEST_HP_HR_CLASS_EF1:\r\n"
        "  SP1 - strict priority one, the highest\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ef2",
    {
      {
        TMD_SCH_PORT_LOWEST_HP_HR_CLASS_EF2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_PORT_LOWEST_HP_HR_CLASS.TMD_SCH_PORT_LOWEST_HP_HR_CLASS_EF2:\r\n"
        "  SP2\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ef3",
    {
      {
        TMD_SCH_PORT_LOWEST_HP_HR_CLASS_EF3,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_PORT_LOWEST_HP_HR_CLASS.TMD_SCH_PORT_LOWEST_HP_HR_CLASS_EF3:\r\n"
        "  SP3\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "single_class_af1_wfq",
    {
      {
        TMD_SCH_PORT_LOWEST_HP_HR_SINGLE_CLASS_AF1_WFQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_PORT_LOWEST_HP_HR_CLASS.TMD_SCH_PORT_LOWEST_HP_HR_SINGLE_CLASS_AF\r\n"
        "  _WFQ:\r\n"
        "  Valid for single HR only\r\n"
        "  SP4 (WFQ)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "dual_or_enhanced",
    {
      {
        TMD_SCH_PORT_LOWEST_HP_HR_DUAL_OR_ENHANCED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_PORT_LOWEST_HP_HR_CLASS.TMD_SCH_PORT_LOWEST_HP_HR_DUAL_OR_ENHANCE\r\n"
        "  :\r\n"
        "  Valid for dual or enhanced HR onlyFor dual HR: SP4 (WFQ)For enhanced HR: SP9\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_CL_CLASS_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "mode_none",
    {
      {
        TMD_SCH_CL_MODE_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_CL_CLASS_MODE.TMD_SCH_CL_MODE_NONE:\r\n"
        "  undefined value\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mode_1",
    {
      {
        TMD_SCH_CL_MODE_1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_CL_CLASS_MODE.TMD_SCH_CL_MODE_1\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mode_2",
    {
      {
        TMD_SCH_CL_MODE_2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_CL_CLASS_MODE.TMD_SCH_CL_MODE_2\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mode_3",
    {
      {
        TMD_SCH_CL_MODE_3,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_CL_CLASS_MODE.TMD_SCH_CL_MODE_3:\r\n"
        "  or [SP1 WFQ(3),SP2]\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mode_4",
    {
      {
        TMD_SCH_CL_MODE_4,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_CL_CLASS_MODE.TMD_SCH_CL_MODE_4:\r\n"
        "  or [SP1, SP2 WFQ(1:63)]\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mode_5",
    {
      {
        TMD_SCH_CL_MODE_5,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_CL_CLASS_MODE.TMD_SCH_CL_MODE_5:\r\n"
        "  WFQ (1:253) or [SP-WFQ(4)]\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_CL_CLASS_WEIGHTS_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "weights_mode_discrete_per_flow",
    {
      {
        TMD_SCH_CL_WEIGHTS_MODE_DISCRETE_PER_FLOW,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_CL_CLASS_WEIGHTS_MODE.TMD_SCH_CL_WEIGHTS_MODE_DISCRETE_PER_FLOW:\r\n"
        "  Each flow installed on the CL-Scheduler WFQ is assigned one of 2, 3, or 4\r\n"
        "  weights. The number of available weights depends on the number of\r\n"
        "  strict-priority levels (i.e.1 level => 4 weights, 2 levels =>3 weights, 3\r\n"
        "  levels =>2 weights). All flows installed on the WFQ compete according to that\r\n"
        "  weight.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "weights_mode_independent_per_flow",
    {
      {
        TMD_SCH_CL_WEIGHTS_MODE_INDEPENDENT_PER_FLOW,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_CL_CLASS_WEIGHTS_MODE.TMD_SCH_CL_WEIGHTS_MODE_INDEPENDENT_PER_FLO\r\n"
        "  :\r\n"
        "  Each flow installed on the CL-Scheduler WFQ has its own independent weight\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "weights_mode_discrete_per_class",
    {
      {
        TMD_SCH_CL_WEIGHTS_MODE_DISCRETE_PER_CLASS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_CL_CLASS_WEIGHTS_MODE.TMD_SCH_CL_WEIGHTS_MODE_DISCRETE_PER_CLASS:\r\n"
        "  flow installed on the CL-Scheduler WFQ is assigned to a class. Each class is\r\n"
        "  assigned a weight. Bandwidth is distributed among the classes according to\r\n"
        "  the weight of the class. All flows belonging to the class share the class\r\n"
        "  bandwidth equally.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_CL_ENHANCED_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "cl_enhanced_mode_disabled",
    {
      {
        TMD_CL_ENHANCED_MODE_DISABLED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_CL_ENHANCED_MODE.TMD_CL_ENHANCED_MODE_DISABLED:\r\n"
        "  CL not in enhanced mode\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cl_enhanced_mode_enabled_hp",
    {
      {
        TMD_CL_ENHANCED_MODE_ENABLED_HP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_CL_ENHANCED_MODE.TMD_CL_ENHANCED_MODE_ENABLED_HP:\r\n"
        "  CL in enhanced mode, additional FQ at high priority (SP1)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cl_enhanced_mode_enabled_lp",
    {
      {
        TMD_CL_ENHANCED_MODE_ENABLED_LP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_CL_ENHANCED_MODE.TMD_CL_ENHANCED_MODE_ENABLED_LP:\r\n"
        "  CL in enhanced mode, additional FQ at low priority (SP5)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_GROUP_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "a",
    {
      {
        TMD_SCH_GROUP_A,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_GROUP.TMD_SCH_GROUP_A:\r\n"
        "  Scheduler flow group A\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "b",
    {
      {
        TMD_SCH_GROUP_B,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_GROUP.TMD_SCH_GROUP_B:\r\n"
        "  Scheduler flow group B\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "c",
    {
      {
        TMD_SCH_GROUP_C,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_GROUP.TMD_SCH_GROUP_C:\r\n"
        "  Scheduler flow group C\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "auto",
    {
      {
        TMD_SCH_GROUP_AUTO,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_GROUP.TMD_SCH_GROUP_AUTO:\r\n"
        "  Scheduler flow group will be determined by the driver, according to flow\r\n"
        "  group assignment policy\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_SE_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "hr",
    {
      {
        TMD_SCH_SE_TYPE_HR,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SE_TYPE.TMD_SCH_SE_TYPE_HR:\r\n"
        "  HR scheduler element\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cl",
    {
      {
        TMD_SCH_SE_TYPE_CL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SE_TYPE.TMD_SCH_SE_TYPE_CL:\r\n"
        "  CL scheduler element\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fq",
    {
      {
        TMD_SCH_SE_TYPE_FQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SE_TYPE.TMD_SCH_SE_TYPE_FQ:\r\n"
        "  FQ scheduler element\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_SE_STATE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "disable",
    {
      {
        TMD_SCH_SE_STATE_DISABLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SE_STATE.TMD_SCH_SE_STATE_DISABLE:\r\n"
        "  scheduler element disabled\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enable",
    {
      {
        TMD_SCH_SE_STATE_ENABLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SE_STATE.TMD_SCH_SE_STATE_ENABLE:\r\n"
        "  scheduler element enabled\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_SE_HR_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "hr_mode_none",
    {
      {
        TMD_SCH_HR_MODE_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SE_HR_MODE.TMD_SCH_HR_MODE_NONE:\r\n"
        "  default value, undefined\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "hr_mode_single_wfq",
    {
      {
        TMD_SCH_HR_MODE_SINGLE_WFQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SE_HR_MODE.TMD_SCH_HR_MODE_SINGLE_WFQ:\r\n"
        "  SP1, SP2, SP3, SP4 WFQ(1:4K), SP5\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "hr_mode_dual_wfq",
    {
      {
        TMD_SCH_HR_MODE_DUAL_WFQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SE_HR_MODE.TMD_SCH_HR_MODE_DUAL_WFQ:\r\n"
        "  SP1, SP2, SP3, SP4 WFQ(1:4K), SP5 WFQ(1:4K), SP6\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "hr_mode_enhanced_prio_wfq",
    {
      {
        TMD_SCH_HR_MODE_ENHANCED_PRIO_WFQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SE_HR_MODE.TMD_SCH_HR_MODE_ENHANCED_PRIO_WFQ:\r\n"
        "  SP1, SP2, SP3, SP4, SP5, SP6, SP7, SP8, SP9, SP10- WFQ(1:4K), SP11\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_SUB_FLOW_HR_CLASS_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "class_none",
    {
      {
        TMD_SCH_FLOW_HR_CLASS_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_CLASS_NONE:\r\n"
        "  default value, undefined\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "class_ef1",
    {
      {
        TMD_SCH_FLOW_HR_CLASS_EF1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_CLASS_EF1:\r\n"
        "  SP1 - strict priority one, the highest\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "class_ef2",
    {
      {
        TMD_SCH_FLOW_HR_CLASS_EF2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_CLASS_EF2:\r\n"
        "  SP2\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "class_ef3",
    {
      {
        TMD_SCH_FLOW_HR_CLASS_EF3,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_CLASS_EF3:\r\n"
        "  SP3\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "single_class_af1_wfq",
    {
      {
        TMD_SCH_FLOW_HR_SINGLE_CLASS_AF1_WFQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_SINGLE_CLASS_AF1_WFQ:\r\n"
        "  SP4 (WFQ) \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "single_class_be1",
    {
      {
        TMD_SCH_FLOW_HR_SINGLE_CLASS_BE1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_SINGLE_CLASS_BE1:\r\n"
        "  SP5\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "dual_class_af1_wfq",
    {
      {
        TMD_SCH_FLOW_HR_DUAL_CLASS_AF1_WFQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_DUAL_CLASS_AF1_WFQ:\r\n"
        "  SP4 (WFQ)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "dual_class_be1_wfq",
    {
      {
        TMD_SCH_FLOW_HR_DUAL_CLASS_BE1_WFQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_DUAL_CLASS_BE1_WFQ:\r\n"
        "  SP5 (WFQ)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "dual_class_be2",
    {
      {
        TMD_SCH_FLOW_HR_DUAL_CLASS_BE2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_DUAL_CLASS_BE2:\r\n"
        "  SP6\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enhanced_class_af1",
    {
      {
        TMD_SCH_FLOW_HR_ENHANCED_CLASS_AF1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_ENHANCED_CLASS_AF1:\r\n"
        "  SP4\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enhanced_class_af2",
    {
      {
        TMD_SCH_FLOW_HR_ENHANCED_CLASS_AF2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_ENHANCED_CLASS_AF2:\r\n"
        "  SP5\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enhanced_class_af3",
    {
      {
        TMD_SCH_FLOW_HR_ENHANCED_CLASS_AF3,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_ENHANCED_CLASS_AF3:\r\n"
        "  SP6\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enhanced_class_af4",
    {
      {
        TMD_SCH_FLOW_HR_ENHANCED_CLASS_AF4,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_ENHANCED_CLASS_AF4:\r\n"
        "  SP7\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enhanced_class_af5",
    {
      {
        TMD_SCH_FLOW_HR_ENHANCED_CLASS_AF5,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_ENHANCED_CLASS_AF5:\r\n"
        "  SP8\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enhanced_class_af6",
    {
      {
        TMD_SCH_FLOW_HR_ENHANCED_CLASS_AF6,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_ENHANCED_CLASS_AF6:\r\n"
        "  SP9\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enhanced_class_be1_wfq",
    {
      {
        TMD_SCH_FLOW_HR_ENHANCED_CLASS_BE1_WFQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_ENHANCED_CLASS_BE1_WFQ:\r\n"
        "  SP10 (WFQ)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enhanced_class_be2",
    {
      {
        TMD_SCH_FLOW_HR_ENHANCED_CLASS_BE2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_HR_CLASS.TMD_SCH_FLOW_HR_ENHANCED_CLASS_BE2:\r\n"
        "  SP11\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_SUB_FLOW_CL_CLASS_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "sp1",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP1:\r\n"
        "  SP1 - strict priority one, the highest\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp2",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP2:\r\n"
        "  SP2\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp3",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP3,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP3:\r\n"
        "  SP3\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp4",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP4,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP4:\r\n"
        "  SP4\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp1_wfq",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ:\r\n"
        "  SP1 with independent flow weight on WFQ\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp1_wfq1",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ1:\r\n"
        "  SP1 with discrete weight 1 on WFQ\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp1_wfq2",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ2:\r\n"
        "  SP1 with discrete weight 2 on WFQ\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp1_wfq3",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ3,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ3:\r\n"
        "  SP1 with discrete weight 3 on WFQ\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp1_wfq4",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ4,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP1_WFQ4:\r\n"
        "  SP1 with discrete weight 4 on WFQ\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp2_wfq",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ:\r\n"
        "  SP2 with independent flow weight on WFQ\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp2_wfq1",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ1:\r\n"
        "  SP2 with discrete weight 1 on WFQ\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp2_wfq2",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ2:\r\n"
        "  SP2 with discrete weight 2 on WFQ\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp2_wfq3",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ3,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP2_WFQ3:\r\n"
        "  SP2 with discrete weight 3 on WFQ\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp3_wfq1",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP3_WFQ1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP3_WFQ1:\r\n"
        "  SP3 with discrete weight 1 on WFQ\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp3_wfq2",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP3_WFQ2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP3_WFQ2:\r\n"
        "  SP3 with discrete weight 2 on WFQ\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp_0_enhanced",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP_0_ENHANCED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP_0_ENHANCED:\r\n"
        "  SP 0 when using enhanced CL\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sp_5_enhanced",
    {
      {
        TMD_SCH_SUB_FLOW_CL_CLASS_SP_5_ENHANCED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SUB_FLOW_CL_CLASS.TMD_SCH_SUB_FLOW_CL_CLASS_SP_5_ENHANCED:\r\n"
        "  SP 5 when using enhanced CL\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#if UI_UNDEF_TEMP
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_ITM_STAG_ENABLE_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "disabled",
    {
      {
        TMD_ITM_STAG_ENABLE_MODE_DISABLED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_STAG_ENABLE_MODE.TMD_ITM_STAG_ENABLE_MODE_DISABLED:\r\n"
        "  Statistics Tag is not used (disabled). \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "stat_if_no_deq",
    {
      {
        TMD_ITM_STAG_ENABLE_MODE_STAT_IF_NO_DEQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_STAG_ENABLE_MODE.TMD_ITM_STAG_ENABLE_MODE_STAT_IF_NO_DEQ:\r\n"
        "  The Statistics Tag is not kept in the QDR. This means:\r\n"
        "  1. VSQs can not be configured based on statistics tag. 2. In the Statistics\r\n"
        "  Interface, the dequeu information is not available. It still can be used in\r\n"
        "  Billing mode.\r\n"
        "",
         /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enabled_with_deq",
    {
      {
        TMD_ITM_STAG_ENABLE_MODE_ENABLED_WITH_DEQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_ITM_STAG_ENABLE_MODE.TMD_ITM_STAG_ENABLE_MODE_ENABLED_WITH_DEQ:\r\n"
        "  The Statistics Tag is kept in the QDR. This means:\r\n"
        "  1. VSQs can be configured based on statistics tag. 2. In the Statistics\r\n"
        "  Interface, the dequeu information is available.\r\n"
        "  Note: keeping the Statistics Tag in QDR consumes QDR resources, which can\r\n"
        "  affect the maximal traffic bandwidth. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#endif /* UI_UNDEF_TEMP */
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_SLOW_RATE_NDX_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "rate_1",
    {
      {
        TMD_SCH_SLOW_RATE_NDX_1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SLOW_RATE_NDX.TMD_SCH_SLOW_RATE_NDX_1:\r\n"
        "  Use ShaperSlowRate1 when in slow state\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rate_2",
    {
      {
        TMD_SCH_SLOW_RATE_NDX_2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_SLOW_RATE_NDX.TMD_SCH_SLOW_RATE_NDX_2:\r\n"
        "  Use ShaperSlowRate1 when in slow state\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_FLOW_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "flow_none",
    {
      {
        TMD_FLOW_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_FLOW_TYPE.TMD_FLOW_NONE:\r\n"
        "  default value, undefined\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "flow_simple",
    {
      {
        TMD_FLOW_SIMPLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_FLOW_TYPE.TMD_FLOW_SIMPLE:\r\n"
        "  simple - not an aggregate\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "flow_aggregate",
    {
      {
        TMD_FLOW_AGGREGATE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_FLOW_TYPE.TMD_FLOW_AGGREGATE:\r\n"
        "  aggregate - used both as a scheduling element and as a scheduler flow.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SCH_FLOW_STATUS_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "off",
    {
      {
        TMD_SCH_FLOW_OFF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_FLOW_STATUS.TMD_SCH_FLOW_OFF:\r\n"
        "  The flow does not consume credits.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "on",
    {
      {
        TMD_SCH_FLOW_ON,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SCH_FLOW_STATUS.TMD_SCH_FLOW_ON:\r\n"
        "  The flow consumes credits.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_MULT_FABRIC_CLS_RNG_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "min",
    {
      {
        TMD_MULT_FABRIC_CLS_MIN,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_MULT_FABRIC_CLS_RNG.TMD_MULT_FABRIC_CLS_MIN:\r\n"
        "  Egress-Multicast-Class min: Value 0\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "max",
    {
      {
        TMD_MULT_FABRIC_CLS_MAX,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_MULT_FABRIC_CLS_RNG.TMD_MULT_FABRIC_CLS_MAX:\r\n"
        "  Egress-Multicast-Class max: Value 3.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#if UI_UNDEF_TEMP
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_STAR_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        TMD_SRD_NOF_STAR_IDS - 1,
        0,
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_DATA_RATE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "mbps_1000_00",
    {
      {
        TMD_SRD_DATA_RATE_1000_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_1000_00:\r\n"
        "  SerDes Data Rate: 1000.00 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_1041_67",
    {
      {
        TMD_SRD_DATA_RATE_1041_67,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_1041_67:\r\n"
        "  SerDes Data Rate: 1041.67 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_1171_88",
    {
      {
        TMD_SRD_DATA_RATE_1171_88,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_1171_88:\r\n"
        "  SerDes Data Rate: 1171.88 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_1250_00",
    {
      {
        TMD_SRD_DATA_RATE_1250_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_1250_00:\r\n"
        "  SerDes Data Rate: 1250.00 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_1302_03",
    {
      {
        TMD_SRD_DATA_RATE_1302_03,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_1302_03:\r\n"
        "  SerDes Data Rate: 1302.03 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_1333_33",
    {
      {
        TMD_SRD_DATA_RATE_1333_33,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_1333_33:\r\n"
        "  SerDes Data Rate: 1333.33 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_1562_50",
    {
      {
        TMD_SRD_DATA_RATE_1562_50,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_1562_50:\r\n"
        "  SerDes Data Rate: 1562.50 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },  
  {
    VAL_SYMBOL,
    "mbps_2343_75",
    {
      {
        TMD_SRD_DATA_RATE_2343_75,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_2343_75:\r\n"
        "  SerDes Data Rate: 2343.75 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_2500_00",
    {
      {
        TMD_SRD_DATA_RATE_2500_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_2500_00:\r\n"
        "  SerDes Data Rate: 2500.00 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_2604_16",
    {
      {
        TMD_SRD_DATA_RATE_2604_16,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_2604_16:\r\n"
        "  SerDes Data Rate: 2604.16 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_2666_67",
    {
      {
        TMD_SRD_DATA_RATE_2666_67,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_2666_67:\r\n"
        "  SerDes Data Rate: 2666.67 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_3000_00",
    {
      {
        TMD_SRD_DATA_RATE_3000_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_3000_00:\r\n"
        "  SerDes Data Rate: 3000.00 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_3125_00",
    {
      {
        TMD_SRD_DATA_RATE_3125_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_3125_00:\r\n"
        "  SerDes Data Rate: 3125.00 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
    {
    VAL_SYMBOL,
    "mbps_3125_00_FDR",
    {
      {
        TMD_SRD_DATA_RATE_3125_00_FDR,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_3125_00_FDR:\r\n"
        "  SerDes Data Rate: 3125.00 Mbps, using FDR divisor setting\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_3750_00",
    {
      {
        TMD_SRD_DATA_RATE_3750_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_3750_00:\r\n"
        "  SerDes Data Rate: 3750.00 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_4000_00",
    {
      {
        TMD_SRD_DATA_RATE_4000_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_4000_00:\r\n"
        "  SerDes Data Rate: 4000.00 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_4687_50",
    {
      {
        TMD_SRD_DATA_RATE_4687_50,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_4687_50:\r\n"
        "  SerDes Data Rate: 4687.50 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_5000_00",
    {
      {
        TMD_SRD_DATA_RATE_5000_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_5000_00:\r\n"
        "  SerDes Data Rate: 5000.00 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_5208_33",
    {
      {
        TMD_SRD_DATA_RATE_5208_33,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_5208_33:\r\n"
        "  SerDes Data Rate: 5208.33 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_5333_33",
    {
      {
        TMD_SRD_DATA_RATE_5333_33,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_5333_33:\r\n"
        "  SerDes Data Rate: 5333.33 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_5833_33",
    {
      {
        TMD_SRD_DATA_RATE_5833_33,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_5833_33:\r\n"
        "  SerDes Data Rate: 5833.33 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_6000_00",
    {
      {
        TMD_SRD_DATA_RATE_6000_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_6000_00:\r\n"
        "  SerDes Data Rate: 6000.00 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_6250_00",
    {
      {
        TMD_SRD_DATA_RATE_6250_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_6250_00:\r\n"
        "  SerDes Data Rate: 6250.00 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_4375_00",
    {
      {
        TMD_SRD_DATA_RATE_4375_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_4375_00:\r\n"
        "  SerDes Data Rate: 4375.00 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mbps_5468_75",
    {
      {
        TMD_SRD_DATA_RATE_5468_75,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_DATA_RATE.TMD_SRD_DATA_RATE_5468_75:\r\n"
        "  SerDes Data Rate: 5468.75 Mbps\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_MEDIA_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "chip2chip",
    {
      {
        TMD_SRD_MEDIA_TYPE_CHIP2CHIP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_MEDIA_TYPE.TMD_SRD_MEDIA_TYPE_CHIP2CHIP:\r\n"
        "  The 2 communicating chips lay on the same board, therefore very minor Loss is\r\n"
        "  expected.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "short_backplane",
    {
      {
        TMD_SRD_MEDIA_TYPE_SHORT_BACKPLANE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_MEDIA_TYPE.TMD_SRD_MEDIA_TYPE_SHORT_BACKPLANE:\r\n"
        "  The 2 communicating chips lay on a short back-plane or connected through a\r\n"
        "  connector.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "long_backplane",
    {
      {
        TMD_SRD_MEDIA_TYPE_LONG_BACKPLANE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_MEDIA_TYPE.TMD_SRD_MEDIA_TYPE_LONG_BACKPLANE:\r\n"
        "  The 2 communicating chips lay on a long back-plane, this derives a relatively\r\n"
        "  high Loss.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_TX_PHYS_CONF_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "internal",
    {
      {
        TMD_SRD_TX_PHYS_CONF_MODE_INTERNAL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_TX_PHYS_CONF_MODE.TMD_SRD_TX_PHYS_CONF_MODE_INTERNAL:\r\n"
        "  Transmitter physical parameters are set according to an internal\r\n"
        "  representation.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "explicit",
    {
      {
        TMD_SRD_TX_PHYS_CONF_MODE_EXPLICIT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_TX_PHYS_CONF_MODE.TMD_SRD_TX_PHYS_CONF_MODE_EXPLICIT:\r\n"
        "  Transmitter physical parameters are set using VODD/VODP values. When reading\r\n"
        "  physical parameters (using the _get API with this configuration mode),\r\n"
        "  PRE/POST-Emphasis values are also returned, in percents. \r\n"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "atten",
    {
      {
        TMD_SRD_TX_PHYS_CONF_MODE_ATTEN,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_TX_PHYS_CONF_MODE.TMD_SRD_TX_PHYS_CONF_MODE_ATTEN:\r\n"
        "  Transmitter physical parameters are calculated and set, based on the lane\r\n"
        "  attenuation. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "media_type",
    {
      {
        TMD_SRD_TX_PHYS_CONF_MODE_MEDIA_TYPE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_TX_PHYS_CONF_MODE.TMD_SRD_TX_PHYS_CONF_MODE_MEDIA_TYPE:\r\n"
        "  Transmitter physical parameters are calculated and set, based on the Media\r\n"
        "  Type.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_POWER_STATE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "down",
    {
      {
        TMD_SRD_POWER_STATE_DOWN,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_POWER_STATE.TMD_SRD_POWER_STATE_DOWN:\r\n"
        "  Power state: down.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "up",
    {
      {
        TMD_SRD_POWER_STATE_UP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_POWER_STATE.TMD_SRD_POWER_STATE_UP:\r\n"
        "  Power state: up (normal operation).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "up_and_relock",
    {
      {
        TMD_SRD_POWER_STATE_UP_AND_RELOCK,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_POWER_STATE.TMD_SRD_POWER_STATE_UP_AND_RELOCK:\r\n"
        "  Power state: up. Validate SerDes, relock if needed\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_AEQ_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "blind",
    {
      {
        TMD_SRD_AEQ_MODE_BLIND,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_AEQ_MODE.TMD_SRD_AEQ_MODE_BLIND:\r\n"
        "  Auto-equalization mode: blind. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "steady_state",
    {
      {
        TMD_SRD_AEQ_MODE_STEADY_STATE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_AEQ_MODE.TMD_SRD_AEQ_MODE_STEADY_STATE:\r\n"
        "  Auto-equalization mode: steady-state.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_ENTITY_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "lane",
    {
      {
        TMD_SRD_ENTITY_TYPE_LANE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_ENTITY_TYPE.TMD_SRD_ENTITY_TYPE_LANE:\r\n"
        "  SerDes Lane. Range : 0 - 59.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cmu",
    {
      {
        TMD_SRD_ENTITY_TYPE_CMU,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_ENTITY_TYPE.TMD_SRD_ENTITY_TYPE_CMU:\r\n"
        "  Per-SerDes-quartet control unit. Note : SerDes Quartet, also referred to as\r\n"
        "  SerDes Macrocell, contains four SerDes Lanes. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ipu",
    {
      {
        TMD_SRD_ENTITY_TYPE_IPU,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_ENTITY_TYPE.TMD_SRD_ENTITY_TYPE_IPU:\r\n"
        "  Per-SerDes-star control unit (8051). Note:\r\n"
        "  SerDes Star, also referred to as SerDes STAR, is a unit containing several\r\n"
        "  SerDes Quartets. Four SerDes Stars exist: NIF-A/NIF-B/Fabric-A, Fabric-B.All\r\n"
        "  except Fabric-b contain four SerDes quartets. Fabric-B contains three SerDes\r\n"
        "  quartets.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_LANE_ELEMENT_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "rx",
    {
      {
        TMD_SRD_LANE_ELEMENT_RX,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_ELEMENT.TMD_SRD_LANE_ELEMENT_RX:\r\n"
        "  RX-Low-speed control\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tx",
    {
      {
        TMD_SRD_LANE_ELEMENT_TX,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_ELEMENT.TMD_SRD_LANE_ELEMENT_TX:\r\n"
        "  TX-Low-speed control.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "prbs",
    {
      {
        TMD_SRD_LANE_ELEMENT_PRBS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_ELEMENT.TMD_SRD_LANE_ELEMENT_PRBS:\r\n"
        "  PRBS generator/checker.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_los",
    {
      {
        TMD_SRD_LANE_ELEMENT_RX_LOS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_ELEMENT.TMD_SRD_LANE_ELEMENT_RX_LOS:\r\n"
        "  RX LOS detection control registers.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "vcdl",
    {
      {
        TMD_SRD_LANE_ELEMENT_VCDL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_ELEMENT.TMD_SRD_LANE_ELEMENT_VCDL:\r\n"
        "  VCDL TRIM (4-bit data).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_fe",
    {
      {
        TMD_SRD_LANE_ELEMENT_RX_FE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_ELEMENT.TMD_SRD_LANE_ELEMENT_RX_FE:\r\n"
        "  RX front-end trim (4-bit data).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_hs",
    {
      {
        TMD_SRD_LANE_ELEMENT_RX_HS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_ELEMENT.TMD_SRD_LANE_ELEMENT_RX_HS:\r\n"
        "  RX high-speed control.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_sm",
    {
      {
        TMD_SRD_LANE_ELEMENT_RX_SM,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_ELEMENT.TMD_SRD_LANE_ELEMENT_RX_SM:\r\n"
        "  RX state machine.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "preamp",
    {
      {
        TMD_SRD_LANE_ELEMENT_PREAMP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_ELEMENT.TMD_SRD_LANE_ELEMENT_PREAMP:\r\n"
        "  Preamp control.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tx_hs",
    {
      {
        TMD_SRD_LANE_ELEMENT_TX_HS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_ELEMENT.TMD_SRD_LANE_ELEMENT_TX_HS:\r\n"
        "  TX high-speed control.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_CMU_ELEMENT_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "control",
    {
      {
        TMD_SRD_CMU_ELEMENT_CONTROL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_CMU_ELEMENT.TMD_SRD_CMU_ELEMENT_CONTROL:\r\n"
        "  CMU Control Register Set\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "arbitration",
    {
      {
        TMD_SRD_CMU_ELEMENT_ARBITRATION,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_CMU_ELEMENT.TMD_SRD_CMU_ELEMENT_ARBITRATION:\r\n"
        "  CMU Interface Arbitration Register Set.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_IPU_ELEMENT_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "control",
    {
      {
        TMD_SRD_IPU_ELEMENT_CONTROL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_IPU_ELEMENT.TMD_SRD_IPU_ELEMENT_CONTROL:\r\n"
        "  IPU Control Register Set\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "arbitration",
    {
      {
        TMD_SRD_IPU_ELEMENT_ARBITRATION,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_IPU_ELEMENT.TMD_SRD_IPU_ELEMENT_ARBITRATION:\r\n"
        "  IPU Interface Arbitration Register Set.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_LANE_EQ_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "off",
    {
      {
        TMD_SRD_LANE_EQ_MODE_OFF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_EQ_MODE.TMD_SRD_LANE_EQ_MODE_OFF:\r\n"
        "  Adaptive equalizer is off.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "blind",
    {
      {
        TMD_SRD_LANE_EQ_MODE_BLIND,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_EQ_MODE.TMD_SRD_LANE_EQ_MODE_BLIND:\r\n"
        "  Run the algorithm with no previously known parameters about the signal.Blind\r\n"
        "  mode will optimize all preamplifier and DFEsettings. Blind mode is often used\r\n"
        "  to determine the optimum settings, which are then used as preset values.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "preset",
    {
      {
        TMD_SRD_LANE_EQ_MODE_PRESET,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_EQ_MODE.TMD_SRD_LANE_EQ_MODE_PRESET:\r\n"
        "  Preset EQ mode is for setting and aiding the receiver to operate at its\r\n"
        "  near-optimal AEQ settings.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ss",
    {
      {
        TMD_SRD_LANE_EQ_MODE_SS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_EQ_MODE.TMD_SRD_LANE_EQ_MODE_SS:\r\n"
        "  Steady-State mode. The steadystate EQ mode is used for further optimizing\r\n"
        "  preset EQ parameters (fine adjustment) and for adjusting AEQparameters in\r\n"
        "  response to long-term communication channel characteristics variation.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_LANE_LOOPBACK_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "none",
    {
      {
        TMD_SRD_LANE_LOOPBACK_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_LOOPBACK_MODE.TMD_SRD_LANE_LOOPBACK_NONE:\r\n"
        "  Normal (No loopback).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "nsilb",
    {
      {
        TMD_SRD_LANE_LOOPBACK_NSILB,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_LOOPBACK_MODE.TMD_SRD_LANE_LOOPBACK_NSILB:\r\n"
        "  Serial Tx->Rx Loopback, without Driver and PrAmp.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "npilb",
    {
      {
        TMD_SRD_LANE_LOOPBACK_NPILB,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_LOOPBACK_MODE.TMD_SRD_LANE_LOOPBACK_NPILB:\r\n"
        "  Parallel Remote Loopback.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ipilb",
    {
      {
        TMD_SRD_LANE_LOOPBACK_IPILB,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_LANE_LOOPBACK_MODE.TMD_SRD_LANE_LOOPBACK_IPILB:\r\n"
        "  Parallel Internal Loopback.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_PRBS_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "poly_7",
    {
      {
        TMD_SRD_PRBS_MODE_POLY_7,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_PRBS_MODE.TMD_SRD_PRBS_MODE_POLY_7:\r\n"
        "  PRBS pattern mode: X^7 polynomial.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "poly_15",
    {
      {
        TMD_SRD_PRBS_MODE_POLY_15,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_PRBS_MODE.TMD_SRD_PRBS_MODE_POLY_15:\r\n"
        "  PRBS pattern mode: X^15 polynomial.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "poly_23",
    {
      {
        TMD_SRD_PRBS_MODE_POLY_23,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_PRBS_MODE.TMD_SRD_PRBS_MODE_POLY_23:\r\n"
        "  PRBS pattern mode: X^23 polynomial.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "poly_31",
    {
      {
        TMD_SRD_PRBS_MODE_POLY_31,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_PRBS_MODE.TMD_SRD_PRBS_MODE_POLY_31:\r\n"
        "  PRBS pattern mode: X^31 polynomial.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "poly_23_swap_polarity",
    {
      {
        TMD_SRD_PRBS_MODE_POLY_23_SWAP_POLARITY,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_PRBS_MODE.TMD_SRD_PRBS_MODE_POLY_23_SWAP_POLARITY:\r\n"
        "  PRBS pattern mode: X^23 polynomial, with swapped polarity. \r\n"
        "  This mode is needed when working with older devices: SOC_SAND_FAP21V; SOC_SAND_FAP20V; SOC_SAND_FE600.\r\n"
        "  When used, the SerDes lane polarity is swapped before running PRBS,\r\n"
        "  and restored afterwards.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_PRBS_SIGNAL_STAT_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "locked_no_loss",
    {
      {
        TMD_SRD_PRBS_SIGNAL_STAT_LOCKED_NO_LOSS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_PRBS_SIGNAL_STAT.TMD_SRD_PRBS_SIGNAL_STAT_LOCKED_NO_LOSS:\r\n"
        "  PRBS signal status, receiver - locked. No signal loss wath detected. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "locked_after_loss",
    {
      {
        TMD_SRD_PRBS_SIGNAL_STAT_LOCKED_AFTER_LOSS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_PRBS_SIGNAL_STAT.TMD_SRD_PRBS_SIGNAL_STAT_LOCKED_AFTER_LOSS:\r\n"
        "  PRBS signal status, receiver - currently locked, but signal loss was detected.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "not_locked",
    {
      {
        TMD_SRD_PRBS_SIGNAL_STAT_NOT_LOCKED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_PRBS_SIGNAL_STAT.TMD_SRD_PRBS_SIGNAL_STAT_NOT_LOCKED:\r\n"
        "  PRBS signal status, receiver - not locked.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_SRD_RATE_DIVISOR_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "full",
    {
      {
        TMD_SRD_RATE_DIVISOR_FULL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_RATE_DIVISOR.TMD_SRD_RATE_DIVISOR_FULL:\r\n"
        "  Full Data-rate - as it is.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "half",
    {
      {
        TMD_SRD_RATE_DIVISOR_HALF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_RATE_DIVISOR.TMD_SRD_RATE_DIVISOR_HALF:\r\n"
        "  Half Data-rate - divide full data rate by 2.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "quarter",
    {
      {
        TMD_SRD_RATE_DIVISOR_QUARTER,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_RATE_DIVISOR.TMD_SRD_RATE_DIVISOR_QUARTER:\r\n"
        "  Quarter Data-rate - divide full data rate by 4.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#endif /* UI_UNDEF_TEMP */
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_FABRIC_CONNECT_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "fe",
    {
      {
        TMD_FABRIC_CONNECT_MODE_FE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FABRIC_CONNECT_MODE.TMD_FABRIC_CONNECT_MODE_FE:\r\n"
        "  Indicate FAP Fabric interface is connected to FE device.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "back2back",
    {
      {
        TMD_FABRIC_CONNECT_MODE_BACK2BACK,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FABRIC_CONNECT_MODE.TMD_FABRIC_CONNECT_MODE_BACK2BACK:\r\n"
        "  Indicate FAP Fabric interface is connected to another FAP device.Total are 2\r\n"
        "  FAP devices in the system. No FE devices.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mesh",
    {
      {
        TMD_FABRIC_CONNECT_MODE_MESH,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FABRIC_CONNECT_MODE.TMD_FABRIC_CONNECT_MODE_MESH:\r\n"
        "  Indicate FAP Fabric interface is connected to another 2 FAP.Total are 3, 4,\r\n"
        "  ... FAP devices in the system. No FE devices.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "stage_fe",
    {
      {
        TMD_FABRIC_CONNECT_MODE_MULT_STAGE_FE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FABRIC_CONNECT_MODE.TMD_FABRIC_CONNECT_MODE_MULT_STAGE_FE:\r\n"
        "  Indicate FAP Fabric interface is connected to FE device, and that the system\r\n"
        "  is multistage system.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_LINK_STATE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "on",
    {
      {
        TMD_LINK_STATE_ON,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_LINK_STATE.TMD_LINK_STATE_ON:\r\n"
        "  Link is turned on (normal operation).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "off",
    {
      {
        TMD_LINK_STATE_OFF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_LINK_STATE.TMD_LINK_STATE_OFF:\r\n"
        "  Link is turned off.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#if UI_UNDEF_TEMP
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_FC_PRIORITY_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "low",
    {
      {
        TMD_FC_PRIORITY_LOW,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_PRIORITY.TMD_FC_PRIORITY_LOW:\r\n"
        "  Low priority Flow Control.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "high",
    {
      {
        TMD_FC_PRIORITY_HIGH,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_PRIORITY.TMD_FC_PRIORITY_HIGH:\r\n"
        "  High priority Flow Control.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_FC_OOB_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "a",
    {
      {
        TMD_FC_OOB_ID_A,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_OOB_ID.TMD_FC_OOB_ID_A:\r\n"
        "  Tmd Out Of Band Flow Control Interface A.Used for Flow Control reception.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "b",
    {
      {
        TMD_FC_OOB_ID_B,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_OOB_ID.TMD_FC_OOB_ID_B:\r\n"
        "  Tmd Out Of Band Flow Control Interface B.Used for Flow Control reception or\r\n"
        "  generation.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_FC_INGR_GEN_VSQ_NIF_LL_STATE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "disable",
    {
      {
        TMD_FC_INGR_GEN_VSQ_NIF_LL_STATE_DISABLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_INGR_GEN_VSQ_NIF_LL_STATE.TMD_FC_INGR_GEN_VSQ_NIF_LL_STATE_DISABLE:\r\n"
        "  Disable Ingress Flow Control generation via NIF, Link Level.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enable",
    {
      {
        TMD_FC_INGR_GEN_VSQ_NIF_LL_STATE_ENABLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_INGR_GEN_VSQ_NIF_LL_STATE.TMD_FC_INGR_GEN_VSQ_NIF_LL_STATE_ENABLE:\r\n"
        "  Enable Ingress Flow Control generation based on Statistics Flag - STF, (VSQ\r\n"
        "  164-195) via NIF, Link Level. Statistics Flag represents the link on which FC\r\n"
        "  will be generated.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_FC_INGR_GEN_VSQ_NIF_CB_STATE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "enable_stf",
    {
      {
        TMD_FC_INGR_GEN_VSQ_NIF_CB_STATE_ENABLE_STF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_INGR_GEN_VSQ_NIF_CB_STATE.TMD_FC_INGR_GEN_VSQ_NIF_CB_STATE_ENABLE_\r\n"
        "  TF:\r\n"
        "  Enable Ingress Flow Control generation via NIF based on Statistics Flag - STF\r\n"
        "  (VSQ 100-163) via NIF, Class Based.Statistics Flag represents the NIF x Flow\r\n"
        "  Control Class (FCC).For XAUI/SPAUI: NIF in range 0..7 (MAC lane), FCC in\r\n"
        "  range 0..7.For SGMII: NIF in range 0..31 (MAC lane), FCC in range 0..1.Note:\r\n"
        "  effective only if Class Based flow control is enabled at the NIF. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enable_cc",
    {
      {
        TMD_FC_INGR_GEN_VSQ_NIF_CB_STATE_ENABLE_CC,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_INGR_GEN_VSQ_NIF_CB_STATE.TMD_FC_INGR_GEN_VSQ_NIF_CB_STATE_ENABLE_\r\n"
        "  C:\r\n"
        "  Enable Ingress Flow Control generation via NIF based on Category 2-3 (CT) and\r\n"
        "  Connection Class (CC) (VSQ 36-99) via NIF, Class Based.CTxCC represent the\r\n"
        "  NIF x Flow Control Class (FCC).For XAUI/SPAUI: NIF in range 0..7 (MAC lane),\r\n"
        "  FCC in range 0..7.For SGMII: NIF in range 0..31 (MAC lane), FCC in range\r\n"
        "  0..1.Note: effective only if Class Based flow control is enabled at the NIF. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_FC_INGR_GEN_GLB_HP_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "none",
    {
      {
        TMD_FC_INGR_GEN_GLB_HP_MODE_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_INGR_GEN_GLB_HP_MODE.TMD_FC_INGR_GEN_GLB_HP_MODE_NONE:\r\n"
        "  Disable Ingress Flow Control generation via NIF, upon Global Resources High\r\n"
        "  Priority FC indication. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ll",
    {
      {
        TMD_FC_INGR_GEN_GLB_HP_MODE_LL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_INGR_GEN_GLB_HP_MODE.TMD_FC_INGR_GEN_GLB_HP_MODE_LL:\r\n"
        "  Enable Ingress Flow Control generation via NIF, upon Global Resources High\r\n"
        "  Priority FC indication, Link Level. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cb",
    {
      {
        TMD_FC_INGR_GEN_GLB_HP_MODE_CB,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_INGR_GEN_GLB_HP_MODE.TMD_FC_INGR_GEN_GLB_HP_MODE_CB:\r\n"
        "  Enable Ingress Flow Control generation via NIF, upon Global Resources High\r\n"
        "  Priority FC indication, Class Based. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_FC_GEN_OOB_SRC_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "ste",
    {
      {
        TMD_FC_GEN_OOB_SRC_STE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_GEN_OOB_SRC.TMD_FC_GEN_OOB_SRC_STE:\r\n"
        "  Tmd Out Of Band Flow Control source - Ingress Statistics Engine.Corresponds\r\n"
        "  to VSQs 0 - 355.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "nif",
    {
      {
        TMD_FC_GEN_OOB_SRC_NIF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_GEN_OOB_SRC.TMD_FC_GEN_OOB_SRC_NIF:\r\n"
        "  Tmd Out Of Band Flow Control source - Network Interface.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "glb_hp",
    {
      {
        TMD_FC_GEN_OOB_SRC_GLB_HP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_GEN_OOB_SRC.TMD_FC_GEN_OOB_SRC_GLB_HP:\r\n"
        "  Tmd Out Of Band Flow Control source - Global Resource, High Priority FC.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "glb_lp",
    {
      {
        TMD_FC_GEN_OOB_SRC_GLB_LP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_GEN_OOB_SRC.TMD_FC_GEN_OOB_SRC_GLB_LP:\r\n"
        "  Tmd Out Of Band Flow Control source - Global Resource, Low Priority FC.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "none",
    {
      {
        TMD_FC_GEN_OOB_SRC_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_GEN_OOB_SRC.TMD_FC_GEN_OOB_SRC_NONE:\r\n"
        "  Invalid/non-existing source. Serves as 'empty calendar entry' indication.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_FC_OOB_GLB_RCS_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "bdb",
    {
      {
        TMD_FC_OOB_GLB_RCS_ID_BDB,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_OOB_GLB_RCS_ID.TMD_FC_OOB_GLB_RCS_ID_BDB:\r\n"
        "  Global Resources Index- Buffer Descriptors\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "uni",
    {
      {
        TMD_FC_OOB_GLB_RCS_ID_UNI,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_OOB_GLB_RCS_ID.TMD_FC_OOB_GLB_RCS_ID_UNI:\r\n"
        "  Global Resources Index- Unicast Data Buffers\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mul",
    {
      {
        TMD_FC_OOB_GLB_RCS_ID_MUL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_OOB_GLB_RCS_ID.TMD_FC_OOB_GLB_RCS_ID_MUL:\r\n"
        "  Global Resources Index- Multicast Data Buffers\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_FC_REC_OOB_DEST_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "hr",
    {
      {
        TMD_FC_REC_OOB_DEST_HR,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_REC_OOB_DEST.TMD_FC_REC_OOB_DEST_HR:\r\n"
        "  Tmd Out Of Band Flow Control destination - HR scheduling element.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ofp_egq",
    {
      {
        TMD_FC_REC_OOB_DEST_OFP_EGQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_REC_OOB_DEST.TMD_FC_REC_OOB_DEST_OFP_EGQ:\r\n"
        "  Tmd Out Of Band Flow Control destination - Outgoing FAP Port, Egress (EGQ)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ofp_sch_hr_lp",
    {
      {
        TMD_FC_REC_OOB_DEST_OFP_SCH_HR_LP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_REC_OOB_DEST.TMD_FC_REC_OOB_DEST_OFP_SCH_HR_LP:\r\n"
        "  Tmd Out Of Band Flow Control destination - Outgoing FAP Port, HR scheduling\r\n"
        "  element, Low Priority Flow Control.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ofp_sch_hr_hp",
    {
      {
        TMD_FC_REC_OOB_DEST_OFP_SCH_HR_HP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_REC_OOB_DEST.TMD_FC_REC_OOB_DEST_OFP_SCH_HR_HP:\r\n"
        "  Tmd Out Of Band Flow Control destination - Outgoing FAP Port, HR scheduling\r\n"
        "  element, High Priority Flow Control.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "nif",
    {
      {
        TMD_FC_REC_OOB_DEST_NIF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_REC_OOB_DEST.TMD_FC_REC_OOB_DEST_NIF:\r\n"
        "  Tmd Out Of Band Flow Control destination - Network Interface.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "none",
    {
      {
        TMD_FC_REC_OOB_DEST_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_REC_OOB_DEST.TMD_FC_REC_OOB_DEST_NONE:\r\n"
        "  Invalid/non-existing destination.Serves as 'empty calendar entry' indication.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_FC_RCY_OFP_HANDLER_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "none",
    {
      {
        TMD_FC_RCY_OFP_HANDLER_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_RCY_OFP_HANDLER.TMD_FC_RCY_OFP_HANDLER_NONE:\r\n"
        "  Recycling Flow Control on port-level is not handled.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sch_lp",
    {
      {
        TMD_FC_RCY_OFP_HANDLER_SCH_LP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_RCY_OFP_HANDLER.TMD_FC_RCY_OFP_HANDLER_SCH_LP:\r\n"
        "  Recycling Flow Control on port-level is handled by end to end Scheduler as\r\n"
        "  Low Priority FC.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sch_hp",
    {
      {
        TMD_FC_RCY_OFP_HANDLER_SCH_HP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_RCY_OFP_HANDLER.TMD_FC_RCY_OFP_HANDLER_SCH_HP:\r\n"
        "  Recycling Flow Control on port-level is handled by end to end Scheduler as\r\n"
        "  High Priority FC.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq",
    {
      {
        TMD_FC_RCY_OFP_HANDLER_EGQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_RCY_OFP_HANDLER.TMD_FC_RCY_OFP_HANDLER_EGQ:\r\n"
        "  Recycling Flow Control on port-level is handled by the Egress Queuing block.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_FC_ON_GLB_RCS_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "disable",
    {
      {
        TMD_FC_ON_GLB_RCS_MODE_DISABLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_ON_GLB_RCS_MODE.TMD_FC_ON_GLB_RCS_MODE_DISABLE:\r\n"
        "  Do not indicate Flow Control to Scheduler port HR when Global Resources (Low\r\n"
        "  Priority) Flow Control threshold is crossed.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enable_lp",
    {
      {
        TMD_FC_ON_GLB_RCS_MODE_ENABLE_LP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_ON_GLB_RCS_MODE.TMD_FC_ON_GLB_RCS_MODE_ENABLE_LP:\r\n"
        "  Indicate Low Priority Flow Control to Scheduler port HR when Global Resources\r\n"
        "  (Low Priority) Flow Control threshold is crossed.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "enable_hp",
    {
      {
        TMD_FC_ON_GLB_RCS_MODE_ENABLE_HP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_FC_ON_GLB_RCS_MODE.TMD_FC_ON_GLB_RCS_MODE_ENABLE_HP:\r\n"
        "  Indicate High Priority Flow Control to Scheduler port HR when Global\r\n"
        "  Resources (Low Priority) Flow Control threshold is crossed.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_IHP_PCKT_HEADER_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "sop",
    {
      {
        TMD_IHP_PCKT_HEADER_ID_SOP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_IHP_PCKT_HEADER_ID.TMD_IHP_PCKT_HEADER_ID_SOP:\r\n"
        "  Start Of Packet\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "id_0",
    {
      {
        TMD_IHP_PCKT_HEADER_ID_0,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_IHP_PCKT_HEADER_ID.TMD_IHP_PCKT_HEADER_ID_0:\r\n"
        "  Header 0.For Ethernet Port: L2. For TM Port: IS-ITMH (Ingress Shaping).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "id_1",
    {
      {
        TMD_IHP_PCKT_HEADER_ID_1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_IHP_PCKT_HEADER_ID.TMD_IHP_PCKT_HEADER_ID_1:\r\n"
        "  Header 1.For Ethernet Port: L3. For TM Port: ITMH\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "id_2",
    {
      {
        TMD_IHP_PCKT_HEADER_ID_2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_IHP_PCKT_HEADER_ID.TMD_IHP_PCKT_HEADER_ID_2:\r\n"
        "  Header 2.For Ethernet Port: L4. For TM Port: Header following ITMH\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "nof_pckt_header_ids",
    {
      {
        TMD_IHP_NOF_PCKT_HEADER_IDS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_IHP_PCKT_HEADER_ID.TMD_IHP_NOF_PCKT_HEADER_IDS:\r\n"
        "  Total number of Ingress Header Parsing headers.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

EXTERN CONST
   PARAM_VAL_RULES
     TMD_NIF_COUNTER_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "rx_ok_packets",
    {
      {
        TMD_NIF_RX_OK_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_OK_PACKETS:\r\n"
        "  Number of Received packets Includes all pkt types\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_ok_octets",
    {
      {
        TMD_NIF_RX_OK_OCTETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_OK_OCTETS:\r\n"
        "  Number of Received octets in valid frames including CRC.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_packets_with_frames_err",
    {
      {
        TMD_NIF_RX_PACKETS_WITH_FRAMES_ERR,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PACKETS_WITH_FRAMES_ERR:\r\n"
        "  Received Packets with frame error.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_packets_with_crc_err",
    {
      {
        TMD_NIF_RX_PACKETS_WITH_CRC_ERR,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PACKETS_WITH_CRC_ERR:\r\n"
        "  Received Packets with CRC error.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_packets_with_bct_err",
    {
      {
        TMD_NIF_RX_PACKETS_WITH_BCT_ERR,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PACKETS_WITH_BCT_ERR:\r\n"
        "  Received Packets with BCT error.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_pause_frames",
    {
      {
        TMD_NIF_RX_PAUSE_FRAMES,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PAUSE_FRAMES:\r\n"
        "  Received Pause Frames.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_mac_ctrl_frame_ex_pause",
    {
      {
        TMD_NIF_RX_MAC_CTRL_FRAME_EX_PAUSE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_MAC_CTRL_FRAME_EX_PAUSE:\r\n"
        "  Received MAC Control Frames (excluding Pause) \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_mcast_packets",
    {
      {
        TMD_NIF_RX_MCAST_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_MCAST_PACKETS:\r\n"
        "  Received MCAST Packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_bcast_packets",
    {
      {
        TMD_NIF_RX_BCAST_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_BCAST_PACKETS:\r\n"
        "  Received BCAST Packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_packet_len_bins_0_63",
    {
      {
        TMD_NIF_RX_PACKET_LEN_BINS_0_63,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PACKET_LEN_BINS_0_63:\r\n"
        "  Received Packets Length Bins for CRC-32 mode (or CRC-24 mode) 0 - 63\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_packet_len_bins_64",
    {
      {
        TMD_NIF_RX_PACKET_LEN_BINS_64,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PACKET_LEN_BINS_64:\r\n"
        "  Received Packets Length Bins for CRC-32 mode (or CRC-24 mode) 64\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_packet_len_bins_65_127",
    {
      {
        TMD_NIF_RX_PACKET_LEN_BINS_65_127,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PACKET_LEN_BINS_65_127:\r\n"
        "  Received Packets Length Bins for CRC-32 mode (or CRC-24 mode) 65-127\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_packet_len_bins_128_255",
    {
      {
        TMD_NIF_RX_PACKET_LEN_BINS_128_255,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PACKET_LEN_BINS_128_255:\r\n"
        "  Received Packets Length Bins for CRC-32 mode (or CRC-24 mode) 128-255\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_packet_len_bins_256_511",
    {
      {
        TMD_NIF_RX_PACKET_LEN_BINS_256_511,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PACKET_LEN_BINS_256_511:\r\n"
        "  Received Packets Length Bins for CRC-32 mode (or CRC-24 mode) 256-511\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_packet_len_bins_512_1023",
    {
      {
        TMD_NIF_RX_PACKET_LEN_BINS_512_1023,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PACKET_LEN_BINS_512_1023:\r\n"
        "  Received Packets Length Bins for CRC-32 mode (or CRC-24 mode) 512-1023\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_packet_len_bins_1024_1517",
    {
      {
        TMD_NIF_RX_PACKET_LEN_BINS_1024_1517,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PACKET_LEN_BINS_1024_1517:\r\n"
        "  Received Packets Length Bins for CRC-32 mode (or CRC-24 mode) 1024-1517\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_packet_len_bins_1518_max",
    {
      {
        TMD_NIF_RX_PACKET_LEN_BINS_1518_MAX,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PACKET_LEN_BINS_1518_MAX:\r\n"
        "  Received Packets Length Bins for CRC-32 mode (or CRC-24 mode) 1518-MAX\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_packet_len_bins_too_long",
    {
      {
        TMD_NIF_RX_PACKET_LEN_BINS_TOO_LONG,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_PACKET_LEN_BINS_TOO_LONG:\r\n"
        "  Received Packets Length Bins for CRC-32 mode (or CRC-24 mode) too long\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tx_ok_octets",
    {
      {
        TMD_NIF_TX_OK_OCTETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_TX_OK_OCTETS:\r\n"
        "  Number of Transmitted octets in valid frames including CRC.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tx_ok_normal_packets",
    {
      {
        TMD_NIF_TX_OK_NORMAL_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_TX_OK_NORMAL_PACKETS:\r\n"
        "  Number of Transmitted Normal packets (exclude pause frames, M-CAST and B-CAST\r\n"
        "  frames\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tx_mcast_packets",
    {
      {
        TMD_NIF_TX_MCAST_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_TX_MCAST_PACKETS:\r\n"
        "  Transmitted MCAST Packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tx_bcast_packets",
    {
      {
        TMD_NIF_TX_BCAST_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_TX_BCAST_PACKETS:\r\n"
        "  Transmitted BCAST Packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tx_pause_frames",
    {
      {
        TMD_NIF_TX_PAUSE_FRAMES,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_TX_PAUSE_FRAMES:\r\n"
        "  Transmitted MAC Control Frames (excluding FC bursts) \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rx_disc_fifo_ovf",
    {
      {
        TMD_NIF_RX_DISC_FIFO_OVF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_NIF_COUNTER_TYPE.TMD_NIF_RX_DISC_FIFO_OVF:\r\n"
        "  good packets Received that were discarded due to FIFO overflow\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_STAT_COUNTER_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "idr_received_pkt_port_0_cnt",
    {
      {
        TMD_IDR_RECEIVED_PKT_PORT_0_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IDR_RECEIVED_PKT_PORT_0_CNT:\r\n"
        "  Number of received packets for configured FAP port 0.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "idr_received_pkt_port_1_cnt",
    {
      {
        TMD_IDR_RECEIVED_PKT_PORT_1_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IDR_RECEIVED_PKT_PORT_1_CNT:\r\n"
        "  Number of received packets for configured FAP port 1.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "idr_received_pkt_port_2_cnt",
    {
      {
        TMD_IDR_RECEIVED_PKT_PORT_2_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IDR_RECEIVED_PKT_PORT_2_CNT:\r\n"
        "  Number of received packets for configured FAP port 2.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "idr_received_pkt_port_3_cnt",
    {
      {
        TMD_IDR_RECEIVED_PKT_PORT_3_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IDR_RECEIVED_PKT_PORT_3_CNT:\r\n"
        "  Number of received packets for configured FAP port 3.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "idr_reassembly_err_cnt",
    {
      {
        TMD_IDR_REASSEMBLY_ERR_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IDR_REASSEMBLY_ERR_CNT:\r\n"
        "  Number of reassembly errors\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_global_resource_cnt",
    {
      {
        TMD_IQM_GLOBAL_RESOURCE_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_GLOBAL_RESOURCE_CNT:\r\n"
        "  Number of free BDBs (buffer descriptors buffers). The IQM uses this counter\r\n"
        "  to generatedecide on packet Reject and generate Flow-Control signal.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_q_enq_prog_packet_cnt",
    {
      {
        TMD_IQM_VOQ_ENQ_PROG_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "Counts enqueued packets (does not include discarded packets) \n\r"
        "The Queue (VOQ) for which the packets are counted can be set using\n\r"
        "tmd_stat_voq_cnt_select_set API",        
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_q_deq_prog_packet_cnt",
    {
      {
        TMD_IQM_VOQ_DEQ_PROG_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_VOQ_DEQ_PROG_PACKET_CNT:\r\n"
        "Counts dequeued packets (does not include discarded packets) \n\r"
        "The Queue (VOQ) for which the packets are counted can be set using\n\r"
        "tmd_stat_voq_cnt_select_set API",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_vsq_enq_prog_packet_cnt",
    {
      {
        TMD_IQM_VSQ_ENQ_PROG_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "Counts enqueued packets (does not include discarded packets) \n\r"
        "The Queue (VSQ) for which the packets are counted can be set using\n\r"
        "tmd_itm_vsq_counter_set API",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_vsq_deq_prog_packet_cnt",
    {
      {
        TMD_IQM_VSQ_DEQ_PROG_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_VSQ_DEQ_PROG_PACKET_CNT:\r\n"
        "Counts dequeued packets (does not include discarded packets) \n\r"
        "The Queue (VSQ) for which the packets are counted can be set using\n\r"
        "tmd_itm_vsq_counter_set API",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },    
  {
    VAL_SYMBOL,
    "iqm_enqueue_packet_cnt",
    {
      {
        TMD_IQM_ENQUEUE_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_ENQUEUE_PACKET_CNT:\r\n"
        "  Counts enqueued packets (does not include discarded packets)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_dequeue_packet_cnt",
    {
      {
        TMD_IQM_DEQUEUE_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_DEQUEUE_PACKET_CNT:\r\n"
        "  Counts dequeued packets (does not include discarded packets)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_total_discarded_packet_cnt",
    {
      {
        TMD_IQM_TOTAL_DISCARDED_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_TOTAL_DISCARDED_PACKET_CNT:\r\n"
        "  Counts all the packets discarded at the ENQ pipe. Tail Discarded.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_deleted_packet_cnt",
    {
      {
        TMD_IQM_DELETED_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_DELETED_PACKET_CNT:\r\n"
        "  Counts packets discarded in the DEQ\r\n"
        "  process (IPS signaled Discard for the packet). Head Discarded.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_isp_packet_cnt",
    {
      {
        TMD_IQM_ISP_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_ISP_PACKET_CNT:\r\n"
        "  Counts ISP packets passed on IQM2IRR\r\n"
        "  interface. Note: these packets are counted also as DEQ packets (DeqPktCnt)\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_rejected_packet_lack_resource_dbuffs_cnt",
    {
      {
        TMD_IQM_REJECTED_PACKET_LACK_RESOURCE_DBUFFS_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_REJECTED_PACKET_LACK_RESOURCE_DBUFFS_CNT:\r\n"
        "  Counts packets reject in the ENQ process due to lack of free-Dbuffs\r\n"
        "  (UnicastMiniFull-multicast).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_rejected_packet_lack_resource_dbd_cnt",
    {
      {
        TMD_IQM_REJECTED_PACKET_LACK_RESOURCE_DBD_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_REJECTED_PACKET_LACK_RESOURCE_DBD_CNT:\r\n"
        "  Counts packets reject in the ENQ process\r\n"
        "  due to lack of free-BDBs (free-bdb counter value reduced\r\n"
        "  bellow reject thresholds).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_rejected_bdb_protct_pkt_cnt",
    {
      {
        TMD_IQM_REJECTED_BDB_PROTCT_PKT_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_REJECTED_BDB_PROTCT_PKT_CNT:\r\n"
        "  Counts packets rejected in the ENQ\r\n"
        "  process due to panic mode protection of free-bdb\r\n"
        "  resource. Note: This type of discard is not related to\r\n"
        "  threholds and drop-p.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_rejected_oc_bd_pkt_cnt",
    {
      {
        TMD_IQM_REJECTED_OC_BD_PKT_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_REJECTED_OC_BD_PKT_CNT:\r\n"
        "  Counts packets rejected in the ENQ\r\n"
        "  process due to lack of free-BDs (QDR entrees). Note:\r\n"
        "  Packet is discarded if OcBdCounter (occupied BDs) is\r\n"
        "  over threshold.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_irr_rjct_sn_err_pkt_cnt",
    {
      {
        TMD_IQM_IRR_RJCT_SN_ERR_PKT_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_IRR_RJCT_SN_ERR_PKT_CNT:\r\n"
        "  Counts packets rejected in the ENQ\r\n"
        "  process due to sequence number error in the IRR (oc-768c re-sequencing).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_irr_rjct_mc_err_pkt_cnt",
    {
      {
        TMD_IQM_IRR_RJCT_MC_ERR_PKT_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_IRR_RJCT_MC_ERR_PKT_CNT:\r\n"
        "  Counts packets rejected in the ENQ\r\n"
        "  process due to multicast error in the IRR (IRR did not\r\n"
        "  have place in the MC FIFO).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_idr_rjct_rsrc_err_pkt_cnt",
    {
      {
        TMD_IQM_IDR_RJCT_RSRC_ERR_PKT_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_IDR_RJCT_RSRC_ERR_PKT_CNT:\r\n"
        "  Counts packets rejected in the ENQ\r\n"
        "  process resource error signal in the PD: the IDR run out\r\n"
        "  of Dbuffs while re-assembling the packet. Note: in this\r\n"
        "  case the IQM reject the packet but does not release Dbuffs.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "iqm_idr_rjct_qnvalid_err_pkt_cnt",
    {
      {
        TMD_IQM_IDR_RJCT_QNVALID_ERR_PKT_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IQM_IDR_RJCT_QNVALID_ERR_PKT_CNT:\r\n"
        "  Counts packets rejected in the ENQ\r\n"
        "  process due to Q not valid in the ENQ command.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ipt_crc_err_cnt",
    {
      {
        TMD_IPT_CRC_ERR_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IPT_CRC_ERR_CNT:\r\n"
        "  CRC Error counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_cpu_packet_cnt",
    {
      {
        TMD_EGQ_CPU_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_CPU_PACKET_CNT:\r\n"
        "  CPU received packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_ipt_packet_cnt",
    {
      {
        TMD_EGQ_IPT_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_IPT_PACKET_CNT:\r\n"
        "  IPT received packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_fdr_packet_cnt",
    {
      {
        TMD_EGQ_FDR_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_FDR_PACKET_CNT:\r\n"
        "  FDR received packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_rqp_packet_cnt",
    {
      {
        TMD_EGQ_RQP_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_RQP_PACKET_CNT:\r\n"
        "  RQP2EHP packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_rqp_discard_packet_cnt",
    {
      {
        TMD_EGQ_RQP_DISCARD_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_RQP_DISCARD_PACKET_CNT:\r\n"
        "  RQP2EHP discarded packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_ehp_unicast_packet_cnt",
    {
      {
        TMD_EGQ_EHP_UNICAST_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_EHP_UNICAST_PACKET_CNT:\r\n"
        "  RQP2EHP Unicast packet counter. If CheckBwToOfp is set counts OfpToCheckBw\r\n"
        "  packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_ehp_multicast_high_packet_cnt",
    {
      {
        TMD_EGQ_EHP_MULTICAST_HIGH_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_EHP_MULTICAST_HIGH_PACKET_CNT:\r\n"
        "  EHP2PQP Multicast High packet counter. If CheckBwToOfp is set counts\r\n"
        "  OfpToCheckBw\r\n"
        "  packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_ehp_multicast_low_packet_cnt",
    {
      {
        TMD_EGQ_EHP_MULTICAST_LOW_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_EHP_MULTICAST_LOW_PACKET_CNT:\r\n"
        "  EHP2PQP Multicast Low packet counter. If CheckBwToOfp is set counts\r\n"
        "  OfpToCheckBw\r\n"
        "  packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_ehp_discard_packet_cnt",
    {
      {
        TMD_EGQ_EHP_DISCARD_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_EHP_DISCARD_PACKET_CNT:\r\n"
        "  EHP2PQP discarded packet counter. If CheckBwToOfp is set counts OfpToCheckBw\r\n"
        "  packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_pqp_unicast_high_packet_cnt",
    {
      {
        TMD_EGQ_PQP_UNICAST_HIGH_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_PQP_UNICAST_HIGH_PACKET_CNT:\r\n"
        "  PQP2FQP Unicast High packet counter. If CheckBwToOfp is set counts\r\n"
        "  OfpToCheckBw\r\n"
        "  packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_pqp_unicast_low_packet_cnt",
    {
      {
        TMD_EGQ_PQP_UNICAST_LOW_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_PQP_UNICAST_LOW_PACKET_CNT:\r\n"
        "  PQP2FQP Unicast Low packet counter. If CheckBwToOfp is set counts OfpToCheckBw\r\n"
        "  packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_pqp_multicast_high_packet_cnt",
    {
      {
        TMD_EGQ_PQP_MULTICAST_HIGH_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_PQP_MULTICAST_HIGH_PACKET_CNT:\r\n"
        "  PQP2FQP Multicast High packet counter. If CheckBwToOfp is set counts\r\n"
        "  OfpToCheckBw\r\n"
        "  packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_pqp_multicast_low_packet_cnt",
    {
      {
        TMD_EGQ_PQP_MULTICAST_LOW_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_PQP_MULTICAST_LOW_PACKET_CNT:\r\n"
        "  QP2FQP Multicast Low packet counter. If CheckBwToOfp is set counts\r\n"
        "  OfpToCheckBw\r\n"
        "  packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_pqp_unicast_high_bytes_cnt",
    {
      {
        TMD_EGQ_PQP_UNICAST_HIGH_BYTES_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_PQP_UNICAST_HIGH_BYTES_CNT:\r\n"
        "  PQP2FQP Unicast High bytes counter. If CheckBwToOfp is set counts OfpToCheckBw\r\n"
        "  packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_pqp_unicast_low_bytes_cnt",
    {
      {
        TMD_EGQ_PQP_UNICAST_LOW_BYTES_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_PQP_UNICAST_LOW_BYTES_CNT:\r\n"
        "  PQP2FQP Unicast Low bytes counter. If CheckBwToOfp is set counts OfpToCheckBw\r\n"
        "  packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_pqp_multicast_high_bytes_cnt",
    {
      {
        TMD_EGQ_PQP_MULTICAST_HIGH_BYTES_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_PQP_MULTICAST_HIGH_BYTES_CNT:\r\n"
        "  PQP2FQP Multicast High bytes counter. If CheckBwToOfp is set counts\r\n"
        "  OfpToCheckBw\r\n"
        "  packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_pqp_multicast_low_bytes_cnt",
    {
      {
        TMD_EGQ_PQP_MULTICAST_LOW_BYTES_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_PQP_MULTICAST_LOW_BYTES_CNT:\r\n"
        "  PQP2FQP Multicast Low bytes counter. If CheckBwToOfp is set counts\r\n"
        "  OfpToCheckBw\r\n"
        "  packets\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_pqp_discard_unicast_packet_cnt",
    {
      {
        TMD_EGQ_PQP_DISCARD_UNICAST_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_PQP_DISCARD_UNICAST_PACKET_CNT:\r\n"
        "  PQP discarded Unicast packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_pqp_discard_multicast_packet_cnt",
    {
      {
        TMD_EGQ_PQP_DISCARD_MULTICAST_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_PQP_DISCARD_MULTICAST_PACKET_CNT:\r\n"
        "  PQP discarded Multicast packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_fqp_packet_cnt",
    {
      {
        TMD_EGQ_FQP_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_FQP_PACKET_CNT:\r\n"
        "  FQP2EPE packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_local_route_sop_cnt",
    {
      {
        TMD_EGQ_LOCAL_ROUTE_SOP_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_LOCAL_ROUTE_SOP_CNT:\r\n"
        "  Counts the number of Sop received from local\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_fabric_route_sop_cnt",
    {
      {
        TMD_EGQ_FABRIC_ROUTE_SOP_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_FABRIC_ROUTE_SOP_CNT:\r\n"
        "  Counts the number of Sop received from fabric\r\n"
        "  and whether there was counter overflow\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_cpu_interface_sop_cnt",
    {
      {
        TMD_EGQ_CPU_INTERFACE_SOP_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_CPU_INTERFACE_SOP_CNT:\r\n"
        "  Counts the number of Sop received from CPU\r\n"
        "  interface and whether there was counter overflow\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_pacekt_reassembly_output_sop_cnt",
    {
      {
        TMD_EGQ_PACEKT_REASSEMBLY_OUTPUT_SOP_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_PACEKT_REASSEMBLY_OUTPUT_SOP_CNT:\r\n"
        "  Packet Reassembly Output Sop Counter: Indicates the\r\n"
        "  number of Sop packets completed packet reassembly\r\n"
        "  without errors and whether there was counter overflow\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq_pacekt_epe_packet_cnt",
    {
      {
        TMD_EGQ_PACEKT_EPE_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_EGQ_PACEKT_EPE_PACKET_CNT:\r\n"
        "  EPE2PNI packet counter. If bit 32 is\r\n"
        "  set\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ire_cpu_packet_cnt",
    {
      {
        TMD_IRE_CPU_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IRE_CPU_PACKET_CNT:\r\n"
        "  CPU ingress received packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ire_olp_packet_cnt",
    {
      {
        TMD_IRE_OLP_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IRE_OLP_PACKET_CNT:\r\n"
        "  OLP ingress received packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ire_nifa_packet_cnt",
    {
      {
        TMD_IRE_NIFA_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IRE_NIFA_PACKET_CNT:\r\n"
        "  NIFA ingress received packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ire_nifb_packet_cnt",
    {
      {
        TMD_IRE_NIFB_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IRE_NIFB_PACKET_CNT:\r\n"
        "  NIFb ingress received packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ire_rcycle_packet_cnt",
    {
      {
        TMD_IRE_RCYCLE_PACKET_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_IRE_RCYCLE_PACKET_CNT:\r\n"
        "  NIFb ingress received packet counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fcr_programmable_cells_cnt",
    {
      {
        TMD_FCR_PROGRAMMABLE_CELLS_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_FCR_PROGRAMMABLE_CELLS_CNT:\r\n"
        "  Programmable Cells Counter: Programmable-Cells-Counter -count all the cells\r\n"
        "  trapped by the match filter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fcr_credit_cells_cnt",
    {
      {
        TMD_FCR_CREDIT_CELLS_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_FCR_CREDIT_CELLS_CNT:\r\n"
        "  Credit-Cells-Counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fct_flow_status_cells_cnt",
    {
      {
        TMD_FCT_FLOW_STATUS_CELLS_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_FCT_FLOW_STATUS_CELLS_CNT:\r\n"
        "  Flow Status Cells Counter: Flow Status-Cells-C\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fct_reachability_cells_cnt",
    {
      {
        TMD_FCT_REACHABILITY_CELLS_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_FCT_REACHABILITY_CELLS_CNT:\r\n"
        "  Reachability-Cells-Counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fct_total_cells_cnt",
    {
      {
        TMD_FCT_TOTAL_CELLS_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_FCT_TOTAL_CELLS_CNT:\r\n"
        "  Total-Cells-Counter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fct_credit_drop_cnt",
    {
      {
        TMD_FCT_CREDIT_DROP_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_FCT_CREDIT_DROP_CNT:\r\n"
        "  Credit_drop_count -counts dropped cells\r\n"
        "  according to fifo overflow.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fct_fs_drop_cnt",
    {
      {
        TMD_FCT_FS_DROP_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_FCT_FS_DROP_CNT:\r\n"
        "  Fs_drop_count -counts dropped cells according to fifo overflow.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fct_reach_drop_cnt",
    {
      {
        TMD_FCT_REACH_DROP_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_FCT_REACH_DROP_CNT:\r\n"
        "  Reach_drop_count -counts dropped cells according to fifo overflow.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fdt_data_cell_cnt",
    {
      {
        TMD_FDT_DATA_CELL_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_FDT_DATA_CELL_CNT:\r\n"
        "  Data-Cell-Counter.This 31-bit counter holds\r\n"
        "  the number of data cells transmitted to the MACT (in 32B\r\n"
        "  cell for FSC and 128B for VSC )\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fdt_tdm_data_cell_cnt",
    {
      {
        TMD_FDT_TDM_DATA_CELL_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_FDT_TDM_DATA_CELL_CNT:\r\n"
        "  TDM-Data-Cell-Counter.This 31-bit\r\n"
        "  counter holds the number of TDM cells transmitted to the MACT .\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fdt_local_tdm_data_cell_cnt",
    {
      {
        TMD_FDT_LOCAL_TDM_DATA_CELL_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_FDT_LOCAL_TDM_DATA_CELL_CNT:\r\n"
        "  Local-TDM-Data-Cell-Counter.This\r\n"
        "  31-bit counter holds the number of TDM cells transmitted to the EGQ\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "credit_cnt",
    {
      {
        TMD_SCH_CREDIT_CNT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_STAT_COUNTER_TYPE.TMD_SCH_CREDIT_CNT:\r\n"
        "  Counts issued credits that match the filter.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

EXTERN CONST
   PARAM_VAL_RULES
     TMD_DIAG_QDR_BIST_ADDR_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "normal",
    {
      {
        TMD_DIAG_QDR_BIST_ADDR_MODE_NORMAL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DIAG_QDR_BIST_ADDR_MODE.TMD_DIAG_QDR_BIST_ADDR_MODE_NORMAL:\r\n"
        "  Normal mode. Starting from start address to end address. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "address_shift",
    {
      {
        TMD_DIAG_QDR_BIST_ADDR_MODE_ADDRESS_SHIFT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DIAG_QDR_BIST_ADDR_MODE.TMD_DIAG_QDR_BIST_ADDR_MODE_ADDRESS_SHIFT:\r\n"
        "  Every write command the address is shifted in cyclic manner one bit left.\r\n"
        "  Address is reset if it exceeds End Address. Intended for walking one /\r\n"
        "  walking zero tests. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "address_test",
    {
      {
        TMD_DIAG_QDR_BIST_ADDR_MODE_ADDRESS_TEST,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DIAG_QDR_BIST_ADDR_MODE.TMD_DIAG_QDR_BIST_ADDR_MODE_ADDRESS_TEST:\r\n"
        "  Writes walking ones and zeros on the address bus and finds if any address bit\r\n"
        "  is defective.If this mode chosen for address selection then it also override\r\n"
        "  the data mode.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_DIAG_QDR_BIST_DATA_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "normal",
    {
      {
        TMD_DIAG_QDR_BIST_DATA_MODE_NORMAL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DIAG_QDR_BIST_DATA_MODE.TMD_DIAG_QDR_BIST_DATA_MODE_NORMAL:\r\n"
        "  Normal mode. Write incrementally each of the pattern words.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "pattern_bit",
    {
      {
        TMD_DIAG_QDR_BIST_DATA_MODE_PATTERN_BIT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DIAG_QDR_BIST_DATA_MODE.TMD_DIAG_QDR_BIST_DATA_MODE_PATTERN_BIT:\r\n"
        "  Every write command one-bit data from the BistPattern is duplicated on the\r\n"
        "  entire data bus. For one burst of 2 commands, 2 consecutive bits are used.\r\n"
        "  All 32b of every BistPattern word are used in this mode.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "random",
    {
      {
        TMD_DIAG_QDR_BIST_DATA_MODE_RANDOM,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DIAG_QDR_BIST_DATA_MODE.TMD_DIAG_QDR_BIST_DATA_MODE_RANDOM:\r\n"
        "  Every write command is random data, generated by x^31+x^28+1 polynomial. For\r\n"
        "  one burst of two commands, 2 consecutive 26b data writes are done. \r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "data_shift",
    {
      {
        TMD_DIAG_QDR_BIST_DATA_MODE_DATA_SHIFT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DIAG_QDR_BIST_DATA_MODE.TMD_DIAG_QDR_BIST_DATA_MODE_DATA_SHIFT:\r\n"
        "  Every write command the data is shifted in cyclic manner one bit left.\r\n"
        "  For one burst of 2 commands, 2 consecutive shifts are done. Only BistPattern0\r\n"
        "  word is used in this mode.\r\n"
        "  Intended for walking one / walking zero tests.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_DIAG_BIST_DATA_PATERN_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "diff",
    {
      {
        TMD_DIAG_BIST_DATA_PATTERN_DIFF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DIAG_BIST_DATA_PATERN.TMD_DIAG_BIST_DATA_PATERN_DIFF:\r\n"
        "  Fill the data to write by 1010101... (Bits). The DATA_MODE may use this data\r\n"
        "  pattern in different ways see TMD_DIAG_QDR_BIST_DATA_MODE. Random mode\r\n"
        "  ignores these values.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "one",
    {
      {
        TMD_DIAG_BIST_DATA_PATTERN_ONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DIAG_BIST_DATA_PATERN.TMD_DIAG_BIST_DATA_PATERN_DIFF:\r\n"
        "  Fill the data to write by 1111111... (Bits). The DATA_MODE may use this data\r\n"
        "  pattern in different ways see TMD_DIAG_QDR_BIST_DATA_MODE. Random mode\r\n"
        "  ignores these values.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "zero",
    {
      {
        TMD_DIAG_BIST_DATA_PATTERN_ZERO,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DIAG_BIST_DATA_PATERN.TMD_DIAG_BIST_DATA_PATERN_DIFF:\r\n"
        "  Fill the data to write by 000000... (Bits). The DATA_MODE may use this data\r\n"
        "  pattern in different ways see TMD_DIAG_QDR_BIST_DATA_MODE. Random mode\r\n"
        "  ignores these values.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_DIAG_DRAM_BIST_DATA_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "normal",
    {
      {
        TMD_DIAG_DRAM_BIST_DATA_MODE_NORMAL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DIAG_DRAM_BIST_DATA_MODE.TMD_DIAG_DRAM_BIST_DATA_MODE_NORMAL:\r\n"
        "  Normal mode. Write incrementally each of the pattern words.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "pattern_bit",
    {
      {
        TMD_DIAG_DRAM_BIST_DATA_MODE_PATTERN_BIT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DIAG_DRAM_BIST_DATA_MODE.TMD_DIAG_DRAM_BIST_DATA_MODE_PATTERN_BIT:\r\n"
        "  The BIST composes the write/read pattern in the following manner. For each\r\n"
        "  cycle, a different bit is selected from the BIST pattern register in an\r\n"
        "  ncremental manner. This bit is duplicated on all of the DRAM data bus (all\r\n"
        "  DQs receive the same bit). This allows a controllable pattern that is 256\r\n"
        "  write cycles long.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#endif /* UI_UNDEF_TEMP */
EXTERN CONST
   PARAM_VAL_RULES
     TMD_PACKET_SEND_PATH_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "ingress",
    {
      {
        TMD_PACKET_SEND_PATH_TYPE_INGRESS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  This is the normal packet sending path:   \r\n"
        "  packet pass through the tmd starting from the ingress.\r\n"
        "  this packet may contain \r\n"
        "   - payload only (for RAW ports)\r\n"
        "   - ITMH header and payload (for TM ports)\r\n"
        "       - refer to tmd_hpu_itmh_build in order to build  ITMH header.\r\n"
        "   - Ethernet Header (with or without VLAN Tag) (for Ethernet ports). \r\n"
        "       - refer to tmd_pp_ethernet_header_build in order to build the Eth Header.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egress",
    {
      {
        TMD_PACKET_SEND_PATH_TYPE_EGRESS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  This is the reduced packet sending path: \r\n"
        "  packet pass through the tmd starting from the egress. \r\n"
        "  this packet may contain \r\n"
        "   - packets transmitted through this path are in fabric format (FTMH) \r\n"
        "     and may be transmitted out to any port type (RAW, TM, Ethernet).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
/********************************************************/
/********************************************************/
/********************************************************/
/*

EXTERN CONST
   PARAM_VAL_RULES
     TMD_STAT_CNTR_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "nof_cntr_types",
    {
      {
        TMD_STAT_NOF_CNTR_TYPES,
          / *
           * Casting added here just to keep the compiler silent.
           * /
        (long)""
        "  TMD_STAT_CNTR_TYPE.TMD_STAT_NOF_CNTR_TYPES:\r\n"
        "  Total number of statistic counters.\r\n"
        "",
          / *
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           * /
        (long)NULL
      }
    }
  },
/ *
 * Last element. Do not remove.
 * /
  {
    VAL_END_OF_LIST
  }
}
#endif
*/

 /*
  * } ENUM RULES
  */

/********************************************************/
/********************************************************/
EXTERN CONST
   PARAM_VAL_RULES
     TMD_CELL_LINKS_NUMBER_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0 ,0,
          /*
           * Number of times this value can be repeated (i.e.,
           * value is an array). Must be at least 1!
           */
        TMD_CELL_NOF_LINKS_IN_PATH_LINKS,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#if UI_UNDEF_TEMP
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_LANE_NDX_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        TMD_SRD_NOF_LANES-1, 0,
        1,
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "all",
    {
      {
        TMD_SRD_NOF_LANES,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SRD_NOF_LANES (60):\r\n"
        "  Acting on all SerDes lanes\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#endif /* UI_UNDEF_TEMP */
/********************************************************/
/********************************************************/
EXTERN CONST
   PARAM_VAL_RULES
     TMD_CELL_CPU2CPU_DATA_IN_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0 ,0,
          /*
           * Number of times this value can be repeated (i.e.,
           * value is an array). Must be at least 1!
           */
        SOC_SAND_DATA_CELL_PAYLOAD_IN_UINT32S,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
      TMD_SAND_DEVICE_ENTITY_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "FE1",
    {
      {
        SOC_SAND_FE1_ENTITY,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SAND_DEVICE_ENTITY.SOC_SAND_FE1_ENTITY:\r\n"
        "  FE1 Entity.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "FE2",
    {
      {
        SOC_SAND_FE2_ENTITY,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SAND_DEVICE_ENTITY.SOC_SAND_FE2_ENTITY:\r\n"
        "  FE2 Entity.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "FE3",
    {
      {
        SOC_SAND_FE3_ENTITY,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_SAND_DEVICE_ENTITY.SOC_SAND_FE3_ENTITY:\r\n"
        "  FE3 Entity.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "FOP",
    {
      {
        SOC_SAND_FOP_ENTITY,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_SAND_DEVICE_ENTITY.SOC_SAND_FOP_ENTITY:\r\n"
          "  FIP Entity.\r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

 /*
  * } ENUM RULES
  */
/********************************************************/


/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_DBG_FORCE_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "none",
    {
      {
        TMD_DBG_FORCE_MODE_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DBG_FORCE_MODE.TMD_DBG_FORCE_MODE_NONE:\r\n"
        "  Traffic route not forced.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "local",
    {
      {
        TMD_DBG_FORCE_MODE_LOCAL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DBG_FORCE_MODE.TMD_DBG_FORCE_MODE_LOCAL:\r\n"
        "  Traffic route forced to the local route (never routed through the fabric).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "fabric",
    {
      {
        TMD_DBG_FORCE_MODE_FABRIC,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DBG_FORCE_MODE.TMD_DBG_FORCE_MODE_FABRIC:\r\n"
        "  Traffic route forced to the fabric route (always routed through the fabric).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

 /*
  * } ENUM RULES
  */
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     TMD_DBG_FLUSH_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "dequeue",
    {
      {
        TMD_DBG_FLUSH_MODE_DEQUEUE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DBG_FLUSH_MODE.TMD_DBG_FLUSH_MODE_DEQUEUE:\r\n"
        "  The packets in the queue are dequeued and go to their destination.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "delete",
    {
      {
        TMD_DBG_FLUSH_MODE_DELETE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  TMD_DBG_FLUSH_MODE.TMD_DBG_FLUSH_MODE_DELETE:\r\n"
        "  The packets in the queue are deleted.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

 /*
  * } ENUM RULES
  */
/********************************************************/

/********************************************************/

EXTERN CONST
  PARAM_VAL_RULES
    TMD_ACC_MODULE_ID_rule[]
#ifdef INIT
=
{
  {
    VAL_SYMBOL,
      "olp",
    {
      {
        TMD_OLP_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_OLP_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "ire",
    {
      {
        TMD_IRE_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_IRE_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "idr",
    {
      {
        TMD_IDR_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_IDR_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "irr",
    {
      {
        TMD_IRR_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_IRR_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "ihp",
    {
      {
        TMD_IHP_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_IHP_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "qdr",
    {
      {
        TMD_QDR_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_QDR_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "ips",
    {
      {
        TMD_IPS_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_IPS_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "ipt",
    {
      {
        TMD_IPT_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_IPT_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "dpi_a",
    {
      {
        TMD_DPI_A_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_DPI_A_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "dpi_b",
    {
      {
        TMD_DPI_B_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_DPI_B_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "dpi_c",
    {
      {
        TMD_DPI_C_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_DPI_C_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "dpi_d",
    {
      {
        TMD_DPI_D_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_DPI_D_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "dpi_e",
    {
      {
        TMD_DPI_E_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_DPI_E_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "dpi_f",
    {
      {
        TMD_DPI_F_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_DPI_F_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "rtp",
    {
      {
        TMD_RTP_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_RTP_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "egq",
    {
      {
        TMD_EGQ_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_EGQ_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "sch",
    {
      {
        TMD_SCH_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_SCH_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "cfc",
    {
      {
        TMD_CFC_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_CFC_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "epni",
    {
      {
        TMD_EPNI_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_EPNI_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "iqm",
    {
      {
        TMD_IQM_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_IQM_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "mmu",
    {
      {
        TMD_MMU_ID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  TMD_MODULE_ID.TMD_MMU_ID \r\n"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
   /*
    * Last element. Do not remove.
    */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/*
* } ENUM RULES
*/
/********************************************************/
/********************************************************/
EXTERN CONST
   PARAM_VAL_RULES
     TMD_ACC_IWRITE_VAL_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0 ,0,
          /*
           * Number of times this value can be repeated (i.e.,
           * value is an array). Must be at least 1!
           */
        3,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
/********************************************************/
EXTERN CONST
  PARAM_VAL_RULES
    TMD_ACC_SIZE_ID_rule[]
#ifdef INIT
=
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
          3, 1,
          1,
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
    /*
    * Last element. Do not remove.
    */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/

/********************************************************/
EXTERN CONST
   PARAM_VAL_RULES
     TMD_CELL_FE_LOCATION_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "fe1", 
    { 
      { 
        TMD_CELL_FE_LOCATION_FE1, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  TMD_CELL_FE_LOCATION.TMD_CELL_FE_LOCATION_FE1:\n\r"
        "  The fabric destination of the inband cell is located at the first or third\n\r"
        "  stage in a multi-stage system: FE1 or FE3.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fe2", 
    { 
      { 
        TMD_CELL_FE_LOCATION_FE2, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  TMD_CELL_FE_LOCATION.TMD_CELL_FE_LOCATION_FE2:\n\r"
        "  The fabric destination of the inband cell is located in a single-stage system\n\r"
        "  or at the second stage in a multi-stage system: FE2.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

 /* 
  * } ENUM RULES 
  */
/********************************************************/        
/********************************************************/        
EXTERN CONST 
   PARAM_VAL_RULES 
     tmd_api_free_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0,0,
          /*
           * Number of times this value can be repeated (i.e.,
           * value is an array). Must be at least 1!
           */
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
#if UI_UNDEF_TEMP
EXTERN CONST
   PARAM_VAL_RULES
     tmd_api_serdes_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0,0,
          /*
           * Number of times this value can be repeated (i.e.,
           * value is an array). Must be at least 1!
           */
        TMD_SRD_NOF_LANES,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     TMD_DRAM_PATTERN_MODE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "auto", 
    { 
      { 
        TMD_DRAM_PATTERN_MODE_AUTO, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  TMD_DRAM_PATTERN_MODE.TMD_DRAM_PATTERN_MODE_AUTO:\n\r"
        "  In this mode, the pattern is already configured to get a bottom threshold on\n\r"
        "  the window size (worst case).\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "user_def", 
    { 
      { 
        TMD_DRAM_PATTERN_MODE_USER_DEF, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  TMD_DRAM_PATTERN_MODE.TMD_DRAM_PATTERN_MODE_USER_DEF:\n\r"
        "  In this mode, the pattern is configurable in the 'data' field.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 
#endif /* UI_UNDEF_TEMP */
/********************************************************/        
/********************************************************/        
 
EXTERN CONST
   PARAM_VAL_RULES
     tmd_api_empty_vals[]
#ifdef INIT
   =
{
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
/********************************************************/
/********************************************************/


EXTERN CONST
   PARAM_VAL_RULES
     tmd_api_members_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0xff,
        0,
        80,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;


/********************************************************/
EXTERN CONST
   PARAM
     tmd_api_params[]
#ifdef INIT
   =
{
#ifdef UI_DEFAULT_SECTION/* { default_section*/
#endif /* } default_section*/
#ifdef UI_UNDEF/* { mgmt*/
  {
    PARAM_TMD_REGISTER_DEVICE_REGISTER_DEVICE_ID,
    "register_device",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure registers a new device to be taken\r\n"
    "  care of by this device driver. Physical device\r\n"
    "  must be accessible by CPU when this call is made..\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt register_device base_address 0 reset_device_ptr 0\r\n"
#endif
    "",
    "",
    {BIT(0), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_REGISTER_DEVICE_REGISTER_DEVICE_BASE_ADDRESS_ID,
    "base_address",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  base_address:\r\n"
    "  Base address of direct access memory assigned\r\n"
    "  for device's registers.\r\n"
    "  This parameter needs to be specified even if\r\n"
    "  physical access to device is not by direct\r\n"
    "  access memory since all logic, within driver,\r\n"
    "  up to actual physical access, assumes 'virtual'\r\n"
    "  direct access memory.\r\n"
    "  Memory block assigned by this pointer must not\r\n"
    "  overlap other memory blocks in user's system\r\n"
    "  and certainly not memory blocks assigned to other\r\n"
    "  TMD devices using this procedure.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt register_device base_address 0 reset_device_ptr 0\r\n"
#endif
    "",
    "",
    {BIT(0), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_REGISTER_DEVICE_REGISTER_DEVICE_RESET_DEVICE_PTR_ID,
    "reset_device_ptr",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  reset_device_ptr:\r\n"
    "  BSP-function for device reset.\r\n"
    "  Refer to 'SOC_SAND_RESET_DEVICE_FUNC_PTR' definition.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt register_device base_address 0 reset_device_ptr 0\r\n"
#endif
    "",
    "",
    {BIT(0), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_UNREGISTER_DEVICE_UNREGISTER_DEVICE_ID,
    "unregister_device",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Undo tmd_register_device()\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt unregister_device\r\n"
#endif
    "",
    "",
    {BIT(1), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_OPERATION_MODE_SET_OPERATION_MODE_SET_ID,
    "operation_mode_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set tmd device operation mode.\r\n"
    "  This defines configurations such as support for certain header types etc. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt operation_mode_set stag_enable 0 is_combo_nif\r\n"
    "  0 is_fe200_fabric 0 is_fap20_in_system 0 pp_enable 0 device_sub_type 0\r\n"
#endif
    "",
    "",
    {BIT(4), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_OPERATION_MODE_SET_OPERATION_MODE_SET_OP_MODE_STAG_ENABLE_ID,
    "stag_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  op_mode.stag_enable:\r\n"
    "  Enable/disable statistics tag.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt operation_mode_set stag_enable 0 is_combo_nif\r\n"
    "  0 is_fe200_fabric 0 is_fap20_in_system 0 pp_enable 0 device_sub_type 0\r\n"
#endif
    "",
    "",
    {BIT(4), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_OPERATION_MODE_SET_OPERATION_MODE_SET_OP_MODE_IS_COMBO_NIF_ID,
    "is_combo_nif",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  op_mode.is_combo_nif:\r\n"
    "  Out of total of 15 SerDes quartets, two (one per internal NIF Group\r\n"
    "  consisting of 4 MAL-s) may be assigned to either Network or Fabric interfaces.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt operation_mode_set stag_enable 0 is_combo_nif\r\n"
    "  0 is_fe200_fabric 0 is_fap20_in_system 0 pp_enable 0 device_sub_type 0\r\n"
#endif
    "",
    "",
    {BIT(4), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_OPERATION_MODE_SET_OPERATION_MODE_SET_OP_MODE_IS_FE200_FABRIC_ID,
    "is_fe200_fabric",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  op_mode.is_fe200_fabric:\r\n"
    "  If TRUE, the system uses SOC_SAND_FE200 fabric. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt operation_mode_set stag_enable 0 is_combo_nif\r\n"
    "  0 is_fe200_fabric 0 is_fap20_in_system 0 pp_enable 0 device_sub_type 0\r\n"
#endif
    "",
    "",
    {BIT(4), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_OPERATION_MODE_SET_OPERATION_MODE_SET_OP_MODE_IS_FAP20_IN_SYSTEM_ID,
    "is_fap20_in_system",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  op_mode.is_fap20_in_system:\r\n"
    "  If TRUE, fap20 devices exist in the system. This imposes certain limitations\r\n"
    "  on Tmd behaviour (e.g. fabric cells must be fixed size etc.).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt operation_mode_set stag_enable 0 is_combo_nif\r\n"
    "  0 is_fe200_fabric 0 is_fap20_in_system 0 pp_enable 0 device_sub_type 0\r\n"
#endif
    "",
    "",
    {BIT(4), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_OPERATION_MODE_SET_OPERATION_MODE_SET_OP_MODE_PP_ENABLE_ID,
    "pp_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  op_mode.pp_enable:\r\n"
    "  Enable Packet Processing features.Valid only for Tmd revisions that support\r\n"
    "  Packet Processing.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt operation_mode_set stag_enable 0 is_combo_nif\r\n"
    "  0 is_fe200_fabric 0 is_fap20_in_system 0 pp_enable 0 device_sub_type 0\r\n"
#endif
    "",
    "",
    {BIT(4), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_OPERATION_MODE_SET_OPERATION_MODE_SET_OP_MODE_DEVICE_SUB_TYPE_ID,
    "device_sub_type",
    (PARAM_VAL_RULES *)&TMD_REVISION_SUB_TYPE_ID_rule[0],
    (sizeof(TMD_REVISION_SUB_TYPE_ID_rule) / sizeof(TMD_REVISION_SUB_TYPE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  op_mode.device_sub_type:\r\n"
    "  Tmd device sub-type\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt operation_mode_set stag_enable 0 is_combo_nif\r\n"
    "  0 is_fe200_fabric 0 is_fap20_in_system 0 pp_enable 0 device_sub_type 0\r\n"
#endif
    "",
    "",
    {BIT(4), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_OPERATION_MODE_GET_OPERATION_MODE_GET_ID,
    "operation_mode_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set tmd device operation mode.\r\n"
    "  This defines configurations such as support for certain header types etc. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt operation_mode_get\r\n"
#endif
    "",
    "",
    {BIT(5), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif
#ifdef UI_MGMT
  {
    PARAM_TMD_MGMT_CREDIT_WORTH_SET_CREDIT_WORTH_SET_ID,
    "credit_worth_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Bytes-worth of a single credit.\r\n"
    "  It should be configured the same in all the FAPs in the systems, and should\r\n"
    "  be set before programming the scheduler.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt credit_worth_set credit_worth 0\r\n"
#endif
    "",
    "",
    {BIT(10), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_CREDIT_WORTH_SET_CREDIT_WORTH_SET_CREDIT_WORTH_ID,
    "credit_worth",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  credit_worth:\r\n"
    "  Credit worth can be between 256 to 8K bytes. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt credit_worth_set credit_worth 0\r\n"
#endif
    "",
    "",
    {BIT(10), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_CREDIT_WORTH_GET_CREDIT_WORTH_GET_ID,
    "credit_worth_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Bytes-worth of a single credit.\r\n"
    "  It should be configured the same in all the FAPs in the systems, and should\r\n"
    "  be set before programming the scheduler.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt credit_worth_get\r\n"
#endif
    "",
    "",
    {BIT(11), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif 
#ifdef UI_UNDEFED
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_ID,
    "init_sequence_phase1",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Initialize the device, including:1.  Prevent all the control cells.\r\n"
    "  2.  Initialize the device tables and registers to default values.\r\n"
    "  3.  Initialize board-specific hardware interfaces according to configurable\r\n"
    "  information, as passed in 'hw_adjust'. 4.  Perform basic device\r\n"
    "  initialization. The configuration can be enabled/disabled as passed in\r\n"
    "  'enable_info'.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_FAT_PIPE_CONF_BYPASS_ENABLE_ID,
    "bypass_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.fat_pipe.conf.bypass_enable:\r\n"
    "  Enables a mode where some packets can bypass the resequencing process. If\r\n"
    "  set, then the sequence number range is only 15b [14:0] instead of 16b, and\r\n"
    "  bit 15, if set, indicates that the packet should bypass the resequencing\r\n"
    "  process\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_FAT_PIPE_CONF_NIFS_INDEX_ID,
    "nifs_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nifs_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_FAT_PIPE_CONF_NIFS_ID,
    "nifs",
    (PARAM_VAL_RULES *)&TMD_INTERFACE_ID_rule[0],
    (sizeof(TMD_INTERFACE_ID_rule) / sizeof(TMD_INTERFACE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.fat_pipe.conf.nifs[ prm_nifs_index]:\r\n"
    "  The indexes of tmd interfaces that compose the Fat pipe.nof_ports\r\n"
    "  interfaces are mapped to FAP ports. nifs[0] is mapped to FAP port 1 etc. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_FAT_PIPE_CONF_NOF_PORTS_ID,
    "nof_ports",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.fat_pipe.conf.nof_ports:\r\n"
    "  Number of FAP ports and network interfaces that will be part of the Fat\r\n"
    "  Pipe.FAP ports that are used are 1 - nof_ports.Range: 2 - 4.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_FAT_PIPE_CONF_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.fat_pipe.conf.enable:\r\n"
    "  enable/disable Fat pipe interface.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_FAT_PIPE_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.fat_pipe.enable:\r\n"
    "  Enable/disable Fat Pipe configuration \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_FAT_PIPE_ENABLE_ID,
    "fat_pipe_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.fat_pipe_enable:\r\n"
    "  Enable/disable Fat pipe configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SGMII_INDEX_ID,
    "sgmii_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sgmii_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SGMII_CONF_IS_EXTERN_PHY_ID,
    "is_extern_phy",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.sgmii[ prm_sgmii_index].conf.is_extern_phy:\r\n"
    "  If TRUE, the respective interface works as an SGMII MAC which communicates\r\n"
    "  with an external PHY device. Otherwise, the lane will act as\r\n"
    "  a standard 1G Ethernet MAC/PHY and connect directly to the fiber.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SGMII_CONF_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.sgmii[ prm_sgmii_index].conf.enable:\r\n"
    "  If TRUE, the appropriate SGMII interface is enabled.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SGMII_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&TMD_INTERFACE_ID_rule[0],
    (sizeof(TMD_INTERFACE_ID_rule) / sizeof(TMD_INTERFACE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.sgmii[ prm_sgmii_index].nif_ndx:\r\n"
    "  Network Interface index, SGMII. Range: 0 - 31.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SGMII_NOF_ENTRIES_ID,
    "sgmii_nof_entries",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.sgmii_nof_entries:\r\n"
    "  Number of entries: SGMII configuration. Range: 0 - 32.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_INDEX_ID,
    "spaui_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  spaui_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_CONF_CH_CONF_IS_BURST_INTERLEAVING_ID,
    "is_burst_interleaving",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ch_conf.is_burst_interleaving:\r\n"
    "  If TRUE, the channelized interface will function in burst interleaving\r\n"
    "  mode.Otherwise - in full packet mode\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_CONF_CH_CONF_BCT_CHANNEL_BYTE_NDX_ID,
    "bct_channel_byte_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ch_conf.bct_channel_byte_ndx:\r\n"
    "  Index of the byte containing the CH (Channel) field inside the first column\r\n"
    "  of the preamble. Possible values are 0 (if no SOP in preamble), 1, 2, 3\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_CONF_CH_CONF_BCT_SIZE_ID,
    "bct_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ch_conf.bct_size:\r\n"
    "  Burst Control Tag Size.Range: 0 - 2.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_CONF_CH_CONF_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ch_conf.enable:\r\n"
    "  If TRUE, Burst Control is enabled.Applicable for SPAUI interfaces only.Other\r\n"
    "  fields are only applicable for get/set operations if enable = TRUE\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_CONF_CRC_MODE_ID,
    "crc_mode",
    (PARAM_VAL_RULES *)&TMD_NIF_CRC_MODE_rule[0],
    (sizeof(TMD_NIF_CRC_MODE_rule) / sizeof(TMD_NIF_CRC_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.crc_mode:\r\n"
    "  24/32 Byte CRC mode configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_CONF_IPG_DIC_MODE_ID,
    "dic_mode",
    (PARAM_VAL_RULES *)&TMD_NIF_IPG_DIC_MODE_rule[0],
    (sizeof(TMD_NIF_IPG_DIC_MODE_rule) / sizeof(TMD_NIF_IPG_DIC_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ipg.dic_mode:\r\n"
    "  Deficit Idle Count mode - average or minimal.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_CONF_IPG_SIZE_ID,
    "size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ipg.size:\r\n"
    "  Inter Packet Gap size in bytes.Range: 1 - 255.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_CONF_IPG_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ipg.enable:\r\n"
    "  If TRUE, Inter Packet Gap Compression is enabled.Applicable for SPAUI\r\n"
    "  interfaces only.Other fields are only applicable for get/set operations if\r\n"
    "  enable = TRUE\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_CONF_PREAMBLE_SKIP_SOP_ID,
    "skip_SOP",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.preamble.skip_SOP:\r\n"
    "  If set, /S/ character will not be inserted at the beginning of a packet.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_CONF_PREAMBLE_SIZE_ID,
    "size",
    (PARAM_VAL_RULES *)&TMD_NIF_PREAMBLE_SIZE_rule[0],
    (sizeof(TMD_NIF_PREAMBLE_SIZE_rule) / sizeof(TMD_NIF_PREAMBLE_SIZE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.preamble.size:\r\n"
    "  Preamble size\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_CONF_PREAMBLE_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.preamble.enable:\r\n"
    "  If TRUE, Preamble Compression is enabled.Applicable for SPAUI interfaces\r\n"
    "  only.Other fields are only applicable for get/set operations if enable = TRUE\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_CONF_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.enable:\r\n"
    "  Enable/disable the interface in specified direction.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].mal_ndx:\r\n"
    "  MAC lane index. Range: 0 - 7.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_SPAUI_NOF_ENTRIES_ID,
    "spaui_nof_entries",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui_nof_entries:\r\n"
    "  Number of entries: SPAUI extensions configuration. Range: 0 - 8.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_MAL_INDEX_ID,
    "mal_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_MAL_CONF_LANES_SWAP_SWAP_TX_ID,
    "swap_tx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.mal[ prm_mal_index].conf.lanes_swap.swap_tx:\r\n"
    "  Same as RX\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_MAL_CONF_LANES_SWAP_SWAP_RX_ID,
    "swap_rx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.mal[ prm_mal_index].conf.lanes_swap.swap_rx:\r\n"
    "  If set, order of the SerDes Physical Lanes\r\n"
    "  will be swapped when mapped into Logical Lanes.\r\n"
    "  For double-rate, also swap the order of each pair of Logical Lanes\r\n"
    "  that were muxed together on a Double Rate Physical Lane \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_MAL_CONF_SERDES_RATE_ID,
    "serdes_rate",
    (PARAM_VAL_RULES *)&TMD_NIF_SERDES_RATE_rule[0],
    (sizeof(TMD_NIF_SERDES_RATE_rule) / sizeof(TMD_NIF_SERDES_RATE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.mal[ prm_mal_index].conf.serdes_rate:\r\n"
    "  Single or double SereDes rate.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_MAL_CONF_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&TMD_NIF_TYPE_rule[0],
    (sizeof(TMD_NIF_TYPE_rule) / sizeof(TMD_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.mal[ prm_mal_index].conf.type:\r\n"
    "  Network interface type.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_MAL_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.mal[ prm_mal_index].mal_ndx:\r\n"
    "  MAC lane index. Range: 0 - 7.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_NIF_MAL_NOF_ENTRIES_ID,
    "mal_nof_entries",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.mal_nof_entries:\r\n"
    "  Number of entries: per-MAC lane basic configuration. Range: 0 - 8.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_FABRIC_FTMH_EXTENSION_ID,
    "ftmh_extension",
    (PARAM_VAL_RULES *)&TMD_PORTS_FTMH_EXT_OUTLIF_rule[0],
    (sizeof(TMD_PORTS_FTMH_EXT_OUTLIF_rule) / sizeof(TMD_PORTS_FTMH_EXT_OUTLIF_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.ftmh_extension:\r\n"
    "  FTMH Header configuration: always allow, never allow, allow only when the\r\n"
    "  packet is multicast.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_FABRIC_CONNECT_MODE_ID,
    "connect_mode",
    (PARAM_VAL_RULES *)&TMD_FABRIC_CONNECT_MODE_rule[0],
    (sizeof(TMD_FABRIC_CONNECT_MODE_rule) / sizeof(TMD_FABRIC_CONNECT_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.connect_mode:\r\n"
    "  The way the device is connected to fabric.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_FABRIC_CELL_FORMAT_SEGMENTATION_ENABLE_ID,
    "segmentation_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.cell_format.segmentation_enable:\r\n"
    "  If TRUE, fabric segmentation will be performed to improve the fabric\r\n"
    "  performance in fixed size cell systems.Valid for fixed cell size\r\n"
    "  configuration only.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_FABRIC_CELL_FORMAT_VARIABLE_CELL_SIZE_ENABLE_ID,
    "variable_cell_size_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.cell_format.variable_cell_size_enable:\r\n"
    "  If TRUE,variable cell size will be used.This configuration is invalid for\r\n"
    "  SOC_SAND_FE200 systems.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_FABRIC_FABRIC_HDR_TYPE_ID,
    "fabric_hdr_type",
    (PARAM_VAL_RULES *)&TMD_MGMT_FABRIC_HDR_TYPE_rule[0],
    (sizeof(TMD_MGMT_FABRIC_HDR_TYPE_rule) / sizeof(TMD_MGMT_FABRIC_HDR_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.fabric_hdr_type:\r\n"
    "  The type of FTMH header to use\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_FABRIC_PCKT_CRC_FABRIC_SEND_ENABLE_ID,
    "pckt_crc_fabric_send_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.pckt_crc_fabric_send_enable:\r\n"
    "  If set, and pckt_crc_enable also set,the packet will be sent over fabric with\r\n"
    "  CRC. Note: must be disabled in fap20-coexist systems.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_FABRIC_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.enable:\r\n"
    "  Enable/disable fabric configuration\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_LANES_CONF_INDEX_ID,
    "lanes_conf_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  lanes_conf_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_LANES_CONF_IS_SWAP_POLARITY_RX_ID,
    "is_swap_polarity_rx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].is_swap_polarity_rx:\r\n"
    "  Whether Swap Polarity for Rx lane direction. Indicator:TRUE - Swap\r\n"
    "  polarity.FALSE - Normal polarity.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_LANES_CONF_IS_SWAP_POLARITY_TX_ID,
    "is_swap_polarity_tx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].is_swap_polarity_tx:\r\n"
    "  Whether Swap Polarity for Tx lane direction.Indicator:TRUE - Swap\r\n"
    "  polarity.FALSE - Normal polarity.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_LANES_CONF_TX_INFO_SLEW_MODE_ID,
    "slew_mode",
    (PARAM_VAL_RULES *)&TMD_SRD_SLEW_MODE_rule[0],
    (sizeof(TMD_SRD_SLEW_MODE_rule) / sizeof(TMD_SRD_SLEW_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].tx_info.slew_mode:\r\n"
    "  This indicates which of the slew modes to work with - normal slew mode (fast\r\n"
    "  edges) or moderated slew (slowed down slew).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_LANES_CONF_TX_INFO_MEDIA_TYPE_ID,
    "media_type",
    (PARAM_VAL_RULES *)&TMD_SRD_MEDIA_TYPE_rule[0],
    (sizeof(TMD_SRD_MEDIA_TYPE_rule) / sizeof(TMD_SRD_MEDIA_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].tx_info.media_type:\r\n"
    "  This criterion sets several physical parameters of the SerDes for rate that\r\n"
    "  is above 3.125Gbps, such as curser-weight, tap-set etc.There are 3 media\r\n"
    "  types.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_LANES_CONF_TX_INFO_PRE_EMPHASIS_ID,
    "pre_emphasis",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].tx_info.pre_emphasis:\r\n"
    "  This criterion sets several physical parameters of the SerDes for rate that\r\n"
    "  are below 3.125Gbps, such as curser-weight, tap-set etc. Range: 0 - 120.\r\n"
    "  Note: the values represent x10 the designated dB value. example: 120\r\n"
    "  represents 12.0 db, and 55 equals 5.5 dB etc.\r\n"
    "  The\r\n"
    "  real resolution is 0.5 db.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_LANES_CONF_TX_INFO_AMPLITUDE_ID,
    "amplitude",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].tx_info.amplitude:\r\n"
    "  The amplitude of the transmitter in mV. Range: 200-1750mV.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_LANES_CONF_DIVISOR_ID,
    "divisor",
    (PARAM_VAL_RULES *)&TMD_SRD_LANE_DATA_RATE_DIVISOR_rule[0],
    (sizeof(TMD_SRD_LANE_DATA_RATE_DIVISOR_rule) / sizeof(TMD_SRD_LANE_DATA_RATE_DIVISOR_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].divisor:\r\n"
    "  The divisor of the lane's rate. The lane receives the rate of the whole\r\n"
    "  quartet, but may divide it to receive Half or Quarter of the given rate.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_LANES_CONF_STATE_ID,
    "state",
    (PARAM_VAL_RULES *)&TMD_SRD_LANE_STATE_rule[0],
    (sizeof(TMD_SRD_LANE_STATE_rule) / sizeof(TMD_SRD_LANE_STATE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].state:\r\n"
    "  The lanes status - normal/power-down/reset.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_QRT_RATES_CONF_INDEX_ID,
    "qrt_rates_conf_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  qrt_rates_conf_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_QRT_RATES_CONF_ID,
    "qrt_rates_conf",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.qrt_rates_conf[ prm_qrt_rates_conf_index]:\r\n"
    "  SerDes Quartet Rate configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_REF_CLKS_FABRIC_REF_CLK_ID,
    "fabric_ref_clk",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.ref_clks.fabric_ref_clk:\r\n"
    "  The reference clock that the CMUs of the quartets of lanes (32 - 60) towards\r\n"
    "  the fabric are fed from.The reference clock that the CMUs of the quartets of\r\n"
    "  lanes (24 - 31) that can be configures to be either towards the nif or\r\n"
    "  toeards the fabric, according to the shared_quartet configuration (NIF/Fabric)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_REF_CLKS_NIF_REF_CLK_ID,
    "nif_ref_clk",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.ref_clks.nif_ref_clk:\r\n"
    "  The reference clock that the CMUs of the quartet of lanes (0 - 23) towards\r\n"
    "  the nif are fed from.Note: The reference clock that the CMUs of the quartets\r\n"
    "  of lanes (24 - 31) that can be configures to be either towards the nif or\r\n"
    "  toeards the fabric, according to the shared_quartet configuration (NIF/Fabric)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_SERDES_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.enable:\r\n"
    "  Enable/disable SerDes configuration\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_QDR_PLL_CONF_R_ID,
    "r",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.r:\r\n"
    "  Loop-filter resistance\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_QDR_PLL_CONF_I_ID,
    "i",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.i:\r\n"
    "  Charge-pump current\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_QDR_PLL_CONF_V_ID,
    "v",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.v:\r\n"
    "  VCO gain\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_QDR_PLL_CONF_K_ID,
    "k",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.k:\r\n"
    "  Pll-K\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_QDR_PLL_CONF_P_ID,
    "p",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.p:\r\n"
    "  Pll-P\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_QDR_PLL_CONF_N_ID,
    "n",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.n:\r\n"
    "  Pll-N\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_QDR_PLL_CONF_M_ID,
    "m",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.m:\r\n"
    "  Pll-M\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_QDR_IS_CORE_CLOCK_FREQ_ID,
    "is_core_clock_freq",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.is_core_clock_freq:\r\n"
    "  If TRUE, the 250Mhz Core clock is used as QDR reference clock. Otherwise\r\n"
    "  (lower frequency) - QDR clock is used. In the later case, pll configuration\r\n"
    "  must be set. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_QDR_PROTECTION_TYPE_ID,
    "protection_type",
    (PARAM_VAL_RULES *)&TMD_HW_QDR_PROTECT_TYPE_rule[0],
    (sizeof(TMD_HW_QDR_PROTECT_TYPE_rule) / sizeof(TMD_HW_QDR_PROTECT_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.protection_type:\r\n"
    "  Select Parity or ECC protection type. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_QDR_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.enable:\r\n"
    "  Enable/disable QDR configuration. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_DRAM_CONF_LEN_ID,
    "dram_conf_len",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.dram_conf_len:\r\n"
    "  Number of valid entries in dram_conf.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_DRAM_CONF_INDEX_ID,
    "dram_conf_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  dram_conf_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_DRAM_CONF_ID,
    "dram_conf",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.dram_conf[ prm_dram_conf_index]:\r\n"
    "  DRAM configuration sequence.The sequence is a buffer of address-value pairs.\r\n"
    "  This defines the dram configuration (DRC)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_NOF_COLUMNS_ID,
    "nof_columns",
    (PARAM_VAL_RULES *)&TMD_DRAM_NUM_COLUMNS_rule[0],
    (sizeof(TMD_DRAM_NUM_COLUMNS_rule) / sizeof(TMD_DRAM_NUM_COLUMNS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.nof_columns:\r\n"
    "  Number of DRAM columns. Range: 256/512/1024/2048/4096/8192\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_NOF_BANKS_ID,
    "nof_banks",
    (PARAM_VAL_RULES *)&TMD_DRAM_NUM_BANKS_rule[0],
    (sizeof(TMD_DRAM_NUM_BANKS_rule) / sizeof(TMD_DRAM_NUM_BANKS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.nof_banks:\r\n"
    "  Number of Banks. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_PLL_CONF_R_ID,
    "r",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.r:\r\n"
    "  Loop-filter resistance\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_PLL_CONF_I_ID,
    "i",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.i:\r\n"
    "  Charge-pump current\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_PLL_CONF_V_ID,
    "v",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.v:\r\n"
    "  VCO gain\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_PLL_CONF_K_ID,
    "k",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.k:\r\n"
    "  Pll-K\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_PLL_CONF_P_ID,
    "p",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.p:\r\n"
    "  Pll-P\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_PLL_CONF_N_ID,
    "n",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.n:\r\n"
    "  Pll-N\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_PLL_CONF_M_ID,
    "m",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.m:\r\n"
    "  Pll-M\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_PCKT_CRC_ENABLE_ID,
    "pckt_crc_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pckt_crc_enable:\r\n"
    "  If set, a 16b CRC is appended to the end of the packet in the DRAM (aligned\r\n"
    "  to the last two bytes of a 32B word).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_DRAM_TYPE_ID,
    "dram_type",
    (PARAM_VAL_RULES *)&TMD_HW_DRAM_TYPE_rule[0],
    (sizeof(TMD_HW_DRAM_TYPE_rule) / sizeof(TMD_HW_DRAM_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.dram_type:\r\n"
    "  DRAM type.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_IS_VALID_INDEX_ID,
    "is_valid_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  is_valid_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_IS_VALID_ID,
    "is_valid",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.is_valid[ prm_is_valid_index]:\r\n"
    "  Per DRAM interface, defines if exists and needs to be configured. Note: The\r\n"
    "  following number of DRAM interfaces can be configured: 2, 3, 4, 6\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_HW_ADJUST_DRAM_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.enable:\r\n"
    "  Enable/disable DRAM configuration\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_STAG_ENCODING_STT_TAG_DROPP_LSB_ID,
    "dropp_lsb",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.stag.encoding.dropp_lsb:\r\n"
    "  Defines the bit number where the LSB bit of the Drop-p[1:0] exists. This is\r\n"
    "  valid only if StatTahDroppEn asserted.Range: 31:0. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_STAG_ENCODING_STT_TAG_DROPP_EN_ID,
    "dropp_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.stag.encoding.dropp_en:\r\n"
    "  If set, then the Statistics-Tag carries Drop-p[1:0] field \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_STAG_ENCODING_STT_TAG_DEQ_EN_ID,
    "deq_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.stag.encoding.deq_en:\r\n"
    "  Indicator:1 - statistics TAG is kept in the QDR, and reported when packet is\r\n"
    "  Dequeued. 0 -StatTagVsqEn is ignored\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_STAG_ENCODING_STT_TAG_VSQ_EN_ID,
    "vsq_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.stag.encoding.vsq_en:\r\n"
    "  Indicator:1 - VSQ defines a separate VSQ number in the STE.0 - Statistics TAG\r\n"
    "  is just forwarded to the Statistics interface. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_STAG_ENCODING_STT_TAG_VSQ_INDEX_LSB_ID,
    "vsq_index_lsb",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.stag.encoding.vsq_index_lsb:\r\n"
    "  The LSB of the VSQ field in the statistics Tag. Range: 0 - 31.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_STAG_ENCODING_STT_TAG_VSQ_INDEX_MSB_ID,
    "vsq_index_msb",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.stag.encoding.vsq_index_msb:\r\n"
    "  The MSB of the VSQ field in the statistics Tag. The value in the field\r\n"
    "  between the MSB and LSB defines a VSQ number that is used by the STE, when\r\n"
    "  gathering statistics information. (VSQ group D).Note: a total of 256 VSQs are\r\n"
    "  supported using the Stat-tag (8 bits).Range: 0 - 31.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_STAG_FLD_CONF_LENGTH_4BITS_ID,
    "length_4bits",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.stag.fld_conf.length_4bits:\r\n"
    "  Range: 0 - 7.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_STAG_FLD_CONF_OFFSET_4BITS_ID,
    "offset_4bits",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.stag.fld_conf.offset_4bits:\r\n"
    "  Offset of the statistics tag from the base header, in 4 bit units. Range: 0 -\r\n"
    "  63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_STAG_FLD_CONF_BASE_HEADER_ID,
    "base_header",
    (PARAM_VAL_RULES *)&TMD_IHP_PCKT_HEADER_ID_rule[0],
    (sizeof(TMD_IHP_PCKT_HEADER_ID_rule) / sizeof(TMD_IHP_PCKT_HEADER_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.stag.fld_conf.base_header:\r\n"
    "  The packet header relative to which the offset is given.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_STAG_ENABLE_ID,
    "stag_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.stag_enable:\r\n"
    "  Enable/disable Statistics Tag configuration\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_DRAM_BUFFS_MINI_MC_NOF_BUFFS_ID,
    "mini_mc_nof_buffs",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.dram_buffs.mini_mc_nof_buffs:\r\n"
    "  Number of DRAM buffers dedicated to Mini Multicast. Range: 0 - 64K.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_DRAM_BUFFS_FULL_MC_NOF_BUFFS_ID,
    "full_mc_nof_buffs",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.dram_buffs.full_mc_nof_buffs:\r\n"
    "  Number of DRAM buffers dedicated to Full Multicast. Range: 0 - 8K.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_DRAM_BUFFS_UC_NOF_BUFFS_ID,
    "uc_nof_buffs",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.dram_buffs.uc_nof_buffs:\r\n"
    "  Number of DRAM buffers dedicated to Unicast. Range: 0 - 2M.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_DRAM_BUFFS_DBUFF_SIZE_ID,
    "dbuff_size",
    (PARAM_VAL_RULES *)&TMD_ITM_DBUFF_SIZE_BYTES_rule[0],
    (sizeof(TMD_ITM_DBUFF_SIZE_BYTES_rule) / sizeof(TMD_ITM_DBUFF_SIZE_BYTES_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.dram_buffs.dbuff_size:\r\n"
    "  The size of a single data buffer in the DRAM\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_DRAM_BUFFS_ENABLE_ID,
    "dram_buffs_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.dram_buffs_enable:\r\n"
    "  Enable/disable DRAM buffers configuration..\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_CREDIT_WORTH_ID,
    "credit_worth",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.credit_worth:\r\n"
    "  Bytes-worth of a single credit. Range: 256 - 8K bytes.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_BASIC_CONF_CREDIT_WORTH_ENABLE_ID,
    "credit_worth_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  basic_conf.credit_worth_enable:\r\n"
    "  Enable/disable credit worth configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_FAP_PORTS_IF_MAP_INDEX_ID,
    "if_map_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_map_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_FAP_PORTS_IF_MAP_CONF_CHANNEL_ID_ID,
    "channel_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fap_ports.if_map[ prm_if_map_index].conf.channel_id:\r\n"
    "  Channel index. Zero for non-channelized interface.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_FAP_PORTS_IF_MAP_CONF_IF_ID_ID,
    "if_id",
    (PARAM_VAL_RULES *)&TMD_INTERFACE_ID_rule[0],
    (sizeof(TMD_INTERFACE_ID_rule) / sizeof(TMD_INTERFACE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fap_ports.if_map[ prm_if_map_index].conf.if_id:\r\n"
    "  Interface index of the interface to which the FAP port is mapped.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_FAP_PORTS_IF_MAP_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fap_ports.if_map[ prm_if_map_index].port_ndx:\r\n"
    "  FAP Port index to configure. Range: 0 - 79\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_FAP_PORTS_IF_MAP_NOF_ENTRIES_ID,
    "if_map_nof_entries",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fap_ports.if_map_nof_entries:\r\n"
    "  Number of entries to configure - FAP ports to NIF mapping. Range: 0 - 80.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_FAP_PORTS_HDR_TYPE_INDEX_ID,
    "hdr_type_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hdr_type_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_FAP_PORTS_HDR_TYPE_IS_OUTGOING_CPU_ID,
    "is_outgoing_CPU",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fap_ports.hdr_type[ prm_hdr_type_index].is_outgoing_CPU:\r\n"
    "  If TRUE, the port header type will be set as CPU in the outgoing direction,\r\n"
    "  regardless of the incoming header type configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_FAP_PORTS_HDR_TYPE_CONF_ID,
    "conf",
    (PARAM_VAL_RULES *)&TMD_PORT_HEADER_TYPE_rule[0],
    (sizeof(TMD_PORT_HEADER_TYPE_rule) / sizeof(TMD_PORT_HEADER_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fap_ports.hdr_type[ prm_hdr_type_index].conf:\r\n"
    "  RAW/TM/ETH/Programmable header parsing type.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_FAP_PORTS_HDR_TYPE_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fap_ports.hdr_type[ prm_hdr_type_index].port_ndx:\r\n"
    "  FAP Port index to configure. Range: 0 - 79\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_FAP_PORTS_HDR_TYPE_NOF_ENTRIES_ID,
    "hdr_type_nof_entries",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fap_ports.hdr_type_nof_entries:\r\n"
    "  Number of entries to configure - FAP ports packet header type. Range: 0 - 80.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE1_INIT_SEQUENCE_PHASE1_SILENT_ID,
    "silent",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  silent:\r\n"
    "  If TRUE, progress printing will be suppressed.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase1 bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0 dropp_lsb 0 dropp_en 0 deq_en 0\r\n"
    "  vsq_en 0 vsq_index_lsb 0 vsq_index_msb 0 length_4bits\r\n"
    "  0 offset_4bits 0 base_header 0 stag_enable 0 mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0 dram_buffs_enable 0\r\n"
    "  credit_worth 0 credit_worth_enable 0 if_map_index 0 channel_id 0 if_id 0\r\n"
    "  port_ndx 0 if_map_nof_entries 0 hdr_type_index 0 is_outgoing_CPU 0 conf 0\r\n"
    "  port_ndx 0 hdr_type_nof_entries 0 silent 0\r\n"
#endif
    "",
    "",
    {BIT(8), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE2_INIT_SEQUENCE_PHASE2_ID,
    "init_sequence_phase2",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Out-of-reset sequence.\r\n"
    "  Enable/Disable the device from receiving and transmitting\r\n"
    "  control cells.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase2 serdes_index 0 serdes 0 mal_index 0 mal 0\r\n"
    "  silent 0\r\n"
#endif
    "",
    "",
    {BIT(9), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE2_INIT_SEQUENCE_PHASE2_OOR_INFO_SERDES_INDEX_ID,
    "serdes_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  serdes_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase2 serdes_index 0 serdes 0 mal_index 0 mal 0\r\n"
    "  silent 0\r\n"
#endif
    "",
    "",
    {BIT(9), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE2_INIT_SEQUENCE_PHASE2_OOR_INFO_SERDES_ID,
    "serdes",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  oor_info.serdes[ prm_serdes_index]:\r\n"
    "  If TRUE, the appropriate SerDes plane will be taken out of reset. If FALSE -\r\n"
    "  no configuration is applied.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase2 serdes_index 0 serdes 0 mal_index 0 mal 0\r\n"
    "  silent 0\r\n"
#endif
    "",
    "",
    {BIT(9), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE2_INIT_SEQUENCE_PHASE2_OOR_INFO_MAL_INDEX_ID,
    "mal_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase2 serdes_index 0 serdes 0 mal_index 0 mal 0\r\n"
    "  silent 0\r\n"
#endif
    "",
    "",
    {BIT(9), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE2_INIT_SEQUENCE_PHASE2_OOR_INFO_MAL_ID,
    "mal",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  oor_info.mal[ prm_mal_index]:\r\n"
    "  If TRUE, the appropriate MAC lane will be taken out of reset. If FALSE - no\r\n"
    "  configuration is applied.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase2 serdes_index 0 serdes 0 mal_index 0 mal 0\r\n"
    "  silent 0\r\n"
#endif
    "",
    "",
    {BIT(9), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_INIT_SEQUENCE_PHASE2_INIT_SEQUENCE_PHASE2_SILENT_ID,
    "silent",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  silent:\r\n"
    "  TRUE - Print progress messages.\r\n"
    "  FALSE - Do not print progress messages.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt init_sequence_phase2 serdes_index 0 serdes 0 mal_index 0 mal 0\r\n"
    "  silent 0\r\n"
#endif
    "",
    "",
    {BIT(9), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_SYSTEM_FAP_ID_SET_SYSTEM_FAP_ID_SET_ID,
    "system_fap_id_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set the fabric system ID of the device.\r\n"
    "  Must be unique in the system.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt system_fap_id_set sys_fap_id 0\r\n"
#endif
    "",
    "",
    {BIT(10), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_SYSTEM_FAP_ID_SET_SYSTEM_FAP_ID_SET_SYS_FAP_ID_ID,
    "sys_fap_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sys_fap_id:\r\n"
    "  The system ID of the device (Unique in the system).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt system_fap_id_set sys_fap_id 0\r\n"
#endif
    "",
    "",
    {BIT(10), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_SYSTEM_FAP_ID_GET_SYSTEM_FAP_ID_GET_ID,
    "system_fap_id_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set the fabric system ID of the device.\r\n"
    "  Must be unique in the system.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt system_fap_id_get\r\n"
#endif
    "",
    "",
    {BIT(11), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_ID,
    "hw_interfaces_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Initialize a sub-set of the HW interfaces of the device.\r\n"
    "  The function might be called more than once, each time with\r\n"
    "  different fields, indicated to be written to the device\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_FAT_PIPE_CONF_BYPASS_ENABLE_ID,
    "bypass_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.fat_pipe.conf.bypass_enable:\r\n"
    "  Enables a mode where some packets can bypass the resequencing process. If\r\n"
    "  set, then the sequence number range is only 15b [14:0] instead of 16b, and\r\n"
    "  bit 15, if set, indicates that the packet should bypass the resequencing\r\n"
    "  process\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_FAT_PIPE_CONF_NIFS_INDEX_ID,
    "nifs_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nifs_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_FAT_PIPE_CONF_NIFS_ID,
    "nifs",
    (PARAM_VAL_RULES *)&TMD_INTERFACE_ID_rule[0],
    (sizeof(TMD_INTERFACE_ID_rule) / sizeof(TMD_INTERFACE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.fat_pipe.conf.nifs[ prm_nifs_index]:\r\n"
    "  The indexes of tmd interfaces that compose the Fat pipe.nof_ports\r\n"
    "  interfaces are mapped to FAP ports. nifs[0] is mapped to FAP port 1 etc. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_FAT_PIPE_CONF_NOF_PORTS_ID,
    "nof_ports",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.fat_pipe.conf.nof_ports:\r\n"
    "  Number of FAP ports and network interfaces that will be part of the Fat\r\n"
    "  Pipe.FAP ports that are used are 1 - nof_ports.Range: 2 - 4.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_FAT_PIPE_CONF_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.fat_pipe.conf.enable:\r\n"
    "  enable/disable Fat pipe interface.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_FAT_PIPE_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.fat_pipe.enable:\r\n"
    "  Enable/disable Fat Pipe configuration \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_FAT_PIPE_ENABLE_ID,
    "fat_pipe_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.fat_pipe_enable:\r\n"
    "  Enable/disable Fat pipe configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SGMII_INDEX_ID,
    "sgmii_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sgmii_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SGMII_CONF_IS_EXTERN_PHY_ID,
    "is_extern_phy",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.sgmii[ prm_sgmii_index].conf.is_extern_phy:\r\n"
    "  If TRUE, the respective interface works as an SGMII MAC which communicates\r\n"
    "  with an external PHY device .Otherwise, the lane will act as\r\n"
    "  a standard 1G Ethernet MAC/PHY and connect directly to the fiber.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SGMII_CONF_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.sgmii[ prm_sgmii_index].conf.enable:\r\n"
    "  If TRUE, the appropriate SGMII interface is enabled.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SGMII_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&TMD_INTERFACE_ID_rule[0],
    (sizeof(TMD_INTERFACE_ID_rule) / sizeof(TMD_INTERFACE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.sgmii[ prm_sgmii_index].nif_ndx:\r\n"
    "  Network Interface index, SGMII. Range: 0 - 31.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SGMII_NOF_ENTRIES_ID,
    "sgmii_nof_entries",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.sgmii_nof_entries:\r\n"
    "  Number of entries: SGMII configuration. Range: 0 - 32.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_INDEX_ID,
    "spaui_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  spaui_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_CONF_CH_CONF_IS_BURST_INTERLEAVING_ID,
    "is_burst_interleaving",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ch_conf.is_burst_interleaving:\r\n"
    "  If TRUE, the channelized interface will function in burst interleaving\r\n"
    "  mode.Otherwise - in full packet mode\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_CONF_CH_CONF_BCT_CHANNEL_BYTE_NDX_ID,
    "bct_channel_byte_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ch_conf.bct_channel_byte_ndx:\r\n"
    "  Index of the byte containing the CH (Channel) field inside the first column\r\n"
    "  of the preamble. Possible values are 0 (if no SOP in preamble), 1, 2, 3\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_CONF_CH_CONF_BCT_SIZE_ID,
    "bct_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ch_conf.bct_size:\r\n"
    "  Burst Control Tag Size.Range: 0 - 2.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_CONF_CH_CONF_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ch_conf.enable:\r\n"
    "  If TRUE, Burst Control is enabled.Applicable for SPAUI interfaces only.Other\r\n"
    "  fields are only applicable for get/set operations if enable = TRUE\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_CONF_CRC_MODE_ID,
    "crc_mode",
    (PARAM_VAL_RULES *)&TMD_NIF_CRC_MODE_rule[0],
    (sizeof(TMD_NIF_CRC_MODE_rule) / sizeof(TMD_NIF_CRC_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.crc_mode:\r\n"
    "  24/32 Byte CRC mode configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_CONF_IPG_DIC_MODE_ID,
    "dic_mode",
    (PARAM_VAL_RULES *)&TMD_NIF_IPG_DIC_MODE_rule[0],
    (sizeof(TMD_NIF_IPG_DIC_MODE_rule) / sizeof(TMD_NIF_IPG_DIC_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ipg.dic_mode:\r\n"
    "  Deficit Idle Count mode - average or minimal.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_CONF_IPG_SIZE_ID,
    "size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ipg.size:\r\n"
    "  Inter Packet Gap size in bytes.Range: 1 - 255.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_CONF_IPG_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.ipg.enable:\r\n"
    "  If TRUE, Inter Packet Gap Compression is enabled.Applicable for SPAUI\r\n"
    "  interfaces only.Other fields are only applicable for get/set operations if\r\n"
    "  enable = TRUE\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_CONF_PREAMBLE_SKIP_SOP_ID,
    "skip_SOP",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.preamble.skip_SOP:\r\n"
    "  If set, /S/ character will not be inserted at the beginning of a packet.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_CONF_PREAMBLE_SIZE_ID,
    "size",
    (PARAM_VAL_RULES *)&TMD_NIF_PREAMBLE_SIZE_rule[0],
    (sizeof(TMD_NIF_PREAMBLE_SIZE_rule) / sizeof(TMD_NIF_PREAMBLE_SIZE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.preamble.size:\r\n"
    "  Preamble size\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_CONF_PREAMBLE_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.preamble.enable:\r\n"
    "  If TRUE, Preamble Compression is enabled.Applicable for SPAUI interfaces\r\n"
    "  only.Other fields are only applicable for get/set operations if enable = TRUE\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_CONF_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].conf.enable:\r\n"
    "  Enable/disable the interface in specified direction.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui[ prm_spaui_index].mal_ndx:\r\n"
    "  MAC lane index. Range: 0 - 7.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_SPAUI_NOF_ENTRIES_ID,
    "spaui_nof_entries",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.spaui_nof_entries:\r\n"
    "  Number of entries: SPAUI extensions configuration. Range: 0 - 8.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_MAL_INDEX_ID,
    "mal_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_MAL_CONF_LANES_SWAP_SWAP_TX_ID,
    "swap_tx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.mal[ prm_mal_index].conf.lanes_swap.swap_tx:\r\n"
    "  Same as RX\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_MAL_CONF_LANES_SWAP_SWAP_RX_ID,
    "swap_rx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.mal[ prm_mal_index].conf.lanes_swap.swap_rx:\r\n"
    "  If set, order of the SerDes Physical Lanes\r\n"
    "  will be swapped when mapped into Logical Lanes.\r\n"
    "  For double-rate, also swap the order of each pair of Logical Lanes\r\n"
    "  that were muxed together on a Double Rate Physical Lane \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_MAL_CONF_SERDES_RATE_ID,
    "serdes_rate",
    (PARAM_VAL_RULES *)&TMD_NIF_SERDES_RATE_rule[0],
    (sizeof(TMD_NIF_SERDES_RATE_rule) / sizeof(TMD_NIF_SERDES_RATE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.mal[ prm_mal_index].conf.serdes_rate:\r\n"
    "  Single or double SereDes rate.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_MAL_CONF_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&TMD_NIF_TYPE_rule[0],
    (sizeof(TMD_NIF_TYPE_rule) / sizeof(TMD_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.mal[ prm_mal_index].conf.type:\r\n"
    "  Network interface type.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_MAL_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.mal[ prm_mal_index].mal_ndx:\r\n"
    "  MAC lane index. Range: 0 - 7.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_NIF_MAL_NOF_ENTRIES_ID,
    "mal_nof_entries",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.nif.mal_nof_entries:\r\n"
    "  Number of entries: per-MAC lane basic configuration. Range: 0 - 8.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_FABRIC_FTMH_EXTENSION_ID,
    "ftmh_extension",
    (PARAM_VAL_RULES *)&TMD_PORTS_FTMH_EXT_OUTLIF_rule[0],
    (sizeof(TMD_PORTS_FTMH_EXT_OUTLIF_rule) / sizeof(TMD_PORTS_FTMH_EXT_OUTLIF_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.ftmh_extension:\r\n"
    "  FTMH Header configuration: always allow, never allow, allow only when the\r\n"
    "  packet is multicast.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_FABRIC_CONNECT_MODE_ID,
    "connect_mode",
    (PARAM_VAL_RULES *)&TMD_FABRIC_CONNECT_MODE_rule[0],
    (sizeof(TMD_FABRIC_CONNECT_MODE_rule) / sizeof(TMD_FABRIC_CONNECT_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.connect_mode:\r\n"
    "  The way the device is connected to fabric.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_FABRIC_CELL_FORMAT_SEGMENTATION_ENABLE_ID,
    "segmentation_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.cell_format.segmentation_enable:\r\n"
    "  If TRUE, fabric segmentation will be performed to improve the fabric\r\n"
    "  performance in fixed size cell systems.Valid for fixed cell size\r\n"
    "  configuration only.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_FABRIC_CELL_FORMAT_VARIABLE_CELL_SIZE_ENABLE_ID,
    "variable_cell_size_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.cell_format.variable_cell_size_enable:\r\n"
    "  If TRUE,variable cell size will be used.This configuration is invalid for\r\n"
    "  SOC_SAND_FE200 systems.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_FABRIC_FABRIC_HDR_TYPE_ID,
    "fabric_hdr_type",
    (PARAM_VAL_RULES *)&TMD_MGMT_FABRIC_HDR_TYPE_rule[0],
    (sizeof(TMD_MGMT_FABRIC_HDR_TYPE_rule) / sizeof(TMD_MGMT_FABRIC_HDR_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.fabric_hdr_type:\r\n"
    "  The type of FTMH header to use\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_FABRIC_PCKT_CRC_FABRIC_SEND_ENABLE_ID,
    "pckt_crc_fabric_send_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.pckt_crc_fabric_send_enable:\r\n"
    "  If set, and pckt_crc_enable also set,the packet will be sent over fabric with\r\n"
    "  CRC. Note: must be disabled in fap20-coexist systems.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_FABRIC_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.fabric.enable:\r\n"
    "  Enable/disable fabric configuration\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_LANES_CONF_INDEX_ID,
    "lanes_conf_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  lanes_conf_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_LANES_CONF_IS_SWAP_POLARITY_RX_ID,
    "is_swap_polarity_rx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].is_swap_polarity_rx:\r\n"
    "  Whether Swap Polarity for Rx lane direction. Indicator:TRUE - Swap\r\n"
    "  polarity.FALSE - Normal polarity.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_LANES_CONF_IS_SWAP_POLARITY_TX_ID,
    "is_swap_polarity_tx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].is_swap_polarity_tx:\r\n"
    "  Whether Swap Polarity for Tx lane direction.Indicator:TRUE - Swap\r\n"
    "  polarity.FALSE - Normal polarity.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_LANES_CONF_TX_INFO_SLEW_MODE_ID,
    "slew_mode",
    (PARAM_VAL_RULES *)&TMD_SRD_SLEW_MODE_rule[0],
    (sizeof(TMD_SRD_SLEW_MODE_rule) / sizeof(TMD_SRD_SLEW_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].tx_info.slew_mode:\r\n"
    "  This indicates which of the slew modes to work with - normal slew mode (fast\r\n"
    "  edges) or moderated slew (slowed down slew).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_LANES_CONF_TX_INFO_MEDIA_TYPE_ID,
    "media_type",
    (PARAM_VAL_RULES *)&TMD_SRD_MEDIA_TYPE_rule[0],
    (sizeof(TMD_SRD_MEDIA_TYPE_rule) / sizeof(TMD_SRD_MEDIA_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].tx_info.media_type:\r\n"
    "  This criterion sets several physical parameters of the SerDes for rate that\r\n"
    "  is above 3.125Gbps, such as curser-weight, tap-set etc.There are 3 media\r\n"
    "  types.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_LANES_CONF_TX_INFO_PRE_EMPHASIS_ID,
    "pre_emphasis",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].tx_info.pre_emphasis:\r\n"
    "  This criterion sets several physical parameters of the SerDes for rate that\r\n"
    "  are below 3.125Gbps, such as curser-weight, tap-set etc. Range: 0 - 120.\r\n"
    "  Note: the values represent x10 the designated dB value. example: 120\r\n"
    "  represents 12.0 db, and 55 equals 5.5 dB etc.\r\n"
    "  The\r\n"
    "  real resolution is 0.5 db.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_LANES_CONF_TX_INFO_AMPLITUDE_ID,
    "amplitude",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].tx_info.amplitude:\r\n"
    "  The amplitude of the transmitter in mV. Range: 200-1750mV.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_LANES_CONF_DIVISOR_ID,
    "divisor",
    (PARAM_VAL_RULES *)&TMD_SRD_LANE_DATA_RATE_DIVISOR_rule[0],
    (sizeof(TMD_SRD_LANE_DATA_RATE_DIVISOR_rule) / sizeof(TMD_SRD_LANE_DATA_RATE_DIVISOR_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].divisor:\r\n"
    "  The divisor of the lane's rate. The lane receives the rate of the whole\r\n"
    "  quartet, but may divide it to receive Half or Quarter of the given rate.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_LANES_CONF_STATE_ID,
    "state",
    (PARAM_VAL_RULES *)&TMD_SRD_LANE_STATE_rule[0],
    (sizeof(TMD_SRD_LANE_STATE_rule) / sizeof(TMD_SRD_LANE_STATE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.lanes_conf[ prm_lanes_conf_index].state:\r\n"
    "  The lanes status - normal/power-down/reset.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_QRT_RATES_CONF_INDEX_ID,
    "qrt_rates_conf_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  qrt_rates_conf_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_QRT_RATES_CONF_ID,
    "qrt_rates_conf",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.qrt_rates_conf[ prm_qrt_rates_conf_index]:\r\n"
    "  SerDes Quartet Rate configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_REF_CLKS_FABRIC_REF_CLK_ID,
    "fabric_ref_clk",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.ref_clks.fabric_ref_clk:\r\n"
    "  The reference clock that the CMUs of the quartets of lanes (32 - 60) towards\r\n"
    "  the fabric are fed from.The reference clock that the CMUs of the quartets of\r\n"
    "  lanes (24 - 31) that can be configures to be either towards the nif or\r\n"
    "  toeards the fabric, according to the shared_quartet configuration (NIF/Fabric)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_REF_CLKS_NIF_REF_CLK_ID,
    "nif_ref_clk",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.ref_clks.nif_ref_clk:\r\n"
    "  The reference clock that the CMUs of the quartet of lanes (0 - 23) towards\r\n"
    "  the nif are fed from.Note: The reference clock that the CMUs of the quartets\r\n"
    "  of lanes (24 - 31) that can be configures to be either towards the nif or\r\n"
    "  toeards the fabric, according to the shared_quartet configuration (NIF/Fabric)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_SERDES_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.serdes.enable:\r\n"
    "  Enable/disable SerDes configuration\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_QDR_PLL_CONF_R_ID,
    "r",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.r:\r\n"
    "  Loop-filter resistance\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_QDR_PLL_CONF_I_ID,
    "i",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.i:\r\n"
    "  Charge-pump current\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_QDR_PLL_CONF_V_ID,
    "v",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.v:\r\n"
    "  VCO gain\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_QDR_PLL_CONF_K_ID,
    "k",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.k:\r\n"
    "  Pll-K\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_QDR_PLL_CONF_P_ID,
    "p",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.p:\r\n"
    "  Pll-P\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_QDR_PLL_CONF_N_ID,
    "n",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.n:\r\n"
    "  Pll-N\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_QDR_PLL_CONF_M_ID,
    "m",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.pll_conf.m:\r\n"
    "  Pll-M\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_QDR_IS_CORE_CLOCK_FREQ_ID,
    "is_core_clock_freq",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.is_core_clock_freq:\r\n"
    "  If TRUE, the 250Mhz Core clock is used as QDR reference clock. Otherwise\r\n"
    "  (lower frequency) - QDR clock is used. In the later case, pll configuration\r\n"
    "  must be set. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_QDR_PROTECTION_TYPE_ID,
    "protection_type",
    (PARAM_VAL_RULES *)&TMD_HW_QDR_PROTECT_TYPE_rule[0],
    (sizeof(TMD_HW_QDR_PROTECT_TYPE_rule) / sizeof(TMD_HW_QDR_PROTECT_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.protection_type:\r\n"
    "  Select Parity or ECC protection type. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_QDR_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.qdr.enable:\r\n"
    "  Enable/disable QDR configuration. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_DRAM_CONF_LEN_ID,
    "dram_conf_len",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.dram_conf_len:\r\n"
    "  Number of valid entries in dram_conf.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_DRAM_CONF_INDEX_ID,
    "dram_conf_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  dram_conf_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_DRAM_CONF_ID,
    "dram_conf",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.dram_conf[ prm_dram_conf_index]:\r\n"
    "  DRAM configuration sequence.The sequence is a buffer of address-value pairs.\r\n"
    "  This defines the dram configuration (DRC)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_NOF_COLUMNS_ID,
    "nof_columns",
    (PARAM_VAL_RULES *)&TMD_DRAM_NUM_COLUMNS_rule[0],
    (sizeof(TMD_DRAM_NUM_COLUMNS_rule) / sizeof(TMD_DRAM_NUM_COLUMNS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.nof_columns:\r\n"
    "  Number of DRAM columns. Range: 256/512/1024/2048/4096/8192\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_NOF_BANKS_ID,
    "nof_banks",
    (PARAM_VAL_RULES *)&TMD_DRAM_NUM_BANKS_rule[0],
    (sizeof(TMD_DRAM_NUM_BANKS_rule) / sizeof(TMD_DRAM_NUM_BANKS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.nof_banks:\r\n"
    "  Number of Banks. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_PLL_CONF_R_ID,
    "r",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.r:\r\n"
    "  Loop-filter resistance\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_PLL_CONF_I_ID,
    "i",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.i:\r\n"
    "  Charge-pump current\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_PLL_CONF_V_ID,
    "v",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.v:\r\n"
    "  VCO gain\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_PLL_CONF_K_ID,
    "k",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.k:\r\n"
    "  Pll-K\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_PLL_CONF_P_ID,
    "p",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.p:\r\n"
    "  Pll-P\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_PLL_CONF_N_ID,
    "n",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.n:\r\n"
    "  Pll-N\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_PLL_CONF_M_ID,
    "m",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pll_conf.m:\r\n"
    "  Pll-M\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_PCKT_CRC_ENABLE_ID,
    "pckt_crc_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.pckt_crc_enable:\r\n"
    "  If set, a 16b CRC is appended to the end of the packet in the DRAM (aligned\r\n"
    "  to the last two bytes of a 32B word).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_DRAM_TYPE_ID,
    "dram_type",
    (PARAM_VAL_RULES *)&TMD_HW_DRAM_TYPE_rule[0],
    (sizeof(TMD_HW_DRAM_TYPE_rule) / sizeof(TMD_HW_DRAM_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.dram_type:\r\n"
    "  DRAM type.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_IS_VALID_INDEX_ID,
    "is_valid_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  is_valid_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_IS_VALID_ID,
    "is_valid",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.is_valid[ prm_is_valid_index]:\r\n"
    "  Per DRAM interface, defines if exists and needs to be configured. Note: The\r\n"
    "  following number of DRAM interfaces can be configured: 2, 3, 4, 6\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_HW_ADJUST_DRAM_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hw_adjust.dram.enable:\r\n"
    "  Enable/disable DRAM configuration\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_SET_HW_INTERFACES_SET_SILENT_ID,
    "silent",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  silent:\r\n"
    "  If TRUE, all printing will be suppressed. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_set bypass_enable 0 nifs_index 0 nifs 0\r\n"
    "  nof_ports 0 enable 0 enable 0 fat_pipe_enable 0 sgmii_index 0 is_extern_phy 0\r\n"
    "  enable 0 nif_ndx 0 sgmii_nof_entries 0 spaui_index 0 is_burst_interleaving 0\r\n"
    "  bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0 dic_mode 0 size 0\r\n"
    "  enable 0 skip_SOP 0 size 0 enable 0 enable 0 mal_ndx 0 spaui_nof_entries 0\r\n"
    "  mal_index 0 swap_tx 0 swap_rx 0 serdes_rate 0 type 0 mal_ndx 0\r\n"
    "  mal_nof_entries 0 ftmh_extension 0 connect_mode 0 segmentation_enable 0\r\n"
    "  variable_cell_size_enable 0 fabric_hdr_type 0 pckt_crc_fabric_send_enable 0\r\n"
    "  enable 0 lanes_conf_index 0 is_swap_polarity_rx 0 is_swap_polarity_tx 0\r\n"
    "  slew_mode 0 media_type 0 pre_emphasis 0 amplitude 0 divisor 0 state 0\r\n"
    "  qrt_rates_conf_index 0 qrt_rates_conf 0 fabric_ref_clk 0 nif_ref_clk 0 enable\r\n"
    "  0 r 0 i 0 v 0 k 0 p 0 n 0 m 0 is_core_clock_freq 0 protection_type 0 enable 0\r\n"
    "  dram_conf_len 0 dram_conf_index 0 dram_conf 0 nof_columns 256 nof_banks 4 r 0\r\n"
    "  i 0 v 0 k 0 p 0 n 0 m 0 pckt_crc_enable 0 dram_type 0 is_valid_index 0\r\n"
    "  is_valid 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_HW_INTERFACES_GET_HW_INTERFACES_GET_ID,
    "hw_interfaces_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Initialize a sub-set of the HW interfaces of the device.\r\n"
    "  The function might be called more than once, each time with\r\n"
    "  different fields, indicated to be written to the device\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt hw_interfaces_get\r\n"
#endif
    "",
    "",
    {BIT(13), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif
#ifdef UI_MGMT
  {
    PARAM_TMD_MGMT_ALL_CTRL_CELLS_ENABLE_SET_ALL_CTRL_CELLS_ENABLE_SET_ID,
    "all_ctrl_cells_enable_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable / Disable the device from receiving and transmitting\r\n"
    "  control cells.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt all_ctrl_cells_enable_set enable 0\r\n"
#endif
    "",
    "",
    {BIT(14), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_ALL_CTRL_CELLS_ENABLE_SET_ALL_CTRL_CELLS_ENABLE_SET_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  enable:\r\n"
    "  SOC_SAND_IN uint8\r\n"
    "  enable\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt all_ctrl_cells_enable_set enable 0\r\n"
#endif
    "",
    "",
    {BIT(14), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_ALL_CTRL_CELLS_ENABLE_GET_ALL_CTRL_CELLS_ENABLE_GET_ID,
    "all_ctrl_cells_enable_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable / Disable the device from receiving and transmitting\r\n"
    "  control cells.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt all_ctrl_cells_enable_get\r\n"
#endif
    "",
    "",
    {BIT(15), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_ENABLE_TRAFFIC_SET_ENABLE_TRAFFIC_SET_ID,
    "enable_traffic_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable / Disable the device from receiving and transmitting\r\n"
    "  traffic.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt enable_traffic_set enable 0\r\n"
#endif
    "",
    "",
    {BIT(16), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_ENABLE_TRAFFIC_SET_ENABLE_TRAFFIC_SET_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  enable:\r\n"
    "  SOC_SAND_IN uint8\r\n"
    "  enable\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt enable_traffic_set enable 0\r\n"
#endif
    "",
    "",
    {BIT(16), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_ENABLE_TRAFFIC_GET_ENABLE_TRAFFIC_GET_ID,
    "enable_traffic_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable / Disable the device from receiving and transmitting\r\n"
    "  traffic.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt enable_traffic_get\r\n"
#endif
    "",
    "",
    {BIT(17), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_IDX_CONVERT_ID,
    "idx_convert",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    ""
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler sch_flow2se_id flow_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(19)|BIT(20)|BIT(21)|BIT(22)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW2SE_ID_SCH_FLOW2SE_ID_ID,
    "flow2se_id",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Calculates se_id given the appropriate flow_id.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler sch_flow2se_id flow_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(19)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW2SE_ID_SCH_FLOW2SE_ID_FLOW_ID_ID,
    "flow_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow_id:\r\n"
    "  flow id, 0 - 56K-1\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler sch_flow2se_id flow_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(19)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_SE2FLOW_ID_SCH_SE2FLOW_ID_ID,
    "se2flow_id",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Calculates flow_id given the appropriate se_id.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler sch_se2flow_id se_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(20)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_SE2FLOW_ID_SCH_SE2FLOW_ID_SE_ID_ID,
    "se_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  se_id:\r\n"
    "  Scheduling element id, 0 - 16K-1\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler sch_se2flow_id se_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_SE2PORT_ID_SCH_SE2PORT_ID_ID,
    "se2port_id",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Calculates port id given the appropriate scheduling\r\n"
    "  element id.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler sch_se2port_id se_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(21)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_SE2PORT_ID_SCH_SE2PORT_ID_SE_ID_ID,
    "se_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  se_id:\r\n"
    "  flow id, 0 - 16K-1\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler sch_se2port_id se_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(21)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT2SE_ID_SCH_PORT2SE_ID_ID,
    "port2se_id",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Calculates scheduling element id given the appropriate\r\n"
    "  port id.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler sch_port2se_id port_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(22)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT2SE_ID_SCH_PORT2SE_ID_PORT_ID_ID,
    "port_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_id:\r\n"
    "  Port id, 0 - 80\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler sch_port2se_id port_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#ifdef UI_UNDEFED
  {
    PARAM_TMD_MGMT_PCKT_SIZE_RANGE_SET_PCKT_SIZE_RANGE_SET_ID,
    "pckt_size_range_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set the boundaries (minimal/maximal allowed size) for the expected packets.\r\n"
    "  The limitation can be performed based on the packet size before or after the\r\n"
    "  ingress editing (external and internal configuration mode, accordingly).\r\n"
    "  Packets outside the specified range are dropped.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt pckt_size_range_set conf_mode_ndx 0 max 0 min 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(28)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_PCKT_SIZE_RANGE_SET_PCKT_SIZE_RANGE_SET_CONF_MODE_NDX_ID,
    "conf_mode_ndx",
    (PARAM_VAL_RULES *)&TMD_MGMT_PCKT_SIZE_CONF_MODE_rule[0],
    (sizeof(TMD_MGMT_PCKT_SIZE_CONF_MODE_rule) / sizeof(TMD_MGMT_PCKT_SIZE_CONF_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  conf_mode_ndx:\r\n"
    "  External mode filters the packets according to there original size. Internal\r\n"
    "  mode filters the packets according to their size inside the device, after\r\n"
    "  ingress editing.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt pckt_size_range_set conf_mode_ndx 0 max 0 min 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(28)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_PCKT_SIZE_RANGE_SET_PCKT_SIZE_RANGE_SET_SIZE_RANGE_MAX_ID,
    "max",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  size_range.max:\r\n"
    "  Maximal allowed packet size, bytes. Packets above this value will be dropped.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt pckt_size_range_set conf_mode_ndx 0 max 0 min 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_PCKT_SIZE_RANGE_SET_PCKT_SIZE_RANGE_SET_SIZE_RANGE_MIN_ID,
    "min",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  size_range.min:\r\n"
    "  Minimal allowed packet size, bytes. Packets below this value will be dropped.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt pckt_size_range_set conf_mode_ndx 0 max 0 min 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_PCKT_SIZE_RANGE_GET_PCKT_SIZE_RANGE_GET_ID,
    "pckt_size_range_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set the boundaries (minimal/maximal allowed size) for the expected packets.\r\n"
    "  The limitation can be performed based on the packet size before or after the\r\n"
    "  ingress editing (external and internal configuration mode, accordingly).\r\n"
    "  Packets outside the specified range are dropped.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt pckt_size_range_get conf_mode_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(29)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MGMT_PCKT_SIZE_RANGE_GET_PCKT_SIZE_RANGE_GET_CONF_MODE_NDX_ID,
    "conf_mode_ndx",
    (PARAM_VAL_RULES *)&TMD_MGMT_PCKT_SIZE_CONF_MODE_rule[0],
    (sizeof(TMD_MGMT_PCKT_SIZE_CONF_MODE_rule) / sizeof(TMD_MGMT_PCKT_SIZE_CONF_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  conf_mode_ndx:\r\n"
    "  External mode filters the packets according to there original size. Internal\r\n"
    "  mode filters the packets according to their size inside the device, after\r\n"
    "  ingress editing.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api mgmt pckt_size_range_get conf_mode_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(29)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  #endif /* UI_UNDEFED */
  {
    PARAM_TMD_MGMT_CORE_FREQUENCY_GET_CORE_FREQUENCY_GET_ID, 
    "core_frequency_get", 
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0], 
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Get the core clock frequency of the device.\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api mgmt core_frequency_get\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(0)}, 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_API_MGMT_ID,
    "mgmt",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17), 0, 0, 0, 0, 0, BIT(28)|BIT(29), 0, 0, 0, 0, 0, 0, BIT(0)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } mgmt*/
#ifdef UI_GENERAL/* { general*/
#endif /* } general*/
#ifdef UI_PORTS/* { ports*/
  {
    PARAM_TMD_SYS_PHYS_TO_LOCAL_PORT_MAP_SET_SYS_PHYS_TO_LOCAL_PORT_MAP_SET_ID,
    "sys_phys_to_local_port_map_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Map System Physical FAP Port to a <unit, fap_id> pair.\r\n"
    "  The mapping is unique - single System Physical Port is mapped to a single\r\n"
    "  local port per specified device.\r\n"
    "  This configuration effects:\r\n"
    "  1. Resolving destination FAP Id and OFP Id\r\n"
    "  2. Per-port pruning \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports sys_phys_to_local_port_map_set sys_phys_port_ndx 0\r\n"
    "  mapped_fap_id 0\r\n"
#endif
    "",
    "",
    {BIT(18), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SYS_PHYS_TO_LOCAL_PORT_MAP_SET_SYS_PHYS_TO_LOCAL_PORT_MAP_SET_SYS_PHYS_PORT_NDX_ID,
    "sys_phys_port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sys_phys_port_ndx:\r\n"
    "  The index of system physical port. Range: 0 - 4095.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports sys_phys_to_local_port_map_set sys_phys_port_ndx 0\r\n"
    "  mapped_fap_id 0\r\n"
#endif
    "",
    "",
    {BIT(18), 0, 0, 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SYS_PHYS_TO_LOCAL_PORT_MAP_SET_SYS_PHYS_TO_LOCAL_PORT_MAP_SET_MAPPED_FAP_ID_ID,
    "mapped_fap_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mapped_fap_id:\r\n"
    "  The device id of the port that is mapped.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports sys_phys_to_local_port_map_set sys_phys_port_ndx 0\r\n"
    "  mapped_fap_id 0\r\n"
#endif
    "",
    "",
    {BIT(18), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SYS_PHYS_TO_LOCAL_PORT_MAP_SET_SYS_PHYS_TO_LOCAL_PORT_MAP_SET_MAPPED_FAP_PORT_ID_ID,
    "mapped_fap_port_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mapped_fap_port_id:\r\n"
    "  Local (per device) FAP Port id. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports sys_phys_to_local_port_map_set sys_phys_port_ndx 0\r\n"
    "  mapped_fap_id 0\r\n"
#endif
    "",
    "",
    {BIT(18), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SYS_PHYS_TO_LOCAL_PORT_MAP_GET_SYS_PHYS_TO_LOCAL_PORT_MAP_GET_ID,
    "sys_phys_to_local_port_map_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Map System Physical FAP Port to a <unit, fap_id> pair.\r\n"
    "  The mapping is unique - single System Physical Port is mapped to a single\r\n"
    "  local port per specified device.\r\n"
    "  This configuration effects:\r\n"
    "  1. Resolving destination FAP Id and OFP Id\r\n"
    "  2. Per-port pruning \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports sys_phys_to_local_port_map_get sys_phys_port_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(19), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SYS_PHYS_TO_LOCAL_PORT_MAP_GET_SYS_PHYS_TO_LOCAL_PORT_MAP_GET_SYS_PHYS_PORT_NDX_ID,
    "sys_phys_port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sys_phys_port_ndx:\r\n"
    "  The index of system physical port. Range: 0 - 4095.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports sys_phys_to_local_port_map_get sys_phys_port_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(19), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_LOCAL_TO_SYS_PHYS_PORT_MAP_GET_LOCAL_TO_SYS_PHYS_PORT_MAP_GET_ID,
    "local_to_sys_phys_port_map_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Get a System Physical FAP Port mapped to a FAP port in the local device.\r\n"
    "  The mapping is unique - single System Physical Port is mapped to a single\r\n"
    "  local port per specified device.\r\n"
    "  This configuration effects:\r\n"
    "  1. Resolving destination FAP Id and OFP Id\r\n"
    "  2. Per-port pruning \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports local_to_sys_phys_port_map_get fap_ndx 0 fap_local_port_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(20), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_LOCAL_TO_SYS_PHYS_PORT_MAP_GET_LOCAL_TO_SYS_PHYS_PORT_MAP_GET_FAP_NDX_ID,
    "fap_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fap_ndx:\r\n"
    "  Local (per device) FAP Port id. Range: 0 - 79. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports local_to_sys_phys_port_map_get fap_ndx 0 fap_local_port_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(20), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_LOCAL_TO_SYS_PHYS_PORT_MAP_GET_LOCAL_TO_SYS_PHYS_PORT_MAP_GET_FAP_LOCAL_PORT_NDX_ID,
    "fap_local_port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fap_local_port_ndx:\r\n"
    "  The device id of the port that is mapped. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports local_to_sys_phys_port_map_get fap_ndx 0 fap_local_port_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(20), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_TO_INTERFACE_MAP_SET_PORT_TO_INTERFACE_MAP_SET_ID,
    "port_to_interface_map_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Maps the specified FAP Port to interface and channel. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_to_interface_map_set port_ndx 0 direction_ndx 0\r\n"
    "  channel_id 0 if_id 0\r\n"
#endif
    "",
    "",
    {BIT(21), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_TO_INTERFACE_MAP_SET_PORT_TO_INTERFACE_MAP_SET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Fap port index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_to_interface_map_set port_ndx 0 direction_ndx 0\r\n"
    "  channel_id 0 if_id 0\r\n"
#endif
    "",
    "",
    {BIT(21), 0, 0, 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_TO_INTERFACE_MAP_SET_PORT_TO_INTERFACE_MAP_SET_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&TMD_PORT_DIRECTION_rule[0],
    (sizeof(TMD_PORT_DIRECTION_rule) / sizeof(TMD_PORT_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\r\n"
    "  The direction of the mapped port (incoming/outgoing/both).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_to_interface_map_set port_ndx 0 direction_ndx 0\r\n"
    "  channel_id 0 if_id 0\r\n"
#endif
    "",
    "",
    {BIT(21), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_TO_INTERFACE_MAP_SET_PORT_TO_INTERFACE_MAP_SET_INFO_CHANNEL_ID_ID,
    "channel_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.channel_id:\r\n"
    "  Channel index. Zero for non-channelized interface.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_to_interface_map_set port_ndx 0 direction_ndx 0\r\n"
    "  channel_id 0 if_id 0\r\n"
#endif
    "",
    "",
    {BIT(21), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_TO_INTERFACE_MAP_SET_PORT_TO_INTERFACE_MAP_SET_INFO_IF_ID_ID,
    "if_id",
    (PARAM_VAL_RULES *)&TMD_INTERFACE_ID_rule[0],
    (sizeof(TMD_INTERFACE_ID_rule) / sizeof(TMD_INTERFACE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.if_id:\r\n"
    "  Interface index of the interface to which the FAP port is mapped.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_to_interface_map_set port_ndx 0 direction_ndx 0\r\n"
    "  channel_id 0 if_id 0\r\n"
#endif
    "",
    "",
    {BIT(21), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_TO_INTERFACE_MAP_GET_PORT_TO_INTERFACE_MAP_GET_ID,
    "port_to_interface_map_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Maps the specified FAP Port to interface and channel. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_to_interface_map_get port_ndx 0 direction_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(22), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_TO_INTERFACE_MAP_GET_PORT_TO_INTERFACE_MAP_GET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Fap port index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_to_interface_map_get port_ndx 0 direction_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(22), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_SET_LAG_SET_ID,
    "lag_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure a LAG.\r\n"
    "  A LAG is defined by a group of System Physical Ports\r\n"
    "  that compose it. This configuration affects\r\n"
    "  1. LAG resolution for queuing at the ingress.\r\n"
    "  2. LAG-based pruning.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_set direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 member_id 0 sys_port_index 0 sys_port 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {BIT(23), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_SET_LAG_SET_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&TMD_PORT_DIRECTION_rule[0],
    (sizeof(TMD_PORT_DIRECTION_rule) / sizeof(TMD_PORT_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\r\n"
    "  LAG direction - incoming, outgoing or both.\r\n"
    "  For symmetrical LAG configuration - set direction as 'both'.\r\n"
    "  For different Incoming and Outgoing LAG configuration - per-direction\r\n"
    "  configuration is required.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_set direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 member_id 0 sys_port_index 0 sys_port 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {BIT(23), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_SET_LAG_SET_LAG_NDX_ID,
    "lag_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  lag_ndx:\r\n"
    "  LAG index. Range: 0 - 255.\r\n"
    "  SOC_SAND_OUT uint32\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_set direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 member_id 0 sys_port_index 0 sys_port 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {BIT(23), 0, 0, 0},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_SET_LAG_SET_INFO_LAG_MEMBER_SYS_PORTS_ID,
    "sys_ports",
    (PARAM_VAL_RULES *)&tmd_api_members_vals[0],
    (sizeof(tmd_api_members_vals) / sizeof(tmd_api_members_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.lag_member_sys_ports[ prm_lag_member_sys_ports_index].sys_port:\r\n"
    "  System Physical Port indexes of the ports that are members of the specified\r\n"
    "  LAG.The index of the System Physical Port in the array is its lag membership\r\n"
    "  index (0 - 255).Range: 0 - 4095.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_set direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 member_id 0 sys_port_index 0 sys_port 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {BIT(23), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_SET_LAG_SET_INFO_LAG_MEMBER_SYS_PORTS_MEMBER_ID_ID,
    "member_ids",
    (PARAM_VAL_RULES *)&tmd_api_members_vals[0],
    (sizeof(tmd_api_members_vals) / sizeof(tmd_api_members_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  The LAG member index. This indexes is not relevant for LAG-based pruning. \r\n"
    "  It is embedded in the FTMH (SRC_SYS_PORT field), and can be used by the CPU. \r\n"
    "  Outgoing LAG Range: 0 - 16. Incoming LAG Range: 0 - 80. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_set direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 member_id 0 sys_port_index 0 sys_port 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {BIT(23), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_GET_LAG_GET_ID,
    "lag_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure a LAG.\r\n"
    "  A LAG is defined by a group of System Physical Ports\r\n"
    "  that compose it. This configuration affects\r\n"
    "  1. LAG resolution for queuing at the ingress.\r\n"
    "  2. LAG-based pruning.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_get direction_ndx 0 lag_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(24), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_GET_LAG_GET_LAG_NDX_ID,
    "lag_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  lag_ndx:\r\n"
    "  LAG index. Range: 0 - 255.\r\n"
    "  SOC_SAND_OUT uint32\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_get direction_ndx 0 lag_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(24), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_ADD_LAG_ADD_ID,
    "lag_add_without_mem_id",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure a LAG.\r\n"
    "  A LAG is defined by a group of System Physical Ports\r\n"
    "  that compose it. This configuration affects\r\n"
    "  1. LAG resolution for queuing at the ingress.\r\n"
    "  2. LAG-based pruning.\r\n"
    "  NOTE: calls to a depricated API, without configuring \r\n"
    "  LAG-member-id"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_add direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 lag_member_sys_ports 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(10), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_ADD_LAG_ADD_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&TMD_PORT_DIRECTION_rule[0],
    (sizeof(TMD_PORT_DIRECTION_rule) / sizeof(TMD_PORT_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\r\n"
    "  LAG direction - incoming, outgoing or both.\r\n"
    "  For symmetrical LAG configuration - set direction as 'both'.\r\n"
    "  For different Incoming and Outgoing LAG configuration - per-direction\r\n"
    "  configuration is required.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_add direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 lag_member_sys_ports 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(10), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_ADD_LAG_ADD_LAG_NDX_ID,
    "lag_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  lag_ndx:\r\n"
    "  LAG index. Range: 0 - 255.\r\n"
    "  SOC_SAND_OUT uint32\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_add direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 lag_member_sys_ports 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(10), 0, 0, 0},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_ADD_LAG_ADD_INFO_LAG_MEMBER_SYS_PORTS_ID,
    "sys_port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.lag_member_sys_ports[ prm_lag_member_sys_ports_index]:\r\n"
    "  System Physical Port indexes of the ports that are members of the specified\r\n"
    "  LAG.The index of the System Physical Port in the array is its lag membership\r\n"
    "  index (0 - 255).Range: 0 - 4095.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_add direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 lag_member_sys_ports 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(10), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_MEMBER_ADD_LAG_MEMBER_ADD_ID,
    "lag_add",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Add a system port as a member in LAG.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_member_add direction_ndx 0 lag_ndx 0 member_id 0\r\n"
    "  sys_port_index 0 sys_port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(7)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_MEMBER_ADD_LAG_MEMBER_ADD_LAG_NDX_ID,
    "lag_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  lag_ndx:\r\n"
    "  LAG index. Range: 0 - 255.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_member_add direction_ndx 0 lag_ndx 0 member_id 0\r\n"
    "  sys_port_index 0 sys_port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(7)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_MEMBER_ADD_LAG_MEMBER_ADD_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&TMD_PORT_DIRECTION_rule[0],
    (sizeof(TMD_PORT_DIRECTION_rule) / sizeof(TMD_PORT_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\r\n"
    "  LAG direction - incoming, outgoing or both.\r\n"
    "  For symmetrical LAG configuration - set direction as 'both'.\r\n"
    "  For different Incoming and Outgoing LAG configuration - per-direction\r\n"
    "  configuration is required.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_member_add direction_ndx 0 lag_ndx 0 member_id 0\r\n"
    "  sys_port_index 0 sys_port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(7)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_MEMBER_ADD_LAG_MEMBER_ADD_LAG_MEMBER_SYS_PORT_ID,
    "sys_port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  lag_member.sys_port[ prm_sys_port_index]:\r\n"
    "  System Physical Port index of the port that is a member of the specified\r\n"
    "  LAG.Range: 0 - 4095.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_member_add direction_ndx 0 lag_ndx 0 member_id 0\r\n"
    "  sys_port_index 0 sys_port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(7)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_MEMBER_ADD_LAG_MEMBER_ADD_LAG_MEMBER_MEMBER_ID_ID,
    "member_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  lag_member.member_id:\r\n"
    "  The LAG member index. This indes is not relevant for LAG-based pruning. It is\r\n"
    "  embedded in the FTMH (SRC_SYS_PORT field), and can be used by the\r\n"
    "  CPU.Outgoing LAG Range: 0 - 16. Incoming LAG Range: 0 - 80. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_member_add direction_ndx 0 lag_ndx 0 member_id 0\r\n"
    "  sys_port_index 0 sys_port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(7)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_REMOVE_LAG_REMOVE_ID,
    "lag_remove",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure a LAG.\r\n"
    "  A LAG is defined by a group of System Physical Ports\r\n"
    "  that compose it. This configuration affects\r\n"
    "  1. LAG resolution for queuing at the ingress.\r\n"
    "  2. LAG-based pruning.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_remove direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 lag_member_sys_ports 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(11), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_REMOVE_LAG_REMOVE_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&TMD_PORT_DIRECTION_rule[0],
    (sizeof(TMD_PORT_DIRECTION_rule) / sizeof(TMD_PORT_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\r\n"
    "  LAG direction - incoming, outgoing or both.\r\n"
    "  For symmetrical LAG configuration - set direction as 'both'.\r\n"
    "  For different Incoming and Outgoing LAG configuration - per-direction\r\n"
    "  configuration is required.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_remove direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 lag_member_sys_ports 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(11), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_REMOVE_LAG_REMOVE_LAG_NDX_ID,
    "lag_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  lag_ndx:\r\n"
    "  LAG index. Range: 0 - 255.\r\n"
    "  SOC_SAND_OUT uint32\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_remove direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 lag_member_sys_ports 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(11), 0, 0, 0},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_REMOVE_LAG_REMOVE_INFO_LAG_MEMBER_SYS_PORTS_ID,
    "sys_port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.lag_member_sys_ports[ prm_lag_member_sys_ports_index]:\r\n"
    "  System Physical Port indexes of the ports that are members of the specified\r\n"
    "  LAG.The index of the System Physical Port in the array is its lag membership\r\n"
    "  index (0 - 255).Range: 0 - 4095.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_remove direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 lag_member_sys_ports 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(11), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#ifdef UI_UNDEFED_TEMP
  {
    PARAM_TMD_PORTS_LAG_SYS_PORT_INFO_GET_LAG_SYS_PORT_INFO_GET_ID,
    "lag_sys_port_info_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure a LAG.\r\n"
    "  A LAG is defined by a group of System Physical Ports\r\n"
    "  that compose it. This configuration affects\r\n"
    "  1. LAG resolution for queuing at the ingress.\r\n"
    "  2. LAG-based pruning.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_sys_port_info_get direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 lag_member_sys_ports 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(12), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_LAG_SYS_PORT_INFO_GET_LAG_SYS_PORT_INFO_GET_INFO_LAG_MEMBER_SYS_PORTS_ID,
    "sys_port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.lag_member_sys_ports[ prm_lag_member_sys_ports_index]:\r\n"
    "  System Physical Port indexes of the ports that are members of the specified\r\n"
    "  LAG.The index of the System Physical Port in the array is its lag membership\r\n"
    "  index (0 - 255).Range: 0 - 4095.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports lag_sys_port_info_get direction_ndx 0 lag_ndx 0 lag_member_sys_ports_index\r\n"
    "  0 lag_member_sys_ports 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(12), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* UI_UNDEFED_TEMP */
  {
    PARAM_TMD_PORT_HEADER_TYPE_SET_PORT_HEADER_TYPE_SET_ID,
    "header_type_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure FAP port header parsing type.\r\n"
    "  The configuration can be for incoming FAP ports, outgoing FAP ports or both.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_header_type_set port_ndx 0 direction_ndx 0 header_type 0\r\n"
#endif
    "",
    "",
    {BIT(25), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_HEADER_TYPE_SET_PORT_HEADER_TYPE_SET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  FAP Port index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_header_type_set port_ndx 0 direction_ndx 0 header_type 0\r\n"
#endif
    "",
    "",
    {BIT(25), 0, 0, 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_HEADER_TYPE_SET_PORT_HEADER_TYPE_SET_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&TMD_PORT_DIRECTION_rule[0],
    (sizeof(TMD_PORT_DIRECTION_rule) / sizeof(TMD_PORT_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\r\n"
    "  The direction of the fap port to configure -\r\n"
    "  incoming, outgoing or both.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_header_type_set port_ndx 0 direction_ndx 0 header_type 0\r\n"
#endif
    "",
    "",
    {BIT(25), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_HEADER_TYPE_SET_PORT_HEADER_TYPE_SET_HEADER_TYPE_ID,
    "header_type",
    (PARAM_VAL_RULES *)&TMD_PORT_HEADER_TYPE_rule[0],
    (sizeof(TMD_PORT_HEADER_TYPE_rule) / sizeof(TMD_PORT_HEADER_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  header_type:\r\n"
    "  Port header parsing type.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_header_type_set port_ndx 0 direction_ndx 0 header_type 0\r\n"
#endif
    "",
    "",
    {BIT(25), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_HEADER_TYPE_GET_PORT_HEADER_TYPE_GET_ID,
    "header_type_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure FAP port header parsing type.\r\n"
    "  The configuration can be for incoming FAP ports, outgoing FAP ports or both.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_header_type_get port_ndx 0 direction_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(26), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_HEADER_TYPE_GET_PORT_HEADER_TYPE_GET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  FAP Port index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_header_type_get port_ndx 0 direction_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(26), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#ifdef UI_UNDEFED_TEMP
  {
    PARAM_TMD_PORTS_MIRROR_INBOUND_SET_MIRROR_INBOUND_SET_ID,
    "mirror_inbound_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure inbound mirroring for the specified port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_inbound_set ifp_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(27), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_INBOUND_SET_MIRROR_INBOUND_SET_IFP_NDX_ID,
    "ifp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ifp_ndx:\r\n"
    "  The index of the incoming FAP Port to inbound mirror.\r\n"
    "  Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_inbound_set ifp_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(27), 0, 0, 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_INBOUND_SET_MIRROR_INBOUND_SET_INFO_TC_OVERRIDE_OVERRIDE_VAL_ID,
    "override_tc",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.tc_override.override_val:\r\n"
    "  The value with which the requested field is overridden.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_inbound_set ifp_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(27), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_INBOUND_SET_MIRROR_INBOUND_SET_INFO_TC_OVERRIDE_ENABLE_ID,
    "enable_tc_over",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.tc_override.enable:\r\n"
    "  If TRUE, the requested field is overridden by the indicated value.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_inbound_set ifp_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(27), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_INBOUND_SET_MIRROR_INBOUND_SET_INFO_DP_OVERRIDE_OVERRIDE_VAL_ID,
    "override_dp",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.dp_override.override_val:\r\n"
    "  The value with which the requested field is overridden.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_inbound_set ifp_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(27), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_INBOUND_SET_MIRROR_INBOUND_SET_INFO_DP_OVERRIDE_ENABLE_ID,
    "enable_dp",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.dp_override.enable:\r\n"
    "  If TRUE, the requested field is overridden by the indicated value.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_inbound_set ifp_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(27), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_INBOUND_SET_MIRROR_INBOUND_SET_INFO_DESTINATION_ID_ID,
    "dest_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.destination.id:\r\n"
    "  According to destination type, one of the following:Queue id (Unicast flow).\r\n"
    "  Range: 0 - 32K-1Multicast id (System Multicast). Range: 0 - 16K-1System\r\n"
    "  Physical Port. Range: 0 - 4K-1LAG id. Range: 0 -255.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_inbound_set ifp_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(27), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_INBOUND_SET_MIRROR_INBOUND_SET_INFO_DESTINATION_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&TMD_DEST_TYPE_rule[0],
    (sizeof(TMD_DEST_TYPE_rule) / sizeof(TMD_DEST_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.destination.type:\r\n"
    "  Queue, multicast group or system port / LAG id (Unicast flow, System\r\n"
    "  multicast, Unicast direct accordingly).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_inbound_set ifp_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(27), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_INBOUND_SET_MIRROR_INBOUND_SET_INFO_ENABLE_ID,
    "enable_mirror",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable:\r\n"
    "  Enable/disable inbound mirroring for the specified port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_inbound_set ifp_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(27), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_INBOUND_GET_MIRROR_INBOUND_GET_ID,
    "mirror_inbound_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure inbound mirroring for the specified port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_inbound_get ifp_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(28), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_INBOUND_GET_MIRROR_INBOUND_GET_IFP_NDX_ID,
    "ifp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ifp_ndx:\r\n"
    "  The index of the incoming FAP Port to inbound mirror.\r\n"
    "  Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_inbound_get ifp_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(28), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* UI_UNDEFED_TEMP */
  {
    PARAM_TMD_PORTS_MIRROR_OUTBOUND_SET_MIRROR_OUTBOUND_SET_ID,
    "mirror_outbound_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure outbound mirroring for the specified port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_outbound_set ofp_ndx 0 ifp_id 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(29), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_OUTBOUND_SET_MIRROR_OUTBOUND_SET_OFP_NDX_ID,
    "ofp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_ndx:\r\n"
    "  The index of the outgoing FAP Port to outbound mirror.\r\n"
    "  Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_outbound_set ofp_ndx 0 ifp_id 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(29), 0, 0, 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_OUTBOUND_SET_MIRROR_OUTBOUND_SET_INFO_IFP_ID_ID,
    "ifp_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ifp_id:\r\n"
    "  The incoming FAP port id for mirroring.This FAP port must be mapped to a\r\n"
    "  recycling channel, and there must be and outgoing FAP port to be mapped to\r\n"
    "  the same recycling channel.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_outbound_set ofp_ndx 0 ifp_id 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(29), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_OUTBOUND_SET_MIRROR_OUTBOUND_SET_INFO_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable:\r\n"
    "  Enable/disable outbound mirroring for the specified port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_outbound_set ofp_ndx 0 ifp_id 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(29), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_OUTBOUND_GET_MIRROR_OUTBOUND_GET_ID,
    "mirror_outbound_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure outbound mirroring for the specified port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_outbound_get ofp_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(30), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_MIRROR_OUTBOUND_GET_MIRROR_OUTBOUND_GET_OFP_NDX_ID,
    "ofp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_ndx:\r\n"
    "  The index of the outgoing FAP Port to outbound mirror.\r\n"
    "  Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports mirror_outbound_get ofp_ndx 0\r\n"
#endif
    "",
    "",
    {BIT(30), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#ifdef UI_UNDEFED_TEMP
  {
    PARAM_TMD_PORTS_SNOOP_SET_SNOOP_SET_ID,
    "snoop_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure snooping function for the specified port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports snoop_set snoop_cmd_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 size_bytes 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(31), 0, 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SNOOP_SET_SNOOP_SET_SNOOP_CMD_NDX_ID,
    "snoop_cmd_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  snoop_cmd_ndx:\r\n"
    "  One of the 15 snoop commands. Note that when the packet is received with\r\n"
    "  snoop command 0, it means that the packet is not to be snooped, Therefore\r\n"
    "  there is no meaning to set snoop_cmd_ndx 0.Range: 1-15.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports snoop_set snoop_cmd_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 size_bytes 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(31), 0, 0, 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SNOOP_SET_SNOOP_SET_INFO_TC_OVERRIDE_OVERRIDE_VAL_ID,
    "tc_val",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.tc_override.override_val:\r\n"
    "  The value with which the requested field is overridden.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports snoop_set snoop_cmd_ndx 0 override_tc 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 size_bytes 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(31), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SNOOP_SET_SNOOP_SET_INFO_TC_OVERRIDE_ENABLE_ID,
    "tc_overrid",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.tc_override.enable:\r\n"
    "  If TRUE, the requested field is overridden by the indicated value.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports snoop_set snoop_cmd_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 size_bytes 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(31), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SNOOP_SET_SNOOP_SET_INFO_DP_OVERRIDE_OVERRIDE_VAL_ID,
    "dp_val",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.dp_override.override_val:\r\n"
    "  The value with which the requested field is overridden.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports snoop_set snoop_cmd_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 size_bytes 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(31), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SNOOP_SET_SNOOP_SET_INFO_DP_OVERRIDE_ENABLE_ID,
    "dp_override",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.dp_override.enable:\r\n"
    "  If TRUE, the requested field is overridden by the indicated value.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports snoop_set snoop_cmd_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 size_bytes 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(31), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SNOOP_SET_SNOOP_SET_INFO_DESTINATION_ID_ID,
    "dest_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.destination.id:\r\n"
    "  According to destination type, one of the following:Queue id (Unicast flow).\r\n"
    "  Range: 0 - 32K-1Multicast id (System Multicast). Range: 0 - 16K-1System\r\n"
    "  Physical Port. Range: 0 - 4K-1LAG id. Range: 0 -255.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports snoop_set snoop_cmd_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 size_bytes 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(31), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SNOOP_SET_SNOOP_SET_INFO_DESTINATION_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&TMD_DEST_TYPE_rule[0],
    (sizeof(TMD_DEST_TYPE_rule) / sizeof(TMD_DEST_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.destination.type:\r\n"
    "  Queue, multicast group or system port / LAG id (Unicast flow, System\r\n"
    "  multicast, Unicast direct accordingly).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports snoop_set snoop_cmd_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 size_bytes 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(31), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SNOOP_SET_SNOOP_SET_INFO_SIZE_BYTES_ID,
    "size_bytes",
    (PARAM_VAL_RULES *)&TMD_PORTS_SNOOP_SIZE_rule[0],
    (sizeof(TMD_PORTS_SNOOP_SIZE_rule) / sizeof(TMD_PORTS_SNOOP_SIZE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.size_bytes:\r\n"
    "  Size in bytes, or all packet, to snoop.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports snoop_set snoop_cmd_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 size_bytes 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(31), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SNOOP_SET_SNOOP_SET_INFO_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable:\r\n"
    "  Enable/disable snooping for the specified port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports snoop_set snoop_cmd_ndx 0 override_val 0 enable 0\r\n"
    "  override_val 0 enable 0 id 0 type 0 size_bytes 0 enable 0\r\n"
#endif
    "",
    "",
    {BIT(31), 0, 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SNOOP_GET_SNOOP_GET_ID,
    "snoop_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure snooping function for the specified port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports snoop_get snoop_cmd_ndx 0\r\n"
#endif
    "",
    "",
    {0, BIT(0), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SNOOP_GET_SNOOP_GET_SNOOP_CMD_NDX_ID,
    "snoop_cmd_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  snoop_cmd_ndx:\r\n"
    "  One of the 15 snoop commands. Note that when the packet is received with\r\n"
    "  snoop command 0, it means that the packet is not to be snooped, Therefore\r\n"
    "  there is no meaning to set snoop_cmd_ndx 0.Range: 1-15.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports snoop_get snoop_cmd_ndx 0\r\n"
#endif
    "",
    "",
    {0, BIT(0), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* UI_UNDEFED_TEMP */
  {
    PARAM_TMD_PORTS_ITMH_EXTENSION_SET_ITMH_EXTENSION_SET_ID,
    "itmh_extension_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets whether a port has an extension added to its ITMH or not.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports itmh_extension_set port_ndx 0 ext_en 0\r\n"
#endif
    "",
    "",
    {0, BIT(1), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_ITMH_EXTENSION_SET_ITMH_EXTENSION_SET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Local port index. Port Index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports itmh_extension_set port_ndx 0 ext_en 0\r\n"
#endif
    "",
    "",
    {0, BIT(1), 0, 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_ITMH_EXTENSION_SET_ITMH_EXTENSION_SET_EXT_EN_ID,
    "ext_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ext_en:\r\n"
    "  Extension Enable/Disable.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports itmh_extension_set port_ndx 0 ext_en 0\r\n"
#endif
    "",
    "",
    {0, BIT(1), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_ITMH_EXTENSION_GET_ITMH_EXTENSION_GET_ID,
    "itmh_extension_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets whether a port has an extension added to its ITMH or not.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports itmh_extension_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, BIT(2), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_ITMH_EXTENSION_GET_ITMH_EXTENSION_GET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Local port index. Port Index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports itmh_extension_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, BIT(2), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SHAPING_HEADER_SET_SHAPING_HEADER_SET_ID,
    "shaping_header_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set static ingress shaping configuration per FAP port. A packet is\r\n"
    "  ingress-shaped if the queue id in the IS-ITMH is within the ingress-shaping\r\n"
    "  range (set by the API: 'tmd_itm_ingress_shape_set'). The IS-ITMH is\r\n"
    "  stripped of the packet and the ITMH is expected to follow.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports shaping_header_set port_ndx 0 queue_id 0 enable 0\r\n"
#endif
    "",
    "",
    {0, BIT(3), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SHAPING_HEADER_SET_SHAPING_HEADER_SET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Local port index. Port Index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports shaping_header_set port_ndx 0 queue_id 0 enable 0\r\n"
#endif
    "",
    "",
    {0, BIT(3), 0, 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SHAPING_HEADER_SET_SHAPING_HEADER_SET_INFO_QUEUE_ID_ID,
    "queue_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.queue_id:\r\n"
    "  The index of the destination ingress shaping queue. Range: 0 - 32K-1. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports shaping_header_set port_ndx 0 queue_id 0 enable 0\r\n"
#endif
    "",
    "",
    {0, BIT(3), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SHAPING_HEADER_SET_SHAPING_HEADER_SET_INFO_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable:\r\n"
    "  enable/disable ingress shaping. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports shaping_header_set port_ndx 0 queue_id 0 enable 0\r\n"
#endif
    "",
    "",
    {0, BIT(3), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SHAPING_HEADER_GET_SHAPING_HEADER_GET_ID,
    "shaping_header_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set static ingress shaping configuration per FAP port. A packet is\r\n"
    "  ingress-shaped if the queue id in the IS-ITMH is within the ingress-shaping\r\n"
    "  range (set by the API: 'tmd_itm_ingress_shape_set'). The IS-ITMH is\r\n"
    "  stripped of the packet and the ITMH is expected to follow.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports shaping_header_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, BIT(4), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_SHAPING_HEADER_GET_SHAPING_HEADER_GET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Local port index. Port Index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports shaping_header_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, BIT(4), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_ID,
    "forwarding_header_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set a raw port with the ITMH to be added to the incoming packets.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Local port index. Port Index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_INFO_EXTENSION_SRC_PORT_ID_ID,
    "src_port_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.src_port.id:\r\n"
    "  According to the System-Port type, one of the following:LAG id. Range: 0 -\r\n"
    "  255.System Physical Port. Range: 0 - 4K-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_INFO_EXTENSION_SRC_PORT_TYPE_ID,
    "src_type",
    (PARAM_VAL_RULES *)&TMD_DEST_SYS_PORT_TYPE_rule[0],
    (sizeof(TMD_DEST_SYS_PORT_TYPE_rule) / sizeof(TMD_DEST_SYS_PORT_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.src_port.type:\r\n"
    "  LAG id or system-physical-port id.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_INFO_EXTENSION_IS_SRC_SYS_PORT_ID,
    "is_src_sys_port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.is_src_sys_port:\r\n"
    "  This field indicated whether the 'src_port' value is a system-level port\r\n"
    "  (system-port - [0..4095]), or is the value of the local source port (IFP -\r\n"
    "  [0..79]).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_INFO_EXTENSION_ENABLE_ID,
    "extension_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.enable:\r\n"
    "  Indicates whether the extension exists. If this value is FALSE the next\r\n"
    "  fields in this structure are meaningless.If TRUE, the purpose of this\r\n"
    "  extension is to override the value that is placed in the FTMH, thus allowing\r\n"
    "  a packet to impersonate as entering from any sys-port when processed at the\r\n"
    "  egress.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_INFO_BASE_DESTINATION_ID_ID,
    "dest_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.destination.id:\r\n"
    "  According to destination type, one of the following:Queue id (Unicast flow).\r\n"
    "  Range: 0 - 32K-1Multicast id (System Multicast). Range: 0 - 16K-1System\r\n"
    "  Physical Port. Range: 0 - 4K-1LAG id. Range: 0 -255.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_INFO_BASE_DESTINATION_TYPE_ID,
    "dest_type",
    (PARAM_VAL_RULES *)&TMD_DEST_TYPE_rule[0],
    (sizeof(TMD_DEST_TYPE_rule) / sizeof(TMD_DEST_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.destination.type:\r\n"
    "  Queue, multicast group or system port / LAG id (Unicast flow, System\r\n"
    "  multicast, Unicast direct accordingly).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_INFO_BASE_DP_ID,
    "dp",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.dp:\r\n"
    "  Drop Precedence.Range: 0 - 3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_INFO_BASE_TR_CLS_ID,
    "tr_cls",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.tr_cls:\r\n"
    "  Traffic class.Range: 0 - 7.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_INFO_BASE_EXCLUDE_SRC_ID,
    "exclude_src",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.exclude_src:\r\n"
    "  Indicates whether to filter the packet at the egress when it arrives with\r\n"
    "  source system-port-id the same as destination system-port-id\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_INFO_BASE_SNOOP_CMD_NDX_ID,
    "snoop_cmd_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.snoop_cmd_ndx:\r\n"
    "  There are 15 types of 'Snoop Commands'. This field indicates which command\r\n"
    "  should be used for this packet (snoop_cmd_ndx = 0, means snoop\r\n"
    "  disabled).Range: 0- 15.(* Optionally only 7 snoop commands are available -\r\n"
    "  TODO_P)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_INFO_BASE_OUT_MIRROR_EN_ID,
    "out_mirror_dis",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.out_mirror_dis:\r\n"
    "  Indicates whether port outbound mirroring is enabled /disabled.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_SET_FORWARDING_HEADER_SET_INFO_BASE_PP_HEADER_PRESENT_ID,
    "pp_header_present",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.pp_header_present:\r\n"
    "  Indicates whether a packet-processor-header is above.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_set port_ndx 0 id 0 type 0 is_src_sys_port\r\n"
    "  0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0 snoop_cmd_ndx 0\r\n"
    "  out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, BIT(5), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_GET_FORWARDING_HEADER_GET_ID,
    "forwarding_header_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set a raw port with the ITMH to be added to the incoming packets.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, BIT(6), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FORWARDING_HEADER_GET_FORWARDING_HEADER_GET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Local port index. Port Index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports forwarding_header_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, BIT(6), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_STAG_FIELDS_SET_STAT_TAG_FIELD_SET_ID,
    "stag_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  The Statistics-Tag is a configurable collection of fields and various packet\r\n"
    "  attributes copied from the packet header. For each field, there is a per\r\n"
    "  Incoming FAP Port selector, indicating whether to add the field to the tag or\r\n"
    "  to omit it.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports stat_tag_field_set port_ndx 0 data_type 0 dp 0 tr_cls 0 ifp 0\r\n"
    "  cid 0\r\n"
#endif
    "",
    "",
    {0, BIT(7), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_STAG_FIELDS_SET_STAT_TAG_FIELD_SET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Local port index. Port Index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports stat_tag_field_set port_ndx 0 data_type 0 dp 0 tr_cls 0 ifp 0\r\n"
    "  cid 0\r\n"
#endif
    "",
    "",
    {0, BIT(7), 0, 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_STAG_FIELDS_SET_STAT_TAG_FIELD_SET_INFO_DATA_TYPE_ID,
    "dest_type",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.data_type:\r\n"
    "  Data type. Unicast/ Multicast/ Broadcast. The indocation is added to the\r\n"
    "  packet in following form: (UC is 01; BC is 10; MC is 11)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports stat_tag_field_set port_ndx 0 data_type 0 dp 0 tr_cls 0 ifp 0\r\n"
    "  cid 0\r\n"
#endif
    "",
    "",
    {0, BIT(7), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_STAG_FIELDS_SET_STAT_TAG_FIELD_SET_INFO_DP_ID,
    "dp",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.dp:\r\n"
    "  Drop precedence.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports stat_tag_field_set port_ndx 0 data_type 0 dp 0 tr_cls 0 ifp 0\r\n"
    "  cid 0\r\n"
#endif
    "",
    "",
    {0, BIT(7), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_STAG_FIELDS_SET_STAT_TAG_FIELD_SET_INFO_TR_CLS_ID,
    "tr_cls",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.tr_cls:\r\n"
    "  Traffic class.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports stat_tag_field_set port_ndx 0 data_type 0 dp 0 tr_cls 0 ifp 0\r\n"
    "  cid 0\r\n"
#endif
    "",
    "",
    {0, BIT(7), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_STAG_FIELDS_SET_STAT_TAG_FIELD_SET_INFO_IFP_ID,
    "ifp",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ifp:\r\n"
    "  Incoming FAP Port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports stat_tag_field_set port_ndx 0 data_type 0 dp 0 tr_cls 0 ifp 0\r\n"
    "  cid 0\r\n"
#endif
    "",
    "",
    {0, BIT(7), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_STAG_FIELDS_SET_STAT_TAG_FIELD_SET_INFO_CID_ID,
    "cid",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.cid:\r\n"
    "  Customer Service ID (valid only for Ethernet type ports).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports stat_tag_field_set port_ndx 0 data_type 0 dp 0 tr_cls 0 ifp 0\r\n"
    "  cid 0\r\n"
#endif
    "",
    "",
    {0, BIT(7), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_STAG_FIELDS_GET_STAT_TAG_FIELD_GET_ID,
    "stag_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  The Statistics-Tag is a configurable collection of fields and various packet\r\n"
    "  attributes copied from the packet header. For each field, there is a per\r\n"
    "  Incoming FAP Port selector, indicating whether to add the field to the tag or\r\n"
    "  to omit it.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports stat_tag_field_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, BIT(8), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_STAG_FIELDS_GET_STAT_TAG_FIELD_GET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Local port index. Port Index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports stat_tag_field_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, BIT(8), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FTMH_EXTENSION_SET_FTMH_EXTENSION_SET_ID,
    "ftmh_extension_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets a system wide configuration of the ftmh. The FTMH has 3\r\n"
    "  options for the FTMH-extension: always allow, never allow, allow only when\r\n"
    "  the packet is multicast.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports ftmh_extension_set ext_option 0\r\n"
#endif
    "",
    "",
    {0, BIT(9), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FTMH_EXTENSION_SET_FTMH_EXTENSION_SET_EXT_OPTION_ID,
    "ext_option",
    (PARAM_VAL_RULES *)&TMD_PORTS_FTMH_EXT_OUTLIF_rule[0],
    (sizeof(TMD_PORTS_FTMH_EXT_OUTLIF_rule) / sizeof(TMD_PORTS_FTMH_EXT_OUTLIF_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ext_option:\r\n"
    "  There 3 options for the FTMH extension.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports ftmh_extension_set ext_option 0\r\n"
#endif
    "",
    "",
    {0, BIT(9), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_FTMH_EXTENSION_GET_FTMH_EXTENSION_GET_ID,
    "ftmh_extension_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets a system wide configuration of the ftmh. The FTMH has 3\r\n"
    "  options for the FTMH-extension: always allow, never allow, allow only when\r\n"
    "  the packet is multicast.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports ftmh_extension_get\r\n"
#endif
    "",
    "",
    {0, BIT(10), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_OTMH_EXTENSION_SET_OTMH_EXTENSION_SET_ID,
    "otmh_extension_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets what extensions are to be added to the OTMH per port. The\r\n"
    "  OTMH has 3 optional extensions: Outlif (always allow/ never allow/ allow only\r\n"
    "  when the packet is multicast.) Source Sys-Port and Destination Sys-Port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports otmh_extension_set port_ndx 0 dest_ext_en 0 src_ext_en 0\r\n"
    "  outlif_ext_en 0\r\n"
#endif
    "",
    "",
    {0, BIT(11), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_OTMH_EXTENSION_SET_OTMH_EXTENSION_SET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Local port index. Port Index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports otmh_extension_set port_ndx 0 dest_ext_en 0 src_ext_en 0\r\n"
    "  outlif_ext_en 0\r\n"
#endif
    "",
    "",
    {0, BIT(11), 0, 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_OTMH_EXTENSION_SET_OTMH_EXTENSION_SET_INFO_DEST_EXT_EN_ID,
    "dest_ext_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.dest_ext_en:\r\n"
    "  Destination Sys-Port enable.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports otmh_extension_set port_ndx 0 dest_ext_en 0 src_ext_en 0\r\n"
    "  outlif_ext_en 0\r\n"
#endif
    "",
    "",
    {0, BIT(11), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_OTMH_EXTENSION_SET_OTMH_EXTENSION_SET_INFO_SRC_EXT_EN_ID,
    "src_ext_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.src_ext_en:\r\n"
    "  Source Sys-Port enable. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports otmh_extension_set port_ndx 0 dest_ext_en 0 src_ext_en 0\r\n"
    "  outlif_ext_en 0\r\n"
#endif
    "",
    "",
    {0, BIT(11), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_OTMH_EXTENSION_SET_OTMH_EXTENSION_SET_INFO_OUTLIF_EXT_EN_ID,
    "outlif_ext_en",
    (PARAM_VAL_RULES *)&TMD_PORTS_FTMH_EXT_OUTLIF_rule[0],
    (sizeof(TMD_PORTS_FTMH_EXT_OUTLIF_rule) / sizeof(TMD_PORTS_FTMH_EXT_OUTLIF_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.outlif_ext_en:\r\n"
    "  The OTMH has 3 optional extensions: Outlif (always allow/ never allow/ allow\r\n"
    "  only when the packet is multicast.)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports otmh_extension_set port_ndx 0 dest_ext_en 0 src_ext_en 0\r\n"
    "  outlif_ext_en 0\r\n"
#endif
    "",
    "",
    {0, BIT(11), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_OTMH_EXTENSION_GET_OTMH_EXTENSION_GET_ID,
    "otmh_extension_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets what extensions are to be added to the OTMH per port. The\r\n"
    "  OTMH has 3 optional extensions: Outlif (always allow/ never allow/ allow only\r\n"
    "  when the packet is multicast.) Source Sys-Port and Destination Sys-Port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports otmh_extension_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, BIT(12), 0, 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORTS_OTMH_EXTENSION_GET_OTMH_EXTENSION_GET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Local port index. Port Index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports otmh_extension_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, BIT(12), 0, 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_SET_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_SET_ID,
    "egr_hdr_credit_discount_type_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Per discount type, set the available egress credit compensation value to\r\n"
    "  adjust the credit rate for the various headers: PP (if present), FTMH,\r\n"
    "  DRAM-CRC, Ethernet-IPG, NIF-CRC.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_type_set port_hdr_type_ndx 0\r\n"
    "  cr_discnt_type_ndx 0 mc_credit_discount 0 uc_credit_discount 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_SET_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_SET_PORT_HDR_TYPE_NDX_ID,
    "port_hdr_type_ndx",
    (PARAM_VAL_RULES *)&TMD_PORT_HEADER_TYPE_rule[0],
    (sizeof(TMD_PORT_HEADER_TYPE_rule) / sizeof(TMD_PORT_HEADER_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_hdr_type_ndx:\r\n"
    "  The port header type for which the credit discount is configured (TM/ETH/RAW).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_type_set port_hdr_type_ndx 0\r\n"
    "  cr_discnt_type_ndx 0 mc_credit_discount 0 uc_credit_discount 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_SET_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_SET_CR_DISCNT_TYPE_NDX_ID,
    "cr_discnt_type_ndx",
    (PARAM_VAL_RULES *)&TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_rule[0],
    (sizeof(TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_rule) / sizeof(TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cr_discnt_type_ndx:\r\n"
    "  The preset (A/B) that is configured.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_type_set port_hdr_type_ndx 0\r\n"
    "  cr_discnt_type_ndx 0 mc_credit_discount 0 uc_credit_discount 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_SET_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_SET_INFO_MC_CREDIT_DISCOUNT_ID,
    "mc_credit_discount",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.mc_credit_discount:\r\n"
    "  Credit discount (AKA Header Compensation) for multicast packets, in Bytes.\r\n"
    "  Range: -32 - 32.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_type_set port_hdr_type_ndx 0\r\n"
    "  cr_discnt_type_ndx 0 mc_credit_discount 0 uc_credit_discount 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_SET_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_SET_INFO_UC_CREDIT_DISCOUNT_ID,
    "uc_credit_discount",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.uc_credit_discount:\r\n"
    "  Credit discount (AKA Header Compensation) for unicast packets, in Bytes.\r\n"
    "  Range: -32 - 32. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_type_set port_hdr_type_ndx 0\r\n"
    "  cr_discnt_type_ndx 0 mc_credit_discount 0 uc_credit_discount 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_GET_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_GET_ID,
    "egr_hdr_credit_discount_type_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Per discount type, set the available egress credit compensation value to\r\n"
    "  adjust the credit rate for the various headers: PP (if present), FTMH,\r\n"
    "  DRAM-CRC, Ethernet-IPG, NIF-CRC.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_type_get port_hdr_type_ndx 0\r\n"
    "  cr_discnt_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(9)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_GET_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_GET_PORT_HDR_TYPE_NDX_ID,
    "port_hdr_type_ndx",
    (PARAM_VAL_RULES *)&TMD_PORT_HEADER_TYPE_rule[0],
    (sizeof(TMD_PORT_HEADER_TYPE_rule) / sizeof(TMD_PORT_HEADER_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_hdr_type_ndx:\r\n"
    "  The port header type for which the credit discount is configured (TM/ETH/RAW).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_type_get port_hdr_type_ndx 0\r\n"
    "  cr_discnt_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_GET_PORT_EGR_HDR_CREDIT_DISCOUNT_TYPE_GET_CR_DISCNT_TYPE_NDX_ID,
    "cr_discnt_type_ndx",
    (PARAM_VAL_RULES *)&TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_rule[0],
    (sizeof(TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_rule) / sizeof(TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cr_discnt_type_ndx:\r\n"
    "  The preset (A/B) that is configured.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_type_get port_hdr_type_ndx 0\r\n"
    "  cr_discnt_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_SELECT_SET_PORT_EGR_HDR_CREDIT_DISCOUNT_SELECT_SET_ID,
    "egr_hdr_credit_discount_select_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Select from the available egress credit compensation values to adjust the\r\n"
    "  credit rate for the various headers: PP (if present), FTMH, DRAM-CRC,\r\n"
    "  Ethernet-IPG, NIF-CRC. This API selects the discount type. The values per\r\n"
    "  port header type and discount type are configured using\r\n"
    "  tmd_port_egr_hdr_credit_discount_type_set API. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_select_set port_ndx 0\r\n"
    "  cr_discnt_type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_SELECT_SET_PORT_EGR_HDR_CREDIT_DISCOUNT_SELECT_SET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  The index of the port to configure. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_select_set port_ndx 0\r\n"
    "  cr_discnt_type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_SELECT_SET_PORT_EGR_HDR_CREDIT_DISCOUNT_SELECT_SET_CR_DISCNT_TYPE_ID,
    "cr_discnt_type",
    (PARAM_VAL_RULES *)&TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_rule[0],
    (sizeof(TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_rule) / sizeof(TMD_PORT_EGR_HDR_CR_DISCOUNT_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cr_discnt_type:\r\n"
    "  The preset (A/B) that is selected. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_select_set port_ndx 0\r\n"
    "  cr_discnt_type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_SELECT_GET_PORT_EGR_HDR_CREDIT_DISCOUNT_SELECT_GET_ID,
    "egr_hdr_credit_discount_select_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Select from the available egress credit compensation values to adjust the\r\n"
    "  credit rate for the various headers: PP (if present), FTMH, DRAM-CRC,\r\n"
    "  Ethernet-IPG, NIF-CRC. This API selects the discount type. The values per\r\n"
    "  port header type and discount type are configured using\r\n"
    "  tmd_port_egr_hdr_credit_discount_type_set API. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_select_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(11)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PORT_EGR_HDR_CREDIT_DISCOUNT_SELECT_GET_PORT_EGR_HDR_CREDIT_DISCOUNT_SELECT_GET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  The index of the port to configure. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ports port_egr_hdr_credit_discount_select_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(11)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_PORTS_ID,
    "ports",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12), BIT(10)|BIT(11)|BIT(12), 0, 0, 0, 0, 0, 0, 0, 0, BIT(8)|BIT(9)|BIT(10)|BIT(11), BIT(7)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } ports*/
#ifdef UI_INGRESS_PACKET_QUEUING/* { ingress_packet_queuing*/
  {
    PARAM_TMD_IPQ_EXPLICIT_MAPPING_MODE_INFO_SET_IPQ_EXPLICIT_MAPPING_MODE_INFO_SET_ID,
    "explicit_mapping_mode_info_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the Explicit Flow Unicast packets mapping to queue.\r\n"
    "  Doesn't affect packets that arrive with destination_id in the header.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_explicit_mapping_mode_info_set\r\n"
    "  queue_id_add_not_decrement 0 base_queue_id 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(16), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_EXPLICIT_MAPPING_MODE_INFO_SET_IPQ_EXPLICIT_MAPPING_MODE_INFO_SET_INFO_QUEUE_ID_ADD_NOT_DECREMENT_ID,
    "queue_id_add_not_decrement",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.queue_id_add_not_decrement:\r\n"
    "  TRUE - queue is 'base_queue_id' + Packet's explicit queue ID (add).FALSE -\r\n"
    "  queue is 'base_queue_id' - Packet's explicit queue ID (substract).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_explicit_mapping_mode_info_set\r\n"
    "  queue_id_add_not_decrement 0 base_queue_id 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(16), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_EXPLICIT_MAPPING_MODE_INFO_SET_IPQ_EXPLICIT_MAPPING_MODE_INFO_SET_INFO_BASE_QUEUE_ID_ID,
    "base_queue_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base_queue_id:\r\n"
    "  Explicit queue ID packet Base queue number. Range 0 to nof_queues.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_explicit_mapping_mode_info_set\r\n"
    "  queue_id_add_not_decrement 0 base_queue_id 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(16), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_EXPLICIT_MAPPING_MODE_INFO_GET_IPQ_EXPLICIT_MAPPING_MODE_INFO_GET_ID,
    "explicit_mapping_mode_info_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the Explicit Flow Unicast packets mapping to queue.\r\n"
    "  Doesn't affect packets that arrive with destination_id in the header.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_explicit_mapping_mode_info_get\r\n"
#endif
    "",
    "",
    {0, 0, BIT(17), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_TRAFFIC_CLASS_MAP_SET_IPQ_TRAFFIC_CLASS_MAP_SET_ID,
    "traffic_class_map_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Maps the embedded traffic class in the packet header to a logical traffic\r\n"
    "  class. This logical traffic class will be further used for traffic\r\n"
    "  management.Note that a class that is mapped to class '0' is equivalent to\r\n"
    "  disabling adding the class.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_traffic_class_map_set tr_cls_ndx 0\r\n"
    "  new_class 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(18), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_TRAFFIC_CLASS_MAP_SET_IPQ_TRAFFIC_CLASS_MAP_SET_TR_CLS_NDX_ID,
    "tr_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  tr_cls_ndx:\r\n"
    "  the traffic class index, for which to map a new class.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_traffic_class_map_set tr_cls_ndx 0\r\n"
    "  new_class 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(18), 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_TRAFFIC_CLASS_MAP_SET_IPQ_TRAFFIC_CLASS_MAP_SET_NEW_CLASS_ID,
    "new_class",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  new_class:\r\n"
    "  The new class that is mapped to the tr_cls_ndx. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_traffic_class_map_set tr_cls_ndx 0\r\n"
    "  new_class 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(18), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_TRAFFIC_CLASS_MAP_GET_IPQ_TRAFFIC_CLASS_MAP_GET_ID,
    "traffic_class_map_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Maps the embedded traffic class in the packet header to a logical traffic\r\n"
    "  class. This logical traffic class will be further used for traffic\r\n"
    "  management.Note that a class that is mapped to class '0' is equivalent to\r\n"
    "  disabling adding the class.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_traffic_class_map_get tr_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(19), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_TRAFFIC_CLASS_MAP_GET_IPQ_TRAFFIC_CLASS_MAP_GET_TR_CLS_NDX_ID,
    "tr_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  tr_cls_ndx:\r\n"
    "  the traffic class index, for which to map a new class.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_traffic_class_map_get tr_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(19), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_ID,
    "destination_id_packets_base_queue_id_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the destination-id packets mapping to queue information.\r\n"
    "  Doesn't affect packets that arrive with explicit queue-id in the header.\r\n"
    "  Each destination ID is mapped to a base_queue, when the packet is\r\n"
    "  stored in queue: base_queue + class \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_destination_id_packets_base_queue_id_set\r\n"
    "  dest_ndx 0 valid 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(20), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_DEST_NDX_ID,
    "dest_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  dest_ndx:\r\n"
    "  The outlif from the packet System-Port-Destination ID.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_destination_id_packets_base_queue_id_set\r\n"
    "  dest_ndx 0 valid 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(20), 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_VALID_ID,
    "valid",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  valid:\r\n"
    "  If set the specific queue is valid, Otherwise the queue is set to be invalid\r\n"
    "  and packets are not sent to it.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_destination_id_packets_base_queue_id_set\r\n"
    "  dest_ndx 0 valid 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(20), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_SET_BASE_QUEUE_ID,
    "base_queue",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  base_queue:\r\n"
    "  Packet is stored in queue: base_queue + class.\r\n"
    "  Valid values: 0 - 32K.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_destination_id_packets_base_queue_id_set\r\n"
    "  dest_ndx 0 valid 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(20), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_GET_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_GET_ID,
    "destination_id_packets_base_queue_id_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the destination-id packets mapping to queue information.\r\n"
    "  Doesn't affect packets that arrive with explicit queue-id in the header.\r\n"
    "  Each destination ID is mapped to a base_queue, when the packet is\r\n"
    "  stored in queue: base_queue + class \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_destination_id_packets_base_queue_id_get\r\n"
    "  dest_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(21), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_GET_IPQ_DESTINATION_ID_PACKETS_BASE_QUEUE_ID_GET_DEST_NDX_ID,
    "dest_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  dest_ndx:\r\n"
    "  The outlif from the packet System-Port-Destination ID.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_destination_id_packets_base_queue_id_get\r\n"
    "  dest_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(21), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUEUE_INTERDIGITATED_MODE_SET_IPQ_QUEUE_INTERDIGITATED_MODE_SET_ID,
    "queue_interdigitated_mode_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Map 1K of queues (256 quartets) to be in interdigitated mode or\r\n"
    "  not. Queue Quartets that configured to be in interdigitated mode\r\n"
    "  should only be configured with interdigitated flow quartets, and\r\n"
    "  the other-way around.\r\n"
    "  When interdigitated mode is set, all queue quartets range are\r\n"
    "  reset using tmd_ipq_quartet_reset(), in order to prevent\r\n"
    "  illegal interdigitated/composite state.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_queue_interdigitated_mode_set\r\n"
    "  k_queue_ndx 0 is_interdigitated 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(22), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUEUE_INTERDIGITATED_MODE_SET_IPQ_QUEUE_INTERDIGITATED_MODE_SET_K_QUEUE_NDX_ID,
    "k_queue_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  k_queue_ndx:\r\n"
    "  The K queues to configure are\r\n"
    "  (k_queue_ndx * 1024) - (k_queue_ndx * 1024 + 1023)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_queue_interdigitated_mode_set\r\n"
    "  k_queue_ndx 0 is_interdigitated 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(22), 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUEUE_INTERDIGITATED_MODE_SET_IPQ_QUEUE_INTERDIGITATED_MODE_SET_IS_INTERDIGITATED_ID,
    "is_interdigitated",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  is_interdigitated:\r\n"
    "  If TRUE, the K queues which k_queue_index points to will be set\r\n"
    "  to interdigitated mode.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_queue_interdigitated_mode_set\r\n"
    "  k_queue_ndx 0 is_interdigitated 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(22), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUEUE_INTERDIGITATED_MODE_GET_IPQ_QUEUE_INTERDIGITATED_MODE_GET_ID,
    "queue_interdigitated_mode_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Map 1K of queues (256 quartets) to be in interdigitated mode or\r\n"
    "  not. Queue Quartets that configured to be in interdigitated mode\r\n"
    "  should only be configured with interdigitated flow quartets, and\r\n"
    "  the other-way around.\r\n"
    "  When interdigitated mode is set, all queue quartets range are\r\n"
    "  reset using tmd_ipq_quartet_reset(), in order to prevent\r\n"
    "  illegal interdigitated/composite state.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_queue_interdigitated_mode_get\r\n"
    "  k_queue_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(23), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUEUE_INTERDIGITATED_MODE_GET_IPQ_QUEUE_INTERDIGITATED_MODE_GET_K_QUEUE_NDX_ID,
    "k_queue_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  k_queue_ndx:\r\n"
    "  The K queues to configure are\r\n"
    "  (k_queue_ndx * 1024) - (k_queue_ndx * 1024 + 1023)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_queue_interdigitated_mode_get\r\n"
    "  k_queue_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(23), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUEUE_TO_FLOW_MAPPING_SET_IPQ_QUEUE_TO_FLOW_MAPPING_SET_ID,
    "queue_to_flow_mapping_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Map a queues-quartet to system port and flow-quartet(s).\r\n"
    "  This function should only be called after calling the\r\n"
    "  tmd_ipq_queue_intedigitated_mode_set()\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_queue_to_flow_mapping_set\r\n"
    "  queue_quartet_ndx 0 system_physical_port 0 is_composite 0 flow_quartet_index 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(24), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUEUE_TO_FLOW_MAPPING_SET_IPQ_QUEUE_TO_FLOW_MAPPING_SET_QUEUE_QUARTET_NDX_ID,
    "queue_quartet_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_quartet_ndx:\r\n"
    "  The index of the quartet to be configured, the range of queues in the quartet\r\n"
    "  is:\r\n"
    "  (queue_quartet_ndx * 4) to (queue_quartet_ndx * 4 + 3)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_queue_to_flow_mapping_set\r\n"
    "  queue_quartet_ndx 0 system_physical_port 0 is_composite 0 flow_quartet_index 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(24), 0},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUEUE_TO_FLOW_MAPPING_SET_IPQ_QUEUE_TO_FLOW_MAPPING_SET_INFO_SYSTEM_PHYSICAL_PORT_ID,
    "system_physical_port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.system_physical_port:\r\n"
    "  The system physical port to which the queue quartet is destined. Refer to\r\n"
    "  function tmd_ipq_system_physical_port_set for more info.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_queue_to_flow_mapping_set\r\n"
    "  queue_quartet_ndx 0 system_physical_port 0 is_composite 0 flow_quartet_index 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(24), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUEUE_TO_FLOW_MAPPING_SET_IPQ_QUEUE_TO_FLOW_MAPPING_SET_INFO_IS_COMPOSITE_ID,
    "is_composite",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_composite:\r\n"
    "  When TRUE, the flow quartets that this queue quartet points to, might use\r\n"
    "  composite flows.The user might configure the flows to use only one sub-flow,\r\n"
    "  but the second sub-flow is still reserved as far as the flow-queues mapping\r\n"
    "  is concerned.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_queue_to_flow_mapping_set\r\n"
    "  queue_quartet_ndx 0 system_physical_port 0 is_composite 0 flow_quartet_index 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(24), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUEUE_TO_FLOW_MAPPING_SET_IPQ_QUEUE_TO_FLOW_MAPPING_SET_INFO_FLOW_QUARTET_INDEX_ID,
    "flow_quartet_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.flow_quartet_index:\r\n"
    "  The index of the first flow quartet to which the queue quatet points. A\r\n"
    "  single queue quartet might point to 1 quartets of flows, 2 quartets of flows\r\n"
    "  or 4 quartets of flow, depending on the 'Interdigitated' and 'Composite'\r\n"
    "  modes.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_queue_to_flow_mapping_set\r\n"
    "  queue_quartet_ndx 0 system_physical_port 0 is_composite 0 flow_quartet_index 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(24), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUEUE_TO_FLOW_MAPPING_GET_IPQ_QUEUE_TO_FLOW_MAPPING_GET_ID,
    "queue_to_flow_mapping_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Map a queues-quartet to system port and flow-quartet(s).\r\n"
    "  This function should only be called after calling the\r\n"
    "  tmd_ipq_queue_intedigitated_mode_set()\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_queue_to_flow_mapping_get\r\n"
    "  queue_quartet_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(25), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUEUE_TO_FLOW_MAPPING_GET_IPQ_QUEUE_TO_FLOW_MAPPING_GET_QUEUE_QUARTET_NDX_ID,
    "queue_quartet_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_quartet_ndx:\r\n"
    "  The index of the quartet to be configured, the range of queues in the quartet\r\n"
    "  is:\r\n"
    "  (queue_quartet_ndx * 4) to (queue_quartet_ndx * 4 + 3)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_queue_to_flow_mapping_get\r\n"
    "  queue_quartet_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(25), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  { 
    PARAM_TMD_IPQ_QUEUE_QRTT_UNMAP_IPQ_QUEUE_QRTT_UNMAP_ID, 
    "queue_qrtt_unmap", 
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0], 
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Unmap a queues-quartet, by mapping it to invalid destination.\r\n"
    "  Also, flush all the queues in the quartet.\r\n"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\r\n" 
    "  tmd_api ingress_packet_queuing ipq_queue_qrtt_unmap queue_quartet_ndx 0\r\n"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(21)}, 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_IPQ_QUEUE_QRTT_UNMAP_IPQ_QUEUE_QRTT_UNMAP_QUEUE_QUARTET_NDX_ID, 
    "queue_quartet_ndx", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  queue_quartet_ndx:\r\n"
    "  The index of the queue quartet, the range of queues in the quartet is:\r\n"
    "  (queue_quartet_ndx * 4) to (queue_quartet_ndx * 4 + 3)\r\n"
    "  Range: 0 - 8K-1. \r\n"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\r\n" 
    "  tmd_api ingress_packet_queuing ipq_queue_qrtt_unmap queue_quartet_ndx 0\r\n"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(21)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  {
    PARAM_TMD_IPQ_QUARTET_RESET_IPQ_QUARTET_RESET_ID,
    "quartet_reset",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Resets a quartet to default values.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_quartet_reset queue_quartet_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(26), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IPQ_QUARTET_RESET_IPQ_QUARTET_RESET_QUEUE_QUARTET_NDX_ID,
    "queue_quartet_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_quartet_ndx:\r\n"
    "  The 4 queues currently configured are:\r\n"
    "  (queue_quartet_ndx * 4) - (queue_quartet_ndx * 4 + 3)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_packet_queuing ipq_quartet_reset queue_quartet_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(26), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#ifdef UI_UNDEFED_TEMP
  {
    PARAM_TMD_SEARCH_ALL_NON_EMPTY_QUEUES_ID,
    "non_empty_queues_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, BIT(15)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SEARCH_ALL_NON_EMPTY_QUEUES_FLOW_ALSO_ID,
    "flow_also",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, BIT(15)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* UI_UNDEFED_TEMP */
  {
    PARAM_TMD_API_INGRESS_PACKET_QUEUING_ID,
    "ingress_packet_queuing",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26), 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(21)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } ingress_packet_queuing*/
#ifdef UI_INGRESS_TRAFFIC_MGMT/* { ingress_traffic_mgmt*/
  {
    PARAM_TMD_ITM_DRAM_BUFFS_GET_ITM_DRAM_BUFFS_GET_ID,
    "dram_buffs_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  DRAM buffers are used to store packets at the ingress.\r\n"
    "  This is a resource shared between Unicast, Full-Multicast and Mini-Multicast\r\n"
    "  packets.\r\n"
    "  There are 2M buffers available.\r\n"
    "  This function sets the buffers share dedicated for Unicast, Full-Multicast\r\n"
    "  and Mini-Multicast packets.\r\n"
    "  This function also gets the size of a single buffer.\r\n"
    "  See remarks below for limitations. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_dram_buffs_get mini_mc_nof_buffs 0\r\n"
    "  full_mc_nof_buffs 0 uc_nof_buffs 0 dbuff_size 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(27), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_ID,
    "glob_rcs_fc_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the Thresholds to trigger/clear the Flow Control Indication. For the\r\n"
    "  different kinds of general resources (BDBs, unicast/ multicast DBuffs). \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_INFO_FULL_MC_LP_CLEAR_ID,
    "full_mc_lp_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.full_mc.lp.clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_INFO_FULL_MC_LP_SET_ID,
    "full_mc_lp_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.full_mc.lp.set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_INFO_FULL_MC_HP_CLEAR_ID,
    "full_mc_hp_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.full_mc.hp.clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_INFO_FULL_MC_HP_SET_ID,
    "full_mc_hp_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.full_mc.hp.set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_INFO_UNICAST_LP_CLEAR_ID,
    "uc_lp_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.unicast.lp.clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_INFO_UNICAST_LP_SET_ID,
    "uc_lp_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.unicast.lp.set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_INFO_UNICAST_HP_CLEAR_ID,
    "uc_hp_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.unicast.hp.clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_INFO_UNICAST_HP_SET_ID,
    "uc_hp_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.unicast.hp.set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_INFO_BDBS_LP_CLEAR_ID,
    "bdbs_lp_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.bdbs.lp.clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_INFO_BDBS_LP_SET_ID,
    "bdbs_lp_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.bdbs.lp.set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_INFO_BDBS_HP_CLEAR_ID,
    "bdbs_hp_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.bdbs.hp.clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_SET_ITM_GLOB_RCS_FC_SET_INFO_BDBS_HP_SET_ID,
    "bdbs_hp_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.bdbs.hp.set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_set clear 0 set 0 clear 0 set\r\n"
    "  0 clear 0 set 0 clear 0 set 0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(28), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_FC_GET_ITM_GLOB_RCS_FC_GET_ID,
    "glob_rcs_fc_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the Thresholds to trigger/clear the Flow Control Indication. For the\r\n"
    "  different kinds of general resources (BDBs, unicast/ multicast DBuffs). \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_fc_get\r\n"
#endif
    "",
    "",
    {0, 0, BIT(29), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_ID,
    "glob_rcs_drop_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the Thresholds to trigger/clear the Drop mechanism, in which packets are\r\n"
    "  dropped if the buffers of the different kinds have passed their hysteresis\r\n"
    "  thresholds. For the different kinds of general resources (bds, unicast,\r\n"
    "  full-multicast, mini-multicast). \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_MINI_MC_INDEX_ID,
    "mini_mc_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mini_mc_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_MINI_MC_CLEAR_ID,
    "mmc_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.mini_mc[ prm_mini_mc_index].clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_MINI_MC_SET_ID,
    "mmc_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.mini_mc[ prm_mini_mc_index].set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_FULL_MC_INDEX_ID,
    "full_mc_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  full_mc_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_FULL_MC_CLEAR_ID,
    "fmc_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.full_mc[ prm_full_mc_index].clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_FULL_MC_SET_ID,
    "fmc_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.full_mc[ prm_full_mc_index].set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_UNICAST_INDEX_ID,
    "unicast_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  unicast_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_UNICAST_CLEAR_ID,
    "uc_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.unicast[ prm_unicast_index].clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_UNICAST_SET_ID,
    "uc_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.unicast[ prm_unicast_index].set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bdbs_index\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_BDS_INDEX_ID,
    "bds_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  bds_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_BDS_CLEAR_ID,
    "bd_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.bds[ prm_bds_index].clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_BDS_SET_ID,
    "bd_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.bds[ prm_bds_index].set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_BDBS_INDEX_ID,
    "bdbs_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  bdbs_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_BDBS_CLEAR_ID,
    "bdb_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.bdbs[ prm_bdbs_index].clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_SET_ITM_GLOB_RCS_DROP_SET_INFO_BDBS_SET_ID,
    "bdb_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.bdbs[ prm_bdbs_index].set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_set mini_mc_index 0 clear 0\r\n"
    "  set 0 full_mc_index 0 clear 0 set 0 unicast_index 0 clear 0 set 0 bds_index 0\r\n"
    "  clear 0 set 0 bdbs_index 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, BIT(30), 0},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_GLOB_RCS_DROP_GET_ITM_GLOB_RCS_DROP_GET_ID,
    "glob_rcs_drop_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the Thresholds to trigger/clear the Drop mechanism, in which packets are\r\n"
    "  dropped if the buffers of the different kinds have passed their hysteresis\r\n"
    "  thresholds. For the different kinds of general resources (bds, unicast,\r\n"
    "  full-multicast, mini-multicast). \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_glob_rcs_drop_get\r\n"
#endif
    "",
    "",
    {0, 0, BIT(31), 0},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CATEGORY_RNGS_SET_ITM_CATEGORY_RNGS_SET_ID,
    "vsq_category_rngs_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Defines packet queues categories - in contiguous blocks. IQM queues are\r\n"
    "  divided to 4 categories in contiguous blocks.\r\n"
    "  Category-4 from 'category-end-3' till the last queue (32K).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_category_rngs_set vsq_ctgry2_end 0\r\n"
    "  vsq_ctgry1_end 0 vsq_ctgry0_end 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(0)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CATEGORY_RNGS_SET_ITM_VSQ_CATEGORY_RNGS_SET_INFO_VSQ_CTGRY2_END_ID,
    "vsq_ctgry2_end",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.vsq_ctgry2_end:\r\n"
    "  Category 2 includes ingress queues: 'vsq_ctgry_end1+1' to 'vsq_ctgry_end2'\r\n"
    "  (inclusive).Category 3 includes ingress queues: 'vsq_ctgry_end2+1' to '32K-1'\r\n"
    "  (inclusive).Range: 0-32,767.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_category_rngs_set vsq_ctgry2_end 0\r\n"
    "  vsq_ctgry1_end 0 vsq_ctgry0_end 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CATEGORY_RNGS_SET_ITM_VSQ_CATEGORY_RNGS_SET_INFO_VSQ_CTGRY1_END_ID,
    "vsq_ctgry1_end",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.vsq_ctgry1_end:\r\n"
    "  Category 1 includes ingress queues: 'vsq_ctgry_end0+1' to 'vsq_ctgry_end1'\r\n"
    "  (inclusive).Range: 0-32,767.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_category_rngs_set vsq_ctgry2_end 0\r\n"
    "  vsq_ctgry1_end 0 vsq_ctgry0_end 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CATEGORY_RNGS_SET_ITM_VSQ_CATEGORY_RNGS_SET_INFO_VSQ_CTGRY0_END_ID,
    "vsq_ctgry0_end",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.vsq_ctgry0_end:\r\n"
    "  Category 0 includes ingress queues: 0 to 'vsq_ctgry_end0' (inclusive).Range:\r\n"
    "  0-32,767.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_category_rngs_set vsq_ctgry2_end 0\r\n"
    "  vsq_ctgry1_end 0 vsq_ctgry0_end 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CATEGORY_RNGS_GET_ITM_VSQ_CATEGORY_RNGS_GET_ID,
    "vsq_category_rngs_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Defines packet queues categories - in contiguous blocks. IQM queues are\r\n"
    "  divided to 4 categories in contiguous blocks.\r\n"
    "  Category-4 from 'category-end-3' till the last queue (32K).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_category_rngs_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(1)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_ADMIT_TEST_TMPLT_SET_VSQ_ITM_ADMIT_TEST_TMPLT_SET_ID,
    "admit_test_tmplt_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  The device has 4 testing Reject Admission templates that define the test\r\n"
    "  accounted for the packet reject decision. Each input (info) represents a\r\n"
    "  stream of 8 bits, divided to 2 streams of 4 bit each (test_a or test_b). This\r\n"
    "  4 bit stream represents the masking of which tests to take into account- (1)\r\n"
    "  Category-VSQ test(2) Category&Connection-class VSQ test(3) Category2/3 &\r\n"
    "  Class test VSQ test(4) Statistic TAG VSQ testPacket is accepted if one of the\r\n"
    "  two tests (A or B) pass.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_admit_test_tmplt_set admt_tst_ndx 0\r\n"
    "  sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0 ctgry_trffc_test_en 0\r\n"
    "  ctgry_test_en 0 sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0\r\n"
    "  ctgry_trffc_test_en 0 ctgry_test_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(2)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_ADMIT_TEST_TMPLT_SET_ITM_ADMIT_TEST_TMPLT_SET_ADMT_TST_NDX_ID,
    "admt_tst_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  admt_tst_ndx:\r\n"
    "  There are 4 possible VSQ admission tests. Range 0 to 3.\r\n"
    "  With this procedure, one can set the tests.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_admit_test_tmplt_set admt_tst_ndx 0\r\n"
    "  sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0 ctgry_trffc_test_en 0\r\n"
    "  ctgry_test_en 0 sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0\r\n"
    "  ctgry_trffc_test_en 0 ctgry_test_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(2)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_ADMIT_TEST_TMPLT_SET_ITM_ADMIT_TEST_TMPLT_SET_INFO_TEST_B_STTSTCS_TAG_TEST_EN_ID,
    "b_sttstcs_tag_test_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.test_b.sttstcs_tag_test_en:\r\n"
    "  Indicator.1 - do 'Statistics TAG' VSQ test0 - do not do above test\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_admit_test_tmplt_set admt_tst_ndx 0\r\n"
    "  sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0 ctgry_trffc_test_en 0\r\n"
    "  ctgry_test_en 0 sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0\r\n"
    "  ctgry_trffc_test_en 0 ctgry_test_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_ADMIT_TEST_TMPLT_SET_ITM_ADMIT_TEST_TMPLT_SET_INFO_TEST_B_CTGRY2_3_CNCTN_TEST_EN_ID,
    "b_ctgry2_3_cnctn_test_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.test_b.ctgry2_3_cnctn_test_en:\r\n"
    "  Indicator.1 - do'category2/3 AND Connection-Class' VSQ test0 - do not do\r\n"
    "  above test\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_admit_test_tmplt_set admt_tst_ndx 0\r\n"
    "  sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0 ctgry_trffc_test_en 0\r\n"
    "  ctgry_test_en 0 sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0\r\n"
    "  ctgry_trffc_test_en 0 ctgry_test_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_ADMIT_TEST_TMPLT_SET_ITM_ADMIT_TEST_TMPLT_SET_INFO_TEST_B_CTGRY_TRFFC_TEST_EN_ID,
    "b_ctgry_trffc_test_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.test_b.ctgry_trffc_test_en:\r\n"
    "  Indicator.1 - do 'category AND Traffic-Class' VSQ test0 - do not do above test\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_admit_test_tmplt_set admt_tst_ndx 0\r\n"
    "  sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0 ctgry_trffc_test_en 0\r\n"
    "  ctgry_test_en 0 sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0\r\n"
    "  ctgry_trffc_test_en 0 ctgry_test_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_ADMIT_TEST_TMPLT_SET_ITM_ADMIT_TEST_TMPLT_SET_INFO_TEST_B_CTGRY_TEST_EN_ID,
    "b_ctgry_test_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.test_b.ctgry_test_en:\r\n"
    "  Indicator.1 - do category VSQ test 0 - do not do above test \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_admit_test_tmplt_set admt_tst_ndx 0\r\n"
    "  sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0 ctgry_trffc_test_en 0\r\n"
    "  ctgry_test_en 0 sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0\r\n"
    "  ctgry_trffc_test_en 0 ctgry_test_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_ADMIT_TEST_TMPLT_SET_ITM_ADMIT_TEST_TMPLT_SET_INFO_TEST_A_STTSTCS_TAG_TEST_EN_ID,
    "a_sttstcs_tag_test_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.test_a.sttstcs_tag_test_en:\r\n"
    "  Indicator.1 - do 'Statistics TAG' VSQ test0 - do not do above test\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_admit_test_tmplt_set admt_tst_ndx 0\r\n"
    "  sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0 ctgry_trffc_test_en 0\r\n"
    "  ctgry_test_en 0 sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0\r\n"
    "  ctgry_trffc_test_en 0 ctgry_test_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_ADMIT_TEST_TMPLT_SET_ITM_ADMIT_TEST_TMPLT_SET_INFO_TEST_A_CTGRY2_3_CNCTN_TEST_EN_ID,
    "a_ctgry2_3_cnctn_test_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.test_a.ctgry2_3_cnctn_test_en:\r\n"
    "  Indicator.1 - do'category2/3 AND Connection-Class' VSQ test0 - do not do\r\n"
    "  above test\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_admit_test_tmplt_set admt_tst_ndx 0\r\n"
    "  sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0 ctgry_trffc_test_en 0\r\n"
    "  ctgry_test_en 0 sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0\r\n"
    "  ctgry_trffc_test_en 0 ctgry_test_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_ADMIT_TEST_TMPLT_SET_ITM_ADMIT_TEST_TMPLT_SET_INFO_TEST_A_CTGRY_TRFFC_TEST_EN_ID,
    "a_ctgry_trffc_test_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.test_a.ctgry_trffc_test_en:\r\n"
    "  Indicator.1 - do 'category AND Traffic-Class' VSQ test0 - do not do above test\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_admit_test_tmplt_set admt_tst_ndx 0\r\n"
    "  sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0 ctgry_trffc_test_en 0\r\n"
    "  ctgry_test_en 0 sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0\r\n"
    "  ctgry_trffc_test_en 0 ctgry_test_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_ADMIT_TEST_TMPLT_SET_ITM_ADMIT_TEST_TMPLT_SET_INFO_TEST_A_CTGRY_TEST_EN_ID,
    "a_ctgry_test_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.test_a.ctgry_test_en:\r\n"
    "  Indicator.1 - do category VSQ test 0 - do not do above test \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_admit_test_tmplt_set admt_tst_ndx 0\r\n"
    "  sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0 ctgry_trffc_test_en 0\r\n"
    "  ctgry_test_en 0 sttstcs_tag_test_en 0 ctgry2_3_cnctn_test_en 0\r\n"
    "  ctgry_trffc_test_en 0 ctgry_test_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_ADMIT_TEST_TMPLT_GET_ITM_ADMIT_TEST_TMPLT_GET_ID,
    "admit_test_tmplt_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  The device has 4 testing Reject Admission templates that define the test\r\n"
    "  accounted for the packet reject decision. Each input (info) represents a\r\n"
    "  stream of 8 bits, divided to 2 streams of 4 bit each (test_a or test_b). This\r\n"
    "  4 bit stream represents the masking of which tests to take into account- (1)\r\n"
    "  Category-VSQ test(2) Category&Connection-class VSQ test(3) Category2/3 &\r\n"
    "  Class test VSQ test(4) Statistic TAG VSQ testPacket is accepted if one of the\r\n"
    "  two tests (A or B) pass.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_admit_test_tmplt_get admt_tst_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(3)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_ADMIT_TEST_TMPLT_GET_ITM_ADMIT_TEST_TMPLT_GET_ADMT_TST_NDX_ID,
    "admt_tst_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  admt_tst_ndx:\r\n"
    "  There are 4 possible VSQ admission tests. Range 0 to 3.\r\n"
    "  With this procedure, one can set the tests.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_admit_test_tmplt_get admt_tst_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(3)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_ID,
    "cr_request_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Per queue the device maintains an Off/Normal/Slow Credit Request State. The\r\n"
    "  device has 16 'Credit Request Configurations', one per Credit-Class.\r\n"
    "  Sets the (1) Queue-Size-Thresholds (2) Credit-Balance-Thresholds (3)\r\n"
    "  Empty-Queue-Thresholds (4) Credit-Watchdog\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_QT_NDX_ID,
    "qt_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  qt_ndx:\r\n"
    "  Ingress Queue Type IPS. Range: 0 to 15.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_SATISFIED_TH_EMPTY_QUEUES_EXCEED_MAX_EMPTY_Q_ID,
    "exceed_max_empty_q",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.satisfied_th.empty_queues.exceed_max_empty_q:\r\n"
    "  Exceed Max Empty Queue Credit Balance. This indication permits the credit\r\n"
    "  balance of an empty queue to exceed configured 'Exceed Max Empty Queue Credit\r\n"
    "  Balance' up to (Credit Value minus 1), when a credit is received. This is\r\n"
    "  used to prevent the deletion of partial credits.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_SATISFIED_TH_EMPTY_QUEUES_MAX_CREDIT_BALANCE_EMPTY_Q_ID,
    "max_credit_balance_empty_q",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.satisfied_th.empty_queues.max_credit_balance_empty_q:\r\n"
    "  In byte resolution.Max Empty Queue Credit Balance.This value is the maximum\r\n"
    "  credits an empty queue can accumulate.Range: 0 - 65,535.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_SATISFIED_TH_EMPTY_QUEUES_SATISFIED_EMPTY_Q_TH_ID,
    "satisfied_empty_q_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.satisfied_th.empty_queues.satisfied_empty_q_th:\r\n"
    "  In byte resolution. When Qsize==0 and CrBal >= satisfied_empty_q_th, the CRS\r\n"
    "  is changed to OFF. This threshold is a specific case of\r\n"
    "  TMD_ITM_CR_REQUEST_CR_BALANCE_TH. backlog_enter_th threshold.Range: 0 -\r\n"
    "  65,535.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_SATISFIED_TH_BACKLOG_TH_BACKLOG_EXIT_TH_ID,
    "backlog_exit_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.satisfied_th.backlog_th.backlog_exit_th:\r\n"
    "  In byte resolution.Hysteresis value for to the 'Backlog Enter'.Range: 0 -\r\n"
    "  491,520.Resolution: 1 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_SATISFIED_TH_BACKLOG_TH_BACKLOG_ENTER_TH_ID,
    "backlog_enter_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.satisfied_th.backlog_th.backlog_enter_th:\r\n"
    "  In byte resolution.When the Credit Balance is bigger 'Backlog Enter\r\n"
    "  threshold' bytes than the queue size, the device sends OFF message to the\r\n"
    "  scheduler. This threshold acts as Slow/Norm to off threshold.Range: 0 -\r\n"
    "  491,520.Resolution: 1 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_SATISFIED_TH_BACKOFF_TH_BACKOFF_EXIT_TH_ID,
    "backoff_exit_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.satisfied_th.backoff_th.backoff_exit_th:\r\n"
    "  In byte resolution.Hysteresis value for to the 'Backoff Enter'.Range: 0 -\r\n"
    "  491,520.Resolution: 1 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_SATISFIED_TH_BACKOFF_TH_BACKOFF_ENTER_TH_ID,
    "backoff_enter_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.satisfied_th.backoff_th.backoff_enter_th:\r\n"
    "  In byte resolution.When the Credit Balance is bigger than the threshold, the\r\n"
    "  device sends OFF message to the scheduler. This is to prevent credit\r\n"
    "  accumulation from a certain threshold.Range: 0 - 491,520.Resolution: 1 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_HUNGRY_TH_MULTIPLIER_ID,
    "multiplier",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.hungry_th.multiplier:\r\n"
    "  In byte resolution. When queue size crosses a multiply of 'multiplier' a new\r\n"
    "  Flow-Status Cell is generated.Range: 1-8 (0 - disables mechanism).Resolution:\r\n"
    "  16 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_HUNGRY_TH_NORMAL_TO_SLOW_TH_ID,
    "normal_to_slow_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.hungry_th.normal_to_slow_th:\r\n"
    "  In byte resolution. When (Qsize-CrBal) < normal_to_slow_th, and CRS==NORM,\r\n"
    "  CRS may be changed to SLOW.Range: 0 to +/-229,376.Resolution: 1 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_HUNGRY_TH_SLOW_TO_NORMAL_TH_ID,
    "slow_to_normal_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.hungry_th.slow_to_normal_th:\r\n"
    "  In byte resolution. When (Qsize-CrBal) > slow_to_normal_th, and CRS==SLOW,\r\n"
    "  CRS may be changed to NORM.Range: 0 to +/-229,376.Resolution: 1 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_HUNGRY_TH_OFF_TO_NORMAL_TH_ID,
    "off_to_normal_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.hungry_th.off_to_normal_th:\r\n"
    "  In byte resolution. When (Qsize-CrBal) > off_to_normal_th, and CRS==OFF, CRS\r\n"
    "  may be changed to NORM.Range: 0 to +/-229,376.Resolution: 1 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_HUNGRY_TH_OFF_TO_SLOW_TH_ID,
    "off_to_slow_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.hungry_th.off_to_slow_th:\r\n"
    "  In byte resolution. When (Qsize-CrBal) > off_to_slow_th, and CRS==OFF, CRS\r\n"
    "  may be changed to SLOW.Range: 0 to +/-229,376.Resolution: 1 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_WD_TH_CR_WD_DLT_Q_TH_ID,
    "cr_wd_dlt_q_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.wd_th.cr_wd_dlt_q_th:\r\n"
    "  Watch Dog Delete Queue Threshold - When the 'Watch Dog Delete Queue\r\n"
    "  Threshold' time passed since the last credit for an active Queue, the Queue\r\n"
    "  will be in Delete-State.Range:\r\n"
    "  1-15 (0 - disables TH).Resolution: WD full cycle units.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_SET_ITM_CR_REQUEST_SET_INFO_WD_TH_CR_WD_STTS_MSG_GEN_ID,
    "cr_wd_stts_msg_gen",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.wd_th.cr_wd_stts_msg_gen:\r\n"
    "  Watch Dog Status Message Generation Period - When the 'Watch Dog Status\r\n"
    "  Message Generation Period' time passed since the last credit for an active\r\n"
    "  Queue, the Queue will generate Flow-Status-Message again.Range:\r\n"
    "  1-15 (0 - disables TH).Resolution: WD full cycle units.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_set qt_ndx 0 exceed_max_empty_q\r\n"
    "  0 max_credit_balance_empty_q 0 satisfied_empty_q_th 0 backlog_exit_th 0\r\n"
    "  backlog_enter_th 0 backoff_exit_th 0 backoff_enter_th 0 multiplier 0\r\n"
    "  normal_to_slow_th 0 slow_to_normal_th 0 off_to_normal_th 0 off_to_slow_th 0\r\n"
    "  cr_wd_dlt_q_th 0 cr_wd_stts_msg_gen 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_GET_ITM_CR_REQUEST_GET_ID,
    "cr_request_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Per queue the device maintains an Off/Normal/Slow Credit Request State. The\r\n"
    "  device has 16 'Credit Request Configurations', one per Credit-Class.\r\n"
    "  Sets the (1) Queue-Size-Thresholds (2) Credit-Balance-Thresholds (3)\r\n"
    "  Empty-Queue-Thresholds (4) Credit-Watchdog\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_get qt_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(5)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_REQUEST_GET_ITM_CR_REQUEST_GET_QT_NDX_ID,
    "qt_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  qt_ndx:\r\n"
    "  Ingress Queue Type IPS. Range: 0 to 15.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_request_get qt_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(5)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_DISCOUNT_SET_ITM_CR_DISCOUNT_SET_ID,
    "cr_discount_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  The device has 16 possible credit-discount possibilities.\r\n"
    "  This procedure sets the 16 options.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_discount_set cr_cls_ndx 0 discount 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(6)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_DISCOUNT_SET_ITM_CR_DISCOUNT_SET_CR_CLS_NDX_ID,
    "cr_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cr_cls_ndx:\r\n"
    "  Per queue user can select 1 credit-discount class out of 16 different\r\n"
    "  credit-discount classes.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_discount_set cr_cls_ndx 0 discount 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(6)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_DISCOUNT_SET_ITM_CR_DISCOUNT_SET_INFO_DISCOUNT_ID,
    "discount",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.discount:\r\n"
    "  AKA header compensation. When a packet is sent and a credit is deducted from\r\n"
    "  the queue's credit balance, NP/external header (or any other size) can be\r\n"
    "  discounted from result, in order not to affect overall output rate (note that\r\n"
    "  this discount is signed, which means it can be added to the credit\r\n"
    "  balance).Range: +/- 0 to 127. Resolution: 1 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_discount_set cr_cls_ndx 0 discount 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_DISCOUNT_GET_ITM_CR_DISCOUNT_GET_ID,
    "cr_discount_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  The device has 16 possible credit-discount possibilities.\r\n"
    "  This procedure sets the 16 options.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_discount_get cr_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(7)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_DISCOUNT_GET_ITM_CR_DISCOUNT_GET_CR_CLS_NDX_ID,
    "cr_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cr_cls_ndx:\r\n"
    "  Per queue user can select 1 credit-discount class out of 16 different\r\n"
    "  credit-discount classes.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_discount_get cr_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(7)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_TEST_TMPLT_SET_ITM_QUEUE_TEST_TMPLT_SET_ID,
    "queue_test_tmplt_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the admit logic test of the queue per rate-class and drop-precedence\r\n"
    "  (there are 4 pre-configured by 'tmd_itm_admit_test_tmplt_set' options for\r\n"
    "  test types).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_test_tmplt_set rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0 test_tmplt 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(8)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_TEST_TMPLT_SET_ITM_QUEUE_TEST_TMPLT_SET_RT_CLS_NDX_ID,
    "rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rt_cls_ndx:\r\n"
    "  Ingress rate class. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_test_tmplt_set rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0 test_tmplt 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(8)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_TEST_TMPLT_SET_ITM_QUEUE_TEST_TMPLT_SET_DROP_PRECEDENCE_NDX_ID,
    "drop_precedence_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  drop_precedence_ndx:\r\n"
    "  The drop precedence to set. Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_test_tmplt_set rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0 test_tmplt 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(8)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_TEST_TMPLT_SET_ITM_QUEUE_TEST_TMPLT_SET_TEST_TMPLT_ID,
    "test_tmplt",
    (PARAM_VAL_RULES *)&TMD_ITM_ADMIT_TSTS_rule[0],
    (sizeof(TMD_ITM_ADMIT_TSTS_rule) / sizeof(TMD_ITM_ADMIT_TSTS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  test_tmplt:\r\n"
    "  Enumerator indicating the test-template index.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_test_tmplt_set rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0 test_tmplt 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_TEST_TMPLT_GET_ITM_QUEUE_TEST_TMPLT_GET_ID,
    "queue_test_tmplt_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the admit logic test of the queue per rate-class and drop-precedence\r\n"
    "  (there are 4 pre-configured by 'tmd_itm_admit_test_tmplt_set' options for\r\n"
    "  test types).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_test_tmplt_get rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(9)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_TEST_TMPLT_GET_ITM_QUEUE_TEST_TMPLT_GET_RT_CLS_NDX_ID,
    "rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rt_cls_ndx:\r\n"
    "  Ingress rate class. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_test_tmplt_get rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_TEST_TMPLT_GET_ITM_QUEUE_TEST_TMPLT_GET_DROP_PRECEDENCE_NDX_ID,
    "drop_precedence_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  drop_precedence_ndx:\r\n"
    "  The drop precedence to set. Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_test_tmplt_get rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_EXP_WQ_SET_ITM_WRED_EXP_WQ_SET_ID,
    "wred_exp_wq_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets exponential weighted queue per rate-class. The calculation the device\r\n"
    "  does:\r\n"
    "  Average_constant = 2^(-RED_exp_weight)if (Instantaneous-Queue-size <\r\n"
    "  Average-queue-size)\r\n"
    "  Average-queue-size = Instantaneous-Queue-sizeelse\r\n"
    "  Average-queue-size = (1-Average_constant)*Average-queue-size +\r\n"
    "  Average_constant*Instantaneous-Queue-size To configure WRED configuration\r\n"
    "  which are per queue-type and dp, use the functiontmd_itm_wred_info_set.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_exp_wq_set rt_cls_ndx 0 exp_wq 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(10)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_EXP_WQ_SET_ITM_WRED_EXP_WQ_SET_RT_CLS_NDX_ID,
    "rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rt_cls_ndx:\r\n"
    "  Ingress rate class. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_exp_wq_set rt_cls_ndx 0 exp_wq 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(10)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_EXP_WQ_SET_ITM_WRED_EXP_WQ_SET_EXP_WQ_ID,
    "exp_wq",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  exp_wq:\r\n"
    "  Constant for average queue size calculation. Range: 0-31.I.e., make the\r\n"
    "  average factor from 1 to 2^(-31).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_exp_wq_set rt_cls_ndx 0 exp_wq 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_EXP_WQ_GET_ITM_WRED_EXP_WQ_GET_ID,
    "wred_exp_wq_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets exponential weighted queue per rate-class. The calculation the device\r\n"
    "  does:\r\n"
    "  Average_constant = 2^(-RED_exp_weight)if (Instantaneous-Queue-size <\r\n"
    "  Average-queue-size)\r\n"
    "  Average-queue-size = Instantaneous-Queue-sizeelse\r\n"
    "  Average-queue-size = (1-Average_constant)*Average-queue-size +\r\n"
    "  Average_constant*Instantaneous-Queue-size To configure WRED configuration\r\n"
    "  which are per queue-type and dp, use the functiontmd_itm_wred_info_set.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_exp_wq_get rt_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(11)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_EXP_WQ_GET_ITM_WRED_EXP_WQ_GET_RT_CLS_NDX_ID,
    "rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rt_cls_ndx:\r\n"
    "  Ingress rate class. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_exp_wq_get rt_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(11)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_SET_ITM_WRED_SET_ID,
    "wred_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets WRED parameters per rate-class and drop precedence, including\r\n"
    "  wred-enable and the admit test logic. Also, as part of the WRED parameters;\r\n"
    "  max-queue, WRED-thresholds/probability. To configure WRED Configuration that\r\n"
    "  is per queue-type only (exponential weight queue), use the function\r\n"
    "  tmd_itm_wred_exp_wq_set.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_set rt_cls_ndx 0 drop_precedence_ndx\r\n"
    "  0 max_probability 0 max_packet_size 0 max_avrg_th 0 min_avrg_th 0\r\n"
    "  ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(12)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_SET_ITM_WRED_SET_RT_CLS_NDX_ID,
    "rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rt_cls_ndx:\r\n"
    "  Ingress rate class. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_set rt_cls_ndx 0 drop_precedence_ndx\r\n"
    "  0 max_probability 0 max_packet_size 0 max_avrg_th 0 min_avrg_th 0\r\n"
    "  ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(12)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_SET_ITM_WRED_SET_DROP_PRECEDENCE_NDX_ID,
    "drop_precedence_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  drop_precedence_ndx:\r\n"
    "  The drop precedence to set. Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_set rt_cls_ndx 0 drop_precedence_ndx\r\n"
    "  0 max_probability 0 max_packet_size 0 max_avrg_th 0 min_avrg_th 0\r\n"
    "  ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(12)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_SET_ITM_WRED_SET_INFO_MAX_PROBABILITY_ID,
    "max_probability",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.max_probability:\r\n"
    "  The maximum probability of discarding a packet (when the queue reaches the\r\n"
    "  maximum average size ('max_avrg_th') and the packet size is the maximum size\r\n"
    "  ('max_packet_size')).1%\r\n"
    "  = 1, 23% = 23. Range: 0 - 100.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_set rt_cls_ndx 0 drop_precedence_ndx\r\n"
    "  0 max_probability 0 max_packet_size 0 max_avrg_th 0 min_avrg_th 0\r\n"
    "  ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_SET_ITM_WRED_SET_INFO_MAX_PACKET_SIZE_ID,
    "max_packet_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.max_packet_size:\r\n"
    "  Max packet size for the WRED algorithm.In the WRED algorithm, the device\r\n"
    "  granularity is of power of 2 packet sizes. Between 2^0 to 2^15E.g., 127 bytes\r\n"
    "  will be round up to 128 bytes.\r\n"
    "  Note - this size should not exceed WRED_MAX_PACKET_SIZE.Range: 0 -\r\n"
    "  32767.Resolution: 1 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_set rt_cls_ndx 0 drop_precedence_ndx\r\n"
    "  0 max_probability 0 max_packet_size 0 max_avrg_th 0 min_avrg_th 0\r\n"
    "  ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_SET_ITM_WRED_SET_INFO_MAX_AVRG_TH_ID,
    "max_avrg_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.max_avrg_th:\r\n"
    "  Relating to queue average size.Maximum Average Threshold - Above this\r\n"
    "  threshold, packet is discarded from the queue.Resolution of bytes.The device\r\n"
    "  resolution is of 16 bytes. Has to be higher than max_avrg_th.Range: 0 - (2^24\r\n"
    "  - 1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_set rt_cls_ndx 0 drop_precedence_ndx\r\n"
    "  0 max_probability 0 max_packet_size 0 max_avrg_th 0 min_avrg_th 0\r\n"
    "  ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_SET_ITM_WRED_SET_INFO_MIN_AVRG_TH_ID,
    "min_avrg_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.min_avrg_th:\r\n"
    "  Relating to queue average size.Minimum Average Threshold - Below this\r\n"
    "  threshold, packet is admitted into the queue.Resolution of bytes.The device\r\n"
    "  resolution is of 16 bytes. Has to be lower than max_avrg_th.Range: 0 - (2^24\r\n"
    "  - 1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_set rt_cls_ndx 0 drop_precedence_ndx\r\n"
    "  0 max_probability 0 max_packet_size 0 max_avrg_th 0 min_avrg_th 0\r\n"
    "  ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_SET_ITM_WRED_SET_INFO_IGNORE_PACKET_SIZE_ID,
    "ignore_packet_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ignore_packet_size:\r\n"
    "  Indicator:1 - discard packet size in WRED test0 - consider packet size in\r\n"
    "  WRED test\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_set rt_cls_ndx 0 drop_precedence_ndx\r\n"
    "  0 max_probability 0 max_packet_size 0 max_avrg_th 0 min_avrg_th 0\r\n"
    "  ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_SET_ITM_WRED_SET_INFO_WRED_EN_ID,
    "wred_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.wred_en:\r\n"
    "  Indicator:1 - enable WRED test0 - disable test (always accept)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_set rt_cls_ndx 0 drop_precedence_ndx\r\n"
    "  0 max_probability 0 max_packet_size 0 max_avrg_th 0 min_avrg_th 0\r\n"
    "  ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_GET_ITM_WRED_GET_ID,
    "wred_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets WRED parameters per rate-class and drop precedence, including\r\n"
    "  wred-enable and the admit test logic. Also, as part of the WRED parameters;\r\n"
    "  max-queue, WRED-thresholds/probability. To configure WRED Configuration that\r\n"
    "  is per queue-type only (exponential weight queue), use the function\r\n"
    "  tmd_itm_wred_exp_wq_set.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_get rt_cls_ndx 0 drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(13)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_GET_ITM_WRED_GET_RT_CLS_NDX_ID,
    "rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rt_cls_ndx:\r\n"
    "  Ingress rate class. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_get rt_cls_ndx 0 drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(13)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_WRED_GET_ITM_WRED_GET_DROP_PRECEDENCE_NDX_ID,
    "drop_precedence_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  drop_precedence_ndx:\r\n"
    "  The drop precedence to set. Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_wred_get rt_cls_ndx 0 drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(13)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_TAIL_DROP_SET_ITM_TAIL_DROP_SET_ID,
    "tail_drop_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets tail drop parameter - max-queue-size per rate-class and drop precedence.\r\n"
    "  The tail drop mechanism drops packets that are mapped to queues that exceed\r\n"
    "  thresholds of this structure.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_tail_drop_set rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0 max_inst_q_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(14)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_TAIL_DROP_SET_ITM_TAIL_DROP_SET_RT_CLS_NDX_ID,
    "rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rt_cls_ndx:\r\n"
    "  Ingress rate class. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_tail_drop_set rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0 max_inst_q_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(14)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_TAIL_DROP_SET_ITM_TAIL_DROP_SET_DROP_PRECEDENCE_NDX_ID,
    "drop_precedence_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  drop_precedence_ndx:\r\n"
    "  The drop precedence to set. Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_tail_drop_set rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0 max_inst_q_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(14)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_TAIL_DROP_SET_ITM_TAIL_DROP_SET_INFO_MAX_INST_Q_SIZE_ID,
    "max_inst_q_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.max_inst_q_size:\r\n"
    "  If (instantaneous-queue-size > maximum-instantaneous-queue-size) then the\r\n"
    "  packet is discarded. Range: 0 - 2^24. Resolution: 16 Bytes.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_tail_drop_set rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0 max_inst_q_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_TAIL_DROP_GET_ITM_TAIL_DROP_GET_ID,
    "tail_drop_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets tail drop parameter - max-queue-size per rate-class and drop precedence.\r\n"
    "  The tail drop mechanism drops packets that are mapped to queues that exceed\r\n"
    "  thresholds of this structure.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_tail_drop_get rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(15)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_TAIL_DROP_GET_ITM_TAIL_DROP_GET_RT_CLS_NDX_ID,
    "rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rt_cls_ndx:\r\n"
    "  Ingress rate class. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_tail_drop_get rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(15)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_TAIL_DROP_GET_ITM_TAIL_DROP_GET_DROP_PRECEDENCE_NDX_ID,
    "drop_precedence_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  drop_precedence_ndx:\r\n"
    "  The drop precedence to set. Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_tail_drop_get rt_cls_ndx 0\r\n"
    "  drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(15)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_WD_SET_ITM_CR_WD_SET_ID,
    "cr_wd_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets ingress-queue credit Watchdog thresholds and configuration. includes:\r\n"
    "  start-queue, end-queue and wd-rates. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_wd_set top_queue 0 bottom_queue 0\r\n"
    "  max_flow_msg_gen_burst_size 0 max_flow_msg_gen_rate_nano 0\r\n"
    "  min_scan_cycle_period_micro 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(16)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_WD_SET_ITM_CR_WD_SET_INFO_TOP_QUEUE_ID,
    "top_queue",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.top_queue:\r\n"
    "  Top queue for credit watchdogRange: 0-32,676.Resolution: 1 queue.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_wd_set top_queue 0 bottom_queue 0\r\n"
    "  max_flow_msg_gen_burst_size 0 max_flow_msg_gen_rate_nano 0\r\n"
    "  min_scan_cycle_period_micro 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_WD_SET_ITM_CR_WD_SET_INFO_BOTTOM_QUEUE_ID,
    "bottom_queue",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.bottom_queue:\r\n"
    "  The watchdog scans between bottom queue and top queue in cyclic manner, at a\r\n"
    "  minimum rate.This value is the bottom queue for credit watchdog.Range:\r\n"
    "  0-32,676.Resolution: 1 queue.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_wd_set top_queue 0 bottom_queue 0\r\n"
    "  max_flow_msg_gen_burst_size 0 max_flow_msg_gen_rate_nano 0\r\n"
    "  min_scan_cycle_period_micro 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_WD_SET_ITM_CR_WD_SET_INFO_MAX_FLOW_MSG_GEN_RATE_NANO_ID,
    "max_flow_msg_gen_rate_nano",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.max_flow_msg_gen_rate_nano:\r\n"
    "  This value defines the period in clocks in which a token bucket is\r\n"
    "  incremented. Value is in nanoseconds.Range: 0-1542\r\n"
    "  (0 - disables message generation.).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_wd_set top_queue 0 bottom_queue 0\r\n"
    "  max_flow_msg_gen_burst_size 0 max_flow_msg_gen_rate_nano 0\r\n"
    "  min_scan_cycle_period_micro 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_WD_SET_ITM_CR_WD_SET_INFO_MIN_SCAN_CYCLE_PERIOD_MICRO_ID,
    "min_scan_cycle_period_micro",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.min_scan_cycle_period_micro:\r\n"
    "  Credit watchdog has a given minimum scan rate between top and bottom queue.\r\n"
    "  The scan time can be longer if the watchdog access is restrained by other\r\n"
    "  events, or if many queues need to be serviced by the credit watchdog (then it\r\n"
    "  is restrained by it's own flow status generation limit).This value is the\r\n"
    "  minimum time between two full scan of the queues.Value is in\r\n"
    "  microseconds.Range: 0-50533 (0 - disables the WD).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_wd_set top_queue 0 bottom_queue 0\r\n"
    "  max_flow_msg_gen_burst_size 0 max_flow_msg_gen_rate_nano 0\r\n"
    "  min_scan_cycle_period_micro 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_CR_WD_GET_ITM_CR_WD_GET_ID,
    "cr_wd_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets ingress-queue credit Watchdog thresholds and configuration. includes:\r\n"
    "  start-queue, end-queue and wd-rates. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_cr_wd_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(17)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_QT_RT_CLS_SET_ITM_VSQ_QT_RT_CLS_SET_ID,
    "vsq_qt_rt_cls_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets Virtual Statistics Queue Rate-Class.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_qt_rt_cls_set vsq_group_ndx 0\r\n"
    "  vsq_in_group_ndx 0 vsq_rt_cls 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(18)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_QT_RT_CLS_SET_ITM_VSQ_QT_RT_CLS_SET_VSQ_GROUP_NDX_ID,
    "vsq_group_ndx",
    (PARAM_VAL_RULES *)&TMD_ITM_VSQ_GROUP_rule[0],
    (sizeof(TMD_ITM_VSQ_GROUP_rule) / sizeof(TMD_ITM_VSQ_GROUP_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_group_ndx:\r\n"
    "  There are 4 groups of vsqs (0-3).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_qt_rt_cls_set vsq_group_ndx 0\r\n"
    "  vsq_in_group_ndx 0 vsq_rt_cls 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(18)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_QT_RT_CLS_SET_ITM_VSQ_QT_RT_CLS_SET_VSQ_IN_GROUP_NDX_ID,
    "vsq_in_group_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_in_group_ndx:\r\n"
    "  Vsq in group index to which to configure rate class.\r\n"
    "  the index shoud be according the group it is, as following:\r\n"
    "  vsq_group 0 (category): 0-3\r\n"
    "  vsq_group 1 (cat + traffic class): 0-32\r\n"
    "  vsq_group 2 (cat2/3 + connection class): 0-64\r\n"
    "  vsq_group 3 (statistics tag): 0-255\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_qt_rt_cls_set vsq_group_ndx 0\r\n"
    "  vsq_in_group_ndx 0 vsq_rt_cls 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(18)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_QT_RT_CLS_SET_ITM_VSQ_QT_RT_CLS_SET_VSQ_RT_CLS_ID,
    "vsq_rt_cls",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_rt_cls:\r\n"
    "  Vsq rate class to configure, range: 0-15.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_qt_rt_cls_set vsq_group_ndx 0\r\n"
    "  vsq_in_group_ndx 0 vsq_rt_cls 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_QT_RT_CLS_GET_ITM_VSQ_QT_RT_CLS_GET_ID,
    "vsq_qt_rt_cls_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets Virtual Statistics Queue Rate-Class.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_qt_rt_cls_get vsq_group_ndx 0\r\n"
    "  vsq_in_group_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(19)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_QT_RT_CLS_GET_ITM_VSQ_QT_RT_CLS_GET_VSQ_GROUP_NDX_ID,
    "vsq_group_ndx",
    (PARAM_VAL_RULES *)&TMD_ITM_VSQ_GROUP_rule[0],
    (sizeof(TMD_ITM_VSQ_GROUP_rule) / sizeof(TMD_ITM_VSQ_GROUP_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_group_ndx:\r\n"
    "  There are 4 groups of vsqs (0-3).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_qt_rt_cls_get vsq_group_ndx 0\r\n"
    "  vsq_in_group_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(19)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_QT_RT_CLS_GET_ITM_VSQ_QT_RT_CLS_GET_VSQ_IN_GROUP_NDX_ID,
    "vsq_in_group_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_in_group_ndx:\r\n"
    "  Vsq in group index to which to configure rate class.\r\n"
    "  the index shoud be according the group it is, as following:\r\n"
    "  vsq_group 0 (category): 0-3\r\n"
    "  vsq_group 1 (cat + traffic class): 0-32\r\n"
    "  vsq_group 2 (cat2/3 + connection class): 0-64\r\n"
    "  vsq_group 3 (statistics tag): 0-255\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_qt_rt_cls_get vsq_group_ndx 0\r\n"
    "  vsq_in_group_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(19)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_FC_SET_ITM_VSQ_FC_SET_ID,
    "vsq_fc_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets Virtual Statistics Queue, includes:\r\n"
    "  vsq-id, rate-class \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_fc_set vsq_group_ndx 0 vsq_rt_cls_ndx\r\n"
    "  0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(20)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_FC_SET_ITM_VSQ_FC_SET_VSQ_GROUP_NDX_ID,
    "vsq_group_ndx",
    (PARAM_VAL_RULES *)&TMD_ITM_VSQ_GROUP_rule[0],
    (sizeof(TMD_ITM_VSQ_GROUP_rule) / sizeof(TMD_ITM_VSQ_GROUP_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_group_ndx:\r\n"
    "  There are 4 groups of vsqs (0-3).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_fc_set vsq_group_ndx 0 vsq_rt_cls_ndx\r\n"
    "  0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(20)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_FC_SET_ITM_VSQ_FC_SET_VSQ_RT_CLS_NDX_ID,
    "vsq_rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_rt_cls_ndx:\r\n"
    "  VSQ rate class index.\r\n"
    "  Range: 0-63\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_fc_set vsq_group_ndx 0 vsq_rt_cls_ndx\r\n"
    "  0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(20)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_FC_SET_ITM_VSQ_FC_SET_INFO_BD_SIZE_FC_CLEAR_ID,
    "bd_size_fc_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.bd_size_fc.clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_fc_set vsq_group_ndx 0 vsq_rt_cls_ndx\r\n"
    "  0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_FC_SET_ITM_VSQ_FC_SET_INFO_BD_SIZE_FC_SET_ID,
    "bd_size_fc_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.bd_size_fc.set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_fc_set vsq_group_ndx 0 vsq_rt_cls_ndx\r\n"
    "  0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_FC_SET_ITM_VSQ_FC_SET_INFO_Q_SIZE_FC_CLEAR_ID,
    "q_size_fc_clear",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.q_size_fc.clear:\r\n"
    "  Passing this threshold from below means deactivation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_fc_set vsq_group_ndx 0 vsq_rt_cls_ndx\r\n"
    "  0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_FC_SET_ITM_VSQ_FC_SET_INFO_Q_SIZE_FC_SET_ID,
    "q_size_fc_set",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.q_size_fc.set:\r\n"
    "  Passing this threshold from above means activation.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_fc_set vsq_group_ndx 0 vsq_rt_cls_ndx\r\n"
    "  0 clear 0 set 0 clear 0 set 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_FC_GET_ITM_VSQ_FC_GET_ID,
    "vsq_fc_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets Virtual Statistics Queue, includes:\r\n"
    "  vsq-id, rate-class \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_fc_get vsq_group_ndx 0 vsq_rt_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(21)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_FC_GET_ITM_VSQ_FC_GET_VSQ_GROUP_NDX_ID,
    "vsq_group_ndx",
    (PARAM_VAL_RULES *)&TMD_ITM_VSQ_GROUP_rule[0],
    (sizeof(TMD_ITM_VSQ_GROUP_rule) / sizeof(TMD_ITM_VSQ_GROUP_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_group_ndx:\r\n"
    "  There are 4 groups of vsqs (0-3).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_fc_get vsq_group_ndx 0 vsq_rt_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(21)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_FC_GET_ITM_VSQ_FC_GET_VSQ_RT_CLS_NDX_ID,
    "vsq_rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_rt_cls_ndx:\r\n"
    "  VSQ rate class index.\r\n"
    "  Range: 0-63\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_fc_get vsq_group_ndx 0 vsq_rt_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(21)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_TAIL_DROP_SET_ITM_VSQ_TAIL_DROP_SET_ID,
    "vsq_tail_drop_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets tail drop parameter on the VSQ - max-queue-size in words and in\r\n"
    "  buffer-descriptors per vsq-rate-class and drop precedence. The tail drop\r\n"
    "  mechanism drops packets that are mapped to queues that exceed thresholds of\r\n"
    "  this structure.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_tail_drop_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_inst_q_size_bds 0 max_inst_q_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(22)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_TAIL_DROP_SET_ITM_VSQ_TAIL_DROP_SET_VSQ_GROUP_NDX_ID,
    "vsq_group_ndx",
    (PARAM_VAL_RULES *)&TMD_ITM_VSQ_GROUP_rule[0],
    (sizeof(TMD_ITM_VSQ_GROUP_rule) / sizeof(TMD_ITM_VSQ_GROUP_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_group_ndx:\r\n"
    "  Ingress VSQ group index. Range: 0 to 3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_tail_drop_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_inst_q_size_bds 0 max_inst_q_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(22)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_TAIL_DROP_SET_ITM_VSQ_TAIL_DROP_SET_VSQ_RT_CLS_NDX_ID,
    "vsq_rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_rt_cls_ndx:\r\n"
    "  Ingress rate class. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_tail_drop_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_inst_q_size_bds 0 max_inst_q_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(22)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_TAIL_DROP_SET_ITM_VSQ_TAIL_DROP_SET_DROP_PRECEDENCE_NDX_ID,
    "drop_precedence_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  drop_precedence_ndx:\r\n"
    "  The drop precedence to set. Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_tail_drop_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_inst_q_size_bds 0 max_inst_q_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(22)},
    5,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_TAIL_DROP_SET_ITM_VSQ_TAIL_DROP_SET_INFO_MAX_INST_Q_SIZE_BDS_ID,
    "max_inst_q_size_bds",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.max_inst_q_size_bds:\r\n"
    "  if (instantaneous-queue-size in BDs threshold >\r\n"
    "  maximum-instantaneous-queue-size in BDs threshold). Range: 0 - 2^22.Notice\r\n"
    "  that the maximum value of this \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_tail_drop_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_inst_q_size_bds 0 max_inst_q_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_TAIL_DROP_SET_ITM_VSQ_TAIL_DROP_SET_INFO_MAX_INST_Q_SIZE_ID,
    "max_inst_q_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.max_inst_q_size:\r\n"
    "  if (instantaneous-queue-size > maximum-instantaneous-queue-size) then the\r\n"
    "  packet is discarded.Range: 0 - 2^24. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_tail_drop_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_inst_q_size_bds 0 max_inst_q_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_TAIL_DROP_GET_ITM_VSQ_TAIL_DROP_GET_ID,
    "vsq_tail_drop_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets tail drop parameter on the VSQ - max-queue-size in words and in\r\n"
    "  buffer-descriptors per vsq-rate-class and drop precedence. The tail drop\r\n"
    "  mechanism drops packets that are mapped to queues that exceed thresholds of\r\n"
    "  this structure.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_tail_drop_get vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(23)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_TAIL_DROP_GET_ITM_VSQ_TAIL_DROP_GET_VSQ_GROUP_NDX_ID,
    "vsq_group_ndx",
    (PARAM_VAL_RULES *)&TMD_ITM_VSQ_GROUP_rule[0],
    (sizeof(TMD_ITM_VSQ_GROUP_rule) / sizeof(TMD_ITM_VSQ_GROUP_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_group_ndx:\r\n"
    "  Ingress VSQ group index. Range: 0 to 3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_tail_drop_get vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(23)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_TAIL_DROP_GET_ITM_VSQ_TAIL_DROP_GET_VSQ_RT_CLS_NDX_ID,
    "vsq_rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_rt_cls_ndx:\r\n"
    "  Ingress rate class. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_tail_drop_get vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(23)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_TAIL_DROP_GET_ITM_VSQ_TAIL_DROP_GET_DROP_PRECEDENCE_NDX_ID,
    "drop_precedence_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  drop_precedence_ndx:\r\n"
    "  The drop precedence to set. Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_tail_drop_get vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(23)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_GEN_SET_ITM_VSQ_WRED_GEN_SET_ID,
    "vsq_wred_gen_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure sets VSQ WRED general configurations, includes:\r\n"
    "  WRED-enable and exponential-weight-queue (for the WRED algorithm).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_gen_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 exp_wq 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(24)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_GEN_SET_ITM_VSQ_WRED_GEN_SET_VSQ_GROUP_NDX_ID,
    "vsq_group_ndx",
    (PARAM_VAL_RULES *)&TMD_ITM_VSQ_GROUP_rule[0],
    (sizeof(TMD_ITM_VSQ_GROUP_rule) / sizeof(TMD_ITM_VSQ_GROUP_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_group_ndx:\r\n"
    "  There are 4 groups of vsqs (0-3).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_gen_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 exp_wq 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(24)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_GEN_SET_ITM_VSQ_WRED_GEN_SET_VSQ_RT_CLS_NDX_ID,
    "vsq_rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_rt_cls_ndx:\r\n"
    "  VSQ rate class.\r\n"
    "  Range: 0-15\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_gen_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 exp_wq 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(24)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_GEN_SET_ITM_VSQ_WRED_GEN_SET_INFO_EXP_WQ_ID,
    "exp_wq",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.exp_wq:\r\n"
    "  Exponential queue size averaging weight.Range: 0-31.I.e., make the average\r\n"
    "  factor from 1 to 2^(-31).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_gen_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 exp_wq 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(24)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_GEN_SET_ITM_VSQ_WRED_GEN_SET_INFO_WRED_EN_ID,
    "wred_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.wred_en:\r\n"
    "  Indicator:1 - enable WRED test0 - disable test (always accept)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_gen_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 exp_wq 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(24)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_GEN_GET_ITM_VSQ_WRED_GEN_GET_ID,
    "vsq_wred_gen_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure sets VSQ WRED general configurations, includes:\r\n"
    "  WRED-enable and exponential-weight-queue (for the WRED algorithm).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_gen_get vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(25)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_GEN_GET_ITM_VSQ_WRED_GEN_GET_VSQ_GROUP_NDX_ID,
    "vsq_group_ndx",
    (PARAM_VAL_RULES *)&TMD_ITM_VSQ_GROUP_rule[0],
    (sizeof(TMD_ITM_VSQ_GROUP_rule) / sizeof(TMD_ITM_VSQ_GROUP_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_group_ndx:\r\n"
    "  There are 4 groups of vsqs (0-3).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_gen_get vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_GEN_GET_ITM_VSQ_WRED_GEN_GET_VSQ_RT_CLS_NDX_ID,
    "vsq_rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_rt_cls_ndx:\r\n"
    "  VSQ rate class.\r\n"
    "  Range: 0-15\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_gen_get vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_SET_ITM_VSQ_WRED_SET_ID,
    "vsq_wred_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  A WRED test for each packet versus the packet queue or VSQ that the packet is\r\n"
    "  mapped to is performed. This procedure sets Virtual Statistics Queue WRED,\r\n"
    "  includes: WRED-thresholds/probability.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_probability 0 max_packet_size 0\r\n"
    "  max_avrg_th 0 min_avrg_th 0 ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(26)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_SET_ITM_VSQ_WRED_SET_VSQ_GROUP_NDX_ID,
    "vsq_group_ndx",
    (PARAM_VAL_RULES *)&TMD_ITM_VSQ_GROUP_rule[0],
    (sizeof(TMD_ITM_VSQ_GROUP_rule) / sizeof(TMD_ITM_VSQ_GROUP_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_group_ndx:\r\n"
    "  There are 4 groups of vsqs (0-3).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_probability 0 max_packet_size 0\r\n"
    "  max_avrg_th 0 min_avrg_th 0 ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(26)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_SET_ITM_VSQ_WRED_SET_VSQ_RT_CLS_NDX_ID,
    "vsq_rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_rt_cls_ndx:\r\n"
    "  VSQ rate class.\r\n"
    "  Range: 0-15\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_probability 0 max_packet_size 0\r\n"
    "  max_avrg_th 0 min_avrg_th 0 ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(26)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_SET_ITM_VSQ_WRED_SET_DROP_PRECEDENCE_NDX_ID,
    "drop_precedence_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  drop_precedence_ndx:\r\n"
    "  drop-precedence. Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_probability 0 max_packet_size 0\r\n"
    "  max_avrg_th 0 min_avrg_th 0 ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(26)},
    5,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_SET_ITM_VSQ_WRED_SET_INFO_MAX_PROBABILITY_ID,
    "max_probability",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.max_probability:\r\n"
    "  The maximum probability of discarding a packet (when the queue reaches the\r\n"
    "  maximum average size ('max_avrg_th') and the packet size is the maximum size\r\n"
    "  ('max_packet_size')).1%\r\n"
    "  = 1, 23% = 23. Range: 0 - 100.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_probability 0 max_packet_size 0\r\n"
    "  max_avrg_th 0 min_avrg_th 0 ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_SET_ITM_VSQ_WRED_SET_INFO_MAX_PACKET_SIZE_ID,
    "max_packet_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.max_packet_size:\r\n"
    "  Max packet size for the WRED algorithm.In the WRED algorithm, the device\r\n"
    "  granularity is of power of 2 packet sizes. Between 2^0 to 2^15E.g., 127 bytes\r\n"
    "  will be round up to 128 bytes.\r\n"
    "  Note - this size should not exceed WRED_MAX_PACKET_SIZE.Range: 0 -\r\n"
    "  32767.Resolution: 1 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_probability 0 max_packet_size 0\r\n"
    "  max_avrg_th 0 min_avrg_th 0 ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_SET_ITM_VSQ_WRED_SET_INFO_MAX_AVRG_TH_ID,
    "max_avrg_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.max_avrg_th:\r\n"
    "  Relating to queue average size.Maximum Average Threshold - Above this\r\n"
    "  threshold, packet is discarded from the queue.Resolution of bytes.The device\r\n"
    "  resolution is of 16 bytes. Has to be higher than max_avrg_th.Range: 0 - (2^24\r\n"
    "  - 1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_probability 0 max_packet_size 0\r\n"
    "  max_avrg_th 0 min_avrg_th 0 ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_SET_ITM_VSQ_WRED_SET_INFO_MIN_AVRG_TH_ID,
    "min_avrg_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.min_avrg_th:\r\n"
    "  Relating to queue average size.Minimum Average Threshold - Below this\r\n"
    "  threshold, packet is admitted into the queue.Resolution of bytes.The device\r\n"
    "  resolution is of 16 bytes. Has to be lower than max_avrg_th.Range: 0 - (2^24\r\n"
    "  - 1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_probability 0 max_packet_size 0\r\n"
    "  max_avrg_th 0 min_avrg_th 0 ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_SET_ITM_VSQ_WRED_SET_INFO_IGNORE_PACKET_SIZE_ID,
    "ignore_packet_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ignore_packet_size:\r\n"
    "  Indicator:1 - discard packet size in WRED test0 - consider packet size in\r\n"
    "  WRED test\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_probability 0 max_packet_size 0\r\n"
    "  max_avrg_th 0 min_avrg_th 0 ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_SET_ITM_VSQ_WRED_SET_INFO_WRED_EN_ID,
    "wred_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.wred_en:\r\n"
    "  Indicator:1 - enable WRED test0 - disable test (always accept)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_set vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0 max_probability 0 max_packet_size 0\r\n"
    "  max_avrg_th 0 min_avrg_th 0 ignore_packet_size 0 wred_en 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_GET_ITM_VSQ_WRED_GET_ID,
    "vsq_wred_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  A WRED test for each packet versus the packet queue or VSQ that the packet is\r\n"
    "  mapped to is performed. This procedure sets Virtual Statistics Queue WRED,\r\n"
    "  includes: WRED-thresholds/probability.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_get vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(27)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_GET_ITM_VSQ_WRED_GET_VSQ_GROUP_NDX_ID,
    "vsq_group_ndx",
    (PARAM_VAL_RULES *)&TMD_ITM_VSQ_GROUP_rule[0],
    (sizeof(TMD_ITM_VSQ_GROUP_rule) / sizeof(TMD_ITM_VSQ_GROUP_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_group_ndx:\r\n"
    "  There are 4 groups of vsqs (0-3).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_get vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(27)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_GET_ITM_VSQ_WRED_GET_VSQ_RT_CLS_NDX_ID,
    "vsq_rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_rt_cls_ndx:\r\n"
    "  VSQ rate class.\r\n"
    "  Range: 0-15\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_get vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(27)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_WRED_GET_ITM_VSQ_WRED_GET_DROP_PRECEDENCE_NDX_ID,
    "drop_precedence_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  drop_precedence_ndx:\r\n"
    "  drop-precedence. Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_wred_get vsq_group_ndx 0\r\n"
    "  vsq_rt_cls_ndx 0 drop_precedence_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(27)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#ifdef UI_UNDEFED_TEMP
  {
    PARAM_TMD_ITM_STAG_SET_ITM_STAG_SET_ID,
    "stag_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets Virtual Statistics Queue TAG configuration, includes:\r\n"
    "  VSQ mapping in the statistics-tag, drop-precedence mapping in the\r\n"
    "  statistics-tag \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_stag_set dropp_lsb 0 dropp_en 0\r\n"
    "  vsq_index_lsb 0 vsq_index_msb 0 enable_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(28)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_STAG_SET_ITM_STAG_SET_INFO_DROPP_LSB_ID,
    "dropp_lsb",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.dropp_lsb:\r\n"
    "  Defines the LSB of the DP in the STAG, if enabled. Range: 0 - 30. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_stag_set dropp_lsb 0 dropp_en 0\r\n"
    "  vsq_index_lsb 0 vsq_index_msb 0 enable_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_STAG_SET_ITM_STAG_SET_INFO_DROPP_EN_ID,
    "dropp_en",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.dropp_en:\r\n"
    "  If set, then the Statistics-Tag carries Drop Precedence (DP) field. Note:\r\n"
    "  this configuration must be consistant with per-port configuration of the STAG\r\n"
    "  Generation. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_stag_set dropp_lsb 0 dropp_en 0\r\n"
    "  vsq_index_lsb 0 vsq_index_msb 0 enable_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_STAG_SET_ITM_STAG_SET_INFO_VSQ_INDEX_LSB_ID,
    "vsq_index_lsb",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.vsq_index_lsb:\r\n"
    "  If available for VSQ, the LSB of the VSQ field in the statistics Tag. Range:\r\n"
    "  0 - 31. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_stag_set dropp_lsb 0 dropp_en 0\r\n"
    "  vsq_index_lsb 0 vsq_index_msb 0 enable_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_STAG_SET_ITM_STAG_SET_INFO_ENABLE_MODE_ID,
    "enable_mode",
    (PARAM_VAL_RULES *)&TMD_ITM_STAG_ENABLE_MODE_rule[0],
    (sizeof(TMD_ITM_STAG_ENABLE_MODE_rule) / sizeof(TMD_ITM_STAG_ENABLE_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable_mode:\r\n"
    "  Enable (in the specified mode)/Disable STAG \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_stag_set dropp_lsb 0 dropp_en 0\r\n"
    "  vsq_index_lsb 0 vsq_index_msb 0 enable_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_STAG_SET_ITM_STAG_SET_INFO_VSQ_INDEX_MSB_ID,
    "vsq_index_msb",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.vsq_index_msb:\r\n"
    "  If available for VSQ, the MSB of the VSQ field in the statistics Tag.\r\n"
    "  The value in the field between the MSB and LSB defines a VSQ number that is\r\n"
    "  used by the STE, when gathering statistics information. (VSQ group D). Note:\r\n"
    "  a total of 256 VSQs are supported using the Stat-tag (8 bits). Range: 0 - 31. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_stag_set dropp_lsb 0 dropp_en 0\r\n"
    "  vsq_index_lsb 0 vsq_index_msb 0 enable_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_STAG_GET_ITM_STAG_GET_ID,
    "stag_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets Virtual Statistics Queue TAG configuration, includes:\r\n"
    "  VSQ mapping in the statistics-tag, drop-precedence mapping in the\r\n"
    "  statistics-tag \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_stag_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(29)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_COUNTER_SET_ITM_VSQ_COUNTER_SET_ID,
    "vsq_counter_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Select VSQ for monitoring. The selected VSQ counter can be further read,\r\n"
    "  indicating the number of packets enqueued to the VSQ.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_counter_set vsq_group_ndx 0\r\n"
    "  vsq_in_group_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_COUNTER_SET_ITM_VSQ_COUNTER_SET_VSQ_GROUP_NDX_ID,
    "vsq_group_ndx",
    (PARAM_VAL_RULES *)&TMD_ITM_VSQ_GROUP_rule[0],
    (sizeof(TMD_ITM_VSQ_GROUP_rule) / sizeof(TMD_ITM_VSQ_GROUP_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_group_ndx:\r\n"
    "  VSQ group: 0 - Group A, VSQs 0->3,\r\n"
    "  Category. 1 - Group B, VSQs 4->35, Category & TC. 2 - Group C, VSQs\r\n"
    "  36->99,Category & CC 2/3. 3 - Group D, VSQs 100 -> 355, STAG.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_counter_set vsq_group_ndx 0\r\n"
    "  vsq_in_group_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_COUNTER_SET_ITM_VSQ_COUNTER_SET_VSQ_IN_GROUP_NDX_ID,
    "vsq_in_group_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  vsq_in_group_ndx:\r\n"
    "  VSQ in-group index:Group A (Category) Range: 0-3. Group B (Category + TC)\r\n"
    "  Range: 0-32. Group C (Category 2/3 + CC) Range: 0-64. Group D (STAG) Range:\r\n"
    "  0-255.   SOC_SAND_OUT  uint32  *pckt_count -     Number of packets enqueued to the\r\n"
    "  specified VSQ\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_counter_set vsq_group_ndx 0\r\n"
    "  vsq_in_group_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_COUNTER_GET_ITM_VSQ_COUNTER_GET_ID,
    "vsq_counter_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Select VSQ for monitoring. The selected VSQ counter can be further read,\r\n"
    "  indicating the number of packets enqueued to the VSQ.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_counter_get vsq_group_ndx 0\r\n"
    "  vsq_in_group_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(31)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_VSQ_COUNTER_READ_ITM_VSQ_COUNTER_READ_ID,
    "vsq_counter_read",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Indicates the number of packets enqueued to the monitored VSQ.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_vsq_counter_read\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(0)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* UI_UNDEFED_TEMP */
  {
    PARAM_TMD_ITM_QUEUE_INFO_SET_ITM_QUEUE_INFO_SET_ID,
    "queue_info_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the queue types of a queue\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_info_set queue_ndx 0 signature 0\r\n"
    "  vsq_traffic_cls 0 vsq_connection_cls 0 rate_cls 0 credit_cls 0\r\n"
    "  cr_req_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(30)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_INFO_SET_ITM_QUEUE_INFO_SET_QUEUE_NDX_ID,
    "queue_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_ndx:\r\n"
    "  The ID of the queue to be set (Range: 0 - 32768).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_info_set queue_ndx 0 signature 0\r\n"
    "  vsq_traffic_cls 0 vsq_connection_cls 0 rate_cls 0 credit_cls 0\r\n"
    "  cr_req_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(30)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_INFO_SET_ITM_QUEUE_INFO_SET_INFO_SIGNATURE_ID,
    "signature",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.signature:\r\n"
    "  Signature key for the Queue. This value is given to each queue and can\r\n"
    "  represent the ACTION-TYPE of a packet, for example: forwarding, snooping,\r\n"
    "  inbound mirroring or outbound mirroring. It is embedded in the fabric/egress\r\n"
    "  header from the ingress and passed on to be used at NP/PP. Range: 0-3 \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_info_set queue_ndx 0 signature 0\r\n"
    "  vsq_traffic_cls 0 vsq_connection_cls 0 rate_cls 0 credit_cls 0\r\n"
    "  cr_req_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(30)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_INFO_SET_ITM_QUEUE_INFO_SET_INFO_VSQ_TRAFFIC_CLS_ID,
    "vsq_traffic_cls",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.vsq_traffic_cls:\r\n"
    "  Traffic Class Identifier. (Used For specifying the VSQ to gather\r\n"
    "  statistics)Range: 0-7\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_info_set queue_ndx 0 signature 0\r\n"
    "  vsq_traffic_cls 0 vsq_connection_cls 0 rate_cls 0 credit_cls 0\r\n"
    "  cr_req_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(30)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_INFO_SET_ITM_QUEUE_INFO_SET_INFO_VSQ_CONNECTION_CLS_ID,
    "vsq_connection_cls",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.vsq_connection_cls:\r\n"
    "  Connection Class Identifier. Typically this value is in correlation with the\r\n"
    "  Traffic-Class in the packet header. (Used For specifying the VSQ to gather\r\n"
    "  statistics)Range: 0-31\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_info_set queue_ndx 0 signature 0\r\n"
    "  vsq_traffic_cls 0 vsq_connection_cls 0 rate_cls 0 credit_cls 0\r\n"
    "  cr_req_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(30)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_INFO_SET_ITM_QUEUE_INFO_SET_INFO_RATE_CLS_ID,
    "rate_cls",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.rate_cls:\r\n"
    "  Rate Class Identifier.According to the Rate class queue type the WRED queue\r\n"
    "  features are configured. Range: 0-63\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_info_set queue_ndx 0 signature 0\r\n"
    "  vsq_traffic_cls 0 vsq_connection_cls 0 rate_cls 0 credit_cls 0\r\n"
    "  cr_req_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(30)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_INFO_SET_ITM_QUEUE_INFO_SET_INFO_CREDIT_CLS_ID,
    "credit_cls",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.credit_cls:\r\n"
    "  Credit Class Identifier. According to the credit class queue type the credit\r\n"
    "  discount is determined and the header compensation takes place.Range: 0-15\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_info_set queue_ndx 0 signature 0\r\n"
    "  vsq_traffic_cls 0 vsq_connection_cls 0 rate_cls 0 credit_cls 0\r\n"
    "  cr_req_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(30)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_INFO_SET_ITM_QUEUE_INFO_SET_INFO_CR_REQ_TYPE_NDX_ID,
    "cr_req_type_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.cr_req_type_ndx:\r\n"
    "  Each packet queue is assigned with packet attributes that are defined\r\n"
    "  according to the queue type index. According to this index the credit request\r\n"
    "  mechanism of the queue is assigned (watchdog, backoff, backlog\r\n"
    "  thresholds)Range: 0-15. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_info_set queue_ndx 0 signature 0\r\n"
    "  vsq_traffic_cls 0 vsq_connection_cls 0 rate_cls 0 credit_cls 0\r\n"
    "  cr_req_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(30)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_INFO_GET_ITM_QUEUE_INFO_GET_ID,
    "queue_info_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the queue types of a queue\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_info_get queue_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(31)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_QUEUE_INFO_GET_ITM_QUEUE_INFO_GET_QUEUE_NDX_ID,
    "queue_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_ndx:\r\n"
    "  The ID of the queue to be set (Range: 0 - 32768).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_queue_info_get queue_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, BIT(31)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_INGRESS_SHAPE_SET_ITM_INGRESS_SHAPE_SET_ID,
    "ingress_shape_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets ingress shaping configuration. This includes ingress shaping queues\r\n"
    "  range, and credit generation configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_ingress_shape_set sch_port 0 rate 0\r\n"
    "  q_num_high 0 q_num_low 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(0)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_INGRESS_SHAPE_SET_ITM_INGRESS_SHAPE_SET_INFO_SCH_PORT_ID,
    "sch_port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.sch_port:\r\n"
    "  End-to-End Scheduler Port, dedicated to ingress shaping. Range: 0-79. Note:\r\n"
    "  the scheduling hierarchy under this port distributes credits to Ingress\r\n"
    "  Shaping queues. The ingress shaping queues must be mapped to scheduler flows\r\n"
    "  that are part of scheduling hierarchy under this port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_ingress_shape_set sch_port 0 rate 0\r\n"
    "  q_num_high 0 q_num_low 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_INGRESS_SHAPE_SET_ITM_INGRESS_SHAPE_SET_INFO_RATE_ID,
    "rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.rate:\r\n"
    "  Ingress Shaping rate. Units: Kpbs. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_ingress_shape_set sch_port 0 rate 0\r\n"
    "  q_num_high 0 q_num_low 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_INGRESS_SHAPE_SET_ITM_INGRESS_SHAPE_SET_INFO_Q_RANGE_Q_NUM_HIGH_ID,
    "q_num_high",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.q_range.q_num_high:\r\n"
    "  Last queue ID for ingress shaping queues.Note: Base-Q can not be part of the\r\n"
    "  range.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_ingress_shape_set sch_port 0 rate 0\r\n"
    "  q_num_high 0 q_num_low 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_INGRESS_SHAPE_SET_ITM_INGRESS_SHAPE_SET_INFO_Q_RANGE_Q_NUM_LOW_ID,
    "q_num_low",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.q_range.q_num_low:\r\n"
    "  Ingress Shaping defines a continuous range of VOQs that used for Ingress\r\n"
    "  shaped packets. First queue ID for ingress shaping queues The lower\r\n"
    "  value.Note: Base-Q can not be part of the range.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_ingress_shape_set sch_port 0 rate 0\r\n"
    "  q_num_high 0 q_num_low 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_INGRESS_SHAPE_SET_ITM_INGRESS_SHAPE_SET_INFO_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable:\r\n"
    "  If TRUE, ingress shaping is enabled. Note: If disabled, all the other fields\r\n"
    "  in this structure are ignored. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_ingress_shape_set sch_port 0 rate 0\r\n"
    "  q_num_high 0 q_num_low 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_INGRESS_SHAPE_GET_ITM_INGRESS_SHAPE_GET_ID,
    "ingress_shape_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets ingress shaping configuration. This includes ingress shaping queues\r\n"
    "  range, and credit generation configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_ingress_shape_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(1)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_PRIORITY_MAP_TMPLT_SET_ITM_PRIORITY_MAP_TMPLT_SET_ID,
    "priority_map_tmplt_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Four sets of queues-priorities maps are held in the device. Per map:\r\n"
    "  describes a segment of 64 contiguous queues. Each queue is either high or low\r\n"
    "  priority.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_priority_map_tmplt_set map_ndx 0 bit 0\r\n"
    "  map_index 0 map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(2)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_PRIORITY_MAP_TMPLT_SET_ITM_PRIORITY_MAP_TMPLT_SET_MAP_NDX_ID,
    "map_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  map_ndx:\r\n"
    "  SOC_SAND_IN uint32\r\n"
    "  map_ndx\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_priority_map_tmplt_set map_ndx 0 bit 0\r\n"
    "  map_index 0 map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(2)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_PRIORITY_MAP_TMPLT_SET_ITM_PRIORITY_MAP_TMPLT_SET_INFO_MAP_INDEX_ID,
    "map_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  map_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_priority_map_tmplt_set map_ndx 0 map_index\r\n"
    "  0 map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_PRIORITY_MAP_TMPLT_SET_ITM_PRIORITY_MAP_TMPLT_SET_INFO_MAP_ID,
    "map",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.map[ prm_map_index]:\r\n"
    "  Describes one segment of 64 contiguous queues. If bit value is 1: high\r\n"
    "  priority.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_priority_map_tmplt_set map_ndx 0 bit 0\r\n"
    "  map_index 0 map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_PRIORITY_MAP_TMPLT_GET_ITM_PRIORITY_MAP_TMPLT_GET_ID,
    "priority_map_tmplt_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Four sets of queues-priorities maps are held in the device. Per map:\r\n"
    "  describes a segment of 64 contiguous queues. Each queue is either high or low\r\n"
    "  priority.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_priority_map_tmplt_get map_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(3)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_PRIORITY_MAP_TMPLT_GET_ITM_PRIORITY_MAP_TMPLT_GET_MAP_NDX_ID,
    "map_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  map_ndx:\r\n"
    "  SOC_SAND_IN uint32\r\n"
    "  map_ndx\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_priority_map_tmplt_get map_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(3)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_PRIORITY_MAP_TMPLT_SELECT_SET_ITM_PRIORITY_MAP_TMPLT_SELECT_SET_ID,
    "priority_map_tmplt_select_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  The 32K ingress-queues range is segmented into 512 segments of 64 contiguous\r\n"
    "  queues, that is, queues 64N to 64N+63 that all have the same map-id (one of\r\n"
    "  four).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_priority_map_tmplt_select_set queue_64_ndx\r\n"
    "  0 priority_map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(4)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_PRIORITY_MAP_TMPLT_SELECT_SET_ITM_PRIORITY_MAP_TMPLT_SELECT_SET_QUEUE_64_NDX_ID,
    "queue_64_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_64_ndx:\r\n"
    "  SOC_SAND_IN uint32\r\n"
    "  queue_64_ndx\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_priority_map_tmplt_select_set queue_64_ndx\r\n"
    "  0 priority_map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(4)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_PRIORITY_MAP_TMPLT_SELECT_SET_ITM_PRIORITY_MAP_TMPLT_SELECT_SET_PRIORITY_MAP_ID,
    "priority_map",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  priority_map:\r\n"
    "  SOC_SAND_IN uint32\r\n"
    "  priority_map\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_priority_map_tmplt_select_set queue_64_ndx\r\n"
    "  0 priority_map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_PRIORITY_MAP_TMPLT_SELECT_GET_ITM_PRIORITY_MAP_TMPLT_SELECT_GET_ID,
    "priority_map_tmplt_select_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  The 32K ingress-queues range is segmented into 512 segments of 64 contiguous\r\n"
    "  queues, that is, queues 64N to 64N+63 that all have the same map-id (one of\r\n"
    "  four).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_priority_map_tmplt_select_get queue_64_ndx\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(5)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_PRIORITY_MAP_TMPLT_SELECT_GET_ITM_PRIORITY_MAP_TMPLT_SELECT_GET_QUEUE_64_NDX_ID,
    "queue_64_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_64_ndx:\r\n"
    "  SOC_SAND_IN uint32\r\n"
    "  queue_64_ndx\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_priority_map_tmplt_select_get queue_64_ndx\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(5)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_DROP_PROB_SET_ITM_SYS_RED_DROP_PROB_SET_ID,
    "sys_red_drop_prob_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  System Red drop probabilities table fill in. The system Red mechanism uses a\r\n"
    "  table of 16 probabilities. The table is used by indexes which choose 1 out of\r\n"
    "  the 16 options.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_drop_prob_set drop_probs_index 0\r\n"
    "  drop_probs 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(6)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_DROP_PROB_SET_ITM_SYS_RED_DROP_PROB_SET_INFO_DROP_PROBS_INDEX_ID,
    "drop_probs_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  drop_probs_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_drop_prob_set drop_probs_index 0\r\n"
    "  drop_probs 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_DROP_PROB_SET_ITM_SYS_RED_DROP_PROB_SET_INFO_DROP_PROBS_ID,
    "drop_probs",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.drop_probs[ prm_drop_probs_index]:\r\n"
    "  System Red drop probability values.Range: 0 - 10000, when 100 means 1%.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_drop_prob_set drop_probs_index 0\r\n"
    "  drop_probs 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_DROP_PROB_GET_ITM_SYS_RED_DROP_PROB_GET_ID,
    "sys_red_drop_prob_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  System Red drop probabilities table fill in. The system Red mechanism uses a\r\n"
    "  table of 16 probabilities. The table is used by indexes which choose 1 out of\r\n"
    "  the 16 options.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_drop_prob_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(7)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_QUEUE_SIZE_BOUNDARIES_SET_ITM_SYS_RED_QUEUE_SIZE_BOUNDARIES_SET_ID,
    "sys_red_queue_size_boundaries_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  System Red queue size boundaries, per queue type - rate class. The queue size\r\n"
    "  ranges table is set. For each queue type and drop-precedence,\r\n"
    "  drop/pass/drop-with-probability parameters are set using the function\r\n"
    "  tmd_itm_sys_red_qt_dp_info_set.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_queue_size_boundaries_set\r\n"
    "  rt_cls_ndx 0 queue_size_boundaries_index 0 queue_size_boundaries 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(8)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_QUEUE_SIZE_BOUNDARIES_SET_ITM_SYS_RED_QUEUE_SIZE_BOUNDARIES_SET_RT_CLS_NDX_ID,
    "rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rt_cls_ndx:\r\n"
    "  Ingress rate class Queue Type. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_queue_size_boundaries_set\r\n"
    "  rt_cls_ndx 0 queue_size_boundaries_index 0 queue_size_boundaries 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(8)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_QUEUE_SIZE_BOUNDARIES_SET_ITM_SYS_RED_QUEUE_SIZE_BOUNDARIES_SET_INFO_QUEUE_SIZE_BOUNDARIES_INDEX_ID,
    "queue_size_boundaries_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_size_boundaries_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_queue_size_boundaries_set\r\n"
    "  rt_cls_ndx 0 queue_size_boundaries_index 0 queue_size_boundaries 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_QUEUE_SIZE_BOUNDARIES_SET_ITM_SYS_RED_QUEUE_SIZE_BOUNDARIES_SET_INFO_QUEUE_SIZE_BOUNDARIES_ID,
    "queue_size_boundaries",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.queue_size_boundaries[ prm_queue_size_boundaries_index]:\r\n"
    "  Boundaries which map queue size to system red Virtual-OFP-Queue-Size\r\n"
    "  index.Virtual-OFP-Queue-Size 0 is mapped by 0 --\r\n"
    "  queue_size_boundaries[0].Virtual-OFP-Queue-Size 1 is mapped by\r\n"
    "  queue_size_boundaries[0] - queue_size_boundaries[1]....Virtual-OFP-Queue-Size\r\n"
    "  15 is mapped by queue_size_boundaries[14] - max_q_size.Range (for each\r\n"
    "  entry): 0 - 65024, resolution: 1 Byte.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_queue_size_boundaries_set\r\n"
    "  rt_cls_ndx 0 queue_size_boundaries_index 0 queue_size_boundaries 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_QUEUE_SIZE_BOUNDARIES_GET_ITM_SYS_RED_QUEUE_SIZE_BOUNDARIES_GET_ID,
    "sys_red_queue_size_boundaries_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  System Red queue size boundaries, per queue type - rate class. The queue size\r\n"
    "  ranges table is set. For each queue type and drop-precedence,\r\n"
    "  drop/pass/drop-with-probability parameters are set using the function\r\n"
    "  tmd_itm_sys_red_qt_dp_info_set.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_queue_size_boundaries_get\r\n"
    "  rt_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(9)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_QUEUE_SIZE_BOUNDARIES_GET_ITM_SYS_RED_QUEUE_SIZE_BOUNDARIES_GET_RT_CLS_NDX_ID,
    "rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rt_cls_ndx:\r\n"
    "  Ingress rate class Queue Type. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_queue_size_boundaries_get\r\n"
    "  rt_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_Q_BASED_SET_ITM_SYS_RED_INFO_SET_ID,
    "sys_red_info_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures the ingress system red parameters per q-type - rate class and\r\n"
    "  drop-precedence. This includes the thresholds and drop probability, which\r\n"
    "  determine the behavior of the algorithm according to the queue size index.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_info_set rt_cls_ndx 0\r\n"
    "  sys_red_dp_ndx 0 drp_prob_high 0 drp_prob_low 0 drp_th 0 prob_th 0 adm_th 0\r\n"
    "  enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(10)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_Q_BASED_SET_ITM_SYS_RED_INFO_SET_RT_CLS_NDX_ID,
    "rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rt_cls_ndx:\r\n"
    "  Ingress QDP Queue Type. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_info_set rt_cls_ndx 0\r\n"
    "  sys_red_dp_ndx 0 drp_prob_high 0 drp_prob_low 0 drp_th 0 prob_th 0 adm_th 0\r\n"
    "  enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(10)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_Q_BASED_SET_ITM_SYS_RED_INFO_SET_SYS_RED_DP_NDX_ID,
    "sys_red_dp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sys_red_dp_ndx:\r\n"
    "  The drop precedence to be affected by this configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_info_set rt_cls_ndx 0\r\n"
    "  sys_red_dp_ndx 0 drp_prob_high 0 drp_prob_low 0 drp_th 0 prob_th 0 adm_th 0\r\n"
    "  enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(10)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_Q_BASED_SET_ITM_SYS_RED_INFO_SET_INFO_DRP_PROB_HIGH_ID,
    "drp_prob_high",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.drp_prob_high:\r\n"
    "  Drop probability index, used when Q-size range is between prob_th and drp_th\r\n"
    "  (index to drop-p table).Range: 0-15.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_info_set rt_cls_ndx 0\r\n"
    "  sys_red_dp_ndx 0 drp_prob_high 0 drp_prob_low 0 drp_th 0 prob_th 0 adm_th 0\r\n"
    "  enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_Q_BASED_SET_ITM_SYS_RED_INFO_SET_INFO_DRP_PROB_LOW_ID,
    "drp_prob_low",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.drp_prob_low:\r\n"
    "  Drop probability index, used when Q-size range is between adm_th and prob_th\r\n"
    "  (index to drop-p table).Range: 0-15.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_info_set rt_cls_ndx 0\r\n"
    "  sys_red_dp_ndx 0 drp_prob_high 0 drp_prob_low 0 drp_th 0 prob_th 0 adm_th 0\r\n"
    "  enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_Q_BASED_SET_ITM_SYS_RED_INFO_SET_INFO_DRP_TH_ID,
    "drp_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.drp_th:\r\n"
    "  Drop threshold: above this threshold packet is always dropped.Above prob_th\r\n"
    "  and below drp_th drop with probability drp_prob_high.Range: 0-15.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_info_set rt_cls_ndx 0\r\n"
    "  sys_red_dp_ndx 0 drp_prob_high 0 drp_prob_low 0 drp_th 0 prob_th 0 adm_th 0\r\n"
    "  enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_Q_BASED_SET_ITM_SYS_RED_INFO_SET_INFO_PROB_TH_ID,
    "prob_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.prob_th:\r\n"
    "  Above adm_th and below prob_th drop with probability drp_prob_low.Range: 0-15.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_info_set rt_cls_ndx 0\r\n"
    "  sys_red_dp_ndx 0 drp_prob_high 0 drp_prob_low 0 drp_th 0 prob_th 0 adm_th 0\r\n"
    "  enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_Q_BASED_SET_ITM_SYS_RED_INFO_SET_INFO_ADM_TH_ID,
    "adm_th",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.adm_th:\r\n"
    "  Admit Threshold: Threshold below which packets are admitted.Range: 0-15. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_info_set rt_cls_ndx 0\r\n"
    "  sys_red_dp_ndx 0 drp_prob_high 0 drp_prob_low 0 drp_th 0 prob_th 0 adm_th 0\r\n"
    "  enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_Q_BASED_SET_ITM_SYS_RED_INFO_SET_INFO_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable:\r\n"
    "  Indicator:1 - Enable System Red. 0 - System RED is disabled (test and\r\n"
    "  parameters ignored). \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_info_set rt_cls_ndx 0\r\n"
    "  sys_red_dp_ndx 0 drp_prob_high 0 drp_prob_low 0 drp_th 0 prob_th 0 adm_th 0\r\n"
    "  enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_Q_BASED_GET_ITM_SYS_RED_INFO_GET_ID,
    "sys_red_info_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures the ingress system red parameters per q-type - rate class and\r\n"
    "  drop-precedence. This includes the thresholds and drop probability, which\r\n"
    "  determine the behavior of the algorithm according to the queue size index.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_info_get rt_cls_ndx 0\r\n"
    "  sys_red_dp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(11)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_Q_BASED_GET_ITM_SYS_RED_INFO_GET_RT_CLS_NDX_ID,
    "rt_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rt_cls_ndx:\r\n"
    "  Ingress QDP Queue Type. Range: 0 to 63.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_info_get rt_cls_ndx 0\r\n"
    "  sys_red_dp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(11)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_Q_BASED_GET_ITM_SYS_RED_INFO_GET_SYS_RED_DP_NDX_ID,
    "sys_red_dp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sys_red_dp_ndx:\r\n"
    "  The drop precedence to be affected by this configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_info_get rt_cls_ndx 0\r\n"
    "  sys_red_dp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(11)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_EG_SET_ITM_SYS_RED_EG_SET_ID,
    "sys_red_eg_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  At the outgoing FAP port, a System-Queue-Size is maintained. Per a\r\n"
    "  configurable aging-period time the queue is aged. System-Queue-Size has two\r\n"
    "  again models (when aging time arrived): reset or decrement. Reset sets the\r\n"
    "  System-Queue-Size to zero, decrement decrease the size of the OFP\r\n"
    "  System-Queue-Size with one.\r\n"
    "  Note: though this function is not an ITM function, it resides here due to\r\n"
    "  relevance to other System RED functions.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_eg_set aging_only_dec_q_size 0\r\n"
    "  reset_expired_q_size 0 aging_timer 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(12)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_EG_SET_ITM_SYS_RED_EG_SET_INFO_AGING_ONLY_DEC_Q_SIZE_ID,
    "aging_only_dec_q_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.aging_only_dec_q_size:\r\n"
    "  Indicator:1 - Only aging decrements the System-RED queue size (a smaller\r\n"
    "  value from the same flow does not affect the Max-Q-size).0 - Flow status\r\n"
    "  message and aging can decrement System-RED queue size.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_eg_set aging_only_dec_q_size 0\r\n"
    "  reset_expired_q_size 0 aging_timer 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_EG_SET_ITM_SYS_RED_EG_SET_INFO_RESET_EXPIRED_Q_SIZE_ID,
    "reset_expired_q_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.reset_expired_q_size:\r\n"
    "  Indicator:1 - The 'aging timer' mechanism resets the queue size. 0 - The\r\n"
    "  'aging timer' mechanism decrements it by one. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_eg_set aging_only_dec_q_size 0\r\n"
    "  reset_expired_q_size 0 aging_timer 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_EG_SET_ITM_SYS_RED_EG_SET_INFO_AGING_TIMER_ID,
    "aging_timer",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.aging_timer:\r\n"
    "  Unit in millisecond.Every 'aging_timer' the aging mechanism accesses the\r\n"
    "  queue size saved for a port. If a message has been received with an updated\r\n"
    "  queue size since the last time the aging mechanism accessed the port this\r\n"
    "  mechanism continues on to the next port. Otherwise it changes the queue size\r\n"
    "  according to 'reset_expired_q_size'. Values of 0 or 1 means do not decrement\r\n"
    "  the queue size values.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_eg_set aging_only_dec_q_size 0\r\n"
    "  reset_expired_q_size 0 aging_timer 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_EG_SET_ITM_SYS_RED_EG_SET_INFO_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable:\r\n"
    "  Indicator:1 - System RED is enabled in Scheduler. 0 - System RED is disabled\r\n"
    "  in Scheduler.Note: If disabled, the System Red mechanism in the SCH is shut,\r\n"
    "  meaning that the Max-Q-Size that is sent from the scheduler in the mechanism\r\n"
    "  is always 0 and therefore packets are always admitted when referring to this\r\n"
    "  test.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_eg_set aging_only_dec_q_size 0\r\n"
    "  reset_expired_q_size 0 aging_timer 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_EG_GET_ITM_SYS_RED_EG_GET_ID,
    "sys_red_eg_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  At the outgoing FAP port, a System-Queue-Size is maintained. Per a\r\n"
    "  configurable aging-period time the queue is aged. System-Queue-Size has two\r\n"
    "  again models (when aging time arrived): reset or decrement. Reset sets the\r\n"
    "  System-Queue-Size to zero, decrement decrease the size of the OFP\r\n"
    "  System-Queue-Size with one.\r\n"
    "  Note: though this function is not an ITM function, it resides here due to\r\n"
    "  relevance to other System RED functions.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_eg_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(13)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_ID,
    "sys_red_glob_rcs_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  In the System Red mechanism there is an aspect of Consumed Resources. This\r\n"
    "  mechanism gives the queues a value that is compared with the value of the\r\n"
    "  queue size index - the maximum of the 2 is sent to the threshold tests.The\r\n"
    "  queues are divided to 4 ranges. In 3 types: Free Unicast Data buffers\r\n"
    "  Thresholds, Free Multicast Data buffers Thresholds, Free BD buffers\r\n"
    "  Thresholds. This function determines the thresholds of the ranges and the\r\n"
    "  values of the ranges (0-15).\r\n"
    "  Note that the value of the queue is attributed to the consumed resources (as\r\n"
    "  opposed to the free resources).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_INFO_VALUES_BDS_RANG_VALS_INDEX_ID,
    "bds_rang_vals_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  bds_rang_vals_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_INFO_VALUES_BDS_RANG_VALS_ID,
    "bds_rang_vals",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.values.bds_rang_vals[ prm_bds_rang_vals_index]:\r\n"
    "  Free BD buffers range values.Value = [0..15].\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_INFO_VALUES_MULTICAST_RNG_VALS_INDEX_ID,
    "multicast_rng_vals_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_rng_vals_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_INFO_VALUES_MULTICAST_RNG_VALS_ID,
    "multicast_rng_vals",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.values.multicast_rng_vals[ prm_multicast_rng_vals_index]:\r\n"
    "  Free Multicast Data buffers range valuesValue = [0..15].\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_INFO_VALUES_UNICAST_RNG_VALS_INDEX_ID,
    "unicast_rng_vals_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  unicast_rng_vals_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_INFO_VALUES_UNICAST_RNG_VALS_ID,
    "unicast_rng_vals",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.values.unicast_rng_vals[ prm_unicast_rng_vals_index]:\r\n"
    "  Free Unicast Data buffers range values, used for configuring values of the\r\n"
    "  ranges of the consumed resources. Define respective source-Q-sizes values for\r\n"
    "  each range of the Free Data buffers.Source-Q-size value assigned to\r\n"
    "  Range-0/1/2/3. Value = [0..15].\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_INFO_THRESHOLDS_BDS_RNG_THS_INDEX_ID,
    "bds_rng_ths_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  bds_rng_ths_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_INFO_THRESHOLDS_BDS_RNG_THS_ID,
    "bds_rng_ths",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.thresholds.bds_rng_ths[ prm_bds_rng_ths_index]:\r\n"
    "  Free BD buffers Thresholds.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_INFO_THRESHOLDS_MULTICAST_RNG_THS_INDEX_ID,
    "multicast_rng_ths_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_rng_ths_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_INFO_THRESHOLDS_MULTICAST_RNG_THS_ID,
    "multicast_rng_ths",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.thresholds.multicast_rng_ths[ prm_multicast_rng_ths_index]:\r\n"
    "  Free Multicast Data buffers Thresholds.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_INFO_THRESHOLDS_UNICAST_RNG_THS_INDEX_ID,
    "unicast_rng_ths_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  unicast_rng_ths_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_SET_ITM_SYS_RED_GLOB_RCS_SET_INFO_THRESHOLDS_UNICAST_RNG_THS_ID,
    "unicast_rng_ths",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.thresholds.unicast_rng_ths[ prm_unicast_rng_ths_index]:\r\n"
    "  Free Unicast Data buffers Thresholds, used for configuring thresholds of\r\n"
    "  consumed resources. Free Data buffers Threshold Define value.Value is used to\r\n"
    "  generate general-source-Q-size (4 bit).If free-dbuff > dbuff_th0 ->\r\n"
    "  Qsize=Val0. If\r\n"
    "  free-dbuff\r\n"
    "  between dbuff_th0 and dbuff_th1 > Qsize=Val1. If\r\n"
    "  free -dbuff\r\n"
    "  between dbuff_th2 and dbuff_th1 > Qsize=Val2If free-Uni-dbuff-\r\n"
    "  below dbuff_th2, then Qsize =Val3 Range: TBD\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_set bds_rang_vals_index 0\r\n"
    "  bds_rang_vals 0 multicast_rng_vals_index 0 multicast_rng_vals 0\r\n"
    "  unicast_rng_vals_index 0 unicast_rng_vals 0 bds_rng_ths_index 0 bds_rng_ths 0\r\n"
    "  multicast_rng_ths_index 0 multicast_rng_ths 0 unicast_rng_ths_index 0\r\n"
    "  unicast_rng_ths 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ITM_SYS_RED_GLOB_RCS_GET_ITM_SYS_RED_GLOB_RCS_GET_ID,
    "sys_red_glob_rcs_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  In the System Red mechanism there is an aspect of Consumed Resources. This\r\n"
    "  mechanism gives the queues a value that is compared with the value of the\r\n"
    "  queue size index - the maximum of the 2 is sent to the threshold tests.The\r\n"
    "  queues are divided to 4 ranges. In 3 types: Free Unicast Data buffers\r\n"
    "  Thresholds, Free Multicast Data buffers Thresholds, Free BD buffers\r\n"
    "  Thresholds. This function determines the thresholds of the ranges and the\r\n"
    "  values of the ranges (0-15).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_traffic_mgmt itm_sys_red_glob_rcs_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(15)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_INGRESS_TRAFFIC_MGMT_ID,
    "ingress_traffic_mgmt",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15), 0, 0, 0, 0, 0, 0, BIT(15)|BIT(31), BIT(0)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } ingress_traffic_mgmt*/
  #ifdef UI_INGRESS_SCHEDULER/* { ingress_scheduler*/
  {
    PARAM_TMD_INGRESS_SCHEDULER_MESH_SET_MESH_SET_ID,
    "mesh_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  MESH fabric (no FE) configure the ingress scheduler.\r\n"
    "  The configuration includes:[per-destination]-shaper-rates,\r\n"
    "  [per-destination]-weights. NOTES:1. The 'Verify' function - includes\r\n"
    "  Verification of weight and shaper values range. For Mesh also verification of\r\n"
    "  the 'nof_entries' and 'id' fields in the INFO structure.2. The 'Get' function\r\n"
    "  - The implementation of the 'get' function of the structure for the Ing Sch\r\n"
    "  Mesh configuration, the TMD_ING_SCH_MESH_INFO structure is a 'Fill All'\r\n"
    "  function. Meaning it will get the entire information of the structure from\r\n"
    "  the registers, instead of information for a specific context.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler mesh_set max_burst 0 max_rate 0 nof_entries 0\r\n"
    "  contexts_index 0 id 0 weight 0 max_burst 0 max_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(16)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_MESH_SET_MESH_SET_MESH_INFO_TOTAL_RATE_SHAPER_MAX_BURST_ID,
    "max_burst",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mesh_info.total_rate_shaper.max_burst:\r\n"
    "  Maximum bytes for a bursty flow.Range- [1 : 65,535] Value 0 is means context\r\n"
    "  blocked. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler mesh_set max_burst 0 max_rate 0 nof_entries 0\r\n"
    "  contexts_index 0 id 0 weight 0 max_burst 0 max_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_MESH_SET_MESH_SET_MESH_INFO_TOTAL_RATE_SHAPER_MAX_RATE_ID,
    "max_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mesh_info.total_rate_shaper.max_rate:\r\n"
    "  Maximum rate in the flow in kbps.Range- [1 : 0xFFFFFFFF] Value 0 is means\r\n"
    "  context blocked\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler mesh_set max_burst 0 max_rate 0 nof_entries 0\r\n"
    "  contexts_index 0 id 0 weight 0 max_burst 0 max_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_MESH_SET_MESH_SET_MESH_INFO_NOF_ENTRIES_ID,
    "nof_entries",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mesh_info.nof_entries:\r\n"
    "  The number of entries to be set in the current API call, for easier\r\n"
    "  implementation. (N/A for GET function).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler mesh_set max_burst 0 max_rate 0 nof_entries 0\r\n"
    "  contexts_index 0 id 0 weight 0 max_burst 0 max_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_MESH_SET_MESH_SET_MESH_INFO_CONTEXTS_INDEX_ID,
    "contexts_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  contexts_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler mesh_set max_burst 0 max_rate 0 nof_entries 0\r\n"
    "  contexts_index 0 id 0 weight 0 max_burst 0 max_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_MESH_SET_MESH_SET_MESH_INFO_CONTEXTS_ID_ID,
    "context_id",
    (PARAM_VAL_RULES *)&TMD_ING_SCH_MESH_CONTEXTS_rule[0],
    (sizeof(TMD_ING_SCH_MESH_CONTEXTS_rule) / sizeof(TMD_ING_SCH_MESH_CONTEXTS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mesh_info.contexts[ prm_contexts_index].id:\r\n"
    "  Identifier. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler mesh_set max_burst 0 max_rate 0 nof_entries 0\r\n"
    "  contexts_index 0 id 0 weight 0 max_burst 0 max_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_MESH_SET_MESH_SET_MESH_INFO_CONTEXTS_WEIGHT_ID,
    "weight",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mesh_info.contexts[ prm_contexts_index].weight:\r\n"
    "  Weight, compared directly to the rest of the mesh contexts weights.Range- [1\r\n"
    "  : 63] Value 0 is means context blocked.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler mesh_set max_burst 0 max_rate 0 nof_entries 0\r\n"
    "  contexts_index 0 id 0 weight 0 max_burst 0 max_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_MESH_SET_MESH_SET_MESH_INFO_CONTEXTS_SHAPER_MAX_BURST_ID,
    "max_burst",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mesh_info.contexts[ prm_contexts_index].shaper.max_burst:\r\n"
    "  Maximum bytes for a bursty flow.Range- [1 : 65,535] Value 0 is means context\r\n"
    "  blocked. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler mesh_set max_burst 0 max_rate 0 nof_entries 0\r\n"
    "  contexts_index 0 id 0 weight 0 max_burst 0 max_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_MESH_SET_MESH_SET_MESH_INFO_CONTEXTS_SHAPER_MAX_RATE_ID,
    "max_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mesh_info.contexts[ prm_contexts_index].shaper.max_rate:\r\n"
    "  Maximum rate in the flow in kbps.Range- [1 : 0xFFFFFFFF] Value 0 is means\r\n"
    "  context blocked\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler mesh_set max_burst 0 max_rate 0 nof_entries 0\r\n"
    "  contexts_index 0 id 0 weight 0 max_burst 0 max_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_MESH_GET_MESH_GET_ID,
    "mesh_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  MESH fabric (no FE) configure the ingress scheduler.\r\n"
    "  The configuration includes:[per-destination]-shaper-rates,\r\n"
    "  [per-destination]-weights. NOTES:1. The 'Verify' function - includes\r\n"
    "  Verification of weight and shaper values range. For Mesh also verification of\r\n"
    "  the 'nof_entries' and 'id' fields in the INFO structure.2. The 'Get' function\r\n"
    "  - The implementation of the 'get' function of the structure for the Ing Sch\r\n"
    "  Mesh configuration, the TMD_ING_SCH_MESH_INFO structure is a 'Fill All'\r\n"
    "  function. Meaning it will get the entire information of the structure from\r\n"
    "  the registers, instead of information for a specific context.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler mesh_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(17)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_ID,
    "clos_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure configure the ingress scheduler when working with SOC_SAND CLOS\r\n"
    "  fabric (that is SOC_SAND_FE200/SOC_SAND_FE600). The configuration\r\n"
    "  includes:[local/fabric]-shaper-rates, [local/fabric]-weights.NOTES:1. The\r\n"
    "  'Verify' function - includes Verification of weight and shaper values range.\r\n"
    "  2. The 'Get' function - The implementation of the 'get' function of the\r\n"
    "  structure for the Ing Sch Clos configuration, the TMD_ING_SCH_CLOS_INFO\r\n"
    "  structure is a 'Fill All' function. Meaning it will get the entire\r\n"
    "  information of the structure from the registers, instead of information for a\r\n"
    "  specific context.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_CLOS_INFO_WEIGHTS_GLOBAL_LP_WEIGHT2_ID,
    "weight2",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clos_info.weights.global_lp.weight2:\r\n"
    "  The 2nd weight competing in the 2-flow-WFQ.Range- [1 : 63] Value 0 is means\r\n"
    "  context blocked.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_CLOS_INFO_WEIGHTS_GLOBAL_LP_WEIGHT1_ID,
    "weight1",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clos_info.weights.global_lp.weight1:\r\n"
    "  The 1st weight competing in the 2-flow-WFQ.Range- [1 : 63] Value 0 is means\r\n"
    "  context blocked.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_CLOS_INFO_WEIGHTS_GLOBAL_HP_WEIGHT2_ID,
    "weight2",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clos_info.weights.global_hp.weight2:\r\n"
    "  The 2nd weight competing in the 2-flow-WFQ.Range- [1 : 63] Value 0 is means\r\n"
    "  context blocked.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_CLOS_INFO_WEIGHTS_GLOBAL_HP_WEIGHT1_ID,
    "weight1",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clos_info.weights.global_hp.weight1:\r\n"
    "  The 1st weight competing in the 2-flow-WFQ.Range- [1 : 63] Value 0 is means\r\n"
    "  context blocked.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_CLOS_INFO_WEIGHTS_FABRIC_LP_WEIGHT2_ID,
    "weight2",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clos_info.weights.fabric_lp.weight2:\r\n"
    "  The 2nd weight competing in the 2-flow-WFQ.Range- [1 : 63] Value 0 is means\r\n"
    "  context blocked.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_CLOS_INFO_WEIGHTS_FABRIC_LP_WEIGHT1_ID,
    "weight1",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clos_info.weights.fabric_lp.weight1:\r\n"
    "  The 1st weight competing in the 2-flow-WFQ.Range- [1 : 63] Value 0 is means\r\n"
    "  context blocked.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_CLOS_INFO_WEIGHTS_FABRIC_HP_WEIGHT2_ID,
    "weight2",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clos_info.weights.fabric_hp.weight2:\r\n"
    "  The 2nd weight competing in the 2-flow-WFQ.Range- [1 : 63] Value 0 is means\r\n"
    "  context blocked.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_CLOS_INFO_WEIGHTS_FABRIC_HP_WEIGHT1_ID,
    "weight1",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clos_info.weights.fabric_hp.weight1:\r\n"
    "  The 1st weight competing in the 2-flow-WFQ.Range- [1 : 63] Value 0 is means\r\n"
    "  context blocked.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_CLOS_INFO_SHAPERS_FABRIC_MAX_BURST_ID,
    "fabric_max_burst",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clos_info.shapers.fabric.max_burst:\r\n"
    "  Maximum bytes for a bursty flow.Range- [1 : 65,535] Value 0 is means context\r\n"
    "  blocked. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_CLOS_INFO_SHAPERS_FABRIC_MAX_RATE_ID,
    "fabric_max_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clos_info.shapers.fabric.max_rate:\r\n"
    "  Maximum rate in the flow in kbps.Range- [1 : 0xFFFFFFFF] Value 0 is means\r\n"
    "  context blocked\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_CLOS_INFO_SHAPERS_LOCAL_MAX_BURST_ID,
    "local_max_burst",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clos_info.shapers.local.max_burst:\r\n"
    "  Maximum bytes for a bursty flow.Range- [1 : 65,535] Value 0 is means context\r\n"
    "  blocked. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_SET_CLOS_SET_CLOS_INFO_SHAPERS_LOCAL_MAX_RATE_ID,
    "local_max_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clos_info.shapers.local.max_rate:\r\n"
    "  Maximum rate in the flow in kbps.Range- [1 : 0xFFFFFFFF] Value 0 is means\r\n"
    "  context blocked\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_set weight2 0 weight1 0 weight2 0 weight1 0\r\n"
    "  weight2 0 weight1 0 weight2 0 weight1 0 max_burst0 0 max_rate0 0 max_burst1 0\r\n"
    "  max_rate1 0 max_burst2 0 max_rate2 0 max_burst3 0 max_rate3 0 max_burst4 0 max_rate4\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_INGRESS_SCHEDULER_CLOS_GET_CLOS_GET_ID,
    "clos_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure configure the ingress scheduler when working with SOC_SAND CLOS\r\n"
    "  fabric (that is SOC_SAND_FE200/SOC_SAND_FE600). The configuration\r\n"
    "  includes:[local/fabric]-shaper-rates, [local/fabric]-weights.NOTES:1. The\r\n"
    "  'Verify' function - includes Verification of weight and shaper values range.\r\n"
    "  2. The 'Get' function - The implementation of the 'get' function of the\r\n"
    "  structure for the Ing Sch Clos configuration, the TMD_ING_SCH_CLOS_INFO\r\n"
    "  structure is a 'Fill All' function. Meaning it will get the entire\r\n"
    "  information of the structure from the registers, instead of information for a\r\n"
    "  specific context.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ingress_scheduler clos_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(19)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_INGRESS_SCHEDULER_ID,
    "ingress_scheduler",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, BIT(16)|BIT(17)|BIT(18)|BIT(19)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } ingress_scheduler*/

  #ifdef UI_EGR_QUEUING/* { egr_queuing*/
  {
    PARAM_TMD_EGR_OFP_THRESH_TYPE_SET_EGR_OFP_THRESH_TYPE_SET_ID,
    "ofp_thresh_type_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets Outgoing FAP Port (OFP) threshold type, per port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_thresh_type_set ofp_ndx 0 ofp_thresh_type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(20)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_THRESH_TYPE_SET_EGR_OFP_THRESH_TYPE_SET_OFP_NDX_ID,
    "ofp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_ndx:\r\n"
    "  OFP index.\r\n"
    "  Range: 0 - TMD_FAP_PORT_ID_MAX\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_thresh_type_set ofp_ndx 0 ofp_thresh_type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(20)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_THRESH_TYPE_SET_EGR_OFP_THRESH_TYPE_SET_OFP_THRESH_TYPE_ID,
    "ofp_thresh_type",
    (PARAM_VAL_RULES *)&TMD_EGR_PORT_THRESH_TYPE_rule[0],
    (sizeof(TMD_EGR_PORT_THRESH_TYPE_rule) / sizeof(TMD_EGR_PORT_THRESH_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_thresh_type:\r\n"
    "  The threshold type to set.\r\n"
    "  Port-level Drop thresholds and Flow control thresholds\r\n"
    "  will be set per threshold type.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_thresh_type_set ofp_ndx 0 ofp_thresh_type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_THRESH_TYPE_GET_EGR_OFP_THRESH_TYPE_GET_ID,
    "ofp_thresh_type_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets Outgoing FAP Port (OFP) threshold type, per port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_thresh_type_get ofp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(21)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_THRESH_TYPE_GET_EGR_OFP_THRESH_TYPE_GET_OFP_NDX_ID,
    "ofp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_ndx:\r\n"
    "  OFP index.\r\n"
    "  Range: 0 - TMD_FAP_PORT_ID_MAX\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_thresh_type_get ofp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(21)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_SCHED_DROP_SET_EGR_SCHED_DROP_SET_ID,
    "sched_drop_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set scheduled drop thresholds for egress queues per queue-priority.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_sched_drop_set prio_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(22)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_SCHED_DROP_SET_EGR_SCHED_DROP_SET_PRIO_NDX_ID,
    "prio_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_Q_PRIO_rule[0],
    (sizeof(TMD_EGR_Q_PRIO_rule) / sizeof(TMD_EGR_Q_PRIO_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  prio_ndx:\r\n"
    "  Queue priority index.\r\n"
    "  Range: TMD_EGR_Q_PRIO_LOW - TMD_EGR_Q_PRIO_HIGH.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_sched_drop_set prio_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(22)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_SCHED_DROP_SET_EGR_SCHED_DROP_SET_THRESH_QUEUE_WORDS_CONSUMED_INDEX_ID,
    "queue_words_consumed_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_words_consumed_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_sched_drop_set prio_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_SCHED_DROP_SET_EGR_SCHED_DROP_SET_THRESH_QUEUE_WORDS_CONSUMED_ID,
    "queue_words_consumed",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.queue_words_consumed[ prm_queue_words_consumed_index]:\r\n"
    "  For entry with index 'i', threshold value for the number of total 32B words\r\n"
    "  in queues of type 'i', above which packets to this queues are rejected. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_sched_drop_set prio_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_SCHED_DROP_SET_EGR_SCHED_DROP_SET_THRESH_BUFFERS_AVAIL_ID,
    "buffers_avail",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.buffers_avail:\r\n"
    "  Threshold value for the number of available data buffers, below which arrived\r\n"
    "  packets are rejected. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_sched_drop_set prio_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_SCHED_DROP_SET_EGR_SCHED_DROP_SET_THRESH_DESCRIPTORS_AVAIL_ID,
    "descriptors_avail",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.descriptors_avail:\r\n"
    "  Threshold value for the number of available packet descriptors, below which\r\n"
    "  arrived packets are rejected. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_sched_drop_set prio_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_SCHED_DROP_SET_EGR_SCHED_DROP_SET_THRESH_PACKETS_CONSUMED_ID,
    "packets_consumed",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.packets_consumed:\r\n"
    "  Threshold value for the number of total number of packets, above which\r\n"
    "  arrived packets are rejected. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_sched_drop_set prio_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_SCHED_DROP_SET_EGR_SCHED_DROP_SET_THRESH_WORDS_CONSUMED_ID,
    "words_consumed",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.words_consumed:\r\n"
    "  Threshold value for the number of total consumed 32B words, above which\r\n"
    "  arrived packets are rejected.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_sched_drop_set prio_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_SCHED_DROP_GET_EGR_SCHED_DROP_GET_ID,
    "sched_drop_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set scheduled drop thresholds for egress queues per queue-priority.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_sched_drop_get prio_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(23)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_SCHED_DROP_GET_EGR_SCHED_DROP_GET_PRIO_NDX_ID,
    "prio_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_Q_PRIO_rule[0],
    (sizeof(TMD_EGR_Q_PRIO_rule) / sizeof(TMD_EGR_Q_PRIO_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  prio_ndx:\r\n"
    "  Queue priority index.\r\n"
    "  Range: TMD_EGR_Q_PRIO_LOW - TMD_EGR_Q_PRIO_HIGH.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_sched_drop_get prio_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(23)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_UNSCHED_DROP_SET_EGR_UNSCHED_DROP_SET_ID,
    "unsched_drop_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set unscheduled drop thresholds for egress queues,\r\n"
    "  per queue-priority and drop precedence.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_unsched_drop_set prio_ndx 0 dp_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(24)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_UNSCHED_DROP_SET_EGR_UNSCHED_DROP_SET_PRIO_NDX_ID,
    "prio_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_Q_PRIO_rule[0],
    (sizeof(TMD_EGR_Q_PRIO_rule) / sizeof(TMD_EGR_Q_PRIO_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  prio_ndx:\r\n"
    "  Queue priority index.\r\n"
    "  Range: TMD_EGR_Q_PRIO_LOW - TMD_EGR_Q_PRIO_HIGH.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_unsched_drop_set prio_ndx 0 dp_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(24)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_UNSCHED_DROP_SET_EGR_UNSCHED_DROP_SET_DP_NDX_ID,
    "dp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  dp_ndx:\r\n"
    "  Drop precedence index.\r\n"
    "  Range: 0 - TMD_NOF_DP-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_unsched_drop_set prio_ndx 0 dp_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(24)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_UNSCHED_DROP_SET_EGR_UNSCHED_DROP_SET_THRESH_QUEUE_WORDS_CONSUMED_INDEX_ID,
    "queue_words_consumed_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_words_consumed_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_unsched_drop_set prio_ndx 0 dp_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(24)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_UNSCHED_DROP_SET_EGR_UNSCHED_DROP_SET_THRESH_QUEUE_WORDS_CONSUMED_ID,
    "queue_words_consumed",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.queue_words_consumed[ prm_queue_words_consumed_index]:\r\n"
    "  For entry with index 'i', threshold value for the number of total 32B words\r\n"
    "  in queues of type 'i', above which packets to this queues are rejected. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_unsched_drop_set prio_ndx 0 dp_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(24)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_UNSCHED_DROP_SET_EGR_UNSCHED_DROP_SET_THRESH_BUFFERS_AVAIL_ID,
    "buffers_avail",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.buffers_avail:\r\n"
    "  Threshold value for the number of available data buffers, below which arrived\r\n"
    "  packets are rejected. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_unsched_drop_set prio_ndx 0 dp_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(24)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_UNSCHED_DROP_SET_EGR_UNSCHED_DROP_SET_THRESH_DESCRIPTORS_AVAIL_ID,
    "descriptors_avail",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.descriptors_avail:\r\n"
    "  Threshold value for the number of available packet descriptors, below which\r\n"
    "  arrived packets are rejected. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_unsched_drop_set prio_ndx 0 dp_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(24)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_UNSCHED_DROP_SET_EGR_UNSCHED_DROP_SET_THRESH_PACKETS_CONSUMED_ID,
    "packets_consumed",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.packets_consumed:\r\n"
    "  Threshold value for the number of total number of packets, above which\r\n"
    "  arrived packets are rejected. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_unsched_drop_set prio_ndx 0 dp_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(24)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_UNSCHED_DROP_SET_EGR_UNSCHED_DROP_SET_THRESH_WORDS_CONSUMED_ID,
    "words_consumed",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.words_consumed:\r\n"
    "  Threshold value for the number of total consumed 32B words, above which\r\n"
    "  arrived packets are rejected.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_unsched_drop_set prio_ndx 0 dp_ndx 0\r\n"
    "  queue_words_consumed_index 0 queue_words_consumed 0 buffers_avail 0\r\n"
    "  descriptors_avail 0 packets_consumed 0 words_consumed 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(24)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_UNSCHED_DROP_GET_EGR_UNSCHED_DROP_GET_ID,
    "unsched_drop_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set unscheduled drop thresholds for egress queues,\r\n"
    "  per queue-priority and drop precedence.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_unsched_drop_get prio_ndx 0 dp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(25)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_UNSCHED_DROP_GET_EGR_UNSCHED_DROP_GET_PRIO_NDX_ID,
    "prio_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_Q_PRIO_rule[0],
    (sizeof(TMD_EGR_Q_PRIO_rule) / sizeof(TMD_EGR_Q_PRIO_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  prio_ndx:\r\n"
    "  Queue priority index.\r\n"
    "  Range: TMD_EGR_Q_PRIO_LOW - TMD_EGR_Q_PRIO_HIGH.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_unsched_drop_get prio_ndx 0 dp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_UNSCHED_DROP_GET_EGR_UNSCHED_DROP_GET_DP_NDX_ID,
    "dp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  dp_ndx:\r\n"
    "  Drop precedence index.\r\n"
    "  Range: 0 - TMD_NOF_DP-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_unsched_drop_get prio_ndx 0 dp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_DEV_FC_SET_EGR_DEV_FC_SET_ID,
    "dev_fc_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set Flow Control thresholds for egress queues,\r\n"
    "  based on device-level resources.\r\n"
    "  Threshold are set for overall resources, and scheduled resources.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_dev_fc_set descriptors 0 buffers 0 words 0\r\n"
    "  descriptors 0 buffers 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(26)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_DEV_FC_SET_EGR_DEV_FC_SET_THRESH_SCHEDULED_DESCRIPTORS_ID,
    "descriptors",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.scheduled.descriptors:\r\n"
    "  consumed descriptors threshold\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_dev_fc_set descriptors 0 buffers 0 words 0\r\n"
    "  descriptors 0 buffers 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_DEV_FC_SET_EGR_DEV_FC_SET_THRESH_SCHEDULED_BUFFERS_ID,
    "buffers",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.scheduled.buffers:\r\n"
    "  consumed buffers threshold\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_dev_fc_set descriptors 0 buffers 0 words 0\r\n"
    "  descriptors 0 buffers 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_DEV_FC_SET_EGR_DEV_FC_SET_THRESH_SCHEDULED_WORDS_ID,
    "words",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.scheduled.words:\r\n"
    "  consumed words threshold\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_dev_fc_set descriptors 0 buffers 0 words 0\r\n"
    "  descriptors 0 buffers 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_DEV_FC_SET_EGR_DEV_FC_SET_THRESH_GLOBAL_DESCRIPTORS_ID,
    "descriptors",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.global.descriptors:\r\n"
    "  consumed descriptors threshold\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_dev_fc_set descriptors 0 buffers 0 words 0\r\n"
    "  descriptors 0 buffers 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_DEV_FC_SET_EGR_DEV_FC_SET_THRESH_GLOBAL_BUFFERS_ID,
    "buffers",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.global.buffers:\r\n"
    "  consumed buffers threshold\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_dev_fc_set descriptors 0 buffers 0 words 0\r\n"
    "  descriptors 0 buffers 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_DEV_FC_SET_EGR_DEV_FC_SET_THRESH_GLOBAL_WORDS_ID,
    "words",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.global.words:\r\n"
    "  consumed words threshold\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_dev_fc_set descriptors 0 buffers 0 words 0\r\n"
    "  descriptors 0 buffers 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_DEV_FC_GET_EGR_DEV_FC_GET_ID,
    "dev_fc_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set Flow Control thresholds for egress queues,\r\n"
    "  based on device-level resources.\r\n"
    "  Threshold are set for overall resources, and scheduled resources.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_dev_fc_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(27)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_CHNIF_FC_SET_EGR_CHNIF_FC_SET_ID,
    "chnif_fc_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set Flow Control thresholds for egress queues,\r\n"
    "  per channelized interface port,\r\n"
    "  based on Channelized NIF Ports resources.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_xaui_spaui_fc_set if_ndx 0 packets 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(28)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_CHNIF_FC_SET_EGR_CHNIF_FC_SET_IF_NDX_ID,
    "if_ndx",
    (PARAM_VAL_RULES *)&TMD_INTERFACE_ID_rule[0],
    (sizeof(TMD_INTERFACE_ID_rule) / sizeof(TMD_INTERFACE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_ndx:\r\n"
    "  Channelized NIF index.\r\n"
    "  Range: 0 - TMD_NOF_INTERFACES-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_xaui_spaui_fc_set if_ndx 0 packets 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(28)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_CHNIF_FC_SET_EGR_CHNIF_FC_SET_THRESH_PACKETS_ID,
    "packets",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.packets:\r\n"
    "  consumed packets threshold\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_xaui_spaui_fc_set if_ndx 0 packets 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_CHNIF_FC_SET_EGR_CHNIF_FC_SET_THRESH_WORDS_ID,
    "words",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.words:\r\n"
    "  consumed words threshold\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_xaui_spaui_fc_set if_ndx 0 packets 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_CHNIF_FC_GET_EGR_CHNIF_FC_GET_ID,
    "chnif_fc_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set Flow Control thresholds for egress queues,\r\n"
    "  per channelized interface port,\r\n"
    "  based on Channelized NIF Ports resources.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_xaui_spaui_fc_get if_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(29)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_CHNIF_FC_GET_EGR_CHNIF_FC_GET_IF_NDX_ID,
    "if_ndx",
    (PARAM_VAL_RULES *)&TMD_INTERFACE_ID_rule[0],
    (sizeof(TMD_INTERFACE_ID_rule) / sizeof(TMD_INTERFACE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_ndx:\r\n"
    "  Channelized NIF index.\r\n"
    "  Range: 0 - TMD_NOF_INTERFACES-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_xaui_spaui_fc_get if_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(29)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_FC_SET_EGR_OFP_FC_SET_ID,
    "ofp_fc_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set Flow Control thresholds for egress queues,\r\n"
    "  per port queue priority and threshold type,\r\n"
    "  based on Outgoing FAP Port (OFP) resources.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_fc_set prio_ndx 0 ofp_type_ndx 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(30)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_FC_SET_EGR_OFP_FC_SET_PRIO_NDX_ID,
    "prio_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_Q_PRIO_rule[0],
    (sizeof(TMD_EGR_Q_PRIO_rule) / sizeof(TMD_EGR_Q_PRIO_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  prio_ndx:\r\n"
    "  Queue priority index.\r\n"
    "  Range: TMD_EGR_Q_PRIO_LOW - TMD_EGR_Q_PRIO_HIGH.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_fc_set prio_ndx 0 ofp_type_ndx 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(30)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_FC_SET_EGR_OFP_FC_SET_OFP_TYPE_NDX_ID,
    "ofp_type_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_PORT_THRESH_TYPE_rule[0],
    (sizeof(TMD_EGR_PORT_THRESH_TYPE_rule) / sizeof(TMD_EGR_PORT_THRESH_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_type_ndx:\r\n"
    "  Per-port threshold type index.\r\n"
    "  Range: 0 - TMD_EGR_PORT_NOF_THRESH_TYPES-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_fc_set prio_ndx 0 ofp_type_ndx 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(30)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_FC_SET_EGR_OFP_FC_SET_THRESH_WORDS_ID,
    "words",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.words:\r\n"
    "  consumed words threshold, per port threshold type.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_fc_set prio_ndx 0 ofp_type_ndx 0 words 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(30)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_FC_GET_EGR_OFP_FC_GET_ID,
    "ofp_fc_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set Flow Control thresholds for egress queues,\r\n"
    "  per port queue priority and threshold type,\r\n"
    "  based on Outgoing FAP Port (OFP) resources.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_fc_get prio_ndx 0 ofp_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(31)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_FC_GET_EGR_OFP_FC_GET_PRIO_NDX_ID,
    "prio_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_Q_PRIO_rule[0],
    (sizeof(TMD_EGR_Q_PRIO_rule) / sizeof(TMD_EGR_Q_PRIO_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  prio_ndx:\r\n"
    "  Queue priority index.\r\n"
    "  Range: TMD_EGR_Q_PRIO_LOW - TMD_EGR_Q_PRIO_HIGH.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_fc_get prio_ndx 0 ofp_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(31)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_FC_GET_EGR_OFP_FC_GET_OFP_TYPE_NDX_ID,
    "ofp_type_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_PORT_THRESH_TYPE_rule[0],
    (sizeof(TMD_EGR_PORT_THRESH_TYPE_rule) / sizeof(TMD_EGR_PORT_THRESH_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_type_ndx:\r\n"
    "  Per-port threshold type index.\r\n"
    "  Range: 0 - TMD_EGR_PORT_NOF_THRESH_TYPES-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_fc_get prio_ndx 0 ofp_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, BIT(31)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_SET_EGR_MCI_FC_SET_ID,
    "mci_fc_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set Flow Control thresholds for egress queues,\r\n"
    "  per MCI priority,\r\n"
    "  based on unscheduled traffic resources.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_set mci_prio_ndx 0 descriptors_total 0\r\n"
    "  buffers_unsch 0 packets_unsch 0 words_unsch 0 enable_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(0)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_SET_EGR_MCI_FC_SET_MCI_PRIO_NDX_ID,
    "mci_prio_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_MCI_PRIO_rule[0],
    (sizeof(TMD_EGR_MCI_PRIO_rule) / sizeof(TMD_EGR_MCI_PRIO_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mci_prio_ndx:\r\n"
    "  MCI priority index.\r\n"
    "  Range: 0 - TMD_EGR_NOF_MCI_PRIORITIES-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_set mci_prio_ndx 0 descriptors_total 0\r\n"
    "  buffers_unsch 0 packets_unsch 0 words_unsch 0 enable_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(0)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_SET_EGR_MCI_FC_SET_THRESH_DESCRIPTORS_TOTAL_ID,
    "descriptors_total",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.descriptors_total:\r\n"
    "  consumed descriptors threshold\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_set mci_prio_ndx 0 descriptors_total 0\r\n"
    "  buffers_unsch 0 packets_unsch 0 words_unsch 0 enable_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_SET_EGR_MCI_FC_SET_THRESH_BUFFERS_UNSCH_ID,
    "buffers_unsch",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.buffers_unsch:\r\n"
    "  consumed buffers threshold\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_set mci_prio_ndx 0 descriptors_total 0\r\n"
    "  buffers_unsch 0 packets_unsch 0 words_unsch 0 enable_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_SET_EGR_MCI_FC_SET_THRESH_PACKETS_UNSCH_ID,
    "packets_unsch",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.packets_unsch:\r\n"
    "  consumed packets threshold\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_set mci_prio_ndx 0 descriptors_total 0\r\n"
    "  buffers_unsch 0 packets_unsch 0 words_unsch 0 enable_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_SET_EGR_MCI_FC_SET_THRESH_WORDS_UNSCH_ID,
    "words_unsch",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  thresh.words_unsch:\r\n"
    "  consumed words threshold\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_set mci_prio_ndx 0 descriptors_total 0\r\n"
    "  buffers_unsch 0 packets_unsch 0 words_unsch 0 enable_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_GET_EGR_MCI_FC_GET_ID,
    "mci_fc_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set Flow Control thresholds for egress queues,\r\n"
    "  per MCI priority,\r\n"
    "  based on unscheduled traffic resources.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_get mci_prio_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(1)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_GET_EGR_MCI_FC_GET_MCI_PRIO_NDX_ID,
    "mci_prio_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_MCI_PRIO_rule[0],
    (sizeof(TMD_EGR_MCI_PRIO_rule) / sizeof(TMD_EGR_MCI_PRIO_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mci_prio_ndx:\r\n"
    "  MCI priority index.\r\n"
    "  Range: 0 - TMD_EGR_NOF_MCI_PRIORITIES-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_get mci_prio_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(1)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_ENABLE_SET_EGR_MCI_FC_ENABLE_SET_ID,
    "mci_fc_enable_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/Disable Flow Control for-  MCI (Multicast Congestion Indication)-  ERP\r\n"
    "  (Egress Replication Port)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_enable_set mci_prio_ndx 0 mci_enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(2)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_ENABLE_SET_EGR_MCI_FC_ENABLE_SET_MCI_PRIO_NDX_ID,
    "mci_prio_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_MCI_PRIO_rule[0],
    (sizeof(TMD_EGR_MCI_PRIO_rule) / sizeof(TMD_EGR_MCI_PRIO_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mci_prio_ndx:\r\n"
    "  MCI priority index.\r\n"
    "  Range: 0 - TMD_EGR_NOF_MCI_PRIORITIES-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_enable_set mci_prio_ndx 0 mci_enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(2)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_ENABLE_SET_EGR_MCI_FC_ENABLE_SET_MCI_ENABLE_ID,
    "mci_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mci_enable:\r\n"
    "  If TRUE, the requested MCI FC will be enabled.\r\n"
    "  If FALSE, the requested MCI FC will be disabled.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_enable_set mci_prio_ndx 0 mci_enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_ENABLE_SET_EGR_MCI_FC_ENABLE_SET_ERP_ENABLE_ID,
    "erp_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  erp_enable:\r\n"
    "  Enable/Disable the Egress Replication Port (ERP) flow control.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_enable_set mci_prio_ndx 0 mci_enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_ENABLE_GET_EGR_MCI_FC_ENABLE_GET_ID,
    "mci_fc_enable_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/Disable Flow Control for-  MCI (Multicast Congestion Indication)-  ERP\r\n"
    "  (Egress Replication Port)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_enable_get mci_prio_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(3)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_MCI_FC_ENABLE_GET_EGR_MCI_FC_ENABLE_GET_MCI_PRIO_NDX_ID,
    "mci_prio_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_MCI_PRIO_rule[0],
    (sizeof(TMD_EGR_MCI_PRIO_rule) / sizeof(TMD_EGR_MCI_PRIO_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mci_prio_ndx:\r\n"
    "  MCI priority index.\r\n"
    "  Range: 0 - TMD_EGR_NOF_MCI_PRIORITIES-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_mci_fc_enable_get mci_prio_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(3)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_SCH_MODE_SET_EGR_OFP_SCH_MODE_SET_ID,
    "ofp_sch_mode_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set egress scheduling mode for outgoing FAP ports.\r\n"
    "  Two possible modes exist:\r\n"
    "  - SP between the HP (low delay) and the LP (Normal) queues,\r\n"
    "  and SP among the two HP queues, and WFQ among the LP queues.\r\n"
    "  This configuration ensures that any low delay traffic\r\n"
    "  is always sent ahead of any normal traffic.\r\n"
    "  - WFQ among overall egress scheduled and unscheduled traffic,\r\n"
    "  and SP among HP and LP.\r\n"
    "  This configuration first allocates the bandwidth\r\n"
    "  between the scheduled and the unscheduled traffic types,\r\n"
    "  then for each type ensures that low delay (HP) is sent\r\n"
    "  before normal (LP) traffic.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_sch_mode_set sch_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(4)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_SCH_MODE_SET_EGR_OFP_SCH_MODE_SET_SCH_MODE_ID,
    "mode",
    (PARAM_VAL_RULES *)&TMD_EGR_OFP_SCH_MODE_rule[0],
    (sizeof(TMD_EGR_OFP_SCH_MODE_rule) / sizeof(TMD_EGR_OFP_SCH_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sch_mode:\r\n"
    "  Outgoing FAP Port scheduling configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_sch_mode_set sch_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_SCH_MODE_GET_EGR_OFP_SCH_MODE_GET_ID,
    "ofp_sch_mode_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set egress scheduling mode for outgoing FAP ports.\r\n"
    "  Two possible modes exist:\r\n"
    "  - SP between the HP (low delay) and the LP (Normal) queues,\r\n"
    "  and SP among the two HP queues, and WFQ among the LP queues.\r\n"
    "  This configuration ensures that any low delay traffic\r\n"
    "  is always sent ahead of any normal traffic.\r\n"
    "  - WFQ among overall egress scheduled and unscheduled traffic,\r\n"
    "  and SP among HP and LP.\r\n"
    "  This configuration first allocates the bandwidth\r\n"
    "  between the scheduled and the unscheduled traffic types,\r\n"
    "  then for each type ensures that low delay (HP) is sent\r\n"
    "  before normal (LP) traffic.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_sch_mode_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(5)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_SCHEDULING_SET_EGR_OFP_SCHEDULING_SET_ID,
    "ofp_scheduling_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set per-port egress scheduling information.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_scheduling_set ofp_ndx 0 sched_weight 0\r\n"
    "  unsched_weight 0 nif_priority 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(6)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_SCHEDULING_SET_EGR_OFP_SCHEDULING_SET_OFP_NDX_ID,
    "ofp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_ndx:\r\n"
    "  Outgoing Fap Port index to configure.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_scheduling_set ofp_ndx 0 sched_weight 0\r\n"
    "  unsched_weight 0 nif_priority 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(6)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_SCHEDULING_SET_EGR_OFP_SCHEDULING_SET_INFO_OFP_WFQ_SCHED_WEIGHT_ID,
    "sched_weight",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ofp_wfq.sched_weight:\r\n"
    "  Scheduled, or Scheduled Low\r\n"
    "  weightFormat - same as unscheduled.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_scheduling_set ofp_ndx 0 sched_weight 0\r\n"
    "  unsched_weight 0 nif_priority 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_SCHEDULING_SET_EGR_OFP_SCHEDULING_SET_INFO_OFP_WFQ_UNSCHED_WEIGHT_ID,
    "unsched_weight",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ofp_wfq.unsched_weight:\r\n"
    "  Unscheduled, or Unscheduled Low weight.The lower the weight the higher the\r\n"
    "  bandwidthWeight of 0 for a class indicates that this class has SP over the\r\n"
    "  other class. When both have equal weights it implies simple RR. Range:\r\n"
    "  0-255\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_scheduling_set ofp_ndx 0 sched_weight 0\r\n"
    "  unsched_weight 0 nif_priority 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_SCHEDULING_SET_EGR_OFP_SCHEDULING_SET_INFO_NIF_PRIORITY_ID,
    "nif_priority",
    (PARAM_VAL_RULES *)&TMD_EGR_OFP_INTERFACE_PRIO_rule[0],
    (sizeof(TMD_EGR_OFP_INTERFACE_PRIO_rule) / sizeof(TMD_EGR_OFP_INTERFACE_PRIO_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.nif_priority:\r\n"
    "  Strict Priority, if mapped to channelized Interface.Otherwise - ignored by\r\n"
    "  the HW.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_scheduling_set ofp_ndx 0 sched_weight 0\r\n"
    "  unsched_weight 0 nif_priority 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_SCHEDULING_GET_EGR_OFP_SCHEDULING_GET_ID,
    "ofp_scheduling_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set per-port egress scheduling information.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_scheduling_get ofp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(7)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_OFP_SCHEDULING_GET_EGR_OFP_SCHEDULING_GET_OFP_NDX_ID,
    "ofp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_ndx:\r\n"
    "  Outgoing Fap Port index to configure.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_ofp_scheduling_get ofp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(7)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_ID,
    "q_prio_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets egress queue priority per traffic class and drop precedence.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0 prio 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(8)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_MAP_TYPE_NDX_ID,
    "map_type_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_Q_PRIO_MAPPING_TYPE_rule[0],
    (sizeof(TMD_EGR_Q_PRIO_MAPPING_TYPE_rule) / sizeof(TMD_EGR_Q_PRIO_MAPPING_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  map_type_ndx:\r\n"
    "  mapping type, defining what traffic type (unicast/multicast)\r\n"
    "  is mapped to what egress queue type (scheduled/unscheduled).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0 prio 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(8)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_TC_NDX_ID,
    "tc_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  tc_ndx:\r\n"
    "  Traffic Class, as embedded in the packet header\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0 prio 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(8)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_DP_NDX_ID,
    "dp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  dp_ndx:\r\n"
    "  Drop Precedence, as embedded in the packet header\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0 prio 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(8)},
    5,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_MAP_NDX_ID,
    "map_profile_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  dp_ndx:\r\n"
    "  Drop Precedence, as embedded in the packet header\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0 prio 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(8)},
    6,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_PRIO_TC_ID,
    "egr_tc",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  prio:\r\n"
    "  Egress Queuing priority (High/Low)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0 prio 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
   {
     PARAM_TMD_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_PRIO_DP_ID,
    "egr_dp",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  prio:\r\n"
    "  Egress Queuing priority (High/Low)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0 prio 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
 {
    PARAM_TMD_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_ID,
    "q_prio_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets egress queue priority per traffic class and drop precedence.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_q_prio_get map_type_ndx 0 tc_ndx 0 dp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(9)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_MAP_TYPE_NDX_ID,
    "map_type_ndx",
    (PARAM_VAL_RULES *)&TMD_EGR_Q_PRIO_MAPPING_TYPE_rule[0],
    (sizeof(TMD_EGR_Q_PRIO_MAPPING_TYPE_rule) / sizeof(TMD_EGR_Q_PRIO_MAPPING_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  map_type_ndx:\r\n"
    "  mapping type, defining what traffic type (unicast/multicast)\r\n"
    "  is mapped to what egress queue type (scheduled/unscheduled).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_q_prio_get map_type_ndx 0 tc_ndx 0 dp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_TC_NDX_ID,
    "tc_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  tc_ndx:\r\n"
    "  Traffic Class, as embedded in the packet header\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_q_prio_get map_type_ndx 0 tc_ndx 0 dp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_DP_NDX_ID,
    "dp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  dp_ndx:\r\n"
    "  Drop Precedence, as embedded in the packet header\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_q_prio_get map_type_ndx 0 tc_ndx 0 dp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGR_Q_PRIO_SET_EGR_Q_PRIO_GET_MAP_NDX_ID,
    "map_profile_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  dp_ndx:\r\n"
    "  Drop Precedence, as embedded in the packet header\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api egr_queuing egr_q_prio_get map_type_ndx 0 tc_ndx 0 dp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_EGR_QUEUING_ID,
    "egr_queuing",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } egr_queuing*/
#ifdef UI_OFP_RATES/* { ofp_rates*/
#ifdef UI_UNDEFED_TEMP
  {
    PARAM_TMD_OFP_RATES_VALIDATE_ID,
    "validtae",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates set validtae_cal\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(19)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_TEST_ID,
    "test",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates set validtae_cal\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(20)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* UI_UNDEFED_TEMP */
  {
    PARAM_TMD_OFP_RATES_SET_SET_ID,
    "mal_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures Outgoing FAP Ports (OFP) rates, in the end-to-end scheduler and in\r\n"
    "  the egress processor, by setting the calendars, shapers etc. The function\r\n"
    "  calculates from the given table the calendars granularity, writes it to the\r\n"
    "  device and changes the active calendars. It also saves the values in the\r\n"
    "  software database for single-entry changes in the future.For ports mapped to\r\n"
    "  Network Interfaces, The configuration is per MAC Lane.This indicates a single\r\n"
    "  interface for SPAUI/XAUI, or 4 SGMII interfaces.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(10)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_SET_SET_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&TMD_MAL_EQUIV_ID_rule[0],
    (sizeof(TMD_MAL_EQUIV_ID_rule) / sizeof(TMD_MAL_EQUIV_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_ndx:\r\n"
    "  MAC lane index for network interfaces, or equivalent.\r\n"
    "  Range: 0 - 7 for NIF, TMD_MAL_ID_CPU, TMD_MAL_ID_RCY, TMD_MAL_ID_OLP,\r\n"
    "  TMD_MAL_ID_ERP.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(10)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_SET_SET_SHAPER_EGQ_SHAPER_RATE_ID,
    "shpr_egq_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  shaper.egq_shaper.rate:\r\n"
    "  Maximal MAL shaper rate in Kbps. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_SET_SET_SHAPER_EGQ_SHAPER_RATE_UPDATE_MODE_ID,
    "shpr_egq_rate_update_mode",
    (PARAM_VAL_RULES *)&TMD_OFP_SHPR_UPDATE_MODE_rule[0],
    (sizeof(TMD_OFP_SHPR_UPDATE_MODE_rule) / sizeof(TMD_OFP_SHPR_UPDATE_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  shaper.egq_shaper.rate_update_mode:\r\n"
    "  Update mode: update according to accumulated\r\n"
    "  port rate/burst value/override/don't touch.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_SET_SET_SHAPER_SCH_SHAPER_RATE_ID,
    "shpr_sch_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  shaper.sch_shaper.rate:\r\n"
    "  Maximal MAL shaper rate in Kbps. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_SET_SET_SHAPER_SCH_SHAPER_RATE_UPDATE_MODE_ID,
    "shpr_sch_rate_update_mode",
    (PARAM_VAL_RULES *)&TMD_OFP_SHPR_UPDATE_MODE_rule[0],
    (sizeof(TMD_OFP_SHPR_UPDATE_MODE_rule) / sizeof(TMD_OFP_SHPR_UPDATE_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  shaper.sch_shaper.rate_update_mode:\r\n"
    "  Update mode: update according to accumulated\r\n"
    "  port rate/burst value/override/don't touch.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_SET_SET_OFP_RATE_TBL_RATES_INDEX_ID,
    "ofp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_ndx:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(10)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_SET_SET_OFP_RATE_TBL_RATES_MAX_BURST_ID,
    "max_burst",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_rate_tbl.rates[ prm_rates_index].max_burst:\r\n"
    "  Maximum credit balance in Bytes, that the port can accumulate, indicating the\r\n"
    "  burst size of the OFP. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_SET_SET_OFP_RATE_TBL_RATES_EGQ_RATE_ID,
    "egq_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_rate_tbl.rates[ prm_rates_index].egq_rate:\r\n"
    "  Egress shaping rate, in Kbps. Typically - a nominal port rate. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_SET_SET_OFP_RATE_TBL_RATES_SCH_RATE_ID,
    "sch_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_rate_tbl.rates[ prm_rates_index].sch_rate:\r\n"
    "  End-to-end scheduler credit rate, in Kbps. Typically - a nominal port rate +\r\n"
    "  scheduler speedup. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#ifdef UI_UNDEFED_TEMP
  {
    PARAM_TMD_OFP_ALL_RATES_GET_GET_ID,
    "all_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates all_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(25)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_ALL_RATES_GET_GET_GET_EXACT_ID,
    "exact",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates all_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(25)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* UI_UNDEFED_TEMP */
  {
    PARAM_TMD_OFP_RATES_GET_GET_ID,
    "mal_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures Outgoing FAP Ports (OFP) rates, in the end-to-end scheduler and in\r\n"
    "  the egress processor, by setting the calendars, shapers etc. The function\r\n"
    "  calculates from the given table the calendars granularity, writes it to the\r\n"
    "  device and changes the active calendars. It also saves the values in the\r\n"
    "  software database for single-entry changes in the future.For ports mapped to\r\n"
    "  Network Interfaces, The configuration is per MAC Lane.This indicates a single\r\n"
    "  interface for SPAUI/XAUI, or 4 SGMII interfaces.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates get mal_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(11)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_GET_GET_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&TMD_MAL_EQUIV_ID_rule[0],
    (sizeof(TMD_MAL_EQUIV_ID_rule) / sizeof(TMD_MAL_EQUIV_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_ndx:\r\n"
    "  MAC lane index for network interfaces, or equivalent.\r\n"
    "  Range: 0 - 7 for NIF, TMD_MAL_ID_CPU, TMD_MAL_ID_RCY, TMD_MAL_ID_OLP,\r\n"
    "  TMD_MAL_ID_ERP.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates get mal_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(11)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_UPDATE_UPDATE_ID,
      "single_port_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures a single Outgoing FAP Port (OFP) rate, in the end-to-end scheduler\r\n"
    "  and in the egress processor, by setting the calendars, shapers etc. The\r\n"
    "  function re-calculates the appropriate values from the current values and the\r\n"
    "  updated info. It also saves the values in the software database for\r\n"
    "  single-entry changes in the future.For Network Interfaces, The configuration\r\n"
    "  is per MAC Lane.This indicates a single interface for SPAUI/XAUI, or 4 SGMII\r\n"
    "  interfaces.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates update ofp_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0 max_burst 0 egq_rate 0 sch_rate 0 port_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(12)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_UPDATE_UPDATE_OFP_NDX_ID,
    "ofp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_ndx:\r\n"
    "  Outgoing FAP Port index. Range: 0 - 79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates update ofp_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0 max_burst 0 egq_rate 0 sch_rate 0 port_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(12)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_UPDATE_UPDATE_OFP_RATE_MAX_BURST_ID,
    "max_burst",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_rate.max_burst:\r\n"
    "  Maximum credit balance in Bytes, that the port can accumulate, indicating the\r\n"
    "  burst size of the OFP. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates update ofp_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0 max_burst 0 egq_rate 0 sch_rate 0 port_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_UPDATE_UPDATE_OFP_RATE_EGQ_RATE_ID,
    "egq_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_rate.egq_rate:\r\n"
    "  Egress shaping rate, in Kbps. Typically - a nominal port rate. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates update ofp_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0 max_burst 0 egq_rate 0 sch_rate 0 port_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_UPDATE_UPDATE_OFP_RATE_SCH_RATE_ID,
    "sch_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_rate.sch_rate:\r\n"
    "  End-to-end scheduler credit rate, in Kbps. Typically - a nominal port rate +\r\n"
    "  scheduler speedup. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates update ofp_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0 max_burst 0 egq_rate 0 sch_rate 0 port_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_SINGLE_PORT_GET_SINGLE_PORT_GET_ID,
    "single_port_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Get a single Outgoing FAP Port (OFP) rate/burst configuration. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates single_port_get ofp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(13)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_SINGLE_PORT_GET_SINGLE_PORT_GET_OFP_NDX_ID,
    "ofp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_ndx:\r\n"
    "  SOC_SAND_IN\r\n"
    "  uint32\r\n"
    "  ofp_ndx\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates single_port_get ofp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(13)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_MAL_SHAPER_SET_MAL_SHAPER_SET_ID,
    "mal_shaper_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure MAL-level shaping. This is required when the shaping rate is\r\n"
    "  different from the accumulated rate of the OFP-s mapped to the NIF.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates mal_shaper_set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(14)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_MAL_SHAPER_SET_MAL_SHAPER_SET_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&TMD_MAL_EQUIV_ID_rule[0],
    (sizeof(TMD_MAL_EQUIV_ID_rule) / sizeof(TMD_MAL_EQUIV_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_ndx:\r\n"
    "  MAC Lane index or non-network interface MAL equivalent.\r\n"
    "  Range: 0 - 7 for Network Interfaces. For non-network interfaces use the MAL\r\n"
    "  equivalents: TMD_MAL_ID_CPU, TMD_MAL_ID_OLP, TMD_MAL_ID_RCY.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates mal_shaper_set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(14)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_MAL_SHAPER_SET_MAL_SHAPER_SET_SHAPER_EGQ_SHAPER_RATE_ID,
    "egq_shpr_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  shaper.egq_shaper.rate:\r\n"
    "  Maximal MAL shaper rate in Kbps. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates mal_shaper_set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_MAL_SHAPER_SET_MAL_SHAPER_SET_SHAPER_EGQ_SHAPER_RATE_UPDATE_MODE_ID,
    "rate_update_mode",
    (PARAM_VAL_RULES *)&TMD_OFP_SHPR_UPDATE_MODE_rule[0],
    (sizeof(TMD_OFP_SHPR_UPDATE_MODE_rule) / sizeof(TMD_OFP_SHPR_UPDATE_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  shaper.egq_shaper.rate_update_mode:\r\n"
    "  Update mode: update according to accumulated\r\n"
    "  port rate/burst value/override/don't touch.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates mal_shaper_set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_MAL_SHAPER_SET_MAL_SHAPER_SET_SHAPER_SCH_SHAPER_RATE_ID,
    "sch_shpr_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  shaper.sch_shaper.rate:\r\n"
    "  Maximal MAL shaper rate in Kbps. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates mal_shaper_set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_MAL_SHAPER_SET_MAL_SHAPER_SET_SHAPER_SCH_SHAPER_RATE_UPDATE_MODE_ID,
    "rate_update_mode",
    (PARAM_VAL_RULES *)&TMD_OFP_SHPR_UPDATE_MODE_rule[0],
    (sizeof(TMD_OFP_SHPR_UPDATE_MODE_rule) / sizeof(TMD_OFP_SHPR_UPDATE_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  shaper.sch_shaper.rate_update_mode:\r\n"
    "  Update mode: update according to accumulated\r\n"
    "  port rate/burst value/override/don't touch.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates mal_shaper_set mal_ndx 0 rate 0 rate_update_mode 0 rate 0\r\n"
    "  rate_update_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_MAL_SHAPER_GET_MAL_SHAPER_GET_ID,
    "mal_shaper_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure MAL-level shaping. This is required when the shaping rate is\r\n"
    "  different from the accumulated rate of the OFP-s mapped to the NIF.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates mal_shaper_get mal_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(15)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_MAL_SHAPER_GET_MAL_SHAPER_GET_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&TMD_MAL_EQUIV_ID_rule[0],
    (sizeof(TMD_MAL_EQUIV_ID_rule) / sizeof(TMD_MAL_EQUIV_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_ndx:\r\n"
    "  MAC Lane index or non-network interface MAL equivalent.\r\n"
    "  Range: 0 - 7 for Network Interfaces. For non-network interfaces use the MAL\r\n"
    "  equivalents: TMD_MAL_ID_CPU, TMD_MAL_ID_OLP, TMD_MAL_ID_RCY.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates mal_shaper_get mal_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(15)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_FAT_PIPE_RATE_SET_OFP_FAT_PIPE_RATE_SET_ID,
    "fat_pipe_rate_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures Fat pipe rate, in the end-to-end scheduler and in the egress\r\n"
    "  processor, by setting the calendars, shapers etc. The function calculates\r\n"
    "  from the given table the calendars granularity, writes it to the device and\r\n"
    "  changes the active calendars. It also saves the values in the software\r\n"
    "  database for single-entry changes in the future.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates fat_pipe_rate_set max_burst 0 egq_rate 0 sch_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(25)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_FAT_PIPE_RATE_SET_OFP_FAT_PIPE_RATE_SET_FATP_RATE_MAX_BURST_ID,
    "max_burst",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fatp_rate.max_burst:\r\n"
    "  Maximum credit balance in Bytes, that the fat pipe can accumulate, indicating\r\n"
    "  the burst size of the fat pipe. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates fat_pipe_rate_set max_burst 0 egq_rate 0 sch_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_FAT_PIPE_RATE_SET_OFP_FAT_PIPE_RATE_SET_FATP_RATE_EGQ_RATE_ID,
    "egq_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fatp_rate.egq_rate:\r\n"
    "  Egress shaping rate, in Kbps. Typically - a nominal fat pipe rate. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates fat_pipe_rate_set max_burst 0 egq_rate 0 sch_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_FAT_PIPE_RATE_SET_OFP_FAT_PIPE_RATE_SET_FATP_RATE_SCH_RATE_ID,
    "sch_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fatp_rate.sch_rate:\r\n"
    "  End-to-end scheduler credit rate, in Kbps. Typically - a nominal fat pipe\r\n"
    "  rate + scheduler speedup. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates fat_pipe_rate_set max_burst 0 egq_rate 0 sch_rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_FAT_PIPE_RATE_GET_OFP_FAT_PIPE_RATE_GET_ID,
    "fat_pipe_rate_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures Fat pipe rate, in the end-to-end scheduler and in the egress\r\n"
    "  processor, by setting the calendars, shapers etc. The function calculates\r\n"
    "  from the given table the calendars granularity, writes it to the device and\r\n"
    "  changes the active calendars. It also saves the values in the software\r\n"
    "  database for single-entry changes in the future.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates fat_pipe_rate_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(26)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_UPDATE_DEVICE_SET_UPDATE_DEVICE_SET_ID,
    "update_device_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Update the device after the computation of the calendars.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates update_device_set is_device_updated 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_UPDATE_DEVICE_SET_UPDATE_DEVICE_SET_IS_DEVICE_UPDATED_ID,
    "is_device_updated",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  is_device_updated:\r\n"
    "  If True, the device is immediately updated each time the calendars are\r\n"
    "  computed (more time-consuming). Otherwise, the device is not updated.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates update_device_set is_device_updated 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_OFP_RATES_UPDATE_DEVICE_GET_UPDATE_DEVICE_GET_ID,
    "update_device_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Update the device after the computation of the calendars.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api ofp_rates update_device_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(11)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_OFP_RATES_ID,
    "ofp_rates",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15), BIT(25)|BIT(26), 0, 0, 0, 0, BIT(25), BIT(10)|BIT(11)|BIT(19)|BIT(20)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } ofp_rates*/
#ifdef UI_END2END_SCHEDULER/* { end2end_scheduler*/
  {
    PARAM_TMD_SCH_DEVICE_RATE_ENTRY_SET_SCH_DEVICE_RATE_ENTRY_SET_ID,
    "device_rate_entry_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets an entry in the device rate table. Each entry\r\n"
    "  sets a credit generation rate, for a given pair of fabric\r\n"
    "  congestion (presented by rci_level) and the number of active fabric\r\n"
    "  links.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Device Rate Memory (DRM)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler device_rate_entry_set rci_level_ndx 0\r\n"
    "  nof_active_links_ndx 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(16)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_DEVICE_RATE_ENTRY_SET_SCH_DEVICE_RATE_ENTRY_SET_RCI_LEVEL_NDX_ID,
    "rci_level_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rci_level_ndx:\r\n"
    "  RCI bucket level. Range: 0 - 7\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler device_rate_entry_set rci_level_ndx 0\r\n"
    "  nof_active_links_ndx 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(16)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_DEVICE_RATE_ENTRY_SET_SCH_DEVICE_RATE_ENTRY_SET_NOF_ACTIVE_LINKS_NDX_ID,
    "nof_active_links_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nof_active_links_ndx:\r\n"
    "  Number of current active links range: 0 - 36\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler device_rate_entry_set rci_level_ndx 0\r\n"
    "  nof_active_links_ndx 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(16)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_DEVICE_RATE_ENTRY_SET_SCH_DEVICE_RATE_ENTRY_SET_RATE_ID,
    "rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rate:\r\n"
    "  The credit generation rate, in Mega-Bit-Sec.\r\n"
    "  If 0 - no credits are generated.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler device_rate_entry_set rci_level_ndx 0\r\n"
    "  nof_active_links_ndx 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_DEVICE_RATE_ENTRY_GET_SCH_DEVICE_RATE_ENTRY_GET_ID,
    "device_rate_entry_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets an entry in the device rate table. Each entry\r\n"
    "  sets a credit generation rate, for a given pair of fabric\r\n"
    "  congestion (presented by rci_level) and the number of active fabric\r\n"
    "  links.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Device Rate Memory (DRM)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler device_rate_entry_get rci_level_ndx 0\r\n"
    "  nof_active_links_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(17)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_DEVICE_RATE_ENTRY_GET_SCH_DEVICE_RATE_ENTRY_GET_RCI_LEVEL_NDX_ID,
    "rci_level_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rci_level_ndx:\r\n"
    "  RCI bucket level. Range: 0 - 7\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler device_rate_entry_get rci_level_ndx 0\r\n"
    "  nof_active_links_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(17)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_DEVICE_RATE_ENTRY_GET_SCH_DEVICE_RATE_ENTRY_GET_NOF_ACTIVE_LINKS_NDX_ID,
    "nof_active_links_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nof_active_links_ndx:\r\n"
    "  Number of current active links range: 0 - 36\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler device_rate_entry_get rci_level_ndx 0\r\n"
    "  nof_active_links_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(17)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_DEVICE_IF_WEIGHT_IDX_SET_SCH_DEVICE_IF_WEIGHT_IDX_SET_ID,
    "device_if_weight_idx_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets, for a specified device interface,\r\n"
    "  (NIF-Ports, recycling, OLP, ERP) its weight index.\r\n"
    "  Range: 0-7.\r\n"
    "  The actual weight value (one of 8, configurable)\r\n"
    "  is in range 1-1023, 0 meaning inactive interface.\r\n"
    "  This API is only valid for Channelized interfaces - see\r\n"
    "  REMARKS section below.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler device_if_weight_idx_set if_ndx 0\r\n"
    "  weight_index 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(18)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_DEVICE_IF_WEIGHT_IDX_SET_SCH_DEVICE_IF_WEIGHT_IDX_SET_IF_NDX_ID,
    "if_ndx",
    (PARAM_VAL_RULES *)&TMD_INTERFACE_ID_rule[0],
    (sizeof(TMD_INTERFACE_ID_rule) / sizeof(TMD_INTERFACE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_ndx:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler device_if_weight_idx_set if_ndx 0\r\n"
    "  weight_index 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(18)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_DEVICE_IF_WEIGHT_IDX_SET_SCH_DEVICE_IF_WEIGHT_IDX_SET_WEIGHT_INDEX_ID,
    "weight_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  weight_index:\r\n"
    "  FUNCTION\r\n"
    "  Sets, for a specified device interface,\r\n"
    "  (NIF-Ports, recycling, OLP, ERP) its weight index.\r\n"
    "  Range: 0-7.\r\n"
    "  The actual weight value (one of 8, configurable)\r\n"
    "  is in range 1-1023, 0 meaning inactive interface.\r\n"
    "  This API is only valid for Channelized interfaces - see\r\n"
    "  REMARKS section below.INPUT\r\n"
    "  SOC_SAND_IN uint32\r\n"
    "  unit\r\n"
    "  -\r\n"
    "  Identifier of device to access.\r\n"
    "  SOC_SAND_IN TMD_INTERFACE_ID\r\n"
    "  if_ndx -\r\n"
    "  Interface index, consists of interface type,\r\n"
    "  and an interface index for network interfaces.\r\n"
    "  SOC_SAND_IN uint32\r\n"
    "  weight_index     -\r\n"
    "  Interface weight index.\r\n"
    "  Range: 0-7.\r\n"
    "  Selects one of 8 configurable weights for\r\n"
    "  interfaces WFQ.RETURNS\r\n"
    "  OK or Error indicationREMARKS\r\n"
    "  This function must not be called for CPU interface -\r\n"
    "  CPU interface is strict priority over other interfaces.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler device_if_weight_idx_set if_ndx 0\r\n"
    "  weight_index 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_DEVICE_IF_WEIGHT_IDX_GET_SCH_DEVICE_IF_WEIGHT_IDX_GET_ID,
    "device_if_weight_idx_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets, for a specified device interface,\r\n"
    "  (NIF-Ports, recycling, OLP, ERP) its weight index.\r\n"
    "  Range: 0-7.\r\n"
    "  The actual weight value (one of 8, configurable)\r\n"
    "  is in range 1-1023, 0 meaning inactive interface.\r\n"
    "  This API is only valid for Channelized interfaces - see\r\n"
    "  REMARKS section below.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler device_if_weight_idx_get if_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(19)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_DEVICE_IF_WEIGHT_IDX_GET_SCH_DEVICE_IF_WEIGHT_IDX_GET_IF_NDX_ID,
    "if_ndx",
    (PARAM_VAL_RULES *)&TMD_INTERFACE_ID_rule[0],
    (sizeof(TMD_INTERFACE_ID_rule) / sizeof(TMD_INTERFACE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_ndx:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler device_if_weight_idx_get if_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(19)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_IF_WEIGHT_CONF_SET_SCH_IF_WEIGHT_CONF_SET_ID,
    "if_weight_conf_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets the device interfaces scheduler\r\n"
    "  weight configuration.\r\n"
    "  Up to 8 weight configuration can be pre-configured.\r\n"
    "  Each scheduler interface will be configured to use one\r\n"
    "  of these pre-configured weights.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler if_weight_conf_set nof_enties 0 weight_index\r\n"
    "  0 val 0 index 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(20)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_IF_WEIGHT_CONF_SET_SCH_IF_WEIGHT_CONF_SET_IF_WEIGHTS_NOF_ENTIES_ID,
    "nof_enties",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_weights.nof_enties:\r\n"
    "  Range: 0-7\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler if_weight_conf_set nof_enties 0 weight_index\r\n"
    "  0 val 0 index 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_IF_WEIGHT_CONF_SET_SCH_IF_WEIGHT_CONF_SET_IF_WEIGHTS_WEIGHT_INDEX_ID,
    "weight_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  weight_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler if_weight_conf_set nof_enties 0 weight_index\r\n"
    "  0 val 0 index 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_IF_WEIGHT_CONF_SET_SCH_IF_WEIGHT_CONF_SET_IF_WEIGHTS_WEIGHT_VAL_ID,
    "val",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_weights.weight[ prm_weight_index].val:\r\n"
    "  range: 0 - 1023.The interface portion of the bandwidth distributed by the WFQ\r\n"
    "  will be: (1/my_weight) / (SUM: 1/i_weight), when i is running on all\r\n"
    "  interfaces.A Zero value stands for a non-active interface.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler if_weight_conf_set nof_enties 0 weight_index\r\n"
    "  0 val 0 index 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_IF_WEIGHT_CONF_SET_SCH_IF_WEIGHT_CONF_SET_IF_WEIGHTS_WEIGHT_ID_ID,
    "weight_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_weights.weight[ prm_weight_index].index:\r\n"
    "  Interface weight index.Range: 0-7\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler if_weight_conf_set nof_enties 0 weight_index\r\n"
    "  0 val 0 index 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_IF_WEIGHT_CONF_GET_SCH_IF_WEIGHT_CONF_GET_ID,
    "if_weight_conf_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets the device interfaces scheduler\r\n"
    "  weight configuration.\r\n"
    "  Up to 8 weight configuration can be pre-configured.\r\n"
    "  Each scheduler interface will be configured to use one\r\n"
    "  of these pre-configured weights.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler if_weight_conf_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(21)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#ifdef UI_UNDEFED_TEMP
  {
    PARAM_TMD_EGRESS_PORTS_QOS_SET_EGRESS_PORTS_QOS_SET_ID,
    "egress_ports_qos_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets the QoS parameters of all egress ports.\r\n"
    "  It sets the nominal rate, the maximum rate, the credit rate\r\n"
    "  and the priority.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler egress_ports_qos_set ports_index 0 priority 0\r\n"
    "  credit_bandwidth 0 max_bandwidth 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(22)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGRESS_PORTS_QOS_SET_EGRESS_PORTS_QOS_SET_PORTS_QOS_PORTS_INDEX_ID,
    "ports_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ports_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler egress_ports_qos_set ports_index 0 priority 0\r\n"
    "  credit_bandwidth 0 max_bandwidth 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGRESS_PORTS_QOS_SET_EGRESS_PORTS_QOS_SET_PORTS_QOS_PORTS_PRIORITY_ID,
    "priority",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ports_qos.ports[ prm_ports_index].priority:\r\n"
    "  The port priority for the egress strict priority scheduler\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler egress_ports_qos_set ports_index 0 priority 0\r\n"
    "  credit_bandwidth 0 max_bandwidth 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGRESS_PORTS_QOS_SET_EGRESS_PORTS_QOS_SET_PORTS_QOS_PORTS_CREDIT_BANDWIDTH_ID,
    "credit_bandwidth",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ports_qos.ports[ prm_ports_index].credit_bandwidth:\r\n"
    "  The bandwidth that the scheduler should generate to that portin Mega-Bit-Sec.\r\n"
    "  Zero value stands for a non-existing port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler egress_ports_qos_set ports_index 0 priority 0\r\n"
    "  credit_bandwidth 0 max_bandwidth 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGRESS_PORTS_QOS_SET_EGRESS_PORTS_QOS_SET_PORTS_QOS_PORTS_MAX_BANDWIDTH_ID,
    "max_bandwidth",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ports_qos.ports[ prm_ports_index].max_bandwidth:\r\n"
    "  Maximal rate in Mega-Bit-Sec, as determined by the port shaper in the traffic\r\n"
    "  manager. Zero value stands for a non-active port. If one choose not to do\r\n"
    "  shaping over the port, the redit_bandwidth value should also be set as the\r\n"
    "  max_bandwidth value.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler egress_ports_qos_set ports_index 0 priority 0\r\n"
    "  credit_bandwidth 0 max_bandwidth 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_EGRESS_PORTS_QOS_GET_EGRESS_PORTS_QOS_GET_ID,
    "egress_ports_qos_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets the QoS parameters of all egress ports.\r\n"
    "  It sets the nominal rate, the maximum rate, the credit rate\r\n"
    "  and the priority.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler egress_ports_qos_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(23)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ONE_EGRESS_PORT_QOS_SET_ONE_EGRESS_PORT_QOS_SET_ID,
    "one_egress_port_qos_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets the QoS parameters of one egress port.\r\n"
    "  It sets the nominal rate, the maximum rate, the credit rate\r\n"
    "  and the priority.\r\n"
    "  The function use an internal software database, that save all\r\n"
    "  previous setting, modify the current request and write the\r\n"
    "  modified calendars.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler one_egress_port_qos_set ofp_ndx 0 priority 0\r\n"
    "  credit_bandwidth 0 max_bandwidth 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(24)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ONE_EGRESS_PORT_QOS_SET_ONE_EGRESS_PORT_QOS_SET_OFP_NDX_ID,
    "ofp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_ndx:\r\n"
    "  The OFP to be modified.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler one_egress_port_qos_set ofp_ndx 0 priority 0\r\n"
    "  credit_bandwidth 0 max_bandwidth 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(24)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ONE_EGRESS_PORT_QOS_SET_ONE_EGRESS_PORT_QOS_SET_PORT_QOS_PRIORITY_ID,
    "priority",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_qos.priority:\r\n"
    "  The port priority for the egress strict priority scheduler\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler one_egress_port_qos_set ofp_ndx 0 priority 0\r\n"
    "  credit_bandwidth 0 max_bandwidth 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(24)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ONE_EGRESS_PORT_QOS_SET_ONE_EGRESS_PORT_QOS_SET_PORT_QOS_CREDIT_BANDWIDTH_ID,
    "credit_bandwidth",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_qos.credit_bandwidth:\r\n"
    "  The bandwidth that the scheduler should generate to that portin Mega-Bit-Sec.\r\n"
    "  Zero value stands for a non-existing port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler one_egress_port_qos_set ofp_ndx 0 priority 0\r\n"
    "  credit_bandwidth 0 max_bandwidth 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(24)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ONE_EGRESS_PORT_QOS_SET_ONE_EGRESS_PORT_QOS_SET_PORT_QOS_MAX_BANDWIDTH_ID,
    "max_bandwidth",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_qos.max_bandwidth:\r\n"
    "  Maximal rate in Mega-Bit-Sec, as determined by the port shaper in the traffic\r\n"
    "  manager. Zero value stands for a non-active port. If one choose not to do\r\n"
    "  shaping over the port, the redit_bandwidth value should also be set as the\r\n"
    "  max_bandwidth value.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler one_egress_port_qos_set ofp_ndx 0 priority 0\r\n"
    "  credit_bandwidth 0 max_bandwidth 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(24)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ONE_EGRESS_PORT_QOS_GET_ONE_EGRESS_PORT_QOS_GET_ID,
    "one_egress_port_qos_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets the QoS parameters of one egress port.\r\n"
    "  It sets the nominal rate, the maximum rate, the credit rate\r\n"
    "  and the priority.\r\n"
    "  The function use an internal software database, that save all\r\n"
    "  previous setting, modify the current request and write the\r\n"
    "  modified calendars.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler one_egress_port_qos_get ofp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(25)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ONE_EGRESS_PORT_QOS_GET_ONE_EGRESS_PORT_QOS_GET_OFP_NDX_ID,
    "ofp_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ofp_ndx:\r\n"
    "  The OFP to be modified.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api end2end_scheduler one_egress_port_qos_get ofp_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* UI_UNDEFED_TEMP */
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_ID,
    "class_type_params_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  :\r\n"
    "  Sets a single class type in the table. The driver writes\r\n"
    "  to the following tables: CL-Schedulers Type (SCT)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_set cl_type_ndx 0\r\n"
    "  enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(26)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CL_TYPE_NDX_ID,
    "cl_type_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cl_type_ndx:\r\n"
    "  The index of the class type to configure (0-255).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_set cl_type_ndx 0\r\n"
    "  enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(26)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_ENHANCED_MODE_ID,
    "cl_enhanced_mode",
    (PARAM_VAL_RULES *)&TMD_SCH_CL_ENHANCED_MODE_rule[0],
    (sizeof(TMD_SCH_CL_ENHANCED_MODE_rule) / sizeof(TMD_SCH_CL_ENHANCED_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  class_type.enhanced_mode:\r\n"
    "  One of three CL enhanced modes: disabled/enabled high priority/enabled low\r\n"
    "  priority\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_set cl_type_ndx 0\r\n"
    "  enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_WEIGHT_MODE_ID,
    "cl_weight_mode",
    (PARAM_VAL_RULES *)&TMD_SCH_CL_CLASS_WEIGHTS_MODE_rule[0],
    (sizeof(TMD_SCH_CL_CLASS_WEIGHTS_MODE_rule) / sizeof(TMD_SCH_CL_CLASS_WEIGHTS_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  class_type.weight_mode:\r\n"
    "  independent, discrete per-flow, discrete per-class\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_set cl_type_ndx 0\r\n"
    "  enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_WEIGHT_INDEX_ID,
    "cl_weight_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  weight_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_set cl_type_ndx 0\r\n"
    "  enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_WEIGHT_ID,
    "cl_weight",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  class_type.weight[ prm_weight_index]:\r\n"
    "  The discrete weights per flow or per class when they compete for credits on a\r\n"
    "  WFQ scheduler.TBD add tables of modes and weightsrange: 1 - 1024\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_set cl_type_ndx 0\r\n"
    "  enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_MODE_ID,
    "cl_mode",
    (PARAM_VAL_RULES *)&TMD_SCH_CL_CLASS_MODE_rule[0],
    (sizeof(TMD_SCH_CL_CLASS_MODE_rule) / sizeof(TMD_SCH_CL_CLASS_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  class_type.mode:\r\n"
    "  Class mode.range: 1 - 5\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_set cl_type_ndx 0\r\n"
    "  enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_SET_SCH_CLASS_TYPE_PARAMS_SET_CLASS_TYPE_ID_ID,
    "class_type_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  class_type.id:\r\n"
    "  range: 0 - 255\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_set cl_type_ndx 0\r\n"
    "  enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_GET_SCH_CLASS_TYPE_PARAMS_GET_ID,
    "class_type_params_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  :\r\n"
    "  Sets a single class type in the table. The driver writes\r\n"
    "  to the following tables: CL-Schedulers Type (SCT)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_get cl_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(27)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_GET_SCH_CLASS_TYPE_PARAMS_GET_CL_TYPE_NDX_ID,
    "cl_type_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cl_type_ndx:\r\n"
    "  The index of the class type to configure (0-255).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_get cl_type_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(27)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCH_CLASS_TYPE_PARAMS_TABLE_SET_ID,
    "class_type_params_table_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the scheduler class type table as a whole. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_table_set class_types_index\r\n"
    "  0 enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(28)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCT_CLASS_TYPES_INDEX_ID,
    "class_types_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  class_types_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_table_set class_types_index\r\n"
    "  0 enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0\r\n"
    "  nof_class_types 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCT_CLASS_TYPES_ENHANCED_MODE_ID,
    "sct_enhanced_mode",
    (PARAM_VAL_RULES *)&TMD_SCH_CL_ENHANCED_MODE_rule[0],
    (sizeof(TMD_SCH_CL_ENHANCED_MODE_rule) / sizeof(TMD_SCH_CL_ENHANCED_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sct.class_types[ prm_class_types_index].enhanced_mode:\r\n"
    "  One of three CL enhanced modes: disabled/enabled high priority/enabled low\r\n"
    "  priority\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_table_set class_types_index\r\n"
    "  0 enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCT_CLASS_TYPES_WEIGHT_MODE_ID,
    "sct_weight_mode",
    (PARAM_VAL_RULES *)&TMD_SCH_CL_CLASS_WEIGHTS_MODE_rule[0],
    (sizeof(TMD_SCH_CL_CLASS_WEIGHTS_MODE_rule) / sizeof(TMD_SCH_CL_CLASS_WEIGHTS_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sct.class_types[ prm_class_types_index].weight_mode:\r\n"
    "  independent, discrete per-flow, discrete per-class\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_table_set class_types_index\r\n"
    "  0 enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCT_CLASS_TYPES_WEIGHT_INDEX_ID,
    "sct_weight_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  weight_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_table_set class_types_index\r\n"
    "  0 enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0\r\n"
    "  nof_class_types 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCT_CLASS_TYPES_WEIGHT_ID,
    "sct_weight",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sct.class_types[ prm_class_types_index].weight[ prm_weight_index]:\r\n"
    "  The discrete weights per flow or per class when they compete for credits on a\r\n"
    "  WFQ scheduler.TBD add tables of modes and weightsrange: 1 - 1024\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_table_set class_types_index\r\n"
    "  0 enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCT_CLASS_TYPES_MODE_ID,
    "sct_mode",
    (PARAM_VAL_RULES *)&TMD_SCH_CL_CLASS_MODE_rule[0],
    (sizeof(TMD_SCH_CL_CLASS_MODE_rule) / sizeof(TMD_SCH_CL_CLASS_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sct.class_types[ prm_class_types_index].mode:\r\n"
    "  Class mode.range: 1 - 5\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_table_set class_types_index\r\n"
    "  0 enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCT_CLASS_TYPES_ID_ID,
    "cls_t_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sct.class_types[ prm_class_types_index].id:\r\n"
    "  range: 0 - 255\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_table_set class_types_index\r\n"
    "  0 enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCH_CLASS_TYPE_PARAMS_TABLE_SET_SCT_NOF_CLASS_TYPES_ID,
    "nof_entries",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sct.nof_entries:\r\n"
    "  range: 0 - 255\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_table_set class_types_index\r\n"
    "  0 enhanced_mode 0 weight_mode 0 weight_index 0 weight 0 mode 0 id 0 nof_entries 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_CLASS_TYPE_PARAMS_TABLE_GET_SCH_CLASS_TYPE_PARAMS_TABLE_GET_ID,
    "class_type_params_table_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the scheduler class type table as a whole. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler class_type_params_table_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(29)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_SLOW_MAX_RATES_SET_SCH_SLOW_MAX_RATES_SET_ID,
    "slow_max_rates_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets the slow rates.\r\n"
    "  A flow might be in slow state, and in that case lower\r\n"
    "  rate is needed.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler slow_max_rates_set rates_index 0 rates 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(30)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_SLOW_MAX_RATES_SET_SCH_SLOW_MAX_RATES_SET_SLOW_MAX_RATES_RATES_INDEX_ID,
    "rates_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rates_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler slow_max_rates_set rates_index 0 rates 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(30)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_SLOW_MAX_RATES_SET_SCH_SLOW_MAX_RATES_SET_SLOW_MAX_RATES_RATES_ID,
    "rates",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  slow_max_rates.rates[ prm_rates_index]:\r\n"
    "  Maximal rate for a flow with slow enabled, when in slow state.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler slow_max_rates_set rates_index 0 rates 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(30)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_SLOW_MAX_RATES_GET_SCH_SLOW_MAX_RATES_GET_ID,
    "slow_max_rates_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function sets the slow rates.\r\n"
    "  A flow might be in slow state, and in that case lower\r\n"
    "  rate is needed.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler slow_max_rates_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, BIT(31)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT_SCHED_SET_SCH_PORT_SCHED_SET_ID,
    "port_sched_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  :\r\n"
    "  Sets the scheduler-port state (enable/disable), its\r\n"
    "  HR mode of operation (single or dual) and low flow control\r\n"
    "  ignore policy.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Scheduler Enable Memory (SEM),\r\n"
    "  HR-Scheduler-Configuration (SHC),\r\n"
    "  Flow Group Memory (FGM)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler port_sched_set port_ndx 0 lowest_hp_class 0\r\n"
    "  hr_mode 0 max_expected_rate 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(0)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT_SCHED_SET_SCH_PORT_SCHED_SET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Port index (0-80). \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler port_sched_set port_ndx 0 lowest_hp_class 0\r\n"
    "  hr_mode 0 max_expected_rate 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(0)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT_SCHED_SET_SCH_PORT_SCHED_SET_PORT_INFO_LOWEST_HP_CLASS_ID,
    "lowest_hp_class",
    (PARAM_VAL_RULES *)&TMD_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0],
    (sizeof(TMD_SCH_PORT_LOWEST_HP_HR_CLASS_rule) / sizeof(TMD_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_info.lowest_hp_class:\r\n"
    "  The classes with priority specified by lowest_hp_class and above\r\n"
    "  will not be effected by low priority flow control.\r\n"
    "  Those classes will only be effected by\r\n"
    "  high priority flow control.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler port_sched_set port_ndx 0 lowest_hp_class 0\r\n"
    "  hr_mode 0 max_expected_rate 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT_SCHED_SET_SCH_PORT_SCHED_SET_PORT_INFO_HR_MODE_ID,
    "hr_mode",
    (PARAM_VAL_RULES *)&TMD_SCH_SE_HR_MODE_rule[0],
    (sizeof(TMD_SCH_SE_HR_MODE_rule) / sizeof(TMD_SCH_SE_HR_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_info.hr_mode:\r\n"
    "  The mode of the HR scheduling element used by the scheduler port\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler port_sched_set port_ndx 0 lowest_hp_class 0\r\n"
    "  hr_mode 0 max_expected_rate 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT_SCHED_SET_SCH_PORT_SCHED_SET_PORT_INFO_MAX_EXPECTED_RATE_ID,
    "max_expected_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_info.max_expected_rate:\r\n"
    "  Maximal expected port rate. Units: Mega-Bit-Sec. When opening a scheduler\r\n"
    "  port, this value is used to define port group. It should reflect the maximal\r\n"
    "  rate the port is expected to have, as opposed to current port rate.\r\n"
    "  Alternatively, TMD_SCH_PORT_MAX_EXPECTED_RATE_AUTO value may be set here.\r\n"
    "  This will case even group distribution between the scheduler ports\r\n"
    "  (A-B-C-A...), regardless of the expected rate.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler port_sched_set port_ndx 0 lowest_hp_class 0\r\n"
    "  hr_mode 0 max_expected_rate 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT_SCHED_SET_SCH_PORT_SCHED_SET_PORT_INFO_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_info.enable:\r\n"
    "  enable == TRUE means port open/update.enable == FALSE means port close.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler port_sched_set port_ndx 0 lowest_hp_class 0\r\n"
    "  hr_mode 0 max_expected_rate 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT_SCHED_GET_SCH_PORT_SCHED_GET_ID,
    "port_sched_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  :\r\n"
    "  Sets the scheduler-port state (enable/disable), its\r\n"
    "  HR mode of operation (single or dual) and low flow control\r\n"
    "  ignore policy.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Scheduler Enable Memory (SEM),\r\n"
    "  HR-Scheduler-Configuration (SHC),\r\n"
    "  Flow Group Memory (FGM)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler port_sched_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(1)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT_SCHED_GET_SCH_PORT_SCHED_GET_PORT_NDX_ID,
    "port_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\r\n"
    "  Port index (0-80). \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler port_sched_get port_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(1)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT_HP_CLASS_CONF_SET_SCH_PORT_HP_CLASS_CONF_SET_ID,
    "port_hp_class_conf_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the group of available configurations for high priority\r\n"
    "  hr class settings.\r\n"
    "  Out of 5 possible configurations, 4 are available at any time.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler port_hp_class_conf_set lowest_hp_class_index\r\n"
    "  0 lowest_hp_class 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(2)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT_HP_CLASS_CONF_SET_SCH_PORT_HP_CLASS_CONF_SET_HP_CLASS_INFO_LOWEST_HP_CLASS_INDEX_ID,
    "lowest_hp_class_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  lowest_hp_class_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler port_hp_class_conf_set lowest_hp_class_index\r\n"
    "  0 lowest_hp_class 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT_HP_CLASS_CONF_SET_SCH_PORT_HP_CLASS_CONF_SET_HP_CLASS_INFO_LOWEST_HP_CLASS_ID,
    "lowest_hp_class",
    (PARAM_VAL_RULES *)&TMD_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0],
    (sizeof(TMD_SCH_PORT_LOWEST_HP_HR_CLASS_rule) / sizeof(TMD_SCH_PORT_LOWEST_HP_HR_CLASS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  hp_class_info.lowest_hp_class[ prm_lowest_hp_class_index]:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler port_hp_class_conf_set lowest_hp_class_index\r\n"
    "  0 lowest_hp_class 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PORT_HP_CLASS_CONF_GET_SCH_PORT_HP_CLASS_CONF_GET_ID,
    "port_hp_class_conf_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the group of available configurations for high priority\r\n"
    "  hr class settings.\r\n"
    "  Out of 5 possible configurations, 4 are available at any time.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler port_hp_class_conf_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(3)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_ID,
    "aggregate_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets an aggregate scheduler.\r\n"
    "  It configures an elementary scheduler, and defines\r\n"
    "  a credit flow to this scheduler from a 'father' scheduler.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Scheduler Enable Memory (SEM),\r\n"
    "  HR-Scheduler-Configuration (SHC),\r\n"
    "  CL-Schedulers Configuration (SCC),\r\n"
    "  Flow Group Memory (FGM)\r\n"
    "  Shaper Descriptor Memory (SHD)\r\n"
    "  Flow Sub-Flow (FSF)\r\n"
    "  Flow Descriptor Memory (FDM)\r\n"
    "  Shaper Descriptor Memory Static(SHDS)\r\n"
    "  Flow Descriptor Memory Static (FDMS)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_SE_NDX_ID,
    "se_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  se_ndx:\r\n"
    "  Scheduler element index.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_INDEX_ID,
    "sub_flow_index",
    (PARAM_VAL_RULES *)&TMD_SUBFLOW_NDX_rule[0],
    (sizeof(TMD_SUBFLOW_NDX_rule) / sizeof(TMD_SUBFLOW_NDX_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sub_flow_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_SE_GROUP_ID,
    "se_group",
    (PARAM_VAL_RULES *)&TMD_SCH_GROUP_rule[0],
    (sizeof(TMD_SCH_GROUP_rule) / sizeof(TMD_SCH_GROUP_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  se.group:\r\n"
    "  scheduler flow group (A-C/Auto/None).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_SE_IS_DUAL_ID,
    "se_is_dual",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  se.is_dual:\r\n"
    "  TRUE/FALSE indication. Dual configuration effects two consecutive SE-s, and\r\n"
    "  is only relevant when both are enabled. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_SE_STATE_ID,
    "se_state",
    (PARAM_VAL_RULES *)&TMD_SCH_SE_STATE_rule[0],
    (sizeof(TMD_SCH_SE_STATE_rule) / sizeof(TMD_SCH_SE_STATE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  se.state:\r\n"
    "  enable/disable\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_SE_TYPE_INFO_CL_ID_ID,
    "se_cl_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  se.type_info.cl.id:\r\n"
    "  CL\r\n"
    "  type scheduling element\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_SE_TYPE_INFO_HR_MODE_ID,
    "se_hr_mode",
    (PARAM_VAL_RULES *)&TMD_SCH_SE_HR_MODE_rule[0],
    (sizeof(TMD_SCH_SE_HR_MODE_rule) / sizeof(TMD_SCH_SE_HR_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  se.type_info.hr.mode:\r\n"
    "  HR type scheduling element\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_IS_SLOW_ENABLED_ID,
    "flow_is_slow_enabled",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.is_slow_enabled:\r\n"
    "  Relevant for Queue bounded (simple) flows only.If TRUE, shapes credit rate\r\n"
    "  according to ShaperSlowRate1 or ShaperSlowRate2 (per-subflow configuration)\r\n"
    "  when the flow is in slow state.If FALSE, slow state is treated as normal\r\n"
    "  state (slow messages are ignored).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_CREDIT_SOURCE_ID_ID,
    "credit_src_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].credit_source.id:\r\n"
    "  Scheduler element id of the credit source.Valid range 0 - 16K-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_CREDIT_SOURCE_SE_INFO_CL_WEIGHT_ID,
    "credit_src_cl_weight",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].credit_source.se_info.cl.weight:\r\n"
    "  The sub-flow weight when it competes for credits on a WFQ schedulerThe weight\r\n"
    "  range is dependent on the CL scheduler mode:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_CREDIT_SOURCE_SE_INFO_CL_SP_CLASS_ID,
    "credit_src_cl_sp_class",
    (PARAM_VAL_RULES *)&TMD_SCH_SUB_FLOW_CL_CLASS_rule[0],
    (sizeof(TMD_SCH_SUB_FLOW_CL_CLASS_rule) / sizeof(TMD_SCH_SUB_FLOW_CL_CLASS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].credit_source.se_info.cl.sp_class:\r\n"
    "  To which of the sp classes and wfq weights is this sub-flow attached.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_CREDIT_SOURCE_SE_INFO_HR_WEIGHT_ID,
    "credit_src_hr_weight",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].credit_source.se_info.hr.weight:\r\n"
    "  The sub-flow weight when it competes for credits on a WFQ scheduler.range: 1\r\n"
    "  - 4K-1low weight <-> high priority\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_CREDIT_SOURCE_SE_INFO_HR_SP_CLASS_ID,
    "credit_src_hr_sp_class",
    (PARAM_VAL_RULES *)&TMD_SCH_SUB_FLOW_HR_CLASS_rule[0],
    (sizeof(TMD_SCH_SUB_FLOW_HR_CLASS_rule) / sizeof(TMD_SCH_SUB_FLOW_HR_CLASS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].credit_source.se_info.hr.sp_class:\r\n"
    "  On which of the sp classes is this sub-flow attached to. Values with _WFQ_\r\n"
    "  mean that the sub-flow competes on a WFQ scheduler.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_SLOW_RATE_NDX_ID,
    "subflow_slow_rate_ndx",
    (PARAM_VAL_RULES *)&TMD_SCH_SLOW_RATE_NDX_rule[0],
    (sizeof(TMD_SCH_SLOW_RATE_NDX_rule) / sizeof(TMD_SCH_SLOW_RATE_NDX_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].slow_rate_ndx:\r\n"
    "  slow rate index.Valid range 1 or 2\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_IS_VALID_ID,
    "subflow_is_valid",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].is_valid:\r\n"
    "  If true, this is a valid subflow\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_SHAPER_MAX_BURST_ID,
    "subflow_shaper_max_burst",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].shaper.max_burst:\r\n"
    "  Maximum bytes for a bursty flowrange: 0 - 512 * credit size\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_SET_SCH_AGGREGATE_SET_FLOW_SUB_FLOW_SHAPER_MAX_RATE_ID,
    "subflow_shaper_max_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].shaper.max_rate:\r\n"
    "  Maximum rate in the flow in kbps.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_set se_ndx 0 group 0 is_dual 0\r\n"
    "  no_info 0 id 0 mode 0 type 0 state 0 id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_GET_SCH_AGGREGATE_GET_ID,
    "aggregate_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets an aggregate scheduler.\r\n"
    "  It configures an elementary scheduler, and defines\r\n"
    "  a credit flow to this scheduler from a 'father' scheduler.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Scheduler Enable Memory (SEM),\r\n"
    "  HR-Scheduler-Configuration (SHC),\r\n"
    "  CL-Schedulers Configuration (SCC),\r\n"
    "  Flow Group Memory (FGM)\r\n"
    "  Shaper Descriptor Memory (SHD)\r\n"
    "  Flow Sub-Flow (FSF)\r\n"
    "  Flow Descriptor Memory (FDM)\r\n"
    "  Shaper Descriptor Memory Static(SHDS)\r\n"
    "  Flow Descriptor Memory Static (FDMS)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_get se_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(7)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_AGGREGATE_GET_SCH_AGGREGATE_GET_SE_NDX_ID,
    "se_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  se_ndx:\r\n"
    "  Scheduler element index.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler aggregate_get se_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(7)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_ID,
    "flow_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets a scheduler flow,\r\n"
    "  from a scheduling element (or elements) another element.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Scheduler Enable Memory (SEM),\r\n"
    "  Shaper Descriptor Memory Static(SHDS)\r\n"
    "  Flow Sub-Flow (FSF)\r\n"
    "  Flow Descriptor Memory Static (FDMS)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_NDX_ID,
    "flow_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow_ndx:\r\n"
    "  Flow index to configure. This index must be identical\r\n"
    "  to the subflow index of the first (even) subflow\r\n"
    "  in the flow structure.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_IS_SLOW_ENABLED_ID,
    "is_slow_enabled",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.is_slow_enabled:\r\n"
    "  Relevant for Queue bounded (simple) flows only.If TRUE, shapes credit rate\r\n"
    "  according to ShaperSlowRate1 or ShaperSlowRate2 (per-subflow configuration)\r\n"
    "  when the flow is in slow state.If FALSE, slow state is treated as normal\r\n"
    "  state (slow messages are ignored).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_FLOW_TYPE_ID,
    "flow_type",
    (PARAM_VAL_RULES *)&TMD_SCH_FLOW_TYPE_rule[0],
    (sizeof(TMD_SCH_FLOW_TYPE_rule) / sizeof(TMD_SCH_FLOW_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.flow_type:\r\n"
    "  (Simple/aggregate\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_INDEX_ID,
    "sub_flow_index",
    (PARAM_VAL_RULES *)&TMD_SUBFLOW_NDX_rule[0],
    (sizeof(TMD_SUBFLOW_NDX_rule) / sizeof(TMD_SUBFLOW_NDX_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  sub_flow_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 2 0 3 0 weight 0 weight 0 sp_class 0\r\n"
    "  weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_CREDIT_SOURCE_ID_ID,
    "credit_source_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].credit_source.id:\r\n"
    "  Scheduler element id of the credit source.Valid range 0 - 16K-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_CREDIT_SOURCE_SE_INFO_CL_WEIGHT_ID,
    "credit_src_cl_weight",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].credit_source.se_info.cl.weight:\r\n"
    "  The sub-flow weight when it competes for credits on a WFQ schedulerThe weight\r\n"
    "  range is dependent on the CL scheduler mode:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_CREDIT_SOURCE_SE_INFO_CL_SP_CLASS_ID,
    "credit_src_cl_sp_class",
    (PARAM_VAL_RULES *)&TMD_SCH_SUB_FLOW_CL_CLASS_rule[0],
    (sizeof(TMD_SCH_SUB_FLOW_CL_CLASS_rule) / sizeof(TMD_SCH_SUB_FLOW_CL_CLASS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].credit_source.se_info.cl.sp_class:\r\n"
    "  To which of the sp classes and wfq weights is this sub-flow attached.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_CREDIT_SOURCE_SE_INFO_HR_WEIGHT_ID,
    "credit_src_hr_weight",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].credit_source.se_info.hr.weight:\r\n"
    "  The sub-flow weight when it competes for credits on a WFQ scheduler.range: 1\r\n"
    "  - 4K-1low weight <-> high priority\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_CREDIT_SOURCE_SE_INFO_HR_SP_CLASS_ID,
    "credit_src_hr_sp_class",
    (PARAM_VAL_RULES *)&TMD_SCH_SUB_FLOW_HR_CLASS_rule[0],
    (sizeof(TMD_SCH_SUB_FLOW_HR_CLASS_rule) / sizeof(TMD_SCH_SUB_FLOW_HR_CLASS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].credit_source.se_info.hr.sp_class:\r\n"
    "  On which of the sp classes is this sub-flow attached to. Values with _WFQ_\r\n"
    "  mean that the sub-flow competes on a WFQ scheduler.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_SLOW_RATE_NDX_ID,
    "slow_rate_ndx",
    (PARAM_VAL_RULES *)&TMD_SCH_SLOW_RATE_NDX_rule[0],
    (sizeof(TMD_SCH_SLOW_RATE_NDX_rule) / sizeof(TMD_SCH_SLOW_RATE_NDX_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].slow_rate_ndx:\r\n"
    "  slow rate index.Valid range 1 or 2\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_SHAPER_MAX_BURST_ID,
    "shaper_max_burst",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].shaper.max_burst:\r\n"
    "  Maximum bytes for a bursty flowrange: 0 - 512 * credit size\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_SHAPER_MAX_RATE_ID,
    "shaper_max_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].shaper.max_rate:\r\n"
    "  Maximum rate in the flow in kbps.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_SET_SCH_FLOW_SET_FLOW_SUB_FLOW_IS_VALID_ID,
    "is_valid",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow.sub_flow[ prm_sub_flow_index].is_valid:\r\n"
    "  If true, this is a valid subflow\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_set flow_ndx 0 is_slow_enabled 0\r\n"
    "  flow_type 0 sub_flow_index 0 id 0 fq 0 1 0 2 0 2 0 3 0 4 0 weight 0 sp_class\r\n"
    "  0 weight 0 sp_class 0 slow_rate_ndx 0 max_burst 0 max_rate 0 id 0 is_valid 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
      PARAM_TMD_SCH_PRINT_FLOW_AND_UP_ID,
        "print_flow_and_up",
        (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
        (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
        HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
        0,0,0,0,0,0,0,
        "  Print flow info, and the scheduling scheme above it.\r\n"
        "",
#ifdef UI_TMD_API_ADD_EXAMPLE
        "Examples:\r\n"
        "  tmd_api end2end_scheduler print_flow_and_up flow_ndx 0\r\n"
#endif
        "",
        "",
      {0, 0, 0, 0, 0, 0, BIT(9)},
      2,
      /*
      * Pointer to a function to call after symbolic parameter
      * has been accepted.
      */
      (VAL_PROC_PTR)NULL
    },
  {
    PARAM_TMD_SCH_FLOW_GET_SCH_FLOW_GET_ID,
    "flow_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets a scheduler flow,\r\n"
    "  from a scheduling element (or elements) another element.\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Scheduler Enable Memory (SEM),\r\n"
    "  Shaper Descriptor Memory Static(SHDS)\r\n"
    "  Flow Sub-Flow (FSF)\r\n"
    "  Flow Descriptor Memory Static (FDMS)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_get flow_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(9)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_GET_SCH_FLOW_GET_FLOW_NDX_ID,
    "flow_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow_ndx:\r\n"
    "  Flow index to configure. This index must be identical\r\n"
    "  to the subflow index of the first (even) subflow\r\n"
    "  in the flow structure.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_get flow_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_GET_SCH_FLOW_GET_PRINT_STATUS_ID,
    "print_status",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  print_status:\r\n"
    "  TRUE to print flow status.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_get flow_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_STATUS_SET_SCH_FLOW_STATUS_SET_ID,
    "flow_status_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set flow state to off/on.\r\n"
    "  The state of the flow will be updated,\r\n"
    "  unless was configured otherwise.\r\n"
    "  Note: useful for virtual flows,\r\n"
    "  for which the flow state must be explicitly set\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_status_set flow_ndx 0 state 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(11)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_STATUS_SET_SCH_FLOW_STATUS_SET_FLOW_NDX_ID,
    "flow_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  flow_ndx:\r\n"
    "  The flow id (0-56K) of the requested flow.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_status_set flow_ndx 0 state 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(11)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_STATUS_SET_SCH_FLOW_STATUS_SET_STATE_ID,
    "state",
    (PARAM_VAL_RULES *)&TMD_SCH_FLOW_STATUS_rule[0],
    (sizeof(TMD_SCH_FLOW_STATUS_rule) / sizeof(TMD_SCH_FLOW_STATUS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  state:\r\n"
    "  The requested state.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_status_set flow_ndx 0 state 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(11)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PER1K_INFO_SET_SCH_PER1K_INFO_SET_ID,
    "per1k_info_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets flow configuration for 1K flows (256 quartets).\r\n"
    "  Flows interdigitated mode configuration must mach\r\n"
    "  the interdigitated mode configuration\r\n"
    "  of the queues they are mapped to.\r\n"
    "  Note1: the following flow configuration is not allowed:\r\n"
    "  interdigitated = TRUE, odd_even = FALSE.\r\n"
    "  The reason for this is that interdigitated configuration\r\n"
    "  defines flow-queue mapping,\r\n"
    "  but a flow with odd_even configuration = FALSE\r\n"
    "  cannot be mapped to a queue.\r\n"
    "  Note2: this configuration is only relevant to flow_id-s\r\n"
    "  in the range 24K - 56K.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler per1k_info_set k_flow_ndx 0 is_cl_cir 0\r\n"
    "  is_odd_even 0 is_interdigitated 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(13)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PER1K_INFO_SET_SCH_PER1K_INFO_SET_K_FLOW_NDX_ID,
    "k_flow_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  k_flow_ndx:\r\n"
    "  The index of the 1K flows to configure.\r\n"
    "  Range: 0 - 31.\r\n"
    "  Corresponds to flow-id range of 24K - 56K-1\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler per1k_info_set k_flow_ndx 0 is_cl_cir 0\r\n"
    "  is_odd_even 0 is_interdigitated 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(13)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PER1K_INFO_SET_SCH_PER1K_INFO_SET_PER1K_INFO_IS_CL_CIR_ID,
    "is_cl_cir",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  per1k_info.is_cl_cir:\r\n"
    "  In dual shaper configuration - defines whether CL\r\n"
    "  functions as CIR (and FQ/HR as EIR), or as EIR (and FQ/HR as CIR).The\r\n"
    "  configuration is per 256 CL-FQ/HR pairs (covers 1K flow id-s)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler per1k_info_set k_flow_ndx 0 is_cl_cir 0\r\n"
    "  is_odd_even 0 is_interdigitated 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(13)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PER1K_INFO_SET_SCH_PER1K_INFO_SET_PER1K_INFO_IS_ODD_EVEN_ID,
    "is_odd_even",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  per1k_info.is_odd_even:\r\n"
    "  TRUE/FALSE indication. Effects composite flow configuration.In a quartet\r\n"
    "  configured with odd_even = TRUE (AKA 0-1configuration), the even flow is\r\n"
    "  combined of even and the adjacent odd subflows.In a quartet configured with\r\n"
    "  odd_even = FALSE (AKA 0-2 configuration), the even flow x is combined of\r\n"
    "  subflow x and subflow x+2.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler per1k_info_set k_flow_ndx 0 is_cl_cir 0\r\n"
    "  is_odd_even 0 is_interdigitated 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(13)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PER1K_INFO_SET_SCH_PER1K_INFO_SET_PER1K_INFO_IS_INTERDIGITATED_ID,
    "is_interdigitated",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  per1k_info.is_interdigitated:\r\n"
    "  TRUE/FALSE indication. Effects flow-queue mapping. A quartet configured with\r\n"
    "  interdigitated = TRUE is combined of two scheduling elements and two simple\r\n"
    "  flows. The simple flows are mapped to queues.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler per1k_info_set k_flow_ndx 0 is_cl_cir 0\r\n"
    "  is_odd_even 0 is_interdigitated 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(13)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PER1K_INFO_GET_SCH_PER1K_INFO_GET_ID,
    "per1k_info_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets flow configuration for 1K flows (256 quartets).\r\n"
    "  Flows interdigitated mode configuration must mach\r\n"
    "  the interdigitated mode configuration\r\n"
    "  of the queues they are mapped to.\r\n"
    "  Note1: the following flow configuration is not allowed:\r\n"
    "  interdigitated = TRUE, odd_even = FALSE.\r\n"
    "  The reason for this is that interdigitated configuration\r\n"
    "  defines flow-queue mapping,\r\n"
    "  but a flow with odd_even configuration = FALSE\r\n"
    "  cannot be mapped to a queue.\r\n"
    "  Note2: this configuration is only relevant to flow_id-s\r\n"
    "  in the range 24K - 56K.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler per1k_info_get k_flow_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(14)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_PER1K_INFO_GET_SCH_PER1K_INFO_GET_K_FLOW_NDX_ID,
    "k_flow_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  k_flow_ndx:\r\n"
    "  The index of the 1K flows to configure.\r\n"
    "  Range: 0 - 31.\r\n"
    "  Corresponds to flow-id range of 24K - 56K-1\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler per1k_info_get k_flow_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_TO_QUEUE_MAPPING_SET_SCH_FLOW_TO_QUEUE_MAPPING_SET_ID,
    "flow_to_queue_mapping_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the mapping from flow to queue and to source fap.\r\n"
    "  The configuration is per quartet (up to 4 quartets).\r\n"
    "  The mapping depends on the following parameters:\r\n"
    "  - interdigitated mode\r\n"
    "  - composite mode\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Flow to Queue Mapping (FQM)\r\n"
    "  Flow to FIP Mapping (FFM)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_to_queue_mapping_set quartet_ndx 0\r\n"
    "  nof_quartets_to_map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(15)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_TO_QUEUE_MAPPING_SET_SCH_FLOW_TO_QUEUE_MAPPING_SET_QUARTET_NDX_ID,
    "quartet_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  quartet_ndx:\r\n"
    "  The index of the base quartet to configure.\r\n"
    "  Range: 0 - 8K-1.\r\n"
    "  Corresponds to flow-id range of 24K - 56K -1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_to_queue_mapping_set quartet_ndx 0\r\n"
    "  nof_quartets_to_map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(15)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_TO_QUEUE_MAPPING_SET_SCH_FLOW_TO_QUEUE_MAPPING_SET_NOF_QUARTETS_TO_MAP_ID,
    "nof_quartets_to_map",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nof_quartets_to_map:\r\n"
    "  The number of quartets to map.\r\n"
    "  This parameter is required for validation purposes only -\r\n"
    "  it can be derived from the interdigitated mode configuration\r\n"
    "  and the composite mode configuration, as following:\r\n"
    "  -------------------------------------------------\r\n"
    "  |InterDigitated | Composite | nof_quartets_to_map |\r\n"
    "  -------------------------------------------------\r\n"
    "  |\r\n"
    "  0\r\n"
    "  |\r\n"
    "  0\r\n"
    "  |\r\n"
    "  1\r\n"
    "  |\r\n"
    "  -------------------------------------------------\r\n"
    "  |\r\n"
    "  1\r\n"
    "  |\r\n"
    "  0\r\n"
    "  |\r\n"
    "  2\r\n"
    "  |\r\n"
    "  -------------------------------------------------\r\n"
    "  |\r\n"
    "  0\r\n"
    "  |\r\n"
    "  1\r\n"
    "  |\r\n"
    "  2\r\n"
    "  |\r\n"
    "  -------------------------------------------------\r\n"
    "  |\r\n"
    "  1\r\n"
    "  |\r\n"
    "  1\r\n"
    "  |\r\n"
    "  4\r\n"
    "  |\r\n"
    "  -------------------------------------------------\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_to_queue_mapping_set quartet_ndx 0\r\n"
    "  nof_quartets_to_map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(15)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_TO_QUEUE_MAPPING_SET_SCH_FLOW_TO_QUEUE_MAPPING_SET_QUARTET_FLOW_INFO_FIP_ID_ID,
    "fip_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  quartet_flow_info.fip_id:\r\n"
    "  source fap id.range: 0 - 2047\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_to_queue_mapping_set quartet_ndx 0\r\n"
    "  nof_quartets_to_map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(15)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_TO_QUEUE_MAPPING_SET_SCH_FLOW_TO_QUEUE_MAPPING_SET_QUARTET_FLOW_INFO_IS_COMPOSITE_ID,
    "is_composite",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  quartet_flow_info.is_composite:\r\n"
    "  TRUE/FALSE indication. If true, two adjacent subflows will be mapped to the\r\n"
    "  same queue.this configuration must be coherent with FSF (flow-subflow)\r\n"
    "  configuration, defining whether two subflows compose a single flow.per-quartet\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_to_queue_mapping_set quartet_ndx 0\r\n"
    "  nof_quartets_to_map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(15)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_TO_QUEUE_MAPPING_SET_SCH_FLOW_TO_QUEUE_MAPPING_SET_QUARTET_FLOW_INFO_BASE_QUEUE_ID_ID,
    "base_q_qrtt_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  quartet_flow_info.base_q_qrtt_id:\r\n"
    "  The index of the queue quartet to which the flow quartet is mapped. The\r\n"
    "  queue-to-flow mapping\r\n"
    "  of a single queue quartet effects one, two or four flow quartets, depending\r\n"
    "  on the 'Interdigitated' and 'Composite' modes. Range: 0 - 8K-1\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_to_queue_mapping_set quartet_ndx 0\r\n"
    "  nof_quartets_to_map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(15)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_TO_QUEUE_MAPPING_GET_SCH_FLOW_TO_QUEUE_MAPPING_GET_ID,
    "flow_to_queue_mapping_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the mapping from flow to queue and to source fap.\r\n"
    "  The configuration is per quartet (up to 4 quartets).\r\n"
    "  The mapping depends on the following parameters:\r\n"
    "  - interdigitated mode\r\n"
    "  - composite mode\r\n"
    "  The driver writes to the following tables:\r\n"
    "  Flow to Queue Mapping (FQM)\r\n"
    "  Flow to FIP Mapping (FFM)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_to_queue_mapping_get quartet_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(16)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SCH_FLOW_TO_QUEUE_MAPPING_GET_SCH_FLOW_TO_QUEUE_MAPPING_GET_QUARTET_NDX_ID,
    "quartet_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  quartet_ndx:\r\n"
    "  The index of the base quartet to configure.\r\n"
    "  Range: 0 - 8K-1.\r\n"
    "  Corresponds to flow-id range of 24K - 56K -1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api scheduler flow_to_queue_mapping_get quartet_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_END2END_SCHEDULER_ID,
    "scheduler",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(13)|BIT(14)|BIT(15)|BIT(16),0,0,0,BIT(19)|BIT(20)|BIT(21)|BIT(22)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } end2end_scheduler*/
  #ifdef UI_MULTICAST_INGRESS/* { multicast_ingress*/
  {
    PARAM_TMD_MULT_ING_TRAFFIC_CLASS_MAP_SET_MULT_ING_TRAFFIC_CLASS_MAP_SET_ID,
    "traffic_class_map_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Maps the embedded traffic class in the packet header to a logical traffic\r\n"
    "  class. This logical traffic class will be further used for traffic\r\n"
    "  management.Note that a class that is mapped to class '0' is equivalent to\r\n"
    "  disabling adding the class.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress traffic_class_map_set map_index 0 map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(3)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_TRAFFIC_CLASS_MAP_SET_MULT_ING_TRAFFIC_CLASS_MAP_SET_MAP_MAP_INDEX_ID,
    "map_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  map_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress traffic_class_map_set map_index 0 map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(3)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_TRAFFIC_CLASS_MAP_SET_MULT_ING_TRAFFIC_CLASS_MAP_SET_MAP_MAP_ID,
    "map",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  map.map[ prm_map_index]:\r\n"
    "  This array holds the mapping of one traffic class to another. The index of\r\n"
    "  the array is the class, which is mapped to the class in the value of the\r\n"
    "  array indicated by the certain index.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress traffic_class_map_set map_index 0 map 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(3)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_TRAFFIC_CLASS_MAP_GET_MULT_ING_TRAFFIC_CLASS_MAP_GET_ID,
    "traffic_class_map_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Maps the embedded traffic class in the packet header to a logical traffic\r\n"
    "  class. This logical traffic class will be further used for traffic\r\n"
    "  management.Note that a class that is mapped to class '0' is equivalent to\r\n"
    "  disabling adding the class.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress traffic_class_map_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(4)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_GROUP_UPDATE_MULT_ING_GROUP_UPDATE_ID,
    "group_update",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This API updates ingress-multicast-replication for the specific multicast-id,\r\n"
    "  and re-allocate if needed the devices' link-list. The user only specifies the\r\n"
    "  multicast-id, which is as the entry point to the link-list. The driver\r\n"
    "  handles all inner link-list nodes for allocation/free/moves.This function\r\n"
    "  also configures the table which indicates per Multicast ID whether to perform\r\n"
    "  ingress replication or not, if ingress replication is not chosen, fabric or\r\n"
    "  egress multicast will be performed on the packet.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress group_update multicast_id_ndx 0 outlif 0\r\n"
    "  id 0 type 0 mc_group_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(5)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_GROUP_UPDATE_MULT_ING_GROUP_UPDATE_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  Ingress-Multicast ID to set. Range: 0 - (16k-1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress group_update multicast_id_ndx 0 outlif 0\r\n"
    "  id 0 type 0 mc_group_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_GROUP_UPDATE_MULT_ING_GROUP_UPDATE_MC_GROUP_OUTLIF_ID,
    "outlif",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mc_group.outlif:\r\n"
    "  Outgoing-Logical-Interface-ID for replication copy of the packet. This is the\r\n"
    "  value in the Outgoing TM Header when the packet is sent out of a TM-type\r\n"
    "  port. That is, user should first allocate the egress-outlif in specific FAP,\r\n"
    "  then add this value to the needed ingress-multicast groups.\r\n"
    "  Ports of Packet Processing types use this field as the ARP-Pointer.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress group_update multicast_id_ndx 0 outlif 0\r\n"
    "  id 0 type 0 mc_group_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_GROUP_UPDATE_MULT_ING_GROUP_UPDATE_MC_GROUP_DESTINATION_ID_ID,
    "dest_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mc_group.destination.id:\r\n"
    "  According to destination type, one of the following:Queue id (Unicast flow).\r\n"
    "  Range: 0 - 32K-1Multicast id (System Multicast). Range: 0 - 16K-1System\r\n"
    "  Physical Port. Range: 0 - 4K-1LAG id. Range: 0 -255.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress group_update multicast_id_ndx 0 outlif 0\r\n"
    "  id 0 type 0 mc_group_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_GROUP_UPDATE_MULT_ING_GROUP_UPDATE_MC_GROUP_DESTINATION_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&TMD_DEST_TYPE_rule[0],
    (sizeof(TMD_DEST_TYPE_rule) / sizeof(TMD_DEST_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mc_group.destination.type:\r\n"
    "  Queue, multicast group or system port / LAG id (Unicast flow, System\r\n"
    "  multicast, Unicast direct accordingly).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress group_update multicast_id_ndx 0 outlif 0\r\n"
    "  id 0 type 0 mc_group_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_GROUP_UPDATE_MULT_ING_GROUP_UPDATE_MC_GROUP_SIZE_ID,
    "mc_group_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mc_group_size:\r\n"
    "  The number of members in the array (in the multicast group).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress group_update multicast_id_ndx 0 outlif 0\r\n"
    "  id 0 type 0 mc_group_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_GROUP_CLOSE_MULT_ING_GROUP_CLOSE_ID,
    "group_close",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This API closes ingress-multicast-replication for the specific multicast-id,\r\n"
    "  and frees the device's link-list. The user only specifies the multicast-id,\r\n"
    "  which is as the entry point to the link-list. All inner link-list nodes are\r\n"
    "  freed and handled by the driver.This function also configures the table which\r\n"
    "  indicates per Multicast ID whether to perform ingress replication or not, if\r\n"
    "  ingress replication is not chosen, fabric or egress multicast will be\r\n"
    "  performed on the packet.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress group_close multicast_id_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(7)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_GROUP_CLOSE_MULT_ING_GROUP_CLOSE_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  Egress-Multicast ID to set. Range: 0 - (16k-1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress group_close multicast_id_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(7)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_DESTINATION_ADD_MULT_ING_DESTINATION_ADD_ID,
    "destination_add",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Add an entry, including a destination and an outlif, to a multicast group\r\n"
    "  indicated by a multicast-id.An error is carried out in case of an invalid\r\n"
    "  entry.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress destination_add multicast_id_ndx 0\r\n"
    "  outlif 0 id 0 type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(8)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_DESTINATION_ADD_MULT_ING_DESTINATION_ADD_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  bit multicast-ID (as given from the NP). Range: 0 - (16k-1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress destination_add multicast_id_ndx 0\r\n"
    "  outlif 0 id 0 type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_DESTINATION_ADD_MULT_ING_DESTINATION_ADD_ENTRY_OUTLIF_ID,
    "outlif",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  entry.outlif:\r\n"
    "  Outgoing-Logical-Interface-ID for replication copy of the packet. This is the\r\n"
    "  value in the Outgoing TM Header when the packet is sent out of a TM-type\r\n"
    "  port. That is, user should first allocate the egress-outlif in specific FAP,\r\n"
    "  then add this value to the needed ingress-multicast groups.\r\n"
    "  Ports of Packet Processing types use this field as the ARP-Pointer.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress destination_add multicast_id_ndx 0\r\n"
    "  outlif 0 id 0 type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_DESTINATION_ADD_MULT_ING_DESTINATION_ADD_ENTRY_DESTINATION_ID_ID,
    "dst_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  entry.destination.id:\r\n"
    "  According to destination type, one of the following:Queue id (Unicast flow).\r\n"
    "  Range: 0 - 32K-1Multicast id (System Multicast). Range: 0 - 16K-1System\r\n"
    "  Physical Port. Range: 0 - 4K-1LAG id. Range: 0 -255.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress destination_add multicast_id_ndx 0\r\n"
    "  outlif 0 id 0 type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_DESTINATION_ADD_MULT_ING_DESTINATION_ADD_ENTRY_DESTINATION_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&TMD_DEST_TYPE_rule[0],
    (sizeof(TMD_DEST_TYPE_rule) / sizeof(TMD_DEST_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  entry.destination.type:\r\n"
    "  Queue, multicast group or system port / LAG id (Unicast flow, System\r\n"
    "  multicast, Unicast direct accordingly).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress destination_add multicast_id_ndx 0\r\n"
    "  outlif 0 id 0 type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_DESTINATION_REMOVE_MULT_ING_DESTINATION_REMOVE_ID,
    "destination_remove",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Removes an entry, including a destination and an outlif, from a multicast\r\n"
    "  group indicated by a multicast-id.An error is carried out in case of an\r\n"
    "  invalid entry.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress destination_remove multicast_id_ndx 0\r\n"
    "  outlif 0 id 0 type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(9)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_DESTINATION_REMOVE_MULT_ING_DESTINATION_REMOVE_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  bit multicast-ID (as given from the NP). Range: 0 - (16k-1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress destination_remove multicast_id_ndx 0\r\n"
    "  outlif 0 id 0 type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_DESTINATION_REMOVE_MULT_ING_DESTINATION_REMOVE_ENTRY_OUTLIF_ID,
    "outlif",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  entry.outlif:\r\n"
    "  Outgoing-Logical-Interface-ID for replication copy of the packet. This is the\r\n"
    "  value in the Outgoing TM Header when the packet is sent out of a TM-type\r\n"
    "  port. That is, user should first allocate the egress-outlif in specific FAP,\r\n"
    "  then add this value to the needed ingress-multicast groups.\r\n"
    "  Ports of Packet Processing types use this field as the ARP-Pointer.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress destination_remove multicast_id_ndx 0\r\n"
    "  outlif 0 id 0 type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_DESTINATION_REMOVE_MULT_ING_DESTINATION_REMOVE_ENTRY_DESTINATION_ID_ID,
    "dest_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  entry.destination.id:\r\n"
    "  According to destination type, one of the following:Queue id (Unicast flow).\r\n"
    "  Range: 0 - 32K-1Multicast id (System Multicast). Range: 0 - 16K-1System\r\n"
    "  Physical Port. Range: 0 - 4K-1LAG id. Range: 0 -255.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress destination_remove multicast_id_ndx 0\r\n"
    "  outlif 0 id 0 type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_DESTINATION_REMOVE_MULT_ING_DESTINATION_REMOVE_ENTRY_DESTINATION_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&TMD_DEST_TYPE_rule[0],
    (sizeof(TMD_DEST_TYPE_rule) / sizeof(TMD_DEST_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  entry.destination.type:\r\n"
    "  Queue, multicast group or system port / LAG id (Unicast flow, System\r\n"
    "  multicast, Unicast direct accordingly).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress destination_remove multicast_id_ndx 0\r\n"
    "  outlif 0 id 0 type 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_GROUP_SIZE_GET_MULT_ING_GROUP_SIZE_GET_ID,
    "group_size_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Returns the size of the multicast group with the specified multicast id. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress group_size_get multicast_id_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(10)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_GROUP_SIZE_GET_MULT_ING_GROUP_SIZE_GET_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  bit multicast-ID (as given from the NP). Range: 0 - (16k-1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress group_size_get multicast_id_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_ING_ALL_GROUPS_CLOSE_MULT_ING_ALL_GROUPS_CLOSE_ID,
    "all_groups_close",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Closes all opened egress multicast groups.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_ingress all_groups_close\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(12)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_MULTICAST_INGRESS_ID,
    "multicast_ingress",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } multicast_ingress*/

  #ifdef UI_MULTICAST_EGRESS/* { multicast_egress*/
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_RANGE_SET_MULT_EG_VLAN_MEMBERSHIP_GROUP_RANGE_SET_ID,
    "vlan_membership_group_range_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure configures the range of values of the multicast ids entry\r\n"
    "  points that their multicast groups are to be found according to a bitmap (as\r\n"
    "  opposed to a Link List). This range MC-IDs is used for Vlan-Membership\r\n"
    "  Multicast purposes, in this type of multicast a packet can be replicated once\r\n"
    "  to each egress port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_range_set mc_id_high\r\n"
    "  0 mc_id_low 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(13)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_RANGE_SET_MULT_EG_VLAN_MEMBERSHIP_GROUP_RANGE_SET_INFO_MC_ID_HIGH_ID,
    "mc_id_high",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.mc_id_high:\r\n"
    "  The upper value of MC-ID that is mapped to replication with bitmap.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_range_set mc_id_high\r\n"
    "  0 mc_id_low 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(13)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_RANGE_SET_MULT_EG_VLAN_MEMBERSHIP_GROUP_RANGE_SET_INFO_MC_ID_LOW_ID,
    "mc_id_low",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.mc_id_low:\r\n"
    "  The lowest value of MC-ID that is mapped to replication with bitmap.This\r\n"
    "  range configures a continuous range of MC-IDs to be used for Vlan-Membership\r\n"
    "  Multicast purposes.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_range_set mc_id_high\r\n"
    "  0 mc_id_low 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(13)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_RANGE_GET_MULT_EG_VLAN_MEMBERSHIP_GROUP_RANGE_GET_ID,
    "vlan_membership_group_range_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure configures the range of values of the multicast ids entry\r\n"
    "  points that their multicast groups are to be found according to a bitmap (as\r\n"
    "  opposed to a Link List). This range MC-IDs is used for Vlan-Membership\r\n"
    "  Multicast purposes, in this type of multicast a packet can be replicated once\r\n"
    "  to each egress port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_range_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(14)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_GROUP_CLOSE_MULT_EG_GROUP_CLOSE_ID,
    "group_close",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This API closes egress-multicast-replication group\r\n"
    "  for the specific multicast-id.\r\n"
    "  The user only specifies the multicast-id.\r\n"
    "  All inner link-list/bitmap nodes are freed and\r\n"
    "  handled by the driver\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress group_close multicast_id_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(19)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_GROUP_CLOSE_MULT_EG_GROUP_CLOSE_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  Egress-Multicast ID to set. Range: 0 - (16k-1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress group_close multicast_id_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(19)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_PORT_ADD_MULT_EG_PORT_ADD_ID,
    "port_add",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Add port members of the Egress-Multicast and/or modify the\r\n"
    "  number of logical copies required at port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress port_add multicast_id_ndx 0 outlif 0 port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(20)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_PORT_ADD_MULT_EG_PORT_ADD_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  bit multicast-ID (as given from the NP). Range: 0 - (16k-1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress port_add multicast_id_ndx 0 outlif 0 port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_PORT_ADD_MULT_EG_PORT_ADD_ENTRY_OUTLIF_ID,
    "outlif",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  entry.outlif:\r\n"
    "  Outgoing-Logical-Interface-ID for replication copy of the packet. This is the\r\n"
    "  value in the Outgoing TM Header when the packet is sent out of a TM-type\r\n"
    "  port. That is, user should first allocate the egress-outlif in specific FAP,\r\n"
    "  then add this value to the needed ingress-multicast groups.\r\n"
    "  Ports of Packet Processing types use this field as the ARP-Pointer.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress port_add multicast_id_ndx 0 outlif 0 port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_PORT_ADD_MULT_EG_PORT_ADD_ENTRY_PORT_ID,
    "port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  entry.port:\r\n"
    "  Out Going FAP-Port Id. 0 to 79\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress port_add multicast_id_ndx 0 outlif 0 port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_PORT_REMOVE_MULT_EG_PORT_REMOVE_ID,
    "port_remove",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Removes a port member of the egress multicast.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress port_remove multicast_id_ndx 0 outlif 0\r\n"
    "  port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(21)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_PORT_REMOVE_MULT_EG_PORT_REMOVE_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  SOC_SAND_IN TMD_MULT_ID\r\n"
    "  multicast_id_ndx\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress port_remove multicast_id_ndx 0 outlif 0\r\n"
    "  port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(21)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_PORT_REMOVE_MULT_EG_PORT_REMOVE_ENTRY_OUTLIF_ID,
    "outlif",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  entry.outlif:\r\n"
    "  Outgoing-Logical-Interface-ID for replication copy of the packet. This is the\r\n"
    "  value in the Outgoing TM Header when the packet is sent out of a TM-type\r\n"
    "  port. That is, user should first allocate the egress-outlif in specific FAP,\r\n"
    "  then add this value to the needed ingress-multicast groups.\r\n"
    "  Ports of Packet Processing types use this field as the ARP-Pointer.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress port_remove multicast_id_ndx 0 outlif 0\r\n"
    "  port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(21)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_PORT_REMOVE_MULT_EG_PORT_REMOVE_ENTRY_PORT_ID,
    "port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  entry.port:\r\n"
    "  Out Going FAP-Port Id. 0 to 79\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress port_remove multicast_id_ndx 0 outlif 0\r\n"
    "  port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(21)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_GROUP_SIZE_GET_MULT_EG_GROUP_SIZE_GET_ID,
    "group_size_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Returns the size of the multicast group with the specified multicast id. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress group_size_get multicast_id_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(22)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_GROUP_SIZE_GET_MULT_EG_GROUP_SIZE_GET_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  bit multicast-ID (as given from the NP). Range: 0 - (16k-1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress group_size_get multicast_id_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(22)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_ALL_GROUPS_CLOSE_MULT_EG_ALL_GROUPS_CLOSE_ID,
    "all_groups_close",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Closes all opened egress multicast groups.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress all_groups_close\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(24)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_OPEN_MULT_EG_VLAN_MEMBERSHIP_GROUP_OPEN_ID,
    "vlan_membership_group_open",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This API enables the egress-multicast-replication for the\r\n"
    "  specific multicast-id, and creates in the device the\r\n"
    "  needed bitmap. The user only specifies and a bitmap with the designated\r\n"
    "  ports. This MC-Group is used for Vlan-Membership, in this type of multicast a\r\n"
    "  packet can be replicated once to each egress port. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_open\r\n"
    "  multicast_id_ndx 0 bitmap_index 0 bitmap 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(25)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_OPEN_MULT_EG_VLAN_MEMBERSHIP_GROUP_OPEN_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  Egress-Multicast ID to set. Range: 0 - (16k-1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_open\r\n"
    "  multicast_id_ndx 0 bitmap_index 0 bitmap 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_OPEN_MULT_EG_VLAN_MEMBERSHIP_GROUP_OPEN_GROUP_BITMAP_INDEX_ID,
    "bitmap_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  bitmap_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_open\r\n"
    "  multicast_id_ndx 0 bitmap_index 0 bitmap 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_OPEN_MULT_EG_VLAN_MEMBERSHIP_GROUP_OPEN_GROUP_BITMAP_ID,
    "bitmap",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  group.bitmap[ prm_bitmap_index]:\r\n"
    "  Array of 3 longs (3*32 = 96 >80). Each bit in this array represents a port of\r\n"
    "  the OFPs (0-79). The array is constructed from 3 longs, therefore:Ports 0-31\r\n"
    "  - represented by bitmap[0].Ports 32-63 - represented by bitmap[1].Ports 64-79\r\n"
    "  - represented by bitmap[2].The entry can be calculated by (PORT div 32). And\r\n"
    "  the bit can be calculated by - (PORT mod 32).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_open\r\n"
    "  multicast_id_ndx 0 bitmap_index 0 bitmap 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_UPDATE_MULT_EG_VLAN_MEMBERSHIP_GROUP_UPDATE_ID,
    "vlan_membership_group_update",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This API updates the egress-multicast-replication definitions for the\r\n"
    "  specific multicast-id, and creates in the device the needed bitmap. The user\r\n"
    "  only specifies the mc-id and a bitmap with the designated ports. This\r\n"
    "  MC-Group is used for Vlan-Membership, in this type of multicast a packet can\r\n"
    "  be replicated once to each egress port. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_update\r\n"
    "  multicast_id_ndx 0 bitmap_index 0 bitmap 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(26)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_UPDATE_MULT_EG_VLAN_MEMBERSHIP_GROUP_UPDATE_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  SOC_SAND_IN TMD_MULT_ID\r\n"
    "  multicast_id_ndx\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_update\r\n"
    "  multicast_id_ndx 0 bitmap_index 0 bitmap 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_UPDATE_MULT_EG_VLAN_MEMBERSHIP_GROUP_UPDATE_GROUP_BITMAP_INDEX_ID,
    "bitmap_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  bitmap_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_update\r\n"
    "  multicast_id_ndx 0 bitmap_index 0 bitmap 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_UPDATE_MULT_EG_VLAN_MEMBERSHIP_GROUP_UPDATE_GROUP_BITMAP_ID,
    "bitmap",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  group.bitmap[ prm_bitmap_index]:\r\n"
    "  Array of 3 longs (3*32 = 96 >80). Each bit in this array represents a port of\r\n"
    "  the OFPs (0-79). The array is constructed from 3 longs, therefore:Ports 0-31\r\n"
    "  - represented by bitmap[0].Ports 32-63 - represented by bitmap[1].Ports 64-79\r\n"
    "  - represented by bitmap[2].The entry can be calculated by (PORT div 32). And\r\n"
    "  the bit can be calculated by - (PORT mod 32).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_update\r\n"
    "  multicast_id_ndx 0 bitmap_index 0 bitmap 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(26)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_CLOSE_MULT_EG_VLAN_MEMBERSHIP_GROUP_CLOSE_ID,
    "vlan_membership_group_close",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This API closes egress-multicast-replication group for the specific\r\n"
    "  multicast-id. The user only specifies the multicast-id. All inner designates\r\n"
    "  vlan-membership nodes are freed.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_close\r\n"
    "  multicast_id_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(27)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_CLOSE_MULT_EG_VLAN_MEMBERSHIP_GROUP_CLOSE_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  SOC_SAND_IN TMD_MULT_ID\r\n"
    "  multicast_id_ndx\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_close\r\n"
    "  multicast_id_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(27)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_PORT_ADD_MULT_EG_VLAN_MEMBERSHIP_PORT_ADD_ID,
    "vlan_membership_port_add",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Add port members of the Egress-Multicast and/or modify the\r\n"
    "  number of logical copies required at port.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_port_add multicast_id_ndx\r\n"
    "  0 port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(28)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_PORT_ADD_MULT_EG_VLAN_MEMBERSHIP_PORT_ADD_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  bit multicast-ID (as given from the NP). Range: 0 - (16k-1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_port_add multicast_id_ndx\r\n"
    "  0 port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_PORT_ADD_MULT_EG_VLAN_MEMBERSHIP_PORT_ADD_PORT_ID,
    "port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port:\r\n"
    "  Data-port to include in the group. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_port_add multicast_id_ndx\r\n"
    "  0 port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(28)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_PORT_REMOVE_MULT_EG_VLAN_MEMBERSHIP_PORT_REMOVE_ID,
    "vlan_membership_port_remove",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Removes a port member of the egress multicast.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_port_remove\r\n"
    "  multicast_id_ndx 0 port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(29)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_PORT_REMOVE_MULT_EG_VLAN_MEMBERSHIP_PORT_REMOVE_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  SOC_SAND_IN TMD_MULT_ID\r\n"
    "  multicast_id_ndx\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_port_remove\r\n"
    "  multicast_id_ndx 0 port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(29)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_PORT_REMOVE_MULT_EG_VLAN_MEMBERSHIP_PORT_REMOVE_PORT_ID,
    "port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port:\r\n"
    "  Data-port to exclude from the group.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_port_remove\r\n"
    "  multicast_id_ndx 0 port 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(29)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_GET_MULT_EG_VLAN_MEMBERSHIP_GROUP_GET_ID,
    "vlan_membership_group_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Gets the multicast group with the specified multicast id. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_get multicast_id_ndx\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(30)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_GROUP_GET_MULT_EG_VLAN_MEMBERSHIP_GROUP_GET_MULTICAST_ID_NDX_ID,
    "multicast_id_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  multicast_id_ndx:\r\n"
    "  bit multicast-ID (as given from the NP). Range: 0 - (16k-1).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_group_get multicast_id_ndx\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(30)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_EG_VLAN_MEMBERSHIP_ALL_GROUPS_CLOSE_MULT_EG_VLAN_MEMBERSHIP_ALL_GROUPS_CLOSE_ID,
    "vlan_membership_all_groups_close",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Closes all opened egress multicast groups in range of vlan membership. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_egress vlan_membership_all_groups_close\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(31)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_MULTICAST_EGRESS_ID,
    "multicast_egress",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } multicast_egress*/

  #ifdef UI_MULTICAST_FABRIC/* { multicast_fabric*/
  {
    PARAM_TMD_MULT_FABRIC_TRAFFIC_CLASS_TO_MULTICAST_CLS_MAP_SET_MULT_FABRIC_TRAFFIC_CLASS_TO_MULTICAST_CLS_MAP_SET_ID,
    "traffic_class_to_multicast_cls_map_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Maps the embedded traffic class in the packet header to a multicast class\r\n"
    "  (0..3). This multicast class will be further used for egress/fabric\r\n"
    "  replication.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_traffic_class_to_multicast_cls_map_set\r\n"
    "  tr_cls_ndx 0 new_mult_cls 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(0)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_TRAFFIC_CLASS_TO_MULTICAST_CLS_MAP_SET_MULT_FABRIC_TRAFFIC_CLASS_TO_MULTICAST_CLS_MAP_SET_TR_CLS_NDX_ID,
    "tr_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  tr_cls_ndx:\r\n"
    "  the traffic class index, for which to map a new class.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_traffic_class_to_multicast_cls_map_set\r\n"
    "  tr_cls_ndx 0 new_mult_cls 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(0)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_TRAFFIC_CLASS_TO_MULTICAST_CLS_MAP_SET_MULT_FABRIC_TRAFFIC_CLASS_TO_MULTICAST_CLS_MAP_SET_NEW_MULT_CLS_ID,
    "new_mult_cls",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  new_mult_cls:\r\n"
    "  The new multicast class that is mapped to the tr_cls_ndx.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_traffic_class_to_multicast_cls_map_set\r\n"
    "  tr_cls_ndx 0 new_mult_cls 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_TRAFFIC_CLASS_TO_MULTICAST_CLS_MAP_GET_MULT_FABRIC_TRAFFIC_CLASS_TO_MULTICAST_CLS_MAP_GET_ID,
    "traffic_class_to_multicast_cls_map_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Maps the embedded traffic class in the packet header to a multicast class\r\n"
    "  (0..3). This multicast class will be further used for egress/fabric\r\n"
    "  replication.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_traffic_class_to_multicast_cls_map_get\r\n"
    "  tr_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(1)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_TRAFFIC_CLASS_TO_MULTICAST_CLS_MAP_GET_MULT_FABRIC_TRAFFIC_CLASS_TO_MULTICAST_CLS_MAP_GET_TR_CLS_NDX_ID,
    "tr_cls_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  tr_cls_ndx:\r\n"
    "  the traffic class index, for which to map a new class.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_traffic_class_to_multicast_cls_map_get\r\n"
    "  tr_cls_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(1)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_BASE_QUEUE_SET_MULT_FABRIC_BASE_QUEUE_SET_ID,
    "base_queue_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure configures the base queue of the multicast egress/fabric.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_base_queue_set queue_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(2)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_BASE_QUEUE_SET_MULT_FABRIC_BASE_QUEUE_SET_QUEUE_ID_ID,
    "queue_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_id:\r\n"
    "  the base queue of fabric or egress multicast packets.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_base_queue_set queue_id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_BASE_QUEUE_GET_MULT_FABRIC_BASE_QUEUE_GET_ID,
    "base_queue_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure configures the base queue of the multicast egress/fabric.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_base_queue_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(3)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_ID,
    "credit_source_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set the Fabric Multicast credit generator configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_CREDITS_VIA_SCH_ID,
    "credits_via_sch",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.credits_via_sch:\r\n"
    "  Determines if the scheduler will distribute credits or the IPS directly.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_MAX_RATE_ID,
    "max_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.max_rate:\r\n"
    "  The maximum rate in which credits are generated.Range: Minimum - 123 kbps\r\n"
    "  Maximum - 80 Gbps\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BEST_INDEX_ID,
    "be_sch_port_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  be_sch_port_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BEST_WEIGHT_ID,
    "be_weight",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.best_effort.be_sch_port[ be_sch_port_index].weight:\r\n"
    "  The proportion in which credits are generated. Range 0 (max) to 15 (min). \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BEST_BEST_MULTICAST_CLASS_VALID_ID,
    "be_multicast_class_valid",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.best_effort.be_sch_port[ be_sch_port_index].Best.multicast_class_valid:\r\n"
    "  If this bit is set, then the scheduler enables the IPS to generate credits\r\n"
    "  for the Multicast Class port. Suppose the value is FALSE the credits are\r\n"
    "  given to the queue directly from the IPS.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BEST_BEST_MCAST_CLASS_PORT_ID_ID,
    "be_mcast_class_port_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.best_effort.be_sch_port[ be_sch_port_index].Best.mcast_class_port_id:\r\n"
    "  Multicast class Port Id. one of 80 outgoing FAP ports.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_WFQ_ENABLE_ID,
    "be_wfq_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.best_effort.wfq_enable:\r\n"
    "  If asserted the credit will be distributed in the following order: MC2 > MC1\r\n"
    "  > MC0be_sch_port\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SHAPER_MAX_BURST_ID,
    "be_shpr_max_burst",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.best_effort.be_shaper.max_burst:\r\n"
    "  The maximum number of credits the generator can hold when credits are not\r\n"
    "  needed.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_BEST_EFFORT_BE_SHAPER_RATE_ID,
    "be_shpr_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.best_effort.be_shaper.rate:\r\n"
    "  The maximum rate credits are given to best effort/guaranteed traffic\r\n"
    "  queues.Range: Minimum - 123 kbps\r\n"
    "  Maximum - 80 Gbps\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_GUARANTEED_GUARANTEED_MULTICAST_CLASS_VALID_ID,
    "grnt_multicast_class_valid",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.guaranteed.Guaranteed.multicast_class_valid:\r\n"
    "  If this bit is set, then the scheduler enables the IPS to generate credits\r\n"
    "  for the Multicast Class port. Suppose the value is FALSE the credits are\r\n"
    "  given to the queue directly from the IPS.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_GUARANTEED_GUARANTEED_MCAST_CLASS_PORT_ID_ID,
    "grnt_mcast_class_port_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.guaranteed.Guaranteed.mcast_class_port_id:\r\n"
    "  Multicast class Port Id. one of 80 outgoing FAP ports.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_GUARANTEED_GR_SHAPER_MAX_BURST_ID,
    "grnt_shpr_max_burst",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.guaranteed.gr_shaper.max_burst:\r\n"
    "  The maximum number of credits the generator can hold when credits are not\r\n"
    "  needed.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_SET_MULT_FABRIC_CREDIT_SOURCE_SET_INFO_GUARANTEED_GR_SHAPER_RATE_ID,
    "grnt_shpr_rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.guaranteed.gr_shaper.rate:\r\n"
    "  The maximum rate credits are given to best effort/guaranteed traffic\r\n"
    "  queues.Range: Minimum - 123 kbps\r\n"
    "  Maximum - 80 Gbps\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_set credits_via_sch 0\r\n"
    "  max_rate 0 be_sch_port_index 0 weight 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 wfq_enable 0 max_burst 0 rate 0 multicast_class_valid 0 mcast_class_port_id\r\n"
    "  0 max_burst 0 rate 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_CREDIT_SOURCE_GET_MULT_FABRIC_CREDIT_SOURCE_GET_ID,
    "credit_source_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set the Fabric Multicast credit generator configuration.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_credit_source_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_ENHANCED_SET_MULT_FABRIC_ENHANCED_SET_ID,
    "enhanced_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure the Enhanced Fabric Multicast Queue configuration: the fabric\r\n"
    "  multicast queues are defined in a configured range, and the credits are\r\n"
    "  coming to these queues according to a scheduler scheme.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_enhanced_set queue_range 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(16)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_ENHANCED_SET_MULT_FABRIC_ENHANCED_SET_QUEUE_RANGE_ID,
    "queue_min",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_range:\r\n"
    "  Range of the FMQs where the fabric multicast packets are sent to.Range: 0 -\r\n"
    "  32K-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_enhanced_set queue_range 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_ENHANCED_SET_MULT_FABRIC_ENHANCED_SET_QUEUE_RANGE_MAX_ID,
    "queue_max",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_range:\r\n"
    "  Range of the FMQs where the fabric multicast packets are sent to.Range: 0 -\r\n"
    "  32K-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_enhanced_set queue_range 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(16)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_ENHANCED_GET_MULT_FABRIC_ENHANCED_GET_ID,
    "enhanced_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure the Enhanced Fabric Multicast Queue configuration: the fabric\r\n"
    "  multicast queues are defined in a configured range, and the credits are\r\n"
    "  coming to these queues according to a scheduler scheme.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_enhanced_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(17)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_ACTIVE_LINKS_SET_MULT_FABRIC_ACTIVE_LINKS_SET_ID,
    "active_links_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure sets the FAP links that are eligible for multicast\r\n"
    "  fabric traffic.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_active_links_set bitmap_index 0 bitmap\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(6)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_ACTIVE_LINKS_SET_MULT_FABRIC_ACTIVE_LINKS_SET_LINKS_BITMAP_INDEX_ID,
    "bitmap_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  bitmap_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_active_links_set bitmap_index 0 bitmap\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_ACTIVE_LINKS_SET_MULT_FABRIC_ACTIVE_LINKS_SET_LINKS_BITMAP_ID,
    "bitmap",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  links.bitmap[ prm_bitmap_index]:\r\n"
    "  A bitmap of the device links. if bit (0 - TMD_FBR_NOF_LINKS) is up, then its\r\n"
    "  corresponding link (0 - TMD_FBR_NOF_LINKS) is eligible for spatial multicast\r\n"
    "  distribution. Range: 0 - 0xFFFFFFFF (1st entry), 0 - 0xF (2nd entry).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_active_links_set bitmap_index 0 bitmap\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_ACTIVE_LINKS_SET_MULT_FABRIC_ACTIVE_LINKS_SET_TBL_REFRESH_ENABLE_ID,
    "tbl_refresh_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  tbl_refresh_enable:\r\n"
    "  Since multicast distribution table does not exist, the data is\r\n"
    "  taken from link map the user supplies (active_mc_links), and may\r\n"
    "  be combined with data from unicast distribution table. This\r\n"
    "  parameter sets the refresh rate in which, is case of the combined\r\n"
    "  data as explained above, the data is taken from the unicast\r\n"
    "  distribution table.\r\n"
    "  TRUE - Combine calculated data from UC distribution table with\r\n"
    "  active_mc_links.\r\n"
    "  FALSE - Do not combine calculated data from UC distribution table\r\n"
    "  with active_mc_links.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_active_links_set bitmap_index 0 bitmap\r\n"
    "  0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_MULT_FABRIC_ACTIVE_LINKS_GET_MULT_FABRIC_ACTIVE_LINKS_GET_ID,
    "active_links_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure sets the FAP links that are eligible for multicast\r\n"
    "  fabric traffic.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api multicast_fabric mult_fabric_active_links_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(7)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_MULTICAST_FABRIC_ID,
    "multicast_fabric",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7), 0, 0, 0, BIT(16)|BIT(17)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } multicast_fabric*/

  #ifdef UI_FABRIC/* { fabric*/
  {
    PARAM_TMD_FABRIC_SRD_QRTT_RESET_SRD_QRTT_RESET_ID,
    "srd_qrtt_reset",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure handles the SerDes configuration of a SerDes quartet attached\r\n"
    "  to the fabric interface. It is called during fabric initialization sequence.\r\n"
    "  Also, in the case that a SerDes quartet is reset (e.g. in order to change the\r\n"
    "  SerDes rate), this API must be called to first shut down all the relevant\r\n"
    "  links (is_oor == FALSE), and then, after serdes quartet reset, with is_oor ==\r\n"
    "  TRUE. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric srd_qrtt_reset srd_qrtt_ndx 0 is_oor 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_SRD_QRTT_RESET_SRD_QRTT_RESET_SRD_QRTT_NDX_ID,
    "srd_qrtt_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  srd_qrtt_ndx:\r\n"
    "  The SerDes quartet index. Range: 3 and 7 according to Combo configuration, 8\r\n"
    "  - 14.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric srd_qrtt_reset srd_qrtt_ndx 0 is_oor 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_SRD_QRTT_RESET_SRD_QRTT_RESET_IS_OOR_ID,
    "is_oor",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  is_oor:\r\n"
    "  Is Out-Of-Reset. If FALSE, means In-Reset. Performs the following:\r\n"
    "  If TRUE, configures the SerDes quartet to fabric-compatable configuration. If\r\n"
    "  FALSE, turns down the appropriate links in the Fabric. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric srd_qrtt_reset srd_qrtt_ndx 0 is_oor 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_FC_ENABLE_SET_FC_ENABLE_SET_ID,
    "fc_enable_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure enables/disables flow-control on fabric links. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric fc_enable_set direction_ndx 0 enable_index 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(1)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_FC_ENABLE_SET_FC_ENABLE_SET_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&TMD_CONNECTION_DIRECTION_rule[0],
    (sizeof(TMD_CONNECTION_DIRECTION_rule) / sizeof(TMD_CONNECTION_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\r\n"
    "  Direction index - RX, TX or Both.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric fc_enable_set direction_ndx 0 enable_index 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(1)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_FC_ENABLE_SET_FC_ENABLE_SET_INFO_ENABLE_INDEX_ID,
    "enable_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  enable_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric fc_enable_set direction_ndx 0 enable_index 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(1)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_FC_ENABLE_SET_FC_ENABLE_SET_INFO_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable[ prm_enable_index]:\r\n"
    "  If ENTRY i\r\n"
    "  is TRUE, enables flow control for link i (0 - 35) in the specified direction.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric fc_enable_set direction_ndx 0 enable_index 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(1)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_FC_ENABLE_GET_FC_ENABLE_GET_ID,
    "fc_enable_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure enables/disables flow-control on fabric links. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric fc_enable_get direction_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(2)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_CELL_FORMAT_GET_CELL_FORMAT_GET_ID,
    "cell_format_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure sets fabric links operation mode.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric cell_format_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(4)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_COEXIST_SET_COEXIST_SET_ID,
    "coexist_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets coexist parameters in order to\r\n"
    "  distribute traffic more evenly over links.\r\n"
    "  Coexist mode is a mode in which the fabric connects a\r\n"
    "  tmd device to fap20/21 device.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric coexist_set fap_id_odd_link_map_index 0 fap_id_odd_link_map\r\n"
    "  0 coexist_dest_map_index 0 coexist_dest_map 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_COEXIST_SET_COEXIST_SET_INFO_FAP_ID_ODD_LINK_MAP_INDEX_ID,
    "fap_id_odd_link_map_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fap_id_odd_link_map_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric coexist_set fap_id_odd_link_map_index 0 fap_id_odd_link_map\r\n"
    "  0 coexist_dest_map_index 0 coexist_dest_map 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_COEXIST_SET_COEXIST_SET_INFO_FAP_ID_ODD_LINK_MAP_ID,
    "fap_id_odd_link_map",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.fap_id_odd_link_map[ prm_fap_id_odd_link_map_index]:\r\n"
    "  If TRUE for link n, the LSB of the FAP id as transmitted in the reachability\r\n"
    "  cells on that link is 1. If FALSE - it is 0. This allows the device in\r\n"
    "  coexist mode to be seen as two devices, for better bandwidth distribution.\r\n"
    "  Note: the FAP id of a device in coexist mode must be even, and the next odd\r\n"
    "  id must not be used.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric coexist_set fap_id_odd_link_map_index 0 fap_id_odd_link_map\r\n"
    "  0 coexist_dest_map_index 0 coexist_dest_map 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_COEXIST_SET_COEXIST_SET_INFO_COEXIST_DEST_MAP_INDEX_ID,
    "coexist_dest_map_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  coexist_dest_map_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric coexist_set fap_id_odd_link_map_index 0 fap_id_odd_link_map\r\n"
    "  0 coexist_dest_map_index 0 coexist_dest_map 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_COEXIST_SET_COEXIST_SET_INFO_COEXIST_DEST_MAP_ID,
    "coexist_dest_map",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.coexist_dest_map[ prm_coexist_dest_map_index]:\r\n"
    "  Define, for the first 256 device ids, if they are coexist destination (1\r\n"
    "  entry for two consecutive destinations).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric coexist_set fap_id_odd_link_map_index 0 fap_id_odd_link_map\r\n"
    "  0 coexist_dest_map_index 0 coexist_dest_map 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_COEXIST_SET_COEXIST_SET_INFO_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable:\r\n"
    "  If TRUE,the chip works in co-exist mode.Coexist mode is a mode in which the\r\n"
    "  fabric connects a tmd device to fap2x device, and enables to distribute\r\n"
    "  traffic more evenly over links in this case.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric coexist_set fap_id_odd_link_map_index 0 fap_id_odd_link_map\r\n"
    "  0 coexist_dest_map_index 0 coexist_dest_map 0 enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(5)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_COEXIST_GET_COEXIST_GET_ID,
    "coexist_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets coexist parameters in order to\r\n"
    "  distribute traffic more evenly over links.\r\n"
    "  Coexist mode is a mode in which the fabric connects a\r\n"
    "  tmd device to fap20/21 device.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric coexist_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(6)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_STAND_ALONE_FAP_MODE_GET_STAND_ALONE_FAP_MODE_GET_ID,
    "stand_alone_fap_mode_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures a FAP to be in stand_alone mode (internal switching). to the\r\n"
    "  presence of FE in the system. If the system is designed to be with ONE fap:\r\n"
    "  - set STANDALONE mode constantly. If the system is designed to be with more\r\n"
    "  than one FAP:\r\n"
    "  - if it starts from ONE fap, set the FAP to STANDALONE mode.\r\n"
    "  - when at least one more FAP is in the system,\r\n"
    "  unset the mode STANDALONE mode.\r\n"
    "  - if the system is with many FAPs, and all FAPs (but one) are\r\n"
    "  removed, set the remaining FAP to be in STANDALONE mode\r\n"
    "  (again, change it when another FAP is in).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric stand_alone_fap_mode_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(9)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_CONNECT_MODE_SET_CONNECT_MODE_SET_ID,
    "connect_mode_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure the fabric mode to work in one of the following modes:\r\n"
    "  FE, back to back, mesh or multi stage FE.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric connect_mode_set fabric_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(11)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_CONNECT_MODE_SET_CONNECT_MODE_SET_FABRIC_MODE_ID,
    "fabric_mode",
    (PARAM_VAL_RULES *)&TMD_FABRIC_CONNECT_MODE_rule[0],
    (sizeof(TMD_FABRIC_CONNECT_MODE_rule) / sizeof(TMD_FABRIC_CONNECT_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fabric_mode:\r\n"
    "  The fabric connection mode to set.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric connect_mode_set fabric_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(11)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_CONNECT_MODE_GET_CONNECT_MODE_GET_ID,
    "connect_mode_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure the fabric mode to work in one of the following modes:\r\n"
    "  FE, back to back, mesh or multi stage FE.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric connect_mode_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_FAP20_MAP_SET_FAP20_MAP_SET_ID,
    "fap20_map_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set/unset fap20 device identification.\r\n"
    "  Cells to fap20 devices have different format.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric fap20_map_set other_device_ndx 0 is_fap20_device 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(13)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_FAP20_MAP_SET_FAP20_MAP_SET_OTHER_DEVICE_NDX_ID,
    "other_device_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  other_device_ndx:\r\n"
    "  The device id of the device to set/unset fap20 indication for.\r\n"
    "  Range: 0-127 (only these device indexes are allowed).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric fap20_map_set other_device_ndx 0 is_fap20_device 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(13)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_FAP20_MAP_SET_FAP20_MAP_SET_IS_FAP20_DEVICE_ID,
    "is_fap20_device",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  is_fap20_device:\r\n"
    "  If set, the device with id = other_unit is a fap20 device.\r\n"
    "  This determines the cell format for cells with this destination\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric fap20_map_set other_device_ndx 0 is_fap20_device 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(13)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_FAP20_MAP_GET_FAP20_MAP_GET_ID,
    "fap20_map_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set/unset fap20 device identification.\r\n"
    "  Cells to fap20 devices have different format.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric fap20_map_get other_device_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_FABRIC_FAP20_MAP_GET_FAP20_MAP_GET_OTHER_DEVICE_NDX_ID,
    "other_device_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  other_device_ndx:\r\n"
    "  The device id of the device to set/unset fap20 indication for.\r\n"
    "  Range: 0-127 (only these device indexes are allowed).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric fap20_map_get other_device_ndx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_TOPOLOGY_STATUS_CONNECTIVITY_GET_TOPOLOGY_STATUS_CONNECTIVITY_GET_ID,
    "topology_status_connectivity_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Retrieve the connectivity map from the device. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric topology_status_connectivity_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_LINKS_STATUS_GET_LINKS_STATUS_GET_ID,
    "links_status_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Get Real-time lower level indications and errors of the links\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api fabric links_status_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_LINK_ON_OFF_SET_LINK_ON_OFF_SET_ID,
    "link_on_off_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set Fabric link, and optionally, the appropriate SerDes, on/off state.\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api fabric link_on_off_set link_ndx 0 serdes_also 0 on_off 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(20)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_LINK_ON_OFF_SET_LINK_ON_OFF_SET_LINK_NDX_ID,
    "link_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  link_ndx:\r\n"
    "  The fabric link index. Range: 0 - 35.\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api fabric link_on_off_set link_ndx 0 serdes_also 0 on_off 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(20)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_LINK_ON_OFF_SET_LINK_ON_OFF_SET_INFO_SERDES_ALSO_ID,
    "serdes_also",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.serdes_also:\r\n"
    "  Set the serdes lane accordingly - power down when fabric link is turned off,\r\n"
    "  power up when turned on.\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api fabric link_on_off_set link_ndx 0 serdes_also 0 on_off 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_LINK_ON_OFF_SET_LINK_ON_OFF_SET_INFO_ON_OFF_ID,
    "on_off",
    (PARAM_VAL_RULES *)&TMD_LINK_STATE_rule[0],
    (sizeof(TMD_LINK_STATE_rule) / sizeof(TMD_LINK_STATE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.on_off:\r\n"
    "  Fabric link state - normal operation or down.\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api fabric link_on_off_set link_ndx 0 serdes_also 0 on_off 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(20)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_LINK_ON_OFF_GET_LINK_ON_OFF_GET_ID,
    "link_on_off_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set Fabric link, and optionally, the appropriate SerDes, on/off state.\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api fabric link_on_off_get link_ndx 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(21)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_LINK_ON_OFF_GET_LINK_ON_OFF_GET_LINK_NDX_ID,
    "link_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  link_ndx:\r\n"
    "  The fabric link index. Range: 0 - 35.\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api fabric link_on_off_get link_ndx 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(21)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_FABRIC_ID,
    "fabric",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(20)|BIT(21), 0, 0, BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15),0,0,BIT(5)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } fabric*/

#ifdef UI_TMD_HEADER_PARSING_UTILS/* { tmd_header_parsing_utils*/
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_ID,
    "itmh_build",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function receives the fields that construct the Incoming TM Header and\r\n"
    "  builds a ITMH header (base + extension).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_INFO_EXTENSION_SRC_PORT_ID_ID,
    "src_port_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.src_port.id:\r\n"
    "  According to the System-Port type, one of the following:LAG id. Range: 0 -\r\n"
    "  255.System Physical Port. Range: 0 - 4K-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_INFO_EXTENSION_SRC_PORT_TYPE_ID,
    "src_type",
    (PARAM_VAL_RULES *)&TMD_DEST_SYS_PORT_TYPE_rule[0],
    (sizeof(TMD_DEST_SYS_PORT_TYPE_rule) / sizeof(TMD_DEST_SYS_PORT_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.src_port.type:\r\n"
    "  LAG id or system-physical-port id.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_INFO_EXTENSION_IS_SRC_SYS_PORT_ID,
    "is_src_sys_port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.is_src_sys_port:\r\n"
    "  This field indicated whether the 'src_port' value is a system-level port\r\n"
    "  (system-port - [0..4095]), or is the value of the local source port (IFP -\r\n"
    "  [0..79]).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_INFO_EXTENSION_ENABLE_ID,
    "extension_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.enable:\r\n"
    "  Indicates whether the extension exists. If this value is FALSE the next\r\n"
    "  fields in this structure are meaningless.If TRUE, the purpose of this\r\n"
    "  extension is to override the value that is placed in the FTMH, thus allowing\r\n"
    "  a packet to impersonate as entering from any sys-port when processed at the\r\n"
    "  egress.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_INFO_BASE_DESTINATION_ID_ID,
    "dest_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.destination.id:\r\n"
    "  According to destination type, one of the following:Queue id (Unicast flow).\r\n"
    "  Range: 0 - 32K-1Multicast id (System Multicast). Range: 0 - 16K-1System\r\n"
    "  Physical Port. Range: 0 - 4K-1LAG id. Range: 0 -255.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_INFO_BASE_DESTINATION_TYPE_ID,
    "dest_type",
    (PARAM_VAL_RULES *)&TMD_DEST_TYPE_rule[0],
    (sizeof(TMD_DEST_TYPE_rule) / sizeof(TMD_DEST_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.destination.type:\r\n"
    "  Queue, multicast group or system port / LAG id (Unicast flow, System\r\n"
    "  multicast, Unicast direct accordingly).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_INFO_BASE_DP_ID,
    "dp",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.dp:\r\n"
    "  Drop Precedence.Range: 0 - 3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_INFO_BASE_TR_CLS_ID,
    "tr_cls",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.tr_cls:\r\n"
    "  Traffic class.Range: 0 - 7.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_INFO_BASE_EXCLUDE_SRC_ID,
    "exclude_src",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.exclude_src:\r\n"
    "  Indicates whether to filter the packet at the egress when it arrives with\r\n"
    "  source system-port-id the same as destination system-port-id\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_INFO_BASE_SNOOP_CMD_NDX_ID,
    "snoop_cmd_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.snoop_cmd_ndx:\r\n"
    "  There are 15 types of 'Snoop Commands'. This field indicates which command\r\n"
    "  should be used for this packet (snoop_cmd_ndx = 0, means snoop\r\n"
    "  disabled).Range: 0- 15.(* Optionally only 7 snoop commands are available -\r\n"
    "  TODO_P)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_INFO_BASE_OUT_MIRROR_EN_ID,
    "out_mirror_dis",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.out_mirror_dis:\r\n"
    "  Indicates whether port outbound mirroring is enabled /disabled.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_BUILD_HPU_ITMH_BUILD_INFO_BASE_PP_HEADER_PRESENT_ID,
    "pp_header_present",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.pp_header_present:\r\n"
    "  Indicates whether a packet-processor-header is above.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_build id 0 type 0\r\n"
    "  is_src_sys_port 0 enable 0 id 0 type 0 dp 0 tr_cls 0 exclude_src 0\r\n"
    "  snoop_cmd_ndx 0 out_mirror_dis 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_PARSE_HPU_ITMH_PARSE_ID,
    "itmh_parse",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function retrieves the fields that construct the Incoming TM Header\r\n"
    "  given an ITMH header (base + extension).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_parse extention_src_port 0 base\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(11)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_PARSE_HPU_ITMH_PARSE_ITMH_EXTENTION_SRC_PORT_ID,
    "extention_src_port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  itmh.extention_src_port:\r\n"
    "  ITMH Source Port extension. Bits 0 - 15 are valid.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_parse extention_src_port 0 base\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(11)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_ITMH_PARSE_HPU_ITMH_PARSE_ITMH_BASE_ID,
    "base",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  itmh.base:\r\n"
    "  Ingress TM header - forwarding or ingress shaping.\r\n"
    "  Bits 0 - 31 are valid.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_itmh_parse extention_src_port 0 base\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(11)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_ID,
    "ftmh_build",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function receives the fields that construct the Fabric TM Header and\r\n"
    "  builds a FTMH header (base + extension).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_EXTENSION_OUTLIF_ID,
    "outlif",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.outlif:\r\n"
    "  If previous field is TRUE then, if packet is ingress replicated, then this is\r\n"
    "  the OUT_LIF, as derived from the multicast linked list; else, it is a copy of\r\n"
    "  the LSB of the FWD_ACTION_DESTINATION_INFO.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_EXTENSION_ENABLE_ID,
    "extention_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.enable:\r\n"
    "  Indicates whether the extension exists. If this value is FALSE the next field\r\n"
    "  in this structure is meaningless.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_BASE_MULTICAST_ID,
    "multicast",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.multicast:\r\n"
    "  Indicates whether packet is system-multicast.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_BASE_EXCLUDE_SRC_ID,
    "exclude_src",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.exclude_src:\r\n"
    "  Indicates whether to filter the packet at the egress when it arrives with\r\n"
    "  source system-port-id the same as destination system-port-id\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_BASE_OUT_MIRROR_EN_ID,
    "out_mirror_dis",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.out_mirror_dis:\r\n"
    "  Indicates whether port outbound mirroring is enabled /disabled.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_BASE_PP_HEADER_PRESENT_ID,
    "pp_header_present",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.pp_header_present:\r\n"
    "  Indicates whether a packet-processor-header is above.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_BASE_SIGNATURE_ID,
    "signature",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.signature:\r\n"
    "  Signature key of the Queue.Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_BASE_DP_ID,
    "dp",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.dp:\r\n"
    "  Drop precedence.Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_BASE_OFP_ID,
    "ofp",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.ofp:\r\n"
    "  Outgoing FAP port on destination device. Range: 0-79.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_BASE_SRC_SYS_PORT_ID_ID,
    "sys_port_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.src_sys_port.id:\r\n"
    "  According to the System-Port type, one of the following:LAG id. Range: 0 -\r\n"
    "  255.System Physical Port. Range: 0 - 4K-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_BASE_SRC_SYS_PORT_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&TMD_DEST_SYS_PORT_TYPE_rule[0],
    (sizeof(TMD_DEST_SYS_PORT_TYPE_rule) / sizeof(TMD_DEST_SYS_PORT_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.src_sys_port.type:\r\n"
    "  LAG id or system-physical-port id.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_BASE_TR_CLS_ID,
    "tr_cls",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.tr_cls:\r\n"
    "  Traffic class.Range: 0-7\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_BUILD_HPU_FTMH_BUILD_INFO_BASE_PACKET_SIZE_ID,
    "packet_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.packet_size:\r\n"
    "  Packet size in bytes.Range: 0-16K.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_build outlif 0 enable 0\r\n"
    "  multicast 0 exclude_src 0 out_mirror_dis 0 pp_header_present 0 signature 0 dp\r\n"
    "  0 ofp 0 id 0 type 0 tr_cls 0 packet_size 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_PARSE_HPU_FTMH_PARSE_ID,
    "ftmh_parse",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function retrieves the fields that construct the Fabric TM Header given\r\n"
    "  an FTMH header (base + extension).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_parse extension_outlif 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(13)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_PARSE_HPU_FTMH_PARSE_FTMH_EXTENSION_OUTLIF_ID,
    "extension_outlif",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ftmh.extension_outlif:\r\n"
    "  FTMH Outlif extension. Bits 0 - 15 are valid.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_parse extension_outlif 0\r\n"
    "  base_index 0 base 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(13)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_PARSE_HPU_FTMH_PARSE_FTMH_BASE_INDEX_ID,
    "base_index",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  base_index:\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_parse extension_outlif 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(13)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_FTMH_PARSE_HPU_FTMH_PARSE_FTMH_BASE_ID,
    "base",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ftmh.base[ prm_base_index]:\r\n"
    "  Fabric TM header. Bits 0 - 47 are valid\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_ftmh_parse extension_outlif 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(13)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_ID,
    "otmh_build",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function receives the fields that construct the Outgoing TM Header and\r\n"
    "  builds a OTMH header (base + extensions).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_EXTENSION_DEST_DEST_SYS_PORT_ID_ID,
    "dest_sys_port_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.dest.dest_sys_port.id:\r\n"
    "  According to the System-Port type, one of the following:LAG id. Range: 0 -\r\n"
    "  255.System Physical Port. Range: 0 - 4K-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_EXTENSION_DEST_DEST_SYS_PORT_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&TMD_DEST_SYS_PORT_TYPE_rule[0],
    (sizeof(TMD_DEST_SYS_PORT_TYPE_rule) / sizeof(TMD_DEST_SYS_PORT_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.dest.dest_sys_port.type:\r\n"
    "  LAG id or system-physical-port id.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_EXTENSION_DEST_ENABLE_ID,
    "extention_dest_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.dest.enable:\r\n"
    "  Indicates whether the extension exists. If this value is FALSE the next field\r\n"
    "  in this structure is meaningless.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_EXTENSION_SRC_SRC_SYS_PORT_ID_ID,
    "src_sys_port_id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.src.src_sys_port.id:\r\n"
    "  According to the System-Port type, one of the following:LAG id. Range: 0 -\r\n"
    "  255.System Physical Port. Range: 0 - 4K-1.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_EXTENSION_SRC_SRC_SYS_PORT_TYPE_ID,
    "src_port_type",
    (PARAM_VAL_RULES *)&TMD_DEST_SYS_PORT_TYPE_rule[0],
    (sizeof(TMD_DEST_SYS_PORT_TYPE_rule) / sizeof(TMD_DEST_SYS_PORT_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.src.src_sys_port.type:\r\n"
    "  LAG id or system-physical-port id.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_EXTENSION_SRC_ENABLE_ID,
    "extention_src_port_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.src.enable:\r\n"
    "  Indicates whether the extension exists. If this value is FALSE the next field\r\n"
    "  in this structure is meaningless.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_EXTENSION_OUTLIF_OUTLIF_ID,
    "outlif_val",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.outlif.outlif:\r\n"
    "  If previous field is TRUE then, if packet is ingress replicated, then this is\r\n"
    "  the OUT_LIF, as derived from the multicast linked list; else, it is a copy of\r\n"
    "  the LSB of the FWD_ACTION_DESTINATION_INFO.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_EXTENSION_OUTLIF_ENABLE_ID,
    "extension_outlif_enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.extension.outlif.enable:\r\n"
    "  Indicates whether the extension exists. If this value is FALSE the next field\r\n"
    "  in this structure is meaningless.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_BASE_OUTLIF_ID,
    "outlif_ftmh",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.outlif:\r\n"
    "  Normally, the outlif value from the FTMH. Otherwise, configurable \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_BASE_TR_CLS_ID,
    "tr_cls",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.tr_cls:\r\n"
    "  Traffic class.Range: 0-7\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_BASE_PACKET_SIZE_ID,
    "packet_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.packet_size:\r\n"
    "  Packet size in bytes.Range: 0-16K.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_BASE_DP_ID,
    "dp",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.dp:\r\n"
    "  Drop precedence.Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_BASE_MULTICAST_ID,
    "multicast",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.multicast:\r\n"
    "  Indicates whether packet is system-multicast.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_BASE_SIGNATURE_ID,
    "signature",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.signature:\r\n"
    "  Signature key of the Queue.Range: 0-3.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_BUILD_HPU_OTMH_BUILD_INFO_BASE_PP_HEADER_PRESENT_ID,
    "pp_header_present",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base.pp_header_present:\r\n"
    "  Indicates whether a packet-processor-header is above.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_build id 0 type 0 enable 0 id 0\r\n"
    "  type 0 enable 0 outlif 0 enable 0 outlif 0 tr_cls 0 packet_size 0 dp 0\r\n"
    "  multicast 0 signature 0 pp_header_present 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(14)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_PARSE_HPU_OTMH_PARSE_ID,
    "otmh_parse",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This function retrieves the fields that construct the Outgoing TM Header\r\n"
    "  given an OTMH header (base + extension).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_parse extension_dest_port 0\r\n"
    "  extension_src_port 0 extension_outlif 0 base 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_PARSE_HPU_OTMH_PARSE_OTMH_EXTENSION_DEST_PORT_ID,
    "extension_dest_port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  otmh.extension_dest_port:\r\n"
    "  OTMH Destination Port extention. Bits 0 - 15 are valid\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_parse extension_dest_port 0\r\n"
    "  extension_src_port 0 extension_outlif 0 base 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_PARSE_HPU_OTMH_PARSE_OTMH_EXTENSION_SRC_PORT_ID,
    "extension_src_port",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  otmh.extension_src_port:\r\n"
    "  OTMH Source Port extention. Bits 0 - 15 are valid\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_parse extension_dest_port 0\r\n"
    "  extension_src_port 0 extension_outlif 0 base 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_PARSE_HPU_OTMH_PARSE_OTMH_EXTENSION_OUTLIF_ID,
    "extension_outlif",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  otmh.extension_outlif:\r\n"
    "  OTMH Out-LIF extention. Bits 0 - 15 are valid\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_parse extension_dest_port 0\r\n"
    "  extension_src_port 0 extension_outlif 0 base 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HPU_OTMH_PARSE_HPU_OTMH_PARSE_OTMH_BASE_ID,
    "base",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  otmh.base:\r\n"
    "  Outgoing TM header. Bits 0 - 15 are valid\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api tmd_header_parsing_utils hpu_otmh_parse extension_dest_port 0\r\n"
    "  extension_src_port 0 extension_outlif 0 base 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(15)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_HEADER_PARSING_UTILS_ID,
    "header_parsing_utils",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } tmd_header_parsing_utils*/

#ifdef UI_REG_ACCESS/* { reg_access*/
  {
    PARAM_TMD_READ_FLD_READ_FLD_ID,
    "read_fld",
    (PARAM_VAL_RULES *)&tmd_addr_and_data[0],
    (sizeof(tmd_addr_and_data) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Read a field from Tmd register\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api reg_access read_fld 0x100 lsb 0 msb 0 \r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(31)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_READ_FLD_READ_FLD_FIELD_LSB_ID,
    "lsb",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  field.lsb:\r\n"
    "  Field Least Significant Bit in the register.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api reg_access read_fld lsb 0 msb 0 step 0 base 0 instance_idx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(31)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_READ_FLD_READ_FLD_FIELD_MSB_ID,
    "msb",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  field.msb:\r\n"
    "  Field Most Significant Bit in the register.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api reg_access read_fld lsb 0 msb 0 step 0 base 0 instance_idx 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(31)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_WRITE_FLD_WRITE_FLD_ID,
    "write_fld",
    (PARAM_VAL_RULES *)&tmd_addr_and_data[0],
    (sizeof(tmd_addr_and_data) / sizeof(tmd_addr_and_data[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Write a field from Tmd register\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api reg_access write_fld  0x100 lsb 0 msb 0 val 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(0)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_WRITE_FLD_WRITE_FLD_FIELD_LSB_ID,
    "lsb",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  field.lsb:\r\n"
    "  Field Least Significant Bit in the register.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api reg_access write_fld lsb 0 msb 0 step 0 base 0 instance_idx 0 val 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_WRITE_FLD_WRITE_FLD_FIELD_MSB_ID,
    "msb",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  field.msb:\r\n"
    "  Field Most Significant Bit in the register.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api reg_access write_fld lsb 0 msb 0 step 0 base 0 instance_idx 0 val 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_WRITE_FLD_WRITE_FLD_VAL_ID,
    "val",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  val:\r\n"
    "  field value to write.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api reg_access write_fld lsb 0 msb 0 step 0 base 0 instance_idx 0 val 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(0)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_READ_REG_READ_REG_ID,
    "read_reg",
    (PARAM_VAL_RULES *)&tmd_addr_and_data[0],
    (sizeof(tmd_addr_and_data) / sizeof(tmd_addr_and_data[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Read a register from Tmd register\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api reg_access 0x3400\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(1)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_WRITE_REG_WRITE_REG_ID,
    "write_reg",
    (PARAM_VAL_RULES *)&tmd_addr_and_data[0],
    (sizeof(tmd_addr_and_data) / sizeof(tmd_addr_and_data[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Write a register from Tmd register\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api reg_access write_reg 0x3400 val 0x100\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(2)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_WRITE_REG_WRITE_REG_VAL_ID,
    "val",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  val:\r\n"
    "  register value to write.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api reg_access write_reg step 0 base 0 instance_idx 0 val 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(2)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IWRITE_ID,
    "iwrite",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Write Data (MSB) to indirect Addr\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api general iwrite 0x10045 0x4 0x4 0x2\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(22)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IREAD_ID,
    "iread",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Read data (MSB) from indirect addr\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api general iread 0x10045\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(23)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IRW_OFFSET_ID,
    "offset",
    (PARAM_VAL_RULES *)&tmd_addr_and_data[0],
    (sizeof(tmd_addr_and_data) / sizeof(tmd_addr_and_data[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Read data (MSB) from indirect addr\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api general iread 0x10045\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(22)|BIT(23)},
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_IACC_MODULE_ID_ID,
    "module_id",
    (PARAM_VAL_RULES *)&TMD_ACC_MODULE_ID_rule[0],
    (sizeof(TMD_ACC_MODULE_ID_rule) / sizeof(TMD_ACC_MODULE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Tmd block (module) to access. Range: 0 - 20\r\n"
    "OLP:   0   \r\n"
    "IRE:   1   \r\n"
    "IDR:   2   \r\n"
    "IRR:   3   \r\n"
    "IHP:   4   \r\n"
    "QDR:   5   \r\n"
    "IPS:   6   \r\n"
    "IPT:   7   \r\n"
    "DPI_A: 8   \r\n"
    "DPI_B: 9   \r\n"
    "DPI_C: 10  \r\n"
    "DPI_D: 11  \r\n"
    "DPI_E: 12  \r\n"
    "DPI_F: 13  \r\n"
    "RTP:   14  \r\n"
    "EGQ:   15  \r\n"
    "SCH:   16  \r\n"
    "CFC:   17  \r\n"
    "EPNI:  18  \r\n"
    "IQM:   19  \r\n"
    "MMU:   20  \r\n"
    "",
    "Examples:\r\n"
    "  tmd_api general iread 0x10045 size 1 module_id 4\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(22)|BIT(23)},
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_SIZE_ID,
    "size",
    (PARAM_VAL_RULES *)&TMD_ACC_SIZE_ID_rule[0],
    (sizeof(TMD_ACC_SIZE_ID_rule) / sizeof(TMD_ACC_SIZE_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  table size 1-3\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api general iread 0x10045 size 1\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(22)|BIT(23)},
    5,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_ACC_IWRITE_VAL_ID,
    "val",
    (PARAM_VAL_RULES *)&TMD_ACC_IWRITE_VAL_rule[0],
    (sizeof(TMD_ACC_IWRITE_VAL_rule) / sizeof(TMD_ACC_IWRITE_VAL_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  val:\r\n"
    "  register value to write.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api reg_access write_reg step 0 base 0 instance_idx 0 val 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(22)},
    6,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DO_TWICE_ID,
    "do_twice",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Perform twice and wait in milliseconds\r\n"
    "",
    "Examples:\r\n"
    "  tmd_api general iread 0x10045 size 1 do_twice 1000\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(22)|BIT(23), 0, 0, 0, 0, BIT(1)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_REG_ACCESS_ID,
    "access",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(22) | BIT(23), 0, 0, 0, BIT(31), BIT(0)|BIT(1)|BIT(2)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } reg_access*/

#ifdef UI_DEBUG/* { debug*/
  {
    PARAM_TMD_DBG_ROUTE_FORCE_SET_DBG_ROUTE_FORCE_SET_ID,
    "route_force_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/disable if the traffic route should be forced. If enabled, the traffic\r\n"
    "  route either goes through the fabric or remains local. Otherwise, the traffic\r\n"
    "  route is not forced.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug dbg_route_force_set force_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(23)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_ROUTE_FORCE_SET_DBG_ROUTE_FORCE_SET_FORCE_MODE_ID,
    "force_mode",
    (PARAM_VAL_RULES *)&TMD_DBG_FORCE_MODE_rule[0],
    (sizeof(TMD_DBG_FORCE_MODE_rule) / sizeof(TMD_DBG_FORCE_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  force_mode:\r\n"
    "  Force fabric, force local or no route forcing.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug dbg_route_force_set force_mode 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(23)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_ROUTE_FORCE_GET_DBG_ROUTE_FORCE_GET_ID,
    "route_force_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/disable if the traffic route should be forced. If enabled, the traffic\r\n"
    "  route either goes through the fabric or remains local. Otherwise, the traffic\r\n"
    "  route is not forced.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug dbg_route_force_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(24)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_AUTOCREDIT_SET_DBG_AUTOCREDIT_SET_ID,
    "autocredit_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure the Scheduler AutoCredit parameters.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug dbg_autocredit_set rate 0 last_queue 0 first_queue 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(25)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_AUTOCREDIT_SET_DBG_AUTOCREDIT_SET_INFO_RATE_ID,
    "rate",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.rate:\r\n"
    "  The rate for the generation of auto credits.Units: Mbps.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug dbg_autocredit_set rate 0 last_queue 0 first_queue 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_AUTOCREDIT_SET_DBG_AUTOCREDIT_SET_INFO_LAST_QUEUE_ID,
    "last_queue",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.last_queue:\r\n"
    "  The index of the last queue for the generation of auto credits. Range: 0 -\r\n"
    "  32767. Note: if last_queue < first_queue, then all the queues are selected.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug dbg_autocredit_set rate 0 last_queue 0 first_queue 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_AUTOCREDIT_SET_DBG_AUTOCREDIT_SET_INFO_FIRST_QUEUE_ID,
    "first_queue",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.first_queue:\r\n"
    "  The index of the first queue for the generation of auto credits. Range: 0 -\r\n"
    "  32767.Note: if last_queue < first_queue, then all the queues are selected.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug dbg_autocredit_set rate 0 last_queue 0 first_queue 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(25)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_AUTOCREDIT_GET_DBG_AUTOCREDIT_GET_ID,
    "autocredit_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure the Scheduler AutoCredit parameters.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug dbg_autocredit_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(26)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_EGRESS_SHAPING_ENABLE_SET_DBG_EGRESS_SHAPING_ENABLE_SET_ID,
    "egress_shaping_enable_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/disable the egress shaping.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug dbg_egress_shaping_enable_set enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(27)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_EGRESS_SHAPING_ENABLE_SET_DBG_EGRESS_SHAPING_ENABLE_SET_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  enable:\r\n"
    "  If TRUE, the egress shaping is enabled. Otherwise, it is disabled. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug dbg_egress_shaping_enable_set enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(27)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_EGRESS_SHAPING_ENABLE_GET_DBG_EGRESS_SHAPING_ENABLE_GET_ID,
    "egress_shaping_enable_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/disable the egress shaping.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug dbg_egress_shaping_enable_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(28)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_FLOW_CONTROL_ENABLE_SET_FLOW_CONTROL_ENABLE_SET_ID,
    "flow_control_enable_set",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/disable device-level flow control.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug flow_control_enable_set enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(29)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_FLOW_CONTROL_ENABLE_SET_FLOW_CONTROL_ENABLE_SET_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  enable:\r\n"
    "  Flow control mode: enabled or disabled. \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug flow_control_enable_set enable 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(29)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_FLOW_CONTROL_ENABLE_GET_FLOW_CONTROL_ENABLE_GET_ID,
    "flow_control_enable_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/disable device-level flow control.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug flow_control_enable_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(30)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_QUEUE_FLUSH_DBG_QUEUE_FLUSH_ID,
    "queue_flush",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Flush one queue at the ingress.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug queue_flush queue_ndx 0 mode \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_QUEUE_FLUSH_DBG_QUEUE_FLUSH_QUEUE_NDX_ID,
    "queue_ndx",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  queue_ndx:\r\n"
    "  VOQ index. Range: 0 - 32K-1.  \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug queue_flush queue_ndx 0 mode \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_QUEUE_FLUSH_DBG_QUEUE_FLUSH_MODE_ID,
    "mode",
    (PARAM_VAL_RULES *)&TMD_DBG_FLUSH_MODE_rule[0],
    (sizeof(TMD_DBG_FLUSH_MODE_rule) / sizeof(TMD_DBG_FLUSH_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mode:\r\n"
    "  Flushing mode: the packets in the queue can be dequeued or deleted.  \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug queue_flush queue_ndx 0 mode \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_QUEUE_FLUSH_ALL_DBG_QUEUE_FLUSH_ALL_ID,
    "queue_flush_all",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Flush all the queues at the ingress.\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug queue_flush_all mode \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(9)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_QUEUE_FLUSH_ALL_DBG_QUEUE_FLUSH_ALL_MODE_ID,
    "mode",
    (PARAM_VAL_RULES *)&TMD_DBG_FLUSH_MODE_rule[0],
    (sizeof(TMD_DBG_FLUSH_MODE_rule) / sizeof(TMD_DBG_FLUSH_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mode:\r\n"
    "  Flushing mode: the packets in the queue can be dequeued or deleted.  \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug queue_flush_all mode \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(9)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_DBG_INGR_RESET_DBG_INGR_RESET_ID,
    "ingr_reset",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Resets the ingress pass. The following blocks are soft-reset (running\r\n"
    "  soft-init): IPS, IQM, IPT, MMU, DPRC, IRE, IHP, IDR, IRR. As part of the\r\n"
    "  reset sequence, traffic is stopped, and re-started (according to the original\r\n"
    "  condition).\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api debug dbg_ingr_reset\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(12)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_DEBUG_ID,
    "debug",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30), 0, BIT(8)|BIT(9)|BIT(12)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } debug*/

#ifdef UI_PACKET/* { packet*/
  {
    PARAM_TMD_PACKET_SEND_SEND_ID,
    "send",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure transmits \r\n"
    "  The packet is sent directly to the FAP Fabric interface,\r\n"
    "  and is aimed to the other FAP CPU interface,\r\n"
    "  that is, no Queuing or Scheduling is involved.\r\n"
    "  use tmd_hpu_itmh_build and tmd_pp_ethernet_header_build\r\n"
    "  in order to build the packet buffer.\r\n"
    "",
    "Ex:\r\n"
    "  tmd_api packet send  pckt_pyld_byt_siz\r\n"
    "  0 pckt_payload 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(17)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PACKET_SEND_SEND_PACKET_PATH_TYPE_ID,
    "path_type",
    (PARAM_VAL_RULES *)&TMD_PACKET_SEND_PATH_TYPE_rule[0],
    (sizeof(TMD_PACKET_SEND_PATH_TYPE_rule) / sizeof(TMD_PACKET_SEND_PATH_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  packet.unicast_indicator:\r\n"
    "  Indicator.1 - Unicast packet.0 - Fabric Multicast packet.\r\n"
    "",
    "Ex:\r\n"
    "  tmd_api packet send  pckt_pyld_byt_siz\r\n"
    "  0 pckt_payload 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(17)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PACKET_SEND_SEND_PACKET_UNICAST_INDICATOR_ID,
    "is_unicast_not_mc",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  packet.unicast_indicator:\r\n"
    "  Indicator.1 - Unicast packet.0 - Fabric Multicast packet.\r\n"
    "",
    "Ex:\r\n"
    "  tmd_api packet send  pckt_pyld_byt_siz\r\n"
    "  0 pckt_payload 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(17)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PACKET_SEND_SEND_PACKET_DESTINATION_FAP_ID,
    "destination_fap",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  packet.destination_fap:\r\n"
    "  Target FAP identifier, range: 0-2047, when unicast packet.Fabric Multicast\r\n"
    "  identifier, range: 0-16K-1, when fabric multicast packet.\r\n"
    "",
    "Ex:\r\n"
    "  tmd_api packet send  pckt_pyld_byt_siz\r\n"
    "  0 pckt_payload 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(17)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PACKET_SEND_SEND_PACKET_PAYLOAD_BYTE_SIZE_ID,
    "payload_byte_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  packet.payload_byte_size:\r\n"
    "  Number of bytes to send (related to 'payload').\r\n"
    "",
    "Ex:\r\n"
    "  tmd_api packet send  pckt_pyld_byt_siz\r\n"
    "  0 pckt_payload 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(17)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PACKET_SEND_SEND_PACKET_PAYLOAD_0_ID,
    "payload",
    (PARAM_VAL_RULES *)&tmd_api_packet_payload_vals[0],
    (sizeof(tmd_api_packet_payload_vals) / sizeof(tmd_api_packet_payload_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  packet.payload:\r\n"
    "  4K byte Data buffer to carry on packet payload\r\n"
    "",
    "Ex:\r\n"
    "  tmd_api packet send  pckt_pyld_byt_siz\r\n"
    "  0 pckt_payload 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(17)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PACKET_RECV_RECV_ID,
    "recv",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  This procedure receives one packet from the device CPU interface.\r\n"
    "  This procedure reads the packet regardless of its origin. That is,\r\n"
    "  if it was sent from tmd_send_packet, or any other method.\r\n"
    "",
    "Ex:\r\n"
    "  tmd_api packet receive  bytes\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(18)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PACKET_RECV_RECV_SIZE_ID,
    "payload_byte_size",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  packet.payload_byte_size:\r\n"
    "  Number of bytes to read (related to 'payload').\r\n"
    "",
    "Ex:\r\n"
    "  tmd_api packet receive  bytes\r\n"
    "  0 pckt_payload 0\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PACKET_RECV_PROC_CREATE_ID,
    "proc_create",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Creates a task to monitor CPU packets\r\n"
    "",
    "Ex:\r\n"
    "  tmd_api packet receive  bytes\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(30)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_PACKET_RECV_PROC_DELETE_ID,
    "proc_delete",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Kills the task to monitor CPU packets\r\n"
    "",
    "Ex:\r\n"
    "  tmd_api packet receive  bytes\r\n"
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(31)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_API_PACKET_ID,
    "packet",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, BIT(17)|BIT(18)|BIT(30)|BIT(31)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } packet*/

#ifdef UI_UTILS
{
    PARAM_TMD_API_UTILS_ID,
    "utils",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(18) | BIT(19), BIT(8)},
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#if UI_UNDEF_TEMP
  {
    PARAM_TMD_UTILS_TMD_REVISION_GET,
    "revision_get",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Gets device revision (e.g. Tmd-A2)\r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api utils revision_get\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(8)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* UI_UNDEF_TEMP */
  {
    PARAM_TMD_UTILS_SET_DEFAULT_DEVICE_ID,
    "set_unit",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets device id to be used by all API-s \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api utils set_unit id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(18)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_UTILS_GET_DEFAULT_DEVICE_ID,
    "get_unit",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Gets device id used by all API-s \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api utils get_unit\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(19)},
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_UTILS_SET_DEFAULT_DEVICE_ID_DEVICE_ID_ID,
    "id",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Device id. Range: 0 - 2047 \r\n"
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api utils set_unit id 0\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(18)},
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif

#ifdef UI_CELL/* { cell*/
  {
    PARAM_TMD_API_CELLS_ID,
    "cell",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(6)|BIT(7), BIT(30)|BIT(31)},
    1,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_READ_DIRECT_ID,
    "read_direct",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell read_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(26)},
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_WRITE_DIRECT_ID,
    "write_direct",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell write_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(27)},
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_READ_INDIRECT_ID,
    "read_indirect",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(28)},
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_WRITE_INDIRECT_ID,
    "write_indirect",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell write_indirect destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(29)},
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_CPU2CPU_ID,
    "cpu_to_cpu_write",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell cpu2cpu destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(6)},
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_CPU2CPU_READ_ID,
    "cpu_to_cpu_read",
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0],
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell cpu2cpu destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(7)},
    2,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_READ_DIRECT_DEST_ENTITY_TYPE_ID,
    "destination_entity_type",
    (PARAM_VAL_RULES *)&TMD_SAND_DEVICE_ENTITY_rule[0],
    (sizeof(TMD_SAND_DEVICE_ENTITY_rule) / sizeof(TMD_SAND_DEVICE_ENTITY_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell read_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(26)},
    3,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_READ_DIRECT_LINK_FIP_TO_FE_ID,
    "fip_fe1_fe2_fe3_output_links",
    (PARAM_VAL_RULES *)&TMD_CELL_LINKS_NUMBER_rule[0],
    (sizeof(TMD_CELL_LINKS_NUMBER_rule) / sizeof(TMD_CELL_LINKS_NUMBER_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell read_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(26)},
    4,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_READ_DIRECT_OFFSET_ID,
    "offset",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell read_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 \r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(26)},
    5,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_WRITE_DIRECT_DEST_ENTITY_TYPE_ID,
    "destination_entity_type",
    (PARAM_VAL_RULES *)&TMD_SAND_DEVICE_ENTITY_rule[0],
    (sizeof(TMD_SAND_DEVICE_ENTITY_rule) / sizeof(TMD_SAND_DEVICE_ENTITY_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell write_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(27)},
    3,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_WRITE_DIRECT_LINK_FIP_TO_FE_ID,
    "fip_fe1_fe2_fe3_output_links",
    (PARAM_VAL_RULES *)&TMD_CELL_LINKS_NUMBER_rule[0],
    (sizeof(TMD_CELL_LINKS_NUMBER_rule) / sizeof(TMD_CELL_LINKS_NUMBER_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell write_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(27)},
    4,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_WRITE_DIRECT_OFFSET_ID,
    "offset",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell write_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(27)},
    5,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_WRITE_DIRECT_DATA_IN_ID,
    "data_to_write",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell write_direct destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(27)},
    6,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_READ_INDIRECT_DEST_ENTITY_TYPE_ID,
    "destination_entity_type",
    (PARAM_VAL_RULES *)&TMD_SAND_DEVICE_ENTITY_rule[0],
    (sizeof(TMD_SAND_DEVICE_ENTITY_rule) / sizeof(TMD_SAND_DEVICE_ENTITY_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(28)},
    3,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_READ_INDIRECT_LINK_FIP_TO_FE_ID,
      "fip_fe1_fe2_fe3_output_links",
    (PARAM_VAL_RULES *)&TMD_CELL_LINKS_NUMBER_rule[0],
    (sizeof(TMD_CELL_LINKS_NUMBER_rule) / sizeof(TMD_CELL_LINKS_NUMBER_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(28)},
    4,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_READ_INDIRECT_OFFSET_ID,
    "offset",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(28)},
    5,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_WRITE_INDIRECT_DEST_ENTITY_TYPE_ID,
    "destination_entity_type",
    (PARAM_VAL_RULES *)&TMD_SAND_DEVICE_ENTITY_rule[0],
    (sizeof(TMD_SAND_DEVICE_ENTITY_rule) / sizeof(TMD_SAND_DEVICE_ENTITY_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell write_indirect destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(29)},
    3,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_WRITE_INDIRECT_LINK_FIP_TO_FE_ID,
    "fip_fe1_fe2_fe3_output_links",
    (PARAM_VAL_RULES *)&TMD_CELL_LINKS_NUMBER_rule[0],
    (sizeof(TMD_CELL_LINKS_NUMBER_rule) / sizeof(TMD_CELL_LINKS_NUMBER_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell write_indirect destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(29)},
    4,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_WRITE_INDIRECT_OFFSET_ID,
    "offset",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell write_indirect destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(29)},
    5,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_WRITE_INDIRECT_DATA_IN_ID,
    "data_to_write",
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0],
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell write_indirect destination_entity_type 2 fip_to_fe1_link_number 1 fe1_to_fe2_link_number 3 fe2_to_fe3_link_number 4 fe3_to_fip_link_number 5 offset 6 data_to_write 7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(29)},
    6,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_CPU2CPU_DEST_ENTITY_TYPE_ID,
    "destination_entity_type",
    (PARAM_VAL_RULES *)&TMD_SAND_DEVICE_ENTITY_rule[0],
    (sizeof(TMD_SAND_DEVICE_ENTITY_rule) / sizeof(TMD_SAND_DEVICE_ENTITY_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(6)},
    3,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_CPU2CPU_LINK_FIP_TO_FE_ID,
    "fip_fe1_fe2_fe3_output_links",
    (PARAM_VAL_RULES *)&TMD_CELL_LINKS_NUMBER_rule[0],
    (sizeof(TMD_CELL_LINKS_NUMBER_rule) / sizeof(TMD_CELL_LINKS_NUMBER_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(6)},
    4,
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_TMD_CELL_CPU2CPU_DATA_IN_ID,
    "data_in",
    (PARAM_VAL_RULES *)&TMD_CELL_CPU2CPU_DATA_IN_rule[0],
    (sizeof(TMD_CELL_CPU2CPU_DATA_IN_rule) / sizeof(TMD_CELL_CPU2CPU_DATA_IN_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#ifdef UI_TMD_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  tmd_api cell read_indirect destination_entity_type 2 fip_to_fe1_link_number 0 fe1_to_fe2_link_number 0 fe2_to_fe3_link_number 0 fe3_to_fip_link_number 0 offset 0x8 data_to_write 0x7\r\n"
#endif
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(6)},
    LAST_ORDINAL,
    (VAL_PROC_PTR)NULL
  },
  { 
    PARAM_TMD_CELL_MC_TBL_WRITE_MC_TBL_WRITE_ID, 
    "mc_tbl_write", 
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0], 
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure an entry of the SOC_SAND_FE600 multicast tables via inband indirect write\n\r"
    "  cells.\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_write mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0 data_index 0 data 0\n\r"
    "  wait_for_ack 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(30)}, 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_WRITE_MC_TBL_WRITE_MC_ID_NDX_ID, 
    "mc_id_ndx", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mc_id_ndx:\n\r"
    "  Id of the multicast group (and also the entry index in the multicast table).\n\r"
    "  Range: 0 - 16K-1.\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_write mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0 data_index 0 data 0\n\r"
    "  wait_for_ack 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(30)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_WRITE_MC_TBL_WRITE_INFO_FILTER_INDEX_ID, 
    "filter_index", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  filter_index:\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_write mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0 data_index 0 data 0\n\r"
    "  wait_for_ack 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(30)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_WRITE_MC_TBL_WRITE_INFO_FILTER_ID, 
    "filter", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.filter[ prm_filter_index]:\n\r"
    "  Filter indicating the field changes to perform on the inband cell (in\n\r"
    "  comparison with the previous inband cell sent via tmd_cell_mc_tbl_write).\n\r"
    "  If True, the field is updated, otherwise the previous value is set.The filter\n\r"
    "  mapping is: 0 - 'mc_id_ndx', 1 - 'fe_location', 2 - 'path_links[0]', 3 -\n\r"
    "  'path_links[1]', 4 - 'data[0]', 5 - 'data[1]', 6 - 'data[2]'.For a read\n\r"
    "  operation, only the indexes 0 to 4 are relevant.\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_write mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0 data_index 0 data 0\n\r"
    "  wait_for_ack 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(30)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_WRITE_MC_TBL_WRITE_INFO_PATH_LINKS_INDEX_ID, 
    "path_links_index", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  path_links_index:\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_write mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0 data_index 0 data 0\n\r"
    "  wait_for_ack 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(30)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_WRITE_MC_TBL_WRITE_INFO_PATH_LINKS_ID, 
    "path_links", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.path_links[ prm_path_links_index]:\n\r"
    "  Links to get to the fabric. For an FE1 fabric (in multi-stage) or FE2 fabric\n\r"
    "  (in single stage), only the first value must be configured. For an FE2 fabric\n\r"
    "  in multi-stage system, both values must be set.For each value, Range: 0 - 63.\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_write mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0 data_index 0 data 0\n\r"
    "  wait_for_ack 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(30)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_WRITE_MC_TBL_WRITE_INFO_FE_LOCATION_ID, 
    "fe_location", 
    (PARAM_VAL_RULES *)&TMD_CELL_FE_LOCATION_rule[0], 
    (sizeof(TMD_CELL_FE_LOCATION_rule) / sizeof(TMD_CELL_FE_LOCATION_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.fe_location:\n\r"
    "  The fabric stage location: FE1 or FE2.\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_write mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0 data_index 0 data 0\n\r"
    "  wait_for_ack 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(30)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_WRITE_MC_TBL_WRITE_TBL_DATA_DATA_INDEX_ID, 
    "data_index", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  data_index:\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_write mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0 data_index 0 data 0\n\r"
    "  wait_for_ack 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(30)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_WRITE_MC_TBL_WRITE_TBL_DATA_DATA_ID, 
    "data", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tbl_data.data[ prm_data_index]:\n\r"
    "  Links to get to the fabric. For an FE1 fabric (in multi-stage) or FE2 fabric\n\r"
    "  (in single stage), only the first value must be configured. For an FE2 fabric\n\r"
    "  in multi-stage system, both values must be set.For each value, Range: 0 - 63.\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_write mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0 data_index 0 data 0\n\r"
    "  wait_for_ack 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(30)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
  { 
    PARAM_TMD_CELL_MC_TBL_READ_MC_TBL_READ_ID, 
    "mc_tbl_read", 
    (PARAM_VAL_RULES *)&tmd_api_empty_vals[0], 
    (sizeof(tmd_api_empty_vals) / sizeof(tmd_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Get an entry of the SOC_SAND_FE600 multicast tables via an inband indirect read cell.\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_read mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(31)}, 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_READ_MC_TBL_READ_MC_ID_NDX_ID, 
    "mc_id_ndx", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mc_id_ndx:\n\r"
    "  Id of the multicast group (and also the entry index in the multicast table).\n\r"
    "  Range: 0 - 16K-1.\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_read mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(31)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_READ_MC_TBL_READ_INFO_FILTER_INDEX_ID, 
    "filter_index", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  filter_index:\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_read mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(31)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_READ_MC_TBL_READ_INFO_FILTER_ID, 
    "filter", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.filter[ prm_filter_index]:\n\r"
    "  Filter indicating the field changes to perform on the inband cell (in\n\r"
    "  comparison with the previous inband cell sent via tmd_cell_mc_tbl_write).\n\r"
    "  If True, the field is updated, otherwise the previous value is set.The filter\n\r"
    "  mapping is: 0 - 'mc_id_ndx', 1 - 'fe_location', 2 - 'path_links[0]', 3 -\n\r"
    "  'path_links[1]', 4 - 'data[0]', 5 - 'data[1]', 6 - 'data[2]'.For a read\n\r"
    "  operation, only the indexes 0 to 4 are relevant.\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_read mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(31)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_READ_MC_TBL_READ_INFO_PATH_LINKS_INDEX_ID, 
    "path_links_index", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  path_links_index:\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_read mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(31)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_READ_MC_TBL_READ_INFO_PATH_LINKS_ID, 
    "path_links", 
    (PARAM_VAL_RULES *)&tmd_api_free_vals[0], 
    (sizeof(tmd_api_free_vals) / sizeof(tmd_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.path_links[ prm_path_links_index]:\n\r"
    "  Links to get to the fabric. For an FE1 fabric (in multi-stage) or FE2 fabric\n\r"
    "  (in single stage), only the first value must be configured. For an FE2 fabric\n\r"
    "  in multi-stage system, both values must be set.For each value, Range: 0 - 63.\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_read mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(31)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_TMD_CELL_MC_TBL_READ_MC_TBL_READ_INFO_FE_LOCATION_ID, 
    "fe_location", 
    (PARAM_VAL_RULES *)&TMD_CELL_FE_LOCATION_rule[0], 
    (sizeof(TMD_CELL_FE_LOCATION_rule) / sizeof(TMD_CELL_FE_LOCATION_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.fe_location:\n\r"
    "  The fabric stage location: FE1 or FE2.\n\r"
    "",
#if UI_TMD_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  tmd_api cell mc_tbl_read mc_id_ndx 0 filter_index 0 filter 0\n\r"
    "  path_links_index 0 path_links 0 fe_location 0\n\r"
#endif 
    "",
    "",
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(31)}, 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  

#endif/* { cell*/
/*
* Last element. Do not remove.
* Last bit used:
* {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, BIT(31)},
*/
    {
      PARAM_END_OF_LIST
    }
}
#endif
;

/* } */

#include <soc/dpp/SAND/Utils/sand_footer.h>

/* } __UI_ROM_DEFI_TMD_API_INCLUDED__*/
#endif

