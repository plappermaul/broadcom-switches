/* $Id: ui_rom_defi_petra_pp_api.h,v 1.5 Broadcom SDK $
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
*/
                                                                    
                                                                    
#ifndef __UI_ROM_DEFI_PETRA_PP_API_INCLUDED__                       
/* { */                                                             
#define __UI_ROM_DEFI_PETRA_PP_API_INCLUDED__                       
                                                                    
#include <soc/dpp/SAND/Utils/sand_header.h>

#ifdef __VXWORKS__
  #define UI_DEMY_VAL
#else
  #define UI_DEMY_VAL 0
#endif

#include <appl/dpp/UserInterface/ui_pure_defi_petra_pp_api.h>

#include <soc/dpp/Petra/PP/petra_pp_api_vid_res.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_cos.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_trap.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_mact.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_bridging.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_filter.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_stp.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_policer.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_edit.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_qinq.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_port.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_vlan.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_fec_table.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_arp_table.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_ipv4_uc.h>    
#include <soc/dpp/Petra/PP/petra_pp_api_ipv4_mc.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_tpid.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_diagnostics.h>                                                               
#include <soc/dpp/Petra/PP/petra_pp_api_acl.h> 

#include <soc/dpp/SAND/SAND_FM/sand_pp_general.h>

#define UI_VID_RES
#define UI_COS
#define UI_TRAP
#define UI_MACT
#define UI_BRIDGING
#define UI_FILTER
#define UI_STP
#define UI_POLICER
#define UI_EDIT
#define UI_QINQ
#define UI_PORT
#define UI_VLAN
#define UI_FEC_TABLE
#define UI_ARP_TABLE
#define UI_IPV4_UC
#define UI_TPID
#define UI_DIAGNOSTICS
#define UI_ACL
#define UI_IPV4_MC
#define UI_IPV6

#ifndef __DUNE_SSF__
  /* #define UI_ATM */
#endif

 /* 
  * ENUM RULES 
  * {
  */
/********************************************************/        
/********************************************************/        

#ifndef CONST
#define CONST const
#endif


/********************************************************/        
                                                                              
EXTERN CONST
   PARAM_VAL_RULES
     soc_petra_pp_api_mac_addr_vals[]
#ifdef INIT
   =
{
  {
    VAL_TEXT,
    (char *)0,
    {
      {
          /*
           * Maximal number of characters.
           */
        12,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)"    MAC address parameter. 12 hex digits. No 0 no 0x Prefix",
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;  

                                                                              
EXTERN CONST
   PARAM_VAL_RULES
     soc_petra_pp_api_ipv6_addr_vals[]
#ifdef INIT
   =
{
  {
    VAL_TEXT,
    (char *)0,
    {
      {
          /*
           * Maximal number of characters.
           */
        32,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)"    IPV6 address parameter. 12 hex digits. No 0 no 0x Prefix",
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;  

/********************************************************
*NAME
*  subnet_ip
*TYPE: BUFFER
*FUNCTION:
*  ARRAY CONTAINING THE INITIAL LIST OF VALUES
*  RELATED TO THE PARAMETER "WRITE".
*ORGANIZATION:
*  ARRAY OF STRUCTURES OF TYPE 'PARAM_VAL':
*    int val_type -
*      Type of value. Can be:
*        VAL_END_OF_LIST 0
*        VAL_NUMERIC     1
*        VAL_SYMBOL      2
*        VAL_TEXT        3
*        VAL_IP          4
*      The first one is only to indicate the end of
*      this array. The others indicate what kind of
*      value this is.
*    VAL_DESCRIPTOR val_descriptor -
*      Union of structures (of types VAL_NUM_DESCRIPTOR,
*      VAL_TEXT_DESCRIPTOR, VAL_IP_DESCRIPTOR and
*      VAL_SYMB_DESCRIPTOR). Descriptor of value.
*      See details in file of definition. Note: Symbols
*      must be small letters only!
*USAGE:
*  SEE ORGANIZATION.
*REMARKS:
*  NONE.
*SEE ALSO:
*
********************************************************/
EXTERN CONST
   PARAM_VAL_RULES
     soc_petra_pp_api_ip_address_vals[]
#ifdef INIT
   =
{
  {
    VAL_IP,
    SYMB_NAME_IP,
    {
      {UI_DEMY_VAL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "vbp",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_PORT_L2_TYPE_VBP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_PORT_L2_TYPE.SOC_SAND_PP_PORT_L2_TYPE_VBP:\r\n"
        "  VLAN Bridge Port \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "cnp",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_PORT_L2_TYPE_CNP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_PORT_L2_TYPE.SOC_SAND_PP_PORT_L2_TYPE_CNP:\r\n"
        "  Customer Network Port: An S-VLAN component Port on a Provider Bridge or\r\n"
        "  within a Provider Edge Bridge that receives and transmits frame for a single\r\n"
        "  customer. \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "cep",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_PORT_L2_TYPE_CEP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_PORT_L2_TYPE.SOC_SAND_PP_PORT_L2_TYPE_CEP:\r\n"
        "  Customer Edge Port: A C-VLAN component Port on a Provider Edge Bridge that is\r\n"
        "  connected to customer owned equipment and receives and transmits frames for a\r\n"
        "  single customer\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "pnp",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_PORT_L2_TYPE_PNP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_PORT_L2_TYPE.SOC_SAND_PP_PORT_L2_TYPE_PNP:\r\n"
        "  Provider Network Port: An S-VLAN component Port on a Provider Bridge that can\r\n"
        "  transmit and receive frames for multiple customers.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_SAND_PP_L4_PORT_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "udp",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_L4_PORT_TYPE_UDP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_L4_PORT_TYPE.SOC_SAND_PP_L4_PORT_TYPE_UDP:\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "tcp",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_L4_PORT_TYPE_TCP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_L4_PORT_TYPE.SOC_SAND_PP_L4_PORT_TYPE_TCP:\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "none",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_FRWRD_ACTION_TYPE_NONE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_FRWRD_ACTION_TYPE.SOC_SAND_PP_FRWRD_ACTION_TYPE_NONE:\r\n"
        "  No Forwarding Action\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "normal",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_FRWRD_ACTION_TYPE_NORMAL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_FRWRD_ACTION_TYPE.SOC_SAND_PP_FRWRD_ACTION_TYPE_NORMAL:\r\n"
        "  The packet should be forwarded normally\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "intercept",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_FRWRD_ACTION_TYPE_INTERCEPT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_FRWRD_ACTION_TYPE.SOC_SAND_PP_FRWRD_ACTION_TYPE_INTERCEPT:\r\n"
        "  The packet should be intercepted, usually to the CPU.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "control",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_FRWRD_ACTION_TYPE_CONTROL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_FRWRD_ACTION_TYPE.SOC_SAND_PP_FRWRD_ACTION_TYPE_CONTROL:\r\n"
        "  The packet is a control packet, usually destined to the CPU.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/  

/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_BRIDGING_CONFIG_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "port_sa_not_found",                       
    {                                                                         
      {                                                                       
        0,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  port_sa_not_found.port_sa_not_found:\r\n"
        "  config port sa not found\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  }, 
  {                                                                           
    VAL_SYMBOL,                                                               
    "port_da_not_found",                       
    {                                                                         
      {                                                                       
        1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  port_da_not_found.port_da_not_found:\r\n"
        "  config port DA not found\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "vlan_da_not_uc",                       
    {                                                                         
      {                                                                       
        2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  vlan_da_not_uc.vlan_da_not_uc:\r\n"
        "  config VLAN DA not found UC\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "vlan_da_not_mc",                       
    {                                                                         
      {                                                                       
        3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  vlan_da_not_mc.vlan_da_not_mc:\r\n"
        "  config VLAN DA not found MC \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/ 
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_SAND_PP_SYS_PORT_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "single_port",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_SYS_PORT_TYPE_SINGLE_PORT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_SYS_PORT_TYPE.SOC_SAND_PP_SYS_PORT_TYPE_SINGLE_PORT:\r\n"
        "  Single port\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "lag",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_SYS_PORT_TYPE_LAG,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_SYS_PORT_TYPE.SOC_SAND_PP_SYS_PORT_TYPE_LAG:\r\n"
        "  LAG\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "drop",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_DEST_TYPE_DROP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_DEST_TYPE.SOC_SAND_PP_DEST_TYPE_DROP:\r\n"
        "  Drop destination\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "router",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_DEST_TYPE_ROUTER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_DEST_TYPE.SOC_SAND_PP_DEST_TYPE_ROUTER:\r\n"
        "  Router destination\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "single_port",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_DEST_SINGLE_PORT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_DEST_TYPE.SOC_SAND_PP_DEST_SINGLE_PORT:\r\n"
        "  Single port\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "lag",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_DEST_LAG,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_DEST_TYPE.SOC_SAND_PP_DEST_LAG:\r\n"
        "  LAG\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "multicast",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_DEST_MULTICAST,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_DEST_TYPE.SOC_SAND_PP_DEST_MULTICAST:\r\n"
        "  Multicast Destination\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "fec",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_DEST_FEC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_DEST_TYPE.SOC_SAND_PP_DEST_FEC:\r\n"
        "  OUT LIF Destination. Relevant only if not plain bridging.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "drop",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_FEC_COMMAND_TYPE_DROP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_FEC_COMMAND_TYPE.SOC_SAND_PP_FEC_COMMAND_TYPE_DROP:\r\n"
        "  Drop command; the packet is dropped,no further processing is done for the\r\n"
        "  packet.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "route",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_FEC_COMMAND_TYPE_ROUTE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_FEC_COMMAND_TYPE.SOC_SAND_PP_FEC_COMMAND_TYPE_ROUTE:\r\n"
        "  Route command, the packet is routed and sent to next destination.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "trap",                       
    {                                                                         
      {                                                                       
        SOC_SAND_PP_FEC_COMMAND_TYPE_TRAP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_SAND_PP_FEC_COMMAND_TYPE.SOC_SAND_PP_FEC_COMMAND_TYPE_TRAP:\r\n"
        "  Trap command, the packet is forwarded to the CPU with a 'cpu_code'.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_ENCAP_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "dsap_ssap",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_ENCAP_TYPE_DSAP_SSAP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_ENCAP_TYPE.SOC_PETRA_PP_ENCAP_TYPE_LLC:\r\n"
        "  Expecting Ethernet with LLC (Logical Link Control) in encap_value\r\n"
        "  header IEEE standard 802.2\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "eth",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_ENCAP_TYPE_ETH,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_ENCAP_TYPE.SOC_PETRA_PP_ENCAP_TYPE_ETH:\r\n"
        "  Expecting Ethernet type in encap_value. The packet's type in the Ethernet II\r\n"
        "  type should be equal to encap_value\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_COS_L4_PORT_RANGE_ID_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "default",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_COS_L4_PORT_RANGE_ID_DEFAULT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_COS_L4_PORT_RANGE_ID.SOC_PETRA_PP_COS_L4_PORT_RANGE_ID_DEFAULT:\r\n"
        "  Cannot be used for setting.Ports that aren't in the other configured ranges\r\n"
        "  belong to this range.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "1",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_COS_L4_PORT_RANGE_ID_1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_COS_L4_PORT_RANGE_ID.SOC_PETRA_PP_COS_L4_PORT_RANGE_ID_1:\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "2",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_COS_L4_PORT_RANGE_ID_2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_COS_L4_PORT_RANGE_ID.SOC_PETRA_PP_COS_L4_PORT_RANGE_ID_2:\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "3",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_COS_L4_PORT_RANGE_ID_3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_COS_L4_PORT_RANGE_ID.SOC_PETRA_PP_COS_L4_PORT_RANGE_ID_3:\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "last",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_COS_L4_PORT_RANGE_ID_LAST,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_COS_L4_PORT_RANGE_ID.SOC_PETRA_PP_COS_L4_PORT_RANGE_ID_LAST:\r\n"
        "  Must be the last value\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_COS_RANGE_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "inclusive",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_COS_INCLUSIVE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_COS_RANGE_TYPE.SOC_PETRA_PP_COS_INCLUSIVE:\r\n"
        "  There is match when port inside the range.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "exclusive",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_COS_EXCLUSIVE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_COS_RANGE_TYPE.SOC_PETRA_PP_COS_EXCLUSIVE:\r\n"
        "  There is match when port outside the range.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_TRAP_PROTOCOL_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "arp",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_TRAP_PROTOCOL_ARP_REQUEST,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_TRAP_PROTOCOL.SOC_PETRA_PP_TRAP_PROTOCOL_ARP_REQUEST:\r\n"
        "  ARP protocol \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "igmp_1",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_TRAP_PROTOCOL_IGMP_1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_TRAP_PROTOCOL.SOC_PETRA_PP_TRAP_PROTOCOL_IGMP_1:\r\n"
        "  IGMP protocol, IGMP-Hdr.Type = 1\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "igmp_2",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_TRAP_PROTOCOL_IGMP_2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_TRAP_PROTOCOL.SOC_PETRA_PP_TRAP_PROTOCOL_IGMP_2:\r\n"
        "  IGMP protocol, IGMP-Hdr.Type = 2\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "igmp_other",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_TRAP_PROTOCOL_IGMP_OTHER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_TRAP_PROTOCOL.SOC_PETRA_PP_TRAP_PROTOCOL_IGMP_OTHER:\r\n"
        "  IGMP protocol, Rest IGMP-Hdr Types\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "vrrp",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_TRAP_PROTOCOL_VRRP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_TRAP_PROTOCOL.SOC_PETRA_PP_TRAP_PROTOCOL_VRRP:\r\n"
        "  VRRP protocol\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "icmpv6",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_TRAP_PROTOCOL_ICMPV6,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_TRAP_PROTOCOL.SOC_PETRA_PP_TRAP_PROTOCOL_ICMPV6:\r\n"
        "  ICMPv6 protocol\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_MACT_AGE_STATUS_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "s0",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_AGE_STATUS_0,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_AGE_STATUS.SOC_PETRA_PP_MACT_AGE_STATUS_0:\r\n"
        "  This entry is not subject to Aging (static or invalid).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "s1",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_AGE_STATUS_1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_AGE_STATUS.SOC_PETRA_PP_MACT_AGE_STATUS_1:\r\n"
        "  The age status was decremented twice.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "s2",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_AGE_STATUS_2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_AGE_STATUS.SOC_PETRA_PP_MACT_AGE_STATUS_2:\r\n"
        "  The age status was decremented once.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "s3",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_AGE_STATUS_3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_AGE_STATUS.SOC_PETRA_PP_MACT_AGE_STATUS_3:\r\n"
        "  The entry was refreshed or learned in the last cycle, and was not decremented\r\n"
        "  since then.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_MACT_EVENT_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "refresh",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_EVENT_TYPE_REFRESH,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_EVENT_TYPE.SOC_PETRA_PP_MACT_EVENT_TYPE_REFRESH:\r\n"
        "  Refresh Event.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "learn",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_EVENT_TYPE_LEARN,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_EVENT_TYPE.SOC_PETRA_PP_MACT_EVENT_TYPE_LEARN:\r\n"
        "  Learn Event.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ack",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_EVENT_TYPE_ACK,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_EVENT_TYPE.SOC_PETRA_PP_MACT_EVENT_TYPE_ACK:\r\n"
        "  Acknowledgment Event.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_MACT_OPERATION_MODE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
      "cpu_dist",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_OPERATION_MODE_CPU_DISTRIBUTED,                                             
          /*                                                                  
          * Casting added here just to keep the compiler silent.      
          */                                                                 
          (long)""                                                            
          "  SOC_PETRA_PP_MACT_OPERATION_MODE.SOC_PETRA_PP_MACT_OPERATION_MODE_CPU:\r\n"
          "  The CPU is responsible for managing the learn/refresh/delete events, and\r\n"
          "  informing other devices.\r\n"
          "",
          /*                                                                  
          * Pointer to a function to call after symbolic value               
          * has been accepted. Casting should be 'VAL_PROC_PTR'.             
          * Casting to 'long' added here just to keep the             
          * compiler silent.                                                 
          */                                                                 
          (long)NULL                                                            
      }                                                                       
    }                                                                         
  },     
  {                                                                           
    VAL_SYMBOL,                                                               
    "cpu_cent",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_OPERATION_MODE_CPU_CENTRALIZED,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_OPERATION_MODE.SOC_PETRA_PP_MACT_OPERATION_MODE_CPU:\r\n"
        "  The CPU is responsible for managing the learn/refresh/delete events, and\r\n"
        "  informing other devices.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "automatic_dist",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_OPERATION_MODE_AUTOMATIC_DISTRIBUTED,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_OPERATION_MODE.SOC_PETRA_PP_MACT_OPERATION_MODE_AUTOMATIC_DISTRIBUT\r\n"
        "  D:\r\n"
        "  The device (OLP) is responsible for managing the learn/refresh/remove events,\r\n"
        "  and it informs other devices directly\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "automatic_cent",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_OPERATION_MODE_AUTOMATIC_CENTRALIZED,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_OPERATION_MODE.SOC_PETRA_PP_MACT_OPERATION_MODE_AUTOMATIC_CENTRALIZ\r\n"
        "  D:\r\n"
        "  The device (OLP) is responsible for managing the learn/refresh/remove events,\r\n"
        "  and it informs a central CPU\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_MACT_FLUSH_MODE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "clear",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_FLUSH_MODE_CLEAR,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_FLUSH_MODE.SOC_PETRA_PP_MACT_FLUSH_MODE_CLEAR:\r\n"
        "  The MACT entry is deleted on match.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "transplant",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_FLUSH_MODE_TRANSPLANT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_FLUSH_MODE.SOC_PETRA_PP_MACT_FLUSH_MODE_TRANSPLANT:\r\n"
        "  The MACT entry is transplanted to a new destination on match.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "ethernet",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE_ETHERNET,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE.SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE_ETHERNET:\r\n"
        "  Ethernet Message Header\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "raw",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE_RAW,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE.SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE_ETHERNET_\r\n"
        "  LAN_TAGGED:\r\n"
        "  Ethernet Message Header with VLAN tag (IEEE 802.1Q tag )\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "itmh",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE_ITMH,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE.SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE_ITMH:\r\n"
        "  Ingress Traffic Manager Header (ITMH) \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
                                                                       
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "all",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_ALL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE.SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_ALL:\r\n"
        "  All packets are accepted (tagged, untagged and Priority-Tagged)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "tagged_only",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_TAGGED_ONLY,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE.SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_TAGGED_ON\r\n"
        "  Y:\r\n"
        "  Tagged packets are accepted. Untagged and Priority-Tagged packets are filtered\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "untagged_and_priority_only",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_UNTAGGED_AND_PRIORITY_ONLY,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE.SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_UNTAGGED_\r\n"
        "  ND_PRIORITY_ONLY:\r\n"
        "  Untagged and Priority-Tagged packets are accepted. Tagged packets are filtered\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "none",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_NONE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE.SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_\r\n"
        "  YPE_NONE:\r\n"
        "  Packet with any forwarding action is Not accepted (control, intercept or\r\n"
        "  snoop)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "all",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_ALL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE.SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_\r\n"
        "  YPE_ALL:\r\n"
        "  Packet with any forwarding action is accepted (control, intercept or snoop)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "control_only",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_CONTROL_ONLY,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE.SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_\r\n"
        "  YPE_CONTROL_ONLY:\r\n"
        "  Only Packets with control forwarding action are accepted, packets with\r\n"
        "  intercept or snoop forwarding actions are dropped.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "intercept_snoop_only",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_INTERCEPT_SNOOP_ONLY,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE.SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_\r\n"
        "  YPE_INTERCEPT_SNOOP_ONLY:\r\n"
        "  Only Packets with intercept or snoop forwarding action are accepted, packets\r\n"
        "  with control forwarding actions are dropped.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_STP_STATE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "discard",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_STP_STATE_DISCARD,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_STP_STATE.SOC_PETRA_PP_STP_STATE_DISCARD:\r\n"
        "  Packet is dropped. SA not learnt.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "learn",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_STP_STATE_LEARN,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_STP_STATE.SOC_PETRA_PP_STP_STATE_LEARN:\r\n"
        "  Packet is dropped. SA learnt\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "forward",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_STP_STATE_FORWARD,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_STP_STATE.SOC_PETRA_PP_STP_STATE_FORWARD:\r\n"
        "  Packet is forwarded.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_POLICER_RATE_MODE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "packets",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_POLICER_RATE_MODE_PACKETS,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_POLICER_RATE_MODE.SOC_PETRA_PP_POLICER_RATE_MODE_PACKETS:\r\n"
        "  policer is in packet mode. Every packet is considered to be 64 bytes.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "bits",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_POLICER_RATE_MODE_BITS,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_POLICER_RATE_MODE.SOC_PETRA_PP_POLICER_RATE_MODE_BITS:\r\n"
        "  policer is in byte mode. Actual packet size is used. Including headers (after\r\n"
        "  Editing)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_POLICER_PACKET_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "known_uc",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_POLICER_PACKET_TYPE_KNOWN_UC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_POLICER_PACKET_TYPE.SOC_PETRA_PP_POLICER_PACKET_TYPE_KNOWN_UC:\r\n"
        "  Known UC (i.e. DA found and DA-MAC is unicast)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "unknown_uc",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_POLICER_PACKET_TYPE_UNKNOWN_UC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_POLICER_PACKET_TYPE.SOC_PETRA_PP_POLICER_PACKET_TYPE_UNKNOWN_UC:\r\n"
        "  Unknown UC (i.e. DA not found DA-MAC is unicast)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "broadcast",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_POLICER_PACKET_TYPE_BROADCAST,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_POLICER_PACKET_TYPE.SOC_PETRA_PP_POLICER_PACKET_TYPE_BROADCAST:\r\n"
        "  Broadcast (DA is equal to FF-FF-FF-FF-FF-FF)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "known_l2_mc",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_POLICER_PACKET_TYPE_KNOWN_L2_MC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_POLICER_PACKET_TYPE.SOC_PETRA_PP_POLICER_PACKET_TYPE_KNOWN_L2_MC:\r\n"
        "  Known layer-2 multicast (i.e. DA found and DA-MAC is multicast)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "unknown_l2_mc",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_POLICER_PACKET_TYPE_UNKNOWN_L2_MC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_POLICER_PACKET_TYPE.SOC_PETRA_PP_POLICER_PACKET_TYPE_UNKNOWN_L2_MC:\r\n"
        "  Unknown layer-2 multicast (i.e. DA not found and DA-MAC is multicast)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "known_da_normal",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_POLICER_PACKET_TYPE_KNOWN_DA_NORMAL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_POLICER_PACKET_TYPE.SOC_PETRA_PP_POLICER_PACKET_TYPE_KNOWN_DA_NORMAL:\r\n"
        "  Known DA Normal (i.e. DA found and forwarding decision is Normal ) \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "known_da_intercept",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_POLICER_PACKET_TYPE_KNOWN_DA_INTERCEPT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_POLICER_PACKET_TYPE.SOC_PETRA_PP_POLICER_PACKET_TYPE_KNOWN_DA_INTERCEPT:\r\n"
        "  Known DA Intercept (i.e. DA found and forwarding decision is Intercept )  \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "known_da_control",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_POLICER_PACKET_TYPE_KNOWN_DA_CONTROL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_POLICER_PACKET_TYPE.SOC_PETRA_PP_POLICER_PACKET_TYPE_KNOWN_DA_CONTROL:\r\n"
        "  Known DA Control (i.e. DA found and forwarding decision is Control ) \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_MTU_VIOLATION_ACTION_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "forward",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MTU_VIOLATION_ACTION_FORWARD,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MTU_VIOLATION_ACTION.SOC_PETRA_PP_MTU_VIOLATION_ACTION_FORWARD:\r\n"
        "  Forward packets that violate the MTU.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "drop",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MTU_VIOLATION_ACTION_DROP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MTU_VIOLATION_ACTION.SOC_PETRA_PP_MTU_VIOLATION_ACTION_DROP:\r\n"
        "  Drop packets that violate the MTU.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "trap",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_MTU_VIOLATION_ACTION_TRAP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_MTU_VIOLATION_ACTION.SOC_PETRA_PP_MTU_VIOLATION_ACTION_TRAP:\r\n"
        "  Trap packets that violate the MTU.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_FEC_RPF_CHECK_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "vid",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_RPF_CHECK_VID,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_RPF_CHECK.SOC_PETRA_PP_FEC_RPF_CHECK_VID:\r\n"
        "  Check the incoming packet VID against expected vid in the RPF check\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "port",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_RPF_CHECK_PORT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_RPF_CHECK.SOC_PETRA_PP_FEC_RPF_CHECK_PORT:\r\n"
        "  Check the port the packet came from against expected port in the RPF check\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "vid_port",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_RPF_CHECK_VID_PORT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_RPF_CHECK.SOC_PETRA_PP_FEC_RPF_CHECK_VID_PORT:\r\n"
        "  Check both the port the packet came from and the vid of the packet against\r\n"
        "  expected port/vid in the RPF check\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "src_add",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_RPF_CHECK_SRC_ADD,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_RPF_CHECK.SOC_PETRA_PP_FEC_RPF_CHECK_SRC_ADD:\r\n"
        "  Perform the following check:1. Lookup the source address of the packet in the\r\n"
        "  Unicast FEC table 2. If the packet has arrived on the port leading back to\r\n"
        "  the source, the RPF check is successful and the packet is forwarded.\r\n"
        "  Otherwise it fails and the packet is dropped. \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_FEC_ENTRY_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "none",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_ENTRY_TYPE_NONE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_ENTRY_TYPE.SOC_PETRA_PP_FEC_ENTRY_TYPE_NONE:\r\n"
        "  The FEC entry is not allocated\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "uc",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_ENTRY_TYPE_UC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_ENTRY_TYPE.SOC_PETRA_PP_FEC_ENTRY_TYPE_UC:\r\n"
        "  The FEC entry is used as Unicast FEC entry\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mc",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_ENTRY_TYPE_MC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_ENTRY_TYPE.SOC_PETRA_PP_FEC_ENTRY_TYPE_MC:\r\n"
        "  The FEC entry is used as Multicast FEC entry\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "prog_port",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_ENTRY_TYPE_PROG_PORT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_ENTRY_TYPE.SOC_PETRA_PP_FEC_ENTRY_TYPE_PROG_PORT:\r\n"
        "  The FEC entry is used for Programmable Port forwarding.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_FEC_ENTRY_USE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "ipv4_uc",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_ENTRY_USE_IPV4_UC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_ENTRY_USE.SOC_PETRA_PP_FEC_ENTRY_USE_IPV4_UC:\r\n"
        "  The FEC entry is referred by a Ipv4 UC route\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ipv4_mc",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_ENTRY_USE_IPV4_MC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_ENTRY_USE.SOC_PETRA_PP_FEC_ENTRY_USE_IPV4_MC:\r\n"
        "  The FEC entry is referred by a Ipv4 MC route\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ipv6_uc",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_ENTRY_USE_IPV6_UC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_ENTRY_USE.SOC_PETRA_PP_FEC_ENTRY_USE_IPV6_UC:\r\n"
        "  The FEC entry is referred by a Ipv6 UC route\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ipv6_mc",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_ENTRY_USE_IPV6_MC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_ENTRY_USE.SOC_PETRA_PP_FEC_ENTRY_USE_IPV6_MC:\r\n"
        "  The FEC entry is referred by a Ipv6 MC route\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "prog_port",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_ENTRY_USE_PROG_PORT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_ENTRY_USE.SOC_PETRA_PP_FEC_ENTRY_USE_PROG_PORT:\r\n"
        "  The FEC entry is referred by a Programmable Port.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "acl",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_FEC_ENTRY_USE_ACL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_FEC_ENTRY_USE.SOC_PETRA_PP_FEC_ENTRY_USE_ACL:\r\n"
        "  The FEC entry is referred by a ACL.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_L3_TABLE_ITER_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "fast",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_L3_TABLE_ITER_TYPE_FAST,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_L3_TABLE_ITER_TYPE.SOC_PETRA_PP_L3_TABLE_ITER_TYPE_FAST:\r\n"
        "  According to this type the iterator traverse the table unordered, but it\r\n"
        "  provides an efficient traverse of the table.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ip_prefix_ordered",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_L3_TABLE_ITER_TYPE_IP_PREFIX_ORDERED,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_L3_TABLE_ITER_TYPE.SOC_PETRA_PP_L3_TABLE_ITER_TYPE_IP_PREFIX_ORDERED:\r\n"
        "  According to this type the iterator traverse the table ordered according to\r\n"
        "  (IP, Prefix), it's slower than the fast type.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "prefix_ip_ordered",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_L3_TABLE_ITER_TYPE_PREFIX_IP_ORDERED,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_L3_TABLE_ITER_TYPE.SOC_PETRA_PP_L3_TABLE_ITER_TYPE_PREFIX_IP_ORDERED:\r\n"
        "  According to this type the iterator traverse the table ordered according to\r\n"
        "  (Prefix, IP), it's slower than the previous types (fast and (IP, Prefix)).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "header_options",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_HEADER_OPTIONS,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_IPV4_EXCEPTION_TYPE.SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_HEADER_OPTIONS:\r\n"
        "  IPv4 packets with options in the Header. \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "header_error",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_HEADER_ERROR,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_IPV4_EXCEPTION_TYPE.SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_HEADER_ERROR:\r\n"
        "  IPv4 packets with error in the Header (checksum). Must be trapped otherwise\r\n"
        "  error is returned.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ttl_1",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_TTL_1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_IPV4_EXCEPTION_TYPE.SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_TTL_1:\r\n"
        "  IPv4 packets with TTL equal to 1. \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ttl_0",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_TTL_0,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_IPV4_EXCEPTION_TYPE.SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_TTL_0:\r\n"
        "  IPv4 packets with TTL equal to 0. \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "rpf_fail",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_RPF_FAIL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_IPV4_EXCEPTION_TYPE.SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_RPF_FAIL:\r\n"
        "  IPv4 packets that the RPF check failed for them. Must be trapped otherwise\r\n"
        "  error is returned\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        

/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_DIAG_DROP_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "acl3",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_ACL3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_ACL3:\r\n"
        "  Specifies that ACL3 dropped the packet.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "acl2",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_ACL2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_ACL2:\r\n"
        "  Specifies that ACL2 dropped the packet.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "acl1",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_ACL1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_ACL1:\r\n"
        "  Specifies that ACL1 dropped the packet.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "acl0",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_ACL0,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_ACL0:\r\n"
        "  Specifies that ACL0 dropped the packet.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "l3",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_L3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_L3:\r\n"
        "  Specifies that the packet was routed and that the routing decision was\r\n"
        "  dropped.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "filter_8021x",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_FILTER_8021X,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_FILTER_8021X:\r\n"
        "  Specifies that the 802.1x filter trapped the packet.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "intercept_snoop_filter",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_INTERCEPT_SNOOP_FILTER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_INTERCEPT_SNOOP_FILTER:\r\n"
        "  Specifies that the snoop or intercept filter trapped the packet.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "vlan_invalid_filter",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_VLAN_INVALID_FILTER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_VLAN_INVALID_FILTER:\r\n"
        "  Specifies that the packet was filtered because the VLAN ID was invalid.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "routing_filter",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_ROUTING_FILTER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_ROUTING_FILTER:\r\n"
        "  Specifies that the routing filter trapped the packet.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "loop_filter",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_LOOP_FILTER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_LOOP_FILTER:\r\n"
        "  Specifies that the packet was filtered due to a loop.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "control_packet_filter",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_CONTROL_PACKET_FILTER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_CONTROL_PACKET_FILTER:\r\n"
        "  Specifies that the packet was filtered because it is control.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "vlan_tag_filter",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_VLAN_TAG_FILTER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_VLAN_TAG_FILTER:\r\n"
        "  Specifies that the packet was filtered due to VLAN tag.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "stp_filter",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_STP_FILTER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_STP_FILTER:\r\n"
        "  Specifies that the packet was filtered due to the STP state.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ingress_filter",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_INGRESS_FILTER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_INGRESS_FILTER:\r\n"
        "  Specifies that the packet was ingress filtered.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "port_no_da",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_PORT_NO_DA,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_PORT_NO_DA:\r\n"
        "  Specifies that the packet was dropped due to port configuration when the MAC\r\n"
        "  table DA lookup failed.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "vid_no_da",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_VID_NO_DA,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_VID_NO_DA:\r\n"
        "  Specifies that the packet was dropped due to VID configuration when the MAC\r\n"
        "  table DA lookup failed.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "port_no_sa",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_PORT_NO_SA,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_PORT_NO_SA:\r\n"
        "  Specifies that the packet was dropped due to port configuration when the MAC\r\n"
        "  table SA lookup failed.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "sa_drop",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_SA_DROP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_SA_DROP:\r\n"
        "  Specifies that the packet was dropped due to MAC table SA lookup.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "multicast_compatible",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_MULTICAST_COMPATIBLE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_MULTICAST_COMPATIBLE:\r\n"
        "  Specifies that the packet was dropped when identified as multicast compatible.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "da_drop",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_DA_DROP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_DA_DROP:\r\n"
        "  Specifies that the packet was dropped due to MAC table DA lookup.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "invalid_packet",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_INVALID_PACKET,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_INVALID_PACKET:\r\n"
        "  Specifies that the packet was identified as invalid.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "icmpv6",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_ICMPV6,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_ICMPV6:\r\n"
        "  Specifies that the packet was dropped due to a ICMPv6 trap\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "vrrp",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_VRRP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_VRRP:\r\n"
        "  Specifies that the packet was dropped due to a VRRP trap\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "igmp",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_IGMP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_IGMP:\r\n"
        "  Specifies that the packet was dropped due to an IGMP trap\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "arp",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_ARP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_ARP:\r\n"
        "  Specifies that the packet was dropped due to an ARP trap.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "bridge_control",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_BRIDGE_CONTROL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_BRIDGE_CONTROL:\r\n"
        "  Specifies that the packet was dropped due to a bridge control trap.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "cvlan_tag_filter",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_CVLAN_TAG_FILTER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_CVLAN_TAG_FILTER:\r\n"
        "  Specifies that the packet was dropped due to the CVLAN VLAN tag filter.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "cvlan_egress_filter",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_CVLAN_EGRESS_FILTER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_CVLAN_EGRESS_FILTER:\r\n"
        "  Specifies that the packet was dropped due to the CVLAN egress filter.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "cvlan_ingress_filter",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_CVLAN_INGRESS_FILTER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_CVLAN_INGRESS_FILTER:\r\n"
        "  Specifies that the packet was dropped due to the CVLAN ingress filter.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "size_error",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_DROP_SIZE_ERROR,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_DROP.SOC_PETRA_PP_DIAG_DROP_SIZE_ERROR:\r\n"
        "  Specifies that the packet was identified as too short for the expected\r\n"
        "  headers.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_DIAG_IHP_ERR_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "mac_mtm_event_timeout",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_MAC_MTM_EVENT_TIMEOUT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_MAC_MTM_EVENT_TIMEOUT:\r\n"
        "  MTM event was not pushed into the event FIFO \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mac_age_event_timeout",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_MAC_AGE_EVENT_TIMEOUT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_MAC_AGE_EVENT_TIMEOUT:\r\n"
        "  AGE event was not pushed into the event FIFO \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mac_event_fifo_not_empty",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_MAC_EVENT_FIFO_NOT_EMPTY,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_MAC_EVENT_FIFO_NOT_EMPTY:\r\n"
        "  the event FIFO is not empty \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ipv4_overflow",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_OVERFLOW,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_OVERFLOW:\r\n"
        "  one of the IPv4 error counters overflowed \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ipv4_checksum",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_CHECKSUM,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_CHECKSUM:\r\n"
        "  IPv4 checksum was encountered \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ipv4_hdr_length",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_HDR_LENGTH,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_HDR_LENGTH:\r\n"
        "  IPv4 header length error was encountered \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ipv4_total_length",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_TOTAL_LENGTH,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_TOTAL_LENGTH:\r\n"
        "  IPv4 total length error was encountered \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ipv4_version",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_VERSION,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_VERSION:\r\n"
        "  IPv4 version error was encountered \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ipv4_ttl0",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_TTL0,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_TTL0:\r\n"
        "  IPv4 TTL0 was encountered \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "ipv4_ttl1",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_TTL1,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_IPV4_TTL1:\r\n"
        "  IPv4 TTL1 was encountered \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mac_delete_unknown_mac",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_MAC_DELETE_UNKNOWN_MAC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_MAC_DELETE_UNKNOWN_MAC:\r\n"
        "  If set, a remove from the MAC table of a non-existing entry was attempted. \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mac_reached_mac_limit",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_MAC_REACHED_MAC_LIMIT,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_MAC_REACHED_MAC_LIMIT:\r\n"
        "  the MAC table reached its limit and insertion failed. \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mac_cam_table_full",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_MAC_CAM_TABLE_FULL,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_MAC_CAM_TABLE_FULL:\r\n"
        "  the auxiliary CAM for the MAC table is full and insertion failed. \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mac_inserted_existing",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_MAC_INSERTED_EXISTING,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_MAC_INSERTED_EXISTING:\r\n"
        "  existing entry was inserted. \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mac_learn_over_static",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_MAC_LEARN_OVER_STATIC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_MAC_LEARN_OVER_STATIC:\r\n"
        "  a learn over a static entry was attempted (and failed). \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mac_refresh_over_static",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_MAC_REFRESH_OVER_STATIC,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_MAC_REFRESH_OVER_STATIC:\r\n"
        "  a refresh over a static entry was attempted (and failed). \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mac_refresh_non_exist_from_other",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_MAC_REFRESH_NON_EXIST_FROM_OTHER,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_MAC_REFRESH_NON_EXIST_FROM_OTHER:\r\n"
        "  a refresh for a non existing entry was received from another device. Entry\r\n"
        "  was inserted. \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "mac_refresh_non_exist_from_self",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_MAC_REFRESH_NON_EXIST_FROM_SELF,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_MAC_REFRESH_NON_EXIST_FROM_SELF:\r\n"
        "  a refresh for a non existing entry was received from this device. Entry was\r\n"
        "  inserted. \r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "bytes_to_strip",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_IHP_ERR_BYTES_TO_STRIP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_IHP_ERR.SOC_PETRA_PP_DIAG_IHP_ERR_BYTES_TO_STRIP:\r\n"
        "  the calculated number of bytes to strip was larger than 31.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_DIAG_OLP_ERR_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "end_read",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_OLP_ERR_END_READ,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_OLP_ERR.SOC_PETRA_PP_DIAG_OLP_ERR_END_READ:\r\n"
        "  an end indication error during a read command has occurred on the Command\r\n"
        "  Reception Machine (CRM).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "end_write",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_OLP_ERR_END_WRITE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_OLP_ERR.SOC_PETRA_PP_DIAG_OLP_ERR_END_WRITE:\r\n"
        "  an end indication error during a write command has occurred on the Command\r\n"
        "  Reception Machine (CRM).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "start",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_OLP_ERR_START,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_OLP_ERR.SOC_PETRA_PP_DIAG_OLP_ERR_START:\r\n"
        "  a start indication error has occurred on the Command Reception Machine (CRM).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "end_read_exp",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_OLP_ERR_END_READ_EXP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_OLP_ERR.SOC_PETRA_PP_DIAG_OLP_ERR_END_READ_EXP:\r\n"
        "  an end indication during a read command did not assert compared to the\r\n"
        "  expected value on the Command Reception Machine (CRM).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "end_write_exp",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_OLP_ERR_END_WRITE_EXP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_OLP_ERR.SOC_PETRA_PP_DIAG_OLP_ERR_END_WRITE_EXP:\r\n"
        "  an end indication during a write command did not assert compared to the\r\n"
        "  expected value on the Command Reception Machine (CRM).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "start_exp",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_OLP_ERR_START_EXP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_OLP_ERR.SOC_PETRA_PP_DIAG_OLP_ERR_START_EXP:\r\n"
        "  a start indication did not assert compared to the expected value on the\r\n"
        "  Command Reception Machine (CRM).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "req_type",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_OLP_ERR_REQ_TYPE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_OLP_ERR.SOC_PETRA_PP_DIAG_OLP_ERR_REQ_TYPE:\r\n"
        "  an invalid request type error has occurred on the Dune Special Packet\r\n"
        "  Reception unit (DSPR).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "unexp_sop",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_OLP_ERR_UNEXP_SOP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_OLP_ERR.SOC_PETRA_PP_DIAG_OLP_ERR_UNEXP_SOP:\r\n"
        "  an unexpected SOP (start of packet) has occurred on the Dune Special Packet\r\n"
        "  Reception unit (DSPR).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "unexp_eop",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_OLP_ERR_UNEXP_EOP,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_OLP_ERR.SOC_PETRA_PP_DIAG_OLP_ERR_UNEXP_EOP:\r\n"
        "  an unexpected EOP (end of packet) has occurred on the Dune Special Packet\r\n"
        "  Reception unit (DSPR).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "unexp_valid_bytes",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_OLP_ERR_UNEXP_VALID_BYTES,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_OLP_ERR.SOC_PETRA_PP_DIAG_OLP_ERR_UNEXP_VALID_BYTES:\r\n"
        "  an unexpected valid bytes has occurred on the Dune Special Packet Reception\r\n"
        "  unit (DSPR).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "dsp_eth_type",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_DIAG_OLP_ERR_DSP_ETH_TYPE,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_DIAG_OLP_ERR.SOC_PETRA_PP_DIAG_OLP_ERR_DSP_ETH_TYPE:\r\n"
        "  a DSP Ethernet-type error has occurred on the Dune Special Packet Reception\r\n"
        "  unit (DSPR).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

 /* 
  * } ENUM RULES 
  */
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_ACL_ACE_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "l2",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_ACL_ACE_TYPE_L2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_ACL_ACE_TYPE.SOC_PETRA_PP_ACL_ACE_TYPE_L2:\r\n"
        "  The type of the ACE (Access control Element) is L2. ACE includes fields to\r\n"
        "  compare to the L2 header of the packet (Port number,C-Tag,S-tag, DA-MAC,\r\n"
        "  SA-Mac ...)\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "l3a",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_ACL_ACE_TYPE_L3A,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_ACL_ACE_TYPE.SOC_PETRA_PP_ACL_ACE_TYPE_L3_L4:\r\n"
        "  The type of the ACE (Access control Element) is L3. ACE includes fields to\r\n"
        "  compare to the L3 header of the packet (Src-IP, Dest-IP, L4 ports...) and L4\r\n"
        "  (port Numbers...).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },       
  {                                                                           
    VAL_SYMBOL,                                                               
    "l3b",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_ACL_ACE_TYPE_L3B,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_ACL_ACE_TYPE.SOC_PETRA_PP_ACL_ACE_TYPE_L3_L4:\r\n"
        "  The type of the ACE (Access control Element) is L3. ACE includes fields to\r\n"
        "  compare to the L3 header of the packet (Src-IP, Dest-IP, L4 ports...) and L4\r\n"
        "  (port Numbers...).\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },   
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

/********************************************************/        
/********************************************************/        
                                                                              
EXTERN CONST                                                                  
   PARAM_VAL_RULES                                                            
     SOC_PETRA_PP_ACL_ACTION_TYPE_rule[]                                                    
#ifdef INIT                                                                   
   =                                                                          
{                                                                             
  {                                                                           
    VAL_SYMBOL,                                                               
    "l2_update",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_ACL_ACTION_TYPE_UPDATE_L2,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_ACL_ACTION_TYPE.SOC_PETRA_PP_ACL_ACTION_TYPE_UPDATE_L2:\r\n"
        "  Update the destination (and out Vid and COS) of the packet with the given\r\n"
        "  value.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
  {                                                                           
    VAL_SYMBOL,                                                               
    "l3_update",                       
    {                                                                         
      {                                                                       
        SOC_PETRA_PP_ACL_ACTION_TYPE_UPDATE_L3,                                             
          /*                                                                  
           * Casting added here just to keep the compiler silent.      
           */                                                                 
        (long)""                                                            
        "  SOC_PETRA_PP_ACL_ACTION_TYPE.SOC_PETRA_PP_ACL_ACTION_TYPE_UPDATE_L3:\r\n"
        "  Update the FEC pointer (and COS) of the packet with the given value.\r\n"
        "",
          /*                                                                  
           * Pointer to a function to call after symbolic value               
           * has been accepted. Casting should be 'VAL_PROC_PTR'.             
           * Casting to 'long' added here just to keep the             
           * compiler silent.                                                 
           */                                                                 
        (long)NULL                                                            
      }                                                                       
    }                                                                         
  },                                                                          
/*                                                                            
 * Last element. Do not remove.                                               
 */                                                                           
  {                                                                           
    VAL_END_OF_LIST                                                           
  }                                                                           
}                                                                             
#endif                                                                        
;                                                                             

 /* 
  * } ENUM RULES 
  */
/********************************************************/        
/********************************************************/        
EXTERN CONST                                                     
   PARAM_VAL_RULES                                               
     soc_petra_pp_api_free_vals[]                                 
#ifdef INIT                                                      
   =                                                             
{                                                                
  {                                                              
    VAL_NUMERIC,SYMB_NAME_NUMERIC,                               
    {                                                            
      {                                                          
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,                     
        0,0,                                                     
          /*                                                     
           * Number of times this value can be repeated (i.e.,   
           * value is an array). Must be at least 1!             
           */                                                    
        1,                                                       
        (VAL_PROC_PTR)NULL                                       
      }                                                          
    }                                                            
  },                                                             
/*                                                               
 * Last element. Do not remove.                                  
 */                                                              
  {                                                              
    VAL_END_OF_LIST                                              
  }                                                              
}                                                                
#endif                                                           
;                                                                
EXTERN CONST                                                     
   PARAM_VAL_RULES                                               
     soc_petra_pp_api_empty_vals[]                                 
#ifdef INIT                                                      
   =                                                             
{                                                                
/*                                                               
 * Last element. Do not remove.                                  
 */                                                              
  {                                                              
    VAL_END_OF_LIST                                              
  }                                                              
}                                                                
#endif                                                           
;                                                                
/********************************************************/       


EXTERN CONST
   PARAM_VAL_RULES
     soc_petra_pp_api_members_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        0xff,
        0,
        80,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
/********************************************************/        
EXTERN CONST                                                                               
   PARAM                                                                                   
     soc_petra_pp_api_params[]                                                   
#ifdef INIT                                                                                
   =                                                                                       
{                                                                                          
#ifdef UI_DEFAULT_SECTION/* { default_section*/
#endif /* } default_section*/
#ifdef UI_SAND_PP_GENERAL/* { soc_sand_pp_general*/
#endif /* } soc_sand_pp_general*/
#ifdef UI_VID_RES/* { vid_res*/
  {                                                                                        
    PARAM_PETRA_PP_VID_PORT_INFO_SET_VID_PORT_INFO_SET_ID,                                                            
    "port_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the port information for the VLAN ID resolution module.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res port_info_set local_port_ndx 0 enable_protocol 0\r\n"
    "  enable_subnet_ip 0 pvid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(0), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PORT_INFO_SET_VID_PORT_INFO_SET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  Local physical port ID. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res port_info_set local_port_ndx 0 enable_protocol 0\r\n"
    "  enable_subnet_ip 0 pvid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(0), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PORT_INFO_SET_VID_PORT_INFO_SET_PORT_INFO_ENABLE_PROTOCOL_ID,                                                            
    "enable_protocol",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.enable_protocol:\r\n"
    "  Enable VID resolution according to protocol parsing\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res port_info_set local_port_ndx 0 enable_protocol 0\r\n"
    "  enable_subnet_ip 0 pvid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(0), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PORT_INFO_SET_VID_PORT_INFO_SET_PORT_INFO_ENABLE_SUBNET_IP_ID,                                                            
    "enable_subnet_ip",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.enable_subnet_ip:\r\n"
    "  Enable VID resolution according to subnet IP parsing\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res port_info_set local_port_ndx 0 enable_protocol 0\r\n"
    "  enable_subnet_ip 0 pvid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(0), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PORT_INFO_SET_VID_PORT_INFO_SET_PORT_INFO_PVID_ID,                                                            
    "pvid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.pvid:\r\n"
    "  Port default VLAN IDRange 0-4095\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res port_info_set local_port_ndx 0 enable_protocol 0\r\n"
    "  enable_subnet_ip 0 pvid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(0), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PORT_INFO_GET_VID_PORT_INFO_GET_ID,                                                            
    "port_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the port information for the VLAN ID resolution module.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res port_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(1), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PORT_INFO_GET_VID_PORT_INFO_GET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  Local physical port ID. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res port_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(1), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_COS_IP_SUBNET_INFO_SET_VID_COS_IP_SUBNET_INFO_SET_ID,                                                            
    "vid_cos_ip_subnet_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the per subnet IP information for the VLAN ID resolution module.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_cos_ip_subnet_info_set subnet_ip_ndx 0\r\n"
    "  cvlan_user_priority 0 traffic_class 0 vid 0 subnet_mask 0 ip_address 0\r\n"
    "  is_entry_valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_COS_IP_SUBNET_INFO_SET_VID_COS_IP_SUBNET_INFO_SET_SUBNET_IP_NDX_ID,                                                            
    "subnet_ip_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  subnet_ip_ndx:\r\n"
    "  Index in the subnet IP mapping table.\r\n"
    "  Range 0-15 (the device support 16 different subnets)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_cos_ip_subnet_info_set subnet_ip_ndx 0\r\n"
    "  cvlan_user_priority 0 traffic_class 0 vid 0 subnet_mask 0 ip_address 0\r\n"
    "  is_entry_valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_COS_IP_SUBNET_INFO_SET_VID_COS_IP_SUBNET_INFO_SET_SUBNET_IP_INFO_CVLAN_USER_PRIORITY_ID,                                                            
    "cvlan_user_priority",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  subnet_ip_info.cvlan_user_priority:\r\n"
    "  CVLAN User Priority.Relevant only for CEP ports according to 802.1ad standard\r\n"
    "  for a provider edge bridge and the packet arrives with two headers C-VLAN and\r\n"
    "  S-VLANRange 0-7\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_cos_ip_subnet_info_set subnet_ip_ndx 0\r\n"
    "  cvlan_user_priority 0 traffic_class 0 vid 0 subnet_mask 0 ip_address 0\r\n"
    "  is_entry_valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_COS_IP_SUBNET_INFO_SET_VID_COS_IP_SUBNET_INFO_SET_SUBNET_IP_INFO_TRAFFIC_CLASS_ID,                                                            
    "traffic_class",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  subnet_ip_info.traffic_class:\r\n"
    "  Traffic classRange 0-7.This used for COS resolution.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_cos_ip_subnet_info_set subnet_ip_ndx 0\r\n"
    "  cvlan_user_priority 0 traffic_class 0 vid 0 subnet_mask 0 ip_address 0\r\n"
    "  is_entry_valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_COS_IP_SUBNET_INFO_SET_VID_COS_IP_SUBNET_INFO_SET_SUBNET_IP_INFO_VID_ID,                                                            
    "vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  subnet_ip_info.vid:\r\n"
    "  VLAN IDRange 0-4095\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_cos_ip_subnet_info_set subnet_ip_ndx 0\r\n"
    "  cvlan_user_priority 0 traffic_class 0 vid 0 subnet_mask 0 ip_address 0\r\n"
    "  is_entry_valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_COS_IP_SUBNET_INFO_SET_VID_COS_IP_SUBNET_INFO_SET_SUBNET_IP_INFO_SUBNET_MASK_ID,                                                            
    "subnet_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  subnet_ip_info.subnet_mask:\r\n"
    "  The number of most significant bits from the IP-Address that should be\r\n"
    "  matched to IPv4-Hdr.SrcIP.Range 1-32.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_cos_ip_subnet_info_set subnet_ip_ndx 0\r\n"
    "  cvlan_user_priority 0 traffic_class 0 vid 0 subnet_mask 0 ip_address 0\r\n"
    "  is_entry_valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_COS_IP_SUBNET_INFO_SET_VID_COS_IP_SUBNET_INFO_SET_SUBNET_IP_INFO_IP_ADDRESS_ID,                                                            
    "ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  subnet_ip_info.ip_address:\r\n"
    "  IP address\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_cos_ip_subnet_info_set subnet_ip_ndx 0\r\n"
    "  cvlan_user_priority 0 traffic_class 0 vid 0 subnet_mask 0 ip_address 0\r\n"
    "  is_entry_valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_COS_IP_SUBNET_INFO_SET_VID_COS_IP_SUBNET_INFO_SET_SUBNET_IP_INFO_IS_ENTRY_VALID_ID,                                                            
    "is_entry_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  subnet_ip_info.is_entry_valid:\r\n"
    "  If set then this prefix should be considered.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_cos_ip_subnet_info_set subnet_ip_ndx 0\r\n"
    "  cvlan_user_priority 0 traffic_class 0 vid 0 subnet_mask 0 ip_address 0\r\n"
    "  is_entry_valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(2), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_COS_IP_SUBNET_INFO_GET_VID_COS_IP_SUBNET_INFO_GET_ID,                                                            
    "vid_cos_ip_subnet_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the per subnet IP information for the VLAN ID resolution module.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_cos_ip_subnet_info_get subnet_ip_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(3), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_COS_IP_SUBNET_INFO_GET_VID_COS_IP_SUBNET_INFO_GET_SUBNET_IP_NDX_ID,                                                            
    "subnet_ip_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  subnet_ip_ndx:\r\n"
    "  Index in the subnet IP mapping table.\r\n"
    "  Range 0-15 (the device support 16 different subnets)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_cos_ip_subnet_info_get subnet_ip_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(3), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_TYPE_SET_VID_PROTOCOL_TYPE_SET_ID,                                                            
    "vid_protocol_type_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set The per protocol information for the VLAN ID resolution module.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_type_set prtcl_type_ndx 0 is_valid 0\r\n"
    "  encap_value 0 encap_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(4), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_TYPE_SET_VID_PROTOCOL_TYPE_SET_PRTCL_TYPE_NDX_ID,                                                            
    "prtcl_type_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_type_ndx:\r\n"
    "  SOC_SAND_IN uint32\r\n"
    "  prtcl_type_ndx\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_type_set prtcl_type_ndx 0 is_valid 0\r\n"
    "  encap_value 0 encap_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(4), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_TYPE_SET_VID_PROTOCOL_TYPE_SET_PRTCL_TYPE_IS_VALID_ID,                                                            
    "is_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_type.is_valid:\r\n"
    "  Is this entry validRange FALSE- TRUE\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_type_set prtcl_type_ndx 0 is_valid 0\r\n"
    "  encap_value 0 encap_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(4), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_TYPE_SET_VID_PROTOCOL_TYPE_SET_PRTCL_TYPE_ENCAP_VALUE_ID,                                                            
    "encap_value",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_type.encap_value:\r\n"
    "  Should be EthType or DSAP-SSAP according to the value of encap_type\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_type_set prtcl_type_ndx 0 is_valid 0\r\n"
    "  encap_value 0 encap_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(4), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_TYPE_SET_VID_PROTOCOL_TYPE_SET_PRTCL_TYPE_ENCAP_TYPE_ID,                                                            
    "encap_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_ENCAP_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_ENCAP_TYPE_rule) / sizeof(SOC_PETRA_PP_ENCAP_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_type.encap_type:\r\n"
    "  Determines if this entry to be matched to Ethernet Type, or to {DSAP, SSAP}\r\n"
    "  Type \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_type_set prtcl_type_ndx 0 is_valid 0\r\n"
    "  encap_value 0 encap_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(4), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_TYPE_GET_VID_PROTOCOL_TYPE_GET_ID,                                                            
    "vid_protocol_type_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set The per protocol information for the VLAN ID resolution module.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_type_get prtcl_type_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(5), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_TYPE_GET_VID_PROTOCOL_TYPE_GET_PRTCL_TYPE_NDX_ID,                                                            
    "prtcl_type_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_type_ndx:\r\n"
    "  SOC_SAND_IN uint32\r\n"
    "  prtcl_type_ndx\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_type_get prtcl_type_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(5), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_PORT_INFO_SET_VID_PROTOCOL_PORT_INFO_SET_ID,                                                            
    "vid_protocol_port_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set port information (the Vid_index per protocol) for the protocol based\r\n"
    "  resolution. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_port_info_set port_ndx 0 vid_indexes_index\r\n"
    "  0 vid_indexes 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(6), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_PORT_INFO_SET_VID_PROTOCOL_PORT_INFO_SET_PORT_NDX_ID,                                                            
    "port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  The configuration is per port number\r\n"
    "  Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_port_info_set port_ndx 0 vid_indexes_index\r\n"
    "  0 vid_indexes 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(6), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_PORT_INFO_SET_VID_PROTOCOL_PORT_INFO_SET_PRTCL_PORT_INFO_VID_INDEXES_INDEX_ID,                                                            
    "vid_indexes_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_indexes_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_port_info_set port_ndx 0 vid_indexes_index\r\n"
    "  0 vid_indexes 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(6), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_PORT_INFO_SET_VID_PROTOCOL_PORT_INFO_SET_PRTCL_PORT_INFO_VID_INDEXES_ID,                                                            
    "vid_indexes",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_port_info.vid_indexes[ prm_vid_indexes_index]:\r\n"
    "  For specific port stores the vid indexes of all protocolsUser has to keep\r\n"
    "  array ordered, such that each entry in the array includes the info of the\r\n"
    "  protocol with the appropriate protocol_indexRange 0-31.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_port_info_set port_ndx 0 vid_indexes_index\r\n"
    "  0 vid_indexes 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(6), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_PORT_INFO_GET_VID_PROTOCOL_PORT_INFO_GET_ID,                                                            
    "vid_protocol_port_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set port information (the Vid_index per protocol) for the protocol based\r\n"
    "  resolution. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_port_info_get port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(7), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_PORT_INFO_GET_VID_PROTOCOL_PORT_INFO_GET_PORT_NDX_ID,                                                            
    "port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  The configuration is per port number\r\n"
    "  Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_port_info_get port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(7), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_VID_INFO_SET_VID_PROTOCOL_VID_INFO_SET_ID,                                                            
    "vid_protocol_vid_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Maps vid_index to vid_from_protocol (vid,valid,CVLAN UP) in the\r\n"
    "  vid_index_to_vid mapping.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_vid_info_set vid_ndx 0 c_vid_up 0\r\n"
    "  vid_is_valid 0 vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(8), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_VID_INFO_SET_VID_PROTOCOL_VID_INFO_SET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  The configuration is per vid_ndx\r\n"
    "  Range 0-31\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_vid_info_set vid_ndx 0 c_vid_up 0\r\n"
    "  vid_is_valid 0 vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(8), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_VID_INFO_SET_VID_PROTOCOL_VID_INFO_SET_VID_PRTCL_VID_INFO_C_VID_UP_ID,                                                            
    "c_vid_up",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_prtcl_vid_info.c_vid_up:\r\n"
    "  CVLAN User PriorityRelevant only for CEP ports according to 802.1ad standard\r\n"
    "  for a provider edge bridge and the packet arrives with two headers C-VLAN and\r\n"
    "  S-VLANRange 0-7\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_vid_info_set vid_ndx 0 c_vid_up 0\r\n"
    "  vid_is_valid 0 vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(8), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_VID_INFO_SET_VID_PROTOCOL_VID_INFO_SET_VID_PRTCL_VID_INFO_VID_IS_VALID_ID,                                                            
    "vid_is_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_prtcl_vid_info.vid_is_valid:\r\n"
    "  Is the vlan ID above valid\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_vid_info_set vid_ndx 0 c_vid_up 0\r\n"
    "  vid_is_valid 0 vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(8), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_VID_INFO_SET_VID_PROTOCOL_VID_INFO_SET_VID_PRTCL_VID_INFO_VID_ID,                                                            
    "vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_prtcl_vid_info.vid:\r\n"
    "  12 bits of vlan ID. Range 0-4095\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_vid_info_set vid_ndx 0 c_vid_up 0\r\n"
    "  vid_is_valid 0 vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(8), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_VID_INFO_GET_VID_PROTOCOL_VID_INFO_GET_ID,                                                            
    "vid_protocol_vid_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Maps vid_index to vid_from_protocol (vid,valid,CVLAN UP) in the\r\n"
    "  vid_index_to_vid mapping.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_vid_info_get vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(9), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_VID_INFO_GET_VID_PROTOCOL_VID_INFO_GET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  The configuration is per vid_ndx\r\n"
    "  Range 0-31\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_vid_info_get vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(9), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_ADD_INFO_ADD_VID_PROTOCOL_VID_INFO_ADD_VID_PRTCL_VID_INFO_C_VID_UP_ID,                                                            
      "c_vid_up",                                                                       
      (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
      (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
      HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
      0,0,0,0,0,0,0,                                                                         
      "  vid_prtcl_vid_info.c_vid_up:\r\n"
      "  CVLAN User PriorityRelevant only for CEP ports according to 802.1ad standard\r\n"
      "  for a provider edge bridge and the packet arrives with two headers C-VLAN and\r\n"
      "  S-VLANRange 0-7\r\n"
      "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
      "Examples:\r\n"                                                                    
      "  soc_petra_pp_api vid_res protocol_vid_add vid_ndx 0 local_port_ndx 0 encap_type 0 encap_val 0 vid 0\r\n"
#endif
      "",
      "",                                                                                  
      {0, 0, 0, 0, BIT(26)},
      LAST_ORDINAL,                                                                                     
      /*                                                                                   
      * Pointer to a function to call after symbolic parameter                            
      * has been accepted.                                                                
      */                                                                                  
      (VAL_PROC_PTR)NULL                                                                     
    },  
    {                                                                                        
      PARAM_PETRA_PP_VID_PROTOCOL_ADD_INFO_ADD_VID_PROTOCOL_VID_INFO_ADD_VID_PRTCL_VID_INFO_VID_ID,                                                            
      "vid",                                                                       
      (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
      (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
      HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
      0,0,0,0,0,0,0,                                                                         
      "  vid_prtcl_vid_info.vid:\r\n"
      "  12 bits of vlan ID. Range 0-4095\r\n"
      "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
      "Examples:\r\n"                                                                    
      "  soc_petra_pp_api vid_res protocol_vid_add vid_ndx 0 local_port_ndx 0 encap_type 0 encap_val 0 vid 0\r\n"
#endif
      "",
      "",                                                                                  
      {0, 0, 0, 0, BIT(26)},                                                                              
      LAST_ORDINAL,                                                                                     
      /*                                                                                   
      * Pointer to a function to call after symbolic parameter                            
      * has been accepted.                                                                
      */                                                                                  
      (VAL_PROC_PTR)NULL                                                                     
    },
    {                                                                                        
      PARAM_PETRA_PP_VID_PROTOCOL_ADD_VID_PROTOCOL_PORT_INFO_ADD_PORT_NDX_ID,                                                            
      "local_port_ndx",                                                                       
      (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
      (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
      HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
      0,0,0,0,0,0,0,                                                                         
      "  local_port_ndx:\r\n"
      "  The configuration is per port number\r\n"
      "  Range 0-79.\r\n"
      "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
      "Examples:\r\n"                                                                    
      "  soc_petra_pp_api vid_res vid_protocol_port_info_get local_port_ndx 0\r\n"
#endif
      "",
      "",                                                                                  
      {0, 0, 0, 0, BIT(26)},                                                                              
      LAST_ORDINAL,                                                                                     
      /*                                                                                   
      * Pointer to a function to call after symbolic parameter                            
      * has been accepted.                                                                
      */                                                                                  
      (VAL_PROC_PTR)NULL                                                                     
    }, 
    {                                                                                        
      PARAM_PETRA_PP_VID_PROTOCOL_ADD_PROTOCOL_TYPE_ADD_PRTCL_TYPE_ENCAP_VALUE_ID,                                                            
      "encap_value",                                                                       
      (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
      (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
      HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
      0,0,0,0,0,0,0,                                                                         
      "  prtcl_type.encap_value:\r\n"
      "  Should be EthType or DSAP-SSAP according to the value of encap_type\r\n"
      "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
      "Examples:\r\n"                                                                    
      "  soc_petra_pp_api vid_res protocol_vid_add vid_ndx 0 local_port_ndx 0 encap_type 0 encap_val 0 vid 0\r\n"
#endif
      "",
      "",                                                                                  
      {0, 0, 0, 0, BIT(26)},                                                                             
      LAST_ORDINAL,                                                                                     
      /*                                                                                   
      * Pointer to a function to call after symbolic parameter                            
      * has been accepted.                                                                
      */                                                                                  
      (VAL_PROC_PTR)NULL                                                                     
    },  
    {                                                                                        
      PARAM_PETRA_PP_VID_PROTOCOL_ADD_PROTOCOL_TYPE_ADD_PRTCL_TYPE_ENCAP_TYPE_ID,                                                            
      "encap_type",                                                                       
      (PARAM_VAL_RULES *)&SOC_PETRA_PP_ENCAP_TYPE_rule[0],                                            
      (sizeof(SOC_PETRA_PP_ENCAP_TYPE_rule) / sizeof(SOC_PETRA_PP_ENCAP_TYPE_rule[0])) - 1,                    
      HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
      0,0,0,0,0,0,0,                                                                         
      "  prtcl_type.encap_type:\r\n"
      "  Determines if this entry to be matched to Ethernet Type, or to {DSAP, SSAP}\r\n"
      "  Type \r\n"
      "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
      "Examples:\r\n"                                                                    
      "  soc_petra_pp_api vid_res protocol_vid_add vid_ndx 0 local_port_ndx 0 encap_type 0 encap_val 0 vid 0\r\n"
#endif
      "",
      "",                                                                                  
      {0, 0, 0, 0, BIT(26)},                                                                              
      LAST_ORDINAL,                                                                                     
      /*                                                                                   
      * Pointer to a function to call after symbolic parameter                            
      * has been accepted.                                                                
      */                                                                                  
      (VAL_PROC_PTR)NULL                                                                     
    },     
    {                                                                                        
      PARAM_PETRA_PP_VID_PROTOCOL_ADD_INFO_ADD_VID_PROTOCOL_VID_INFO_ADD_ID,                                                            
      "protocol_vid_add",                                                                       
      (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
      (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
      HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
      0,0,0,0,0,0,0,                                                                         
      "  Maps from protocol to VID (vid,valid,CVLAN UP).\r\n"
      "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
      "Examples:\r\n"                                                                    
      "  soc_petra_pp_api vid_res protocol_vid_add vid_ndx 0 local_port_ndx 0 encap_type 0 encap_val 0 vid 0\r\n"
#endif
      "",
      "",                                                                                  
      {0, 0, 0, 0, BIT(26)},                                                                              
      2,                                                                                     
      /*                                                                                   
      * Pointer to a function to call after symbolic parameter                            
      * has been accepted.                                                                
      */                                                                                  
      (VAL_PROC_PTR)NULL                                                                     
    },
    {                                                                                        
      PARAM_PETRA_PP_VID_PROTOCOL_CLEAR_ID,                                                            
      "protocol_vid_clear",                                                                       
      (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
      (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
      HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
      0,0,0,0,0,0,0,                                                                         
      "  Maps from protocol to VID (vid,valid,CVLAN UP).\r\n"
      "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
      "Examples:\r\n"                                                                    
      "  soc_petra_pp_api vid_res protocol_vid_add vid_ndx 0 local_port_ndx 0 encap_type 0 encap_val 0 vid 0\r\n"
#endif
      "",
      "",                                                                                  
      {0, 0, 0, 0, 0, BIT(0)},                                                                              
      2,                                                                                     
      /*                                                                                   
      * Pointer to a function to call after symbolic parameter                            
      * has been accepted.                                                                
      */                                                                                  
      (VAL_PROC_PTR)NULL                                                                     
      },
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_REMOVE_VID_PROTOCOL_PORT_INFO_REMOVE_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  The configuration is per port number\r\n"
    "  Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_port_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(27)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_REMOVE_PROTOCOL_TYPE_REMOVE_PRTCL_TYPE_ENCAP_VALUE_ID,                                                            
    "encap_value",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_type.encap_value:\r\n"
    "  Should be EthType or DSAP-SSAP according to the value of encap_type\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res protocol_vid_remove vid_ndx 0 local_port_ndx 0 encap_type 0 encap_val 0 vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(27)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_REMOVE_PROTOCOL_TYPE_REMOVE_PRTCL_TYPE_ENCAP_TYPE_ID,                                                            
    "encap_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_ENCAP_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_ENCAP_TYPE_rule) / sizeof(SOC_PETRA_PP_ENCAP_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_type.encap_type:\r\n"
    "  Determines if this entry to be matched to Ethernet Type, or to {DSAP, SSAP}\r\n"
    "  Type \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res protocol_vid_remove vid_ndx 0 local_port_ndx 0 encap_type 0 encap_val 0 vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(27)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },     
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_REMOVE_INFO_REMOVE_VID_PROTOCOL_VID_INFO_REMOVE_ID,                                                            
    "protocol_vid_remove",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Maps from protocol to VID (vid,valid,CVLAN UP).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res protocol_vid_remove vid_ndx 0 local_port_ndx 0 encap_type 0 encap_val 0 vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(27)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_GET_VID_PROTOCOL_PORT_INFO_GET_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  The configuration is per port number\r\n"
    "  Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_port_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(28)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_GET_PROTOCOL_TYPE_GET_PRTCL_TYPE_ENCAP_VALUE_ID,                                                            
    "encap_value",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_type.encap_value:\r\n"
    "  Should be EthType or DSAP-SSAP according to the value of encap_type\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res protocol_vid_get vid_ndx 0 local_port_ndx 0 encap_type 0 encap_val 0 vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(28)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_GET_PROTOCOL_TYPE_GET_PRTCL_TYPE_ENCAP_TYPE_ID,                                                            
    "encap_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_ENCAP_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_ENCAP_TYPE_rule) / sizeof(SOC_PETRA_PP_ENCAP_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_type.encap_type:\r\n"
    "  Determines if this entry to be matched to Ethernet Type, or to {DSAP, SSAP}\r\n"
    "  Type \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res protocol_vid_get vid_ndx 0 local_port_ndx 0 encap_type 0 encap_val 0 vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(28)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },     
  {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_GET_INFO_GET_VID_PROTOCOL_VID_INFO_GET_ID,                                                            
    "protocol_vid_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Maps from protocol to VID (vid,valid,CVLAN UP).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res protocol_vid_get vid_ndx 0 local_port_ndx 0 encap_type 0 encap_val 0 vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(28)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
    {                                                                                        
    PARAM_PETRA_PP_VID_PROTOCOL_PRINT_TABLE_ID,                                                            
    "protocol_vid_print",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  The configuration is per port number\r\n"
    "  Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vid_res vid_protocol_port_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(29)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                        
    PARAM_PETRA_PP_API_VID_RES_ID,                                                            
    "vid_res",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9), 0, 0, 0, BIT(26)|BIT(27)|BIT(28)|BIT(29), BIT(0)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } vid_res*/

#ifdef UI_COS/* { cos*/
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_ID,                                                            
    "glbl_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the global information of COS module mapping including:\r\n"
    "  - UP to TC\r\n"
    "  - TC to UP\r\n"
    "  - UP to DP\r\n"
    "  - DE to DP\r\n"
    "  - PCP Decoding (PCP to UP and DE)\r\n"
    "  - PCP Encoding (UP and DP (!= 0) to PCP)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_UP_DE_TO_PCP_INDEX_ID,                                                            
    "UP_DE_to_PCP_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  UP_DE_to_PCP_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_UP_DE_TO_PCP_TBL_ID,                                                            
    "UP_DE_to_PCP_tbl",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  UP_DE_to_PCP_tbl:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_tbl 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_tbl 0 PCP_to_DE 0 PCP_to_UP_tbl 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_tbl 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_tbl 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_UP_DE_TO_PCP_DE_VAL_ID,                                                            
    "UP_DE_to_PCP_DE_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  DE val:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_tbl 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_tbl 0 PCP_to_DE 0 PCP_to_UP_tbl 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_tbl 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_tbl 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_UP_DE_TO_PCP_ID,                                                            
    "UP_DE_to_PCP_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_info.UP_DE_to_PCP[ prm_UP_DE_to_PCP_index]:\r\n"
    "  + 1][2]  Mapping from UP and DE (zero or not) to PCP. UP_DE_to_PCP[t][x][y]=z\r\n"
    "  maps UP 'y'and DP x of table 't' to PCP 'z'. Range 0-7\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_PCP_TO_DE_INDEX_ID,                                                            
    "PCP_to_DE_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  PCP_to_DE_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_PCP_TO_DE_TBL_ID,                                                            
    "PCP_to_DE_tbl",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  PCP_to_DE_tbl:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_tbl 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_tbl 0 PCP_to_DE 0 PCP_to_UP_tbl 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_tbl 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_tbl 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_PCP_TO_DE_ID,                                                            
    "PCP_to_DE_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_info.PCP_to_DE[ prm_PCP_to_DE_index]:\r\n"
    "  + 1]  Mapping of PCP to DE. pcp_to_de[x][y]=z maps UP 'y' of table 'x' to DP\r\n"
    "  'z'. Range 0-1\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_PCP_TO_UP_INDEX_ID,                                                            
    "PCP_to_UP_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  PCP_to_UP_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_PCP_TO_UP_TBL_ID,                                                            
    "PCP_to_UP_tbl",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  PCP_to_UP_tbl:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_tbl 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_tbl 0 PCP_to_DE 0 PCP_to_UP_tbl 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_tbl 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_tbl 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_PCP_TO_UP_ID,                                                            
    "PCP_to_UP_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_info.PCP_to_UP[ prm_PCP_to_UP_index]:\r\n"
    "  + 1]  Mapping of PCP to UP. PCP_to_DP[x][y]=z maps PCP 'y' of table 'x' to UP\r\n"
    "  'z'. Range 0-7\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_DE_TO_DP_DE_1_DP_VAL_ID,                                                            
    "DE_1_DP_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_info.DE_to_DP.DE_1_DP_val:\r\n"
    "  The drop precedence parameter for drop eligible packets.Range 0-3.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_DE_TO_DP_DE_0_DP_VAL_ID,                                                            
    "DE_0_DP_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_info.DE_to_DP.DE_0_DP_val:\r\n"
    "  The drop precedence parameter for non drop eligible packets.Range 0-3.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_UP_TO_DP_INDEX_ID,                                                            
    "UP_to_DP_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  UP_to_DP_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_UP_TO_DP_TBL_ID,                                                            
    "UP_to_DP_tbl",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  UP_to_DP_tbl:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_tbl 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_tbl 0 PCP_to_DE 0 PCP_to_UP_tbl 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_tbl 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_tbl 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_UP_TO_DP_ID,                                                            
    "UP_to_DP_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_info.UP_to_DP[ prm_UP_to_DP_index]:\r\n"
    "  + 1]  Mapping of UP to DP. up_to_dp[x][y]=z maps UP 'y' of table 'x' to DP 'z'.\r\n"
    "  Range 0-3\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_TC_INDEX_TO_UP_ID,                                                            
    "TC_to_UP_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_info.TC_to_UP:\r\n"
    "  + 1]  Mapping of Traffic class to UP. tc_to_up[x]=y maps tc 'y' to UP 'z'.\r\n"
    "  Range 0-7\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_TC_TO_UP_ID,                                                            
    "TC_to_UP_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_info.TC_to_UP:\r\n"
    "  + 1]  Mapping of Traffic class to UP. tc_to_up[x]=y maps tc 'y' to UP 'z'.\r\n"
    "  Range 0-7\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_UP_TO_TC_INDEX_ID,                                                            
    "UP_to_TC_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  UP_to_TC_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_UP_TO_TC_TBL_ID,                                                            
    "UP_to_TC_tbl",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  UP_to_TC_tbl:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_tbl 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_tbl 0 PCP_to_DE 0 PCP_to_UP_tbl 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_tbl 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_tbl 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_SET_GLBL_INFO_SET_GLBL_INFO_UP_TO_TC_ID,                                                            
    "UP_to_TC_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_info.UP_to_TC[ prm_UP_to_TC_index]:\r\n"
    "  + 1]  Mapping of User Priority to Traffic class. up_to_tc[x][y]=z maps UP 'y'\r\n"
    "  of table 'x' to TC 'z'.Range 0-7\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_set UP_DE_to_PCP_index 0 UP_DE_to_PCP 0\r\n"
    "  PCP_to_DE_index 0 PCP_to_DE 0 PCP_to_UP_index 0 PCP_to_UP 0 DE_1_DP_val 0\r\n"
    "  DE_0_DP_val 0 UP_to_DP_index 0 UP_to_DP 0 TC_to_UP 0 UP_to_TC_index 0\r\n"
    "  UP_to_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(10), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_GLBL_INFO_GET_GLBL_INFO_GET_ID,                                                            
    "glbl_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the global information of COS module mapping including:\r\n"
    "  - UP to TC\r\n"
    "  - TC to UP\r\n"
    "  - UP to DP\r\n"
    "  - DE to DP\r\n"
    "  - PCP Decoding (PCP to UP and DE)\r\n"
    "  - PCP Encoding (UP and DP (!= 0) to PCP)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos glbl_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(11), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_SET_PORT_INFO_SET_ID,                                                            
    "port_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the CoS per port information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_set local_port_ndx 0 use_DEI 0\r\n"
    "  UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index 0 UP_to_DP_index 0\r\n"
    "  UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0  0\r\n"
    "  is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_SET_PORT_INFO_SET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  The Local internal port to configure. In VLAN bridge (802.1q) this is\r\n"
    "  identical to the local physical port id.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_set local_port_ndx 0 use_DEI 0\r\n"
    "  UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index 0 UP_to_DP_index 0\r\n"
    "  UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0  0\r\n"
    "  is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_USE_DEI_ID,                                                            
    "use_DEI",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.use_DEI:\r\n"
    "  If set, the port uses the DEI. Valid only for CNP and PNP ports\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_set local_port_ndx 0 use_DEI 0\r\n"
    "  UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index 0 UP_to_DP_index 0\r\n"
    "  UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0  0\r\n"
    "  is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_TABLES_INDEXES_UP_AND_DE_TO_PCP_INDEX_ID,                                                            
    "UP_and_DE_to_PCP_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.tables_indexes.UP_and_DE_to_PCP_index:\r\n"
    "  The index of the table that the port uses for mapping incoming PCP to UP and\r\n"
    "  DE.Should be called after 'soc_petra_pp_cos_glb_info_set'Range 0-3\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_set local_port_ndx 0 use_DEI 0\r\n"
    "  UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index 0 UP_to_DP_index 0\r\n"
    "  UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0  0\r\n"
    "  is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_TABLES_INDEXES_PCP_TO_UP_AND_DE_INDEX_ID,                                                            
    "PCP_to_UP_and_DE_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.tables_indexes.PCP_to_UP_and_DE_index:\r\n"
    "  The index of the table that the port uses for mapping incoming PCP to UP and\r\n"
    "  DE.Should be used after\r\n"
    "  'soc_petra_pp_cos_glb_info_set'Range 0-3\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_set local_port_ndx 0 use_DEI 0\r\n"
    "  UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index 0 UP_to_DP_index 0\r\n"
    "  UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0  0\r\n"
    "  is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_TABLES_INDEXES_UP_TO_DP_INDEX_ID,                                                            
    "UP_to_DP_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.tables_indexes.UP_to_DP_index:\r\n"
    "  The index of the table that the port uses for mapping incoming UP to\r\n"
    "  DP.Should be called after 'soc_petra_pp_cos_glb_info_set'Range 0-1\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_set local_port_ndx 0 use_DEI 0\r\n"
    "  UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index 0 UP_to_DP_index 0\r\n"
    "  UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0  0\r\n"
    "  is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_TABLES_INDEXES_UP_TO_TC_INDEX_ID,                                                            
    "UP_to_TC_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.tables_indexes.UP_to_TC_index:\r\n"
    "  The index of the table that the port uses for mapping incoming UP to\r\n"
    "  TC.Should be called after 'soc_petra_pp_cos_glb_info_set'Range 0-3\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_set local_port_ndx 0 use_DEI 0\r\n"
    "  UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index 0 UP_to_DP_index 0\r\n"
    "  UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0  0\r\n"
    "  is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_TABLES_INDEXES_TOS_TO_TC_INDEX_TC_INDEX_ID,                                                            
    "TOS_to_TC_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.tables_indexes.TOS_to_TC_index.TC_index:\r\n"
    "  The index of the table that the port uses for mapping the TOS field in the\r\n"
    "  incoming packet to TC.Should be called after\r\n"
    "  'soc_petra_pp_cos_ip_Hdr_to_tc_info_set' Range 0-1\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_set local_port_ndx 0 use_DEI 0\r\n"
    "  UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index 0 UP_to_DP_index 0\r\n"
    "  UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0  0\r\n"
    "  is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_TABLES_INDEXES_TOS_TO_TC_INDEX_IS_VALID_FOR_TC_ID,                                                            
    "TOS_to_TC_is_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.tables_indexes.TOS_to_TC_index.is_valid_for_TC:\r\n"
    "  If set then the layer 4 traffic class resolution is evaluated.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_set local_port_ndx 0 use_DEI 0\r\n"
    "  UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index 0 UP_to_DP_index 0\r\n"
    "  UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0  0\r\n"
    "  is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_IS_L4_VALID_FOR_TC_ID,                                                            
    "is_l4_valid_for_TC",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.is_l4_valid_for_TC:\r\n"
    "  If set then the layer 4 traffic class resolution is evaluated.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_set local_port_ndx 0 use_DEI 0\r\n"
    "  UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index 0 UP_to_DP_index 0\r\n"
    "  UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type 0\r\n"
    "  is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_UP_USE_IS_VALID_FOR_OUT_UP_ID,                                                            
    "UP_is_valid_for_out_up",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.UP_use.is_valid_for_out_up:\r\n"
    "  When valid, the incoming UP also affect the calculation of the UP to be sent\r\n"
    "  when leaving the bridge (router)Should only be valid when\r\n"
    "  'Is_in_up_valid_for_tc' is valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_set local_port_ndx 0 use_DEI 0\r\n"
    "  UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index 0 UP_to_DP_index 0\r\n"
    "  UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type 0\r\n"
    "  is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_UP_USE_IS_VALID_FOR_TC_ID,                                                            
    "UP_is_valid_for_TC",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.UP_use.is_valid_for_TC:\r\n"
    "  Should the UP that arrived with the packet, take place in the calculation of\r\n"
    "  TC\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_set local_port_ndx 0 use_DEI 0\r\n"
    "  UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index 0 UP_to_DP_index 0\r\n"
    "  UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type 0\r\n"
    "  is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(12), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_GET_PORT_INFO_GET_ID,                                                            
    "port_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the CoS per port information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_PORT_INFO_GET_PORT_INFO_GET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  The Local internal port to configure. In VLAN bridge (802.1q) this is\r\n"
    "  identical to the local physical port id.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos port_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(13), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_VID_DEFALUT_TC_SET_VID_DEFALUT_TC_SET_ID,                                                            
    "vid_defalut_tc_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set default TC to each VID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos vid_defalut_tc_set vid_ndx 0 valid 0 tc 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(14), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_VID_DEFALUT_TC_SET_VID_DEFALUT_TC_SET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  Index of the vid to set the tc for.\r\n"
    "  Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos vid_defalut_tc_set vid_ndx 0 valid 0 tc 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(14), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_VID_DEFALUT_TC_SET_VID_DEFALUT_TC_SET_DEFAULT_TC_VALID_ID,                                                            
    "valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  default_TC.valid:\r\n"
    "  Is the TC valid\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos vid_defalut_tc_set vid_ndx 0 valid 0 tc 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(14), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_VID_DEFALUT_TC_SET_VID_DEFALUT_TC_SET_DEFAULT_TC_TC_ID,                                                            
    "tc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  default_TC.tc:\r\n"
    "  Traffic Class value.Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos vid_defalut_tc_set vid_ndx 0 valid 0 tc 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(14), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_VID_DEFALUT_TC_GET_VID_DEFALUT_TC_GET_ID,                                                            
    "vid_defalut_tc_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set default TC to each VID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos vid_defalut_tc_get vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(15), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_VID_DEFALUT_TC_GET_VID_DEFALUT_TC_GET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  Index of the vid to set the tc for.\r\n"
    "  Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos vid_defalut_tc_get vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(15), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_ID,                                                            
    "l4_to_TC_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set mapping to VLAN Traffic class according to L4 information.TCP/UDP\r\n"
    "  Default.Source port Range.Destination port Range.L4 Defaults.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_PORT_TO_TC_MAP_UDP_MAP_SRC_INDEX_ID,                                                            
    "udp_src_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  udp_map_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_src_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_PORT_TO_TC_MAP_UDP_MAP_DEST_INDEX_ID,                                                            
    "udp_dest_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  udp_map_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_dest_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_dest_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_PORT_TO_TC_MAP_UDP_MAP_VALID_ID,                                                            
    "udp_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_port_to_tc_map.udp_map[ prm_udp_map_index].valid:\r\n"
    "  Is the TC valid\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_PORT_TO_TC_MAP_UDP_MAP_TC_ID,                                                            
    "udp_tc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_port_to_tc_map.udp_map[ prm_udp_map_index].tc:\r\n"
    "  Traffic Class value.Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_PORT_TO_TC_MAP_TCP_MAP_SRC_INDEX_ID,                                                            
    "tcp_src_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  tcp_map_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_PORT_TO_TC_MAP_TCP_MAP_DEST_INDEX_ID,                                                            
    "tcp_dest_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  tcp_map_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_PORT_TO_TC_MAP_TCP_MAP_VALID_ID,                                                            
    "tcp_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_port_to_tc_map.tcp_map[ prm_tcp_map_index].valid:\r\n"
    "  Is the TC valid\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_PORT_TO_TC_MAP_TCP_MAP_TC_ID,                                                            
    "tcp_tc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_port_to_tc_map.tcp_map[ prm_tcp_map_index].tc:\r\n"
    "  Traffic Class value.Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_DEFAULT_TC_VALID_ID,                                                            
    "default_tc_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_port_to_tc_map.tcp_map[ prm_tcp_map_index].tc:\r\n"
    "  Traffic Class value.Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
    /*                                                                                   
    * Pointer to a function to call after symbolic parameter                            
    * has been accepted.                                                                
    */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_DEFAULT_TC_ID,                                                            
    "default_tc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_port_to_tc_map.tcp_map[ prm_tcp_map_index].tc:\r\n"
    "  Traffic Class value.Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
    /*                                                                                   
    * Pointer to a function to call after symbolic parameter                            
    * has been accepted.                                                                
    */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_DEFAULT_TCP_TC_VALID_ID,                                                            
    "default_tcp_tc_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_port_to_tc_map.tcp_map[ prm_tcp_map_index].tc:\r\n"
    "  Traffic Class value.Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
    /*                                                                                   
    * Pointer to a function to call after symbolic parameter                            
    * has been accepted.                                                                
    */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_DEFAULT_TCP_TC_ID,                                                            
    "default_tcp_tc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_port_to_tc_map.tcp_map[ prm_tcp_map_index].tc:\r\n"
    "  Traffic Class value.Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
    /*                                                                                   
    * Pointer to a function to call after symbolic parameter                            
    * has been accepted.                                                                
    */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_DEFAULT_UDP_TC_VALID_ID,                                                            
    "default_udp_tc_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_port_to_tc_map.tcp_map[ prm_tcp_map_index].tc:\r\n"
    "  Traffic Class value.Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
    /*                                                                                   
    * Pointer to a function to call after symbolic parameter                            
    * has been accepted.                                                                
    */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_DEFAULT_UDP_TC_ID,                                                            
    "default_udp_tc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_port_to_tc_map.tcp_map[ prm_tcp_map_index].tc:\r\n"
    "  Traffic Class value.Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
    /*                                                                                   
    * Pointer to a function to call after symbolic parameter                            
    * has been accepted.                                                                
    */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_DST_PORT_RANGES_INDEX_ID,                                                            
    "l4_dst_port_ranges_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_dst_port_ranges_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_DST_PORT_RANGES_RANGE_TYPE_ID,                                                            
    "dest_range_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_COS_RANGE_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_COS_RANGE_TYPE_rule) / sizeof(SOC_PETRA_PP_COS_RANGE_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_dst_port_ranges[ prm_l4_dst_port_ranges_index].range_type:\r\n"
    "  The ranges may be INCLUSIVE (i.e. inside the range) or EXCLUSIVE (i.e.\r\n"
    "  outside the range).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_DST_PORT_RANGES_LAST_PORT_ID,                                                            
    "dest_last_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_dst_port_ranges[ prm_l4_dst_port_ranges_index].last_port:\r\n"
    "  High limit of the ports range. Range 0-65535.last_port >= first_port.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_DST_PORT_RANGES_FIRST_PORT_ID,                                                            
    "dest_first_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_dst_port_ranges[ prm_l4_dst_port_ranges_index].first_port:\r\n"
    "  Low limit of the ports range. Range 0-65535\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_SRC_PORT_RANGES_INDEX_ID,                                                            
    "l4_src_port_ranges_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_src_port_ranges_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_SRC_PORT_RANGES_RANGE_TYPE_ID,                                                            
    "src_range_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_COS_RANGE_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_COS_RANGE_TYPE_rule) / sizeof(SOC_PETRA_PP_COS_RANGE_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_src_port_ranges[ prm_l4_src_port_ranges_index].range_type:\r\n"
    "  The ranges may be INCLUSIVE (i.e. inside the range) or EXCLUSIVE (i.e.\r\n"
    "  outside the range).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_SRC_PORT_RANGES_LAST_PORT_ID,                                                            
    "src_last_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_src_port_ranges[ prm_l4_src_port_ranges_index].last_port:\r\n"
    "  High limit of the ports range. Range 0-65535.last_port >= first_port.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_SET_L4_TO_TC_INFO_SET_L4_INFO_L4_SRC_PORT_RANGES_FIRST_PORT_ID,                                                            
    "src_first_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  l4_info.l4_src_port_ranges[ prm_l4_src_port_ranges_index].first_port:\r\n"
    "  Low limit of the ports range. Range 0-65535\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_set udp_map_index 0 valid 0 tc 0 tcp_map_index\r\n"
    "  0 valid 0 tc 0 l4_dst_port_ranges_index 0 range_type 0 last_port 0 first_port\r\n"
    "  0 l4_src_port_ranges_index 0 range_type 0 last_port 0 first_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(16), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_L4_TO_TC_INFO_GET_L4_TO_TC_INFO_GET_ID,                                                            
    "l4_to_TC_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set mapping to VLAN Traffic class according to L4 information.TCP/UDP\r\n"
    "  Default.Source port Range.Destination port Range.L4 Defaults.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos l4_to_TC_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(17), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_IP_HDR_TO_TC_INFO_SET_IP_HDR_TO_TC_INFO_SET_ID,                                                            
    "ip_hdr_to_TC_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets mapping from TOS field in the ipv4 header to VLAN Traffic class.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos ip_hdr_to_TC_info_set TOS_to_TC_index 0 valid 0 tc 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_IP_HDR_TO_TC_INFO_SET_IP_HDR_TO_TC_INFO_SET_IP_HDR_TO_TC_INFO_TOS_TO_TC_INDEX_ID,                                                            
    "tos_to_tc_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  TOS value\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos ip_hdr_to_TC_info_set TOS_to_TC_index 0 valid 0 tc 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_IP_HDR_TO_TC_INFO_SET_IP_HDR_TO_TC_INFO_SET_IP_HDR_TO_TC_INFO_TOS_TO_TC_TBL_ID,                                                            
    "tbl_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  tbl_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos ip_hdr_to_TC_info_set TOS_to_TC_index 0 valid 0 tc 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
    /*                                                                                   
    * Pointer to a function to call after symbolic parameter                            
    * has been accepted.                                                                
    */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_IP_HDR_TO_TC_INFO_SET_IP_HDR_TO_TC_INFO_SET_IP_HDR_TO_TC_INFO_TOS_TO_TC_VALID_ID,                                                            
    "valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ip_hdr_to_TC_info.TOS_to_TC[ prm_TOS_to_TC_index].valid:\r\n"
    "  Is the TC valid\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos ip_hdr_to_TC_info_set TOS_to_TC_index 0 valid 0 tc 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_IP_HDR_TO_TC_INFO_SET_IP_HDR_TO_TC_INFO_SET_IP_HDR_TO_TC_INFO_TOS_TO_TC_TC_ID,                                                            
    "tc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ip_hdr_to_TC_info.TOS_to_TC[ prm_TOS_to_TC_index].tc:\r\n"
    "  Traffic Class value.Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos ip_hdr_to_TC_info_set TOS_to_TC_index 0 valid 0 tc 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(18), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_COS_IP_HDR_TO_TC_INFO_GET_IP_HDR_TO_TC_INFO_GET_ID,                                                            
    "ip_hdr_to_TC_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets mapping from TOS field in the ipv4 header to VLAN Traffic class.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api cos ip_hdr_to_TC_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(19), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_COS_ID,                                                            
    "cos",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19), 0, 0, 0},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } cos*/
#ifdef UI_TRAP/* { trap*/
  {                                                                                        
    PARAM_PETRA_PP_TRAP_GLBL_INFO_SET_GLBL_INFO_SET_ID,                                                            
    "glbl_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets trap global information:\r\n"
    "  - Destination\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap glbl_info_set trap_destinations_index 0 dest_val 0\r\n"
    "  dest_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(20), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_GLBL_INFO_SET_GLBL_INFO_SET_TRAP_GLBL_INFO_TRAP_DESTINATIONS_INDEX_ID,                                                            
    "trap_destinations_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_destinations_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap glbl_info_set trap_destinations_index 0 dest_val 0\r\n"
    "  dest_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(20), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_GLBL_INFO_SET_GLBL_INFO_SET_TRAP_GLBL_INFO_TRAP_DESTINATIONS_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_glbl_info.trap_destinations[ prm_trap_destinations_index].dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap glbl_info_set trap_destinations_index 0 dest_val 0\r\n"
    "  dest_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(20), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_GLBL_INFO_SET_GLBL_INFO_SET_TRAP_GLBL_INFO_TRAP_DESTINATIONS_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_glbl_info.trap_destinations[ prm_trap_destinations_index].dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap glbl_info_set trap_destinations_index 0 dest_val 0\r\n"
    "  dest_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(20), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_GLBL_INFO_GET_GLBL_INFO_GET_ID,                                                            
    "glbl_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets trap global information:\r\n"
    "  - Destination\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap glbl_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(21), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_PRTCL_INFO_SET_PRTCL_INFO_SET_ID,                                                            
    "prtcl_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets Trap information for protocols:Forwarding typeDestination index (index\r\n"
    "  to the global destinations) COS Parameters (UP, TC, DP) COS overrideCPU code.\r\n"
    "  Protocols can be trapped by this API are ARPIGMP 1/2/other (IGMP-Hdr.Type\r\n"
    "  =1/2/other) VRRP ICMv6\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(22), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_PRTCL_INFO_SET_PRTCL_INFO_SET_PRTCL_NDX_ID,                                                            
    "prtcl_ndx",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_TRAP_PROTOCOL_rule[0],                                            
    (sizeof(SOC_PETRA_PP_TRAP_PROTOCOL_rule) / sizeof(SOC_PETRA_PP_TRAP_PROTOCOL_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_ndx:\r\n"
    "  One of the protocols that can be trapped.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(22), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_PRTCL_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_POLICER_INDEX_ID,                                                            
    "policer_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.policer_index:\r\n"
    "  Specifies which policer should be applied to this packet.(which may change\r\n"
    "  the packets drop precedence)0 - Means No policer should be applied to the\r\n"
    "  packetRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(22), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_PRTCL_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_COS_OVERWRITE_ID,                                                            
    "cos_overwrite",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.cos_overwrite:\r\n"
    "  If set then the CoS parameters should be replaced when this condition is\r\n"
    "  selected\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(22), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_PRTCL_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_COS_PARAMS_DROP_PRECEDENCE_ID,                                                            
    "drop_precedence",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.cos_params.drop_precedence:\r\n"
    "  Drop precedenceRange 0-3.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(22), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_PRTCL_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_COS_PARAMS_TRAFFIC_CLASS_ID,                                                            
    "traffic_class",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.cos_params.traffic_class:\r\n"
    "  Traffic ClassRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(22), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_PRTCL_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_COS_PARAMS_USER_PRIORITY_ID,                                                            
    "user_priority",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.cos_params.user_priority:\r\n"
    "  User PriorityRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(22), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_PRTCL_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_DEST_INDEX_ID,                                                            
    "dest_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.dest_index:\r\n"
    "  Index in the trap_destinations array, that was set by\r\n"
    "  soc_petra_eth_trap_glbl_info_set()Range 0-3\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(22), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_PRTCL_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_FORWARD_TYPE_ID,                                                            
    "forward_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.forward_type:\r\n"
    "  The forwarding action type\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(22), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_PRTCL_INFO_GET_PRTCL_INFO_GET_ID,                                                            
    "prtcl_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets Trap information for protocols:Forwarding typeDestination index (index\r\n"
    "  to the global destinations) COS Parameters (UP, TC, DP) COS overrideCPU code.\r\n"
    "  Protocols can be trapped by this API are ARPIGMP 1/2/other (IGMP-Hdr.Type\r\n"
    "  =1/2/other) VRRP ICMv6\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_get prtcl_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(23), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_PRTCL_INFO_GET_PRTCL_INFO_GET_PRTCL_NDX_ID,                                                            
    "prtcl_ndx",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_TRAP_PROTOCOL_rule[0],                                            
    (sizeof(SOC_PETRA_PP_TRAP_PROTOCOL_rule) / sizeof(SOC_PETRA_PP_TRAP_PROTOCOL_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_ndx:\r\n"
    "  One of the protocols that can be trapped.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_get prtcl_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(23), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MULTICAST_INFO_SET_RESERVED_MULTICAST_INFO_SET_ID,                                                            
    "reserved_multicast_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets Trap information for IEEE reserved multicastForwarding typeDestination\r\n"
    "  index (index to the global destinations) COS Parameters (UP, TC, DP) COS\r\n"
    "  overrideCPU code. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap reserved_multicast_info_set port_type_ndx 0 mac_da_lsb 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MULTICAST_INFO_SET_RESERVED_MULTICAST_INFO_SET_PORT_TYPE_NDX_ID,                                                            
    "port_type_ndx",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_type_ndx:\r\n"
    "  l2 port type (VBP,CNP,CEP,PNP).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap reserved_multicast_info_set port_type_ndx 0 mac_da_lsb 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MULTICAST_INFO_SET_RESERVED_MULTICAST_INFO_SET_PORT_MASK_NDX_ID,                                                            
    "mac_da_lsb",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mac_da_lsb:\r\n"
    "  lsb of the port number. Range: 0-63.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap reserved_multicast_info_set port_type_ndx 0 mac_da_lsb 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MC_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_POLICER_INDEX_ID,                                                            
    "policer_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.policer_index:\r\n"
    "  Specifies which policer should be applied to this packet.(which may change\r\n"
    "  the packets drop precedence)0 - Means No policer should be applied to the\r\n"
    "  packetRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MC_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_COS_OVERWRITE_ID,                                                            
    "cos_overwrite",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.cos_overwrite:\r\n"
    "  If set then the CoS parameters should be replaced when this condition is\r\n"
    "  selected\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MC_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_COS_PARAMS_DROP_PRECEDENCE_ID,                                                            
    "drop_precedence",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.cos_params.drop_precedence:\r\n"
    "  Drop precedenceRange 0-3.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MC_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_COS_PARAMS_TRAFFIC_CLASS_ID,                                                            
    "traffic_class",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.cos_params.traffic_class:\r\n"
    "  Traffic ClassRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MC_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_COS_PARAMS_USER_PRIORITY_ID,                                                            
    "user_priority",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.cos_params.user_priority:\r\n"
    "  User PriorityRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MC_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_DEST_INDEX_ID,                                                            
    "dest_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.dest_index:\r\n"
    "  Index in the trap_destinations array, that was set by\r\n"
    "  soc_petra_eth_trap_glbl_info_set()Range 0-3\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MC_INFO_SET_PRTCL_INFO_SET_TRAP_INFO_FORWARD_TYPE_ID,                                                            
    "forward_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  trap_info.forward_type:\r\n"
    "  The forwarding action type\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap prtcl_info_set prtcl_ndx 0 policer_index 0 cos_overwrite 0\r\n"
    "  drop_precedence 0 traffic_class 0 user_priority 0 dest_index 0 forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(24), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MULTICAST_INFO_GET_RESERVED_MULTICAST_INFO_GET_ID,                                                            
    "reserved_multicast_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets Trap information for IEEE reserved multicastForwarding typeDestination\r\n"
    "  index (index to the global destinations) COS Parameters (UP, TC, DP) COS\r\n"
    "  overrideCPU code. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap reserved_multicast_info_get port_type_ndx 0 mac_da_lsb 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(25), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MULTICAST_INFO_GET_RESERVED_MULTICAST_INFO_GET_PORT_TYPE_NDX_ID,                                                            
    "port_type_ndx",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_type_ndx:\r\n"
    "  l2 port type (VBP,CNP,CEP,PNP).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap reserved_multicast_info_get port_type_ndx 0 mac_da_lsb 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(25), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TRAP_RESERVED_MULTICAST_INFO_GET_RESERVED_MULTICAST_INFO_GET_PORT_MASK_NDX_ID,                                                            
    "mac_da_lsb",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mac_da_lsb:\r\n"
    "  lsb of the port number. Range: 0-63.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap reserved_multicast_info_get port_type_ndx 0 mac_da_lsb 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(25), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_PRTCL_INFO_SET_SNOOP_PRTCL_INFO_SET_ID,                                                            
    "snoop_prtcl_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Selects one of 15 Snoop actions for one of the protocols:ARPIGMP 1/2/other\r\n"
    "  (IGMP-Hdr.Type =1/2/other) VRRP ICMv6\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_prtcl_info_set prtcl_ndx 0 snoop_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(26), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_PRTCL_INFO_SET_SNOOP_PRTCL_INFO_SET_PRTCL_NDX_ID,                                                            
    "prtcl_ndx",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_TRAP_PROTOCOL_rule[0],                                            
    (sizeof(SOC_PETRA_PP_TRAP_PROTOCOL_rule) / sizeof(SOC_PETRA_PP_TRAP_PROTOCOL_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_ndx:\r\n"
    "  One of the protocols that can be trapped.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_prtcl_info_set prtcl_ndx 0 snoop_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(26), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_PRTCL_INFO_SET_SNOOP_PRTCL_INFO_SET_SNOOP_PTR_ID,                                                            
    "snoop_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  snoop_ptr:\r\n"
    "  Snoop Action. Range 0-15.\r\n"
    "  0 Means no Snooping.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_prtcl_info_set prtcl_ndx 0 snoop_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(26), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_PRTCL_INFO_GET_SNOOP_PRTCL_INFO_GET_ID,                                                            
    "snoop_prtcl_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Selects one of 15 Snoop actions for one of the protocols:ARPIGMP 1/2/other\r\n"
    "  (IGMP-Hdr.Type =1/2/other) VRRP ICMv6\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_prtcl_info_get prtcl_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(27), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_PRTCL_INFO_GET_SNOOP_PRTCL_INFO_GET_PRTCL_NDX_ID,                                                            
    "prtcl_ndx",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_TRAP_PROTOCOL_rule[0],                                            
    (sizeof(SOC_PETRA_PP_TRAP_PROTOCOL_rule) / sizeof(SOC_PETRA_PP_TRAP_PROTOCOL_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_ndx:\r\n"
    "  One of the protocols that can be trapped.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_prtcl_info_get prtcl_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(27), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_ETHER_TYPE_INFO_SET_SNOOP_ETHER_TYPE_INFO_SET_ID,                                                            
    "snoop_ether_type_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  set snoop for Ethernet Type \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_prtcl_info_set prtcl_ndx 0 snoop_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(9)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_ETHER_TYPE_INFO_SET_SNOOP_ETHER_TYPE_INFO_SET_ETHER_TYPE_NDX_ID,                                                            
    "ether_type",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ether_type_ndx:\r\n"
    "  Ethernet type.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_ether_type_info_set ether_type_ndx 0 snoop_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(9)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_ETHER_TYPE_INFO_SET_SNOOP_ETHER_TYPE_INFO_SET_ENCAP_TYPE_NDX_ID,                                                            
    "ecnap_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_ENCAP_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_ENCAP_TYPE_rule) / sizeof(SOC_PETRA_PP_ENCAP_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ether_type_ndx:\r\n"
    "  One of the protocols that can be trapped.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_ether_type_info_set ether_type_ndx 0 snoop_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(9)},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },    
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_ETHER_TYPE_INFO_SET_SNOOP_ETHER_TYPE_INFO_SET_SNOOP_PTR_ID,                                                            
    "snoop_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  snoop_ptr:\r\n"
    "  Snoop Action. Range 0-15.\r\n"
    "  0 Means no Snooping.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_prtcl_info_set prtcl_ndx 0 snoop_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_ETHER_TYPE_INFO_GET_SNOOP_ETHER_TYPE_INFO_GET_ID,                                                            
    "snoop_ether_type_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  snooping for ethernet type \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_ether_type_info_get ether_type_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(10)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_RESERVED_MULTICAST_INFO_SET_SNOOP_RESERVED_MULTICAST_INFO_SET_ID,                                                            
    "snoop_reserved_multicast_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Selects one of 15 Snoop actions to be applied to IEEE\r\n"
    "  reserved multicast packets that are designated to port\r\n"
    "  that:\r\n"
    "  - Its type is port_type and\r\n"
    "  - The 6-lsb of its number is equal to port_mask.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_reserved_multicast_info_set port_type_ndx 0\r\n"
    "  mac_da_lsb 0 snoop_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(28), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_RESERVED_MULTICAST_INFO_SET_SNOOP_RESERVED_MULTICAST_INFO_SET_PORT_TYPE_NDX_ID,                                                            
    "port_type_ndx",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_type_ndx:\r\n"
    "  l2 port type (VBP,CNP,CEP,PNP).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_reserved_multicast_info_set port_type_ndx 0\r\n"
    "  mac_da_lsb 0 snoop_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(28), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_RESERVED_MULTICAST_INFO_SET_SNOOP_RESERVED_MULTICAST_INFO_SET_PORT_MASK_NDX_ID,                                                            
    "mac_da_lsb",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mac_da_lsb:\r\n"
    "  lsb of the port number. Range: 0-63.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_reserved_multicast_info_set port_type_ndx 0\r\n"
    "  mac_da_lsb 0 snoop_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(28), 0, 0, 0},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_RESERVED_MULTICAST_INFO_SET_SNOOP_RESERVED_MULTICAST_INFO_SET_SNOOP_PTR_ID,                                                            
    "snoop_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  snoop_ptr:\r\n"
    "  Snoop Action. Range 0-15.\r\n"
    "  0 Means no Snooping.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_reserved_multicast_info_set port_type_ndx 0\r\n"
    "  mac_da_lsb 0 snoop_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(28), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_RESERVED_MULTICAST_INFO_GET_SNOOP_RESERVED_MULTICAST_INFO_GET_ID,                                                            
    "snoop_reserved_multicast_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Selects one of 15 Snoop actions to be applied to IEEE\r\n"
    "  reserved multicast packets that are designated to port\r\n"
    "  that:\r\n"
    "  - Its type is port_type and\r\n"
    "  - The 6-lsb of its number is equal to port_mask.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_reserved_multicast_info_get port_type_ndx 0\r\n"
    "  mac_da_lsb 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(29), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_RESERVED_MULTICAST_INFO_GET_SNOOP_RESERVED_MULTICAST_INFO_GET_PORT_TYPE_NDX_ID,                                                            
    "port_type_ndx",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_type_ndx:\r\n"
    "  l2 port type (VBP,CNP,CEP,PNP).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_reserved_multicast_info_get port_type_ndx 0\r\n"
    "  mac_da_lsb 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(29), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_SNOOP_RESERVED_MULTICAST_INFO_GET_SNOOP_RESERVED_MULTICAST_INFO_GET_PORT_MASK_NDX_ID,                                                            
    "mac_da_lsb",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mac_da_lsb:\r\n"
    "  lsb of the port number. Range: 0-63.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api trap snoop_reserved_multicast_info_get port_type_ndx 0\r\n"
    "  mac_da_lsb 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(29), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_TRAP_ID,                                                            
    "trap",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29), 0, 0, 0, 0, 0, BIT(9)|BIT(10)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } trap*/
#ifdef UI_MACT/* { mact*/
  {                                                                                        
    PARAM_PETRA_PP_MACT_VID_TO_FID_SET_VID_TO_FID_SET_ID,                                                            
    "vid_to_fid_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets mapping from VLAN ID to FID (filtering database), identifier to access\r\n"
    "  the MAC table. The FID of the shared VLANS is zero. For the unshared VLANs\r\n"
    "  the FID is equal to the VID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact vid_to_fid_set vid_ndx 0 fid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(30), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_VID_TO_FID_SET_VID_TO_FID_SET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  The VLAN ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact vid_to_fid_set vid_ndx 0 fid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(30), 0, 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_VID_TO_FID_SET_VID_TO_FID_SET_FID_ID,                                                            
    "fid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fid:\r\n"
    "  The FID to map the VID to, has to be either equal to the VID or to the shred\r\n"
    "  FID. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact vid_to_fid_set vid_ndx 0 fid 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(30), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_VID_TO_FID_GET_VID_TO_FID_GET_ID,                                                            
    "vid_to_fid_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets mapping from VLAN ID to FID (filtering database), identifier to access\r\n"
    "  the MAC table. The FID of the shared VLANS is zero. For the unshared VLANs\r\n"
    "  the FID is equal to the VID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact vid_to_fid_get vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(31), 0, 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_VID_TO_FID_GET_VID_TO_FID_GET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  The VLAN ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact vid_to_fid_get vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {BIT(31), 0, 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_ID,                                                            
    "insert",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Inserts\r\n"
    "  an entry according to key. If in the MAC table there is already an entry with\r\n"
    "  this key, it is overwritten by this value.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_KEY_IS_FID_ID,                                                            
    "is_fid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.is_fid:\r\n"
    "  If TRUE then the ID is FID; otherwise it is VID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_KEY_VID_ID,                                                            
    "vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.vid:\r\n"
    "  The ID. May be FID or VID.Range 0-4095\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_KEY_MAC_ID,                                                            
    "mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.mac:\r\n"
    "  MAC address\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_VALUE_AGING_INFO_MESSAGE_BY_SELF_ID,                                                            
    "message_by_self",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.aging_info.message_by_self:\r\n"
    "  Was this refresh message sent by this device. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_VALUE_AGING_INFO_REFRESHED_BY_MESSAGE_ID,                                                            
    "refreshed_by_message",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.aging_info.refreshed_by_message:\r\n"
    "  Is the reason for refreshing the entry is receiving a refresh message\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_VALUE_AGING_INFO_AGE_STATUS_ID,                                                            
    "age_status",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_MACT_AGE_STATUS_rule[0],                                            
    (sizeof(SOC_PETRA_PP_MACT_AGE_STATUS_rule) / sizeof(SOC_PETRA_PP_MACT_AGE_STATUS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.aging_info.age_status:\r\n"
    "  Age Status of the Entry. Indicates how Fresh the entry is.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_VALUE_PAYLOAD_DESTINATION_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.destination:\r\n"
    "  The forwarding action destination Address.Range 0-32767 \r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_VALUE_PAYLOAD_DESTINATION_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.destination:\r\n"
    "  The forwarding action destination Address.Range 0-32767 \r\n"
    "  the destination type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_VALUE_PAYLOAD_FORWARD_TYPE_ID,                                                            
    "forward_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.forward_type:\r\n"
    "  The forwarding action Destination type\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_VALUE_PAYLOAD_POLICER_PTR_SEL_ID,                                                            
    "policer_ptr_sel",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.policer_ptr_sel:\r\n"
    "  which controller pointer to apply over the packets \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_VALUE_PAYLOAD_DROP_WHEN_SA_IS_KNOWN_ID,                                                            
    "drop_when_sa_is_known",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.drop_when_sa_is_known:\r\n"
    "  If TRUE - For an SA lookup match, then the forwarding action is changed to\r\n"
    "  type configured by soc_petra_pp_mac_sa_drop_frwd_info_set() with destination\r\n"
    "  drop. If FALSE - SA lookup match doesn't affect forwarding.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_VALUE_PAYLOAD_IS_DYNAMIC_ID,                                                            
    "is_dynamic",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.is_dynamic:\r\n"
    "  Is the entry dynamic (i.e. isn't static) and participates in the aging\r\n"
    "  process.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_INSERT_ENTRY_INSERT_ACK_STAMP_ID,                                                            
    "ack_stamp",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ack_stamp:\r\n"
    "  If different than zero then the device will generate an ACK event\r\n"
    "  upon completion with identifier equal to this stamp.\r\n"
    "  Range 0-255.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact insert is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(0), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_ID,                                                            
    "learn",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Learns an entry for given key and value. If in the MAC table there is already\r\n"
    "  an entry with this key, it is overwritten, except for one case, and that when\r\n"
    "  the entry already exists in the MACT and it is static and the entry to be\r\n"
    "  learned (value) is dynamic. Then no change will be done for the existing\r\n"
    "  entry.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_KEY_IS_FID_ID,                                                            
    "is_fid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.is_fid:\r\n"
    "  If TRUE then the ID is FID; otherwise it is VID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_KEY_VID_ID,                                                            
    "vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.vid:\r\n"
    "  The ID. May be FID or VID.Range 0-4095\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_KEY_MAC_ID,                                                            
    "mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.mac:\r\n"
    "  MAC address\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_VALUE_AGING_INFO_MESSAGE_BY_SELF_ID,                                                            
    "message_by_self",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.aging_info.message_by_self:\r\n"
    "  Was this refresh message sent by this device. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_VALUE_AGING_INFO_REFRESHED_BY_MESSAGE_ID,                                                            
    "refreshed_by_message",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.aging_info.refreshed_by_message:\r\n"
    "  Is the reason for refreshing the entry is receiving a refresh message\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_VALUE_AGING_INFO_AGE_STATUS_ID,                                                            
    "age_status",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_MACT_AGE_STATUS_rule[0],                                            
    (sizeof(SOC_PETRA_PP_MACT_AGE_STATUS_rule) / sizeof(SOC_PETRA_PP_MACT_AGE_STATUS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.aging_info.age_status:\r\n"
    "  Age Status of the Entry. Indicates how Fresh the entry is.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_VALUE_PAYLOAD_DESTINATION_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.destination:\r\n"
    "  The forwarding action destination Address.Range 0-32767 \r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  learned_by_message 0 age_status 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_VALUE_PAYLOAD_DESTINATION_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.destination:\r\n"
    "  The forwarding action destination Address.Range 0-32767 \r\n"
    "  the destination type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  learned_by_message 0 age_status 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_VALUE_PAYLOAD_FORWARD_TYPE_ID,                                                            
    "forward_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.forward_type:\r\n"
    "  The forwarding action Destination type\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_VALUE_PAYLOAD_DROP_WHEN_SA_IS_KNOWN_ID,                                                            
    "drop_when_sa_is_known",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.drop_when_sa_is_known:\r\n"
    "  If TRUE - For an SA lookup match, then the forwarding action is changed to\r\n"
    "  type configured by soc_petra_pp_mac_sa_drop_frwd_info_set() with destination\r\n"
    "  drop. If FALSE - SA lookup match doesn't affect forwarding.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_VALUE_PAYLOAD_IS_DYNAMIC_ID,                                                            
    "is_dynamic",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.is_dynamic:\r\n"
    "  Is the entry dynamic (i.e. isn't static) and participates in the aging\r\n"
    "  process.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_LEARN_ENTRY_LEARN_ACK_STAMP_ID,                                                            
    "ack_stamp",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ack_stamp:\r\n"
    "  If different than zero then the device will generate an ACK event\r\n"
    "  upon completion with identifier equal to this stamp.\r\n"
    "  Range 0-255.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact learn is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(1), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_ID,                                                            
    "refresh",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Refresh an entry for given key and value. If in the MAC table there is\r\n"
    "  already an entry with this key, it is overwritten by value except for one\r\n"
    "  case, and that when the entry already exists in the MACT and it is static and\r\n"
    "  the entry to be learned (value) is dynamic. Then no change will be done for\r\n"
    "  the existing entry.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_KEY_IS_FID_ID,                                                            
    "is_fid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.is_fid:\r\n"
    "  If TRUE then the ID is FID; otherwise it is VID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_KEY_VID_ID,                                                            
    "vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.vid:\r\n"
    "  The ID. May be FID or VID.Range 0-4095\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_KEY_MAC_ID,                                                            
    "mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.mac:\r\n"
    "  MAC address\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_VALUE_AGING_INFO_MESSAGE_BY_SELF_ID,                                                            
    "message_by_self",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.aging_info.message_by_self:\r\n"
    "  Was this refresh message sent by this device. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_VALUE_AGING_INFO_REFRESHED_BY_MESSAGE_ID,                                                            
    "refreshed_by_message",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.aging_info.refreshed_by_message:\r\n"
    "  Is the reason for refreshing the entry is receiving a refresh message\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_VALUE_AGING_INFO_AGE_STATUS_ID,                                                            
    "age_status",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_MACT_AGE_STATUS_rule[0],                                            
    (sizeof(SOC_PETRA_PP_MACT_AGE_STATUS_rule) / sizeof(SOC_PETRA_PP_MACT_AGE_STATUS_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.aging_info.age_status:\r\n"
    "  Age Status of the Entry. Indicates how Fresh the entry is.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_VALUE_PAYLOAD_DESTINATION_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.destination:\r\n"
    "  The forwarding action destination Address.Range 0-32767 \r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_VALUE_PAYLOAD_DESTINATION_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.destination:\r\n"
    "  The forwarding action destination Address.Range 0-32767 \r\n"
    "  the destination type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_VALUE_PAYLOAD_FORWARD_TYPE_ID,                                                            
    "forward_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.forward_type:\r\n"
    "  The forwarding action Destination type\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_VALUE_PAYLOAD_DROP_WHEN_SA_IS_KNOWN_ID,                                                            
    "drop_when_sa_is_known",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.drop_when_sa_is_known:\r\n"
    "  If TRUE - For an SA lookup match, then the forwarding action is changed to\r\n"
    "  type configured by soc_petra_pp_mac_sa_drop_frwd_info_set() with destination\r\n"
    "  drop. If FALSE - SA lookup match doesn't affect forwarding.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_VALUE_PAYLOAD_IS_DYNAMIC_ID,                                                            
    "is_dynamic",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  value.payload.is_dynamic:\r\n"
    "  Is the entry dynamic (i.e. isn't static) and participates in the aging\r\n"
    "  process.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_REFRESH_ENTRY_REFRESH_ACK_STAMP_ID,                                                            
    "ack_stamp",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ack_stamp:\r\n"
    "  If different than zero then the device will generate an ACK event\r\n"
    "  Upon completion with identifier equal to this stamp.\r\n"
    "  Range 0-255.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact refresh is_fid 0 vid 0 mac 0 message_by_self 0\r\n"
    "  refreshed_by_message 0 age_status 0 destination 0 forward_type 0\r\n"
    "  drop_when_sa_is_known 0 is_dynamic 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(2), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_DELETE_ENTRY_DELETE_ID,                                                            
    "remove",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Delete entry according to key.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact remove is_fid 0 vid 0 mac 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(3), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_DELETE_ENTRY_DELETE_KEY_IS_FID_ID,                                                            
    "is_fid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.is_fid:\r\n"
    "  If TRUE then the ID is FID; otherwise it is VID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact remove is_fid 0 vid 0 mac 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(3), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_DELETE_ENTRY_DELETE_KEY_VID_ID,                                                            
    "vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.vid:\r\n"
    "  The ID. May be FID or VID.Range 0-4095\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact remove is_fid 0 vid 0 mac 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(3), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_DELETE_ENTRY_DELETE_KEY_MAC_ID,                                                            
    "mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.mac:\r\n"
    "  MAC address\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact remove is_fid 0 vid 0 mac 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(3), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_DELETE_ENTRY_DELETE_ACK_STAMP_ID,                                                            
    "ack_stamp",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ack_stamp:\r\n"
    "  If different than zero then the device will generate an ACK event\r\n"
    "  upon completion with identifier equal to ack_stamp\r\n"
    "  Range 0-255\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact remove is_fid 0 vid 0 mac 0 ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(3), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_ENTRY_GET_ID,                                                            
    "get_entry",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get entry according to key (MAC address, FID or VID). \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact entry_get is_fid 0 vid 0 mac 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(4), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_ENTRY_GET_KEY_IS_FID_ID,                                                            
    "is_fid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.is_fid:\r\n"
    "  If TRUE then the ID is FID; otherwise it is VID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact entry_get is_fid 0 vid 0 mac 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(4), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_ENTRY_GET_KEY_VID_ID,                                                            
    "vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.vid:\r\n"
    "  The ID. May be FID or VID.Range 0-4095\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact entry_get is_fid 0 vid 0 mac 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(4), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_ENTRY_GET_KEY_MAC_ID,                                                            
    "mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  key.mac:\r\n"
    "  MAC address\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact entry_get is_fid 0 vid 0 mac 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(4), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_ALL_ENTRY_GET_ALL_ID,                                                            
    "get_all",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get all valid entries of the MACT. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_all freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(5), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_ALL_ENTRY_GET_ALL_FREEZE_MACT_ID,                                                            
    "freeze_mact",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  freeze_mact:\r\n"
    "  If TRUE, before getting the block Stop the activity of the device on the MACT\r\n"
    "  so keeping the MACT unchanged. On completion the function restores the device\r\n"
    "  activity status as it was before.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_all freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(5), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_BLOCK_ENTRY_GET_BLOCK_ID,                                                            
    "get_block",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get block of entries from the MACT, starting from start_indx, till end of the\r\n"
    "  table or reading entries_to_read, the function retrieve only valid entries.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_block entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    2,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_BLOCK_ENTRY_GET_BLOCK_RANGE_ENTRIES_TO_ACT_ID,                                                            
    "entries_to_act",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  range.entries_to_act:\r\n"
    "  Number of entries to read/modify.Stop After retrieving this number of entries.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_block entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_BLOCK_ENTRY_GET_BLOCK_RANGE_ENTRIES_TO_SCAN_ID,                                                            
    "entries_to_scan",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  range.entries_to_scan:\r\n"
    "  The number of entries to scan.Stop After scanning this number of entries.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_block entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_BLOCK_ENTRY_GET_BLOCK_RANGE_ITER_ID,                                                            
    "iter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  range.iter:\r\n"
    "  The index to start reading from in the MACT\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_block entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_BLOCK_ENTRY_GET_BLOCK_RULE_INCLUDING_DYNAMIC_ID,                                                            
    "including_dynamic",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.including_dynamic:\r\n"
    "  If TRUE then dynamic entries are in the match. In flush operation has to be\r\n"
    "  TRUE.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_block entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_BLOCK_ENTRY_GET_BLOCK_RULE_INCLUDING_STATIC_ID,                                                            
    "including_static",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.including_static:\r\n"
    "  If TRUE then static entries are in the match. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_block entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_BLOCK_ENTRY_GET_BLOCK_RULE_DEST_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.dest.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_block entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_BLOCK_ENTRY_GET_BLOCK_RULE_DEST_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.dest.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_block entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_BLOCK_ENTRY_GET_BLOCK_RULE_COMPARE_DEST_ID,                                                            
    "compare_dest",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.compare_dest:\r\n"
    "  Should the destination in the MAC table be compared with the destination in\r\n"
    "  this structure.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_block entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_BLOCK_ENTRY_GET_BLOCK_RULE_FID_ID,                                                            
    "fid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.fid:\r\n"
    "  When 'compare_fid' is asserted, the FID in the MACT is compared with this\r\n"
    "  value. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_block entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_BLOCK_ENTRY_GET_BLOCK_RULE_COMPARE_FID_ID,                                                            
    "compare_fid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.compare_fid:\r\n"
    "  Should the FID in the MACT be compared with the FID in this structure\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_block entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_BLOCK_ENTRY_GET_BLOCK_FREEZE_MACT_ID,                                                            
    "freeze_mact",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  freeze_mact:\r\n"
    "  If TRUE Before getting the block Stop the activity of the device on the MACT\r\n"
    "  so keeping the MACT unchanged. On completion the function restores the device\r\n"
    "  activity status as it was before calling this function.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_block entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(6), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_COUNT_ENTRY_GET_COUNT_ID,                                                            
    "get_count",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get the number of entries in the MACT that fulfill a given rule in a given\r\n"
    "  range.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_count entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_COUNT_ENTRY_GET_COUNT_RANGE_ENTRIES_TO_ACT_ID,                                                            
    "entries_to_act",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  range.entries_to_act:\r\n"
    "  Number of entries to read/modify.Stop After retrieving this number of entries.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_count entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_COUNT_ENTRY_GET_COUNT_RANGE_ENTRIES_TO_SCAN_ID,                                                            
    "entries_to_scan",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  range.entries_to_scan:\r\n"
    "  The number of entries to scan.Stop After scanning this number of entries.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_count entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_COUNT_ENTRY_GET_COUNT_RANGE_ITER_ID,                                                            
    "iter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  range.iter:\r\n"
    "  The index to start reading from in the MACT\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_count entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_COUNT_ENTRY_GET_COUNT_RULE_INCLUDING_DYNAMIC_ID,                                                            
    "including_dynamic",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.including_dynamic:\r\n"
    "  If TRUE then dynamic entries are in the match. In flush operation has to be\r\n"
    "  TRUE.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_count entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_COUNT_ENTRY_GET_COUNT_RULE_INCLUDING_STATIC_ID,                                                            
    "including_static",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.including_static:\r\n"
    "  If TRUE then static entries are in the match. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_count entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_COUNT_ENTRY_GET_COUNT_RULE_DEST_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.dest.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_count entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_COUNT_ENTRY_GET_COUNT_RULE_DEST_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.dest.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_count entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_COUNT_ENTRY_GET_COUNT_RULE_COMPARE_DEST_ID,                                                            
    "compare_dest",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.compare_dest:\r\n"
    "  Should the destination in the MAC table be compared with the destination in\r\n"
    "  this structure.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_count entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_COUNT_ENTRY_GET_COUNT_RULE_FID_ID,                                                            
    "fid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.fid:\r\n"
    "  When 'compare_fid' is asserted, the FID in the MACT is compared with this\r\n"
    "  value. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_count entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_COUNT_ENTRY_GET_COUNT_RULE_COMPARE_FID_ID,                                                            
    "compare_fid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  rule.compare_fid:\r\n"
    "  Should the FID in the MACT be compared with the FID in this structure\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_count entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_ENTRY_GET_COUNT_ENTRY_GET_COUNT_FREEZE_MACT_ID,                                                            
    "freeze_mact",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  freeze_mact:\r\n"
    "  If TRUE Before getting the block Stop the activity of the device on the MACT\r\n"
    "  so keeping the MACT unchanged. On completion the function restores the device\r\n"
    "  activity status as it was before calling this function.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact get_count entries_to_act 0 entries_to_scan 0 iter 0\r\n"
    "  including_dynamic 0 including_static 0 dest_val 0 dest_type 0 compare_dest 0\r\n"
    "  fid 0 compare_fid 0 freeze_mact 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(7), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_EVENT_GET_EVENT_GET_ID,                                                            
    "event_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets the last event from the event FIFO. If the FIFO is empty returns error.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact event_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(8), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_EVENT_BUFFER_GET_EVENT_BUFFER_GET_ID,                                                            
    "event_buffer_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets from the event FIFO, information regarding the last event in the FIFO\r\n"
    "  including event type and buffer that includes the event information. If the\r\n"
    "  FIFO is empty returns error.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact event_buffer_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(9), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_EVENT_BUFFER_PARSE_EVENT_BUFFER_PARSE_ID,                                                            
    "event_buffer_parse",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Parse a buffer to SOC_PETRA_PP_MACT_EVENT struct\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact event_buffer_parse buff_index 0 buff 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(10), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_EVENT_BUFFER_PARSE_EVENT_BUFFER_PARSE_BUFF_INDEX_ID,                                                            
    "buff_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  buff_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact event_buffer_parse buff_index 0 buff 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(10), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_EVENT_BUFFER_PARSE_EVENT_BUFFER_PARSE_BUFF_ID,                                                            
    "buff",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  buff[ prm_buff_index]:\r\n"
    "  er[SOC_PETRA_PP_MACT_EVNET_BUFFER_SIZE] -\r\n"
    "  Buffer that includes the event information (including the type) \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact event_buffer_parse buff_index 0 buff 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(10), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_MACHINES_ACTIVATION_STATUS_SET_MACHINES_ACTIVATION_STATUS_SET_ID,                                                            
    "machines_activation_status_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the status of the MACT machines, machines the affect the content of the\r\n"
    "  MACTAging MachineDefragmentationMACT Management\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact machines_activation_status_set activeFUNCTION 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(11), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_MACHINES_ACTIVATION_STATUS_SET_MACHINES_ACTIVATION_STATUS_SET_ACTIVEFUNCTION_ID,                                                            
    "activeFUNCTION",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  activeFUNCTION:\r\n"
    "  Sets the status of the MACT machines\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact machines_activation_status_set activeFUNCTION 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(11), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_MACHINES_ACTIVATION_STATUS_GET_MACHINES_ACTIVATION_STATUS_GET_ID,                                                            
    "machines_activation_status_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the status of the MACT machines, machines the affect the content of the\r\n"
    "  MACTAging MachineDefragmentationMACT Management\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact machines_activation_status_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(12), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_OPERATION_MODE_SET_OPERATION_MODE_SET_ID,                                                            
    "operation_mode_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the mod of managing the Learn, Refresh and Delete events: -\r\n"
    "  Automatically by the device\r\n"
    "  -\r\n"
    "  Distributed\r\n"
    "  -\r\n"
    "  Centralized\r\n"
    "  - By the CPU.In case one of the automatic modes was chosen, users have to\r\n"
    "  supply information that set how devices inform each other about MACT updates.\r\n"
    "  For more details refer to SOC_PETRA_PP_MACT_AUTOMATIC_MODE_INFO.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact operation_mode_set header_type 0 header_index 0 header 0\r\n"
    "  drop_when_sa_is_known 0 forward_type 0 operation_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(13), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_OPERATION_MODE_SET_OPERATION_MODE_SET_OPERATION_MODEFUNCTIONSETS_AUTO_MODE_INFO_HEADER_TYPE_ID,                                                            
    "header_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE_rule) / sizeof(SOC_PETRA_PP_MACT_MESSAGE_HEADER_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_modeFUNCTIONSets.auto_mode_info.header_type:\r\n"
    "  Type of the header:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact operation_mode_set header_type 0 header_index 0 header 0\r\n"
    "  drop_when_sa_is_known 0 forward_type 0 operation_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(13), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_OPERATION_MODE_SET_OPERATION_MODE_SET_OPERATION_MODEFUNCTIONSETS_AUTO_MODE_INFO_HEADER_INDEX_ID,                                                            
    "header_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  header_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact operation_mode_set header_type 0 header_index 0 header 0\r\n"
    "  drop_when_sa_is_known 0 forward_type 0 operation_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(13), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_OPERATION_MODE_SET_OPERATION_MODE_SET_OPERATION_MODEFUNCTIONSETS_AUTO_MODE_INFO_HEADER_ID,                                                            
    "header",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_modeFUNCTIONSets.auto_mode_info.header[ prm_header_index]:\r\n"
    "  Header that this device uses in order to send messages to other devices or\r\n"
    "  central CPU. Network Order: First long of the header is header[0] and first\r\n"
    "  bit of the header is the lsb of header[0]. If not all the long used start\r\n"
    "  from lsb bits and reset the rest of the bits of the long.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact operation_mode_set header_type 0 header_index 0 header 0\r\n"
    "  drop_when_sa_is_known 0 forward_type 0 operation_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(13), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_OPERATION_MODE_SET_OPERATION_MODE_SET_OPERATION_MODEFUNCTIONSETS_AUTO_MODE_INFO_DROP_WHEN_SA_IS_KNOWN_ID,                                                            
    "drop_when_sa_is_known",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_modeFUNCTIONSets.auto_mode_info.drop_when_sa_is_known:\r\n"
    "  When the local device learns a MAC address what the drop_when_sa_is_known\r\n"
    "  (which specifies if packet should be dropped when SA lookup succeeds) to be\r\n"
    "  informed for the other devices/ central CPU.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact operation_mode_set header_type 0 header_index 0 header 0\r\n"
    "  drop_when_sa_is_known 0 forward_type 0 operation_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(13), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_OPERATION_MODE_SET_OPERATION_MODE_SET_OPERATION_MODEFUNCTIONSETS_AUTO_MODE_INFO_FORWARD_TYPE_ID,                                                            
    "forward_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_modeFUNCTIONSets.auto_mode_info.forward_type:\r\n"
    "  When the local device learns a MAC address what the forwarding action type to\r\n"
    "  be informed for the other devices/central CPU for this address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact operation_mode_set header_type 0 header_index 0 header 0\r\n"
    "  drop_when_sa_is_known 0 forward_type 0 operation_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(13), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_OPERATION_MODE_SET_OPERATION_MODE_SET_OPERATION_MODEFUNCTIONSETS_OPERATION_MODE_ID,                                                            
    "operation_mode",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_MACT_OPERATION_MODE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_MACT_OPERATION_MODE_rule) / sizeof(SOC_PETRA_PP_MACT_OPERATION_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  operation_modeFUNCTIONSets.operation_mode:\r\n"
    "  Managing Learn, Refresh and Delete\r\n"
    "  - Automatically by the device\r\n"
    "  -\r\n"
    "  Distributed -\r\n"
    "  Centralized\r\n"
    "  - By the CPU.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact operation_mode_set header_type 0 header_index 0 header 0\r\n"
    "  drop_when_sa_is_known 0 forward_type 0 operation_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(13), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_OPERATION_MODE_GET_OPERATION_MODE_GET_ID,                                                            
    "operation_mode_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the mod of managing the Learn, Refresh and Delete events: -\r\n"
    "  Automatically by the device\r\n"
    "  -\r\n"
    "  Distributed\r\n"
    "  -\r\n"
    "  Centralized\r\n"
    "  - By the CPU.In case one of the automatic modes was chosen, users have to\r\n"
    "  supply information that set how devices inform each other about MACT updates.\r\n"
    "  For more details refer to SOC_PETRA_PP_MACT_AUTOMATIC_MODE_INFO.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact operation_mode_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(14), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_AGING_INFO_SET_AGING_INFO_SET_ID,                                                            
    "aging_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the aging info\r\n"
    "  - enable aging\r\n"
    "  - cycle, the time to start traverses the MACT entries for aging.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact aging_info_set nano_sec 0 sec 0 enable_aging 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(15), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_AGING_INFO_SET_AGING_INFO_SET_AGING_INFO_META_CYCLE_NANO_SEC_ID,                                                            
    "nano_sec",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  aging_info.meta_cycle.nano_sec:\r\n"
    "  nano-secondsRange 0-999,999,999\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact aging_info_set nano_sec 0 sec 0 enable_aging 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(15), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_AGING_INFO_SET_AGING_INFO_SET_AGING_INFO_META_CYCLE_SEC_ID,                                                            
    "sec",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  aging_info.meta_cycle.sec:\r\n"
    "  seconds\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact aging_info_set nano_sec 0 sec 0 enable_aging 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(15), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_AGING_INFO_SET_AGING_INFO_SET_AGING_INFO_ENABLE_AGING_ID,                                                            
    "enable_aging",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  aging_info.enable_aging:\r\n"
    "  If TRUE then enable the aging process of the device (aging machine).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact aging_info_set nano_sec 0 sec 0 enable_aging 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(15), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_AGING_INFO_GET_AGING_INFO_GET_ID,                                                            
    "aging_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the aging info\r\n"
    "  - enable aging\r\n"
    "  - cycle, the time to start traverses the MACT entries for aging.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact aging_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(16), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_AGING_MODE_INFO_SET_AGING_MODE_INFO_SET_ID,                                                            
    "aging_mode_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the aging mode info, how does device behave upon events concern aging:\r\n"
    "  - Device deletes entries internally\r\n"
    "  - Device generates event for aged out entries\r\n"
    "  - Device generates event for refreshed entries \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact aging_mode_info_set event_when_refreshed 0\r\n"
    "  event_when_aged_out 0 delete_internally 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(17), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_AGING_MODE_INFO_SET_AGING_MODE_INFO_SET_AGING_MODE_INFO_EVENT_WHEN_REFRESHED_ID,                                                            
    "event_when_refreshed",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  aging_mode_info.event_when_refreshed:\r\n"
    "  If TRUE then the aging process generates events for entries refreshed in the\r\n"
    "  last traverse of the MACT (cycle).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact aging_mode_info_set event_when_refreshed 0\r\n"
    "  event_when_aged_out 0 delete_internally 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(17), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_AGING_MODE_INFO_SET_AGING_MODE_INFO_SET_AGING_MODE_INFO_EVENT_WHEN_AGED_OUT_ID,                                                            
    "event_when_aged_out",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  aging_mode_info.event_when_aged_out:\r\n"
    "  If TRUE then the aging process generates events for aged out entries. Should\r\n"
    "  be set to TRUE for centralized mode\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact aging_mode_info_set event_when_refreshed 0\r\n"
    "  event_when_aged_out 0 delete_internally 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(17), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_AGING_MODE_INFO_SET_AGING_MODE_INFO_SET_AGING_MODE_INFO_DELETE_INTERNALLY_ID,                                                            
    "delete_internally",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  aging_mode_info.delete_internally:\r\n"
    "  If TRUE then the aging process internally deletes aged out entries.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact aging_mode_info_set event_when_refreshed 0\r\n"
    "  event_when_aged_out 0 delete_internally 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(17), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_AGING_MODE_INFO_GET_AGING_MODE_INFO_GET_ID,                                                            
    "aging_mode_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the aging mode info, how does device behave upon events concern aging:\r\n"
    "  - Device deletes entries internally\r\n"
    "  - Device generates event for aged out entries\r\n"
    "  - Device generates event for refreshed entries \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact aging_mode_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(18), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_FLUSH_FLUSH_ID,                                                            
    "flush",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Performs Flush Action (clear or transplant) to entries that fulfill a Rule.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact flush dest_val 0 dest_type 0 including_dynamic 0\r\n"
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"
    "  mode 0 wait_till_finish 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(19), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_FLUSH_FLUSH_FLUSH_INFO_RULE_INCLUDING_DYNAMIC_ID,                                                            
    "including_dynamic",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flush_info.rule.including_dynamic:\r\n"
    "  If TRUE then dynamic entries are in the match. In flush operation has to be\r\n"
    "  TRUE.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact flush dest_val 0 dest_type 0 including_dynamic 0\r\n"
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"
    "  mode 0 wait_till_finish 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(19), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_FLUSH_FLUSH_FLUSH_INFO_RULE_INCLUDING_STATIC_ID,                                                            
    "including_static",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flush_info.rule.including_static:\r\n"
    "  If TRUE then static entries are in the match. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact flush dest_val 0 dest_type 0 including_dynamic 0\r\n"
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"
    "  mode 0 wait_till_finish 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(19), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_FLUSH_FLUSH_FLUSH_INFO_RULE_DEST_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flush_info.rule.dest.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact flush dest_val 0 dest_type 0 including_dynamic 0\r\n"
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"
    "  mode 0 wait_till_finish 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(19), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_FLUSH_FLUSH_FLUSH_INFO_RULE_DEST_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flush_info.rule.dest.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact flush dest_val 0 dest_type 0 including_dynamic 0\r\n"
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"
    "  mode 0 wait_till_finish 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(19), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_FLUSH_FLUSH_FLUSH_INFO_RULE_COMPARE_DEST_ID,                                                            
    "compare_dest",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flush_info.rule.compare_dest:\r\n"
    "  Should the destination in the MAC table be compared with the destination in\r\n"
    "  this structure.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact flush dest_val 0 dest_type 0 including_dynamic 0\r\n"
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"
    "  mode 0 wait_till_finish 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(19), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_FLUSH_FLUSH_FLUSH_INFO_RULE_FID_ID,                                                            
    "fid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flush_info.rule.fid:\r\n"
    "  When 'compare_fid' is asserted, the FID in the MACT is compared with this\r\n"
    "  value. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact flush dest_val 0 dest_type 0 including_dynamic 0\r\n"
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"
    "  mode 0 wait_till_finish 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(19), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_FLUSH_FLUSH_FLUSH_INFO_RULE_COMPARE_FID_ID,                                                            
    "compare_fid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  flush_info.rule.compare_fid:\r\n"
    "  Should the FID in the MACT be compared with the FID in this structure\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact flush dest_val 0 dest_type 0 including_dynamic 0\r\n"
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"
    "  mode 0 wait_till_finish 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(19), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_FLUSH_FLUSH_WAIT_TILL_FINISH_ID,                                                            
    "wait_till_finish",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  wait_till_finish:\r\n"
    "  if TRUE then the function returns only the flush operation terminated,\r\n"
    "  otherwise it returns immediately.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact flush dest_val 0 dest_type 0 including_dynamic 0\r\n"
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"
    "  mode 0 wait_till_finish 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(19), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                                                                  
    PARAM_PETRA_PP_MACT_TRANSPLANT_TRANSPLANT_ID,                                                                                              
    "transplant",                                                                                                                         
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                                                                  
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                                                      
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                                                                     
    0,0,0,0,0,0,0,                                                                                                                   
    "  Performs transplant Action (clear or transplant) to entries that fulfill a Rule.\r\n"                                              
    "",                                                                                                                              
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                                                                  
    "  soc_petra_pp_api mact transplant dest_val 0 dest_type 0 including_dynamic 0\r\n"                                                       
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"                                             
    "  mode 0 wait_till_finish 0\r\n"                                                                                                
#endif
    "",                                                                                                                              
    "",                                                                                                                              
    {0, 0, 0, 0, BIT(25)},                                                                                                              
    2,                                                                                                                               
      /*                                                                                                                             
       * Pointer to a function to call after symbolic parameter                                                                      
       * has been accepted.                                                                                                          
       */                                                                                                                            
    (VAL_PROC_PTR)NULL                                                                                                               
  },                                                                                                                                 
  {                                                                                                                                  
    PARAM_PETRA_PP_MACT_TRANSPLANT_TRANSPLANT_TRANSPLANT_INFO_NEW_DEST_DEST_VAL_ID,                                                                 
    "new_dest_val",                                                                                                                  
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                                                                   
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                                                        
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                                                                  
    0,0,0,0,0,0,0,                                                                                                                   
    "  transplant_info.new_dest.dest_val:\r\n"                                                                                            
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"                                              
    "  LAG the value is the group ID.\r\n"                                                                                           
    "",                                                                                                                              
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                                                                  
    "  soc_petra_pp_api mact transplant dest_val 0 dest_type 0 including_dynamic 0\r\n"                                                       
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"                                             
    "  mode 0 wait_till_finish 0\r\n"                                                                                                
#endif
    "",                                                                                                                              
    "",                                                                                                                              
    {0, 0, 0, 0, BIT(25)},                                                                                                              
    LAST_ORDINAL,                                                                                                                    
      /*                                                                                                                             
       * Pointer to a function to call after symbolic parameter                                                                      
       * has been accepted.                                                                                                          
       */                                                                                                                            
    (VAL_PROC_PTR)NULL                                                                                                               
  },                                                                                                                                 
  {                                                                                                                                  
    PARAM_PETRA_PP_MACT_TRANSPLANT_TRANSPLANT_TRANSPLANT_INFO_NEW_DEST_DEST_TYPE_ID,                                                                
    "new_dest_type",                                                                                                                 
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                                                          
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                                      
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                                                                  
    0,0,0,0,0,0,0,                                                                                                                   
    "  transplant_info.new_dest.dest_type:\r\n"                                                                                           
    "  The type of the following destination ID\r\n"                                                                                 
    "",                                                                                                                              
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                                                                  
    "  soc_petra_pp_api mact transplant dest_val 0 dest_type 0 including_dynamic 0\r\n"                                                       
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"                                             
    "  mode 0 wait_till_finish 0\r\n"                                                                                                
#endif
    "",                                                                                                                              
    "",                                                                                                                              
    {0, 0, 0, 0, BIT(25)},                                                                                                              
    LAST_ORDINAL,                                                                                                                    
      /*                                                                                                                             
       * Pointer to a function to call after symbolic parameter                                                                      
       * has been accepted.                                                                                                          
       */                                                                                                                            
    (VAL_PROC_PTR)NULL                                                                                                               
  },                                                                                                                                 
  {                                                                                                                                  
    PARAM_PETRA_PP_MACT_TRANSPLANT_TRANSPLANT_TRANSPLANT_INFO_RULE_INCLUDING_DYNAMIC_ID,                                                            
    "including_dynamic",                                                                                                             
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                                                                   
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                                                        
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                                                                  
    0,0,0,0,0,0,0,                                                                                                                   
    "  transplant_info.rule.including_dynamic:\r\n"                                                                                       
    "  If TRUE then dynamic entries are in the match. In transplant operation has to be\r\n"                                              
    "  TRUE.\r\n"                                                                                                                    
    "",                                                                                                                              
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                                                                  
    "  soc_petra_pp_api mact transplant dest_val 0 dest_type 0 including_dynamic 0\r\n"                                                       
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"                                             
    "  mode 0 wait_till_finish 0\r\n"                                                                                                
#endif
    "",                                                                                                                              
    "",                                                                                                                              
    {0, 0, 0, 0, BIT(25)},                                                                                                              
    LAST_ORDINAL,                                                                                                                    
      /*                                                                                                                             
       * Pointer to a function to call after symbolic parameter                                                                      
       * has been accepted.                                                                                                          
       */                                                                                                                            
    (VAL_PROC_PTR)NULL                                                                                                               
  },                                                                                                                                 
  {                                                                                                                                  
    PARAM_PETRA_PP_MACT_TRANSPLANT_TRANSPLANT_TRANSPLANT_INFO_RULE_INCLUDING_STATIC_ID,                                                             
    "including_static",                                                                                                              
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                                                                   
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                                                        
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                                                                  
    0,0,0,0,0,0,0,                                                                                                                   
    "  transplant_info.rule.including_static:\r\n"                                                                                        
    "  If TRUE then static entries are in the match. \r\n"                                                                           
    "",                                                                                                                              
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                                                                  
    "  soc_petra_pp_api mact transplant dest_val 0 dest_type 0 including_dynamic 0\r\n"                                                       
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"                                             
    "  mode 0 wait_till_finish 0\r\n"                                                                                                
#endif
    "",                                                                                                                              
    "",                                                                                                                              
    {0, 0, 0, 0, BIT(25)},                                                                                                              
    LAST_ORDINAL,                                                                                                                    
      /*                                                                                                                             
       * Pointer to a function to call after symbolic parameter                                                                      
       * has been accepted.                                                                                                          
       */                                                                                                                            
    (VAL_PROC_PTR)NULL                                                                                                               
  },                                                                                                                                 
  {                                                                                                                                  
    PARAM_PETRA_PP_MACT_TRANSPLANT_TRANSPLANT_TRANSPLANT_INFO_RULE_DEST_DEST_VAL_ID,                                                                
    "dest_val",                                                                                                                      
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                                                                   
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                                                        
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                                                                  
    0,0,0,0,0,0,0,                                                                                                                   
    "  transplant_info.rule.dest.dest_val:\r\n"                                                                                           
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"                                              
    "  LAG the value is the group ID.\r\n"                                                                                           
    "",                                                                                                                              
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                                                                  
    "  soc_petra_pp_api mact transplant dest_val 0 dest_type 0 including_dynamic 0\r\n"                                                       
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"                                             
    "  mode 0 wait_till_finish 0\r\n"                                                                                                
#endif
    "",                                                                                                                              
    "",                                                                                                                              
    {0, 0, 0, 0, BIT(25)},                                                                                                              
    LAST_ORDINAL,                                                                                                                    
      /*                                                                                                                             
       * Pointer to a function to call after symbolic parameter                                                                      
       * has been accepted.                                                                                                          
       */                                                                                                                            
    (VAL_PROC_PTR)NULL                                                                                                               
  },                                                                                                                                 
  {                                                                                                                                  
    PARAM_PETRA_PP_MACT_TRANSPLANT_TRANSPLANT_TRANSPLANT_INFO_RULE_DEST_DEST_TYPE_ID,                                                               
    "dest_type",                                                                                                                     
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                                                          
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                                      
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                                                                  
    0,0,0,0,0,0,0,                                                                                                                   
    "  transplant_info.rule.dest.dest_type:\r\n"                                                                                          
    "  The type of the following destination ID\r\n"                                                                                 
    "",                                                                                                                              
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                                                                  
    "  soc_petra_pp_api mact transplant dest_val 0 dest_type 0 including_dynamic 0\r\n"                                                       
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"                                             
    "  mode 0 wait_till_finish 0\r\n"                                                                                                
#endif
    "",                                                                                                                              
    "",                                                                                                                              
    {0, 0, 0, 0, BIT(25)},                                                                                                              
    LAST_ORDINAL,                                                                                                                    
      /*                                                                                                                             
       * Pointer to a function to call after symbolic parameter                                                                      
       * has been accepted.                                                                                                          
       */                                                                                                                            
    (VAL_PROC_PTR)NULL                                                                                                               
  },                                                                                                                                 
  {                                                                                                                                  
    PARAM_PETRA_PP_MACT_TRANSPLANT_TRANSPLANT_TRANSPLANT_INFO_RULE_COMPARE_DEST_ID,                                                                 
    "compare_dest",                                                                                                                  
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                                                                   
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                                                        
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                                                                  
    0,0,0,0,0,0,0,                                                                                                                   
    "  transplant_info.rule.compare_dest:\r\n"                                                                                            
    "  Should the destination in the MAC table be compared with the destination in\r\n"                                              
    "  this structure.\r\n"                                                                                                          
    "",                                                                                                                              
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                                                                  
    "  soc_petra_pp_api mact transplant dest_val 0 dest_type 0 including_dynamic 0\r\n"                                                       
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"                                             
    "  mode 0 wait_till_finish 0\r\n"                                                                                                
#endif
    "",                                                                                                                              
    "",                                                                                                                              
    {0, 0, 0, 0, BIT(25)},                                                                                                              
    LAST_ORDINAL,                                                                                                                    
      /*                                                                                                                             
       * Pointer to a function to call after symbolic parameter                                                                      
       * has been accepted.                                                                                                          
       */                                                                                                                            
    (VAL_PROC_PTR)NULL                                                                                                               
  },                                                                                                                                 
  {                                                                                                                                  
    PARAM_PETRA_PP_MACT_TRANSPLANT_TRANSPLANT_TRANSPLANT_INFO_RULE_FID_ID,                                                                          
    "fid",                                                                                                                           
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                                                                   
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                                                        
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                                                                  
    0,0,0,0,0,0,0,                                                                                                                   
    "  transplant_info.rule.fid:\r\n"                                                                                                     
    "  When 'compare_fid' is asserted, the FID in the MACT is compared with this\r\n"                                                
    "  value. \r\n"                                                                                                                  
    "",                                                                                                                              
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                                                                  
    "  soc_petra_pp_api mact transplant dest_val 0 dest_type 0 including_dynamic 0\r\n"                                                       
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"                                             
    "  mode 0 wait_till_finish 0\r\n"                                                                                                
#endif
    "",                                                                                                                              
    "",                                                                                                                              
    {0, 0, 0, 0, BIT(25)},                                                                                                              
    LAST_ORDINAL,                                                                                                                    
      /*                                                                                                                             
       * Pointer to a function to call after symbolic parameter                                                                      
       * has been accepted.                                                                                                          
       */                                                                                                                            
    (VAL_PROC_PTR)NULL                                                                                                               
  },                                                                                                                                 
  {                                                                                                                                  
    PARAM_PETRA_PP_MACT_TRANSPLANT_TRANSPLANT_TRANSPLANT_INFO_RULE_COMPARE_FID_ID,                                                                  
    "compare_fid",                                                                                                                   
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                                                                   
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                                                        
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                                                                  
    0,0,0,0,0,0,0,                                                                                                                   
    "  transplant_info.rule.compare_fid:\r\n"                                                                                             
    "  Should the FID in the MACT be compared with the FID in this structure\r\n"                                                    
    "",                                                                                                                              
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                                                                  
    "  soc_petra_pp_api mact transplant dest_val 0 dest_type 0 including_dynamic 0\r\n"                                                       
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"                                             
    "  mode 0 wait_till_finish 0\r\n"                                                                                                
#endif
    "",                                                                                                                              
    "",                                                                                                                              
    {0, 0, 0, 0, BIT(25)},                                                                                                              
    LAST_ORDINAL,                                                                                                                    
      /*                                                                                                                             
       * Pointer to a function to call after symbolic parameter                                                                      
       * has been accepted.                                                                                                          
       */                                                                                                                            
    (VAL_PROC_PTR)NULL                                                                                                               
  },                                                                                                                                 
  {                                                                                                                                  
    PARAM_PETRA_PP_MACT_TRANSPLANT_TRANSPLANT_WAIT_TILL_FINISH_ID,                                                                             
    "wait_till_finish",                                                                                                              
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                                                                   
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                                                        
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                                                                  
    0,0,0,0,0,0,0,                                                                                                                   
    "  wait_till_finish:\r\n"                                                                                                        
    "  if TRUE then the function returns only the transplant operation terminated,\r\n"                                                   
    "  otherwise it returns immediately.\r\n"                                                                                        
    "",                                                                                                                              
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                                                                  
    "  soc_petra_pp_api mact transplant dest_val 0 dest_type 0 including_dynamic 0\r\n"                                                       
    "  including_static 0 dest_val 0 dest_type 0 compare_dest 0 fid 0 compare_fid 0\r\n"                                             
    "  mode 0 wait_till_finish 0\r\n"                                                                                                
#endif
    "",                                                                                                                              
    "",                                                                                                                              
    {0, 0, 0, 0, BIT(25)},                                                                                                              
    LAST_ORDINAL,                                                                                                                    
      /*                                                                                                                             
       * Pointer to a function to call after symbolic parameter                                                                      
       * has been accepted.                                                                                                          
       */                                                                                                                            
    (VAL_PROC_PTR)NULL                                                                                                               
  },                                                                                                                                   
  {                                                                                        
    PARAM_PETRA_PP_MACT_FLUSH_STATUS_GET_FLUSH_STATUS_GET_ID,                                                            
    "flush_status_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Returns the status of the Flush machine. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact flush_status_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(20), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_DEFRAGE_DEFRAGE_ID,                                                            
    "defrage",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Defrage the MAC Table internal Data base \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact defrage ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(21), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MACT_DEFRAGE_DEFRAGE_ACK_STAMP_ID,                                                            
    "ack_stamp",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ack_stamp:\r\n"
    "  If different than zero then the device will generate an\r\n"
    "  ACK event upon completion with identifier equal to this\r\n"
    "  stamp. Range 0-255.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api mact defrage ack_stamp 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(21), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    PARAM_PETRA_PP_API_MACT_ID,                                                            
    "mact",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21), 0, 0, BIT(25)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } mact*/
#ifdef UI_BRIDGING/* { bridging*/
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_ID,                                                            
    "glbl_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the global information for forwarding actions, to be performed on the\r\n"
    "  packets upon a lookup into the MAC Table. Specify what is the forwarding\r\n"
    "  action parameters of a packet that: - Its SA not found and the forwarding\r\n"
    "  action according to Port Info. - Its DA not found and the forwarding action\r\n"
    "  according to Port Info.\r\n"
    "  - Unicast and its DA not found and the forwarding action according to VLAN\r\n"
    "  Info.\r\n"
    "  - Multicast and its DA not found and the forwarding action according to VLAN\r\n"
    "  Info.\r\n"
    "  - Its SA was found and the forwarding action is drop.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_DA_FOUND_CPU_CODE_ID,                                                            
    "da_found_cpu_code",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.da_found_cpu_code:\r\n"
    "  Forwarding CPU Code. Used in case a DA was found in the MAC Table.Range\r\n"
    "  0-1023.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_SA_FOUND_FRWRD_ACTION_ID,                                                            
    "sa_found_frwrd_action",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.sa_found_frwrd_action:\r\n"
    "  The forwarding action in case that a MAC source address was found in the MAC\r\n"
    "  table and the command to the entry was 'drop'. Since the destination is\r\n"
    "  'Drop-Destination', only the drop-strength needs to be configured.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_VLANS_INFO_DA_NOT_FOUND_MC_INDEX_ID,                                                            
    "index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_VLANS_INFO_DA_NOT_FOUND_MC_ADD_VID_ID,                                                            
    "add_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.vlans_info.da_not_found_mc[ prm_da_not_found_mc_index].add_vid:\r\n"
    "  If TRUE, the VLAN ID is added to the destination. In case it's TRUE then the\r\n"
    "  Destination of the forwarding action must be a base multicast-ID. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_VLANS_INFO_DA_NOT_FOUND_MC_POLICER_INDEX_ID,                                                            
    "policer_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.vlans_info.da_not_found_mc[\r\n"
    "  prm_da_not_found_mc_index].policer_index:\r\n"
    "  Specifies which policer should be applied to this packet.(which may change\r\n"
    "  the packets drop precedence)0 - Means No policer should be applied to the\r\n"
    "  packetRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_VLANS_INFO_DA_NOT_FOUND_MC_CPU_CODE_ID,                                                            
    "cpu_code",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.vlans_info.da_not_found_mc[ prm_da_not_found_mc_index].cpu_code:\r\n"
    "  Forwarding CPU CodeRange 0-1023\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_VLANS_INFO_DA_NOT_FOUND_MC_COS_PARAMS_DROP_PRECEDENCE_ID,                                                            
    "drop_precedence",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.vlans_info.da_not_found_mc[\r\n"
    "  prm_da_not_found_mc_index].cos_params.drop_precedence:\r\n"
    "  Drop precedenceRange 0-3.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_VLANS_INFO_DA_NOT_FOUND_MC_COS_PARAMS_TRAFFIC_CLASS_ID,                                                            
    "traffic_class",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.vlans_info.da_not_found_mc[\r\n"
    "  prm_da_not_found_mc_index].cos_params.traffic_class:\r\n"
    "  Traffic ClassRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_VLANS_INFO_DA_NOT_FOUND_MC_COS_PARAMS_USER_PRIORITY_ID,                                                            
    "user_priority",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.vlans_info.da_not_found_mc[\r\n"
    "  prm_da_not_found_mc_index].cos_params.user_priority:\r\n"
    "  User PriorityRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_VLANS_INFO_DA_NOT_FOUND_MC_COS_OVERWRITE_ID,                                                            
    "cos_overwrite",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.vlans_info.da_not_found_mc[\r\n"
    "  prm_da_not_found_mc_index].cos_overwrite:\r\n"
    "  If set then the CoS parameters should be replaced when this condition is\r\n"
    "  selected\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_VLANS_INFO_DA_NOT_FOUND_MC_DEST_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.vlans_info.da_not_found_mc[\r\n"
    "  prm_da_not_found_mc_index].dest.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_VLANS_INFO_DA_NOT_FOUND_MC_DEST_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.vlans_info.da_not_found_mc[\r\n"
    "  prm_da_not_found_mc_index].dest.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_VLANS_INFO_DA_NOT_FOUND_MC_FORWARD_TYPE_ID,                                                            
    "forward_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.vlans_info.da_not_found_mc[ prm_da_not_found_mc_index].forward_type:\r\n"
    "  The forwarding action type\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_SET_FRWRD_GLBL_INFO_SET_FRWD_INFO_SELECT_ID,                                                            
    "select",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_BRIDGING_CONFIG_rule[0],                                            
    (sizeof(SOC_PETRA_PP_BRIDGING_CONFIG_rule) / sizeof(SOC_PETRA_PP_BRIDGING_CONFIG_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwd_info.ports_info.sa_not_found[ prm_sa_not_found_index].forward_type:\r\n"
    "  The forwarding action type\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging glbl_info_set da_found_cpu_code 0\r\n"
    "  sa_found_frwrd_action 0 da_not_found_mc_index 0 add_vid 0 policer_index 0\r\n"
    "  cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0 cos_overwrite 0\r\n"
    "  dest_val 0 dest_type 0 forward_type 0 da_not_found_uc_index 0 add_vid 0\r\n"
    "  policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "  cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0 da_not_found_index 0\r\n"
    "  add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0 traffic_class 0\r\n"
    "  user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0 forward_type 0\r\n"
    "  sa_not_found_index 0 add_vid 0 policer_index 0 cpu_code 0 drop_precedence 0\r\n"
    "  traffic_class 0 user_priority 0 cos_overwrite 0 dest_val 0 dest_type 0\r\n"
    "  forward_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(22), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_GET_FRWRD_GLBL_INFO_GET_ID,                                                            
    "glbl_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the global information for forwarding actions, to be performed on the\r\n"
    "  packets upon a lookup into the MAC Table. Specify what is the forwarding\r\n"
    "  action parameters of a packet that: - Its SA not found and the forwarding\r\n"
    "  action according to Port Info. - Its DA not found and the forwarding action\r\n"
    "  according to Port Info.\r\n"
    "  - Unicast and its DA not found and the forwarding action according to VLAN\r\n"
    "  Info.\r\n"
    "  - Multicast and its DA not found and the forwarding action according to VLAN\r\n"
    "  Info.\r\n"
    "  - Its SA was found and the forwarding action is drop.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_glbl_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(23), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_GLBL_INFO_GET_FRWRD_GLBL_INFO_GET_INCLUDE_NOT_VALID_ID,                                                            
    "inc_not_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the global information for forwarding actions, to be performed on the\r\n"
    "  packets upon a lookup into the MAC Table. Specify what is the forwarding\r\n"
    "  action parameters of a packet that: - Its SA not found and the forwarding\r\n"
    "  action according to Port Info. - Its DA not found and the forwarding action\r\n"
    "  according to Port Info.\r\n"
    "  - Unicast and its DA not found and the forwarding action according to VLAN\r\n"
    "  Info.\r\n"
    "  - Multicast and its DA not found and the forwarding action according to VLAN\r\n"
    "  Info.\r\n"
    "  - Its SA was found and the forwarding action is drop.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_glbl_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(23), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_PORT_INFO_SET_FRWRD_PORT_INFO_SET_ID,                                                            
    "port_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the per-port forwarding action info.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_port_info_set local_port_ndx 0 sa_fwd_action_ptr\r\n"
    "  0 da_fwd_action_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(24), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_PORT_INFO_SET_FRWRD_PORT_INFO_SET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  SOC_SAND_IN SOC_SAND_PP_LOCAL_PORT_ID\r\n"
    "  local_port_ndx\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_port_info_set local_port_ndx 0 sa_fwd_action_ptr\r\n"
    "  0 da_fwd_action_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(24), 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_PORT_INFO_SET_FRWRD_PORT_INFO_SET_PORT_INFO_SA_FWD_ACTION_PTR_ID,                                                            
    "sa_fwd_action_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.sa_fwd_action_ptr:\r\n"
    "  Index in the global info, that set by\r\n"
    "  soc_petra_pp_bridging_frwrd_glbl_info_set(). Forwarding action when the SA of a\r\n"
    "  packet not found upon lookup in the MAC table. Range 0-7\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_port_info_set local_port_ndx 0 sa_fwd_action_ptr\r\n"
    "  0 da_fwd_action_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(24), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_PORT_INFO_SET_FRWRD_PORT_INFO_SET_PORT_INFO_DA_FWD_ACTION_PTR_ID,                                                            
    "da_fwd_action_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.da_fwd_action_ptr:\r\n"
    "  Index in the global info, that set by\r\n"
    "  soc_petra_pp_bridging_frwrd_glbl_info_set(). Forwarding action when the DA of a\r\n"
    "  packet not found upon lookup in the MAC table. Range 0-7\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_port_info_set local_port_ndx 0 sa_fwd_action_ptr\r\n"
    "  0 da_fwd_action_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(24), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_PORT_INFO_GET_FRWRD_PORT_INFO_GET_ID,                                                            
    "port_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the per-port forwarding action info.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_port_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(25), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_PORT_INFO_GET_FRWRD_PORT_INFO_GET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  SOC_SAND_IN SOC_SAND_PP_LOCAL_PORT_ID\r\n"
    "  local_port_ndx\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_port_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(25), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_VLAN_INFO_SET_FRWRD_VLAN_INFO_SET_ID,                                                            
    "vlan_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the per-VLAN forwarding action info.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_vlan_info_set vlan_ndx 0 da_fwd_action_mc_ptr 0\r\n"
    "  da_fwd_action_uc_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(26), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_VLAN_INFO_SET_FRWRD_VLAN_INFO_SET_VLAN_NDX_ID,                                                            
    "vlan_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_ndx:\r\n"
    "  VLAN ID\r\n"
    "  Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_vlan_info_set vlan_ndx 0 da_fwd_action_mc_ptr 0\r\n"
    "  da_fwd_action_uc_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(26), 0, 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_VLAN_INFO_SET_FRWRD_VLAN_INFO_SET_VLAN_INFO_DA_FWD_ACTION_MC_PTR_ID,                                                            
    "da_fwd_action_mc_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.da_fwd_action_mc_ptr:\r\n"
    "  Index into the global info, that was set by\r\n"
    "  soc_petra_pp_bridging_frwrd_glbl_info_set().Forwarding action when the DA of\r\n"
    "  multicast packet was not found upon lookup in the MAC Table. Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_vlan_info_set vlan_ndx 0 da_fwd_action_mc_ptr 0\r\n"
    "  da_fwd_action_uc_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(26), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_VLAN_INFO_SET_FRWRD_VLAN_INFO_SET_VLAN_INFO_DA_FWD_ACTION_UC_PTR_ID,                                                            
    "da_fwd_action_uc_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.da_fwd_action_uc_ptr:\r\n"
    "  Index into the global info, that was set by\r\n"
    "  soc_petra_pp_bridging_frwrd_glbl_info_set().Forwarding action when the DA of\r\n"
    "  unicast packet was not found upon lookup in the MAC Table. Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_vlan_info_set vlan_ndx 0 da_fwd_action_mc_ptr 0\r\n"
    "  da_fwd_action_uc_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(26), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_VLAN_INFO_GET_FRWRD_VLAN_INFO_GET_ID,                                                            
    "vlan_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the per-VLAN forwarding action info.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_vlan_info_get vlan_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_VLAN_INFO_GET_FRWRD_VLAN_INFO_GET_VLAN_NDX_ID,                                                            
    "vlan_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_ndx:\r\n"
    "  VLAN ID\r\n"
    "  Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_vlan_info_get vlan_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(27), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_IPV4_MC_COMPATIBLE_SET_FRWRD_IPV4_MC_COMPATIBLE_SET_ID,                                                            
    "ipv4_mc_compatible_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the per-port relevant forwarding and management information in case of\r\n"
    "  MAC address not found.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_ipv4_mc_compatible_set policer_index 0\r\n"
    "  cos_overwrite 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(28), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_IPV4_MC_COMPATIBLE_SET_FRWRD_IPV4_MC_COMPATIBLE_SET_FRWRD_PARAMS_COS_OVERWRITE_ID,                                                            
    "cos_overwrite",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwrd_params.cos_overwrite:\r\n"
    "  If set then the CoS parameters should be replaced when this condition is\r\n"
    "  selected\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_ipv4_mc_compatible_set policer_index 0\r\n"
    "  cos_overwrite 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(28), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_IPV4_MC_COMPATIBLE_SET_FRWRD_IPV4_MC_COMPATIBLE_SET_FRWRD_PARAMS_DISABLE_IPV4_COMPATIBLE_ID,                                                            
    "disable_ipv4_compatible",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwrd_params.disable_ipv4_compatible:\r\n"
    "  If set then the CoS parameters should be replaced when this condition is\r\n"
    "  selected\r\n"
    "",
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_ipv4_mc_compatible_set policer_index 0\r\n"
    "  disable_ipv4_compatible 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
    "",
    "",                                                                                  
    {0, BIT(28), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_IPV4_MC_COMPATIBLE_SET_FRWRD_IPV4_MC_COMPATIBLE_SET_FRWRD_PARAMS_COS_PARAMS_DROP_PRECEDENCE_ID,                                                            
    "drop_precedence",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwrd_params.cos_params.drop_precedence:\r\n"
    "  Drop precedenceRange 0-3.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_ipv4_mc_compatible_set policer_index 0\r\n"
    "  cos_overwrite 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(28), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_IPV4_MC_COMPATIBLE_SET_FRWRD_IPV4_MC_COMPATIBLE_SET_FRWRD_PARAMS_COS_PARAMS_TRAFFIC_CLASS_ID,                                                            
    "traffic_class",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwrd_params.cos_params.traffic_class:\r\n"
    "  Traffic ClassRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_ipv4_mc_compatible_set policer_index 0\r\n"
    "  cos_overwrite 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(28), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_IPV4_MC_COMPATIBLE_SET_FRWRD_IPV4_MC_COMPATIBLE_SET_FRWRD_PARAMS_COS_PARAMS_USER_PRIORITY_ID,                                                            
    "user_priority",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  frwrd_params.cos_params.user_priority:\r\n"
    "  User PriorityRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_ipv4_mc_compatible_set policer_index 0\r\n"
    "  cos_overwrite 0 drop_precedence 0 traffic_class 0 user_priority 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(28), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_BRIDGING_FRWRD_IPV4_MC_COMPATIBLE_GET_FRWRD_IPV4_MC_COMPATIBLE_GET_ID,                                                            
    "ipv4_mc_compatible_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the per-port relevant forwarding and management information in case of\r\n"
    "  MAC address not found.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_ipv4_mc_compatible_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(29), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_BRIDGING_ID,                                                            
    "bridging",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29), 0, 0},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } bridging*/
#ifdef UI_FILTER/* { filter*/
  {                                                                                        
    PARAM_PETRA_PP_FILTER_GLBL_INFO_SET_GLBL_INFO_SET_ID,                                                            
    "glbl_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the global filtering information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter glbl_info_set auth_filter_control 0 src_equal_destination\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(30), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_GLBL_INFO_SET_GLBL_INFO_SET_FILTER_INFO_AUTH_FILTER_CONTROL_ID,                                                            
    "auth_filter_control",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  filter_info.auth_filter_control:\r\n"
    "  If TRUE then control packets are filtered in 802.1x non-authorized ports.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter glbl_info_set auth_filter_control 0 src_equal_destination\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(30), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_GLBL_INFO_SET_GLBL_INFO_SET_FILTER_INFO_SRC_EQUAL_DESTINATION_ID,                                                            
    "src_equal_destination",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  filter_info.src_equal_destination:\r\n"
    "  Enable filtering so if incoming System-Port or LAG-Port equals outgoing\r\n"
    "  System-Port or LAG-Port. This configures the filtering in the egress. In\r\n"
    "  ingress this filtering always is performed.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter glbl_info_set auth_filter_control 0 src_equal_destination\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(30), 0, 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_GLBL_INFO_GET_GLBL_INFO_GET_ID,                                                            
    "glbl_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the global filtering information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter glbl_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, BIT(31), 0, 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_VLAN_INFO_SET_VLAN_INFO_SET_ID,                                                            
    "vlan_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the per VLAN filtering information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_info_set vid_ndx 0 mc_filter 0 uc_filter 0\r\n"
    "  ingress_filter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(0), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_VLAN_INFO_SET_VLAN_INFO_SET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  Vlan ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_info_set vid_ndx 0 mc_filter 0 uc_filter 0\r\n"
    "  ingress_filter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(0), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_VLAN_INFO_SET_VLAN_INFO_SET_VLAN_INFO_ROUTING_INFO_MC_FILTER_ID,                                                            
    "mc_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.routing_info.mc_filter:\r\n"
    "  If True filter multicast packets designated to the router.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_info_set vid_ndx 0 mc_filter 0 uc_filter 0\r\n"
    "  ingress_filter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(0), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_VLAN_INFO_SET_VLAN_INFO_SET_VLAN_INFO_ROUTING_INFO_UC_FILTER_ID,                                                            
    "uc_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.routing_info.uc_filter:\r\n"
    "  If True filter Unicast packets designated to the router.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_info_set vid_ndx 0 mc_filter 0 uc_filter 0\r\n"
    "  ingress_filter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(0), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_VLAN_INFO_SET_VLAN_INFO_SET_VLAN_INFO_INGRESS_FILTER_ID,                                                            
    "ingress_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.ingress_filter:\r\n"
    "  Enable ingress filtering.Confirms that the port is a member of the VID to\r\n"
    "  which the packet is classified.If not the packet is dropped.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_info_set vid_ndx 0 mc_filter 0 uc_filter 0\r\n"
    "  ingress_filter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(0), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_VLAN_INFO_GET_VLAN_INFO_GET_ID,                                                            
    "vlan_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the per VLAN filtering information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_info_get vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(1), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_VLAN_INFO_GET_VLAN_INFO_GET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  Vlan ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_info_get vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(1), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_SET_PORT_INFO_SET_ID,                                                            
    "port_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set per port filtering information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_SET_PORT_INFO_SET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  local port id. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_UNKNOWN_DA_UNKNOWN_BC_ID,                                                            
    "unknown_bc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.unknown_da.unknown_bc:\r\n"
    "  If TRUE drop packets with unknown Broadcast destination address. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_UNKNOWN_DA_UNKNOWN_MC_ID,                                                            
    "unknown_mc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.unknown_da.unknown_mc:\r\n"
    "  If TRUE drop packets with unknown Multicast destination address. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_UNKNOWN_DA_UNKNOWN_UC_ID,                                                            
    "unknown_uc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.unknown_da.unknown_uc:\r\n"
    "  If TRUE drop packets with unknown Unicast destination address. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_ROUTING_INFO_ENABLE_IPV6_ROUTING_ID,                                                            
    "enable_ipv6_routing",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.routing_info.enable_ipv6_routing:\r\n"
    "  If TRUE then IPv6 packets coming through this port may be forwarded to the\r\n"
    "  routing engine.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_ROUTING_INFO_ENABLE_IPV4_ROUTING_ID,                                                            
    "enable_ipv4_routing",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.routing_info.enable_ipv4_routing:\r\n"
    "  If TRUE then IPv4 packets coming through this port may be forwarded to the\r\n"
    "  routing engine.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_AUTHORIZATION_INFO_NOT_AUTHORIZED_ID,                                                            
    "not_authorized",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.authorization_info.not_authorized:\r\n"
    "  If TRUE, then port operates in non-authorized 802.1x mode and only 802.1x\r\n"
    "  traffic is allowed. (With Ethertype equal 0x888e according to IEEE Std 802.1X\r\n"
    "  - Port-based network access. May be changed by logical access.)If FALSE, then\r\n"
    "  the port is authorized and all traffic is allowed.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_EGRESS_FILTER_ID,                                                            
    "egress_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.egress_filter:\r\n"
    "  Enable egress filtering.Confirms that the port is a member of the VID to\r\n"
    "  which the packet is classified.If not the packet is dropped\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_FRWRD_ACTION_TYPES_ID,                                                            
    "action_types",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.frwrd_action_types:\r\n"
    "  Determines which packets to filter according to their forwarding action type:\r\n"
    "  control or 'intercept or snoop'.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_ACCEPTED_FRAMES_ID,                                                            
    "accepted_frames",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule) / sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.accepted_frames:\r\n"
    "  Determines which frames are accepted and which are filtered (tagged, untagged\r\n"
    "  and Priority-Tagged)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(2), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_GET_PORT_INFO_GET_ID,                                                            
    "port_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set per port filtering information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(3), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FILTER_PORT_INFO_GET_PORT_INFO_GET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  local port id. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter port_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(3), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_MEMBERSHIP_PORTS_SET_VLAN_MEMBERSHIP_PORTS_SET_ID,                                                            
    "vlan_membership_ports_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the VLAN membership; which local ports belong to the VLAN.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_membership_ports_set vid_ndx 0 member_ports 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(4), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_MEMBERSHIP_PORTS_SET_VLAN_MEMBERSHIP_PORTS_SET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  VLAN ID to set the membership for. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_membership_ports_set vid_ndx 0 member_ports 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(4), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_MEMBERSHIP_PORTS_SET_VLAN_MEMBERSHIP_PORTS_SET_MEMBER_PORTS_ID,                                                            
    "member_ports",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_members_vals[0],                                            
    (sizeof(soc_petra_pp_api_members_vals) / sizeof(soc_petra_pp_api_members_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  member_ports:\r\n"
    "  the VLAN membership information: local ports belong to the VLAN.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_membership_ports_set vid_ndx 0 member_ports 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(4), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_MEMBERSHIP_PORTS_GET_VLAN_MEMBERSHIP_PORTS_GET_ID,                                                            
    "vlan_membership_ports_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the VLAN membership; which local ports belong to the VLAN.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_membership_ports_get vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(5), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_MEMBERSHIP_PORTS_GET_VLAN_MEMBERSHIP_PORTS_GET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  VLAN ID to set the membership for. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_membership_ports_get vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(5), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_MEMBERSHIP_PORT_ADD_VLAN_MEMBERSHIP_PORT_ADD_ID,                                                            
    "vlan_membership_port_add",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Add a port as a member in a VLAN.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_membership_port_add vid_ndx 0 local_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(6), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_MEMBERSHIP_PORT_ADD_VLAN_MEMBERSHIP_PORT_ADD_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  VLAN ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_membership_port_add vid_ndx 0 local_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(6), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_MEMBERSHIP_PORT_ADD_VLAN_MEMBERSHIP_PORT_ADD_LOCAL_PORT_ID,                                                            
    "local_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port:\r\n"
    "  the local port to add to the VLAN. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_membership_port_add vid_ndx 0 local_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(6), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_MEMBERSHIP_PORT_REMOVE_VLAN_MEMBERSHIP_PORT_REMOVE_ID,                                                            
    "vlan_membership_port_remove",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Remove a port from a VLAN membership.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_membership_port_remove vid_ndx 0 local_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(7), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_MEMBERSHIP_PORT_REMOVE_VLAN_MEMBERSHIP_PORT_REMOVE_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  VLAN ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_membership_port_remove vid_ndx 0 local_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(7), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_MEMBERSHIP_PORT_REMOVE_VLAN_MEMBERSHIP_PORT_REMOVE_LOCAL_PORT_ID,                                                            
    "local_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port:\r\n"
    "  the local port to remove from the VLAN. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api filter vlan_membership_port_remove vid_ndx 0 local_port 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(7), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_FILTER_ID,                                                            
    "filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7), 0},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } filter*/
#ifdef UI_STP/* { stp*/
  {                                                                                        
    PARAM_PETRA_PP_STP_VID_TO_TOPOLOGY_ID_SET_VID_TO_TOPOLOGY_ID_SET_ID,                                                            
    "vid_to_topology_id_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set a mapping from VID to topology ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp vid_to_topology_id_set vid_ndx 0 topology_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(8), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_STP_VID_TO_TOPOLOGY_ID_SET_VID_TO_TOPOLOGY_ID_SET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  VLAN ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp vid_to_topology_id_set vid_ndx 0 topology_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(8), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_STP_VID_TO_TOPOLOGY_ID_SET_VID_TO_TOPOLOGY_ID_SET_TOPOLOGY_ID_ID,                                                            
    "topology_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  topology_id:\r\n"
    "  STP topology ID. Range 0-63.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp vid_to_topology_id_set vid_ndx 0 topology_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(8), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_STP_VID_TO_TOPOLOGY_ID_GET_VID_TO_TOPOLOGY_ID_GET_ID,                                                            
    "vid_to_topology_id_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set a mapping from VID to topology ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp vid_to_topology_id_get vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(9), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_STP_VID_TO_TOPOLOGY_ID_GET_VID_TO_TOPOLOGY_ID_GET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  VLAN ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp vid_to_topology_id_get vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(9), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_STP_PORT_STATE_SET_PORT_STATE_SET_ID,                                                            
    "port_state_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the ingress and egress STP state of a port for a topology ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp port_state_set local_port_ndx 0 topology_ndx 0 ingress_state\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(10), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_STP_PORT_STATE_SET_PORT_STATE_SET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  local port ID. Range: 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp port_state_set local_port_ndx 0 topology_ndx 0 ingress_state\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(10), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_STP_PORT_STATE_SET_PORT_STATE_SET_TOPOLOGY_NDX_ID,                                                            
    "topology_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  topology_ndx:\r\n"
    "  Topology ID. Range 0-64.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp port_state_set local_port_ndx 0 topology_ndx 0 ingress_state\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(10), 0},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_STP_PORT_STATE_SET_PORT_STATE_SET_INGRESS_STATE_ID,                                                            
    "ingress_state",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_STP_STATE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_STP_STATE_rule) / sizeof(SOC_PETRA_PP_STP_STATE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ingress_state:\r\n"
    "  Ingress STP state of the port (block/learn or forward)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp port_state_set local_port_ndx 0 topology_ndx 0 ingress_state\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(10), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_STP_PORT_STATE_SET_PORT_STATE_SET_EGRESS_STATE_ID,                                                            
    "egress_state",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_STP_STATE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_STP_STATE_rule) / sizeof(SOC_PETRA_PP_STP_STATE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  egress_state:\r\n"
    "  Egress STP state of the port (block or forward). Cannot be learn.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp port_state_set local_port_ndx 0 topology_ndx 0 ingress_state\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(10), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_STP_PORT_STATE_GET_PORT_STATE_GET_ID,                                                            
    "port_state_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the ingress and egress STP state of a port for a topology ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp port_state_get local_port_ndx 0 topology_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_STP_PORT_STATE_GET_PORT_STATE_GET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  local port ID. Range: 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp port_state_get local_port_ndx 0 topology_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_STP_PORT_STATE_GET_PORT_STATE_GET_TOPOLOGY_NDX_ID,                                                            
    "topology_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  topology_ndx:\r\n"
    "  Topology ID. Range 0-64.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api stp port_state_get local_port_ndx 0 topology_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(11), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_STP_ID,                                                            
    "stp",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, BIT(8)|BIT(9)|BIT(10)|BIT(11), 0},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } stp*/
#ifdef UI_POLICER/* { policer*/
  {                                                                                        
    PARAM_PETRA_PP_POLICER_PARAMS_SET_PARAMS_SET_ID,                                                            
    "params_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the policing attributes of a policer. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer params_set policer_ndx 0 ebs 0 eir 0 cbs 0 cir 0\r\n"
    "  color_aware 0 rate_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(12), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_PARAMS_SET_PARAMS_SET_POLICER_NDX_ID,                                                            
    "policer_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  policer_ndx:\r\n"
    "  Policer ID. Range 1-6. Zero is considered as no policing.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer params_set policer_ndx 0 ebs 0 eir 0 cbs 0 cir 0\r\n"
    "  color_aware 0 rate_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(12), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_PARAMS_SET_PARAMS_SET_POLICER_PARAMS_EBS_ID,                                                            
    "ebs",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  policer_params.ebs:\r\n"
    "  Excess Burst Size (EBS)Amount of credit that can be accumulated and enable a\r\n"
    "  burst of traffic in the line rate (which is usually\r\n"
    "  Bucket Rate) Packet mode: Number of packets in burst.Byte mode: Number of\r\n"
    "  bytes in burst.Range 0-131071 bytes.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer params_set policer_ndx 0 ebs 0 eir 0 cbs 0 cir 0\r\n"
    "  color_aware 0 rate_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(12), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_PARAMS_SET_PARAMS_SET_POLICER_PARAMS_EIR_ID,                                                            
    "eir",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  policer_params.eir:\r\n"
    "  Excess Information Rate (EIR) Packet mode: traffic rate in packet per second\r\n"
    "  (Kpps).Byte mode: traffic rate in bits per second (Kbps).Range 62K - 50G.\r\n"
    "  (Packets/bits per second)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer params_set policer_ndx 0 ebs 0 eir 0 cbs 0 cir 0\r\n"
    "  color_aware 0 rate_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(12), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_PARAMS_SET_PARAMS_SET_POLICER_PARAMS_CBS_ID,                                                            
    "cbs",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  policer_params.cbs:\r\n"
    "  Committed Burst Size (CBS).Amount of credit that can be accumulated and\r\n"
    "  enable a burst of traffic in the line rate (which is usually Bucket\r\n"
    "  Rate).Packet mode: Number of packets in burst.Byte mode: Number of bytes in\r\n"
    "  burst.Range 0-131071 bytes.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer params_set policer_ndx 0 ebs 0 eir 0 cbs 0 cir 0\r\n"
    "  color_aware 0 rate_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(12), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_PARAMS_SET_PARAMS_SET_POLICER_PARAMS_CIR_ID,                                                            
    "cir",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  policer_params.cir:\r\n"
    "  Committed Information Rate (CIR) Packet mode: traffic rate in packet per\r\n"
    "  second (Kpps).Byte mode: traffic rate in bits per second (Kbps).Range 62K -\r\n"
    "  50G. (Packets/bits per second)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer params_set policer_ndx 0 ebs 0 eir 0 cbs 0 cir 0\r\n"
    "  color_aware 0 rate_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(12), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_PARAMS_SET_PARAMS_SET_POLICER_PARAMS_COLOR_AWARE_ID,                                                            
    "color_aware",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  policer_params.color_aware:\r\n"
    "  Indicator.1 - policer is color aware. In the color-aware operation, the\r\n"
    "  incoming packet color (Green, Yellow, or Red) is considered to the policing\r\n"
    "  and marking algorithm; 0 - color-blind mode assumes all incoming packets are\r\n"
    "  Green colored.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer params_set policer_ndx 0 ebs 0 eir 0 cbs 0 cir 0\r\n"
    "  color_aware 0 rate_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(12), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_PARAMS_SET_PARAMS_SET_POLICER_PARAMS_RATE_MODE_ID,                                                            
    "rate_mode",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_POLICER_RATE_MODE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_POLICER_RATE_MODE_rule) / sizeof(SOC_PETRA_PP_POLICER_RATE_MODE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  policer_params.rate_mode:\r\n"
    "  Packets mode or bits mode.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer params_set policer_ndx 0 ebs 0 eir 0 cbs 0 cir 0\r\n"
    "  color_aware 0 rate_mode 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(12), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_PARAMS_GET_PARAMS_GET_ID,                                                            
    "params_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the policing attributes of a policer. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer params_get policer_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(13), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_PARAMS_GET_PARAMS_GET_POLICER_NDX_ID,                                                            
    "policer_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  policer_ndx:\r\n"
    "  Policer ID. Range 1-6. Zero is considered as no policing.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer params_get policer_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(13), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_MAP_PACKET_TYPE_TO_POLICER_SET_MAP_PACKET_TYPE_TO_POLICER_SET_ID,                                                            
    "map_packet_type_to_policer_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets mapping from packet type to policer ID, so that packets that are not\r\n"
    "  already classified to a policer are marked according to this default policer.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer map_packet_type_to_policer_set packet_type_ndx 0\r\n"
    "  policer_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(14), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_MAP_PACKET_TYPE_TO_POLICER_SET_MAP_PACKET_TYPE_TO_POLICER_SET_PACKET_TYPE_NDX_ID,                                                            
    "packet_type_ndx",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_POLICER_PACKET_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_POLICER_PACKET_TYPE_rule) / sizeof(SOC_PETRA_PP_POLICER_PACKET_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  packet_type_ndx:\r\n"
    "  Packet type to be associated with a policer. Types may be known UC/MC unknown\r\n"
    "  UC/MC...\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer map_packet_type_to_policer_set packet_type_ndx 0 inst 0 \r\n"
    "  policer_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(14), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_MAP_PACKET_TYPE_TO_POLICER_SET_MAP_PACKET_TYPE_TO_POLICER_SET_PACKET_TYPE_INST_NDX_ID,                                                            
    "inst",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  packet_type_ndx:\r\n"
    "  Packet type to be associated with a policer. Types may be known UC/MC unknown\r\n"
    "  UC/MC...\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer map_packet_type_to_policer_set packet_type_ndx 0 inst 0 \r\n"
    "  policer_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(14), 0},                                                                              
    LAST_ORDINAL,                                                                                 
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_MAP_PACKET_TYPE_TO_POLICER_SET_MAP_PACKET_TYPE_TO_POLICER_SET_POLICER_ID_ID,                                                            
    "policer_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  policer_id:\r\n"
    "  Policer ID to be attached with the packet type. Range 1-6. Zero indicates no\r\n"
    "  policing.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer map_packet_type_to_policer_set packet_type_ndx 0 inst 0 \r\n"
    "  policer_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(14), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_MAP_PACKET_TYPE_TO_POLICER_GET_MAP_PACKET_TYPE_TO_POLICER_GET_ID,                                                            
    "map_packet_type_to_policer_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets mapping from packet type to policer ID, so that packets that are not\r\n"
    "  already classified to a policer are marked according to this default policer.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer map_packet_type_to_policer_get packet_type_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(15), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_POLICER_MAP_PACKET_TYPE_TO_POLICER_GET_MAP_PACKET_TYPE_TO_POLICER_GET_PACKET_TYPE_NDX_ID,                                                            
    "packet_type_ndx",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_POLICER_PACKET_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_POLICER_PACKET_TYPE_rule) / sizeof(SOC_PETRA_PP_POLICER_PACKET_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  packet_type_ndx:\r\n"
    "  Packet type to be associated with a policer. Types may be known UC/MC unknown\r\n"
    "  UC/MC...\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer map_packet_type_to_policer_get packet_type_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(15), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_POLICER_MAP_PACKET_TYPE_TO_POLICER_GET_MAP_PACKET_TYPE_TO_POLICER_GET_PACKET_TYPE_INST_NDX_ID,                                                            
    "inst",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  packet_type_ndx:\r\n"
    "  Packet type to be associated with a policer. Types may be known UC/MC unknown\r\n"
    "  UC/MC...\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api policer map_packet_type_to_policer_get packet_type_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(15), 0},                                                                              
    LAST_ORDINAL,                                                                                 
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_POLICER_ID,                                                            
    "policer",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, BIT(12)|BIT(13)|BIT(14)|BIT(15), 0},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } policer*/
#ifdef UI_EDIT/* { edit*/
  {                                                                                        
    PARAM_PETRA_PP_EDIT_PORT_INFO_SET_PORT_INFO_SET_ID,                                                            
    "port_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Editing information for VBP port and a VLAN.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api edit port_info_set port_ndx 0 vid_ndx 0 tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(16), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_EDIT_PORT_INFO_SET_PORT_INFO_SET_PORT_NDX_ID,                                                            
    "port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  Local port ID. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api edit port_info_set port_ndx 0 vid_ndx 0 tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(16), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_EDIT_PORT_INFO_SET_PORT_INFO_SET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  the VLAN ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api edit port_info_set port_ndx 0 vid_ndx 0 tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(16), 0},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_EDIT_PORT_INFO_SET_PORT_INFO_SET_TAGGED_ID,                                                            
    "tagged",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  tagged:\r\n"
    "  If the port send the packets tagged.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api edit port_info_set port_ndx 0 vid_ndx 0 tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(16), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_EDIT_PORT_INFO_GET_PORT_INFO_GET_ID,                                                            
    "port_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets the Editing information for VBP port and a VLAN.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api edit port_info_get port_ndx 0 vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(17), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_EDIT_PORT_INFO_GET_PORT_INFO_GET_PORT_NDX_ID,                                                            
    "port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  Local port ID. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api edit port_info_get port_ndx 0 vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(17), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_EDIT_PORT_INFO_GET_PORT_INFO_GET_VID_NDX_ID,                                                            
    "vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vid_ndx:\r\n"
    "  the VLAN ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api edit port_info_get port_ndx 0 vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(17), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_EDIT_ID,                                                            
    "edit",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, BIT(16)|BIT(17), 0},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } edit*/
#ifdef UI_QINQ/* { qinq*/
  {                                                                                        
    PARAM_PETRA_PP_QINQ_C_VID_REGISTER_C_VID_REGISTER_ID,                                                            
    "c_vid_register",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  - Register the customer VLAN c_vid_ndx to the C-component\r\n"
    "  identified by local_port_ndx.\r\n"
    "  - Add the Provider Edge Port identified by (local_port_ndx,s_vid)\r\n"
    "  to the member set of the C-VLAN component identified by\r\n"
    "  local_port_ndx.\r\n"
    "  - Associate the Customer VLAN Identifier c_vid_ndx with Provider\r\n"
    "  Edge Port identified by (local_port_ndx,s_vid).\r\n"
    "  - Maps from a Customer VLAN Identifier c_vid_ndx to service\r\n"
    "  instance Represented by a service VLAN Identifier s_vid for the\r\n"
    "  C-component identified by local_port_ndx.\r\n"
    "  - Configure the PVID of the internal Customer Network Port on the\r\n"
    "  S-VLAN component to s_vid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq c_vid_register port_ndx 0 c_vid_ndx 0 s_vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(18), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_C_VID_REGISTER_C_VID_REGISTER_PORT_NDX_ID,                                                            
    "port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  local port, this port have to be CEP. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq c_vid_register port_ndx 0 c_vid_ndx 0 s_vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(18), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_C_VID_REGISTER_C_VID_REGISTER_C_VID_NDX_ID,                                                            
    "c_vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  c_vid_ndx:\r\n"
    "  The customer VID to register and associate with the PEP (port_ndx,s_vid).\r\n"
    "  Range 0-4095,SOC_PETRA_PP_QINQ_ALL_OTHERS_VLANS.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq c_vid_register port_ndx 0 c_vid_ndx 0 s_vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(18), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_C_VID_REGISTER_C_VID_REGISTER_S_VID_ID,                                                            
    "s_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  s_vid:\r\n"
    "  the service-VID that the c-vid mapped to in the C-component identified by\r\n"
    "  (local_port_ndx). Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq c_vid_register port_ndx 0 c_vid_ndx 0 s_vid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(18), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_C_VID_UNREGISTER_C_VID_UNREGISTER_ID,                                                            
    "c_vid_unregister",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  - Unregister the customer VLAN c_vid_ndx from the C-component\r\n"
    "  identified by local_port_ndx.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq c_vid_unregister port_ndx 0 c_vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(19), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_C_VID_UNREGISTER_C_VID_UNREGISTER_PORT_NDX_ID,                                                            
    "port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_ndx:\r\n"
    "  local port, this port have to be CEP. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq c_vid_unregister port_ndx 0 c_vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(19), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_C_VID_UNREGISTER_C_VID_UNREGISTER_C_VID_NDX_ID,                                                            
    "c_vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  c_vid_ndx:\r\n"
    "  The customer VID that to be detached from the C-component\r\n"
    "  local_port_ndx and the proper PEP (local_port_ndx,s_vid). Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq c_vid_unregister port_ndx 0 c_vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(19), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_PORT_REGISTERATION_STATUS_GET_PEP_PORT_REGISTERATION_STATUS_GET_ID,                                                            
    "pep_port_registeration_status_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  - Gets the C-VIDs that are associated with the PEP\r\n"
    "  (local_port_ndx,s_vid).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_port_registeration_status_get pep_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(20), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_PORT_REGISTERATION_STATUS_GET_PEP_PORT_REGISTERATION_STATUS_GET_PEP_ID_NDX_ID,                                                            
    "pep_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pep_id_ndx:\r\n"
    "  Pep port id.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_port_registeration_status_get pep_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(20), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_C_VID_REGISTERATION_STATUS_GET_C_VID_REGISTERATION_STATUS_GET_ID,                                                            
    "c_vid_registeration_status_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  - Gets the service identifier (s_vid) that the Customer\r\n"
    "  VLAN(c_vid) mapped to. If c_vid_ndx is not registered in this C-\r\n"
    "  component then not_registered is TRUE and s_vid unaffected. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq c_vid_registeration_status_get local_port_ndx 0 c_vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(21), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_C_VID_REGISTERATION_STATUS_GET_C_VID_REGISTERATION_STATUS_GET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  local port, this port have to be CEP. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq c_vid_registeration_status_get local_port_ndx 0 c_vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(21), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_C_VID_REGISTERATION_STATUS_GET_C_VID_REGISTERATION_STATUS_GET_C_VID_NDX_ID,                                                            
    "c_vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  c_vid_ndx:\r\n"
    "  The Customer VLAN ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq c_vid_registeration_status_get local_port_ndx 0 c_vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(21), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_INFO_SET_PEP_INFO_SET_ID,                                                            
    "pep_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets general information (PVID, default user priority) for the PEP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_info_set pep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0 c_user_priority 0 pvid 0 s_dei 0 s_priority_tagged 0\r\n"
    "  c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(22), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_INFO_SET_PEP_INFO_SET_PEP_ID_NDX_ID,                                                            
    "pep_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pep_id_ndx:\r\n"
    "  The ID of the PEP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_info_set pep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0 c_user_priority 0 pvid 0 s_dei 0 s_priority_tagged 0\r\n"
    "  c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(22), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_INFO_SET_PEP_INFO_SET_PEP_INFO_FILTER_ACCEPTED_FRAMES_ID,                                                            
    "accepted_frames",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule) / sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pep_info.filter.accepted_frames:\r\n"
    "  Determines which frames are accepted and which are filtered (tagged, untagged\r\n"
    "  and Priority-Tagged)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_info_set pep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0 c_user_priority 0 pvid 0 s_dei 0 s_priority_tagged 0\r\n"
    "  c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(22), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_INFO_SET_PEP_INFO_SET_PEP_INFO_FILTER_EGRESS_FILTER_ID,                                                            
    "egress_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pep_info.filter.egress_filter:\r\n"
    "  Enable egress filtering.Confirms that the port is a member of the VID to\r\n"
    "  which the packet is classified.If not the packet is dropped\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_info_set pep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0 c_user_priority 0 pvid 0 s_dei 0 s_priority_tagged 0\r\n"
    "  c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(22), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_INFO_SET_PEP_INFO_SET_PEP_INFO_FILTER_INGRESS_FILTER_ID,                                                            
    "ingress_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pep_info.filter.ingress_filter:\r\n"
    "  Enable ingress filtering.Confirms that the port is a member of the VID to\r\n"
    "  which the packet is classified.If not the packet is dropped.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_info_set pep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0 c_user_priority 0 pvid 0 s_dei 0 s_priority_tagged 0\r\n"
    "  c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(22), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_INFO_SET_PEP_INFO_SET_PEP_INFO_EDIT_C_USER_PRIORITY_ID,                                                            
    "c_user_priority",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pep_info.edit.c_user_priority:\r\n"
    "  The User Priority of C-Tag to generate when the incoming packet is untagged\r\n"
    "  Toward the C-Component. Range 0 -4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_info_set pep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0 c_user_priority 0 pvid 0 s_dei 0 s_priority_tagged 0\r\n"
    "  c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(22), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_INFO_SET_PEP_INFO_SET_PEP_INFO_EDIT_PVID_ID,                                                            
    "pvid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pep_info.edit.pvid:\r\n"
    "  The Vlan ID of C-Tag to generate when the incoming packet is untagged. Toward\r\n"
    "  the C-Component.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_info_set pep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0 c_user_priority 0 pvid 0 s_dei 0 s_priority_tagged 0\r\n"
    "  c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(22), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_INFO_SET_PEP_INFO_SET_PEP_INFO_EDIT_S_DEI_ID,                                                            
    "s_dei",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pep_info.edit.s_dei:\r\n"
    "  If TRUE then the PEP sets the DEI bit when generating S-tag for the SVLAN\r\n"
    "  component.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_info_set pep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0 c_user_priority 0 pvid 0 s_dei 0 s_priority_tagged 0\r\n"
    "  c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(22), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_INFO_SET_PEP_INFO_SET_PEP_INFO_EDIT_S_PRIORITY_TAGGED_ID,                                                            
    "s_priority_tagged",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pep_info.edit.s_priority_tagged:\r\n"
    "  If TRUE then the PEP sets the DEI bit when generating S-tag for the SVLAN\r\n"
    "  component. Relevant only when 's_priority_tagged' is TRUE.\r\n"
    "  Toward the S-Component. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_info_set pep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0 c_user_priority 0 pvid 0 s_dei 0 s_priority_tagged 0\r\n"
    "  c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(22), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_INFO_SET_PEP_INFO_SET_PEP_INFO_EDIT_C_TAGGED_ID,                                                            
    "c_tagged",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pep_info.edit.c_tagged:\r\n"
    "  If TRUE then the PEP port sends packets with C-tag toward the S-component. If\r\n"
    "  incoming packet is untagged then it assigned VID according to VLAN\r\n"
    "  classification configuration, and UP and CFI according to COS configuration.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_info_set pep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0 c_user_priority 0 pvid 0 s_dei 0 s_priority_tagged 0\r\n"
    "  c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(22), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_INFO_GET_PEP_INFO_GET_ID,                                                            
    "pep_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets general information (PVID, default user priority) for the PEP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_info_get pep_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(23), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_PEP_INFO_GET_PEP_INFO_GET_PEP_ID_NDX_ID,                                                            
    "pep_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  pep_id_ndx:\r\n"
    "  The ID of the PEP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq pep_info_get pep_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(23), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_INFO_SET_CEP_INFO_SET_ID,                                                            
    "cep_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets general information (Filtering) for the CEP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_info_set cep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(24), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_INFO_SET_CEP_INFO_SET_CEP_ID_NDX_ID,                                                            
    "cep_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cep_id_ndx:\r\n"
    "  The ID of the CEP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_info_set cep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(24), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_INFO_SET_CEP_INFO_SET_CEP_INFO_FILTER_ACCEPTED_FRAMES_ID,                                                            
    "accepted_frames",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule) / sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cep_info.filter.accepted_frames:\r\n"
    "  Determines which frames are accepted and which are filtered (tagged, untagged\r\n"
    "  and Priority-Tagged)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_info_set cep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(24), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_INFO_SET_CEP_INFO_SET_CEP_INFO_FILTER_EGRESS_FILTER_ID,                                                            
    "egress_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cep_info.filter.egress_filter:\r\n"
    "  Enable egress filtering.Confirms that the port is a member of the VID to\r\n"
    "  which the packet is classified.If not the packet is dropped\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_info_set cep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(24), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_INFO_SET_CEP_INFO_SET_CEP_INFO_FILTER_INGRESS_FILTER_ID,                                                            
    "ingress_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cep_info.filter.ingress_filter:\r\n"
    "  Enable ingress filtering.Confirms that the port is a member of the VID to\r\n"
    "  which the packet is classified.If not the packet is dropped.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_info_set cep_id_ndx 0 accepted_frames 0 egress_filter 0\r\n"
    "  ingress_filter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(24), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_INFO_GET_CEP_INFO_GET_ID,                                                            
    "cep_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets general information (Filtering) for the CEP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_info_get cep_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(25), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_INFO_GET_CEP_INFO_GET_CEP_ID_NDX_ID,                                                            
    "cep_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cep_id_ndx:\r\n"
    "  The ID of the CEP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_info_get cep_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(25), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_VID_INFO_SET_CEP_VID_INFO_SET_ID,                                                            
    "cep_vid_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets general information (Editing) for the CEP and C-VLAN ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_vid_info_set cep_id_ndx 0 c_vid_ndx 0 c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(26), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_VID_INFO_SET_CEP_VID_INFO_SET_CEP_ID_NDX_ID,                                                            
    "cep_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cep_id_ndx:\r\n"
    "  The ID of the CEP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_vid_info_set cep_id_ndx 0 c_vid_ndx 0 c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(26), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_VID_INFO_SET_CEP_VID_INFO_SET_C_VID_NDX_ID,                                                            
    "c_vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  c_vid_ndx:\r\n"
    "  The C-VLAN ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_vid_info_set cep_id_ndx 0 c_vid_ndx 0 c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(26), 0},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_VID_INFO_SET_CEP_VID_INFO_SET_CEP_VID_INFO_C_TAGGED_ID,                                                            
    "c_tagged",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cep_vid_info.c_tagged:\r\n"
    "  If TRUE then the CEP port sends packets with C-tag toward the Customer.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_vid_info_set cep_id_ndx 0 c_vid_ndx 0 c_tagged 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(26), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_VID_INFO_GET_CEP_VID_INFO_GET_ID,                                                            
    "cep_vid_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets general information (Editing) for the CEP and C-VLAN ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_vid_info_get cep_id_ndx 0 c_vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(27), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_VID_INFO_GET_CEP_VID_INFO_GET_CEP_ID_NDX_ID,                                                            
    "cep_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cep_id_ndx:\r\n"
    "  The ID of the CEP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_vid_info_get cep_id_ndx 0 c_vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(27), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CEP_VID_INFO_GET_CEP_VID_INFO_GET_C_VID_NDX_ID,                                                            
    "c_vid_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  c_vid_ndx:\r\n"
    "  The C-VLAN ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cep_vid_info_get cep_id_ndx 0 c_vid_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(27), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_SET_CNP_INFO_SET_ID,                                                            
    "cnp_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets general information (Filtering) for the CNP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_set cnp_id_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(28), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_SET_CNP_INFO_SET_CNP_ID_NDX_ID,                                                            
    "cnp_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cnp_id_ndx:\r\n"
    "  The ID of the CNP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_set cnp_id_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(28), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_SET_CNP_INFO_SET_CNP_INFO_FILTER_UNKNOWN_DA_UNKNOWN_BC_ID,                                                            
    "unknown_bc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cnp_info.filter.unknown_da.unknown_bc:\r\n"
    "  If TRUE drop packets with unknown Broadcast destination address. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_set cnp_id_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(28), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_SET_CNP_INFO_SET_CNP_INFO_FILTER_UNKNOWN_DA_UNKNOWN_MC_ID,                                                            
    "unknown_mc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cnp_info.filter.unknown_da.unknown_mc:\r\n"
    "  If TRUE drop packets with unknown Multicast destination address. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_set cnp_id_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(28), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_SET_CNP_INFO_SET_CNP_INFO_FILTER_UNKNOWN_DA_UNKNOWN_UC_ID,                                                            
    "unknown_uc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cnp_info.filter.unknown_da.unknown_uc:\r\n"
    "  If TRUE drop packets with unknown Unicast destination address. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_set cnp_id_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(28), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_SET_CNP_INFO_SET_CNP_INFO_FILTER_ROUTING_INFO_ENABLE_IPV6_ROUTING_ID,                                                            
    "enable_ipv6_routing",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cnp_info.filter.routing_info.enable_ipv6_routing:\r\n"
    "  If TRUE then IPv6 packets coming through this port may be forwarded to the\r\n"
    "  routing engine.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_set cnp_id_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(28), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_SET_CNP_INFO_SET_CNP_INFO_FILTER_ROUTING_INFO_ENABLE_IPV4_ROUTING_ID,                                                            
    "enable_ipv4_routing",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cnp_info.filter.routing_info.enable_ipv4_routing:\r\n"
    "  If TRUE then IPv4 packets coming through this port may be forwarded to the\r\n"
    "  routing engine.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_set cnp_id_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(28), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_SET_CNP_INFO_SET_CNP_INFO_FILTER_AUTHORIZATION_INFO_NOT_AUTHORIZED_ID,                                                            
    "not_authorized",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cnp_info.filter.authorization_info.not_authorized:\r\n"
    "  If TRUE, then port operates in non-authorized 802.1x mode and only 802.1x\r\n"
    "  traffic is allowed. (With Ethertype equal 0x888e according to IEEE Std 802.1X\r\n"
    "  - Port-based network access. May be changed by logical access.)If FALSE, then\r\n"
    "  the port is authorized and all traffic is allowed.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_set cnp_id_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(28), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_SET_CNP_INFO_SET_CNP_INFO_FILTER_EGRESS_FILTER_ID,                                                            
    "egress_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cnp_info.filter.egress_filter:\r\n"
    "  Enable egress filtering.Confirms that the port is a member of the VID to\r\n"
    "  which the packet is classified.If not the packet is dropped\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_set cnp_id_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(28), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_SET_CNP_INFO_SET_CNP_INFO_FILTER_FRWRD_ACTION_TYPES_ID,                                                            
    "action_types",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cnp_info.filter.frwrd_action_types:\r\n"
    "  Determines which packets to filter according to their forwarding action type:\r\n"
    "  control or 'intercept or snoop'.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_set cnp_id_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(28), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_SET_CNP_INFO_SET_CNP_INFO_FILTER_ACCEPTED_FRAMES_ID,                                                            
    "accepted_frames",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule) / sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cnp_info.filter.accepted_frames:\r\n"
    "  Determines which frames are accepted and which are filtered (tagged, untagged\r\n"
    "  and Priority-Tagged)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_set cnp_id_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(28), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_GET_CNP_INFO_GET_ID,                                                            
    "cnp_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets general information (Filtering) for the CNP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_get cnp_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(29), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_QINQ_CNP_INFO_GET_CNP_INFO_GET_CNP_ID_NDX_ID,                                                            
    "cnp_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cnp_id_ndx:\r\n"
    "  The ID of the CNP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api qinq cnp_info_get cnp_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(29), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_QINQ_ID,                                                            
    "qinq",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29), 0},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } q_in_q*/
#ifdef UI_PORT/* { port*/
  {                                                                                        
    PARAM_PETRA_PP_PORT_INFO_SET_INFO_SET_ID,                                                            
    "info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the physical port parameters.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port info_set local_port_ndx 0 port_sa_mac 0 mtu 0\r\n"
    "  mtu_violation_action 0 port_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(30), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_INFO_SET_INFO_SET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  The local port ID. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port info_set local_port_ndx 0 port_sa_mac 0 mtu 0\r\n"
    "  mtu_violation_action 0 port_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(30), 0},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_INFO_SET_INFO_SET_PORT_INFO_PORT_SA_MAC_ID,                                                            
    "port_sa_mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.port_sa_mac:\r\n"
    "  The MAC address to be attached to the routed packet as SA.REMARK:\r\n"
    "  - port mac address can be differ only in the 8 lsb.\r\n"
    "  - when setting port zero no check is made\r\n"
    "  - when setting port differ than zero then the 40 msb of the\r\n"
    "  given MAC has to be equal to 40 msb of port 0 MAC Address. - Modify the MAC\r\n"
    "  address for port 0 will affect all the other ports.\r\n"
    "  in the 40 msb.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port info_set local_port_ndx 0 port_sa_mac 0 mtu 0\r\n"
    "  mtu_violation_action 0 port_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(30), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_INFO_SET_INFO_SET_PORT_INFO_MTU_ID,                                                            
    "mtu",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.mtu:\r\n"
    "  Maximum Transmission Unit. Maximum packet size in bytes. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port info_set local_port_ndx 0 port_sa_mac 0 mtu 0\r\n"
    "  mtu_violation_action 0 port_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(30), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_INFO_SET_INFO_SET_PORT_INFO_ENABLE_TUNNEL_ID,                                                            
    "enable_tunnel_lb",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.enable_tunnel_lb:\r\n"
    "  enable LAG load balancing according to tunnel, key is . \r\n"
    " {DstIp, Protocol} instead of {(DstIp XOR SrcIp), Protocol} \r\n"
    " when the protocol is found",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port info_set local_port_ndx 0 port_sa_mac 0 mtu 0\r\n"
    "  mtu_violation_action 0 port_type 0 enable_tunnel_lb 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(30), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_INFO_SET_INFO_SET_PORT_INFO_MTU_VIOLATION_ACTION_ID,                                                            
    "mtu_violation_action",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_MTU_VIOLATION_ACTION_rule[0],                                            
    (sizeof(SOC_PETRA_PP_MTU_VIOLATION_ACTION_rule) / sizeof(SOC_PETRA_PP_MTU_VIOLATION_ACTION_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.mtu_violation_action:\r\n"
    "  What is the action to do for packets violate the MTU: Forward, Drop, or Trap\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port info_set local_port_ndx 0 port_sa_mac 0 mtu 0\r\n"
    "  mtu_violation_action 0 port_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(30), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_INFO_SET_INFO_SET_PORT_INFO_PORT_TYPE_ID,                                                            
    "port_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.port_type:\r\n"
    "  L2 Port type VBP, and for 802.1ad may be CEP, CNP, PNP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port info_set local_port_ndx 0 port_sa_mac 0 mtu 0\r\n"
    "  mtu_violation_action 0 port_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(30), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_INFO_GET_INFO_GET_ID,                                                            
    "info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the physical port parameters.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(31), 0},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_INFO_GET_INFO_GET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  The local port ID. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, BIT(31), 0},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_L2_TYPE_SET_L2_TYPE_SET_ID,                                                            
    "l2_type_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the l2 type of the port: VBP, and for 802.1ad may be CEP, CNP, PNP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port l2_type_set local_port_ndx 0 port_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(0)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_L2_TYPE_SET_L2_TYPE_SET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  The local port ID. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port l2_type_set local_port_ndx 0 port_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(0)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_L2_TYPE_SET_L2_TYPE_SET_PORT_TYPE_ID,                                                            
    "port_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_type:\r\n"
    "  The port type.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port l2_type_set local_port_ndx 0 port_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_L2_TYPE_GET_L2_TYPE_GET_ID,                                                            
    "l2_type_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the l2 type of the port: VBP, and for 802.1ad may be CEP, CNP, PNP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port l2_type_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(1)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_L2_TYPE_GET_L2_TYPE_GET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  The local port ID. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port l2_type_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_LB_TUNNEL_PRTCL_INFO_SET_PORT_LB_TUNNEL_PRTCL_INFO_SET_ID,                                                            
    "lb_tunnel_prtcl_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set a protocol for which LAG load balancing hash key is.\r\n"
    "{DstIp, Protocol} instead of {(DstIp XOR SrcIp), Protocol} \r\n",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port lb_tunnel_prtcl_set prtcl_ndx 0 ipv4_prtcl_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(7)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_LB_TUNNEL_PRTCL_INFO_SET_PORT_LB_TUNNEL_PRTCL_INFO_SET_PRTCL_NDX_ID,                                                            
    "prtcl_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_ndx:\r\n"
    "  Local physical port ID. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port lb_tunnel_prtcl_set prtcl_ndx 0 ipv4_prtcl_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(7)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_LB_TUNNEL_PRTCL_INFO_SET_PRTCL_IPV4_PRTCL_TYPE_ID,                                                            
    "ipv4_prtcl_type",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  lb_tunnel_prtcl.ipv4_prtcl_type:\r\n"
    "  Enable VID resolution according to protocol parsing\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port lb_tunnel_prtcl_set prtcl_ndx 0 ipv4_prtcl_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  
    {                                                                                        
    PARAM_PETRA_PP_PORT_LB_TUNNEL_PRTCL_INFO_GET_PORT_LB_TUNNEL_PRTCL_INFO_GET_ID,                                                            
    "lb_tunnel_prtcl_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
        "  Set a protocol for which LAG load balancing hash key is.\r\n"
    "{DstIp, Protocol} instead of {(DstIp XOR SrcIp), Protocol} \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port lb_tunnel_prtcl_get prtcl_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(8)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_LB_TUNNEL_PRTCL_INFO_GET_PORT_LB_TUNNEL_PRTCL_INFO_GET_PRTCL_NDX_ID,                                                            
    "prtcl_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prtcl_ndx:\r\n"
    "  Local physical port ID. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port lb_tunnel_prtcl_get prtcl_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_ID,                                                            
    "all_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the all per port information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  The local port ID. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_FILTERING_UNKNOWN_DA_UNKNOWN_BC_ID,                                                            
    "unknown_bc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.filtering.unknown_da.unknown_bc:\r\n"
    "  If TRUE drop packets with unknown Broadcast destination address. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_FILTERING_UNKNOWN_DA_UNKNOWN_MC_ID,                                                            
    "unknown_mc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.filtering.unknown_da.unknown_mc:\r\n"
    "  If TRUE drop packets with unknown Multicast destination address. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_FILTERING_UNKNOWN_DA_UNKNOWN_UC_ID,                                                            
    "unknown_uc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.filtering.unknown_da.unknown_uc:\r\n"
    "  If TRUE drop packets with unknown Unicast destination address. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_FILTERING_ROUTING_INFO_ENABLE_IPV6_ROUTING_ID,                                                            
    "enable_ipv6_routing",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.filtering.routing_info.enable_ipv6_routing:\r\n"
    "  If TRUE then IPv6 packets coming through this port may be forwarded to the\r\n"
    "  routing engine.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_FILTERING_ROUTING_INFO_ENABLE_IPV4_ROUTING_ID,                                                            
    "enable_ipv4_routing",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.filtering.routing_info.enable_ipv4_routing:\r\n"
    "  If TRUE then IPv4 packets coming through this port may be forwarded to the\r\n"
    "  routing engine.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_FILTERING_AUTHORIZATION_INFO_NOT_AUTHORIZED_ID,                                                            
    "not_authorized",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.filtering.authorization_info.not_authorized:\r\n"
    "  If TRUE, then port operates in non-authorized 802.1x mode and only 802.1x\r\n"
    "  traffic is allowed. (With Ethertype equal 0x888e according to IEEE Std 802.1X\r\n"
    "  - Port-based network access. May be changed by logical access.)If FALSE, then\r\n"
    "  the port is authorized and all traffic is allowed.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_FILTERING_EGRESS_FILTER_ID,                                                            
    "egress_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.filtering.egress_filter:\r\n"
    "  Enable egress filtering.Confirms that the port is a member of the VID to\r\n"
    "  which the packet is classified.If not the packet is dropped\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_FILTERING_FRWRD_ACTION_TYPES_ID,                                                            
    "action_types",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRWRD_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.filtering.frwrd_action_types:\r\n"
    "  Determines which packets to filter according to their forwarding action type:\r\n"
    "  control or 'intercept or snoop'.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_FILTERING_ACCEPTED_FRAMES_ID,                                                            
    "accepted_frames",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule) / sizeof(SOC_PETRA_PP_FILTER_ACCEPT_FRAME_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.filtering.accepted_frames:\r\n"
    "  Determines which frames are accepted and which are filtered (tagged, untagged\r\n"
    "  and Priority-Tagged)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_FORWARDING_SA_FWD_ACTION_PTR_ID,                                                            
    "sa_fwd_action_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.forwarding.sa_fwd_action_ptr:\r\n"
    "  Index in the global info, that set by\r\n"
    "  soc_petra_pp_bridging_frwrd_glbl_info_set(). Forwarding action when the SA of a\r\n"
    "  packet not found upon lookup in the MAC table. Range 0-7\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_FORWARDING_DA_FWD_ACTION_PTR_ID,                                                            
    "da_fwd_action_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.forwarding.da_fwd_action_ptr:\r\n"
    "  Index in the global info, that set by\r\n"
    "  soc_petra_pp_bridging_frwrd_glbl_info_set(). Forwarding action when the DA of a\r\n"
    "  packet not found upon lookup in the MAC table. Range 0-7\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_COS_USE_DEI_ID,                                                            
    "use_DEI",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.cos.use_DEI:\r\n"
    "  If set, the port uses the DEI. Valid only for CNP and PNP ports\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_COS_TABLES_INDEXES_UP_AND_DE_TO_PCP_INDEX_ID,                                                            
    "UP_and_DE_to_PCP_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.cos.tables_indexes.UP_and_DE_to_PCP_index:\r\n"
    "  The index of the table that the port uses for mapping incoming PCP to UP and\r\n"
    "  DE.Should be called after 'soc_petra_pp_cos_glb_info_set'Range 0-3\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_COS_TABLES_INDEXES_PCP_TO_UP_AND_DE_INDEX_ID,                                                            
    "PCP_to_UP_and_DE_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.cos.tables_indexes.PCP_to_UP_and_DE_index:\r\n"
    "  The index of the table that the port uses for mapping incoming PCP to UP and\r\n"
    "  DE.Should be used after\r\n"
    "  'soc_petra_pp_cos_glb_info_set'Range 0-3\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_COS_TABLES_INDEXES_UP_TO_DP_INDEX_ID,                                                            
    "UP_to_DP_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.cos.tables_indexes.UP_to_DP_index:\r\n"
    "  The index of the table that the port uses for mapping incoming UP to\r\n"
    "  DP.Should be called after 'soc_petra_pp_cos_glb_info_set'Range 0-1\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_COS_TABLES_INDEXES_UP_TO_TC_INDEX_ID,                                                            
    "UP_to_TC_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.cos.tables_indexes.UP_to_TC_index:\r\n"
    "  The index of the table that the port uses for mapping incoming UP to\r\n"
    "  TC.Should be called after 'soc_petra_pp_cos_glb_info_set'Range 0-3\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_COS_TABLES_INDEXES_TOS_TO_TC_INDEX_TC_INDEX_ID,                                                            
    "TC_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.cos.tables_indexes.TOS_to_TC_index.TC_index:\r\n"
    "  The index of the table that the port uses for mapping the TOS field in the\r\n"
    "  incoming packet to TC.Should be called after\r\n"
    "  'soc_petra_pp_cos_ip_Hdr_to_tc_info_set' Range 0-1\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_COS_TABLES_INDEXES_TOS_TO_TC_INDEX_IS_VALID_FOR_TC_ID,                                                            
    "is_valid_for_TC",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.cos.tables_indexes.TOS_to_TC_index.is_valid_for_TC:\r\n"
    "  If set then the layer 4 traffic class resolution is evaluated.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 l2_port_type\r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_COS_IS_L4_VALID_FOR_TC_ID,                                                            
    "is_l4_valid_for_TC",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.cos.is_l4_valid_for_TC:\r\n"
    "  If set then the layer 4 traffic class resolution is evaluated.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_COS_UP_USE_IS_VALID_FOR_OUT_UP_ID,                                                            
    "is_valid_for_out_up",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.cos.UP_use.is_valid_for_out_up:\r\n"
    "  When valid, the incoming UP also affect the calculation of the UP to be sent\r\n"
    "  when leaving the bridge (router)Should only be valid when\r\n"
    "  'Is_in_up_valid_for_tc' is valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_COS_UP_USE_IS_VALID_FOR_TC_ID,                                                            
    "is_valid_for_TC",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.cos.UP_use.is_valid_for_TC:\r\n"
    "  Should the UP that arrived with the packet, take place in the calculation of\r\n"
    "  TC\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_VID_CLASSIFICATION_ENABLE_PROTOCOL_ID,                                                            
    "enable_protocol",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.vid_classification.enable_protocol:\r\n"
    "  Enable VID resolution according to protocol parsing\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_VID_CLASSIFICATION_ENABLE_SUBNET_IP_ID,                                                            
    "enable_subnet_ip",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.vid_classification.enable_subnet_ip:\r\n"
    "  Enable VID resolution according to subnet IP parsing\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_VID_CLASSIFICATION_PVID_ID,                                                            
    "pvid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.vid_classification.pvid:\r\n"
    "  Port default VLAN IDRange 0-4095\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_TPID_SVLAN_TPID_VALID_ID,                                                            
    "svlan_tpid_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.tpid.svlan_tpid_valid:\r\n"
    "  If TRUE, then this port may have a S-VLAN tag.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_TPID_CVLAN_TPID_VALID_ID,                                                            
    "cvlan_tpid_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.tpid.cvlan_tpid_valid:\r\n"
    "  If TRUE, then this port may have a C-VLAN tag.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_GENERAL_PORT_SA_MAC_ID,                                                            
    "port_sa_mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.general.port_sa_mac:\r\n"
    "  The MAC address to be attached to the routed packet as SA.REMARK:\r\n"
    "  - port mac address can be differ only in the 8 lsb.\r\n"
    "  - when setting port zero no check is made\r\n"
    "  - when setting port differ than zero then the 40 msb of the\r\n"
    "  given MAC has to be equal to 40 msb of port 0 MAC Address. - Modify the MAC\r\n"
    "  address for port 0 will affect all the other ports.\r\n"
    "  in the 40 msb.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_GENERAL_MTU_ID,                                                            
    "mtu",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.general.mtu:\r\n"
    "  Maximum Transmission Unit. Maximum packet size in bytes. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_GENERAL_ENABLE_TUNNEL_ID,                                                            
    "enable_tunnel_lb",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.enable_tunnel_lb:\r\n"
    "  enable LAG load balancing according to tunnel, key is . \r\n"
    " {DstIp, Protocol} instead of {(DstIp XOR SrcIp), Protocol} \r\n"
    " when the protocol is found",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port info_set local_port_ndx 0 port_sa_mac 0 mtu 0\r\n"
    "  mtu_violation_action 0 port_type 0 enable_tunnel_lb 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                            
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_GENERAL_MTU_VIOLATION_ACTION_ID,                                                            
    "mtu_violation_action",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_MTU_VIOLATION_ACTION_rule[0],                                            
    (sizeof(SOC_PETRA_PP_MTU_VIOLATION_ACTION_rule) / sizeof(SOC_PETRA_PP_MTU_VIOLATION_ACTION_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.general.mtu_violation_action:\r\n"
    "  What is the action to do for packets violate the MTU: Forward, Drop, or Trap\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_GENERAL_PORT_TYPE_ID,                                                            
    "port_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.general.port_type:\r\n"
    "  L2 Port type VBP, and for 802.1ad may be CEP, CNP, PNP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_SET_ALL_INFO_SET_PORT_INFO_VALID_MASK_ID,                                                            
    "valid_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.valid_mask:\r\n"
    "  Each field XXX in the structure has a corresponding bit\r\n"
    "  SOC_PETRA_PP_PORT_INFO_MASK_XXXvalid_mask is a bit mask of all the valid fields\r\n"
    "  in the request.For a 'set' operation these are the fields that need to be\r\n"
    "  modified.For a 'get' operation these are the fields that need to be read.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_set local_port_ndx 0 unknown_bc 0 unknown_mc 0\r\n"
    "  unknown_uc 0 enable_ipv6_routing 0 enable_ipv4_routing 0 not_authorized 0\r\n"
    "  egress_filter 0 frwrd_action_types 0 accepted_frames 0 sa_fwd_action_ptr 0\r\n"
    "  da_fwd_action_ptr 0 use_DEI 0 UP_and_DE_to_PCP_index 0 PCP_to_UP_and_DE_index\r\n"
    "  0 UP_to_DP_index 0 UP_to_TC_index 0 TC_index 0 is_valid_for_TC 0 \r\n"
    "  0 is_l4_valid_for_TC 0 is_valid_for_out_up 0 is_valid_for_TC 0\r\n"
    "  enable_protocol 0 enable_subnet_ip 0 pvid 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0 port_sa_mac 0 mtu 0 mtu_violation_action 0 port_type 0\r\n"
    "  valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(2)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_GET_ALL_INFO_GET_ID,                                                            
    "all_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the all per port information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(3)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_PORT_ALL_INFO_GET_ALL_INFO_GET_LOCAL_PORT_NDX_ID,                                                            
    "local_port_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_port_ndx:\r\n"
    "  The local port ID. Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api port all_info_get local_port_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(3)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_PORT_ID,                                                            
    "port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, BIT(30)|BIT(31), BIT(0)|BIT(1)|BIT(2)|BIT(3),0,0,BIT(7)|BIT(8)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } port*/
#ifdef UI_VLAN/* { vlan*/
  {                                                                                        
    PARAM_PETRA_PP_VLAN_INFO_SET_INFO_SET_ID,                                                            
    "info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the VLAN basic information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan info_set vlan_ndx 0 valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(4)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_INFO_SET_INFO_SET_VLAN_NDX_ID,                                                            
    "vlan_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_ndx:\r\n"
    "  The vlan ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan info_set vlan_ndx 0 valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(4)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_INFO_SET_INFO_SET_VLAN_INFO_VALID_ID,                                                            
    "valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.valid:\r\n"
    "  If TRUE then VLAN is valid. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan info_set vlan_ndx 0 valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_INFO_SET_INFO_SET_VLAN_INFO_LAG_HASH_L3_ID,                                                            
    "enable_l3_lag_hash",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.valid:\r\n"
    "  If TRUE then VLAN is valid. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan info_set vlan_ndx 0 valid 0 enable_l3_lag_hash 0 \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_INFO_GET_INFO_GET_ID,                                                            
    "info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the VLAN basic information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan info_get vlan_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(5)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_INFO_GET_INFO_GET_VLAN_NDX_ID,                                                            
    "vlan_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_ndx:\r\n"
    "  The vlan ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan info_get vlan_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(5)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_ID,                                                            
    "all_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the all per vlan information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_NDX_ID,                                                            
    "vlan_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_ndx:\r\n"
    "  The vlan ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_LAG_HASH_ID,                                                            
    "enable_l3_lag_hash",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.topology_id:\r\n"
    "  Topology ID the VLAN is mapped to. Range 0-63\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0 enable_l3_lag_hash 0 \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_TOPOLOGY_ID_ID,                                                            
    "topology_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.topology_id:\r\n"
    "  Topology ID the VLAN is mapped to. Range 0-63\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_PORTS_TAG_INDEX_ID,                                                            
    "ports_tag_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ports_tag_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_PORTS_TAG_ID,                                                            
    "ports_tag",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.ports_tag[ prm_ports_tag_index]:\r\n"
    "  Specify for each port in the membership is it tagged. If ports_tag[k] is TRUE\r\n"
    "  then the port 'member_ports[k]' transmit packets classified to this VLAN\r\n"
    "  tagged.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_NOF_MEMBERS_ID,                                                            
    "nof_members",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.nof_members:\r\n"
    "  Number of member ports.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_MEMBER_PORTS_INDEX_ID,                                                            
    "member_ports_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  member_ports_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_MEMBER_PORTS_ID,                                                            
    "member_ports",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.member_ports[ prm_member_ports_index]:\r\n"
    "  VLAN membership, ports member in this VLAN.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_FILTERING_ROUTING_INFO_MC_FILTER_ID,                                                            
    "mc_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.filtering.routing_info.mc_filter:\r\n"
    "  If True filter multicast packets designated to the router.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_FILTERING_ROUTING_INFO_UC_FILTER_ID,                                                            
    "uc_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.filtering.routing_info.uc_filter:\r\n"
    "  If True filter Unicast packets designated to the router.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_FILTERING_INGRESS_FILTER_ID,                                                            
    "ingress_filter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.filtering.ingress_filter:\r\n"
    "  Enable ingress filtering.Confirms that the port is a member of the VID to\r\n"
    "  which the packet is classified.If not the packet is dropped.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_FORWARDING_DA_FWD_ACTION_MC_PTR_ID,                                                            
    "da_fwd_action_mc_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.forwarding.da_fwd_action_mc_ptr:\r\n"
    "  Index into the global info, that was set by\r\n"
    "  soc_petra_pp_bridging_frwrd_glbl_info_set().Forwarding action when the DA of\r\n"
    "  multicast packet was not found upon lookup in the MAC Table. Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_FORWARDING_DA_FWD_ACTION_UC_PTR_ID,                                                            
    "da_fwd_action_uc_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.forwarding.da_fwd_action_uc_ptr:\r\n"
    "  Index into the global info, that was set by\r\n"
    "  soc_petra_pp_bridging_frwrd_glbl_info_set().Forwarding action when the DA of\r\n"
    "  unicast packet was not found upon lookup in the MAC Table. Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_GENERAL_VALID_ID,                                                            
    "valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.general.valid:\r\n"
    "  If TRUE then VLAN is valid. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_SET_ALL_INFO_SET_VLAN_INFO_VALID_MASK_ID,                                                            
    "valid_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_info.valid_mask:\r\n"
    "  Each field XXX in the structure has a corresponding bit\r\n"
    "  SOC_PETRA_PP_VLAN_INFO_MASK_XXXvalid_mask is a bit mask of all the valid fields\r\n"
    "  in the request.For a 'set' operation these are the fields that need to be\r\n"
    "  modified.For a 'get' operation these are the fields that need to be read.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_set vlan_ndx 0 topology_id 0 ports_tag_index 0\r\n"
    "  ports_tag 0 nof_members 0 member_ports_index 0 member_ports 0 mc_filter 0\r\n"
    "  uc_filter 0 ingress_filter 0 da_fwd_action_mc_ptr 0 da_fwd_action_uc_ptr 0\r\n"
    "  valid 0 valid_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_GET_ALL_INFO_GET_ID,                                                            
    "all_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the all per vlan information.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_get vlan_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(7)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_VLAN_ALL_INFO_GET_ALL_INFO_GET_VLAN_NDX_ID,                                                            
    "vlan_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vlan_ndx:\r\n"
    "  The vlan ID. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api vlan all_info_get vlan_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_VLAN_ID,                                                            
    "vlan",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, BIT(4)|BIT(5)|BIT(6)|BIT(7)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } vlan*/
#ifdef UI_FEC_TABLE/* { fec_table*/
  {                                                                                        
    PARAM_PETRA_PP_FEC_COS_ACTION_SET_FEC_COS_ACTION_SET_ID,                                                            
    "fec_cos_action_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set The COS parameters for a COS action.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_cos_action_set cos_action_ndx 0 overwrite_DP 0 DP\r\n"
    "  0 overwrite_UP 0 UP 0 overwrite_TC 0 TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_COS_ACTION_SET_FEC_COS_ACTION_SET_COS_ACTION_NDX_ID,                                                            
    "cos_action_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cos_action_ndx:\r\n"
    "  COS action ID. Range 0-15.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_cos_action_set cos_action_ndx 0 overwrite_DP 0 DP\r\n"
    "  0 overwrite_UP 0 UP 0 overwrite_TC 0 TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_COS_ACTION_SET_FEC_COS_ACTION_SET_COS_ACTION_INFO_OVERWRITE_DP_ID,                                                            
    "overwrite_DP",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cos_action_info.overwrite_DP:\r\n"
    "  Whether to overwrite the Drop precedence by the given value.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_cos_action_set cos_action_ndx 0 overwrite_DP 0 DP\r\n"
    "  0 overwrite_UP 0 UP 0 overwrite_TC 0 TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_COS_ACTION_SET_FEC_COS_ACTION_SET_COS_ACTION_INFO_DP_ID,                                                            
    "DP",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cos_action_info.DP:\r\n"
    "  Drop precedenceRange 0-3.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_cos_action_set cos_action_ndx 0 overwrite_DP 0 DP\r\n"
    "  0 overwrite_UP 0 UP 0 overwrite_TC 0 TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_COS_ACTION_SET_FEC_COS_ACTION_SET_COS_ACTION_INFO_OVERWRITE_UP_ID,                                                            
    "overwrite_UP",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cos_action_info.overwrite_UP:\r\n"
    "  Whether to overwrite the User Priority by the given value.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_cos_action_set cos_action_ndx 0 overwrite_DP 0 DP\r\n"
    "  0 overwrite_UP 0 UP 0 overwrite_TC 0 TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_COS_ACTION_SET_FEC_COS_ACTION_SET_COS_ACTION_INFO_UP_ID,                                                            
    "UP",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cos_action_info.UP:\r\n"
    "  User PriorityRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_cos_action_set cos_action_ndx 0 overwrite_DP 0 DP\r\n"
    "  0 overwrite_UP 0 UP 0 overwrite_TC 0 TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_COS_ACTION_SET_FEC_COS_ACTION_SET_COS_ACTION_INFO_OVERWRITE_TC_ID,                                                            
    "overwrite_TC",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cos_action_info.overwrite_TC:\r\n"
    "  Whether to overwrite the Traffic Class by the given value.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_cos_action_set cos_action_ndx 0 overwrite_DP 0 DP\r\n"
    "  0 overwrite_UP 0 UP 0 overwrite_TC 0 TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_COS_ACTION_SET_FEC_COS_ACTION_SET_COS_ACTION_INFO_TC_ID,                                                            
    "TC",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cos_action_info.TC:\r\n"
    "  Traffic ClassRange 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_cos_action_set cos_action_ndx 0 overwrite_DP 0 DP\r\n"
    "  0 overwrite_UP 0 UP 0 overwrite_TC 0 TC 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_COS_ACTION_GET_FEC_COS_ACTION_GET_ID,                                                            
    "fec_cos_action_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set The COS parameters for a COS action.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_cos_action_get cos_action_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(9)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_COS_ACTION_GET_FEC_COS_ACTION_GET_COS_ACTION_NDX_ID,                                                            
    "cos_action_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cos_action_ndx:\r\n"
    "  COS action ID. Range 0-15.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_cos_action_get cos_action_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MAP_L3_TOS_TO_COS_ACTION_PTR_SET_MAP_L3_TOS_TO_COS_ACTION_PTR_SET_ID,                                                            
    "map_l3_tos_to_cos_action_ptr_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the mapping from TOS/DSCP to L2 COS action.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table map_l3_tos_to_cos_action_ptr_set tos_ndx 0 cos_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(10)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MAP_L3_TOS_TO_COS_ACTION_PTR_SET_MAP_L3_TOS_TO_COS_ACTION_PTR_SET_TOS_NDX_ID,                                                            
    "tos_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  tos_ndx:\r\n"
    "  Tos (Type of Service) number\r\n"
    "  Range 0-255.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table map_l3_tos_to_cos_action_ptr_set tos_ndx 0 cos_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(10)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MAP_L3_TOS_TO_COS_ACTION_PTR_SET_MAP_L3_TOS_TO_COS_ACTION_PTR_SET_COS_PTR_ID,                                                            
    "cos_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  cos_ptr:\r\n"
    "  COS action ID. Range 0-15.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table map_l3_tos_to_cos_action_ptr_set tos_ndx 0 cos_ptr 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MAP_L3_TOS_TO_COS_ACTION_PTR_GET_MAP_L3_TOS_TO_COS_ACTION_PTR_GET_ID,                                                            
    "map_l3_tos_to_cos_action_ptr_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the mapping from TOS/DSCP to L2 COS action.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table map_l3_tos_to_cos_action_ptr_get tos_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_MAP_L3_TOS_TO_COS_ACTION_PTR_GET_MAP_L3_TOS_TO_COS_ACTION_PTR_GET_TOS_NDX_ID,                                                            
    "tos_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  tos_ndx:\r\n"
    "  Tos (Type of Service) number\r\n"
    "  Range 0-255.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table map_l3_tos_to_cos_action_ptr_get tos_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_ID,                                                            
    "uc_entry_add",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Add one Unicast FEC entry.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_INC_VID_ID,                                                            
    "inc_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  inc_vid:\r\n"
    "  increment VID \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_INC_ARP_PTR_ID,                                                            
    "inc_arp_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  inc_vid:\r\n"
    "  increment VID \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_COUNT_ID,                                                            
    "count",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_UC_FEC_ENTRY_STATISTICS_COUNTER_ID,                                                            
    "statistics_counter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.statistics_counter:\r\n"
    "  Select a statistics counter that is incremented when this entry is accessed.\r\n"
    "  Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_UC_FEC_ENTRY_ENABLE_RPF_ID,                                                            
    "enable_rpf",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.enable_rpf:\r\n"
    "  If TRUE, when searching with the IPv4 SrcIP during multicast routing, then\r\n"
    "  use the destination field of the entry for RPF check of multicast packets.\r\n"
    "  This applies only if RPF is not specified in the Multicast FEC Entry. In this\r\n"
    "  case, the Destination must match the incoming port for the RPF check to pass.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_UC_FEC_ENTRY_CPU_CODE_ID,                                                            
    "cpu_code",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.cpu_code:\r\n"
    "  Value to be sent to the CPU(in the EPPH). Range 0-1023.Valid only if command\r\n"
    "  is Trap.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_UC_FEC_ENTRY_L2_EDIT_ARP_PTR_ID,                                                            
    "arp_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.l2_edit.arp_ptr:\r\n"
    "  pointer to a MAC address to be used as DA for outgoing packet. Valid only if\r\n"
    "  command is not Trap.Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_UC_FEC_ENTRY_L2_EDIT_OUT_VID_ID,                                                            
    "out_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.l2_edit.out_vid:\r\n"
    "  Outgoing VLAN ID.Rang 0-4095. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_UC_FEC_ENTRY_FRWRD_DESTINATION_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.frwrd.destination.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_UC_FEC_ENTRY_FRWRD_DESTINATION_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.frwrd.destination.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_UC_FEC_ENTRY_FRWRD_OVERWRITE_COS_ID,                                                            
    "overwrite_cos",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.frwrd.overwrite_cos:\r\n"
    "  If TRUE, then the layer 2 CoS should be overwritten with the CoS specified by\r\n"
    "  CoS-Action\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_ADD_FEC_UC_ENTRY_ADD_UC_FEC_ENTRY_FRWRD_COMMAND_ID,                                                            
    "command",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.frwrd.command:\r\n"
    "  Drop, Route or Trap\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ADD_FEC_UC_ECMP_ADD_ID,                                                            
    "uc_ecmp_add",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Add array of Unicast FEC entries (ECMP) equal-cost-multi-path entry, so\r\n"
    "  Unicast packets lookup result with this sys_fec_d are routed along one of\r\n"
    "  these FEC entries while ensuring load balancing.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ADD_FEC_UC_ECMP_ADD_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ADD_FEC_UC_ECMP_ADD_UC_FEC_ARRAY_STATISTICS_COUNTER_ID,                                                            
    "statistics_counter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.statistics_counter:\r\n"
    "  Select a statistics counter that is incremented when this entry is accessed.\r\n"
    "  Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ADD_FEC_UC_ECMP_ADD_UC_FEC_ARRAY_ENABLE_RPF_ID,                                                            
    "enable_rpf",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.enable_rpf:\r\n"
    "  If TRUE, when searching with the IPv4 SrcIP during multicast routing, then\r\n"
    "  use the destination field of the entry for RPF check of multicast packets.\r\n"
    "  This applies only if RPF is not specified in the Multicast FEC Entry. In this\r\n"
    "  case, the Destination must match the incoming port for the RPF check to pass.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ADD_FEC_UC_ECMP_ADD_UC_FEC_ARRAY_CPU_CODE_ID,                                                            
    "cpu_code",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.cpu_code:\r\n"
    "  Value to be sent to the CPU(in the EPPH). Range 0-1023.Valid only if command\r\n"
    "  is Trap.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ADD_FEC_UC_ECMP_ADD_UC_FEC_ARRAY_L2_EDIT_ARP_PTR_ID,                                                            
    "arp_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.l2_edit.arp_ptr:\r\n"
    "  pointer to a MAC address to be used as DA for outgoing packet. Valid only if\r\n"
    "  command is not Trap.Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ADD_FEC_UC_ECMP_ADD_UC_FEC_ARRAY_L2_EDIT_OUT_VID_ID,                                                            
    "out_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.l2_edit.out_vid:\r\n"
    "  Outgoing VLAN ID.Rang 0-4095. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ADD_FEC_UC_ECMP_ADD_UC_FEC_ARRAY_FRWRD_DESTINATION_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.frwrd.destination.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ADD_FEC_UC_ECMP_ADD_UC_FEC_ARRAY_FRWRD_DESTINATION_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.frwrd.destination.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ADD_FEC_UC_ECMP_ADD_UC_FEC_ARRAY_FRWRD_OVERWRITE_COS_ID,                                                            
    "overwrite_cos",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.frwrd.overwrite_cos:\r\n"
    "  If TRUE, then the layer 2 CoS should be overwritten with the CoS specified by\r\n"
    "  CoS-Action\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ADD_FEC_UC_ECMP_ADD_UC_FEC_ARRAY_FRWRD_COMMAND_ID,                                                            
    "command",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.frwrd.command:\r\n"
    "  Drop, Route or Trap\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ADD_FEC_UC_ECMP_ADD_NOF_ENTRIES_ID,                                                            
    "nof_entries",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  nof_entries:\r\n"
    "  Number of valid entries in the array. Range 1-16.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_UPDATE_FEC_UC_ENTRY_UPDATE_ID,                                                            
    "uc_entry_update",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Update one Unicast FEC entry.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_UPDATE_FEC_UC_ENTRY_UPDATE_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_UPDATE_FEC_UC_ENTRY_UPDATE_UC_FEC_ENTRY_STATISTICS_COUNTER_ID,                                                            
    "statistics_counter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.statistics_counter:\r\n"
    "  Select a statistics counter that is incremented when this entry is accessed.\r\n"
    "  Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_UPDATE_FEC_UC_ENTRY_UPDATE_UC_FEC_ENTRY_ENABLE_RPF_ID,                                                            
    "enable_rpf",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.enable_rpf:\r\n"
    "  If TRUE, when searching with the IPv4 SrcIP during multicast routing, then\r\n"
    "  use the destination field of the entry for RPF check of multicast packets.\r\n"
    "  This applies only if RPF is not specified in the Multicast FEC Entry. In this\r\n"
    "  case, the Destination must match the incoming port for the RPF check to pass.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_UPDATE_FEC_UC_ENTRY_UPDATE_UC_FEC_ENTRY_CPU_CODE_ID,                                                            
    "cpu_code",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.cpu_code:\r\n"
    "  Value to be sent to the CPU(in the EPPH). Range 0-1023.Valid only if command\r\n"
    "  is Trap.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_UPDATE_FEC_UC_ENTRY_UPDATE_UC_FEC_ENTRY_L2_EDIT_ARP_PTR_ID,                                                            
    "arp_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.l2_edit.arp_ptr:\r\n"
    "  pointer to a MAC address to be used as DA for outgoing packet. Valid only if\r\n"
    "  command is not Trap.Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_UPDATE_FEC_UC_ENTRY_UPDATE_UC_FEC_ENTRY_L2_EDIT_OUT_VID_ID,                                                            
    "out_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.l2_edit.out_vid:\r\n"
    "  Outgoing VLAN ID.Rang 0-4095. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_UPDATE_FEC_UC_ENTRY_UPDATE_UC_FEC_ENTRY_FRWRD_DESTINATION_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.frwrd.destination.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_UPDATE_FEC_UC_ENTRY_UPDATE_UC_FEC_ENTRY_FRWRD_DESTINATION_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.frwrd.destination.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_UPDATE_FEC_UC_ENTRY_UPDATE_UC_FEC_ENTRY_FRWRD_OVERWRITE_COS_ID,                                                            
    "overwrite_cos",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.frwrd.overwrite_cos:\r\n"
    "  If TRUE, then the layer 2 CoS should be overwritten with the CoS specified by\r\n"
    "  CoS-Action\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ENTRY_UPDATE_FEC_UC_ENTRY_UPDATE_UC_FEC_ENTRY_FRWRD_COMMAND_ID,                                                            
    "command",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_entry.frwrd.command:\r\n"
    "  Drop, Route or Trap\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_UPDATE_FEC_UC_ECMP_UPDATE_ID,                                                            
    "uc_ecmp_update",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Update array of Unicast FEC entries (ECMP) equal-cost-multi-path entry, so\r\n"
    "  multicast packets lookup result with this sys_fec_d are routed along one of\r\n"
    "  these FEC entries while ensuring load balancing.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_UPDATE_FEC_UC_ECMP_UPDATE_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_UPDATE_FEC_UC_ECMP_UPDATE_UC_FEC_ARRAY_STATISTICS_COUNTER_ID,                                                            
    "statistics_counter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.statistics_counter:\r\n"
    "  Select a statistics counter that is incremented when this entry is accessed.\r\n"
    "  Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_UPDATE_FEC_UC_ECMP_UPDATE_UC_FEC_ARRAY_ENABLE_RPF_ID,                                                            
    "enable_rpf",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.enable_rpf:\r\n"
    "  If TRUE, when searching with the IPv4 SrcIP during multicast routing, then\r\n"
    "  use the destination field of the entry for RPF check of multicast packets.\r\n"
    "  This applies only if RPF is not specified in the Multicast FEC Entry. In this\r\n"
    "  case, the Destination must match the incoming port for the RPF check to pass.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_UPDATE_FEC_UC_ECMP_UPDATE_UC_FEC_ARRAY_CPU_CODE_ID,                                                            
    "cpu_code",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.cpu_code:\r\n"
    "  Value to be sent to the CPU(in the EPPH). Range 0-1023.Valid only if command\r\n"
    "  is Trap.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_UPDATE_FEC_UC_ECMP_UPDATE_UC_FEC_ARRAY_L2_EDIT_ARP_PTR_ID,                                                            
    "arp_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.l2_edit.arp_ptr:\r\n"
    "  pointer to a MAC address to be used as DA for outgoing packet. Valid only if\r\n"
    "  command is not Trap.Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_UPDATE_FEC_UC_ECMP_UPDATE_UC_FEC_ARRAY_L2_EDIT_OUT_VID_ID,                                                            
    "out_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.l2_edit.out_vid:\r\n"
    "  Outgoing VLAN ID.Rang 0-4095. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_UPDATE_FEC_UC_ECMP_UPDATE_UC_FEC_ARRAY_FRWRD_DESTINATION_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.frwrd.destination.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_UPDATE_FEC_UC_ECMP_UPDATE_UC_FEC_ARRAY_FRWRD_DESTINATION_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.frwrd.destination.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_UPDATE_FEC_UC_ECMP_UPDATE_UC_FEC_ARRAY_FRWRD_OVERWRITE_COS_ID,                                                            
    "overwrite_cos",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.frwrd.overwrite_cos:\r\n"
    "  If TRUE, then the layer 2 CoS should be overwritten with the CoS specified by\r\n"
    "  CoS-Action\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_UPDATE_FEC_UC_ECMP_UPDATE_UC_FEC_ARRAY_FRWRD_COMMAND_ID,                                                            
    "command",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec_array.frwrd.command:\r\n"
    "  Drop, Route or Trap\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_UPDATE_FEC_UC_ECMP_UPDATE_NOF_ENTRIES_ID,                                                            
    "nof_entries",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  nof_entries:\r\n"
    "  Number of valid entries in the array. Range 2-16.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ENTRY_UPDATE_FEC_UC_ECMP_ENTRY_UPDATE_ID,                                                            
    "uc_ecmp_entry_update",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Update one FEC entry in the array of Unicast FEC entries (ECMP).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_entry_update sys_fec_ndx 0 entry_ndx 0\r\n"
    "  statistics_counter 0 enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ENTRY_UPDATE_FEC_UC_ECMP_ENTRY_UPDATE_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. That's associated with FEC array (ECMP).\r\n"
    "  Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_entry_update sys_fec_ndx 0 entry_ndx 0\r\n"
    "  statistics_counter 0 enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ENTRY_UPDATE_FEC_UC_ECMP_ENTRY_UPDATE_ENTRY_NDX_ID,                                                            
    "entry_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  entry_ndx:\r\n"
    "  The position of the entry to update in the FEC array.\r\n"
    "  Range 2-16. According to the FEC array length.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_entry_update sys_fec_ndx 0 entry_ndx 0\r\n"
    "  statistics_counter 0 enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ENTRY_UPDATE_FEC_UC_ECMP_ENTRY_UPDATE_UC_FEC_STATISTICS_COUNTER_ID,                                                            
    "statistics_counter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec.statistics_counter:\r\n"
    "  Select a statistics counter that is incremented when this entry is accessed.\r\n"
    "  Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_entry_update sys_fec_ndx 0 entry_ndx 0\r\n"
    "  statistics_counter 0 enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ENTRY_UPDATE_FEC_UC_ECMP_ENTRY_UPDATE_UC_FEC_ENABLE_RPF_ID,                                                            
    "enable_rpf",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec.enable_rpf:\r\n"
    "  If TRUE, when searching with the IPv4 SrcIP during multicast routing, then\r\n"
    "  use the destination field of the entry for RPF check of multicast packets.\r\n"
    "  This applies only if RPF is not specified in the Multicast FEC Entry. In this\r\n"
    "  case, the Destination must match the incoming port for the RPF check to pass.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_entry_update sys_fec_ndx 0 entry_ndx 0\r\n"
    "  statistics_counter 0 enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ENTRY_UPDATE_FEC_UC_ECMP_ENTRY_UPDATE_UC_FEC_CPU_CODE_ID,                                                            
    "cpu_code",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec.cpu_code:\r\n"
    "  Value to be sent to the CPU(in the EPPH). Range 0-1023.Valid only if command\r\n"
    "  is Trap.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_entry_update sys_fec_ndx 0 entry_ndx 0\r\n"
    "  statistics_counter 0 enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ENTRY_UPDATE_FEC_UC_ECMP_ENTRY_UPDATE_UC_FEC_L2_EDIT_ARP_PTR_ID,                                                            
    "arp_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec.l2_edit.arp_ptr:\r\n"
    "  pointer to a MAC address to be used as DA for outgoing packet. Valid only if\r\n"
    "  command is not Trap.Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_entry_update sys_fec_ndx 0 entry_ndx 0\r\n"
    "  statistics_counter 0 enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ENTRY_UPDATE_FEC_UC_ECMP_ENTRY_UPDATE_UC_FEC_L2_EDIT_OUT_VID_ID,                                                            
    "out_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec.l2_edit.out_vid:\r\n"
    "  Outgoing VLAN ID.Rang 0-4095. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_entry_update sys_fec_ndx 0 entry_ndx 0\r\n"
    "  statistics_counter 0 enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ENTRY_UPDATE_FEC_UC_ECMP_ENTRY_UPDATE_UC_FEC_FRWRD_DESTINATION_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec.frwrd.destination.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_entry_update sys_fec_ndx 0 entry_ndx 0\r\n"
    "  statistics_counter 0 enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ENTRY_UPDATE_FEC_UC_ECMP_ENTRY_UPDATE_UC_FEC_FRWRD_DESTINATION_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec.frwrd.destination.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_entry_update sys_fec_ndx 0 entry_ndx 0\r\n"
    "  statistics_counter 0 enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ENTRY_UPDATE_FEC_UC_ECMP_ENTRY_UPDATE_UC_FEC_FRWRD_OVERWRITE_COS_ID,                                                            
    "overwrite_cos",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec.frwrd.overwrite_cos:\r\n"
    "  If TRUE, then the layer 2 CoS should be overwritten with the CoS specified by\r\n"
    "  CoS-Action\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_entry_update sys_fec_ndx 0 entry_ndx 0\r\n"
    "  statistics_counter 0 enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_ECMP_ENTRY_UPDATE_FEC_UC_ECMP_ENTRY_UPDATE_UC_FEC_FRWRD_COMMAND_ID,                                                            
    "command",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  uc_fec.frwrd.command:\r\n"
    "  Drop, Route or Trap\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_ecmp_entry_update sys_fec_ndx 0 entry_ndx 0\r\n"
    "  statistics_counter 0 enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_ID,                                                            
    "mc_entry_add",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Adds one Multicast FEC entry.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_INC_ARP_PTR_ID,                                                            
    "inc_dest",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  inc_vid:\r\n"
    "  increment VID \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_COUNT_ID,                                                            
    "count",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  enable_rpf 0 cpu_code 0 arp_ptr 0 out_vid 0 dest_val 0 dest_type 0\r\n"
    "  overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_MC_FEC_ENTRY_STATISTICS_COUNTER_ID,                                                            
    "statistics_counter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.statistics_counter:\r\n"
    "  Select a statistics counter that is incremented when this entry is accessed.\r\n"
    "  Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_MC_FEC_ENTRY_RPF_CHECK_EXP_IN_PORT_SYS_ID_ID,                                                            
    "sys_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.rpf_check.exp_in_port.sys_id:\r\n"
    "  The system port value, according to the type (Single or GLAG)For LAG the\r\n"
    "  value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_MC_FEC_ENTRY_RPF_CHECK_EXP_IN_PORT_SYS_PORT_TYPE_ID,                                                            
    "sys_port_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_SAND_PP_SYS_PORT_TYPE_rule[0],                                            
    (sizeof(SOC_SAND_PP_SYS_PORT_TYPE_rule) / sizeof(SOC_SAND_PP_SYS_PORT_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.rpf_check.exp_in_port.sys_port_type:\r\n"
    "  The system port type single/LAG.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_MC_FEC_ENTRY_RPF_CHECK_EXP_IN_VID_ID,                                                            
    "exp_in_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.rpf_check.exp_in_vid:\r\n"
    "  Expected incoming VID to use in the RPF check. If the incoming packet VID is\r\n"
    "  different than this value and check_vid is TRUE then the RPF check fail.\r\n"
    "  valid only if the rpf check consider the VID is TRUE. Range 1-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_MC_FEC_ENTRY_RPF_CHECK_RPF_CHECK_ID,                                                            
    "rpf_check",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_FEC_RPF_CHECK_rule[0],                                            
    (sizeof(SOC_PETRA_PP_FEC_RPF_CHECK_rule) / sizeof(SOC_PETRA_PP_FEC_RPF_CHECK_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.rpf_check.rpf_check:\r\n"
    "  According to which information to perform the rpf check.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_MC_FEC_ENTRY_CPU_CODE_ID,                                                            
    "cpu_code",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.cpu_code:\r\n"
    "  Value to be sent to the CPU(in the EPPH). Range 0-1023.Valid only if command\r\n"
    "  is Trap.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_MC_FEC_ENTRY_FRWRD_DESTINATION_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.frwrd.destination.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_MC_FEC_ENTRY_FRWRD_DESTINATION_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.frwrd.destination.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_MC_FEC_ENTRY_FRWRD_OVERWRITE_COS_ID,                                                            
    "overwrite_cos",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.frwrd.overwrite_cos:\r\n"
    "  If TRUE, then the layer 2 CoS should be overwritten with the CoS specified by\r\n"
    "  CoS-Action\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_ADD_FEC_MC_ENTRY_ADD_MC_FEC_ENTRY_FRWRD_COMMAND_ID,                                                            
    "command",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.frwrd.command:\r\n"
    "  Drop, Route or Trap\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_add sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_UPDATE_FEC_MC_ENTRY_UPDATE_ID,                                                            
    "fec_mc_entry_update",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Updates one Unicast FEC entry.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_UPDATE_FEC_MC_ENTRY_UPDATE_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_UPDATE_FEC_MC_ENTRY_UPDATE_MC_FEC_ENTRY_STATISTICS_COUNTER_ID,                                                            
    "statistics_counter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.statistics_counter:\r\n"
    "  Select a statistics counter that is incremented when this entry is accessed.\r\n"
    "  Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_UPDATE_FEC_MC_ENTRY_UPDATE_MC_FEC_ENTRY_RPF_CHECK_EXP_IN_PORT_SYS_ID_ID,                                                            
    "sys_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.rpf_check.exp_in_port.sys_id:\r\n"
    "  The system port value, according to the type (Single or GLAG)For LAG the\r\n"
    "  value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_UPDATE_FEC_MC_ENTRY_UPDATE_MC_FEC_ENTRY_RPF_CHECK_EXP_IN_PORT_SYS_PORT_TYPE_ID,                                                            
    "sys_port_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_SAND_PP_SYS_PORT_TYPE_rule[0],                                            
    (sizeof(SOC_SAND_PP_SYS_PORT_TYPE_rule) / sizeof(SOC_SAND_PP_SYS_PORT_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.rpf_check.exp_in_port.sys_port_type:\r\n"
    "  The system port type single/LAG.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_UPDATE_FEC_MC_ENTRY_UPDATE_MC_FEC_ENTRY_RPF_CHECK_EXP_IN_VID_ID,                                                            
    "exp_in_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.rpf_check.exp_in_vid:\r\n"
    "  Expected incoming VID to use in the RPF check. If the incoming packet VID is\r\n"
    "  different than this value and check_vid is TRUE then the RPF check fail.\r\n"
    "  valid only if the rpf check consider the VID is TRUE. Range 1-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_UPDATE_FEC_MC_ENTRY_UPDATE_MC_FEC_ENTRY_RPF_CHECK_RPF_CHECK_ID,                                                            
    "rpf_check",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_FEC_RPF_CHECK_rule[0],                                            
    (sizeof(SOC_PETRA_PP_FEC_RPF_CHECK_rule) / sizeof(SOC_PETRA_PP_FEC_RPF_CHECK_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.rpf_check.rpf_check:\r\n"
    "  According to which information to perform the rpf check.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_UPDATE_FEC_MC_ENTRY_UPDATE_MC_FEC_ENTRY_CPU_CODE_ID,                                                            
    "cpu_code",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.cpu_code:\r\n"
    "  Value to be sent to the CPU(in the EPPH). Range 0-1023.Valid only if command\r\n"
    "  is Trap.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_UPDATE_FEC_MC_ENTRY_UPDATE_MC_FEC_ENTRY_FRWRD_DESTINATION_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.frwrd.destination.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_UPDATE_FEC_MC_ENTRY_UPDATE_MC_FEC_ENTRY_FRWRD_DESTINATION_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.frwrd.destination.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_UPDATE_FEC_MC_ENTRY_UPDATE_MC_FEC_ENTRY_FRWRD_OVERWRITE_COS_ID,                                                            
    "overwrite_cos",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.frwrd.overwrite_cos:\r\n"
    "  If TRUE, then the layer 2 CoS should be overwritten with the CoS specified by\r\n"
    "  CoS-Action\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_ENTRY_UPDATE_FEC_MC_ENTRY_UPDATE_MC_FEC_ENTRY_FRWRD_COMMAND_ID,                                                            
    "command",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FEC_COMMAND_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  mc_fec_entry.frwrd.command:\r\n"
    "  Drop, Route or Trap\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_entry_update sys_fec_ndx 0 statistics_counter 0\r\n"
    "  sys_id 0 sys_port_type 0 exp_in_vid 0 rpf_check 0 cpu_code 0 dest_val 0\r\n"
    "  dest_type 0 overwrite_cos 0 command 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(18)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_PROG_PORT_ENTRY_ADD_FEC_PROG_PORT_ENTRY_ADD_ID,                                                            
    "fec_prog_port_entry_add",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Adds one Programmable Port Forwarding FEC entry.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_prog_port_entry_add sys_fec_ndx 0 overwrite_cos 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(19)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_PROG_PORT_ENTRY_ADD_FEC_PROG_PORT_ENTRY_ADD_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_prog_port_entry_add sys_fec_ndx 0 overwrite_cos 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_PROG_PORT_ENTRY_ADD_FEC_PROG_PORT_ENTRY_ADD_PROG_FEC_ENTRY_OVERWRITE_COS_ID,                                                            
    "overwrite_cos",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prog_fec_entry.overwrite_cos:\r\n"
    "  If TRUE, then the layer 2 CoS should be overwritten with the CoS specified by\r\n"
    "  CoS-Action\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_prog_port_entry_add sys_fec_ndx 0 overwrite_cos 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_PROG_PORT_ENTRY_UPDATE_FEC_PROG_PORT_ENTRY_UPDATE_ID,                                                            
    "fec_prog_port_entry_update",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Updates one Unicast FEC entry.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_prog_port_entry_update sys_fec_ndx 0 overwrite_cos\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(20)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_PROG_PORT_ENTRY_UPDATE_FEC_PROG_PORT_ENTRY_UPDATE_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_prog_port_entry_update sys_fec_ndx 0 overwrite_cos\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_PROG_PORT_ENTRY_UPDATE_FEC_PROG_PORT_ENTRY_UPDATE_PROG_FEC_ENTRY_OVERWRITE_COS_ID,                                                            
    "overwrite_cos",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  prog_fec_entry.overwrite_cos:\r\n"
    "  If TRUE, then the layer 2 CoS should be overwritten with the CoS specified by\r\n"
    "  CoS-Action\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_prog_port_entry_update sys_fec_ndx 0 overwrite_cos\r\n"
    "  0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ENTRY_STAT_INFO_SET_FEC_ENTRY_STAT_INFO_SET_ID,                                                            
    "fec_entry_stat_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the statistics counter of the FEC given FEC entry. Number of free and\r\n"
    "  used entries for each ECMP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_entry_stat_info_set sys_fec_ndx 0 accessed 0\r\n"
    "  statistics_counter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ENTRY_STAT_INFO_SET_FEC_ENTRY_STAT_INFO_SET_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_entry_stat_info_set sys_fec_ndx 0 accessed 0\r\n"
    "  statistics_counter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ENTRY_STAT_INFO_SET_FEC_ENTRY_STAT_INFO_SET_ENTRY_STAT_ACCESSED_ID,                                                            
    "accessed",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  entry_stat.accessed:\r\n"
    "  was the FEC entry accessed in routing since the previous reading Valid only\r\n"
    "  in get.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_entry_stat_info_set sys_fec_ndx 0 accessed 0\r\n"
    "  statistics_counter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ENTRY_STAT_INFO_SET_FEC_ENTRY_STAT_INFO_SET_ENTRY_STAT_STATISTICS_COUNTER_ID,                                                            
    "statistics_counter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  entry_stat.statistics_counter:\r\n"
    "  Select a statistics counter that is incremented when this entry is accessed.\r\n"
    "  Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_entry_stat_info_set sys_fec_ndx 0 accessed 0\r\n"
    "  statistics_counter 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ENTRY_STAT_INFO_GET_FEC_ENTRY_STAT_INFO_GET_ID,                                                            
    "fec_entry_stat_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the statistics counter of the FEC given FEC entry. Number of free and\r\n"
    "  used entries for each ECMP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_entry_stat_info_get sys_fec_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(22)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ENTRY_STAT_INFO_GET_FEC_ENTRY_STAT_INFO_GET_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_entry_stat_info_get sys_fec_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ENTRY_TYPE_GET_FEC_ENTRY_TYPE_GET_ID,                                                            
    "fec_entry_type_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get the type of the FEC entry.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_entry_type_get sys_fec_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(23)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ENTRY_TYPE_GET_FEC_ENTRY_TYPE_GET_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_entry_type_get sys_fec_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_GET_FEC_UC_GET_ID,                                                            
    "uc_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get Unicast FEC entry/entries that are associated with the given sys_fec_ndx.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_get sys_fec_ndx 0 last 0 first 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(24)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_GET_FEC_UC_GET_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_get sys_fec_ndx 0 last 0 first 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_GET_FEC_UC_GET_FEC_RANGE_LAST_ID,                                                            
    "last",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fec_range.last:\r\n"
    "  last FEC in the range\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_get sys_fec_ndx 0 last 0 first 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_UC_GET_FEC_UC_GET_FEC_RANGE_FIRST_ID,                                                            
    "first",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fec_range.first:\r\n"
    "  first FEC in the range\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_uc_get sys_fec_ndx 0 last 0 first 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_GET_FEC_MC_GET_ID,                                                            
    "fec_mc_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get Multicast FEC entry that is associated with the given sys_fec_ndx.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_get sys_fec_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(25)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MC_GET_FEC_MC_GET_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mc_get sys_fec_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_PROG_PORT_GET_FEC_PROG_PORT_GET_ID,                                                            
    "fec_prog_port_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get Programmable port FEC entry that is associated with the given sys_fec_ndx.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_prog_port_get sys_fec_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(26)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_PROG_PORT_GET_FEC_PROG_PORT_GET_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_prog_port_get sys_fec_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(26)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_TABLE_PRINT_BLOCK_PRINT_BLOCK_ID,                                                            
    "get_block",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Prints a block of FEC entries returned by soc_petra_pp_fec_table_get_block.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table get_block uc 0 mc 0 prog_port 0 iter 0 \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(27)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_TABLE_PRINT_BLOCK_PRINT_BLOCK_FEC_TABLE_UC_ID,                                                            
    "uc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fec_payload_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table get_block uc 0 mc 0 prog_port 0 iter 0 \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(27)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_TABLE_PRINT_BLOCK_PRINT_BLOCK_FEC_TABLE_MC_ID,                                                            
    "mc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fec_table.fec_payload[ prm_fec_payload_index]:\r\n"
    "  The information of the FEC entry as in the HW table.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table get_block uc 0 mc 0 prog_port 0 iter 0 \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(27)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_TABLE_PRINT_BLOCK_PRINT_BLOCK_FEC_TABLE_PROG_PORT_ID,                                                            
    "prog_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fec_table.is_first:\r\n"
    "  Is the current entry is the first entry in the ECMP. If this FALSE it means\r\n"
    "  that this entry is starting a new ECMP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table get_block uc 0 mc 0 prog_port 0 iter 0 \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(27)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_TABLE_PRINT_BLOCK_PRINT_BLOCK_ITER_ID,                                                            
    "iter",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  iter:\r\n"
    "  to start print from this index. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table get_block uc 0 mc 0 prog_port 0 iter 0 \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(27)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_TABLE_ENTRY_PARSE_ENTRY_PARSE_ID,                                                            
    "entry_parse",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get the type of the fec entry and parse the raw data in the given entry\r\n"
    "  according to the type.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table entry_parse fec_payload_index 0 fec_payload 0 is_first\r\n"
    "  0 entry_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(28)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_TABLE_ENTRY_PARSE_ENTRY_PARSE_FEC_ENTRY_FEC_PAYLOAD_INDEX_ID,                                                            
    "fec_payload_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fec_payload_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table entry_parse fec_payload_index 0 fec_payload 0 is_first\r\n"
    "  0 entry_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(28)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_TABLE_ENTRY_PARSE_ENTRY_PARSE_FEC_ENTRY_FEC_PAYLOAD_ID,                                                            
    "fec_payload",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fec_entry.fec_payload[ prm_fec_payload_index]:\r\n"
    "  The information of the FEC entry as in the HW table.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table entry_parse fec_payload_index 0 fec_payload 0 is_first\r\n"
    "  0 entry_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(28)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_TABLE_ENTRY_PARSE_ENTRY_PARSE_FEC_ENTRY_IS_FIRST_ID,                                                            
    "is_first",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fec_entry.is_first:\r\n"
    "  Is the current entry is the first entry in the ECMP. If this FALSE it means\r\n"
    "  that this entry is starting a new ECMP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table entry_parse fec_payload_index 0 fec_payload 0 is_first\r\n"
    "  0 entry_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(28)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_TABLE_ENTRY_PARSE_ENTRY_PARSE_FEC_ENTRY_ENTRY_TYPE_ID,                                                            
    "entry_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_FEC_ENTRY_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_FEC_ENTRY_TYPE_rule) / sizeof(SOC_PETRA_PP_FEC_ENTRY_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  fec_entry.entry_type:\r\n"
    "  The type of the FEC entry UC/MC/programmable port.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table entry_parse fec_payload_index 0 fec_payload 0 is_first\r\n"
    "  0 entry_type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(28)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_REMOVE_FEC_REMOVE_ID,                                                            
    "fec_remove",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Removes all the FEC entries that are identified by this\r\n"
    "  sys_fec_ndx, the FEC entry has to be not in use by any routing or\r\n"
    "  ACL table.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_remove sys_fec_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(29)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_REMOVE_FEC_REMOVE_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1). \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_remove sys_fec_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(29)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ROUTE_ENTRIES_GET_FEC_ROUTE_ENTRIES_GET_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0-(4G-1)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table soc_petra_pp_fec_route_entries_clear sys_fec_ndx 0 last 0 first 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MNGMNT_INIT_FEC_MNGMNT_INIT_ID,                                                            
    "fec_mngmnt_init",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Init the FEC table. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mngmnt_init dynamic_management_enable 0\r\n"
    "  nof_entries_index 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(31)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MNGMNT_INIT_FEC_MNGMNT_INIT_INIT_INFO_TABLE_DIVISION_DYNAMIC_MANAGEMENT_ENABLE_ID,                                                            
    "dynamic_management_enable",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  init_info.table_division.dynamic_management_enable:\r\n"
    "  TRUE: The user may allocate ECMP and FEC violating the initial settingsFALSE:\r\n"
    "  The user can't add FEC / ECMP entries more than what devoted in the init.\r\n"
    "  Yet, user may call for soc_petra_pp_fec_table_defrage.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mngmnt_init dynamic_management_enable 0\r\n"
    "  nof_entries_index 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(31)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MNGMNT_INIT_FEC_MNGMNT_INIT_INIT_INFO_TABLE_DIVISION_NOF_ENTRIES_INDEX_ID,                                                            
    "nof_entries_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  nof_entries_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mngmnt_init dynamic_management_enable 0\r\n"
    "  nof_entries_index 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(31)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MNGMNT_INIT_FEC_MNGMNT_INIT_INIT_INFO_TABLE_DIVISION_NOF_ENTRIES_ID,                                                            
    "nof_entries",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  init_info.table_division.nof_entries[ prm_nof_entries_index]:\r\n"
    "  The 'expected' number of entries for the FEC and each ECMP. nof_entries[k] is\r\n"
    "  the number of expected entries of the ECMP of length (k+1). These values are\r\n"
    "  used to optimize the FEC table management; No functionality will be damaged\r\n"
    "  if inaccurate.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mngmnt_init dynamic_management_enable 0\r\n"
    "  nof_entries_index 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, BIT(31)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MNGMNT_DEFRAG_FEC_MNGMNT_DEFRAG_ID,                                                            
    "clear",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Defrag the FEC table, reduces the amount of fragmentation in the FEC table. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mngmnt_defrag dynamic_management_enable 0\r\n"
    "  nof_entries_index 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(0)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MNGMNT_DEFRAG_FEC_MNGMNT_DEFRAG_DEFRAG_INFO_DYNAMIC_MANAGEMENT_ENABLE_ID,                                                            
    "dynamic_management_enable",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  defrag_info.dynamic_management_enable:\r\n"
    "  TRUE: The user may allocate ECMP and FEC violating the initial settingsFALSE:\r\n"
    "  The user can't add FEC / ECMP entries more than what devoted in the init.\r\n"
    "  Yet, user may call for soc_petra_pp_fec_table_defrage.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mngmnt_defrag dynamic_management_enable 0\r\n"
    "  nof_entries_index 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MNGMNT_DEFRAG_FEC_MNGMNT_DEFRAG_DEFRAG_INFO_NOF_ENTRIES_INDEX_ID,                                                            
    "nof_entries_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  nof_entries_index:\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mngmnt_defrag dynamic_management_enable 0\r\n"
    "  nof_entries_index 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_MNGMNT_DEFRAG_FEC_MNGMNT_DEFRAG_DEFRAG_INFO_NOF_ENTRIES_ID,                                                            
    "nof_entries",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  defrag_info.nof_entries[ prm_nof_entries_index]:\r\n"
    "  The 'expected' number of entries for the FEC and each ECMP. nof_entries[k] is\r\n"
    "  the number of expected entries of the ECMP of length (k+1). These values are\r\n"
    "  used to optimize the FEC table management; No functionality will be damaged\r\n"
    "  if inaccurate.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_mngmnt_defrag dynamic_management_enable 0\r\n"
    "  nof_entries_index 0 nof_entries 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(0)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_TABLE_STAT_INFO_GET_STAT_INFO_GET_ID,                                                            
    "stat_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get the statistic counters of the FEC table. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table stat_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(1)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_TABLE_USAGE_INFO_GET_USAGE_INFO_GET_ID,                                                            
    "usage_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get the usage of the FEC table. Number of free and used entries for each ECMP.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table usage_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(2)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_FEC_TABLE_ID,                                                            
    "fec_table",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)/*|BIT(19)|BIT(20)*/|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(31), BIT(0)|BIT(1)|BIT(2),BIT(28)|BIT(29)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } fec_table*/
#ifdef UI_ARP_TABLE/* { arp_table*/
  {                                                                                        
    PARAM_PETRA_PP_ARP_SET_ARP_SET_ID,                                                            
    "arp_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the ARP info (MAC address).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table arp_set arp_ndx 0 mac 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(3)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ARP_SET_ARP_SET_ARP_NDX_ID,                                                            
    "arp_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  arp_ndx:\r\n"
    "  arp index, offset in the arp table to set the arp info.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table arp_set arp_ndx 0 mac 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(3)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ARP_SET_ARP_SET_ARP_INFO_MAC_ID,                                                            
    "mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  arp_info.mac:\r\n"
    "  Mac address to the next hop.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table arp_set arp_ndx 0 mac 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(3)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ARP_GET_ARP_GET_ID,                                                            
    "arp_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the ARP info (MAC address).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table arp_get arp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(4)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ARP_GET_ARP_GET_ARP_NDX_ID,                                                            
    "arp_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  arp_ndx:\r\n"
    "  arp index, offset in the arp table to set the arp info.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table arp_get arp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ARP_ADD_ARP_ADD_ID,                                                            
    "add",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Add the ARP info (MAC address).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table add mac 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(5)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
 {                                                                                        
    PARAM_PETRA_PP_ARP_GET_ARP_ADD_ARP_COUNT_ID,                                                            
    "count",
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  count:\r\n"
    "  arp index, offset in the arp table to set the arp info.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table arp_get arp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ARP_ADD_ARP_ADD_ARP_INFO_MAC_ID,                                                            
    "mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  arp_info.mac:\r\n"
    "  Mac address to the next hop.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table add mac 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(5)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ARP_REMOVE_ARP_REMOVE_ID,                                                            
    "remove",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Remove the ARP info (MAC address).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table remove mac 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(6)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ARP_REMOVE_ARP_REMOVE_ARP_INFO_MAC_ID,                                                            
    "mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  arp_info.mac:\r\n"
    "  Mac address to the next hop.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table remove mac 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ARP_REMOVE_BY_INDEX_ARP_REMOVE_BY_INDEX_ID,                                                            
    "remove_by_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Remove ARP info (MAC address) according to arp index\r\n"
    "  returned by the add operation. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table remove_by_index arp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(7)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ARP_REMOVE_BY_INDEX_ARP_REMOVE_BY_INDEX_ARP_NDX_ID,                                                            
    "arp_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  arp_ndx:\r\n"
    "  index identify the place where the MAC address where added into\r\n"
    "  the ARP table.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table remove_by_index arp_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {
    PARAM_PETRA_PP_ARP_REMOVE_ARP_CLEAR_ID,                                                            
    "clear",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  clear ARP info (MAC address) \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table clear \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(30)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {
    PARAM_PETRA_PP_ARP_REMOVE_ARP_PRINT_ID,                                                            
    "print",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  print ARP info (MAC address) \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table print \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(31)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_ARP_REMOVE_ARP_PRINT_SW_ID,                                                            
    "sw",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sw:\r\n"
    "  print SW DB of the ARP table with ref counter\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table sw hw\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(31)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_ARP_REMOVE_ARP_PRINT_HW_ID,                                                            
    "hw",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sw:\r\n"
    "  print ARP table according to the HW table \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api arp_table sw hw\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(31)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_API_ARP_TABLE_ID,                                                            
    "arp_table",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(30)|BIT(31)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } arp_table*/
#ifdef UI_IPV4_UC/* { ipv4_uc*/
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_ADD_IPV4_UNICAST_ROUTE_ADD_ID,                                                            
    "add",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Binds between Ipv4 Unicast route key (IP-address/prefix) and a Unicast FEC\r\n"
    "  entry identified by the given sys_fec_id for a given virtual router. As a\r\n"
    "  result of this operation Unicast Ipv4 packets designated to IP address match\r\n"
    "  the given key (as long there is no more specific route key) will be routed\r\n"
    "  according to the information in the FEC entry identified by sys_fec_id.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_add vrf_id 0 prefix_len 0 ip_address\r\n"
    "  0 sys_fec_id 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(8)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_ADD_IPV4_UNICAST_ROUTE_ADD_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_add vrf_id 0 prefix_len 0 ip_address\r\n"
    "  0 sys_fec_id 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_ADD_IPV4_UNICAST_ROUTE_ADD_ROUTE_KEY_PREFIX_LEN_ID,                                                            
    "prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_add vrf_id 0 prefix_len 0 ip_address\r\n"
    "  0 sys_fec_id 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_ADD_IPV4_UNICAST_ROUTE_ADD_ROUTE_KEY_IP_ADDRESS_ID,                                                            
    "ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_add vrf_id 0 prefix_len 0 ip_address\r\n"
    "  0 sys_fec_id 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_ADD_IPV4_UNICAST_ROUTE_ADD_SYS_FEC_ID_ID,                                                            
    "sys_fec_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_id:\r\n"
    "  system FEC id. Range 0- 4G\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_add vrf_id 0 prefix_len 0 ip_address\r\n"
    "  0 sys_fec_id 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_ADD_IPV4_UNICAST_ROUTE_ADD_OVERRIDE_ID,                                                            
    "override",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  override:\r\n"
    "  whether to override the entry if it already exists, if this is\r\n"
    "  FALSE and the entry exist error is returned.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_add vrf_id 0 prefix_len 0 ip_address\r\n"
    "  0 sys_fec_id 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_GET_IPV4_UNICAST_ROUTE_GET_ID,                                                            
    "get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets the system-FEC-id associated with the given key (IP- \r\n"
    "  address/prefix). \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_get vrf_id 0 prefix_len 0 ip_address\r\n"
    "  0 exact_match 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(9)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_GET_IPV4_UNICAST_ROUTE_GET_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_get vrf_id 0 prefix_len 0 ip_address\r\n"
    "  0 exact_match 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_GET_IPV4_UNICAST_ROUTE_GET_ROUTE_KEY_PREFIX_LEN_ID,                                                            
    "prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_get vrf_id 0 prefix_len 0 ip_address\r\n"
    "  0 exact_match 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_GET_IPV4_UNICAST_ROUTE_GET_ROUTE_KEY_IP_ADDRESS_ID,                                                            
    "ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_get vrf_id 0 prefix_len 0 ip_address\r\n"
    "  0 exact_match 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_GET_IPV4_UNICAST_ROUTE_GET_EXACT_MATCH_ID,                                                            
    "exact_match",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  exact_match:\r\n"
    "  to find only exact match or best match.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_get vrf_id 0 prefix_len 0 ip_address\r\n"
    "  0 exact_match 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_LPM_GET_IPV4_UNICAST_ROUTE_LPM_GET_ID,                                                            
    "lpm_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get from the routing table a route key with the longest prefix\r\n"
    "  that matches the given key.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_lpm_get vrf_id 0 prefix_len 0\r\n"
    "  ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(10)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_LPM_GET_IPV4_UNICAST_ROUTE_LPM_GET_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_lpm_get vrf_id 0 prefix_len 0\r\n"
    "  ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_LPM_GET_IPV4_UNICAST_ROUTE_LPM_GET_ROUTE_KEY_PREFIX_LEN_ID,                                                            
    "prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_lpm_get vrf_id 0 prefix_len 0\r\n"
    "  ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_LPM_GET_IPV4_UNICAST_ROUTE_LPM_GET_ROUTE_KEY_IP_ADDRESS_ID,                                                            
    "ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_lpm_get vrf_id 0 prefix_len 0\r\n"
    "  ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_GET_BLOCK_IPV4_UNICAST_ROUTE_GET_BLOCK_ID,                                                            
    "get_block",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get block of entries from the routing table in a given range.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc get_block vrf_id 0 entries_to_act 0\r\n"
    "  entries_to_scan 0 payload 0 type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(11)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_GET_BLOCK_IPV4_UNICAST_ROUTE_GET_BLOCK_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc get_block vrf_id 0 entries_to_act 0\r\n"
    "  entries_to_scan 0 payload 0 type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_GET_BLOCK_IPV4_UNICAST_ROUTE_GET_BLOCK_NEXT_HOP_ID_ID,                                                            
    "flavor_only_fec_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  print full table info including next hop info:\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_GET_BLOCK_IPV4_UNICAST_ROUTE_GET_BLOCK_RANGE_ENTRIES_TO_ACT_ID,                                                            
    "entries_to_act",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  range.entries_to_act:\r\n"
    "  Number of entries to read/modify.Stop After retrieving this number of entries.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc get_block vrf_id 0 entries_to_act 0\r\n"
    "  entries_to_scan 0 payload 0 type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_GET_BLOCK_IPV4_UNICAST_ROUTE_GET_BLOCK_RANGE_ENTRIES_TO_SCAN_ID,                                                            
    "entries_to_scan",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  range.entries_to_scan:\r\n"
    "  The number of entries to scan.Stop After scanning this number of entries.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc get_block vrf_id 0 entries_to_act 0\r\n"
    "  entries_to_scan 0 payload 0 type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_GET_BLOCK_IPV4_UNICAST_ROUTE_GET_BLOCK_RANGE_START_PAYLOAD_ID,                                                            
    "payload",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  range.start.payload:\r\n"
    "  Iterator information to be used to traverse the L3 routing tables.- this\r\n"
    "  information should be changed only by the given macros.- To set the iterator\r\n"
    "  to start scanning the routing table from the\r\n"
    "  beginning use SOC_PETRA_PP_L3_TABLE_ITER_BEGIN()- To check if the returned\r\n"
    "  iteratror points to the end of the table use SOC_PETRA_PP_L3_TABLE_ITER_IS_END()\r\n"
    "  - See a concrete example of using this Type at\r\n"
    "  soc_petra_pp_route_get_block()\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc get_block vrf_id 0 entries_to_act 0\r\n"
    "  entries_to_scan 0 payload 0 type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_GET_BLOCK_IPV4_UNICAST_ROUTE_GET_BLOCK_RANGE_START_TYPE_ID,                                                            
    "type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_L3_TABLE_ITER_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_L3_TABLE_ITER_TYPE_rule) / sizeof(SOC_PETRA_PP_L3_TABLE_ITER_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  range.start.type:\r\n"
    "  The type of the iterator. (fast, ordered ...)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc get_block vrf_id 0 entries_to_act 0\r\n"
    "  entries_to_scan 0 payload 0 type 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_IPV4_UNICAST_ROUTE_REMOVE_ID,                                                            
    "remove",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Remove the association of the IP-address to Unicast FEC.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove vrf_id 0 prefix_len 0\r\n"
    "  ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(12)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_IPV4_UNICAST_ROUTE_REMOVE_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove vrf_id 0 prefix_len 0\r\n"
    "  ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_IPV4_UNICAST_ROUTE_REMOVE_ROUTE_KEY_PREFIX_LEN_ID,                                                            
    "prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove vrf_id 0 prefix_len 0\r\n"
    "  ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_IPV4_UNICAST_ROUTE_REMOVE_ROUTE_KEY_IP_ADDRESS_ID,                                                            
    "ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove vrf_id 0 prefix_len 0\r\n"
    "  ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_BLOCK_IPV4_UNICAST_ROUTE_REMOVE_BLOCK_ID,                                                            
    "remove_block",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Remove a block of entries from the routing table of virtual routing in a\r\n"
    "  given range.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove_block vrf_id 0 payload 0 type\r\n"
    "  0 entries_to_scan 0 entries_to_remove 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(13)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_BLOCK_IPV4_UNICAST_ROUTE_REMOVE_BLOCK_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove_block vrf_id 0 payload 0 type\r\n"
    "  0 entries_to_scan 0 entries_to_remove 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_BLOCK_IPV4_UNICAST_ROUTE_REMOVE_BLOCK_ITER_PAYLOAD_ID,                                                            
    "payload",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  iter.payload:\r\n"
    "  Iterator information to be used to traverse the L3 routing tables.- this\r\n"
    "  information should be changed only by the given macros.- To set the iterator\r\n"
    "  to start scanning the routing table from the\r\n"
    "  beginning use SOC_PETRA_PP_L3_TABLE_ITER_BEGIN()- To check if the returned\r\n"
    "  iteratror points to the end of the table use SOC_PETRA_PP_L3_TABLE_ITER_IS_END()\r\n"
    "  - See a concrete example of using this Type at\r\n"
    "  soc_petra_pp_route_get_block()\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove_block vrf_id 0 payload 0 type\r\n"
    "  0 entries_to_scan 0 entries_to_remove 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_BLOCK_IPV4_UNICAST_ROUTE_REMOVE_BLOCK_ITER_TYPE_ID,                                                            
    "type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_L3_TABLE_ITER_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_L3_TABLE_ITER_TYPE_rule) / sizeof(SOC_PETRA_PP_L3_TABLE_ITER_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  iter.type:\r\n"
    "  The type of the iterator. (fast, ordered ...)\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove_block vrf_id 0 payload 0 type\r\n"
    "  0 entries_to_scan 0 entries_to_remove 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_BLOCK_IPV4_UNICAST_ROUTE_REMOVE_BLOCK_ENTRIES_TO_SCAN_ID,                                                            
    "entries_to_scan",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  entries_to_scan:\r\n"
    "  Number of entries to scan in the routing table\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove_block vrf_id 0 payload 0 type\r\n"
    "  0 entries_to_scan 0 entries_to_remove 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_BLOCK_IPV4_UNICAST_ROUTE_REMOVE_BLOCK_ENTRIES_TO_REMOVE_ID,                                                            
    "entries_to_remove",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  entries_to_remove:\r\n"
    "  Number of entries to remove from the routing table\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove_block vrf_id 0 payload 0 type\r\n"
    "  0 entries_to_scan 0 entries_to_remove 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_ALL_IPV4_UNICAST_ROUTE_REMOVE_ALL_ID,                                                            
    "remove_all",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Remove all the entries in the route table of the given virtual router.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove_all vrf_id 0 remove_default 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(14)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_ALL_IPV4_UNICAST_ROUTE_REMOVE_ALL_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove_all vrf_id 0 remove_default 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_REMOVE_ALL_IPV4_UNICAST_ROUTE_REMOVE_ALL_REMOVE_DEFAULT_ID,                                                            
    "remove_default",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  remove_default:\r\n"
    "  if TRUE then remove the default routing entry.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_remove_all vrf_id 0 remove_default 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_TABLE_STATUS_IPV4_UNICAST_ROUTE_TABLE_STATUS_ID,                                                            
    "table_status",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get the status of the Unicast route table, Including the number of allocated\r\n"
    "  unicast routes and number of free entries.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_table_status vrf_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(15)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_ROUTE_TABLE_STATUS_IPV4_UNICAST_ROUTE_TABLE_STATUS_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc route_table_status vrf_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_DEFRAGMENT_IPV4_UNICAST_DEFRAGMENT_ID,                                                            
    "defragment",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Defrag the ipv4 Unicast table. As a result of acting on the FEC table the\r\n"
    "  memory of the device could be fragmented. So the defrage operation will\r\n"
    "  rearrange memory division to get better utilization. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc defragment requested_nof_steps 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(16)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_UNICAST_DEFRAGMENT_IPV4_UNICAST_DEFRAGMENT_REQUESTED_NOF_STEPS_ID,                                                            
    "requested_nof_steps",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  requested_nof_steps:\r\n"
    "  The maximal number of defragmentation steps that should be done on the table.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc defragment requested_nof_steps 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(16)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_EXCEPTION_PACKET_TYPE_SET_IPV4_EXCEPTION_PACKET_TYPE_SET_ID,                                                            
    "exception_packet_type_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the router treatment upon 'exceptional' packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc ipv4_exception_packet_type_set packet_type_ndx 0 arp_ptr\r\n"
    "  0 out_vid 0 cos_action_ptr 0 dest_val 0 dest_type 0 forward_type 0 trap 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_EXCEPTION_PACKET_TYPE_SET_IPV4_EXCEPTION_PACKET_TYPE_SET_PACKET_TYPE_NDX_ID,                                                            
    "packet_type_ndx",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_rule) / sizeof(SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  packet_type_ndx:\r\n"
    "  Packets with exceptional type (TTL = 0/1, with L4options etc..).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc ipv4_exception_packet_type_set packet_type_ndx 0 arp_ptr\r\n"
    "  0 out_vid 0 cos_action_ptr 0 dest_val 0 dest_type 0 forward_type 0 trap 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_EXCEPTION_PACKET_TYPE_SET_IPV4_EXCEPTION_PACKET_TYPE_SET_EXP_INFO_ARP_PTR_ID,                                                            
    "arp_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  exp_info.arp_ptr:\r\n"
    "  pointer to a MAC address to be used as DA for outgoing packet. Range 0-4095.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc ipv4_exception_packet_type_set packet_type_ndx 0 arp_ptr\r\n"
    "  0 out_vid 0 cos_action_ptr 0 dest_val 0 dest_type 0 forward_type 0 trap 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_EXCEPTION_PACKET_TYPE_SET_IPV4_EXCEPTION_PACKET_TYPE_SET_EXP_INFO_OUT_VID_ID,                                                            
    "out_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  exp_info.out_vid:\r\n"
    "  Outgoing VLAN ID.Rang 0-4095. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc ipv4_exception_packet_type_set packet_type_ndx 0 arp_ptr\r\n"
    "  0 out_vid 0 cos_action_ptr 0 dest_val 0 dest_type 0 forward_type 0 trap 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_EXCEPTION_PACKET_TYPE_SET_IPV4_EXCEPTION_PACKET_TYPE_SET_EXP_INFO_COS_ACTION_PTR_ID,                                                            
    "cos_action_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  exp_info.cos_action_ptr:\r\n"
    "  Selects one of the Cos actions defined according to\r\n"
    "  soc_petra_pp_fec_cos_action_set. Range 0-15\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc ipv4_exception_packet_type_set packet_type_ndx 0 arp_ptr\r\n"
    "  0 out_vid 0 cos_action_ptr 0 dest_val 0 dest_type 0 forward_type 0 trap 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_EXCEPTION_PACKET_TYPE_SET_IPV4_EXCEPTION_PACKET_TYPE_SET_EXP_INFO_TRAP_DESTINATION_DEST_VAL_ID,                                                            
    "dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  exp_info.trap_destination.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc ipv4_exception_packet_type_set packet_type_ndx 0 arp_ptr\r\n"
    "  0 out_vid 0 cos_action_ptr 0 dest_val 0 dest_type 0 forward_type 0 trap 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_EXCEPTION_PACKET_TYPE_SET_IPV4_EXCEPTION_PACKET_TYPE_SET_EXP_INFO_TRAP_DESTINATION_DEST_TYPE_ID,                                                            
    "dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  exp_info.trap_destination.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc ipv4_exception_packet_type_set packet_type_ndx 0 arp_ptr\r\n"
    "  0 out_vid 0 cos_action_ptr 0 dest_val 0 dest_type 0 forward_type 0 trap 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_EXCEPTION_PACKET_TYPE_SET_IPV4_EXCEPTION_PACKET_TYPE_SET_EXP_INFO_FORWARD_TYPE_ID,                                                            
    "forward_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_FRWRD_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  exp_info.forward_type:\r\n"
    "  The forwarding action type. Should be Normal or Control. Cannot be Normal.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc ipv4_exception_packet_type_set packet_type_ndx 0 arp_ptr\r\n"
    "  0 out_vid 0 cos_action_ptr 0 dest_val 0 dest_type 0 forward_type 0 trap 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_EXCEPTION_PACKET_TYPE_SET_IPV4_EXCEPTION_PACKET_TYPE_SET_EXP_INFO_TRAP_ID,                                                            
    "trap",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  exp_info.trap:\r\n"
    "  If True then the packet is exceptional and it will be forwarded according to\r\n"
    "  other fields below. Otherwise the Packet is normal and forwarded normally\r\n"
    "  according to the routing table.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc ipv4_exception_packet_type_set packet_type_ndx 0 arp_ptr\r\n"
    "  0 out_vid 0 cos_action_ptr 0 dest_val 0 dest_type 0 forward_type 0 trap 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(30)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_EXCEPTION_PACKET_TYPE_GET_IPV4_EXCEPTION_PACKET_TYPE_GET_ID,                                                            
    "exception_packet_type_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the router treatment upon 'exceptional' packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc ipv4_exception_packet_type_get packet_type_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(31)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_EXCEPTION_PACKET_TYPE_GET_IPV4_EXCEPTION_PACKET_TYPE_GET_PACKET_TYPE_NDX_ID,                                                            
    "packet_type_ndx",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_rule) / sizeof(SOC_PETRA_PP_IPV4_EXCEPTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  packet_type_ndx:\r\n"
    "  Packets with exceptional type (TTL = 0/1, with L4options etc..).\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc ipv4_exception_packet_type_get packet_type_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(31)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_EXCEPTION_PACKET_TYPE_PRINT_ALL_IPV4_EXCEPTION_PACKET_TYPE_PRINT_ALL_ID,                                                            
    "exception_packet_type_print_all",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Print IPV4 exceptions configurations.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_uc ipv4_exception_packet_type_print_all\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(0)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ECMPS_INFO_SET_FEC_ECMPS_INFO_SET_ID,                                                            
    "ecmps_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ECMPs configuration includes the hashing building. Set which\r\n"
    "  fields/attributes of the packet take place in the selection (hashing) of the\r\n"
    "  ECMP member. If attribute x take place in the Hash calculation (set to 1),\r\n"
    "  then two traffic streams that differ in the value of x MAY be routed\r\n"
    "  according to different ECMP's members.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_ecmps_info_set hash_select 0 hash_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(28)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ECMPS_INFO_SET_FEC_ECMPS_INFO_SET_ECMPS_INFO_HASH_SELECT_ID,                                                            
    "hash_select",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ecmps_info.hash_select:\r\n"
    "  selects one of 3 hash functions.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_ecmps_info_set hash_select 0 hash_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(28)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ECMPS_INFO_SET_FEC_ECMPS_INFO_SET_ECMPS_INFO_HASH_MASK_ID,                                                            
    "hash_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ecmps_info.hash_mask:\r\n"
    "  the ECMP Hash mask. Each bit, when equal to zero, disables\r\n"
    "  the corresponding field in the ECMP hash calculation. The bits are defined as\r\n"
    "  follows:\r\n"
    "  - BIT(0) - SrcPort\r\n"
    "  - BIT(1) - DstPort\r\n"
    "  - BIT(2) - Protocol\r\n"
    "  - BIT(3) - SrcIP\r\n"
    "  - BIT(4) - DstIP\r\n"
    "  - BIT(5) - FAP port\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_ecmps_info_set hash_select 0 hash_mask 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(28)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_FEC_ECMPS_INFO_GET_FEC_ECMPS_INFO_GET_ID,                                                            
    "ecmps_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ECMPs configuration includes the hashing building. Set which\r\n"
    "  fields/attributes of the packet take place in the selection (hashing) of the\r\n"
    "  ECMP member. If attribute x take place in the Hash calculation (set to 1),\r\n"
    "  then two traffic streams that differ in the value of x MAY be routed\r\n"
    "  according to different ECMP's members.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api fec_table fec_ecmps_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(29)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_IPV4_UC_ID,                                                            
    "ipv4_uc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16),BIT(16)|BIT(17)|BIT(18)|BIT(26)|BIT(27)|BIT(30)|BIT(31),BIT(0)},
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } ipv4_uc*/
#ifdef UI_ACL/* { acl*/
  {                                                                                        
    PARAM_PETRA_PP_ACL_STAT_GET_STAT_GET_ID,                                                            
    "stat_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get the status of the ACL, including the number of entries in use.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl stat_get acl_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(1)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_STAT_GET_STAT_GET_ACL_NDX_ID,                                                            
    "acl_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  acl_ndx:\r\n"
    "  ACL ID to get the status for. Range 0-3.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl stat_get acl_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(1)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ID,                                                            
    "add",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Add ACE (Access Control Entry) to the given ACL. On packet lookup, between\r\n"
    "  all the ACEs that match the key constructed from the packet, the ACE with the\r\n"
    "  lowest priority will be chosen. For example If 'priority-1' < 'priority-2',\r\n"
    "  and both match the given key then 'priority-1' will be chosen.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl add acl_ndx 0 port_range_valid 0 max_dest_port 0\r\n"
    "  min_dest_port 0 max_src_port 0 min_src_port 0 mask 0 val 0 mask 0 val 0 mask\r\n"
    "  0 val 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 mask 0 val 0 mask\r\n"
    "  0 val 0 mask 0 val 0 mask 0 val 0 dest_mac_mask_index 0 dest_mac_mask 0\r\n"
    "  dest_mac 0 src_mac_mask_index 0 src_mac_mask 0 src_mac 0 mask 0 val 0 mask 0\r\n"
    "  val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0\r\n"
    "  val 0 mask 0 val 0 mask 0 val 0 in_port_type_valid 0 in_port_type 0 type 0\r\n"
    "  priority 0 id 0 action_mask 0 cos_action 0 vid 0 dest_val 0 dest_type 0\r\n"
    "  action_mask 0 cos_action 0 fec_ptr 0 type 0 overwrite 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0,  BIT(2)|BIT(7)|BIT(8)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACL_NDX_ID,                                                            
    "acl_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  acl_ndx:\r\n"
    "  ACL ID to add to. Range 0-3. Where\r\n"
    "  - ACL 1 is stronger than ACL 0 when there's collision on the\r\n"
    "  decision.\r\n"
    "  - ACL 3 is stronger than ACL 2 when there's collision on the\r\n"
    "  decision.\r\n"
    "  - ACL 2 and 3 may be affected by the result of ACL 0 and 1.\r\n"
    "  - For each ACL (0-3) user can add L2/L3 ACEs.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl add acl_ndx 0 port_range_valid 0 max_dest_port 0\r\n"
    "  min_dest_port 0 max_src_port 0 min_src_port 0 mask 0 val 0 mask 0 val 0 mask\r\n"
    "  0 val 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 mask 0 val 0 mask\r\n"
    "  0 val 0 mask 0 val 0 mask 0 val 0 dest_mac_mask_index 0 dest_mac_mask 0\r\n"
    "  dest_mac 0 src_mac_mask_index 0 src_mac_mask 0 src_mac 0 mask 0 val 0 mask 0\r\n"
    "  val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0\r\n"
    "  val 0 mask 0 val 0 mask 0 val 0 in_port_type_valid 0 in_port_type 0 type 0\r\n"
    "  priority 0 id 0 action_mask 0 cos_action 0 vid 0 dest_val 0 dest_type 0\r\n"
    "  action_mask 0 cos_action 0 fec_ptr 0 type 0 overwrite 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(2)|BIT(7)|BIT(8)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_L2_ID,                                                            
    "l2",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Add ACE (Access Control Entry) to the given ACL. On packet lookup, between\r\n"
    "  all the ACEs that match the key constructed from the packet, the ACE with the\r\n"
    "  lowest priority will be chosen. For example If 'priority-1' < 'priority-2',\r\n"
    "  and both match the given key then 'priority-1' will be chosen.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(2)|BIT(7)},                                                                              
    5,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_L3A_ID,                                                            
    "l3a",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Add ACE (Access Control Entry) to the given ACL. On packet lookup, between\r\n"
    "  all the ACEs that match the key constructed from the packet, the ACE with the\r\n"
    "  lowest priority will be chosen. For example If 'priority-1' < 'priority-2',\r\n"
    "  and both match the given key then 'priority-1' will be chosen.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(2)|BIT(8)},                                                                              
    5,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_L3B_ID,                                                            
    "l3b",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Add ACE (Access Control Entry) to the given ACL. On packet lookup, between\r\n"
    "  all the ACEs that match the key constructed from the packet, the ACE with the\r\n"
    "  lowest priority will be chosen. For example If 'priority-1' < 'priority-2',\r\n"
    "  and both match the given key then 'priority-1' will be chosen.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(2)|BIT(8)},                                                                              
    5,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L4_INFO_PORT_RANGE_VALID_ID,                                                            
    "l4_port_range_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.port_range_valid:\r\n"
    "  If TRUE then port_range considered as part of the ACE. Otherwise it masked\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L4_INFO_PORT_RANGE_MAX_DEST_PORT_ID,                                                            
    "l4_max_dest_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.port_range.max_dest_port:\r\n"
    "  The maximum Destination port in the range. Size: 16 bits. Range 0-65535.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L4_INFO_PORT_RANGE_MIN_DEST_PORT_ID,                                                            
    "l4_min_dest_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.port_range.min_dest_port:\r\n"
    "  The minimum Destination port in the range. Size: 16 bits. Range 0-65535.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L4_INFO_PORT_RANGE_MAX_SRC_PORT_ID,                                                            
    "l4_max_src_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.port_range.max_src_port:\r\n"
    "  The maximum Source port in the range. Size: 16 bits. Range 0-65535.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L4_INFO_PORT_RANGE_MIN_SRC_PORT_ID,                                                            
    "l4_min_src_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.port_range.min_src_port:\r\n"
    "  The minimum Source port in the range. Size: 16 bits. Range 0-65535.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L4_INFO_DEST_PORT_MASK_ID,                                                            
    "l4_dest_port_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.dest_port.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L4_INFO_DEST_PORT_VAL_ID,                                                            
    "l4_dest_port_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.dest_port.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L4_INFO_SRC_PORT_MASK_ID,                                                            
    "l4_src_port_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.src_port.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L4_INFO_SRC_PORT_VAL_ID,                                                            
    "l4_src_port_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.src_port.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L4_INFO_TCP_CTRL_OPS_MASK_ID,                                                            
    "l4_tcp_ctrl_ops_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.tcp_ctrl_ops.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L4_INFO_TCP_CTRL_OPS_VAL_ID,                                                            
    "l4_tcp_ctrl_ops_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.tcp_ctrl_ops.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L3_INFO_DEST_IP_PREFIX_LEN_ID,                                                            
    "l3_dest_ip_prefix",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.dest_ip.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L3_INFO_DEST_IP_IP_ADDRESS_ID,                                                            
    "l3_dest_ip_addr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.dest_ip.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L3_INFO_SRC_IP_PREFIX_LEN_ID,                                                            
    "l3_src_ip_prefix",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.src_ip.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L3_INFO_SRC_IP_IP_ADDRESS_ID,                                                            
    "l3_src_ip_add",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.src_ip.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L3_INFO_PROTOCOL_CODE_MASK_ID,                                                            
    "l3_prtcl_code_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.protocol_code.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L3_INFO_PROTOCOL_CODE_VAL_ID,                                                            
    "l3_prtcl_code_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.protocol_code.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L3_INFO_TOS_MASK_ID,                                                            
    "l3_tos_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.tos.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L3_INFO_TOS_VAL_ID,                                                            
    "l3_tos_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.tos.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L3_INFO_IN_VID_MASK_ID,                                                            
    "vid_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.in_vid.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFFFFFF to consider the\r\n"
    "  exact value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L3_INFO_IN_VID_VAL_ID,                                                            
    "vid_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.in_vid.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L3_INFO_IN_LOCAL_PORT_ID_MASK_ID,                                                            
    "port_id_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.in_local_port_id.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFFFFFF to consider the\r\n"
    "  exact value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L3_L4_INFO_L3_INFO_IN_LOCAL_PORT_ID_VAL_ID,                                                            
    "local_port_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.in_local_port_id.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_DEST_MAC_MASK_ID,                                                            
    "dest_mac_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.dest_mac_mask[ prm_dest_mac_mask_index]:\r\n"
    "  Mask on the Destination MAC address. 1 to consider the corresponding bit, and\r\n"
    "  zero to ignore it.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_DEST_MAC_ID,                                                            
    "dest_mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.dest_mac:\r\n"
    "  Destination MAC\r\n"
    "  Address. \r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_SRC_MAC_MASK_ID,                                                            
    "src_mac_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.src_mac_mask[ prm_src_mac_mask_index]:\r\n"
    "  Mask on the source MAC address. 1 to consider the corresponding bit, and zero\r\n"
    "  to ignore it.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_SRC_MAC_ID,                                                            
    "src_mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.src_mac:\r\n"
    "  Source MAC Address. \r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_ETHER_TYPE_MASK_ID,                                                            
    "ether_type_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.ether_type.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_ETHER_TYPE_DSAP_ID,                                                            
    "ether_type_dsap_sssap",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.ether_type.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_ETHER_TYPE_VAL_ID,                                                            
    "ether_type_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.ether_type.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_S_TAG_DEI_MASK_ID,                                                            
    "s_dei_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.Dei.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_S_TAG_DEI_VAL_ID,                                                            
    "s_dei_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.Dei.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_S_TAG_PCP_MASK_ID,                                                            
    "s_pcp_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.Pcp.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_S_TAG_PCP_VAL_ID,                                                            
    "s_pcp_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.Pcp.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_S_TAG_VID_MASK_ID,                                                            
    "s_vid_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.Vid.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFFFFFF to consider the\r\n"
    "  exact value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_S_TAG_VID_VAL_ID,                                                            
    "s_vid_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.Vid.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_S_TAG_TAG_EXIST_MASK_ID,                                                            
    "s_exist_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.tag_exist.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_S_TAG_TAG_EXIST_VAL_ID,                                                            
    "s_tag_exist_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.tag_exist.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_C_TAG_DEI_MASK_ID,                                                            
    "c_tag_dei_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.Dei.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_C_TAG_DEI_VAL_ID,                                                            
    "c_tag_dei_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.Dei.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_C_TAG_PCP_MASK_ID,                                                            
    "c_tag_pcp_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.Pcp.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_C_TAG_PCP_VAL_ID,                                                            
    "c_tag_pcp_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.Pcp.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_C_TAG_VID_MASK_ID,                                                            
    "c_vid_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.Vid.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFFFFFF to consider the\r\n"
    "  exact value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_C_TAG_VID_VAL_ID,                                                            
    "c_vid_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.Vid.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_C_TAG_TAG_EXIST_MASK_ID,                                                            
    "c_tag_exit_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.tag_exist.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_C_TAG_TAG_EXIST_VAL_ID,                                                            
    "c_tag_exit_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.tag_exist.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_IN_LOCAL_PORT_ID_MASK_ID,                                                            
    "local_port_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.in_local_port_id.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFFFFFF to consider the\r\n"
    "  exact value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_IN_LOCAL_PORT_ID_VAL_ID,                                                            
    "local_port_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.in_local_port_id.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_IN_PORT_TYPE_VALID_ID,                                                            
    "in_port_type_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.in_port_type_valid:\r\n"
    "  Is in_port_type valid, or it's masked.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_VAL_L2_INFO_IN_PORT_TYPE_ID,                                                            
    "in_port_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.in_port_type:\r\n"
    "  The l2 port type (VBP,CEP,CNP,PNP). \r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_PRIORITY_ID,                                                            
    "priority",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.priority:\r\n"
    "  The priority of the ACE to add. The smaller the priority value, the higher\r\n"
    "  will be the priority of the ACE. \r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(2)|BIT(7)|BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACE_ID_ID,                                                            
    "ace_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.id:\r\n"
    "  The ID of the ACE, should be unique for each ACE.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(2)|BIT(7)|BIT(8)},                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACTION_INFO_VAL_L2_UPDATE_VID_ID,                                                            
    "action_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  action_info.val.l2_update.vid:\r\n"
    "  New VID to be assigned to the Packet.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)|BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACTION_INFO_VAL_L2_UPDATE_DEST_DEST_VAL_ID,                                                            
    "action_dest_val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  action_info.val.l2_update.dest.dest_val:\r\n"
    "  The destination value, according to the type (Single, RLAG or GLAG,LIF...)For\r\n"
    "  LAG the value is the group ID.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)|BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACTION_INFO_VAL_L2_UPDATE_DEST_DEST_TYPE_ID,                                                            
    "action_dest_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_DEST_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  action_info.val.l2_update.dest.dest_type:\r\n"
    "  The type of the following destination ID\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)|BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACTION_INFO_VAL_L3_UPDATE_COS_ACTION_ID,                                                            
    "action_cos",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  action_info.val.l3_update.cos_action:\r\n"
    "  Pointer to a CoS Action.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)|BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACTION_INFO_VAL_L3_UPDATE_FEC_PTR_ID,                                                            
    "action_fec_ptr",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  action_info.val.l3_update.fec_ptr:\r\n"
    "  Pointer to a unicast FEC entry stored in the same FEC table used for IPv4 and\r\n"
    "  IPv6 routing\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)|BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_ACTION_INFO_TYPE_ID,                                                            
    "action_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_ACL_ACTION_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_ACL_ACTION_TYPE_rule) / sizeof(SOC_PETRA_PP_ACL_ACTION_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  action_info.type:\r\n"
    "  The type of the action, indicates which fields to modify. The rest of the\r\n"
    "  fields are considered / ignored according to this type. see\r\n"
    "  SOC_PETRA_PP_ACL_ACTION_TYPE. \r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(7)|BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_ADD_ACE_ADD_OVERWRITE_ID,                                                            
    "overwrite",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  overwrite:\r\n"
    "  Whether to overwrite the exist ACE with the given ace_id,\r\n"
    "  if over_write is FALSE and there is already ACE with the given\r\n"
    "  ID, then success is set to FALSE.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(2)|BIT(7)|BIT(8)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
 {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_REMOVE_ACE_REMOVE_ID,                                                            
    "remove",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Remove ACE (Access Control Entry) with the ID ace_id_ndx from the\r\n"
    "  given ACL. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl remove acl_ndx 0 ace_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(3)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_REMOVE_ACE_REMOVE_ACL_NDX_ID,                                                            
    "acl_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  acl_ndx:\r\n"
    "  ACL ID to remove ACE from. Range 0-3.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl remove acl_ndx 0 ace_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(3)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_REMOVE_ACE_REMOVE_ACE_ID_NDX_ID,                                                            
    "ace_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace_id_ndx:\r\n"
    "  The ACE to remove from the ACE. The smaller the ace_ndx,\r\n"
    "  the higher will be the priority of the ACE. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl remove acl_ndx 0 ace_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(3) },                                                                              
    4,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_ACE_GET_ID,                                                            
    "get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets the ACE (Access Control Entry) with the ace_id_ndx in the given ACL.\r\n"
    "  With the action this ACE is associated with.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl get acl_ndx 0 ace_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(4)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_ACE_GET_ACL_NDX_ID,                                                            
    "acl_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  acl_ndx:\r\n"
    "  ACL ID to get the ACE from. Range 0-3.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl get acl_ndx 0 ace_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_ACE_GET_ACE_ID_NDX_ID,                                                            
    "ace_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace_id_ndx:\r\n"
    "  The priority of the ACE to get.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl get acl_ndx 0 ace_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(4)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BLOCK_ACE_GET_BLOCK_ID,                                                            
    "get_block",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets a block of entries from ACL acl_ndx, with the Actions these ACEs are\r\n"
    "  associated with.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl get_block acl_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(5)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BLOCK_ACE_GET_BLOCK_ACL_NDX_ID,                                                            
    "acl_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  acl_ndx:\r\n"
    "  ACL ID to get the ACEs from. Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl get_block acl_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(5)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BLOCK_ACE_GET_BLOCK_ACL_NOF_ENTRIES_ID,                                                            
    "nof_entries",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  acl_ndx:\r\n"
    "  ACL ID to get the ACEs from. Range 0-7.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl get_block acl_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(5)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ID,                                                            
    "get_best_match",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets the first ACE index (Access Control Entry) that matches the given ACE.\r\n"
    "  In order to get the whole information use soc_petra_pp_acl_ace_get with the\r\n"
    "  returned value 'ace_id'.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl get_best_match acl_ndx 0 port_range_valid 0\r\n"
    "  max_dest_port 0 min_dest_port 0 max_src_port 0 min_src_port 0 mask 0 val 0\r\n"
    "  mask 0 val 0 mask 0 val 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
    "  mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 dest_mac_mask_index 0\r\n"
    "  dest_mac_mask 0 dest_mac 0 src_mac_mask_index 0 src_mac_mask 0 src_mac 0 mask\r\n"
    "  0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask\r\n"
    "  0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 in_port_type_valid 0\r\n"
    "  in_port_type 0 type 0 priority 0 id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACL_NDX_ID,                                                            
    "acl_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  acl_ndx:\r\n"
    "  ACL ID to get the ACE from. Range 0-3.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L4_INFO_PORT_RANGE_VALID_ID,                                                            
    "port_range_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.port_range_valid:\r\n"
    "  If TRUE then port_range considered as part of the ACE. Otherwise it masked\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L4_INFO_PORT_RANGE_MAX_DEST_PORT_ID,                                                            
    "max_dest_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.port_range.max_dest_port:\r\n"
    "  The maximum Destination port in the range. Size: 16 bits. Range 0-65535.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L4_INFO_PORT_RANGE_MIN_DEST_PORT_ID,                                                            
    "min_dest_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.port_range.min_dest_port:\r\n"
    "  The minimum Destination port in the range. Size: 16 bits. Range 0-65535.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L4_INFO_PORT_RANGE_MAX_SRC_PORT_ID,                                                            
    "max_src_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.port_range.max_src_port:\r\n"
    "  The maximum Source port in the range. Size: 16 bits. Range 0-65535.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L4_INFO_PORT_RANGE_MIN_SRC_PORT_ID,                                                            
    "min_src_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.port_range.min_src_port:\r\n"
    "  The minimum Source port in the range. Size: 16 bits. Range 0-65535.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L4_INFO_DEST_PORT_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.dest_port.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L4_INFO_DEST_PORT_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.dest_port.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L4_INFO_SRC_PORT_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.src_port.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L4_INFO_SRC_PORT_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.src_port.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L4_INFO_TCP_CTRL_OPS_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.tcp_ctrl_ops.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L4_INFO_TCP_CTRL_OPS_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l4_info.tcp_ctrl_ops.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L3_INFO_DEST_IP_PREFIX_LEN_ID,                                                            
    "prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.dest_ip.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask\r\n"
    "  0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 in_port_type_valid 0\r\n"
    "  in_port_type 0 type 0 priority 0 id 0\r\n"
    "",
    "",   
    "",
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L3_INFO_DEST_IP_IP_ADDRESS_ID,                                                            
    "ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.dest_ip.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L3_INFO_SRC_IP_PREFIX_LEN_ID,                                                            
    "prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.src_ip.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 mask\r\n"
    "  0 val 0 mask 0 val 0 mask 0 val 0 mask 0 val 0 in_port_type_valid 0\r\n"
    "  in_port_type 0 type 0 priority 0 id 0\r\n"
    "",
    "",                                                                                  
    "",
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L3_INFO_SRC_IP_IP_ADDRESS_ID,                                                            
    "ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.src_ip.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L3_INFO_PROTOCOL_CODE_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.protocol_code.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L3_INFO_PROTOCOL_CODE_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.protocol_code.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L3_INFO_TOS_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.tos.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L3_INFO_TOS_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.tos.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L3_INFO_IN_VID_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.in_vid.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFFFFFF to consider the\r\n"
    "  exact value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L3_INFO_IN_VID_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.in_vid.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L3_INFO_IN_LOCAL_PORT_ID_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.in_local_port_id.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFFFFFF to consider the\r\n"
    "  exact value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L3_L4_INFO_L3_INFO_IN_LOCAL_PORT_ID_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l3_l4_info.l3_info.in_local_port_id.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_DEST_MAC_MASK_INDEX_ID,                                                            
    "dest_mac_mask_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  dest_mac_mask_index:\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_DEST_MAC_MASK_ID,                                                            
    "dest_mac_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.dest_mac_mask[ prm_dest_mac_mask_index]:\r\n"
    "  Mask on the Destination MAC address. 1 to consider the corresponding bit, and\r\n"
    "  zero to ignore it.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_DEST_MAC_ID,                                                            
    "dest_mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.dest_mac:\r\n"
    "  Destination MAC\r\n"
    "  Address. \r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_SRC_MAC_MASK_INDEX_ID,                                                            
    "src_mac_mask_index",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  src_mac_mask_index:\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_SRC_MAC_MASK_ID,                                                            
    "src_mac_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.src_mac_mask[ prm_src_mac_mask_index]:\r\n"
    "  Mask on the source MAC address. 1 to consider the corresponding bit, and zero\r\n"
    "  to ignore it.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_SRC_MAC_ID,                                                            
    "src_mac",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_mac_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_mac_addr_vals) / sizeof(soc_petra_pp_api_mac_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.src_mac:\r\n"
    "  Source MAC Address. \r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_ETHER_TYPE_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.ether_type.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_ETHER_TYPE_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.ether_type.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_S_TAG_DEI_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.Dei.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_S_TAG_DEI_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.Dei.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_S_TAG_PCP_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.Pcp.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_S_TAG_PCP_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.Pcp.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_S_TAG_VID_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.Vid.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFFFFFF to consider the\r\n"
    "  exact value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_S_TAG_VID_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.Vid.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_S_TAG_TAG_EXIST_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.tag_exist.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_S_TAG_TAG_EXIST_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.s_tag.tag_exist.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_C_TAG_DEI_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.Dei.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_C_TAG_DEI_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.Dei.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_C_TAG_PCP_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.Pcp.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_C_TAG_PCP_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.Pcp.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_C_TAG_VID_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.Vid.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFFFFFF to consider the\r\n"
    "  exact value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_C_TAG_VID_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.Vid.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_C_TAG_TAG_EXIST_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.tag_exist.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFF to consider the exact\r\n"
    "  value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_C_TAG_TAG_EXIST_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.c_tag.tag_exist.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_IN_LOCAL_PORT_ID_MASK_ID,                                                            
    "mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.in_local_port_id.mask:\r\n"
    "  Mask on the value. 1 to consider the corresponding bit, and zero to ignore\r\n"
    "  it. Set mask to zero to mask all value, and to 0xFFFFFFFF to consider the\r\n"
    "  exact value\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_IN_LOCAL_PORT_ID_VAL_ID,                                                            
    "val",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.in_local_port_id.val:\r\n"
    "  Value.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_IN_PORT_TYPE_VALID_ID,                                                            
    "in_port_type_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.in_port_type_valid:\r\n"
    "  Is in_port_type valid, or it's masked.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_VAL_L2_INFO_IN_PORT_TYPE_ID,                                                            
    "in_port_type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule) / sizeof(SOC_PETRA_PP_SAND_PP_PORT_L2_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.val.l2_info.in_port_type:\r\n"
    "  The l2 port type (VBP,CEP,CNP,PNP). \r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_TYPE_ID,                                                            
    "type",                                                                       
    (PARAM_VAL_RULES *)&SOC_PETRA_PP_ACL_ACE_TYPE_rule[0],                                            
    (sizeof(SOC_PETRA_PP_ACL_ACE_TYPE_rule) / sizeof(SOC_PETRA_PP_ACL_ACE_TYPE_rule[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.type:\r\n"
    "  Type of the ACE L2 or L3 (and L4).\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_PRIORITY_ID,                                                            
    "priority",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.priority:\r\n"
    "  The priority of the ACE to add. The smaller the priority value, the higher\r\n"
    "  will be the priority of the ACE. \r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_GET_BEST_MATCH_ACE_GET_BEST_MATCH_ACE_ID_ID,                                                            
    "ace_id_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  ace.id:\r\n"
    "  The ID of the ACE, should be unique for each ACE.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(6)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
 {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_HW_STAT_ID,                                                            
    "hw_stat",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets HW STAT \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl remove acl_ndx 0 ace_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(1)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
 {                                                                                        
    PARAM_PETRA_PP_ACL_ACE_CLEAR_TCAM_USE_ID,                                                            
    "tcam_clear_all",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets HW STAT \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl remove acl_ndx 0 ace_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(2)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_INIT_ID,                                                            
    "init",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  INIT ACL \r\n"
    " determine which fields from the following:\r\n"
    "  - ether type\r\n"
    "  - protocol code\r\n"
    "  - l4opts\r\n"
    "  which are not exist directly in the TCAM entry\r\n"
    "  but exist at global registers and pointed by the\r\n"
    "  TCAM Entry.\r\n"
    "  the management by the driver abstract this indirection\r\n"
    "  and update registers on demand and makes ACE point to \r\n"
    "  suitable entry.\r\n"
    "  setting suitable field to 1 will enable the auto management\r\n"
    "  for the corresponding field\r\n"
    " see SOC_PETRA_PP_ACL_FLD_MGMT_MASK_xxxx above\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api acl remove acl_ndx 0 ace_id_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(3)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_ACL_INIT_ETHER_TPYE_ID,                                                            
    "ether_type_auto_manage",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_glbl_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(3)},
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_INIT_PROT_CODE_ID,                                                            
    "prot_code_auto_manage",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_glbl_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(3)},
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_ACL_INIT_L4_OPS_ID,                                                            
    "l4_opts_auto_manage",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api bridging frwrd_glbl_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(3)},
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_ACL_ID,                                                            
    "acl",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8), BIT(1)|BIT(2)|BIT(3)},
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } acl*/

#ifdef UI_IPV4_MC/* { ipv4_mc*/
  {                      
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_VRF_INFO_SET_ID,                                                            
    "init",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  INIT ipv4 mc module\r\n"
    "",
#ifdef UI_SWP_P_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  swp_p_pp_api ipv4_mc init use_mapped_port \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0,BIT(5)},
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                      
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_VRF_INFO_SET_USE_PORT_ID,                                                            
    "use_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  IF presents use dest IP x src IP x in port \r\n"
    "  IF does NOT present use dest IP x src IP x in VLAN ID for routing \r\n"
    "",
#ifdef UI_SWP_P_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc init use_mapped_port \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0,BIT(5)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_ID,                                                            
    "add",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Binds between an ipv4 key (Src-Ip/prefix and group) and a multicast FEC\r\n"
    "  identifier.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_ROUTE_KEY_IN_VID_VALID_ID,                                                            
    "in_vid_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid_valid:\r\n"
    "  Is the in_vid valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_ROUTE_KEY_IN_VID_ID,                                                            
    "in_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid:\r\n"
    "  The vid of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_ROUTE_KEY_IN_COUNT_ID,                                                            
    "count",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid:\r\n"
    "  The vid of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_INC_SYS_FEC_NDX_ID,                                                            
    "inc_sys_fec",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid:\r\n"
    "  The vid of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_ROUTE_KEY_IN_PORT_VALID_ID,                                                            
    "in_port_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_port_valid:\r\n"
    "  Is the in_port valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_port_valid 0 in_port\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_ROUTE_KEY_IN_PORT_ID,                                                            
    "in_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_port:\r\n"
    "  The port of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_port_valid 0 in_port\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_ROUTE_KEY_GROUP_PREFIX_LEN_ID,                                                            
    "group_prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_ROUTE_KEY_GROUP_IP_ADDRESS_ID,                                                            
    "group_ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_ROUTE_KEY_SOURCE_PREFIX_LEN_ID,                                                            
    "src_prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.source.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_ROUTE_KEY_SOURCE_IP_ADDRESS_ID,                                                            
    "src_ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.source.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0- 4G\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_ADD_IPV4_MULTICAST_ROUTE_ADD_OVERRIDE_ID,                                                            
    "override",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  override:\r\n"
    "  whether to override the entry if it already exists, if this is\r\n"
    "  FALSE and the entry exist error is returned.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(14)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_GET_IPV4_MULTICAST_ROUTE_GET_ID,                                                            
    "get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets the system-FEC-id associated the given key.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_get vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(15)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_GET_IPV4_MULTICAST_ROUTE_GET_ROUTE_KEY_IN_VID_VALID_ID,                                                            
    "in_vid_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid_valid:\r\n"
    "  Is the in_vid valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_get vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_GET_IPV4_MULTICAST_ROUTE_GET_ROUTE_KEY_IN_VID_ID,                                                            
    "in_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid:\r\n"
    "  The vid of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_get vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_GET_IPV4_MULTICAST_ROUTE_GET_ROUTE_KEY_IN_PORT_VALID_ID,                                                            
    "in_port_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_port_valid:\r\n"
    "  Is the in_port valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_get vrf_id 0 in_port_valid 0 in_port\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_GET_IPV4_MULTICAST_ROUTE_GET_ROUTE_KEY_IN_PORT_ID,                                                            
    "in_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_port:\r\n"
    "  The port of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_get vrf_id 0 in_port_valid 0 in_port\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_GET_IPV4_MULTICAST_ROUTE_GET_ROUTE_KEY_GROUP_PREFIX_LEN_ID,                                                            
    "group_prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_get vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_GET_IPV4_MULTICAST_ROUTE_GET_ROUTE_KEY_GROUP_IP_ADDRESS_ID,                                                            
    "group_ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_get vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_GET_IPV4_MULTICAST_ROUTE_GET_ROUTE_KEY_SOURCE_PREFIX_LEN_ID,                                                            
    "src_prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.source.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_get vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_GET_IPV4_MULTICAST_ROUTE_GET_ROUTE_KEY_SOURCE_IP_ADDRESS_ID,                                                            
    "src_ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.source.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_get vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(15)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_LPM_GET_IPV4_MULTICAST_ROUTE_LPM_GET_ID,                                                            
    "lpm_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get from the route table a route key with the longest prefix that matches the\r\n"
    "  given key.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(9)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_LPM_GET_IPV4_MULTICAST_ROUTE_LPM_GET_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_LPM_GET_IPV4_MULTICAST_ROUTE_LPM_GET_ROUTE_KEY_IN_VID_VALID_ID,                                                            
    "in_vid_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid_valid:\r\n"
    "  Is the in_vid valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_LPM_GET_IPV4_MULTICAST_ROUTE_LPM_GET_ROUTE_KEY_IN_VID_ID,                                                            
    "in_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid:\r\n"
    "  The vid of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_LPM_GET_IPV4_MULTICAST_ROUTE_LPM_GET_ROUTE_KEY_IN_PORT_VALID_ID,                                                            
    "in_port_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_port_valid:\r\n"
    "  Is the in_port valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_lpm_get vrf_id 0 in_port_valid 0\r\n"
    "  in_port 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_LPM_GET_IPV4_MULTICAST_ROUTE_LPM_GET_ROUTE_KEY_IN_PORT_ID,                                                            
    "in_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_port:\r\n"
    "  The port of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_lpm_get vrf_id 0 in_port_valid 0\r\n"
    "  in_port 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_LPM_GET_IPV4_MULTICAST_ROUTE_LPM_GET_ROUTE_KEY_GROUP_PREFIX_LEN_ID,                                                            
    "group_prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_LPM_GET_IPV4_MULTICAST_ROUTE_LPM_GET_ROUTE_KEY_GROUP_IP_ADDRESS_ID,                                                            
    "group_ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_LPM_GET_IPV4_MULTICAST_ROUTE_LPM_GET_ROUTE_KEY_SOURCE_PREFIX_LEN_ID,                                                            
    "src_prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.source.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_LPM_GET_IPV4_MULTICAST_ROUTE_LPM_GET_ROUTE_KEY_SOURCE_IP_ADDRESS_ID,                                                            
    "src_ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.source.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(9)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_GET_BLOCK_IPV4_MULTICAST_ROUTE_GET_BLOCK_ID,                                                            
    "get_block",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get block of entries from route table that match the keys between start key\r\n"
    "  and last key.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_get_block vrf_id 0 block_range 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(10)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_GET_BLOCK_IPV4_MULTICAST_ROUTE_GET_BLOCK_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_get_block vrf_id 0 block_range 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_GET_BLOCK_IPV4_MULTICAST_ROUTE_GET_BLOCK_BLOCK_RANGE_ID,                                                            
    "print_next_hop_info", 
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  block_range:\r\n"
    "  block range.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_get_block vrf_id 0 block_range 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(10)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_REMOVE_IPV4_MULTICAST_ROUTE_REMOVE_ID,                                                            
    "remove",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Remove the association of the IP-address to Unicast FEC.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(11)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_REMOVE_ALL_IPV4_MULTICAST_ROUTE_REMOVE_ALL_ID,                                                            
    "remove_all",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Remove all the association of the MC IP-address to FEC.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(4)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_REMOVE_IPV4_MULTICAST_ROUTE_REMOVE_ROUTE_KEY_IN_VID_VALID_ID,                                                            
    "in_vid_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid_valid:\r\n"
    "  Is the in_vid valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_REMOVE_IPV4_MULTICAST_ROUTE_REMOVE_ROUTE_KEY_IN_VID_ID,                                                            
    "in_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid:\r\n"
    "  The vid of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_REMOVE_IPV4_MULTICAST_ROUTE_REMOVE_ROUTE_KEY_IN_PORT_VALID_ID,                                                            
    "in_port_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_port_valid:\r\n"
    "  Is the in_port valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_remove vrf_id 0 in_port_valid 0\r\n"
    "  in_port 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_REMOVE_IPV4_MULTICAST_ROUTE_REMOVE_ROUTE_KEY_IN_PORT_ID,                                                            
    "in_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_port:\r\n"
    "  The port of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_remove vrf_id 0 in_port_valid 0\r\n"
    "  in_port 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },      

  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_REMOVE_IPV4_MULTICAST_ROUTE_REMOVE_ROUTE_KEY_GROUP_PREFIX_LEN_ID,                                                            
    "group_prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_REMOVE_IPV4_MULTICAST_ROUTE_REMOVE_ROUTE_KEY_GROUP_IP_ADDRESS_ID,                                                            
    "group_ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_REMOVE_IPV4_MULTICAST_ROUTE_REMOVE_ROUTE_KEY_SOURCE_PREFIX_LEN_ID,                                                            
    "src_prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.source.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_REMOVE_IPV4_MULTICAST_ROUTE_REMOVE_ROUTE_KEY_SOURCE_IP_ADDRESS_ID,                                                            
    "src_ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ip_address_vals[0],                                            
    (sizeof(soc_petra_pp_api_ip_address_vals) / sizeof(soc_petra_pp_api_ip_address_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.source.ip_address:\r\n"
    "  Ipv4 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(11)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_TABLE_STATUS_IPV4_MULTICAST_ROUTE_TABLE_STATUS_ID,                                                            
    "table_status",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get the status of the Unicast route table, Including the number of allocated\r\n"
    "  multicast routes and number of free entries.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_table_status vrf_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(12)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_ROUTE_TABLE_STATUS_IPV4_MULTICAST_ROUTE_TABLE_STATUS_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_route_table_status vrf_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(12)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_DEFRAGMENT_IPV4_MULTICAST_DEFRAGMENT_ID,                                                            
    "ipv4_multicast_defragment",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Defrag the ipv4 multicast table. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_defragment vrf_id 0 requested_nof_steps 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(13)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_DEFRAGMENT_IPV4_MULTICAST_DEFRAGMENT_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_defragment vrf_id 0 requested_nof_steps 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV4_MULTICAST_DEFRAGMENT_IPV4_MULTICAST_DEFRAGMENT_REQUESTED_NOF_STEPS_ID,                                                            
    "requested_nof_steps",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  requested_nof_steps:\r\n"
    "  The maximal number of defragmentation steps that should be done on the table.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv4_mc ipv4_multicast_defragment vrf_id 0 requested_nof_steps 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(13)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_IPV4_MC_ID,                                                            
    "ipv4_mc",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0,0, BIT(14)|BIT(15)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13),BIT(4)|BIT(5)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } ipv4_mc*/

#ifdef UI_IPV6/* { ipv6*/
  {                      
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_VRF_INFO_SET_ID,                                                            
    "init",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  INIT ipv6 module\r\n"
    "",
#ifdef UI_SWP_P_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  swp_p_pp_api ipv6 init use_mapped_port \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0,BIT(6)},
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                      
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_VRF_INFO_SET_USE_PORT_ID,                                                            
    "use_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  IF presents use dest IP x src IP x in port \r\n"
    "  IF does NOT present use dest IP x src IP x in VLAN ID for routing \r\n"
    "",
#ifdef UI_SWP_P_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 init use_mapped_port \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0,BIT(6)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_ROUTE_ADD_ID,                                                            
    "add",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Binds between an ipv6 key (Src-Ip/prefix and group) and a  FEC\r\n"
    "  identifier.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_ROUTE_ADD_ROUTE_KEY_IN_VID_VALID_ID,                                                            
    "in_vid_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid_valid:\r\n"
    "  Is the in_vid valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_ROUTE_ADD_ROUTE_KEY_IN_VID_ID,                                                            
    "in_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid:\r\n"
    "  The vid of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_ROUTE_ADD_ROUTE_KEY_IN_PORT_VALID_ID,                                                            
    "in_port_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_port_valid:\r\n"
    "  Is the in_port valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_add vrf_id 0 in_port_valid 0 in_port\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_ROUTE_ADD_ROUTE_KEY_IN_PORT_ID,                                                            
    "in_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_port:\r\n"
    "  The port of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_add vrf_id 0 in_port_valid 0 in_port\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_ROUTE_ADD_ROUTE_KEY_GROUP_PREFIX_LEN_ID,                                                            
    "dest_prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  

  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_ROUTE_ADD_ROUTE_KEY_GROUP_IP_ADDRESS_ID,                                                            
    "dest_ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ipv6_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_ipv6_addr_vals) / sizeof(soc_petra_pp_api_ipv6_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.ip_address:\r\n"
    "  IPV6 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_ROUTE_ADD_ROUTE_KEY_COUNT_ID,                                                            
    "count",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  }, 
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_ROUTE_ADD_SYS_FEC_NDX_ID,                                                            
    "sys_fec_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0- 4G\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_ROUTE_ADD_INC_SYS_FEC_NDX_ID,                                                            
    "inc_sys_fec",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  sys_fec_ndx:\r\n"
    "  system FEC id. Range 0- 4G\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_ADD_IPV6_ROUTE_ADD_OVERRIDE_ID,                                                            
    "override",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  override:\r\n"
    "  whether to override the entry if it already exists, if this is\r\n"
    "  FALSE and the entry exist error is returned.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_add vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0 sys_fec_ndx 0 override 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_GET_IPV6_ROUTE_GET_ID,                                                            
    "get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Gets the system-FEC-id associated the given key.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_get vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(25)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_GET_IPV6_ROUTE_GET_ROUTE_KEY_IN_VID_VALID_ID,                                                            
    "in_vid_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid_valid:\r\n"
    "  Is the in_vid valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_get vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_GET_IPV6_ROUTE_GET_ROUTE_KEY_IN_VID_ID,                                                            
    "in_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid:\r\n"
    "  The vid of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_get vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_GET_IPV6_ROUTE_GET_ROUTE_KEY_IN_PORT_VALID_ID,                                                            
    "in_port_mask",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_port_valid:\r\n"
    "  Is the in_port valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_get vrf_id 0 in_port_valid 0 in_port\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_GET_IPV6_ROUTE_GET_ROUTE_KEY_IN_PORT_ID,                                                            
    "in_port",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_port:\r\n"
    "  The port of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_get vrf_id 0 in_port_valid 0 in_port\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_GET_IPV6_ROUTE_GET_ROUTE_KEY_GROUP_PREFIX_LEN_ID,                                                            
    "dest_prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_get vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_GET_IPV6_ROUTE_GET_ROUTE_KEY_GROUP_IP_ADDRESS_ID,                                                            
    "dest_ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ipv6_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_ipv6_addr_vals) / sizeof(soc_petra_pp_api_ipv6_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.ip_address:\r\n"
    "  IPV6 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_get vrf_id 0 in_vid_valid 0 in_vid\r\n"
    "  0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(25)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  

  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_LPM_GET_IPV6_ROUTE_LPM_GET_ID,                                                            
    "lpm_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get from the route table a route key with the longest prefix that matches the\r\n"
    "  given key.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(19)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_LPM_GET_IPV6_ROUTE_LPM_GET_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_LPM_GET_IPV6_ROUTE_LPM_GET_ROUTE_KEY_IN_VID_VALID_ID,                                                            
    "in_vid_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid_valid:\r\n"
    "  Is the in_vid valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_LPM_GET_IPV6_ROUTE_LPM_GET_ROUTE_KEY_IN_VID_ID,                                                            
    "in_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid:\r\n"
    "  The vid of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_LPM_GET_IPV6_ROUTE_LPM_GET_ROUTE_KEY_GROUP_PREFIX_LEN_ID,                                                            
    "prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_LPM_GET_IPV6_ROUTE_LPM_GET_ROUTE_KEY_GROUP_IP_ADDRESS_ID,                                                            
    "ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ipv6_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_ipv6_addr_vals) / sizeof(soc_petra_pp_api_ipv6_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.ip_address:\r\n"
    "  IPV6 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_LPM_GET_IPV6_ROUTE_LPM_GET_ROUTE_KEY_SOURCE_PREFIX_LEN_ID,                                                            
    "prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.source.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_LPM_GET_IPV6_ROUTE_LPM_GET_ROUTE_KEY_SOURCE_IP_ADDRESS_ID,                                                            
    "ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ipv6_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_ipv6_addr_vals) / sizeof(soc_petra_pp_api_ipv6_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.source.ip_address:\r\n"
    "  IPV6 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_lpm_get vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_GET_BLOCK_IPV6_ROUTE_GET_BLOCK_ID,                                                            
    "get_block",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get block of entries from route table that match the keys between start key\r\n"
    "  and last key.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_get_block vrf_id 0 block_range 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(20)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_GET_BLOCK_IPV6_ROUTE_GET_BLOCK_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_get_block vrf_id 0 block_range 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_GET_BLOCK_IPV6_ROUTE_GET_BLOCK_BLOCK_RANGE_ID,                                                            
    "print_next_hop_info",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  block_range:\r\n"
    "  block range.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_get_block vrf_id 0 block_range 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_REMOVE_IPV6_ROUTE_REMOVE_ID,                                                            
    "remove",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Remove the association of the IP-address to Unicast FEC.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(21)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_REMOVE_IPV6_ROUTE_REMOVE_ROUTE_KEY_IN_VID_VALID_ID,                                                            
    "in_vid_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid_valid:\r\n"
    "  Is the in_vid valid.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_REMOVE_IPV6_ROUTE_REMOVE_ROUTE_KEY_IN_VID_ID,                                                            
    "in_vid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.in_vid:\r\n"
    "  The vid of the incoming packets.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_REMOVE_IPV6_ROUTE_REMOVE_ROUTE_KEY_GROUP_PREFIX_LEN_ID,                                                            
    "prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_REMOVE_IPV6_ROUTE_REMOVE_ROUTE_KEY_GROUP_IP_ADDRESS_ID,                                                            
    "ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ipv6_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_ipv6_addr_vals) / sizeof(soc_petra_pp_api_ipv6_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.group.ip_address:\r\n"
    "  IPV6 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_REMOVE_IPV6_ROUTE_REMOVE_ROUTE_KEY_SOURCE_PREFIX_LEN_ID,                                                            
    "prefix_len",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.source.prefix_len:\r\n"
    "  Number of bits to consider in the IP address starting from the msb. Range\r\n"
    "  0-32.Example for key ip_address 192.168.1.0 and prefix_len 24\r\n"
    "  would match any IP Destination Address of the form 192.168.1.x\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_REMOVE_IPV6_ROUTE_REMOVE_ROUTE_KEY_SOURCE_IP_ADDRESS_ID,                                                            
    "ip_address",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_ipv6_addr_vals[0],                                            
    (sizeof(soc_petra_pp_api_ipv6_addr_vals) / sizeof(soc_petra_pp_api_ipv6_addr_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  route_key.source.ip_address:\r\n"
    "  IPV6 destination address.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_remove vrf_id 0 in_vid_valid 0\r\n"
    "  in_vid 0 prefix_len 0 ip_address 0 prefix_len 0 ip_address 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(21)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_TABLE_STATUS_IPV6_ROUTE_TABLE_STATUS_ID,                                                            
    "table_status",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get the status of the Unicast route table, Including the number of allocated\r\n"
    "   routes and number of free entries.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_table_status vrf_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(22)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_ROUTE_TABLE_STATUS_IPV6_ROUTE_TABLE_STATUS_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_route_table_status vrf_id 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_DEFRAGMENT_IPV6_DEFRAGMENT_ID,                                                            
    "ipv6_defragment",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Defrag the ipv6  table. \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_defragment vrf_id 0 requested_nof_steps 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(23)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_DEFRAGMENT_IPV6_DEFRAGMENT_VRF_ID_ID,                                                            
    "vrf_id",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  vrf_id:\r\n"
    "  Virtual router id. Added for forward compatibility,\r\n"
    "  Range 0-0. Has to be zero, error is returned otherwise.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_defragment vrf_id 0 requested_nof_steps 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_IPV6_DEFRAGMENT_IPV6_DEFRAGMENT_REQUESTED_NOF_STEPS_ID,                                                            
    "requested_nof_steps",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  requested_nof_steps:\r\n"
    "  The maximal number of defragmentation steps that should be done on the table.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api ipv6 ipv6_defragment vrf_id 0 requested_nof_steps 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(23)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_IPV6_ID,                                                            
    "ipv6",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, BIT(24)|BIT(25)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23),BIT(6)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } ipv6*/



#ifdef UI_TPID/* { tpid*/
  {                                                                                        
    PARAM_PETRA_PP_TPID_GLOBAL_INFO_SET_GLOBAL_INFO_SET_ID,                                                            
    "global_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the expected TPID values if any for C-Tag and S-Tag to be used for\r\n"
    "  parsing and identifying these tags in the packet.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api tpid global_info_set is_valid 0 tpid_value 0 is_valid 0\r\n"
    "  tpid_value 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(17)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TPID_GLOBAL_INFO_SET_GLOBAL_INFO_SET_GLBL_PARSE_S_VLAN_IS_VALID_ID,                                                            
    "s_is_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_parse.s_vlan.is_valid:\r\n"
    "  Is this tpid value valid\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api tpid global_info_set is_valid 0 tpid_value 0 is_valid 0\r\n"
    "  tpid_value 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TPID_GLOBAL_INFO_SET_GLOBAL_INFO_SET_GLBL_PARSE_S_VLAN_TPID_VALUE_ID,                                                            
    "s_tpid_value",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_parse.s_vlan.tpid_value:\r\n"
    "  The value of the tpid This values is used to identify the presence of a tag\r\n"
    "  in the Ethernet header.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api tpid global_info_set is_valid 0 s_tpid_value 0 is_valid 0\r\n"
    "  tpid_value 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TPID_GLOBAL_INFO_SET_GLOBAL_INFO_SET_GLBL_PARSE_C_VLAN_IS_VALID_ID,                                                            
    "c_is_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_parse.c_vlan.is_valid:\r\n"
    "  Is this tpid value valid\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api tpid global_info_set s_is_valid 0 s_tpid_value 0 c_is_valid 0 c_tpid_value 0 \r\n"    
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TPID_GLOBAL_INFO_SET_GLOBAL_INFO_SET_GLBL_PARSE_C_VLAN_TPID_VALUE_ID,                                                            
    "c_tpid_value",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  glbl_parse.c_vlan.tpid_value:\r\n"
    "  The value of the tpid This values is used to identify the presence of a tag\r\n"
    "  in the Ethernet header.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api tpid global_info_set s_is_valid 0 s_tpid_value 0 c_is_valid 0 c_tpid_value 0 \r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(17)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TPID_GLOBAL_INFO_GET_GLOBAL_INFO_GET_ID,                                                            
    "global_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Set the expected TPID values if any for C-Tag and S-Tag to be used for\r\n"
    "  parsing and identifying these tags in the packet.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api tpid global_info_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(18)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TPID_PORT_INFO_SET_PORT_INFO_SET_ID,                                                            
    "port_info_set",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets which Tags (S-Tag/C-Tag) are expected in these port.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api tpid port_info_set local_pord_ndx 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(19)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TPID_PORT_INFO_SET_PORT_INFO_SET_LOCAL_PORD_NDX_ID,                                                            
    "local_pord_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_pord_ndx:\r\n"
    "  The port ID Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api tpid port_info_set local_pord_ndx 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(19)},                                                                              
    3,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TPID_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_SVLAN_TPID_VALID_ID,                                                            
    "svlan_tpid_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.svlan_tpid_valid:\r\n"
    "  If TRUE, then this port may have a S-VLAN tag.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api tpid port_info_set local_pord_ndx 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TPID_PORT_INFO_SET_PORT_INFO_SET_PORT_INFO_CVLAN_TPID_VALID_ID,                                                            
    "cvlan_tpid_valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  port_info.cvlan_tpid_valid:\r\n"
    "  If TRUE, then this port may have a C-VLAN tag.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api tpid port_info_set local_pord_ndx 0 svlan_tpid_valid 0\r\n"
    "  cvlan_tpid_valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(19)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TPID_PORT_INFO_GET_PORT_INFO_GET_ID,                                                            
    "port_info_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Sets which Tags (S-Tag/C-Tag) are expected in these port.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api tpid port_info_get local_pord_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(20)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_TPID_PORT_INFO_GET_PORT_INFO_GET_LOCAL_PORD_NDX_ID,                                                            
    "local_pord_ndx",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  local_pord_ndx:\r\n"
    "  The port ID Range 0-79.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api tpid port_info_get local_pord_ndx 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(20)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_TPID_ID,                                                            
    "tpid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(17)|BIT(18)|BIT(19)|BIT(20)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } tpid*/
#ifdef UI_DIAGNOSTICS/* { diagnostics*/
  {                                                                                        
    PARAM_PETRA_PP_DIAG_DROP_LOG_GET_DIAG_DROP_LOG_GET_ID,                                                            
    "diag_drop_log_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get indication of packets drop. This log is 'bitwise OR' i.e. there is an\r\n"
    "  indication for a 'drop reason' if there was a packet drop for that 'reason'\r\n"
    "  from the last get.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api diagnostics diag_drop_log_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(21)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_DIAG_DROP_LOG_PRINT_DIAG_DROP_LOG_PRINT_ID,                                                            
    "diag_drop_log_print",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Prints the drop log indications. This log is 'bitwise OR' i.e. there is an\r\n"
    "  indication for a 'drop reason' if there was a packet drop for that 'reason'\r\n"
    "  from the last get.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api diagnostics diag_drop_log_print first_time 0 drop_log 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_DIAG_DROP_LOG_PRINT_DIAG_DROP_LOG_PRINT_DROP_INFO_FIRST_TIME_ID,                                                            
    "first_time",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  drop_info.first_time:\r\n"
    "  The time (in seconds) of the first drop till the read operation was called.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api diagnostics diag_drop_log_print first_time 0 drop_log 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_DIAG_DROP_LOG_PRINT_DIAG_DROP_LOG_PRINT_DROP_INFO_DROP_LOG_ID,                                                            
    "drop_log",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  drop_info.drop_log:\r\n"
    "  Indication for the packet drop. The kth bit in the drop_log array is set if\r\n"
    "  the packet was drop for the reason appears as the kth element in the\r\n"
    "  enumerator SOC_PETRA_PP_DIAG_drop\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api diagnostics diag_drop_log_print first_time 0 drop_log 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(22)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_DIAG_ERRORS_GET_DIAG_ERRORS_GET_ID,                                                            
    "diag_errors_get",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get indication of the errors occurred in the Soc_petra PP blocks. This log is\r\n"
    "  'bitwise OR' i.e. there is an indication for a error if that error occurred\r\n"
    "  since the last get.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api diagnostics diag_errors_get\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(23)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_DIAG_ERRORS_PRINT_DIAG_ERRORS_PRINT_ID,                                                            
    "diag_errors_print",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Prints the errors occurs since the last get \r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api diagnostics diag_errors_print errors 0 valid 0 errors 0 valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_DIAG_ERRORS_PRINT_DIAG_ERRORS_PRINT_ERRORS_INFO_IHP_ERRORS_ERRORS_ID,                                                            
    "errors",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  errors_info.ihp_errors.errors:\r\n"
    "  Indication for the error occurred. The kth bit in the errors array indicates\r\n"
    "  whether the error appears as the kth element in the enumerator\r\n"
    "  SOC_PETRA_PP_DIAG_drop has been occurred.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api diagnostics diag_errors_print errors 0 valid 0 errors 0 valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_DIAG_ERRORS_PRINT_DIAG_ERRORS_PRINT_ERRORS_INFO_IHP_ERRORS_VALID_ID,                                                            
    "valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  errors_info.ihp_errors.valid:\r\n"
    "  Whether to get the OLP block errors.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api diagnostics diag_errors_print errors 0 valid 0 errors 0 valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_DIAG_ERRORS_PRINT_DIAG_ERRORS_PRINT_ERRORS_INFO_OLP_ERRORS_ERRORS_ID,                                                            
    "errors",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  errors_info.olp_errors.errors:\r\n"
    "  Indication for the error occurred. The kth bit in the errors array indicates\r\n"
    "  whether the error appears as the kth element in the enumerator\r\n"
    "  SOC_PETRA_PP_DIAG_drop has been occurred.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api diagnostics diag_errors_print errors 0 valid 0 errors 0 valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_DIAG_ERRORS_PRINT_DIAG_ERRORS_PRINT_ERRORS_INFO_OLP_ERRORS_VALID_ID,                                                            
    "valid",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_free_vals[0],                                            
    (sizeof(soc_petra_pp_api_free_vals) / sizeof(soc_petra_pp_api_free_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  errors_info.olp_errors.valid:\r\n"
    "  Whether to get the OLP block errors.\r\n"
    "",
#ifdef UI_PETRA_PP_API_ADD_EXAMPLE
    "Examples:\r\n"                                                                    
    "  soc_petra_pp_api diagnostics diag_errors_print errors 0 valid 0 errors 0 valid 0\r\n"
#endif
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(24)},                                                                              
    LAST_ORDINAL,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
  {                                                                                        
    PARAM_PETRA_PP_API_DIAGNOSTICS_ID,                                                            
    "diagnostics",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, BIT(21)|BIT(22)|BIT(23)|BIT(24)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } diagnostics*/

#ifdef UI_ATM/* { atm*/
  {                                                                                        
    PARAM_PETRA_PP_API_ATM_ID,                                                            
    "atm",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Get the status of the ATM, including the number of entries in use.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(11)},                                                                              
    1,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },
  {                                                                                        
    PARAM_PETRA_PP_ATM_TEST_ALL_ID,                                                            
    "test_all",                                                                       
    (PARAM_VAL_RULES *)&soc_petra_pp_api_empty_vals[0],                                            
    (sizeof(soc_petra_pp_api_empty_vals) / sizeof(soc_petra_pp_api_empty_vals[0])) - 1,                    
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,                                           
    0,0,0,0,0,0,0,                                                                         
    "  Prints the drop log indications. This log is 'bitwise OR' i.e. there is an\r\n"
    "  indication for a 'drop reason' if there was a packet drop for that 'reason'\r\n"
    "  from the last get.\r\n"
    "",
    "",
    "",                                                                                  
    {0, 0, 0, 0, 0, 0, BIT(11)},                                                                              
    2,                                                                                     
      /*                                                                                   
       * Pointer to a function to call after symbolic parameter                            
       * has been accepted.                                                                
       */                                                                                  
    (VAL_PROC_PTR)NULL                                                                     
  },  
#endif /* } atm*/

/*                                                                                         
 * Last element. Do not remove.                                                            
 */                                                                                        
  {                                                                                        
    PARAM_END_OF_LIST                                                                      
  }                                                                                        
}                                                                                          
#endif                                                                                     
;  
                                                                    
/* } */                                                             
                                                                    
#include <soc/dpp/SAND/Utils/sand_footer.h>            
                                                                    
/* } __UI_ROM_DEFI_PETRA_PP_API_INCLUDED__*/                        
#endif                                                              
