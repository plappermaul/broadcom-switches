/*
 * $Id: $
 * 
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef __BCMX_IPFIX_H__
#define __BCMX_IPFIX_H__

#include <bcm/types.h>
#include <bcmx/bcmx.h>
#include <bcm/ipfix.h>

typedef bcm_ipfix_config_t bcmx_ipfix_config_t;

typedef bcm_ipfix_rate_t bcmx_ipfix_rate_t;

typedef bcm_ipfix_mirror_config_t bcmx_ipfix_mirror_config_t;

/* Structure initializer */
extern void bcmx_ipfix_config_t_init(
    bcmx_ipfix_config_t *config);

/* Structure initializer */
extern void bcmx_ipfix_rate_t_init(
    bcmx_ipfix_rate_t *rate_info);

/* Structure initializer */
extern void bcmx_ipfix_mirror_config_t_init(
    bcmx_ipfix_mirror_config_t *config);

/* Set the IPFIX configuration of the specified port */
extern int bcmx_ipfix_config_set(
    bcm_ipfix_stage_t stage, 
    bcmx_lport_t port, 
    bcmx_ipfix_config_t *config);

/* Get the IPFIX configuration of the specified port */
extern int bcmx_ipfix_config_get(
    bcm_ipfix_stage_t stage, 
    bcmx_lport_t port, 
    bcmx_ipfix_config_t *config);

/* Add an IPFIX flow rate meter entry */
extern int bcmx_ipfix_rate_create(
    bcmx_ipfix_rate_t *rate_info);

/* Delete an IPFIX flow rate meter entry */
extern int bcmx_ipfix_rate_destroy(
    bcm_ipfix_rate_id_t rate_id);

/* Get IPFIX flow rate meter entry for the specified id */
extern int bcmx_ipfix_rate_get(
    bcmx_ipfix_rate_t *rate_info);

/* Delete all IPFIX flow rate meter entries */
extern int bcmx_ipfix_rate_destroy_all(void);

/* Add a mirror destination to the IPFIX flow rate meter entry */
extern int bcmx_ipfix_rate_mirror_add(
    bcm_ipfix_rate_id_t rate_id, 
    bcm_gport_t mirror_dest_id);

/* Delete a mirror destination from the IPFIX flow rate meter entry */
extern int bcmx_ipfix_rate_mirror_delete(
    bcm_ipfix_rate_id_t rate_id, 
    bcm_gport_t mirror_dest_id);

/* 
 * Delete all mirror destination associated to the IPFIX flow rate meter
 * entry
 */
extern int bcmx_ipfix_rate_mirror_delete_all(
    bcm_ipfix_rate_id_t rate_id);

/* Get all mirror destination from the IPFIX flow rate meter entry */
extern int bcmx_ipfix_rate_mirror_get(
    bcm_ipfix_rate_id_t rate_id, 
    int mirror_dest_size, 
    bcm_gport_t *mirror_dest_id, 
    int *mirror_dest_count);

/* Set IPFIX mirror control configuration of the specified port */
extern int bcmx_ipfix_mirror_config_set(
    bcm_ipfix_stage_t stage, 
    bcm_gport_t port, 
    bcmx_ipfix_mirror_config_t *config);

/* Get all IPFIX mirror control configuration of the specified port */
extern int bcmx_ipfix_mirror_config_get(
    bcm_ipfix_stage_t stage, 
    bcm_gport_t port, 
    bcmx_ipfix_mirror_config_t *config);

/* Add an IPFIX mirror destination to the specified port */
extern int bcmx_ipfix_mirror_port_dest_add(
    bcm_ipfix_stage_t stage, 
    bcm_gport_t port, 
    bcm_gport_t mirror_dest_id);

/* Delete an IPFIX mirror destination from the specified port */
extern int bcmx_ipfix_mirror_port_dest_delete(
    bcm_ipfix_stage_t stage, 
    bcm_gport_t port, 
    bcm_gport_t mirror_dest_id);

/* Delete all IPFIX mirror destination from the specified port */
extern int bcmx_ipfix_mirror_port_dest_delete_all(
    bcm_ipfix_stage_t stage, 
    bcm_gport_t port);

/* Get IPFIX mirror destination of the specified port */
extern int bcmx_ipfix_mirror_port_dest_get(
    bcm_ipfix_stage_t stage, 
    bcm_gport_t port, 
    int mirror_dest_size, 
    bcm_gport_t *mirror_dest_id, 
    int *mirror_dest_count);

#endif /* __BCMX_IPFIX_H__ */
