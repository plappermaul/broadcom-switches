/*
 * $Id: $
 * 
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef __BCMX_MULTICAST_H__
#define __BCMX_MULTICAST_H__

#include <bcm/types.h>
#include <bcmx/bcmx.h>
#include <bcm/multicast.h>

/* Initialize the multicast module. */
extern int bcmx_multicast_init(void);

/* Shut down (uninitialize) the multicast module. */
extern int bcmx_multicast_detach(void);

extern int bcmx_multicast_create(
    uint32 flags, 
    bcm_multicast_t *group);

extern int bcmx_multicast_destroy(
    bcm_multicast_t group);

/* Retrieve the flags associated with a multicast group. */
extern int bcmx_multicast_group_get(
    bcm_multicast_t group, 
    uint32 *flags);

extern int bcmx_multicast_l3_encap_get(
    bcm_multicast_t group, 
    bcm_gport_t port, 
    bcm_if_t intf, 
    bcm_if_t *encap_id);

extern int bcmx_multicast_l2_encap_get(
    bcm_multicast_t group, 
    bcm_gport_t port, 
    bcm_vlan_t vlan, 
    bcm_if_t *encap_id);

extern int bcmx_multicast_vpls_encap_get(
    bcm_multicast_t group, 
    bcm_gport_t port, 
    bcm_gport_t mpls_port_id, 
    bcm_if_t *encap_id);

extern int bcmx_multicast_trill_encap_get(
    bcm_multicast_t group, 
    bcm_gport_t port, 
    bcm_if_t intf, 
    bcm_if_t *encap_id);

extern int bcmx_multicast_subport_encap_get(
    bcm_multicast_t group, 
    bcm_gport_t port, 
    bcm_gport_t subport, 
    bcm_if_t *encap_id);

extern int bcmx_multicast_mim_encap_get(
    bcm_multicast_t group, 
    bcm_gport_t port, 
    bcm_gport_t mim_port_id, 
    bcm_if_t *encap_id);

extern int bcmx_multicast_wlan_encap_get(
    bcm_multicast_t group, 
    bcm_gport_t port, 
    bcm_gport_t wlan_port_id, 
    bcm_if_t *encap_id);

extern int bcmx_multicast_vlan_encap_get(
    bcm_multicast_t group, 
    bcm_gport_t port, 
    bcm_gport_t vlan_port_id, 
    bcm_if_t *encap_id);

extern int bcmx_multicast_niv_encap_get(
    bcm_multicast_t group, 
    bcm_gport_t port, 
    bcm_gport_t niv_port_id, 
    bcm_if_t *encap_id);

extern int bcmx_multicast_egress_add(
    bcm_multicast_t group, 
    bcm_gport_t port, 
    bcm_if_t encap_id);

extern int bcmx_multicast_egress_delete(
    bcm_multicast_t group, 
    bcm_gport_t port, 
    bcm_if_t encap_id);

extern int bcmx_multicast_egress_delete_all(
    bcm_multicast_t group);

extern int bcmx_multicast_egress_set(
    bcm_multicast_t group, 
    int port_count, 
    bcm_gport_t *port_array, 
    bcm_if_t *encap_id_array);

extern int bcmx_multicast_egress_get(
    bcm_multicast_t group, 
    int port_max, 
    bcm_gport_t *port_array, 
    bcm_if_t *encap_id_array, 
    int *port_count);

/* Assign a set of VLANs as the selected port's replication list. */
extern int bcmx_multicast_repl_set(
    int index, 
    bcmx_lport_t port, 
    bcm_vlan_vector_t vlan_vec);

/* Return set of VLANs selected for port's replication list. */
extern int bcmx_multicast_repl_get(
    int index, 
    bcmx_lport_t port, 
    bcm_vlan_vector_t vlan_vec);

/* Set multicast group control. */
extern int bcmx_multicast_control_set(
    bcm_multicast_t group, 
    bcm_multicast_control_t type, 
    int arg);

/* Get multicast group control. */
extern int bcmx_multicast_control_get(
    bcm_multicast_t group, 
    bcm_multicast_control_t type, 
    int *arg);

#endif /* __BCMX_MULTICAST_H__ */
