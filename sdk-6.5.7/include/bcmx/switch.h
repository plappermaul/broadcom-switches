/*
 * $Id: $
 * 
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef __BCMX_SWITCH_H__
#define __BCMX_SWITCH_H__

#include <bcm/types.h>
#include <bcmx/bcmx.h>
#include <bcm/switch.h>

/* Configure device-wide operating modes. */
extern int bcmx_switch_control_set(
    bcm_switch_control_t type, 
    int arg);

/* Get device-wide operating modes. */
extern int bcmx_switch_control_get(
    bcm_switch_control_t type, 
    int *arg);

/* Configure port-specific operating modes. */
extern int bcmx_switch_control_port_set(
    bcmx_lport_t port, 
    bcm_switch_control_t type, 
    int arg);

/* Get port-specific operating modes. */
extern int bcmx_switch_control_port_get(
    bcmx_lport_t port, 
    bcm_switch_control_t type, 
    int *arg);

/* Configure encapsulation priority for the internal priority queue. */
extern int bcmx_switch_rcpu_encap_priority_map_set(
    uint32 flags, 
    int internal_cpu_pri, 
    int encap_pri);

/* Retrieve encapsulation priority of the internal priority queue. */
extern int bcmx_switch_rcpu_encap_priority_map_get(
    uint32 flags, 
    int internal_cpu_pri, 
    int *encap_pri);

#endif /* __BCMX_SWITCH_H__ */
