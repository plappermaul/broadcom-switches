#ifndef __BCMI_HURACAN_DEFS_H__
#define __BCMI_HURACAN_DEFS_H__
/*******************************************************************************
 *
 * $Id: $
 * $Copyright: (c) 2016 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated from the registers file.
 * Edits to this file will be lost when it is regenerated.
 *
 * Definition file for the BCMI_HURACAN.
 * This file provides all basic definitions required to program the BCMI_HURACAN.
 *
 * This file is autogenerated. Please do not edit.
 *
 ******************************************************************************/

#ifndef _DV_TB_
#include <phymod/phymod_types.h>
#endif /* _DV_TB_ */

/*******************************************************************************
 *
 *                    CHIP DEFINITIONS BEGIN HERE
 *
 ******************************************************************************/



/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL0
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x8100
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r (0x00018100 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl0[1];
	uint32_t _ana_lane_0_quad_a_ctrl0;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_CLR(r) (r).ana_lane_0_quad_a_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_SET(r,d) (r).ana_lane_0_quad_a_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_GET(r) (r).ana_lane_0_quad_a_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_0_quad_a_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_0_quad_a_ctrl0[0]=(((r).ana_lane_0_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_0_quad_a_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_0_quad_a_ctrl0[0]=(((r).ana_lane_0_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_0_quad_a_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_0_quad_a_ctrl0[0]=(((r).ana_lane_0_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_0_quad_a_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_0_quad_a_ctrl0[0]=(((r).ana_lane_0_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_0_quad_a_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_0_quad_a_ctrl0[0]=(((r).ana_lane_0_quad_a_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r,_r._ana_lane_0_quad_a_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r,_r._ana_lane_0_quad_a_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL0r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r
#define ANA_LANE_0_QUAD_A_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_t ANA_LANE_0_QUAD_A_CTRL0r_t;
#define ANA_LANE_0_QUAD_A_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_CLR
#define ANA_LANE_0_QUAD_A_CTRL0r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_SET
#define ANA_LANE_0_QUAD_A_CTRL0r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_GET
#define ANA_LANE_0_QUAD_A_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_0_QUAD_A_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_0_QUAD_A_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_0_QUAD_A_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL0r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL0r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL0r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL1
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x8101
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r (0x00018101 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl1[1];
	uint32_t _ana_lane_0_quad_a_ctrl1;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_CLR(r) (r).ana_lane_0_quad_a_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_SET(r,d) (r).ana_lane_0_quad_a_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_GET(r) (r).ana_lane_0_quad_a_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_0_quad_a_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_0_quad_a_ctrl1[0]=(((r).ana_lane_0_quad_a_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_0_quad_a_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_0_quad_a_ctrl1[0]=(((r).ana_lane_0_quad_a_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_0_quad_a_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_0_quad_a_ctrl1[0]=(((r).ana_lane_0_quad_a_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_0_quad_a_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_0_quad_a_ctrl1[0]=(((r).ana_lane_0_quad_a_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_0_quad_a_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_0_quad_a_ctrl1[0]=(((r).ana_lane_0_quad_a_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r,_r._ana_lane_0_quad_a_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r,_r._ana_lane_0_quad_a_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL1r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r
#define ANA_LANE_0_QUAD_A_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_t ANA_LANE_0_QUAD_A_CTRL1r_t;
#define ANA_LANE_0_QUAD_A_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_CLR
#define ANA_LANE_0_QUAD_A_CTRL1r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_SET
#define ANA_LANE_0_QUAD_A_CTRL1r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_GET
#define ANA_LANE_0_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_0_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_0_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_0_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_0_QUAD_A_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_0_QUAD_A_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_0_QUAD_A_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_REF_OCLf_GET
#define ANA_LANE_0_QUAD_A_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_REF_OCLf_SET
#define ANA_LANE_0_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_0_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL1r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL1r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL1r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL2
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x8102
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r (0x00018102 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl2[1];
	uint32_t _ana_lane_0_quad_a_ctrl2;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_CLR(r) (r).ana_lane_0_quad_a_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_SET(r,d) (r).ana_lane_0_quad_a_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_GET(r) (r).ana_lane_0_quad_a_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_0_quad_a_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_0_quad_a_ctrl2[0]=(((r).ana_lane_0_quad_a_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_0_quad_a_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_0_quad_a_ctrl2[0]=(((r).ana_lane_0_quad_a_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r,_r._ana_lane_0_quad_a_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r,_r._ana_lane_0_quad_a_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL2r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r
#define ANA_LANE_0_QUAD_A_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_t ANA_LANE_0_QUAD_A_CTRL2r_t;
#define ANA_LANE_0_QUAD_A_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_CLR
#define ANA_LANE_0_QUAD_A_CTRL2r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_SET
#define ANA_LANE_0_QUAD_A_CTRL2r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_GET
#define ANA_LANE_0_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_0_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_0_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_0_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL2r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL2r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL2r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL3
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x8103
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r (0x00018103 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl3[1];
	uint32_t _ana_lane_0_quad_a_ctrl3;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_CLR(r) (r).ana_lane_0_quad_a_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_SET(r,d) (r).ana_lane_0_quad_a_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_GET(r) (r).ana_lane_0_quad_a_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_0_quad_a_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_0_quad_a_ctrl3[0]=(((r).ana_lane_0_quad_a_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_0_quad_a_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_0_quad_a_ctrl3[0]=(((r).ana_lane_0_quad_a_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r,_r._ana_lane_0_quad_a_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r,_r._ana_lane_0_quad_a_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL3r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r
#define ANA_LANE_0_QUAD_A_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_t ANA_LANE_0_QUAD_A_CTRL3r_t;
#define ANA_LANE_0_QUAD_A_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_CLR
#define ANA_LANE_0_QUAD_A_CTRL3r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_SET
#define ANA_LANE_0_QUAD_A_CTRL3r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_GET
#define ANA_LANE_0_QUAD_A_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_0_QUAD_A_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_0_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_0_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL3r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL3r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL3r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL4
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x8104
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r (0x00018104 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl4[1];
	uint32_t _ana_lane_0_quad_a_ctrl4;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_CLR(r) (r).ana_lane_0_quad_a_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_SET(r,d) (r).ana_lane_0_quad_a_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_GET(r) (r).ana_lane_0_quad_a_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_0_quad_a_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_0_quad_a_ctrl4[0]=(((r).ana_lane_0_quad_a_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_0_quad_a_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_0_quad_a_ctrl4[0]=(((r).ana_lane_0_quad_a_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r,_r._ana_lane_0_quad_a_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r,_r._ana_lane_0_quad_a_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL4r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r
#define ANA_LANE_0_QUAD_A_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_t ANA_LANE_0_QUAD_A_CTRL4r_t;
#define ANA_LANE_0_QUAD_A_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_CLR
#define ANA_LANE_0_QUAD_A_CTRL4r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_SET
#define ANA_LANE_0_QUAD_A_CTRL4r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_GET
#define ANA_LANE_0_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_0_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_0_QUAD_A_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_0_QUAD_A_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL4r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL4r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL4r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL5
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x8105
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r (0x00018105 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl5[1];
	uint32_t _ana_lane_0_quad_a_ctrl5;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_CLR(r) (r).ana_lane_0_quad_a_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_SET(r,d) (r).ana_lane_0_quad_a_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_GET(r) (r).ana_lane_0_quad_a_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_0_quad_a_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_0_quad_a_ctrl5[0]=(((r).ana_lane_0_quad_a_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_0_quad_a_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_0_quad_a_ctrl5[0]=(((r).ana_lane_0_quad_a_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_0_quad_a_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_0_quad_a_ctrl5[0]=(((r).ana_lane_0_quad_a_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r,_r._ana_lane_0_quad_a_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r,_r._ana_lane_0_quad_a_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL5r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r
#define ANA_LANE_0_QUAD_A_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_t ANA_LANE_0_QUAD_A_CTRL5r_t;
#define ANA_LANE_0_QUAD_A_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_CLR
#define ANA_LANE_0_QUAD_A_CTRL5r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_SET
#define ANA_LANE_0_QUAD_A_CTRL5r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_GET
#define ANA_LANE_0_QUAD_A_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_0_QUAD_A_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_0_QUAD_A_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_0_QUAD_A_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_0_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_0_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL5r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL5r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL5r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL6
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x8106
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r (0x00018106 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl6[1];
	uint32_t _ana_lane_0_quad_a_ctrl6;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_CLR(r) (r).ana_lane_0_quad_a_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_SET(r,d) (r).ana_lane_0_quad_a_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_GET(r) (r).ana_lane_0_quad_a_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_0_quad_a_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_0_quad_a_ctrl6[0]=(((r).ana_lane_0_quad_a_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_0_quad_a_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_0_quad_a_ctrl6[0]=(((r).ana_lane_0_quad_a_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r,_r._ana_lane_0_quad_a_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r,_r._ana_lane_0_quad_a_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL6r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r
#define ANA_LANE_0_QUAD_A_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_t ANA_LANE_0_QUAD_A_CTRL6r_t;
#define ANA_LANE_0_QUAD_A_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_CLR
#define ANA_LANE_0_QUAD_A_CTRL6r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_SET
#define ANA_LANE_0_QUAD_A_CTRL6r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_GET
#define ANA_LANE_0_QUAD_A_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_0_QUAD_A_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_0_QUAD_A_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_0_QUAD_A_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL6r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL6r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL6r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL7
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x8107
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r (0x00018107 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl7[1];
	uint32_t _ana_lane_0_quad_a_ctrl7;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_CLR(r) (r).ana_lane_0_quad_a_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_SET(r,d) (r).ana_lane_0_quad_a_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_GET(r) (r).ana_lane_0_quad_a_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_0_quad_a_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_0_quad_a_ctrl7[0]=(((r).ana_lane_0_quad_a_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_0_quad_a_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_0_quad_a_ctrl7[0]=(((r).ana_lane_0_quad_a_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r,_r._ana_lane_0_quad_a_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r,_r._ana_lane_0_quad_a_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL7r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r
#define ANA_LANE_0_QUAD_A_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_t ANA_LANE_0_QUAD_A_CTRL7r_t;
#define ANA_LANE_0_QUAD_A_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_CLR
#define ANA_LANE_0_QUAD_A_CTRL7r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_SET
#define ANA_LANE_0_QUAD_A_CTRL7r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_GET
#define ANA_LANE_0_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_0_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_0_QUAD_A_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_0_QUAD_A_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL7r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL7r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL7r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL8
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x8108
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r (0x00018108 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl8[1];
	uint32_t _ana_lane_0_quad_a_ctrl8;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_CLR(r) (r).ana_lane_0_quad_a_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_SET(r,d) (r).ana_lane_0_quad_a_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_GET(r) (r).ana_lane_0_quad_a_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_0_quad_a_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_0_quad_a_ctrl8[0]=(((r).ana_lane_0_quad_a_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_0_quad_a_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_0_quad_a_ctrl8[0]=(((r).ana_lane_0_quad_a_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_0_quad_a_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_0_quad_a_ctrl8[0]=(((r).ana_lane_0_quad_a_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r,_r._ana_lane_0_quad_a_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r,_r._ana_lane_0_quad_a_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL8r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r
#define ANA_LANE_0_QUAD_A_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_t ANA_LANE_0_QUAD_A_CTRL8r_t;
#define ANA_LANE_0_QUAD_A_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_CLR
#define ANA_LANE_0_QUAD_A_CTRL8r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_SET
#define ANA_LANE_0_QUAD_A_CTRL8r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_GET
#define ANA_LANE_0_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_0_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_0_QUAD_A_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_0_QUAD_A_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_0_QUAD_A_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_LA_PDf_GET
#define ANA_LANE_0_QUAD_A_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL8r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL8r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL8r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL9
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x8109
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r (0x00018109 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl9[1];
	uint32_t _ana_lane_0_quad_a_ctrl9;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_CLR(r) (r).ana_lane_0_quad_a_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_SET(r,d) (r).ana_lane_0_quad_a_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_GET(r) (r).ana_lane_0_quad_a_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_0_quad_a_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_0_quad_a_ctrl9[0]=(((r).ana_lane_0_quad_a_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_0_quad_a_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_0_quad_a_ctrl9[0]=(((r).ana_lane_0_quad_a_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_0_quad_a_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_0_quad_a_ctrl9[0]=(((r).ana_lane_0_quad_a_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_0_quad_a_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_0_quad_a_ctrl9[0]=(((r).ana_lane_0_quad_a_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r,_r._ana_lane_0_quad_a_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r,_r._ana_lane_0_quad_a_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL9r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r
#define ANA_LANE_0_QUAD_A_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_t ANA_LANE_0_QUAD_A_CTRL9r_t;
#define ANA_LANE_0_QUAD_A_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_CLR
#define ANA_LANE_0_QUAD_A_CTRL9r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_SET
#define ANA_LANE_0_QUAD_A_CTRL9r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_GET
#define ANA_LANE_0_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_0_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_0_QUAD_A_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_0_QUAD_A_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_0_QUAD_A_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_0_QUAD_A_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_0_QUAD_A_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_0_QUAD_A_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL9r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL9r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL9r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL10
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x810a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r (0x0001810a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl10[1];
	uint32_t _ana_lane_0_quad_a_ctrl10;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_CLR(r) (r).ana_lane_0_quad_a_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_SET(r,d) (r).ana_lane_0_quad_a_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_GET(r) (r).ana_lane_0_quad_a_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_0_quad_a_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_0_quad_a_ctrl10[0]=(((r).ana_lane_0_quad_a_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_0_quad_a_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_0_quad_a_ctrl10[0]=(((r).ana_lane_0_quad_a_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_0_quad_a_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_0_quad_a_ctrl10[0]=(((r).ana_lane_0_quad_a_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_0_quad_a_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_0_quad_a_ctrl10[0]=(((r).ana_lane_0_quad_a_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_0_quad_a_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_0_quad_a_ctrl10[0]=(((r).ana_lane_0_quad_a_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r,_r._ana_lane_0_quad_a_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r,_r._ana_lane_0_quad_a_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL10r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r
#define ANA_LANE_0_QUAD_A_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_t ANA_LANE_0_QUAD_A_CTRL10r_t;
#define ANA_LANE_0_QUAD_A_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_CLR
#define ANA_LANE_0_QUAD_A_CTRL10r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_SET
#define ANA_LANE_0_QUAD_A_CTRL10r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_GET
#define ANA_LANE_0_QUAD_A_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_0_QUAD_A_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_0_QUAD_A_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_0_QUAD_A_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_0_QUAD_A_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_0_QUAD_A_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_0_QUAD_A_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_0_QUAD_A_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_0_QUAD_A_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_0_QUAD_A_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL10r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL10r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL10r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL11
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x810b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r (0x0001810b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl11[1];
	uint32_t _ana_lane_0_quad_a_ctrl11;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_CLR(r) (r).ana_lane_0_quad_a_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_SET(r,d) (r).ana_lane_0_quad_a_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_GET(r) (r).ana_lane_0_quad_a_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_0_quad_a_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_0_quad_a_ctrl11[0]=(((r).ana_lane_0_quad_a_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r,_r._ana_lane_0_quad_a_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r,_r._ana_lane_0_quad_a_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL11r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r
#define ANA_LANE_0_QUAD_A_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_t ANA_LANE_0_QUAD_A_CTRL11r_t;
#define ANA_LANE_0_QUAD_A_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_CLR
#define ANA_LANE_0_QUAD_A_CTRL11r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_SET
#define ANA_LANE_0_QUAD_A_CTRL11r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_GET
#define ANA_LANE_0_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_0_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL11r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL11r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL11r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL12
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x810c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r (0x0001810c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl12[1];
	uint32_t _ana_lane_0_quad_a_ctrl12;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_CLR(r) (r).ana_lane_0_quad_a_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_SET(r,d) (r).ana_lane_0_quad_a_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_GET(r) (r).ana_lane_0_quad_a_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_0_quad_a_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_0_quad_a_ctrl12[0]=(((r).ana_lane_0_quad_a_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_0_quad_a_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_a_ctrl12[0]=(((r).ana_lane_0_quad_a_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_0_quad_a_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_0_quad_a_ctrl12[0]=(((r).ana_lane_0_quad_a_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_0_quad_a_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_a_ctrl12[0]=(((r).ana_lane_0_quad_a_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r,_r._ana_lane_0_quad_a_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r,_r._ana_lane_0_quad_a_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL12r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r
#define ANA_LANE_0_QUAD_A_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_t ANA_LANE_0_QUAD_A_CTRL12r_t;
#define ANA_LANE_0_QUAD_A_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_CLR
#define ANA_LANE_0_QUAD_A_CTRL12r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_SET
#define ANA_LANE_0_QUAD_A_CTRL12r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_GET
#define ANA_LANE_0_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_0_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_0_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_0_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_0_QUAD_A_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_0_QUAD_A_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_0_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_0_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL12r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL12r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL12r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL13
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x810d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r (0x0001810d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl13[1];
	uint32_t _ana_lane_0_quad_a_ctrl13;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_CLR(r) (r).ana_lane_0_quad_a_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_SET(r,d) (r).ana_lane_0_quad_a_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_GET(r) (r).ana_lane_0_quad_a_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_0_quad_a_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_0_quad_a_ctrl13[0]=(((r).ana_lane_0_quad_a_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_0_quad_a_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_a_ctrl13[0]=(((r).ana_lane_0_quad_a_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r,_r._ana_lane_0_quad_a_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r,_r._ana_lane_0_quad_a_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL13r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r
#define ANA_LANE_0_QUAD_A_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_t ANA_LANE_0_QUAD_A_CTRL13r_t;
#define ANA_LANE_0_QUAD_A_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_CLR
#define ANA_LANE_0_QUAD_A_CTRL13r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_SET
#define ANA_LANE_0_QUAD_A_CTRL13r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_GET
#define ANA_LANE_0_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_0_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_0_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_0_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL13r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL13r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL13r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL14
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x810e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r (0x0001810e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl14[1];
	uint32_t _ana_lane_0_quad_a_ctrl14;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_CLR(r) (r).ana_lane_0_quad_a_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_SET(r,d) (r).ana_lane_0_quad_a_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_GET(r) (r).ana_lane_0_quad_a_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_0_quad_a_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_0_quad_a_ctrl14[0]=(((r).ana_lane_0_quad_a_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_0_quad_a_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_0_quad_a_ctrl14[0]=(((r).ana_lane_0_quad_a_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_0_quad_a_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_a_ctrl14[0]=(((r).ana_lane_0_quad_a_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r,_r._ana_lane_0_quad_a_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r,_r._ana_lane_0_quad_a_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL14r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r
#define ANA_LANE_0_QUAD_A_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_t ANA_LANE_0_QUAD_A_CTRL14r_t;
#define ANA_LANE_0_QUAD_A_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_CLR
#define ANA_LANE_0_QUAD_A_CTRL14r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_SET
#define ANA_LANE_0_QUAD_A_CTRL14r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_GET
#define ANA_LANE_0_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_0_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_0_QUAD_A_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_0_QUAD_A_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_0_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_0_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL14r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL14r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL14r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL15
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x810f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r (0x0001810f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl15[1];
	uint32_t _ana_lane_0_quad_a_ctrl15;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_CLR(r) (r).ana_lane_0_quad_a_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SET(r,d) (r).ana_lane_0_quad_a_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_GET(r) (r).ana_lane_0_quad_a_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_0_quad_a_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_0_quad_a_ctrl15[0]=(((r).ana_lane_0_quad_a_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_0_quad_a_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_0_quad_a_ctrl15[0]=(((r).ana_lane_0_quad_a_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_0_quad_a_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_0_quad_a_ctrl15[0]=(((r).ana_lane_0_quad_a_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_0_quad_a_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_a_ctrl15[0]=(((r).ana_lane_0_quad_a_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_0_quad_a_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_0_quad_a_ctrl15[0]=(((r).ana_lane_0_quad_a_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_0_quad_a_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_0_quad_a_ctrl15[0]=(((r).ana_lane_0_quad_a_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r,_r._ana_lane_0_quad_a_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r,_r._ana_lane_0_quad_a_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL15r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r
#define ANA_LANE_0_QUAD_A_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_t ANA_LANE_0_QUAD_A_CTRL15r_t;
#define ANA_LANE_0_QUAD_A_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_CLR
#define ANA_LANE_0_QUAD_A_CTRL15r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SET
#define ANA_LANE_0_QUAD_A_CTRL15r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_GET
#define ANA_LANE_0_QUAD_A_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_0_QUAD_A_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_0_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_0_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL15r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL15r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL15r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_CTRL16
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x8110
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r (0x00018110 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_ctrl16[1];
	uint32_t _ana_lane_0_quad_a_ctrl16;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_CLR(r) (r).ana_lane_0_quad_a_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_SET(r,d) (r).ana_lane_0_quad_a_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_GET(r) (r).ana_lane_0_quad_a_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_0_quad_a_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_0_quad_a_ctrl16[0]=(((r).ana_lane_0_quad_a_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_0_quad_a_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_0_quad_a_ctrl16[0]=(((r).ana_lane_0_quad_a_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r,_r._ana_lane_0_quad_a_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r,_r._ana_lane_0_quad_a_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_CTRL16r BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r
#define ANA_LANE_0_QUAD_A_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_t ANA_LANE_0_QUAD_A_CTRL16r_t;
#define ANA_LANE_0_QUAD_A_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_CLR
#define ANA_LANE_0_QUAD_A_CTRL16r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_SET
#define ANA_LANE_0_QUAD_A_CTRL16r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_GET
#define ANA_LANE_0_QUAD_A_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_0_QUAD_A_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_0_QUAD_A_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_0_QUAD_A_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_0_QUAD_A_CTRL16r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_CTRL16r
#define WRITE_ANA_LANE_0_QUAD_A_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_CTRL16r
#define MODIFY_ANA_LANE_0_QUAD_A_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_A_STATUS0
 * BLOCKS:   ANA_LANE_0_QUAD_A
 * REGADDR:  0x8120
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r (0x00018120 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_A_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_a_status0[1];
	uint32_t _ana_lane_0_quad_a_status0;
} BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_CLR(r) (r).ana_lane_0_quad_a_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_SET(r,d) (r).ana_lane_0_quad_a_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_GET(r) (r).ana_lane_0_quad_a_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_0_quad_a_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_0_quad_a_status0[0]=(((r).ana_lane_0_quad_a_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_0_quad_a_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_0_quad_a_status0[0]=(((r).ana_lane_0_quad_a_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_A_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r,_r._ana_lane_0_quad_a_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r,_r._ana_lane_0_quad_a_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_A_STATUS0r BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r
#define ANA_LANE_0_QUAD_A_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_t ANA_LANE_0_QUAD_A_STATUS0r_t;
#define ANA_LANE_0_QUAD_A_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_CLR
#define ANA_LANE_0_QUAD_A_STATUS0r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_SET
#define ANA_LANE_0_QUAD_A_STATUS0r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_GET
#define ANA_LANE_0_QUAD_A_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_0_QUAD_A_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_0_QUAD_A_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_0_QUAD_A_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_0_QUAD_A_STATUS0r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_A_STATUS0r
#define WRITE_ANA_LANE_0_QUAD_A_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_A_STATUS0r
#define MODIFY_ANA_LANE_0_QUAD_A_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_A_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_A_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL0
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x8200
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r (0x00018200 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl0[1];
	uint32_t _ana_lane_1_quad_a_ctrl0;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_CLR(r) (r).ana_lane_1_quad_a_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_SET(r,d) (r).ana_lane_1_quad_a_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_GET(r) (r).ana_lane_1_quad_a_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_1_quad_a_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_1_quad_a_ctrl0[0]=(((r).ana_lane_1_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_1_quad_a_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_1_quad_a_ctrl0[0]=(((r).ana_lane_1_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_1_quad_a_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_1_quad_a_ctrl0[0]=(((r).ana_lane_1_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_1_quad_a_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_1_quad_a_ctrl0[0]=(((r).ana_lane_1_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_1_quad_a_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_1_quad_a_ctrl0[0]=(((r).ana_lane_1_quad_a_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r,_r._ana_lane_1_quad_a_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r,_r._ana_lane_1_quad_a_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL0r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r
#define ANA_LANE_1_QUAD_A_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_t ANA_LANE_1_QUAD_A_CTRL0r_t;
#define ANA_LANE_1_QUAD_A_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_CLR
#define ANA_LANE_1_QUAD_A_CTRL0r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_SET
#define ANA_LANE_1_QUAD_A_CTRL0r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_GET
#define ANA_LANE_1_QUAD_A_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_1_QUAD_A_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_1_QUAD_A_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_1_QUAD_A_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL0r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL0r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL0r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL1
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x8201
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r (0x00018201 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl1[1];
	uint32_t _ana_lane_1_quad_a_ctrl1;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_CLR(r) (r).ana_lane_1_quad_a_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_SET(r,d) (r).ana_lane_1_quad_a_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_GET(r) (r).ana_lane_1_quad_a_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_1_quad_a_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_1_quad_a_ctrl1[0]=(((r).ana_lane_1_quad_a_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_1_quad_a_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_1_quad_a_ctrl1[0]=(((r).ana_lane_1_quad_a_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_1_quad_a_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_1_quad_a_ctrl1[0]=(((r).ana_lane_1_quad_a_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_1_quad_a_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_1_quad_a_ctrl1[0]=(((r).ana_lane_1_quad_a_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_1_quad_a_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_1_quad_a_ctrl1[0]=(((r).ana_lane_1_quad_a_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r,_r._ana_lane_1_quad_a_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r,_r._ana_lane_1_quad_a_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL1r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r
#define ANA_LANE_1_QUAD_A_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_t ANA_LANE_1_QUAD_A_CTRL1r_t;
#define ANA_LANE_1_QUAD_A_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_CLR
#define ANA_LANE_1_QUAD_A_CTRL1r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_SET
#define ANA_LANE_1_QUAD_A_CTRL1r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_GET
#define ANA_LANE_1_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_1_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_1_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_1_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_1_QUAD_A_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_1_QUAD_A_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_1_QUAD_A_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_REF_OCLf_GET
#define ANA_LANE_1_QUAD_A_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_REF_OCLf_SET
#define ANA_LANE_1_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_1_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL1r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL1r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL1r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL2
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x8202
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r (0x00018202 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl2[1];
	uint32_t _ana_lane_1_quad_a_ctrl2;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_CLR(r) (r).ana_lane_1_quad_a_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_SET(r,d) (r).ana_lane_1_quad_a_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_GET(r) (r).ana_lane_1_quad_a_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_1_quad_a_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_1_quad_a_ctrl2[0]=(((r).ana_lane_1_quad_a_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_1_quad_a_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_1_quad_a_ctrl2[0]=(((r).ana_lane_1_quad_a_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r,_r._ana_lane_1_quad_a_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r,_r._ana_lane_1_quad_a_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL2r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r
#define ANA_LANE_1_QUAD_A_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_t ANA_LANE_1_QUAD_A_CTRL2r_t;
#define ANA_LANE_1_QUAD_A_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_CLR
#define ANA_LANE_1_QUAD_A_CTRL2r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_SET
#define ANA_LANE_1_QUAD_A_CTRL2r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_GET
#define ANA_LANE_1_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_1_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_1_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_1_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL2r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL2r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL2r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL3
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x8203
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r (0x00018203 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl3[1];
	uint32_t _ana_lane_1_quad_a_ctrl3;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_CLR(r) (r).ana_lane_1_quad_a_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_SET(r,d) (r).ana_lane_1_quad_a_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_GET(r) (r).ana_lane_1_quad_a_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_1_quad_a_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_1_quad_a_ctrl3[0]=(((r).ana_lane_1_quad_a_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_1_quad_a_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_1_quad_a_ctrl3[0]=(((r).ana_lane_1_quad_a_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r,_r._ana_lane_1_quad_a_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r,_r._ana_lane_1_quad_a_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL3r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r
#define ANA_LANE_1_QUAD_A_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_t ANA_LANE_1_QUAD_A_CTRL3r_t;
#define ANA_LANE_1_QUAD_A_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_CLR
#define ANA_LANE_1_QUAD_A_CTRL3r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_SET
#define ANA_LANE_1_QUAD_A_CTRL3r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_GET
#define ANA_LANE_1_QUAD_A_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_1_QUAD_A_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_1_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_1_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL3r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL3r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL3r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL4
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x8204
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r (0x00018204 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl4[1];
	uint32_t _ana_lane_1_quad_a_ctrl4;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_CLR(r) (r).ana_lane_1_quad_a_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_SET(r,d) (r).ana_lane_1_quad_a_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_GET(r) (r).ana_lane_1_quad_a_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_1_quad_a_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_1_quad_a_ctrl4[0]=(((r).ana_lane_1_quad_a_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_1_quad_a_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_1_quad_a_ctrl4[0]=(((r).ana_lane_1_quad_a_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r,_r._ana_lane_1_quad_a_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r,_r._ana_lane_1_quad_a_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL4r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r
#define ANA_LANE_1_QUAD_A_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_t ANA_LANE_1_QUAD_A_CTRL4r_t;
#define ANA_LANE_1_QUAD_A_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_CLR
#define ANA_LANE_1_QUAD_A_CTRL4r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_SET
#define ANA_LANE_1_QUAD_A_CTRL4r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_GET
#define ANA_LANE_1_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_1_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_1_QUAD_A_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_1_QUAD_A_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL4r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL4r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL4r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL5
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x8205
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r (0x00018205 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl5[1];
	uint32_t _ana_lane_1_quad_a_ctrl5;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_CLR(r) (r).ana_lane_1_quad_a_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_SET(r,d) (r).ana_lane_1_quad_a_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_GET(r) (r).ana_lane_1_quad_a_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_1_quad_a_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_1_quad_a_ctrl5[0]=(((r).ana_lane_1_quad_a_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_1_quad_a_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_1_quad_a_ctrl5[0]=(((r).ana_lane_1_quad_a_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_1_quad_a_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_1_quad_a_ctrl5[0]=(((r).ana_lane_1_quad_a_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r,_r._ana_lane_1_quad_a_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r,_r._ana_lane_1_quad_a_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL5r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r
#define ANA_LANE_1_QUAD_A_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_t ANA_LANE_1_QUAD_A_CTRL5r_t;
#define ANA_LANE_1_QUAD_A_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_CLR
#define ANA_LANE_1_QUAD_A_CTRL5r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_SET
#define ANA_LANE_1_QUAD_A_CTRL5r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_GET
#define ANA_LANE_1_QUAD_A_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_1_QUAD_A_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_1_QUAD_A_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_1_QUAD_A_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_1_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_1_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL5r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL5r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL5r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL6
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x8206
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r (0x00018206 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl6[1];
	uint32_t _ana_lane_1_quad_a_ctrl6;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_CLR(r) (r).ana_lane_1_quad_a_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_SET(r,d) (r).ana_lane_1_quad_a_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_GET(r) (r).ana_lane_1_quad_a_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_1_quad_a_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_1_quad_a_ctrl6[0]=(((r).ana_lane_1_quad_a_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_1_quad_a_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_1_quad_a_ctrl6[0]=(((r).ana_lane_1_quad_a_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r,_r._ana_lane_1_quad_a_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r,_r._ana_lane_1_quad_a_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL6r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r
#define ANA_LANE_1_QUAD_A_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_t ANA_LANE_1_QUAD_A_CTRL6r_t;
#define ANA_LANE_1_QUAD_A_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_CLR
#define ANA_LANE_1_QUAD_A_CTRL6r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_SET
#define ANA_LANE_1_QUAD_A_CTRL6r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_GET
#define ANA_LANE_1_QUAD_A_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_1_QUAD_A_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_1_QUAD_A_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_1_QUAD_A_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL6r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL6r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL6r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL7
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x8207
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r (0x00018207 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl7[1];
	uint32_t _ana_lane_1_quad_a_ctrl7;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_CLR(r) (r).ana_lane_1_quad_a_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_SET(r,d) (r).ana_lane_1_quad_a_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_GET(r) (r).ana_lane_1_quad_a_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_1_quad_a_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_1_quad_a_ctrl7[0]=(((r).ana_lane_1_quad_a_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_1_quad_a_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_1_quad_a_ctrl7[0]=(((r).ana_lane_1_quad_a_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r,_r._ana_lane_1_quad_a_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r,_r._ana_lane_1_quad_a_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL7r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r
#define ANA_LANE_1_QUAD_A_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_t ANA_LANE_1_QUAD_A_CTRL7r_t;
#define ANA_LANE_1_QUAD_A_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_CLR
#define ANA_LANE_1_QUAD_A_CTRL7r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_SET
#define ANA_LANE_1_QUAD_A_CTRL7r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_GET
#define ANA_LANE_1_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_1_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_1_QUAD_A_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_1_QUAD_A_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL7r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL7r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL7r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL8
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x8208
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r (0x00018208 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl8[1];
	uint32_t _ana_lane_1_quad_a_ctrl8;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_CLR(r) (r).ana_lane_1_quad_a_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_SET(r,d) (r).ana_lane_1_quad_a_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_GET(r) (r).ana_lane_1_quad_a_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_1_quad_a_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_1_quad_a_ctrl8[0]=(((r).ana_lane_1_quad_a_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_1_quad_a_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_1_quad_a_ctrl8[0]=(((r).ana_lane_1_quad_a_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_1_quad_a_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_1_quad_a_ctrl8[0]=(((r).ana_lane_1_quad_a_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r,_r._ana_lane_1_quad_a_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r,_r._ana_lane_1_quad_a_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL8r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r
#define ANA_LANE_1_QUAD_A_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_t ANA_LANE_1_QUAD_A_CTRL8r_t;
#define ANA_LANE_1_QUAD_A_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_CLR
#define ANA_LANE_1_QUAD_A_CTRL8r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_SET
#define ANA_LANE_1_QUAD_A_CTRL8r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_GET
#define ANA_LANE_1_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_1_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_1_QUAD_A_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_1_QUAD_A_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_1_QUAD_A_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_LA_PDf_GET
#define ANA_LANE_1_QUAD_A_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL8r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL8r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL8r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL9
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x8209
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r (0x00018209 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl9[1];
	uint32_t _ana_lane_1_quad_a_ctrl9;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_CLR(r) (r).ana_lane_1_quad_a_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_SET(r,d) (r).ana_lane_1_quad_a_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_GET(r) (r).ana_lane_1_quad_a_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_1_quad_a_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_1_quad_a_ctrl9[0]=(((r).ana_lane_1_quad_a_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_1_quad_a_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_1_quad_a_ctrl9[0]=(((r).ana_lane_1_quad_a_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_1_quad_a_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_1_quad_a_ctrl9[0]=(((r).ana_lane_1_quad_a_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_1_quad_a_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_1_quad_a_ctrl9[0]=(((r).ana_lane_1_quad_a_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r,_r._ana_lane_1_quad_a_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r,_r._ana_lane_1_quad_a_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL9r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r
#define ANA_LANE_1_QUAD_A_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_t ANA_LANE_1_QUAD_A_CTRL9r_t;
#define ANA_LANE_1_QUAD_A_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_CLR
#define ANA_LANE_1_QUAD_A_CTRL9r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_SET
#define ANA_LANE_1_QUAD_A_CTRL9r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_GET
#define ANA_LANE_1_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_1_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_1_QUAD_A_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_1_QUAD_A_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_1_QUAD_A_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_1_QUAD_A_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_1_QUAD_A_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_1_QUAD_A_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL9r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL9r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL9r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL10
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x820a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r (0x0001820a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl10[1];
	uint32_t _ana_lane_1_quad_a_ctrl10;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_CLR(r) (r).ana_lane_1_quad_a_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_SET(r,d) (r).ana_lane_1_quad_a_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_GET(r) (r).ana_lane_1_quad_a_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_1_quad_a_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_1_quad_a_ctrl10[0]=(((r).ana_lane_1_quad_a_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_1_quad_a_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_1_quad_a_ctrl10[0]=(((r).ana_lane_1_quad_a_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_1_quad_a_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_1_quad_a_ctrl10[0]=(((r).ana_lane_1_quad_a_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_1_quad_a_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_1_quad_a_ctrl10[0]=(((r).ana_lane_1_quad_a_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_1_quad_a_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_1_quad_a_ctrl10[0]=(((r).ana_lane_1_quad_a_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r,_r._ana_lane_1_quad_a_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r,_r._ana_lane_1_quad_a_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL10r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r
#define ANA_LANE_1_QUAD_A_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_t ANA_LANE_1_QUAD_A_CTRL10r_t;
#define ANA_LANE_1_QUAD_A_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_CLR
#define ANA_LANE_1_QUAD_A_CTRL10r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_SET
#define ANA_LANE_1_QUAD_A_CTRL10r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_GET
#define ANA_LANE_1_QUAD_A_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_1_QUAD_A_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_1_QUAD_A_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_1_QUAD_A_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_1_QUAD_A_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_1_QUAD_A_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_1_QUAD_A_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_1_QUAD_A_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_1_QUAD_A_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_1_QUAD_A_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL10r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL10r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL10r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL11
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x820b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r (0x0001820b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl11[1];
	uint32_t _ana_lane_1_quad_a_ctrl11;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_CLR(r) (r).ana_lane_1_quad_a_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_SET(r,d) (r).ana_lane_1_quad_a_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_GET(r) (r).ana_lane_1_quad_a_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_1_quad_a_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_1_quad_a_ctrl11[0]=(((r).ana_lane_1_quad_a_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r,_r._ana_lane_1_quad_a_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r,_r._ana_lane_1_quad_a_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL11r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r
#define ANA_LANE_1_QUAD_A_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_t ANA_LANE_1_QUAD_A_CTRL11r_t;
#define ANA_LANE_1_QUAD_A_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_CLR
#define ANA_LANE_1_QUAD_A_CTRL11r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_SET
#define ANA_LANE_1_QUAD_A_CTRL11r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_GET
#define ANA_LANE_1_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_1_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL11r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL11r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL11r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL12
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x820c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r (0x0001820c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl12[1];
	uint32_t _ana_lane_1_quad_a_ctrl12;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_CLR(r) (r).ana_lane_1_quad_a_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_SET(r,d) (r).ana_lane_1_quad_a_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_GET(r) (r).ana_lane_1_quad_a_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_1_quad_a_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_1_quad_a_ctrl12[0]=(((r).ana_lane_1_quad_a_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_1_quad_a_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_a_ctrl12[0]=(((r).ana_lane_1_quad_a_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_1_quad_a_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_1_quad_a_ctrl12[0]=(((r).ana_lane_1_quad_a_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_1_quad_a_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_a_ctrl12[0]=(((r).ana_lane_1_quad_a_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r,_r._ana_lane_1_quad_a_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r,_r._ana_lane_1_quad_a_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL12r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r
#define ANA_LANE_1_QUAD_A_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_t ANA_LANE_1_QUAD_A_CTRL12r_t;
#define ANA_LANE_1_QUAD_A_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_CLR
#define ANA_LANE_1_QUAD_A_CTRL12r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_SET
#define ANA_LANE_1_QUAD_A_CTRL12r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_GET
#define ANA_LANE_1_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_1_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_1_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_1_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_1_QUAD_A_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_1_QUAD_A_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_1_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_1_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL12r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL12r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL12r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL13
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x820d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r (0x0001820d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl13[1];
	uint32_t _ana_lane_1_quad_a_ctrl13;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_CLR(r) (r).ana_lane_1_quad_a_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_SET(r,d) (r).ana_lane_1_quad_a_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_GET(r) (r).ana_lane_1_quad_a_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_1_quad_a_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_1_quad_a_ctrl13[0]=(((r).ana_lane_1_quad_a_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_1_quad_a_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_a_ctrl13[0]=(((r).ana_lane_1_quad_a_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r,_r._ana_lane_1_quad_a_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r,_r._ana_lane_1_quad_a_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL13r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r
#define ANA_LANE_1_QUAD_A_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_t ANA_LANE_1_QUAD_A_CTRL13r_t;
#define ANA_LANE_1_QUAD_A_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_CLR
#define ANA_LANE_1_QUAD_A_CTRL13r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_SET
#define ANA_LANE_1_QUAD_A_CTRL13r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_GET
#define ANA_LANE_1_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_1_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_1_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_1_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL13r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL13r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL13r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL14
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x820e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r (0x0001820e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl14[1];
	uint32_t _ana_lane_1_quad_a_ctrl14;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_CLR(r) (r).ana_lane_1_quad_a_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_SET(r,d) (r).ana_lane_1_quad_a_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_GET(r) (r).ana_lane_1_quad_a_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_1_quad_a_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_1_quad_a_ctrl14[0]=(((r).ana_lane_1_quad_a_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_1_quad_a_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_1_quad_a_ctrl14[0]=(((r).ana_lane_1_quad_a_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_1_quad_a_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_a_ctrl14[0]=(((r).ana_lane_1_quad_a_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r,_r._ana_lane_1_quad_a_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r,_r._ana_lane_1_quad_a_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL14r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r
#define ANA_LANE_1_QUAD_A_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_t ANA_LANE_1_QUAD_A_CTRL14r_t;
#define ANA_LANE_1_QUAD_A_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_CLR
#define ANA_LANE_1_QUAD_A_CTRL14r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_SET
#define ANA_LANE_1_QUAD_A_CTRL14r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_GET
#define ANA_LANE_1_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_1_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_1_QUAD_A_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_1_QUAD_A_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_1_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_1_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL14r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL14r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL14r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL15
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x820f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r (0x0001820f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl15[1];
	uint32_t _ana_lane_1_quad_a_ctrl15;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_CLR(r) (r).ana_lane_1_quad_a_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SET(r,d) (r).ana_lane_1_quad_a_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_GET(r) (r).ana_lane_1_quad_a_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_1_quad_a_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_1_quad_a_ctrl15[0]=(((r).ana_lane_1_quad_a_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_1_quad_a_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_1_quad_a_ctrl15[0]=(((r).ana_lane_1_quad_a_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_1_quad_a_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_1_quad_a_ctrl15[0]=(((r).ana_lane_1_quad_a_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_1_quad_a_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_a_ctrl15[0]=(((r).ana_lane_1_quad_a_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_1_quad_a_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_1_quad_a_ctrl15[0]=(((r).ana_lane_1_quad_a_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_1_quad_a_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_1_quad_a_ctrl15[0]=(((r).ana_lane_1_quad_a_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r,_r._ana_lane_1_quad_a_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r,_r._ana_lane_1_quad_a_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL15r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r
#define ANA_LANE_1_QUAD_A_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_t ANA_LANE_1_QUAD_A_CTRL15r_t;
#define ANA_LANE_1_QUAD_A_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_CLR
#define ANA_LANE_1_QUAD_A_CTRL15r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SET
#define ANA_LANE_1_QUAD_A_CTRL15r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_GET
#define ANA_LANE_1_QUAD_A_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_1_QUAD_A_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_1_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_1_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL15r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL15r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL15r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_CTRL16
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x8210
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r (0x00018210 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_ctrl16[1];
	uint32_t _ana_lane_1_quad_a_ctrl16;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_CLR(r) (r).ana_lane_1_quad_a_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_SET(r,d) (r).ana_lane_1_quad_a_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_GET(r) (r).ana_lane_1_quad_a_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_1_quad_a_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_1_quad_a_ctrl16[0]=(((r).ana_lane_1_quad_a_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_1_quad_a_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_1_quad_a_ctrl16[0]=(((r).ana_lane_1_quad_a_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r,_r._ana_lane_1_quad_a_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r,_r._ana_lane_1_quad_a_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_CTRL16r BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r
#define ANA_LANE_1_QUAD_A_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_t ANA_LANE_1_QUAD_A_CTRL16r_t;
#define ANA_LANE_1_QUAD_A_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_CLR
#define ANA_LANE_1_QUAD_A_CTRL16r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_SET
#define ANA_LANE_1_QUAD_A_CTRL16r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_GET
#define ANA_LANE_1_QUAD_A_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_1_QUAD_A_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_1_QUAD_A_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_1_QUAD_A_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_1_QUAD_A_CTRL16r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_CTRL16r
#define WRITE_ANA_LANE_1_QUAD_A_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_CTRL16r
#define MODIFY_ANA_LANE_1_QUAD_A_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_A_STATUS0
 * BLOCKS:   ANA_LANE_1_QUAD_A
 * REGADDR:  0x8220
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r (0x00018220 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_A_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_a_status0[1];
	uint32_t _ana_lane_1_quad_a_status0;
} BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_CLR(r) (r).ana_lane_1_quad_a_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_SET(r,d) (r).ana_lane_1_quad_a_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_GET(r) (r).ana_lane_1_quad_a_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_1_quad_a_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_1_quad_a_status0[0]=(((r).ana_lane_1_quad_a_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_1_quad_a_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_1_quad_a_status0[0]=(((r).ana_lane_1_quad_a_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_A_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r,_r._ana_lane_1_quad_a_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r,_r._ana_lane_1_quad_a_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_A_STATUS0r BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r
#define ANA_LANE_1_QUAD_A_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_t ANA_LANE_1_QUAD_A_STATUS0r_t;
#define ANA_LANE_1_QUAD_A_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_CLR
#define ANA_LANE_1_QUAD_A_STATUS0r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_SET
#define ANA_LANE_1_QUAD_A_STATUS0r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_GET
#define ANA_LANE_1_QUAD_A_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_1_QUAD_A_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_1_QUAD_A_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_1_QUAD_A_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_1_QUAD_A_STATUS0r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_A_STATUS0r
#define WRITE_ANA_LANE_1_QUAD_A_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_A_STATUS0r
#define MODIFY_ANA_LANE_1_QUAD_A_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_A_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_A_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL0
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x8400
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r (0x00018400 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl0[1];
	uint32_t _ana_lane_2_quad_a_ctrl0;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_CLR(r) (r).ana_lane_2_quad_a_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_SET(r,d) (r).ana_lane_2_quad_a_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_GET(r) (r).ana_lane_2_quad_a_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_2_quad_a_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_2_quad_a_ctrl0[0]=(((r).ana_lane_2_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_2_quad_a_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_2_quad_a_ctrl0[0]=(((r).ana_lane_2_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_2_quad_a_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_2_quad_a_ctrl0[0]=(((r).ana_lane_2_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_2_quad_a_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_2_quad_a_ctrl0[0]=(((r).ana_lane_2_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_2_quad_a_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_2_quad_a_ctrl0[0]=(((r).ana_lane_2_quad_a_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r,_r._ana_lane_2_quad_a_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r,_r._ana_lane_2_quad_a_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL0r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r
#define ANA_LANE_2_QUAD_A_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_t ANA_LANE_2_QUAD_A_CTRL0r_t;
#define ANA_LANE_2_QUAD_A_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_CLR
#define ANA_LANE_2_QUAD_A_CTRL0r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_SET
#define ANA_LANE_2_QUAD_A_CTRL0r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_GET
#define ANA_LANE_2_QUAD_A_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_2_QUAD_A_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_2_QUAD_A_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_2_QUAD_A_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL0r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL0r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL0r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL1
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x8401
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r (0x00018401 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl1[1];
	uint32_t _ana_lane_2_quad_a_ctrl1;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_CLR(r) (r).ana_lane_2_quad_a_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_SET(r,d) (r).ana_lane_2_quad_a_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_GET(r) (r).ana_lane_2_quad_a_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_2_quad_a_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_2_quad_a_ctrl1[0]=(((r).ana_lane_2_quad_a_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_2_quad_a_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_2_quad_a_ctrl1[0]=(((r).ana_lane_2_quad_a_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_2_quad_a_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_2_quad_a_ctrl1[0]=(((r).ana_lane_2_quad_a_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_2_quad_a_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_2_quad_a_ctrl1[0]=(((r).ana_lane_2_quad_a_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_2_quad_a_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_2_quad_a_ctrl1[0]=(((r).ana_lane_2_quad_a_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r,_r._ana_lane_2_quad_a_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r,_r._ana_lane_2_quad_a_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL1r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r
#define ANA_LANE_2_QUAD_A_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_t ANA_LANE_2_QUAD_A_CTRL1r_t;
#define ANA_LANE_2_QUAD_A_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_CLR
#define ANA_LANE_2_QUAD_A_CTRL1r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_SET
#define ANA_LANE_2_QUAD_A_CTRL1r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_GET
#define ANA_LANE_2_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_2_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_2_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_2_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_2_QUAD_A_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_2_QUAD_A_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_2_QUAD_A_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_REF_OCLf_GET
#define ANA_LANE_2_QUAD_A_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_REF_OCLf_SET
#define ANA_LANE_2_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_2_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL1r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL1r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL1r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL2
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x8402
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r (0x00018402 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl2[1];
	uint32_t _ana_lane_2_quad_a_ctrl2;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_CLR(r) (r).ana_lane_2_quad_a_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_SET(r,d) (r).ana_lane_2_quad_a_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_GET(r) (r).ana_lane_2_quad_a_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_2_quad_a_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_2_quad_a_ctrl2[0]=(((r).ana_lane_2_quad_a_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_2_quad_a_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_2_quad_a_ctrl2[0]=(((r).ana_lane_2_quad_a_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r,_r._ana_lane_2_quad_a_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r,_r._ana_lane_2_quad_a_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL2r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r
#define ANA_LANE_2_QUAD_A_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_t ANA_LANE_2_QUAD_A_CTRL2r_t;
#define ANA_LANE_2_QUAD_A_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_CLR
#define ANA_LANE_2_QUAD_A_CTRL2r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_SET
#define ANA_LANE_2_QUAD_A_CTRL2r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_GET
#define ANA_LANE_2_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_2_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_2_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_2_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL2r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL2r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL2r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL3
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x8403
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r (0x00018403 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl3[1];
	uint32_t _ana_lane_2_quad_a_ctrl3;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_CLR(r) (r).ana_lane_2_quad_a_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_SET(r,d) (r).ana_lane_2_quad_a_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_GET(r) (r).ana_lane_2_quad_a_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_2_quad_a_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_2_quad_a_ctrl3[0]=(((r).ana_lane_2_quad_a_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_2_quad_a_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_2_quad_a_ctrl3[0]=(((r).ana_lane_2_quad_a_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r,_r._ana_lane_2_quad_a_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r,_r._ana_lane_2_quad_a_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL3r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r
#define ANA_LANE_2_QUAD_A_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_t ANA_LANE_2_QUAD_A_CTRL3r_t;
#define ANA_LANE_2_QUAD_A_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_CLR
#define ANA_LANE_2_QUAD_A_CTRL3r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_SET
#define ANA_LANE_2_QUAD_A_CTRL3r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_GET
#define ANA_LANE_2_QUAD_A_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_2_QUAD_A_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_2_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_2_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL3r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL3r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL3r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL4
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x8404
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r (0x00018404 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl4[1];
	uint32_t _ana_lane_2_quad_a_ctrl4;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_CLR(r) (r).ana_lane_2_quad_a_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_SET(r,d) (r).ana_lane_2_quad_a_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_GET(r) (r).ana_lane_2_quad_a_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_2_quad_a_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_2_quad_a_ctrl4[0]=(((r).ana_lane_2_quad_a_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_2_quad_a_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_2_quad_a_ctrl4[0]=(((r).ana_lane_2_quad_a_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r,_r._ana_lane_2_quad_a_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r,_r._ana_lane_2_quad_a_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL4r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r
#define ANA_LANE_2_QUAD_A_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_t ANA_LANE_2_QUAD_A_CTRL4r_t;
#define ANA_LANE_2_QUAD_A_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_CLR
#define ANA_LANE_2_QUAD_A_CTRL4r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_SET
#define ANA_LANE_2_QUAD_A_CTRL4r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_GET
#define ANA_LANE_2_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_2_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_2_QUAD_A_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_2_QUAD_A_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL4r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL4r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL4r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL5
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x8405
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r (0x00018405 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl5[1];
	uint32_t _ana_lane_2_quad_a_ctrl5;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_CLR(r) (r).ana_lane_2_quad_a_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_SET(r,d) (r).ana_lane_2_quad_a_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_GET(r) (r).ana_lane_2_quad_a_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_2_quad_a_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_2_quad_a_ctrl5[0]=(((r).ana_lane_2_quad_a_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_2_quad_a_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_2_quad_a_ctrl5[0]=(((r).ana_lane_2_quad_a_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_2_quad_a_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_2_quad_a_ctrl5[0]=(((r).ana_lane_2_quad_a_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r,_r._ana_lane_2_quad_a_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r,_r._ana_lane_2_quad_a_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL5r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r
#define ANA_LANE_2_QUAD_A_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_t ANA_LANE_2_QUAD_A_CTRL5r_t;
#define ANA_LANE_2_QUAD_A_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_CLR
#define ANA_LANE_2_QUAD_A_CTRL5r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_SET
#define ANA_LANE_2_QUAD_A_CTRL5r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_GET
#define ANA_LANE_2_QUAD_A_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_2_QUAD_A_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_2_QUAD_A_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_2_QUAD_A_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_2_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_2_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL5r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL5r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL5r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL6
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x8406
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r (0x00018406 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl6[1];
	uint32_t _ana_lane_2_quad_a_ctrl6;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_CLR(r) (r).ana_lane_2_quad_a_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_SET(r,d) (r).ana_lane_2_quad_a_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_GET(r) (r).ana_lane_2_quad_a_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_2_quad_a_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_2_quad_a_ctrl6[0]=(((r).ana_lane_2_quad_a_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_2_quad_a_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_2_quad_a_ctrl6[0]=(((r).ana_lane_2_quad_a_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r,_r._ana_lane_2_quad_a_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r,_r._ana_lane_2_quad_a_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL6r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r
#define ANA_LANE_2_QUAD_A_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_t ANA_LANE_2_QUAD_A_CTRL6r_t;
#define ANA_LANE_2_QUAD_A_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_CLR
#define ANA_LANE_2_QUAD_A_CTRL6r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_SET
#define ANA_LANE_2_QUAD_A_CTRL6r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_GET
#define ANA_LANE_2_QUAD_A_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_2_QUAD_A_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_2_QUAD_A_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_2_QUAD_A_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL6r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL6r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL6r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL7
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x8407
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r (0x00018407 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl7[1];
	uint32_t _ana_lane_2_quad_a_ctrl7;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_CLR(r) (r).ana_lane_2_quad_a_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_SET(r,d) (r).ana_lane_2_quad_a_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_GET(r) (r).ana_lane_2_quad_a_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_2_quad_a_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_2_quad_a_ctrl7[0]=(((r).ana_lane_2_quad_a_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_2_quad_a_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_2_quad_a_ctrl7[0]=(((r).ana_lane_2_quad_a_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r,_r._ana_lane_2_quad_a_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r,_r._ana_lane_2_quad_a_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL7r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r
#define ANA_LANE_2_QUAD_A_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_t ANA_LANE_2_QUAD_A_CTRL7r_t;
#define ANA_LANE_2_QUAD_A_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_CLR
#define ANA_LANE_2_QUAD_A_CTRL7r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_SET
#define ANA_LANE_2_QUAD_A_CTRL7r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_GET
#define ANA_LANE_2_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_2_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_2_QUAD_A_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_2_QUAD_A_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL7r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL7r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL7r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL8
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x8408
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r (0x00018408 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl8[1];
	uint32_t _ana_lane_2_quad_a_ctrl8;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_CLR(r) (r).ana_lane_2_quad_a_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_SET(r,d) (r).ana_lane_2_quad_a_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_GET(r) (r).ana_lane_2_quad_a_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_2_quad_a_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_2_quad_a_ctrl8[0]=(((r).ana_lane_2_quad_a_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_2_quad_a_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_2_quad_a_ctrl8[0]=(((r).ana_lane_2_quad_a_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_2_quad_a_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_2_quad_a_ctrl8[0]=(((r).ana_lane_2_quad_a_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r,_r._ana_lane_2_quad_a_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r,_r._ana_lane_2_quad_a_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL8r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r
#define ANA_LANE_2_QUAD_A_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_t ANA_LANE_2_QUAD_A_CTRL8r_t;
#define ANA_LANE_2_QUAD_A_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_CLR
#define ANA_LANE_2_QUAD_A_CTRL8r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_SET
#define ANA_LANE_2_QUAD_A_CTRL8r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_GET
#define ANA_LANE_2_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_2_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_2_QUAD_A_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_2_QUAD_A_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_2_QUAD_A_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_LA_PDf_GET
#define ANA_LANE_2_QUAD_A_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL8r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL8r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL8r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL9
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x8409
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r (0x00018409 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl9[1];
	uint32_t _ana_lane_2_quad_a_ctrl9;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_CLR(r) (r).ana_lane_2_quad_a_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_SET(r,d) (r).ana_lane_2_quad_a_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_GET(r) (r).ana_lane_2_quad_a_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_2_quad_a_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_2_quad_a_ctrl9[0]=(((r).ana_lane_2_quad_a_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_2_quad_a_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_2_quad_a_ctrl9[0]=(((r).ana_lane_2_quad_a_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_2_quad_a_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_2_quad_a_ctrl9[0]=(((r).ana_lane_2_quad_a_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_2_quad_a_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_2_quad_a_ctrl9[0]=(((r).ana_lane_2_quad_a_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r,_r._ana_lane_2_quad_a_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r,_r._ana_lane_2_quad_a_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL9r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r
#define ANA_LANE_2_QUAD_A_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_t ANA_LANE_2_QUAD_A_CTRL9r_t;
#define ANA_LANE_2_QUAD_A_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_CLR
#define ANA_LANE_2_QUAD_A_CTRL9r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_SET
#define ANA_LANE_2_QUAD_A_CTRL9r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_GET
#define ANA_LANE_2_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_2_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_2_QUAD_A_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_2_QUAD_A_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_2_QUAD_A_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_2_QUAD_A_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_2_QUAD_A_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_2_QUAD_A_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL9r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL9r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL9r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL10
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x840a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r (0x0001840a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl10[1];
	uint32_t _ana_lane_2_quad_a_ctrl10;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_CLR(r) (r).ana_lane_2_quad_a_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_SET(r,d) (r).ana_lane_2_quad_a_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_GET(r) (r).ana_lane_2_quad_a_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_2_quad_a_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_2_quad_a_ctrl10[0]=(((r).ana_lane_2_quad_a_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_2_quad_a_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_2_quad_a_ctrl10[0]=(((r).ana_lane_2_quad_a_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_2_quad_a_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_2_quad_a_ctrl10[0]=(((r).ana_lane_2_quad_a_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_2_quad_a_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_2_quad_a_ctrl10[0]=(((r).ana_lane_2_quad_a_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_2_quad_a_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_2_quad_a_ctrl10[0]=(((r).ana_lane_2_quad_a_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r,_r._ana_lane_2_quad_a_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r,_r._ana_lane_2_quad_a_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL10r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r
#define ANA_LANE_2_QUAD_A_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_t ANA_LANE_2_QUAD_A_CTRL10r_t;
#define ANA_LANE_2_QUAD_A_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_CLR
#define ANA_LANE_2_QUAD_A_CTRL10r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_SET
#define ANA_LANE_2_QUAD_A_CTRL10r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_GET
#define ANA_LANE_2_QUAD_A_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_2_QUAD_A_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_2_QUAD_A_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_2_QUAD_A_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_2_QUAD_A_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_2_QUAD_A_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_2_QUAD_A_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_2_QUAD_A_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_2_QUAD_A_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_2_QUAD_A_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL10r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL10r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL10r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL11
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x840b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r (0x0001840b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl11[1];
	uint32_t _ana_lane_2_quad_a_ctrl11;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_CLR(r) (r).ana_lane_2_quad_a_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_SET(r,d) (r).ana_lane_2_quad_a_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_GET(r) (r).ana_lane_2_quad_a_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_2_quad_a_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_2_quad_a_ctrl11[0]=(((r).ana_lane_2_quad_a_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r,_r._ana_lane_2_quad_a_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r,_r._ana_lane_2_quad_a_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL11r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r
#define ANA_LANE_2_QUAD_A_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_t ANA_LANE_2_QUAD_A_CTRL11r_t;
#define ANA_LANE_2_QUAD_A_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_CLR
#define ANA_LANE_2_QUAD_A_CTRL11r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_SET
#define ANA_LANE_2_QUAD_A_CTRL11r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_GET
#define ANA_LANE_2_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_2_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL11r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL11r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL11r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL12
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x840c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r (0x0001840c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl12[1];
	uint32_t _ana_lane_2_quad_a_ctrl12;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_CLR(r) (r).ana_lane_2_quad_a_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_SET(r,d) (r).ana_lane_2_quad_a_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_GET(r) (r).ana_lane_2_quad_a_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_2_quad_a_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_2_quad_a_ctrl12[0]=(((r).ana_lane_2_quad_a_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_2_quad_a_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_a_ctrl12[0]=(((r).ana_lane_2_quad_a_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_2_quad_a_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_2_quad_a_ctrl12[0]=(((r).ana_lane_2_quad_a_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_2_quad_a_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_a_ctrl12[0]=(((r).ana_lane_2_quad_a_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r,_r._ana_lane_2_quad_a_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r,_r._ana_lane_2_quad_a_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL12r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r
#define ANA_LANE_2_QUAD_A_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_t ANA_LANE_2_QUAD_A_CTRL12r_t;
#define ANA_LANE_2_QUAD_A_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_CLR
#define ANA_LANE_2_QUAD_A_CTRL12r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_SET
#define ANA_LANE_2_QUAD_A_CTRL12r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_GET
#define ANA_LANE_2_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_2_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_2_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_2_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_2_QUAD_A_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_2_QUAD_A_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_2_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_2_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL12r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL12r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL12r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL13
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x840d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r (0x0001840d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl13[1];
	uint32_t _ana_lane_2_quad_a_ctrl13;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_CLR(r) (r).ana_lane_2_quad_a_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_SET(r,d) (r).ana_lane_2_quad_a_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_GET(r) (r).ana_lane_2_quad_a_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_2_quad_a_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_2_quad_a_ctrl13[0]=(((r).ana_lane_2_quad_a_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_2_quad_a_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_a_ctrl13[0]=(((r).ana_lane_2_quad_a_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r,_r._ana_lane_2_quad_a_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r,_r._ana_lane_2_quad_a_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL13r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r
#define ANA_LANE_2_QUAD_A_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_t ANA_LANE_2_QUAD_A_CTRL13r_t;
#define ANA_LANE_2_QUAD_A_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_CLR
#define ANA_LANE_2_QUAD_A_CTRL13r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_SET
#define ANA_LANE_2_QUAD_A_CTRL13r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_GET
#define ANA_LANE_2_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_2_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_2_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_2_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL13r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL13r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL13r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL14
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x840e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r (0x0001840e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl14[1];
	uint32_t _ana_lane_2_quad_a_ctrl14;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_CLR(r) (r).ana_lane_2_quad_a_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_SET(r,d) (r).ana_lane_2_quad_a_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_GET(r) (r).ana_lane_2_quad_a_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_2_quad_a_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_2_quad_a_ctrl14[0]=(((r).ana_lane_2_quad_a_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_2_quad_a_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_2_quad_a_ctrl14[0]=(((r).ana_lane_2_quad_a_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_2_quad_a_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_a_ctrl14[0]=(((r).ana_lane_2_quad_a_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r,_r._ana_lane_2_quad_a_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r,_r._ana_lane_2_quad_a_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL14r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r
#define ANA_LANE_2_QUAD_A_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_t ANA_LANE_2_QUAD_A_CTRL14r_t;
#define ANA_LANE_2_QUAD_A_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_CLR
#define ANA_LANE_2_QUAD_A_CTRL14r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_SET
#define ANA_LANE_2_QUAD_A_CTRL14r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_GET
#define ANA_LANE_2_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_2_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_2_QUAD_A_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_2_QUAD_A_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_2_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_2_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL14r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL14r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL14r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL15
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x840f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r (0x0001840f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl15[1];
	uint32_t _ana_lane_2_quad_a_ctrl15;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_CLR(r) (r).ana_lane_2_quad_a_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SET(r,d) (r).ana_lane_2_quad_a_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_GET(r) (r).ana_lane_2_quad_a_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_2_quad_a_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_2_quad_a_ctrl15[0]=(((r).ana_lane_2_quad_a_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_2_quad_a_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_2_quad_a_ctrl15[0]=(((r).ana_lane_2_quad_a_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_2_quad_a_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_2_quad_a_ctrl15[0]=(((r).ana_lane_2_quad_a_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_2_quad_a_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_a_ctrl15[0]=(((r).ana_lane_2_quad_a_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_2_quad_a_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_2_quad_a_ctrl15[0]=(((r).ana_lane_2_quad_a_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_2_quad_a_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_2_quad_a_ctrl15[0]=(((r).ana_lane_2_quad_a_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r,_r._ana_lane_2_quad_a_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r,_r._ana_lane_2_quad_a_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL15r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r
#define ANA_LANE_2_QUAD_A_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_t ANA_LANE_2_QUAD_A_CTRL15r_t;
#define ANA_LANE_2_QUAD_A_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_CLR
#define ANA_LANE_2_QUAD_A_CTRL15r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SET
#define ANA_LANE_2_QUAD_A_CTRL15r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_GET
#define ANA_LANE_2_QUAD_A_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_2_QUAD_A_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_2_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_2_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL15r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL15r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL15r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_CTRL16
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x8410
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r (0x00018410 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_ctrl16[1];
	uint32_t _ana_lane_2_quad_a_ctrl16;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_CLR(r) (r).ana_lane_2_quad_a_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_SET(r,d) (r).ana_lane_2_quad_a_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_GET(r) (r).ana_lane_2_quad_a_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_2_quad_a_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_2_quad_a_ctrl16[0]=(((r).ana_lane_2_quad_a_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_2_quad_a_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_2_quad_a_ctrl16[0]=(((r).ana_lane_2_quad_a_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r,_r._ana_lane_2_quad_a_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r,_r._ana_lane_2_quad_a_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_CTRL16r BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r
#define ANA_LANE_2_QUAD_A_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_t ANA_LANE_2_QUAD_A_CTRL16r_t;
#define ANA_LANE_2_QUAD_A_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_CLR
#define ANA_LANE_2_QUAD_A_CTRL16r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_SET
#define ANA_LANE_2_QUAD_A_CTRL16r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_GET
#define ANA_LANE_2_QUAD_A_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_2_QUAD_A_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_2_QUAD_A_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_2_QUAD_A_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_2_QUAD_A_CTRL16r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_CTRL16r
#define WRITE_ANA_LANE_2_QUAD_A_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_CTRL16r
#define MODIFY_ANA_LANE_2_QUAD_A_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_A_STATUS0
 * BLOCKS:   ANA_LANE_2_QUAD_A
 * REGADDR:  0x8420
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r (0x00018420 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_A_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_a_status0[1];
	uint32_t _ana_lane_2_quad_a_status0;
} BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_CLR(r) (r).ana_lane_2_quad_a_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_SET(r,d) (r).ana_lane_2_quad_a_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_GET(r) (r).ana_lane_2_quad_a_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_2_quad_a_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_2_quad_a_status0[0]=(((r).ana_lane_2_quad_a_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_2_quad_a_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_2_quad_a_status0[0]=(((r).ana_lane_2_quad_a_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_A_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r,_r._ana_lane_2_quad_a_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r,_r._ana_lane_2_quad_a_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_A_STATUS0r BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r
#define ANA_LANE_2_QUAD_A_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_t ANA_LANE_2_QUAD_A_STATUS0r_t;
#define ANA_LANE_2_QUAD_A_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_CLR
#define ANA_LANE_2_QUAD_A_STATUS0r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_SET
#define ANA_LANE_2_QUAD_A_STATUS0r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_GET
#define ANA_LANE_2_QUAD_A_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_2_QUAD_A_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_2_QUAD_A_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_2_QUAD_A_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_2_QUAD_A_STATUS0r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_A_STATUS0r
#define WRITE_ANA_LANE_2_QUAD_A_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_A_STATUS0r
#define MODIFY_ANA_LANE_2_QUAD_A_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_A_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_A_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL0
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x8800
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r (0x00018800 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl0[1];
	uint32_t _ana_lane_3_quad_a_ctrl0;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_CLR(r) (r).ana_lane_3_quad_a_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_SET(r,d) (r).ana_lane_3_quad_a_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_GET(r) (r).ana_lane_3_quad_a_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_3_quad_a_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_3_quad_a_ctrl0[0]=(((r).ana_lane_3_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_3_quad_a_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_3_quad_a_ctrl0[0]=(((r).ana_lane_3_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_3_quad_a_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_3_quad_a_ctrl0[0]=(((r).ana_lane_3_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_3_quad_a_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_3_quad_a_ctrl0[0]=(((r).ana_lane_3_quad_a_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_3_quad_a_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_3_quad_a_ctrl0[0]=(((r).ana_lane_3_quad_a_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r,_r._ana_lane_3_quad_a_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r,_r._ana_lane_3_quad_a_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL0r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r
#define ANA_LANE_3_QUAD_A_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_t ANA_LANE_3_QUAD_A_CTRL0r_t;
#define ANA_LANE_3_QUAD_A_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_CLR
#define ANA_LANE_3_QUAD_A_CTRL0r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_SET
#define ANA_LANE_3_QUAD_A_CTRL0r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_GET
#define ANA_LANE_3_QUAD_A_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_3_QUAD_A_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_3_QUAD_A_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_3_QUAD_A_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL0r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL0r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL0r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL1
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x8801
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r (0x00018801 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl1[1];
	uint32_t _ana_lane_3_quad_a_ctrl1;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_CLR(r) (r).ana_lane_3_quad_a_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_SET(r,d) (r).ana_lane_3_quad_a_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_GET(r) (r).ana_lane_3_quad_a_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_3_quad_a_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_3_quad_a_ctrl1[0]=(((r).ana_lane_3_quad_a_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_3_quad_a_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_3_quad_a_ctrl1[0]=(((r).ana_lane_3_quad_a_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_3_quad_a_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_3_quad_a_ctrl1[0]=(((r).ana_lane_3_quad_a_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_3_quad_a_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_3_quad_a_ctrl1[0]=(((r).ana_lane_3_quad_a_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_3_quad_a_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_3_quad_a_ctrl1[0]=(((r).ana_lane_3_quad_a_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r,_r._ana_lane_3_quad_a_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r,_r._ana_lane_3_quad_a_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL1r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r
#define ANA_LANE_3_QUAD_A_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_t ANA_LANE_3_QUAD_A_CTRL1r_t;
#define ANA_LANE_3_QUAD_A_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_CLR
#define ANA_LANE_3_QUAD_A_CTRL1r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_SET
#define ANA_LANE_3_QUAD_A_CTRL1r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_GET
#define ANA_LANE_3_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_3_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_3_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_3_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_3_QUAD_A_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_3_QUAD_A_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_3_QUAD_A_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_REF_OCLf_GET
#define ANA_LANE_3_QUAD_A_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_REF_OCLf_SET
#define ANA_LANE_3_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_3_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL1r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL1r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL1r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL2
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x8802
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r (0x00018802 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl2[1];
	uint32_t _ana_lane_3_quad_a_ctrl2;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_CLR(r) (r).ana_lane_3_quad_a_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_SET(r,d) (r).ana_lane_3_quad_a_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_GET(r) (r).ana_lane_3_quad_a_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_3_quad_a_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_3_quad_a_ctrl2[0]=(((r).ana_lane_3_quad_a_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_3_quad_a_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_3_quad_a_ctrl2[0]=(((r).ana_lane_3_quad_a_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r,_r._ana_lane_3_quad_a_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r,_r._ana_lane_3_quad_a_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL2r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r
#define ANA_LANE_3_QUAD_A_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_t ANA_LANE_3_QUAD_A_CTRL2r_t;
#define ANA_LANE_3_QUAD_A_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_CLR
#define ANA_LANE_3_QUAD_A_CTRL2r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_SET
#define ANA_LANE_3_QUAD_A_CTRL2r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_GET
#define ANA_LANE_3_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_3_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_3_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_3_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL2r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL2r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL2r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL3
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x8803
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r (0x00018803 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl3[1];
	uint32_t _ana_lane_3_quad_a_ctrl3;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_CLR(r) (r).ana_lane_3_quad_a_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_SET(r,d) (r).ana_lane_3_quad_a_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_GET(r) (r).ana_lane_3_quad_a_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_3_quad_a_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_3_quad_a_ctrl3[0]=(((r).ana_lane_3_quad_a_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_3_quad_a_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_3_quad_a_ctrl3[0]=(((r).ana_lane_3_quad_a_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r,_r._ana_lane_3_quad_a_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r,_r._ana_lane_3_quad_a_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL3r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r
#define ANA_LANE_3_QUAD_A_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_t ANA_LANE_3_QUAD_A_CTRL3r_t;
#define ANA_LANE_3_QUAD_A_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_CLR
#define ANA_LANE_3_QUAD_A_CTRL3r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_SET
#define ANA_LANE_3_QUAD_A_CTRL3r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_GET
#define ANA_LANE_3_QUAD_A_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_3_QUAD_A_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_3_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_3_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL3r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL3r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL3r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL4
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x8804
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r (0x00018804 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl4[1];
	uint32_t _ana_lane_3_quad_a_ctrl4;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_CLR(r) (r).ana_lane_3_quad_a_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_SET(r,d) (r).ana_lane_3_quad_a_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_GET(r) (r).ana_lane_3_quad_a_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_3_quad_a_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_3_quad_a_ctrl4[0]=(((r).ana_lane_3_quad_a_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_3_quad_a_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_3_quad_a_ctrl4[0]=(((r).ana_lane_3_quad_a_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r,_r._ana_lane_3_quad_a_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r,_r._ana_lane_3_quad_a_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL4r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r
#define ANA_LANE_3_QUAD_A_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_t ANA_LANE_3_QUAD_A_CTRL4r_t;
#define ANA_LANE_3_QUAD_A_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_CLR
#define ANA_LANE_3_QUAD_A_CTRL4r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_SET
#define ANA_LANE_3_QUAD_A_CTRL4r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_GET
#define ANA_LANE_3_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_3_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_3_QUAD_A_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_3_QUAD_A_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL4r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL4r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL4r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL5
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x8805
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r (0x00018805 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl5[1];
	uint32_t _ana_lane_3_quad_a_ctrl5;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_CLR(r) (r).ana_lane_3_quad_a_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_SET(r,d) (r).ana_lane_3_quad_a_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_GET(r) (r).ana_lane_3_quad_a_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_3_quad_a_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_3_quad_a_ctrl5[0]=(((r).ana_lane_3_quad_a_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_3_quad_a_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_3_quad_a_ctrl5[0]=(((r).ana_lane_3_quad_a_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_3_quad_a_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_3_quad_a_ctrl5[0]=(((r).ana_lane_3_quad_a_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r,_r._ana_lane_3_quad_a_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r,_r._ana_lane_3_quad_a_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL5r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r
#define ANA_LANE_3_QUAD_A_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_t ANA_LANE_3_QUAD_A_CTRL5r_t;
#define ANA_LANE_3_QUAD_A_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_CLR
#define ANA_LANE_3_QUAD_A_CTRL5r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_SET
#define ANA_LANE_3_QUAD_A_CTRL5r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_GET
#define ANA_LANE_3_QUAD_A_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_3_QUAD_A_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_3_QUAD_A_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_3_QUAD_A_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_3_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_3_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL5r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL5r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL5r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL6
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x8806
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r (0x00018806 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl6[1];
	uint32_t _ana_lane_3_quad_a_ctrl6;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_CLR(r) (r).ana_lane_3_quad_a_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_SET(r,d) (r).ana_lane_3_quad_a_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_GET(r) (r).ana_lane_3_quad_a_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_3_quad_a_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_3_quad_a_ctrl6[0]=(((r).ana_lane_3_quad_a_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_3_quad_a_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_3_quad_a_ctrl6[0]=(((r).ana_lane_3_quad_a_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r,_r._ana_lane_3_quad_a_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r,_r._ana_lane_3_quad_a_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL6r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r
#define ANA_LANE_3_QUAD_A_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_t ANA_LANE_3_QUAD_A_CTRL6r_t;
#define ANA_LANE_3_QUAD_A_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_CLR
#define ANA_LANE_3_QUAD_A_CTRL6r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_SET
#define ANA_LANE_3_QUAD_A_CTRL6r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_GET
#define ANA_LANE_3_QUAD_A_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_3_QUAD_A_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_3_QUAD_A_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_3_QUAD_A_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL6r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL6r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL6r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL7
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x8807
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r (0x00018807 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl7[1];
	uint32_t _ana_lane_3_quad_a_ctrl7;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_CLR(r) (r).ana_lane_3_quad_a_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_SET(r,d) (r).ana_lane_3_quad_a_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_GET(r) (r).ana_lane_3_quad_a_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_3_quad_a_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_3_quad_a_ctrl7[0]=(((r).ana_lane_3_quad_a_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_3_quad_a_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_3_quad_a_ctrl7[0]=(((r).ana_lane_3_quad_a_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r,_r._ana_lane_3_quad_a_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r,_r._ana_lane_3_quad_a_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL7r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r
#define ANA_LANE_3_QUAD_A_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_t ANA_LANE_3_QUAD_A_CTRL7r_t;
#define ANA_LANE_3_QUAD_A_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_CLR
#define ANA_LANE_3_QUAD_A_CTRL7r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_SET
#define ANA_LANE_3_QUAD_A_CTRL7r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_GET
#define ANA_LANE_3_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_3_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_3_QUAD_A_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_3_QUAD_A_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL7r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL7r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL7r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL8
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x8808
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r (0x00018808 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl8[1];
	uint32_t _ana_lane_3_quad_a_ctrl8;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_CLR(r) (r).ana_lane_3_quad_a_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_SET(r,d) (r).ana_lane_3_quad_a_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_GET(r) (r).ana_lane_3_quad_a_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_3_quad_a_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_3_quad_a_ctrl8[0]=(((r).ana_lane_3_quad_a_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_3_quad_a_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_3_quad_a_ctrl8[0]=(((r).ana_lane_3_quad_a_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_3_quad_a_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_3_quad_a_ctrl8[0]=(((r).ana_lane_3_quad_a_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r,_r._ana_lane_3_quad_a_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r,_r._ana_lane_3_quad_a_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL8r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r
#define ANA_LANE_3_QUAD_A_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_t ANA_LANE_3_QUAD_A_CTRL8r_t;
#define ANA_LANE_3_QUAD_A_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_CLR
#define ANA_LANE_3_QUAD_A_CTRL8r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_SET
#define ANA_LANE_3_QUAD_A_CTRL8r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_GET
#define ANA_LANE_3_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_3_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_3_QUAD_A_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_3_QUAD_A_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_3_QUAD_A_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_LA_PDf_GET
#define ANA_LANE_3_QUAD_A_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL8r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL8r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL8r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL9
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x8809
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r (0x00018809 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl9[1];
	uint32_t _ana_lane_3_quad_a_ctrl9;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_CLR(r) (r).ana_lane_3_quad_a_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_SET(r,d) (r).ana_lane_3_quad_a_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_GET(r) (r).ana_lane_3_quad_a_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_3_quad_a_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_3_quad_a_ctrl9[0]=(((r).ana_lane_3_quad_a_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_3_quad_a_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_3_quad_a_ctrl9[0]=(((r).ana_lane_3_quad_a_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_3_quad_a_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_3_quad_a_ctrl9[0]=(((r).ana_lane_3_quad_a_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_3_quad_a_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_3_quad_a_ctrl9[0]=(((r).ana_lane_3_quad_a_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r,_r._ana_lane_3_quad_a_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r,_r._ana_lane_3_quad_a_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL9r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r
#define ANA_LANE_3_QUAD_A_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_t ANA_LANE_3_QUAD_A_CTRL9r_t;
#define ANA_LANE_3_QUAD_A_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_CLR
#define ANA_LANE_3_QUAD_A_CTRL9r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_SET
#define ANA_LANE_3_QUAD_A_CTRL9r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_GET
#define ANA_LANE_3_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_3_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_3_QUAD_A_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_3_QUAD_A_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_3_QUAD_A_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_3_QUAD_A_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_3_QUAD_A_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_3_QUAD_A_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL9r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL9r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL9r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL10
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x880a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r (0x0001880a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl10[1];
	uint32_t _ana_lane_3_quad_a_ctrl10;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_CLR(r) (r).ana_lane_3_quad_a_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_SET(r,d) (r).ana_lane_3_quad_a_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_GET(r) (r).ana_lane_3_quad_a_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_3_quad_a_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_3_quad_a_ctrl10[0]=(((r).ana_lane_3_quad_a_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_3_quad_a_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_3_quad_a_ctrl10[0]=(((r).ana_lane_3_quad_a_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_3_quad_a_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_3_quad_a_ctrl10[0]=(((r).ana_lane_3_quad_a_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_3_quad_a_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_3_quad_a_ctrl10[0]=(((r).ana_lane_3_quad_a_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_3_quad_a_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_3_quad_a_ctrl10[0]=(((r).ana_lane_3_quad_a_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r,_r._ana_lane_3_quad_a_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r,_r._ana_lane_3_quad_a_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL10r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r
#define ANA_LANE_3_QUAD_A_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_t ANA_LANE_3_QUAD_A_CTRL10r_t;
#define ANA_LANE_3_QUAD_A_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_CLR
#define ANA_LANE_3_QUAD_A_CTRL10r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_SET
#define ANA_LANE_3_QUAD_A_CTRL10r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_GET
#define ANA_LANE_3_QUAD_A_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_3_QUAD_A_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_3_QUAD_A_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_3_QUAD_A_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_3_QUAD_A_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_3_QUAD_A_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_3_QUAD_A_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_3_QUAD_A_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_3_QUAD_A_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_3_QUAD_A_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL10r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL10r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL10r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL11
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x880b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r (0x0001880b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl11[1];
	uint32_t _ana_lane_3_quad_a_ctrl11;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_CLR(r) (r).ana_lane_3_quad_a_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_SET(r,d) (r).ana_lane_3_quad_a_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_GET(r) (r).ana_lane_3_quad_a_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_3_quad_a_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_3_quad_a_ctrl11[0]=(((r).ana_lane_3_quad_a_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r,_r._ana_lane_3_quad_a_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r,_r._ana_lane_3_quad_a_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL11r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r
#define ANA_LANE_3_QUAD_A_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_t ANA_LANE_3_QUAD_A_CTRL11r_t;
#define ANA_LANE_3_QUAD_A_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_CLR
#define ANA_LANE_3_QUAD_A_CTRL11r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_SET
#define ANA_LANE_3_QUAD_A_CTRL11r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_GET
#define ANA_LANE_3_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_3_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL11r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL11r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL11r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL12
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x880c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r (0x0001880c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl12[1];
	uint32_t _ana_lane_3_quad_a_ctrl12;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_CLR(r) (r).ana_lane_3_quad_a_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_SET(r,d) (r).ana_lane_3_quad_a_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_GET(r) (r).ana_lane_3_quad_a_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_3_quad_a_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_3_quad_a_ctrl12[0]=(((r).ana_lane_3_quad_a_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_3_quad_a_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_a_ctrl12[0]=(((r).ana_lane_3_quad_a_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_3_quad_a_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_3_quad_a_ctrl12[0]=(((r).ana_lane_3_quad_a_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_3_quad_a_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_a_ctrl12[0]=(((r).ana_lane_3_quad_a_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r,_r._ana_lane_3_quad_a_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r,_r._ana_lane_3_quad_a_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL12r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r
#define ANA_LANE_3_QUAD_A_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_t ANA_LANE_3_QUAD_A_CTRL12r_t;
#define ANA_LANE_3_QUAD_A_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_CLR
#define ANA_LANE_3_QUAD_A_CTRL12r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_SET
#define ANA_LANE_3_QUAD_A_CTRL12r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_GET
#define ANA_LANE_3_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_3_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_3_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_3_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_3_QUAD_A_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_3_QUAD_A_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_3_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_3_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL12r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL12r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL12r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL13
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x880d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r (0x0001880d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl13[1];
	uint32_t _ana_lane_3_quad_a_ctrl13;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_CLR(r) (r).ana_lane_3_quad_a_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_SET(r,d) (r).ana_lane_3_quad_a_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_GET(r) (r).ana_lane_3_quad_a_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_3_quad_a_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_3_quad_a_ctrl13[0]=(((r).ana_lane_3_quad_a_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_3_quad_a_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_a_ctrl13[0]=(((r).ana_lane_3_quad_a_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r,_r._ana_lane_3_quad_a_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r,_r._ana_lane_3_quad_a_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL13r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r
#define ANA_LANE_3_QUAD_A_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_t ANA_LANE_3_QUAD_A_CTRL13r_t;
#define ANA_LANE_3_QUAD_A_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_CLR
#define ANA_LANE_3_QUAD_A_CTRL13r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_SET
#define ANA_LANE_3_QUAD_A_CTRL13r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_GET
#define ANA_LANE_3_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_3_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_3_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_3_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL13r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL13r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL13r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL14
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x880e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r (0x0001880e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl14[1];
	uint32_t _ana_lane_3_quad_a_ctrl14;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_CLR(r) (r).ana_lane_3_quad_a_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_SET(r,d) (r).ana_lane_3_quad_a_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_GET(r) (r).ana_lane_3_quad_a_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_3_quad_a_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_3_quad_a_ctrl14[0]=(((r).ana_lane_3_quad_a_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_3_quad_a_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_3_quad_a_ctrl14[0]=(((r).ana_lane_3_quad_a_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_3_quad_a_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_a_ctrl14[0]=(((r).ana_lane_3_quad_a_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r,_r._ana_lane_3_quad_a_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r,_r._ana_lane_3_quad_a_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL14r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r
#define ANA_LANE_3_QUAD_A_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_t ANA_LANE_3_QUAD_A_CTRL14r_t;
#define ANA_LANE_3_QUAD_A_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_CLR
#define ANA_LANE_3_QUAD_A_CTRL14r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_SET
#define ANA_LANE_3_QUAD_A_CTRL14r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_GET
#define ANA_LANE_3_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_3_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_3_QUAD_A_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_3_QUAD_A_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_3_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_3_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL14r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL14r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL14r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL15
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x880f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r (0x0001880f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl15[1];
	uint32_t _ana_lane_3_quad_a_ctrl15;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_CLR(r) (r).ana_lane_3_quad_a_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SET(r,d) (r).ana_lane_3_quad_a_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_GET(r) (r).ana_lane_3_quad_a_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_3_quad_a_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_3_quad_a_ctrl15[0]=(((r).ana_lane_3_quad_a_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_3_quad_a_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_3_quad_a_ctrl15[0]=(((r).ana_lane_3_quad_a_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_3_quad_a_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_3_quad_a_ctrl15[0]=(((r).ana_lane_3_quad_a_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_3_quad_a_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_a_ctrl15[0]=(((r).ana_lane_3_quad_a_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_3_quad_a_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_3_quad_a_ctrl15[0]=(((r).ana_lane_3_quad_a_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_3_quad_a_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_3_quad_a_ctrl15[0]=(((r).ana_lane_3_quad_a_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r,_r._ana_lane_3_quad_a_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r,_r._ana_lane_3_quad_a_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL15r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r
#define ANA_LANE_3_QUAD_A_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_t ANA_LANE_3_QUAD_A_CTRL15r_t;
#define ANA_LANE_3_QUAD_A_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_CLR
#define ANA_LANE_3_QUAD_A_CTRL15r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SET
#define ANA_LANE_3_QUAD_A_CTRL15r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_GET
#define ANA_LANE_3_QUAD_A_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_3_QUAD_A_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_3_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_3_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL15r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL15r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL15r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_CTRL16
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x8810
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r (0x00018810 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_ctrl16[1];
	uint32_t _ana_lane_3_quad_a_ctrl16;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_CLR(r) (r).ana_lane_3_quad_a_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_SET(r,d) (r).ana_lane_3_quad_a_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_GET(r) (r).ana_lane_3_quad_a_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_3_quad_a_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_3_quad_a_ctrl16[0]=(((r).ana_lane_3_quad_a_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_3_quad_a_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_3_quad_a_ctrl16[0]=(((r).ana_lane_3_quad_a_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r,_r._ana_lane_3_quad_a_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r,_r._ana_lane_3_quad_a_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_CTRL16r BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r
#define ANA_LANE_3_QUAD_A_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_t ANA_LANE_3_QUAD_A_CTRL16r_t;
#define ANA_LANE_3_QUAD_A_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_CLR
#define ANA_LANE_3_QUAD_A_CTRL16r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_SET
#define ANA_LANE_3_QUAD_A_CTRL16r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_GET
#define ANA_LANE_3_QUAD_A_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_3_QUAD_A_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_3_QUAD_A_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_3_QUAD_A_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_3_QUAD_A_CTRL16r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_CTRL16r
#define WRITE_ANA_LANE_3_QUAD_A_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_CTRL16r
#define MODIFY_ANA_LANE_3_QUAD_A_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_A_STATUS0
 * BLOCKS:   ANA_LANE_3_QUAD_A
 * REGADDR:  0x8820
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r (0x00018820 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_A_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_a_status0[1];
	uint32_t _ana_lane_3_quad_a_status0;
} BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_CLR(r) (r).ana_lane_3_quad_a_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_SET(r,d) (r).ana_lane_3_quad_a_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_GET(r) (r).ana_lane_3_quad_a_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_3_quad_a_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_3_quad_a_status0[0]=(((r).ana_lane_3_quad_a_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_3_quad_a_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_3_quad_a_status0[0]=(((r).ana_lane_3_quad_a_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_A_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r,_r._ana_lane_3_quad_a_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r,_r._ana_lane_3_quad_a_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_A_STATUS0r BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r
#define ANA_LANE_3_QUAD_A_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_t ANA_LANE_3_QUAD_A_STATUS0r_t;
#define ANA_LANE_3_QUAD_A_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_CLR
#define ANA_LANE_3_QUAD_A_STATUS0r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_SET
#define ANA_LANE_3_QUAD_A_STATUS0r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_GET
#define ANA_LANE_3_QUAD_A_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_3_QUAD_A_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_3_QUAD_A_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_3_QUAD_A_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_3_QUAD_A_STATUS0r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_A_STATUS0r
#define WRITE_ANA_LANE_3_QUAD_A_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_A_STATUS0r
#define MODIFY_ANA_LANE_3_QUAD_A_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_A_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_A_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL0
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x9100
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r (0x00019100 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl0[1];
	uint32_t _ana_lane_0_quad_b_ctrl0;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_CLR(r) (r).ana_lane_0_quad_b_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_SET(r,d) (r).ana_lane_0_quad_b_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_GET(r) (r).ana_lane_0_quad_b_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_0_quad_b_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_0_quad_b_ctrl0[0]=(((r).ana_lane_0_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_0_quad_b_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_0_quad_b_ctrl0[0]=(((r).ana_lane_0_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_0_quad_b_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_0_quad_b_ctrl0[0]=(((r).ana_lane_0_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_0_quad_b_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_0_quad_b_ctrl0[0]=(((r).ana_lane_0_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_0_quad_b_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_0_quad_b_ctrl0[0]=(((r).ana_lane_0_quad_b_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r,_r._ana_lane_0_quad_b_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r,_r._ana_lane_0_quad_b_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL0r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r
#define ANA_LANE_0_QUAD_B_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_t ANA_LANE_0_QUAD_B_CTRL0r_t;
#define ANA_LANE_0_QUAD_B_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_CLR
#define ANA_LANE_0_QUAD_B_CTRL0r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_SET
#define ANA_LANE_0_QUAD_B_CTRL0r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_GET
#define ANA_LANE_0_QUAD_B_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_0_QUAD_B_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_0_QUAD_B_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_0_QUAD_B_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL0r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL0r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL0r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL1
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x9101
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r (0x00019101 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl1[1];
	uint32_t _ana_lane_0_quad_b_ctrl1;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_CLR(r) (r).ana_lane_0_quad_b_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_SET(r,d) (r).ana_lane_0_quad_b_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_GET(r) (r).ana_lane_0_quad_b_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_0_quad_b_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_0_quad_b_ctrl1[0]=(((r).ana_lane_0_quad_b_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_0_quad_b_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_0_quad_b_ctrl1[0]=(((r).ana_lane_0_quad_b_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_0_quad_b_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_0_quad_b_ctrl1[0]=(((r).ana_lane_0_quad_b_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_0_quad_b_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_0_quad_b_ctrl1[0]=(((r).ana_lane_0_quad_b_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_0_quad_b_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_0_quad_b_ctrl1[0]=(((r).ana_lane_0_quad_b_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r,_r._ana_lane_0_quad_b_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r,_r._ana_lane_0_quad_b_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL1r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r
#define ANA_LANE_0_QUAD_B_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_t ANA_LANE_0_QUAD_B_CTRL1r_t;
#define ANA_LANE_0_QUAD_B_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_CLR
#define ANA_LANE_0_QUAD_B_CTRL1r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_SET
#define ANA_LANE_0_QUAD_B_CTRL1r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_GET
#define ANA_LANE_0_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_0_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_0_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_0_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_0_QUAD_B_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_0_QUAD_B_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_0_QUAD_B_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_REF_OCLf_GET
#define ANA_LANE_0_QUAD_B_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_REF_OCLf_SET
#define ANA_LANE_0_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_0_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL1r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL1r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL1r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL2
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x9102
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r (0x00019102 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl2[1];
	uint32_t _ana_lane_0_quad_b_ctrl2;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_CLR(r) (r).ana_lane_0_quad_b_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_SET(r,d) (r).ana_lane_0_quad_b_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_GET(r) (r).ana_lane_0_quad_b_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_0_quad_b_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_0_quad_b_ctrl2[0]=(((r).ana_lane_0_quad_b_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_0_quad_b_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_0_quad_b_ctrl2[0]=(((r).ana_lane_0_quad_b_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r,_r._ana_lane_0_quad_b_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r,_r._ana_lane_0_quad_b_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL2r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r
#define ANA_LANE_0_QUAD_B_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_t ANA_LANE_0_QUAD_B_CTRL2r_t;
#define ANA_LANE_0_QUAD_B_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_CLR
#define ANA_LANE_0_QUAD_B_CTRL2r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_SET
#define ANA_LANE_0_QUAD_B_CTRL2r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_GET
#define ANA_LANE_0_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_0_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_0_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_0_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL2r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL2r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL2r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL3
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x9103
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r (0x00019103 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl3[1];
	uint32_t _ana_lane_0_quad_b_ctrl3;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_CLR(r) (r).ana_lane_0_quad_b_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_SET(r,d) (r).ana_lane_0_quad_b_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_GET(r) (r).ana_lane_0_quad_b_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_0_quad_b_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_0_quad_b_ctrl3[0]=(((r).ana_lane_0_quad_b_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_0_quad_b_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_0_quad_b_ctrl3[0]=(((r).ana_lane_0_quad_b_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r,_r._ana_lane_0_quad_b_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r,_r._ana_lane_0_quad_b_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL3r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r
#define ANA_LANE_0_QUAD_B_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_t ANA_LANE_0_QUAD_B_CTRL3r_t;
#define ANA_LANE_0_QUAD_B_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_CLR
#define ANA_LANE_0_QUAD_B_CTRL3r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_SET
#define ANA_LANE_0_QUAD_B_CTRL3r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_GET
#define ANA_LANE_0_QUAD_B_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_0_QUAD_B_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_0_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_0_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL3r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL3r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL3r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL4
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x9104
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r (0x00019104 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl4[1];
	uint32_t _ana_lane_0_quad_b_ctrl4;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_CLR(r) (r).ana_lane_0_quad_b_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_SET(r,d) (r).ana_lane_0_quad_b_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_GET(r) (r).ana_lane_0_quad_b_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_0_quad_b_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_0_quad_b_ctrl4[0]=(((r).ana_lane_0_quad_b_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_0_quad_b_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_0_quad_b_ctrl4[0]=(((r).ana_lane_0_quad_b_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r,_r._ana_lane_0_quad_b_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r,_r._ana_lane_0_quad_b_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL4r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r
#define ANA_LANE_0_QUAD_B_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_t ANA_LANE_0_QUAD_B_CTRL4r_t;
#define ANA_LANE_0_QUAD_B_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_CLR
#define ANA_LANE_0_QUAD_B_CTRL4r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_SET
#define ANA_LANE_0_QUAD_B_CTRL4r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_GET
#define ANA_LANE_0_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_0_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_0_QUAD_B_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_0_QUAD_B_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL4r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL4r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL4r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL5
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x9105
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r (0x00019105 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl5[1];
	uint32_t _ana_lane_0_quad_b_ctrl5;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_CLR(r) (r).ana_lane_0_quad_b_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_SET(r,d) (r).ana_lane_0_quad_b_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_GET(r) (r).ana_lane_0_quad_b_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_0_quad_b_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_0_quad_b_ctrl5[0]=(((r).ana_lane_0_quad_b_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_0_quad_b_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_0_quad_b_ctrl5[0]=(((r).ana_lane_0_quad_b_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_0_quad_b_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_0_quad_b_ctrl5[0]=(((r).ana_lane_0_quad_b_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r,_r._ana_lane_0_quad_b_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r,_r._ana_lane_0_quad_b_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL5r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r
#define ANA_LANE_0_QUAD_B_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_t ANA_LANE_0_QUAD_B_CTRL5r_t;
#define ANA_LANE_0_QUAD_B_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_CLR
#define ANA_LANE_0_QUAD_B_CTRL5r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_SET
#define ANA_LANE_0_QUAD_B_CTRL5r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_GET
#define ANA_LANE_0_QUAD_B_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_0_QUAD_B_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_0_QUAD_B_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_0_QUAD_B_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_0_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_0_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL5r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL5r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL5r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL6
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x9106
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r (0x00019106 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl6[1];
	uint32_t _ana_lane_0_quad_b_ctrl6;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_CLR(r) (r).ana_lane_0_quad_b_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_SET(r,d) (r).ana_lane_0_quad_b_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_GET(r) (r).ana_lane_0_quad_b_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_0_quad_b_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_0_quad_b_ctrl6[0]=(((r).ana_lane_0_quad_b_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_0_quad_b_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_0_quad_b_ctrl6[0]=(((r).ana_lane_0_quad_b_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r,_r._ana_lane_0_quad_b_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r,_r._ana_lane_0_quad_b_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL6r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r
#define ANA_LANE_0_QUAD_B_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_t ANA_LANE_0_QUAD_B_CTRL6r_t;
#define ANA_LANE_0_QUAD_B_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_CLR
#define ANA_LANE_0_QUAD_B_CTRL6r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_SET
#define ANA_LANE_0_QUAD_B_CTRL6r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_GET
#define ANA_LANE_0_QUAD_B_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_0_QUAD_B_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_0_QUAD_B_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_0_QUAD_B_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL6r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL6r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL6r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL7
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x9107
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r (0x00019107 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl7[1];
	uint32_t _ana_lane_0_quad_b_ctrl7;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_CLR(r) (r).ana_lane_0_quad_b_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_SET(r,d) (r).ana_lane_0_quad_b_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_GET(r) (r).ana_lane_0_quad_b_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_0_quad_b_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_0_quad_b_ctrl7[0]=(((r).ana_lane_0_quad_b_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_0_quad_b_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_0_quad_b_ctrl7[0]=(((r).ana_lane_0_quad_b_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r,_r._ana_lane_0_quad_b_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r,_r._ana_lane_0_quad_b_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL7r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r
#define ANA_LANE_0_QUAD_B_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_t ANA_LANE_0_QUAD_B_CTRL7r_t;
#define ANA_LANE_0_QUAD_B_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_CLR
#define ANA_LANE_0_QUAD_B_CTRL7r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_SET
#define ANA_LANE_0_QUAD_B_CTRL7r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_GET
#define ANA_LANE_0_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_0_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_0_QUAD_B_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_0_QUAD_B_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL7r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL7r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL7r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL8
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x9108
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r (0x00019108 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl8[1];
	uint32_t _ana_lane_0_quad_b_ctrl8;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_CLR(r) (r).ana_lane_0_quad_b_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_SET(r,d) (r).ana_lane_0_quad_b_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_GET(r) (r).ana_lane_0_quad_b_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_0_quad_b_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_0_quad_b_ctrl8[0]=(((r).ana_lane_0_quad_b_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_0_quad_b_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_0_quad_b_ctrl8[0]=(((r).ana_lane_0_quad_b_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_0_quad_b_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_0_quad_b_ctrl8[0]=(((r).ana_lane_0_quad_b_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r,_r._ana_lane_0_quad_b_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r,_r._ana_lane_0_quad_b_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL8r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r
#define ANA_LANE_0_QUAD_B_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_t ANA_LANE_0_QUAD_B_CTRL8r_t;
#define ANA_LANE_0_QUAD_B_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_CLR
#define ANA_LANE_0_QUAD_B_CTRL8r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_SET
#define ANA_LANE_0_QUAD_B_CTRL8r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_GET
#define ANA_LANE_0_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_0_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_0_QUAD_B_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_0_QUAD_B_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_0_QUAD_B_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_LA_PDf_GET
#define ANA_LANE_0_QUAD_B_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL8r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL8r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL8r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL9
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x9109
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r (0x00019109 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl9[1];
	uint32_t _ana_lane_0_quad_b_ctrl9;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_CLR(r) (r).ana_lane_0_quad_b_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_SET(r,d) (r).ana_lane_0_quad_b_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_GET(r) (r).ana_lane_0_quad_b_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_0_quad_b_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_0_quad_b_ctrl9[0]=(((r).ana_lane_0_quad_b_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_0_quad_b_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_0_quad_b_ctrl9[0]=(((r).ana_lane_0_quad_b_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_0_quad_b_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_0_quad_b_ctrl9[0]=(((r).ana_lane_0_quad_b_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_0_quad_b_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_0_quad_b_ctrl9[0]=(((r).ana_lane_0_quad_b_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r,_r._ana_lane_0_quad_b_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r,_r._ana_lane_0_quad_b_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL9r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r
#define ANA_LANE_0_QUAD_B_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_t ANA_LANE_0_QUAD_B_CTRL9r_t;
#define ANA_LANE_0_QUAD_B_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_CLR
#define ANA_LANE_0_QUAD_B_CTRL9r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_SET
#define ANA_LANE_0_QUAD_B_CTRL9r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_GET
#define ANA_LANE_0_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_0_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_0_QUAD_B_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_0_QUAD_B_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_0_QUAD_B_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_0_QUAD_B_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_0_QUAD_B_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_0_QUAD_B_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL9r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL9r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL9r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL10
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x910a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r (0x0001910a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl10[1];
	uint32_t _ana_lane_0_quad_b_ctrl10;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_CLR(r) (r).ana_lane_0_quad_b_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_SET(r,d) (r).ana_lane_0_quad_b_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_GET(r) (r).ana_lane_0_quad_b_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_0_quad_b_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_0_quad_b_ctrl10[0]=(((r).ana_lane_0_quad_b_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_0_quad_b_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_0_quad_b_ctrl10[0]=(((r).ana_lane_0_quad_b_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_0_quad_b_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_0_quad_b_ctrl10[0]=(((r).ana_lane_0_quad_b_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_0_quad_b_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_0_quad_b_ctrl10[0]=(((r).ana_lane_0_quad_b_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_0_quad_b_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_0_quad_b_ctrl10[0]=(((r).ana_lane_0_quad_b_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r,_r._ana_lane_0_quad_b_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r,_r._ana_lane_0_quad_b_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL10r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r
#define ANA_LANE_0_QUAD_B_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_t ANA_LANE_0_QUAD_B_CTRL10r_t;
#define ANA_LANE_0_QUAD_B_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_CLR
#define ANA_LANE_0_QUAD_B_CTRL10r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_SET
#define ANA_LANE_0_QUAD_B_CTRL10r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_GET
#define ANA_LANE_0_QUAD_B_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_0_QUAD_B_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_0_QUAD_B_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_0_QUAD_B_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_0_QUAD_B_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_0_QUAD_B_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_0_QUAD_B_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_0_QUAD_B_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_0_QUAD_B_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_0_QUAD_B_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL10r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL10r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL10r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL11
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x910b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r (0x0001910b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl11[1];
	uint32_t _ana_lane_0_quad_b_ctrl11;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_CLR(r) (r).ana_lane_0_quad_b_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_SET(r,d) (r).ana_lane_0_quad_b_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_GET(r) (r).ana_lane_0_quad_b_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_0_quad_b_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_0_quad_b_ctrl11[0]=(((r).ana_lane_0_quad_b_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r,_r._ana_lane_0_quad_b_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r,_r._ana_lane_0_quad_b_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL11r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r
#define ANA_LANE_0_QUAD_B_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_t ANA_LANE_0_QUAD_B_CTRL11r_t;
#define ANA_LANE_0_QUAD_B_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_CLR
#define ANA_LANE_0_QUAD_B_CTRL11r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_SET
#define ANA_LANE_0_QUAD_B_CTRL11r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_GET
#define ANA_LANE_0_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_0_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL11r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL11r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL11r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL12
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x910c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r (0x0001910c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl12[1];
	uint32_t _ana_lane_0_quad_b_ctrl12;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_CLR(r) (r).ana_lane_0_quad_b_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_SET(r,d) (r).ana_lane_0_quad_b_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_GET(r) (r).ana_lane_0_quad_b_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_0_quad_b_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_0_quad_b_ctrl12[0]=(((r).ana_lane_0_quad_b_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_0_quad_b_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_b_ctrl12[0]=(((r).ana_lane_0_quad_b_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_0_quad_b_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_0_quad_b_ctrl12[0]=(((r).ana_lane_0_quad_b_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_0_quad_b_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_b_ctrl12[0]=(((r).ana_lane_0_quad_b_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r,_r._ana_lane_0_quad_b_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r,_r._ana_lane_0_quad_b_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL12r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r
#define ANA_LANE_0_QUAD_B_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_t ANA_LANE_0_QUAD_B_CTRL12r_t;
#define ANA_LANE_0_QUAD_B_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_CLR
#define ANA_LANE_0_QUAD_B_CTRL12r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_SET
#define ANA_LANE_0_QUAD_B_CTRL12r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_GET
#define ANA_LANE_0_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_0_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_0_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_0_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_0_QUAD_B_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_0_QUAD_B_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_0_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_0_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL12r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL12r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL12r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL13
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x910d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r (0x0001910d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl13[1];
	uint32_t _ana_lane_0_quad_b_ctrl13;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_CLR(r) (r).ana_lane_0_quad_b_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_SET(r,d) (r).ana_lane_0_quad_b_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_GET(r) (r).ana_lane_0_quad_b_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_0_quad_b_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_0_quad_b_ctrl13[0]=(((r).ana_lane_0_quad_b_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_0_quad_b_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_b_ctrl13[0]=(((r).ana_lane_0_quad_b_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r,_r._ana_lane_0_quad_b_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r,_r._ana_lane_0_quad_b_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL13r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r
#define ANA_LANE_0_QUAD_B_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_t ANA_LANE_0_QUAD_B_CTRL13r_t;
#define ANA_LANE_0_QUAD_B_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_CLR
#define ANA_LANE_0_QUAD_B_CTRL13r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_SET
#define ANA_LANE_0_QUAD_B_CTRL13r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_GET
#define ANA_LANE_0_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_0_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_0_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_0_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL13r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL13r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL13r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL14
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x910e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r (0x0001910e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl14[1];
	uint32_t _ana_lane_0_quad_b_ctrl14;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_CLR(r) (r).ana_lane_0_quad_b_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_SET(r,d) (r).ana_lane_0_quad_b_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_GET(r) (r).ana_lane_0_quad_b_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_0_quad_b_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_0_quad_b_ctrl14[0]=(((r).ana_lane_0_quad_b_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_0_quad_b_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_0_quad_b_ctrl14[0]=(((r).ana_lane_0_quad_b_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_0_quad_b_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_b_ctrl14[0]=(((r).ana_lane_0_quad_b_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r,_r._ana_lane_0_quad_b_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r,_r._ana_lane_0_quad_b_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL14r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r
#define ANA_LANE_0_QUAD_B_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_t ANA_LANE_0_QUAD_B_CTRL14r_t;
#define ANA_LANE_0_QUAD_B_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_CLR
#define ANA_LANE_0_QUAD_B_CTRL14r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_SET
#define ANA_LANE_0_QUAD_B_CTRL14r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_GET
#define ANA_LANE_0_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_0_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_0_QUAD_B_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_0_QUAD_B_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_0_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_0_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL14r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL14r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL14r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL15
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x910f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r (0x0001910f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl15[1];
	uint32_t _ana_lane_0_quad_b_ctrl15;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_CLR(r) (r).ana_lane_0_quad_b_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SET(r,d) (r).ana_lane_0_quad_b_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_GET(r) (r).ana_lane_0_quad_b_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_0_quad_b_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_0_quad_b_ctrl15[0]=(((r).ana_lane_0_quad_b_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_0_quad_b_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_0_quad_b_ctrl15[0]=(((r).ana_lane_0_quad_b_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_0_quad_b_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_0_quad_b_ctrl15[0]=(((r).ana_lane_0_quad_b_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_0_quad_b_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_b_ctrl15[0]=(((r).ana_lane_0_quad_b_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_0_quad_b_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_0_quad_b_ctrl15[0]=(((r).ana_lane_0_quad_b_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_0_quad_b_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_0_quad_b_ctrl15[0]=(((r).ana_lane_0_quad_b_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r,_r._ana_lane_0_quad_b_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r,_r._ana_lane_0_quad_b_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL15r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r
#define ANA_LANE_0_QUAD_B_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_t ANA_LANE_0_QUAD_B_CTRL15r_t;
#define ANA_LANE_0_QUAD_B_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_CLR
#define ANA_LANE_0_QUAD_B_CTRL15r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SET
#define ANA_LANE_0_QUAD_B_CTRL15r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_GET
#define ANA_LANE_0_QUAD_B_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_0_QUAD_B_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_0_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_0_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL15r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL15r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL15r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_CTRL16
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x9110
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r (0x00019110 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_ctrl16[1];
	uint32_t _ana_lane_0_quad_b_ctrl16;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_CLR(r) (r).ana_lane_0_quad_b_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_SET(r,d) (r).ana_lane_0_quad_b_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_GET(r) (r).ana_lane_0_quad_b_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_0_quad_b_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_0_quad_b_ctrl16[0]=(((r).ana_lane_0_quad_b_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_0_quad_b_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_0_quad_b_ctrl16[0]=(((r).ana_lane_0_quad_b_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r,_r._ana_lane_0_quad_b_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r,_r._ana_lane_0_quad_b_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_CTRL16r BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r
#define ANA_LANE_0_QUAD_B_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_t ANA_LANE_0_QUAD_B_CTRL16r_t;
#define ANA_LANE_0_QUAD_B_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_CLR
#define ANA_LANE_0_QUAD_B_CTRL16r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_SET
#define ANA_LANE_0_QUAD_B_CTRL16r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_GET
#define ANA_LANE_0_QUAD_B_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_0_QUAD_B_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_0_QUAD_B_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_0_QUAD_B_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_0_QUAD_B_CTRL16r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_CTRL16r
#define WRITE_ANA_LANE_0_QUAD_B_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_CTRL16r
#define MODIFY_ANA_LANE_0_QUAD_B_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_B_STATUS0
 * BLOCKS:   ANA_LANE_0_QUAD_B
 * REGADDR:  0x9120
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r (0x00019120 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_B_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_b_status0[1];
	uint32_t _ana_lane_0_quad_b_status0;
} BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_CLR(r) (r).ana_lane_0_quad_b_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_SET(r,d) (r).ana_lane_0_quad_b_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_GET(r) (r).ana_lane_0_quad_b_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_0_quad_b_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_0_quad_b_status0[0]=(((r).ana_lane_0_quad_b_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_0_quad_b_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_0_quad_b_status0[0]=(((r).ana_lane_0_quad_b_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_B_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r,_r._ana_lane_0_quad_b_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r,_r._ana_lane_0_quad_b_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_B_STATUS0r BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r
#define ANA_LANE_0_QUAD_B_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_t ANA_LANE_0_QUAD_B_STATUS0r_t;
#define ANA_LANE_0_QUAD_B_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_CLR
#define ANA_LANE_0_QUAD_B_STATUS0r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_SET
#define ANA_LANE_0_QUAD_B_STATUS0r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_GET
#define ANA_LANE_0_QUAD_B_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_0_QUAD_B_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_0_QUAD_B_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_0_QUAD_B_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_0_QUAD_B_STATUS0r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_B_STATUS0r
#define WRITE_ANA_LANE_0_QUAD_B_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_B_STATUS0r
#define MODIFY_ANA_LANE_0_QUAD_B_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_B_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_B_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL0
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x9200
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r (0x00019200 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl0[1];
	uint32_t _ana_lane_1_quad_b_ctrl0;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_CLR(r) (r).ana_lane_1_quad_b_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_SET(r,d) (r).ana_lane_1_quad_b_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_GET(r) (r).ana_lane_1_quad_b_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_1_quad_b_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_1_quad_b_ctrl0[0]=(((r).ana_lane_1_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_1_quad_b_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_1_quad_b_ctrl0[0]=(((r).ana_lane_1_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_1_quad_b_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_1_quad_b_ctrl0[0]=(((r).ana_lane_1_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_1_quad_b_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_1_quad_b_ctrl0[0]=(((r).ana_lane_1_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_1_quad_b_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_1_quad_b_ctrl0[0]=(((r).ana_lane_1_quad_b_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r,_r._ana_lane_1_quad_b_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r,_r._ana_lane_1_quad_b_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL0r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r
#define ANA_LANE_1_QUAD_B_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_t ANA_LANE_1_QUAD_B_CTRL0r_t;
#define ANA_LANE_1_QUAD_B_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_CLR
#define ANA_LANE_1_QUAD_B_CTRL0r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_SET
#define ANA_LANE_1_QUAD_B_CTRL0r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_GET
#define ANA_LANE_1_QUAD_B_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_1_QUAD_B_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_1_QUAD_B_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_1_QUAD_B_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL0r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL0r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL0r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL1
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x9201
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r (0x00019201 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl1[1];
	uint32_t _ana_lane_1_quad_b_ctrl1;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_CLR(r) (r).ana_lane_1_quad_b_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_SET(r,d) (r).ana_lane_1_quad_b_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_GET(r) (r).ana_lane_1_quad_b_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_1_quad_b_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_1_quad_b_ctrl1[0]=(((r).ana_lane_1_quad_b_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_1_quad_b_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_1_quad_b_ctrl1[0]=(((r).ana_lane_1_quad_b_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_1_quad_b_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_1_quad_b_ctrl1[0]=(((r).ana_lane_1_quad_b_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_1_quad_b_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_1_quad_b_ctrl1[0]=(((r).ana_lane_1_quad_b_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_1_quad_b_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_1_quad_b_ctrl1[0]=(((r).ana_lane_1_quad_b_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r,_r._ana_lane_1_quad_b_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r,_r._ana_lane_1_quad_b_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL1r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r
#define ANA_LANE_1_QUAD_B_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_t ANA_LANE_1_QUAD_B_CTRL1r_t;
#define ANA_LANE_1_QUAD_B_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_CLR
#define ANA_LANE_1_QUAD_B_CTRL1r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_SET
#define ANA_LANE_1_QUAD_B_CTRL1r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_GET
#define ANA_LANE_1_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_1_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_1_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_1_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_1_QUAD_B_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_1_QUAD_B_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_1_QUAD_B_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_REF_OCLf_GET
#define ANA_LANE_1_QUAD_B_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_REF_OCLf_SET
#define ANA_LANE_1_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_1_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL1r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL1r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL1r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL2
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x9202
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r (0x00019202 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl2[1];
	uint32_t _ana_lane_1_quad_b_ctrl2;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_CLR(r) (r).ana_lane_1_quad_b_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_SET(r,d) (r).ana_lane_1_quad_b_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_GET(r) (r).ana_lane_1_quad_b_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_1_quad_b_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_1_quad_b_ctrl2[0]=(((r).ana_lane_1_quad_b_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_1_quad_b_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_1_quad_b_ctrl2[0]=(((r).ana_lane_1_quad_b_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r,_r._ana_lane_1_quad_b_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r,_r._ana_lane_1_quad_b_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL2r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r
#define ANA_LANE_1_QUAD_B_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_t ANA_LANE_1_QUAD_B_CTRL2r_t;
#define ANA_LANE_1_QUAD_B_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_CLR
#define ANA_LANE_1_QUAD_B_CTRL2r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_SET
#define ANA_LANE_1_QUAD_B_CTRL2r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_GET
#define ANA_LANE_1_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_1_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_1_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_1_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL2r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL2r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL2r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL3
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x9203
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r (0x00019203 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl3[1];
	uint32_t _ana_lane_1_quad_b_ctrl3;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_CLR(r) (r).ana_lane_1_quad_b_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_SET(r,d) (r).ana_lane_1_quad_b_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_GET(r) (r).ana_lane_1_quad_b_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_1_quad_b_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_1_quad_b_ctrl3[0]=(((r).ana_lane_1_quad_b_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_1_quad_b_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_1_quad_b_ctrl3[0]=(((r).ana_lane_1_quad_b_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r,_r._ana_lane_1_quad_b_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r,_r._ana_lane_1_quad_b_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL3r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r
#define ANA_LANE_1_QUAD_B_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_t ANA_LANE_1_QUAD_B_CTRL3r_t;
#define ANA_LANE_1_QUAD_B_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_CLR
#define ANA_LANE_1_QUAD_B_CTRL3r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_SET
#define ANA_LANE_1_QUAD_B_CTRL3r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_GET
#define ANA_LANE_1_QUAD_B_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_1_QUAD_B_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_1_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_1_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL3r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL3r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL3r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL4
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x9204
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r (0x00019204 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl4[1];
	uint32_t _ana_lane_1_quad_b_ctrl4;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_CLR(r) (r).ana_lane_1_quad_b_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_SET(r,d) (r).ana_lane_1_quad_b_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_GET(r) (r).ana_lane_1_quad_b_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_1_quad_b_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_1_quad_b_ctrl4[0]=(((r).ana_lane_1_quad_b_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_1_quad_b_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_1_quad_b_ctrl4[0]=(((r).ana_lane_1_quad_b_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r,_r._ana_lane_1_quad_b_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r,_r._ana_lane_1_quad_b_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL4r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r
#define ANA_LANE_1_QUAD_B_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_t ANA_LANE_1_QUAD_B_CTRL4r_t;
#define ANA_LANE_1_QUAD_B_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_CLR
#define ANA_LANE_1_QUAD_B_CTRL4r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_SET
#define ANA_LANE_1_QUAD_B_CTRL4r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_GET
#define ANA_LANE_1_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_1_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_1_QUAD_B_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_1_QUAD_B_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL4r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL4r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL4r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL5
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x9205
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r (0x00019205 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl5[1];
	uint32_t _ana_lane_1_quad_b_ctrl5;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_CLR(r) (r).ana_lane_1_quad_b_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_SET(r,d) (r).ana_lane_1_quad_b_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_GET(r) (r).ana_lane_1_quad_b_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_1_quad_b_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_1_quad_b_ctrl5[0]=(((r).ana_lane_1_quad_b_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_1_quad_b_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_1_quad_b_ctrl5[0]=(((r).ana_lane_1_quad_b_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_1_quad_b_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_1_quad_b_ctrl5[0]=(((r).ana_lane_1_quad_b_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r,_r._ana_lane_1_quad_b_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r,_r._ana_lane_1_quad_b_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL5r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r
#define ANA_LANE_1_QUAD_B_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_t ANA_LANE_1_QUAD_B_CTRL5r_t;
#define ANA_LANE_1_QUAD_B_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_CLR
#define ANA_LANE_1_QUAD_B_CTRL5r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_SET
#define ANA_LANE_1_QUAD_B_CTRL5r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_GET
#define ANA_LANE_1_QUAD_B_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_1_QUAD_B_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_1_QUAD_B_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_1_QUAD_B_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_1_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_1_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL5r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL5r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL5r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL6
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x9206
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r (0x00019206 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl6[1];
	uint32_t _ana_lane_1_quad_b_ctrl6;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_CLR(r) (r).ana_lane_1_quad_b_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_SET(r,d) (r).ana_lane_1_quad_b_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_GET(r) (r).ana_lane_1_quad_b_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_1_quad_b_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_1_quad_b_ctrl6[0]=(((r).ana_lane_1_quad_b_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_1_quad_b_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_1_quad_b_ctrl6[0]=(((r).ana_lane_1_quad_b_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r,_r._ana_lane_1_quad_b_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r,_r._ana_lane_1_quad_b_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL6r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r
#define ANA_LANE_1_QUAD_B_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_t ANA_LANE_1_QUAD_B_CTRL6r_t;
#define ANA_LANE_1_QUAD_B_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_CLR
#define ANA_LANE_1_QUAD_B_CTRL6r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_SET
#define ANA_LANE_1_QUAD_B_CTRL6r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_GET
#define ANA_LANE_1_QUAD_B_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_1_QUAD_B_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_1_QUAD_B_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_1_QUAD_B_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL6r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL6r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL6r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL7
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x9207
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r (0x00019207 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl7[1];
	uint32_t _ana_lane_1_quad_b_ctrl7;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_CLR(r) (r).ana_lane_1_quad_b_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_SET(r,d) (r).ana_lane_1_quad_b_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_GET(r) (r).ana_lane_1_quad_b_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_1_quad_b_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_1_quad_b_ctrl7[0]=(((r).ana_lane_1_quad_b_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_1_quad_b_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_1_quad_b_ctrl7[0]=(((r).ana_lane_1_quad_b_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r,_r._ana_lane_1_quad_b_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r,_r._ana_lane_1_quad_b_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL7r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r
#define ANA_LANE_1_QUAD_B_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_t ANA_LANE_1_QUAD_B_CTRL7r_t;
#define ANA_LANE_1_QUAD_B_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_CLR
#define ANA_LANE_1_QUAD_B_CTRL7r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_SET
#define ANA_LANE_1_QUAD_B_CTRL7r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_GET
#define ANA_LANE_1_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_1_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_1_QUAD_B_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_1_QUAD_B_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL7r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL7r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL7r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL8
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x9208
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r (0x00019208 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl8[1];
	uint32_t _ana_lane_1_quad_b_ctrl8;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_CLR(r) (r).ana_lane_1_quad_b_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_SET(r,d) (r).ana_lane_1_quad_b_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_GET(r) (r).ana_lane_1_quad_b_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_1_quad_b_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_1_quad_b_ctrl8[0]=(((r).ana_lane_1_quad_b_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_1_quad_b_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_1_quad_b_ctrl8[0]=(((r).ana_lane_1_quad_b_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_1_quad_b_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_1_quad_b_ctrl8[0]=(((r).ana_lane_1_quad_b_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r,_r._ana_lane_1_quad_b_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r,_r._ana_lane_1_quad_b_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL8r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r
#define ANA_LANE_1_QUAD_B_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_t ANA_LANE_1_QUAD_B_CTRL8r_t;
#define ANA_LANE_1_QUAD_B_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_CLR
#define ANA_LANE_1_QUAD_B_CTRL8r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_SET
#define ANA_LANE_1_QUAD_B_CTRL8r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_GET
#define ANA_LANE_1_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_1_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_1_QUAD_B_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_1_QUAD_B_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_1_QUAD_B_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_LA_PDf_GET
#define ANA_LANE_1_QUAD_B_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL8r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL8r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL8r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL9
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x9209
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r (0x00019209 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl9[1];
	uint32_t _ana_lane_1_quad_b_ctrl9;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_CLR(r) (r).ana_lane_1_quad_b_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_SET(r,d) (r).ana_lane_1_quad_b_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_GET(r) (r).ana_lane_1_quad_b_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_1_quad_b_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_1_quad_b_ctrl9[0]=(((r).ana_lane_1_quad_b_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_1_quad_b_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_1_quad_b_ctrl9[0]=(((r).ana_lane_1_quad_b_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_1_quad_b_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_1_quad_b_ctrl9[0]=(((r).ana_lane_1_quad_b_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_1_quad_b_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_1_quad_b_ctrl9[0]=(((r).ana_lane_1_quad_b_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r,_r._ana_lane_1_quad_b_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r,_r._ana_lane_1_quad_b_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL9r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r
#define ANA_LANE_1_QUAD_B_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_t ANA_LANE_1_QUAD_B_CTRL9r_t;
#define ANA_LANE_1_QUAD_B_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_CLR
#define ANA_LANE_1_QUAD_B_CTRL9r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_SET
#define ANA_LANE_1_QUAD_B_CTRL9r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_GET
#define ANA_LANE_1_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_1_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_1_QUAD_B_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_1_QUAD_B_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_1_QUAD_B_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_1_QUAD_B_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_1_QUAD_B_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_1_QUAD_B_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL9r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL9r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL9r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL10
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x920a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r (0x0001920a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl10[1];
	uint32_t _ana_lane_1_quad_b_ctrl10;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_CLR(r) (r).ana_lane_1_quad_b_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_SET(r,d) (r).ana_lane_1_quad_b_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_GET(r) (r).ana_lane_1_quad_b_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_1_quad_b_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_1_quad_b_ctrl10[0]=(((r).ana_lane_1_quad_b_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_1_quad_b_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_1_quad_b_ctrl10[0]=(((r).ana_lane_1_quad_b_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_1_quad_b_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_1_quad_b_ctrl10[0]=(((r).ana_lane_1_quad_b_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_1_quad_b_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_1_quad_b_ctrl10[0]=(((r).ana_lane_1_quad_b_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_1_quad_b_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_1_quad_b_ctrl10[0]=(((r).ana_lane_1_quad_b_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r,_r._ana_lane_1_quad_b_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r,_r._ana_lane_1_quad_b_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL10r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r
#define ANA_LANE_1_QUAD_B_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_t ANA_LANE_1_QUAD_B_CTRL10r_t;
#define ANA_LANE_1_QUAD_B_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_CLR
#define ANA_LANE_1_QUAD_B_CTRL10r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_SET
#define ANA_LANE_1_QUAD_B_CTRL10r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_GET
#define ANA_LANE_1_QUAD_B_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_1_QUAD_B_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_1_QUAD_B_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_1_QUAD_B_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_1_QUAD_B_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_1_QUAD_B_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_1_QUAD_B_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_1_QUAD_B_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_1_QUAD_B_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_1_QUAD_B_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL10r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL10r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL10r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL11
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x920b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r (0x0001920b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl11[1];
	uint32_t _ana_lane_1_quad_b_ctrl11;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_CLR(r) (r).ana_lane_1_quad_b_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_SET(r,d) (r).ana_lane_1_quad_b_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_GET(r) (r).ana_lane_1_quad_b_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_1_quad_b_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_1_quad_b_ctrl11[0]=(((r).ana_lane_1_quad_b_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r,_r._ana_lane_1_quad_b_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r,_r._ana_lane_1_quad_b_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL11r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r
#define ANA_LANE_1_QUAD_B_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_t ANA_LANE_1_QUAD_B_CTRL11r_t;
#define ANA_LANE_1_QUAD_B_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_CLR
#define ANA_LANE_1_QUAD_B_CTRL11r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_SET
#define ANA_LANE_1_QUAD_B_CTRL11r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_GET
#define ANA_LANE_1_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_1_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL11r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL11r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL11r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL12
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x920c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r (0x0001920c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl12[1];
	uint32_t _ana_lane_1_quad_b_ctrl12;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_CLR(r) (r).ana_lane_1_quad_b_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_SET(r,d) (r).ana_lane_1_quad_b_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_GET(r) (r).ana_lane_1_quad_b_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_1_quad_b_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_1_quad_b_ctrl12[0]=(((r).ana_lane_1_quad_b_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_1_quad_b_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_b_ctrl12[0]=(((r).ana_lane_1_quad_b_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_1_quad_b_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_1_quad_b_ctrl12[0]=(((r).ana_lane_1_quad_b_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_1_quad_b_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_b_ctrl12[0]=(((r).ana_lane_1_quad_b_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r,_r._ana_lane_1_quad_b_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r,_r._ana_lane_1_quad_b_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL12r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r
#define ANA_LANE_1_QUAD_B_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_t ANA_LANE_1_QUAD_B_CTRL12r_t;
#define ANA_LANE_1_QUAD_B_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_CLR
#define ANA_LANE_1_QUAD_B_CTRL12r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_SET
#define ANA_LANE_1_QUAD_B_CTRL12r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_GET
#define ANA_LANE_1_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_1_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_1_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_1_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_1_QUAD_B_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_1_QUAD_B_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_1_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_1_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL12r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL12r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL12r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL13
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x920d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r (0x0001920d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl13[1];
	uint32_t _ana_lane_1_quad_b_ctrl13;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_CLR(r) (r).ana_lane_1_quad_b_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_SET(r,d) (r).ana_lane_1_quad_b_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_GET(r) (r).ana_lane_1_quad_b_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_1_quad_b_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_1_quad_b_ctrl13[0]=(((r).ana_lane_1_quad_b_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_1_quad_b_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_b_ctrl13[0]=(((r).ana_lane_1_quad_b_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r,_r._ana_lane_1_quad_b_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r,_r._ana_lane_1_quad_b_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL13r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r
#define ANA_LANE_1_QUAD_B_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_t ANA_LANE_1_QUAD_B_CTRL13r_t;
#define ANA_LANE_1_QUAD_B_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_CLR
#define ANA_LANE_1_QUAD_B_CTRL13r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_SET
#define ANA_LANE_1_QUAD_B_CTRL13r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_GET
#define ANA_LANE_1_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_1_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_1_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_1_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL13r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL13r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL13r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL14
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x920e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r (0x0001920e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl14[1];
	uint32_t _ana_lane_1_quad_b_ctrl14;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_CLR(r) (r).ana_lane_1_quad_b_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_SET(r,d) (r).ana_lane_1_quad_b_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_GET(r) (r).ana_lane_1_quad_b_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_1_quad_b_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_1_quad_b_ctrl14[0]=(((r).ana_lane_1_quad_b_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_1_quad_b_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_1_quad_b_ctrl14[0]=(((r).ana_lane_1_quad_b_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_1_quad_b_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_b_ctrl14[0]=(((r).ana_lane_1_quad_b_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r,_r._ana_lane_1_quad_b_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r,_r._ana_lane_1_quad_b_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL14r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r
#define ANA_LANE_1_QUAD_B_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_t ANA_LANE_1_QUAD_B_CTRL14r_t;
#define ANA_LANE_1_QUAD_B_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_CLR
#define ANA_LANE_1_QUAD_B_CTRL14r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_SET
#define ANA_LANE_1_QUAD_B_CTRL14r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_GET
#define ANA_LANE_1_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_1_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_1_QUAD_B_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_1_QUAD_B_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_1_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_1_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL14r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL14r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL14r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL15
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x920f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r (0x0001920f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl15[1];
	uint32_t _ana_lane_1_quad_b_ctrl15;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_CLR(r) (r).ana_lane_1_quad_b_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SET(r,d) (r).ana_lane_1_quad_b_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_GET(r) (r).ana_lane_1_quad_b_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_1_quad_b_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_1_quad_b_ctrl15[0]=(((r).ana_lane_1_quad_b_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_1_quad_b_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_1_quad_b_ctrl15[0]=(((r).ana_lane_1_quad_b_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_1_quad_b_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_1_quad_b_ctrl15[0]=(((r).ana_lane_1_quad_b_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_1_quad_b_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_b_ctrl15[0]=(((r).ana_lane_1_quad_b_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_1_quad_b_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_1_quad_b_ctrl15[0]=(((r).ana_lane_1_quad_b_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_1_quad_b_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_1_quad_b_ctrl15[0]=(((r).ana_lane_1_quad_b_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r,_r._ana_lane_1_quad_b_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r,_r._ana_lane_1_quad_b_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL15r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r
#define ANA_LANE_1_QUAD_B_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_t ANA_LANE_1_QUAD_B_CTRL15r_t;
#define ANA_LANE_1_QUAD_B_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_CLR
#define ANA_LANE_1_QUAD_B_CTRL15r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SET
#define ANA_LANE_1_QUAD_B_CTRL15r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_GET
#define ANA_LANE_1_QUAD_B_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_1_QUAD_B_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_1_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_1_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL15r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL15r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL15r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_CTRL16
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x9210
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r (0x00019210 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_ctrl16[1];
	uint32_t _ana_lane_1_quad_b_ctrl16;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_CLR(r) (r).ana_lane_1_quad_b_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_SET(r,d) (r).ana_lane_1_quad_b_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_GET(r) (r).ana_lane_1_quad_b_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_1_quad_b_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_1_quad_b_ctrl16[0]=(((r).ana_lane_1_quad_b_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_1_quad_b_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_1_quad_b_ctrl16[0]=(((r).ana_lane_1_quad_b_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r,_r._ana_lane_1_quad_b_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r,_r._ana_lane_1_quad_b_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_CTRL16r BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r
#define ANA_LANE_1_QUAD_B_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_t ANA_LANE_1_QUAD_B_CTRL16r_t;
#define ANA_LANE_1_QUAD_B_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_CLR
#define ANA_LANE_1_QUAD_B_CTRL16r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_SET
#define ANA_LANE_1_QUAD_B_CTRL16r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_GET
#define ANA_LANE_1_QUAD_B_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_1_QUAD_B_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_1_QUAD_B_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_1_QUAD_B_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_1_QUAD_B_CTRL16r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_CTRL16r
#define WRITE_ANA_LANE_1_QUAD_B_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_CTRL16r
#define MODIFY_ANA_LANE_1_QUAD_B_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_B_STATUS0
 * BLOCKS:   ANA_LANE_1_QUAD_B
 * REGADDR:  0x9220
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r (0x00019220 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_B_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_b_status0[1];
	uint32_t _ana_lane_1_quad_b_status0;
} BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_CLR(r) (r).ana_lane_1_quad_b_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_SET(r,d) (r).ana_lane_1_quad_b_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_GET(r) (r).ana_lane_1_quad_b_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_1_quad_b_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_1_quad_b_status0[0]=(((r).ana_lane_1_quad_b_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_1_quad_b_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_1_quad_b_status0[0]=(((r).ana_lane_1_quad_b_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_B_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r,_r._ana_lane_1_quad_b_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r,_r._ana_lane_1_quad_b_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_B_STATUS0r BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r
#define ANA_LANE_1_QUAD_B_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_t ANA_LANE_1_QUAD_B_STATUS0r_t;
#define ANA_LANE_1_QUAD_B_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_CLR
#define ANA_LANE_1_QUAD_B_STATUS0r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_SET
#define ANA_LANE_1_QUAD_B_STATUS0r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_GET
#define ANA_LANE_1_QUAD_B_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_1_QUAD_B_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_1_QUAD_B_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_1_QUAD_B_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_1_QUAD_B_STATUS0r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_B_STATUS0r
#define WRITE_ANA_LANE_1_QUAD_B_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_B_STATUS0r
#define MODIFY_ANA_LANE_1_QUAD_B_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_B_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_B_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL0
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x9400
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r (0x00019400 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl0[1];
	uint32_t _ana_lane_2_quad_b_ctrl0;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_CLR(r) (r).ana_lane_2_quad_b_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_SET(r,d) (r).ana_lane_2_quad_b_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_GET(r) (r).ana_lane_2_quad_b_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_2_quad_b_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_2_quad_b_ctrl0[0]=(((r).ana_lane_2_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_2_quad_b_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_2_quad_b_ctrl0[0]=(((r).ana_lane_2_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_2_quad_b_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_2_quad_b_ctrl0[0]=(((r).ana_lane_2_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_2_quad_b_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_2_quad_b_ctrl0[0]=(((r).ana_lane_2_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_2_quad_b_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_2_quad_b_ctrl0[0]=(((r).ana_lane_2_quad_b_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r,_r._ana_lane_2_quad_b_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r,_r._ana_lane_2_quad_b_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL0r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r
#define ANA_LANE_2_QUAD_B_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_t ANA_LANE_2_QUAD_B_CTRL0r_t;
#define ANA_LANE_2_QUAD_B_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_CLR
#define ANA_LANE_2_QUAD_B_CTRL0r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_SET
#define ANA_LANE_2_QUAD_B_CTRL0r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_GET
#define ANA_LANE_2_QUAD_B_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_2_QUAD_B_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_2_QUAD_B_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_2_QUAD_B_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL0r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL0r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL0r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL1
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x9401
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r (0x00019401 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl1[1];
	uint32_t _ana_lane_2_quad_b_ctrl1;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_CLR(r) (r).ana_lane_2_quad_b_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_SET(r,d) (r).ana_lane_2_quad_b_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_GET(r) (r).ana_lane_2_quad_b_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_2_quad_b_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_2_quad_b_ctrl1[0]=(((r).ana_lane_2_quad_b_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_2_quad_b_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_2_quad_b_ctrl1[0]=(((r).ana_lane_2_quad_b_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_2_quad_b_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_2_quad_b_ctrl1[0]=(((r).ana_lane_2_quad_b_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_2_quad_b_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_2_quad_b_ctrl1[0]=(((r).ana_lane_2_quad_b_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_2_quad_b_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_2_quad_b_ctrl1[0]=(((r).ana_lane_2_quad_b_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r,_r._ana_lane_2_quad_b_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r,_r._ana_lane_2_quad_b_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL1r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r
#define ANA_LANE_2_QUAD_B_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_t ANA_LANE_2_QUAD_B_CTRL1r_t;
#define ANA_LANE_2_QUAD_B_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_CLR
#define ANA_LANE_2_QUAD_B_CTRL1r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_SET
#define ANA_LANE_2_QUAD_B_CTRL1r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_GET
#define ANA_LANE_2_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_2_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_2_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_2_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_2_QUAD_B_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_2_QUAD_B_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_2_QUAD_B_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_REF_OCLf_GET
#define ANA_LANE_2_QUAD_B_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_REF_OCLf_SET
#define ANA_LANE_2_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_2_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL1r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL1r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL1r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL2
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x9402
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r (0x00019402 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl2[1];
	uint32_t _ana_lane_2_quad_b_ctrl2;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_CLR(r) (r).ana_lane_2_quad_b_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_SET(r,d) (r).ana_lane_2_quad_b_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_GET(r) (r).ana_lane_2_quad_b_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_2_quad_b_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_2_quad_b_ctrl2[0]=(((r).ana_lane_2_quad_b_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_2_quad_b_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_2_quad_b_ctrl2[0]=(((r).ana_lane_2_quad_b_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r,_r._ana_lane_2_quad_b_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r,_r._ana_lane_2_quad_b_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL2r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r
#define ANA_LANE_2_QUAD_B_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_t ANA_LANE_2_QUAD_B_CTRL2r_t;
#define ANA_LANE_2_QUAD_B_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_CLR
#define ANA_LANE_2_QUAD_B_CTRL2r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_SET
#define ANA_LANE_2_QUAD_B_CTRL2r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_GET
#define ANA_LANE_2_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_2_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_2_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_2_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL2r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL2r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL2r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL3
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x9403
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r (0x00019403 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl3[1];
	uint32_t _ana_lane_2_quad_b_ctrl3;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_CLR(r) (r).ana_lane_2_quad_b_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_SET(r,d) (r).ana_lane_2_quad_b_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_GET(r) (r).ana_lane_2_quad_b_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_2_quad_b_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_2_quad_b_ctrl3[0]=(((r).ana_lane_2_quad_b_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_2_quad_b_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_2_quad_b_ctrl3[0]=(((r).ana_lane_2_quad_b_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r,_r._ana_lane_2_quad_b_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r,_r._ana_lane_2_quad_b_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL3r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r
#define ANA_LANE_2_QUAD_B_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_t ANA_LANE_2_QUAD_B_CTRL3r_t;
#define ANA_LANE_2_QUAD_B_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_CLR
#define ANA_LANE_2_QUAD_B_CTRL3r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_SET
#define ANA_LANE_2_QUAD_B_CTRL3r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_GET
#define ANA_LANE_2_QUAD_B_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_2_QUAD_B_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_2_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_2_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL3r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL3r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL3r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL4
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x9404
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r (0x00019404 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl4[1];
	uint32_t _ana_lane_2_quad_b_ctrl4;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_CLR(r) (r).ana_lane_2_quad_b_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_SET(r,d) (r).ana_lane_2_quad_b_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_GET(r) (r).ana_lane_2_quad_b_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_2_quad_b_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_2_quad_b_ctrl4[0]=(((r).ana_lane_2_quad_b_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_2_quad_b_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_2_quad_b_ctrl4[0]=(((r).ana_lane_2_quad_b_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r,_r._ana_lane_2_quad_b_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r,_r._ana_lane_2_quad_b_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL4r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r
#define ANA_LANE_2_QUAD_B_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_t ANA_LANE_2_QUAD_B_CTRL4r_t;
#define ANA_LANE_2_QUAD_B_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_CLR
#define ANA_LANE_2_QUAD_B_CTRL4r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_SET
#define ANA_LANE_2_QUAD_B_CTRL4r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_GET
#define ANA_LANE_2_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_2_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_2_QUAD_B_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_2_QUAD_B_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL4r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL4r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL4r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL5
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x9405
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r (0x00019405 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl5[1];
	uint32_t _ana_lane_2_quad_b_ctrl5;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_CLR(r) (r).ana_lane_2_quad_b_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_SET(r,d) (r).ana_lane_2_quad_b_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_GET(r) (r).ana_lane_2_quad_b_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_2_quad_b_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_2_quad_b_ctrl5[0]=(((r).ana_lane_2_quad_b_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_2_quad_b_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_2_quad_b_ctrl5[0]=(((r).ana_lane_2_quad_b_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_2_quad_b_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_2_quad_b_ctrl5[0]=(((r).ana_lane_2_quad_b_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r,_r._ana_lane_2_quad_b_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r,_r._ana_lane_2_quad_b_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL5r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r
#define ANA_LANE_2_QUAD_B_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_t ANA_LANE_2_QUAD_B_CTRL5r_t;
#define ANA_LANE_2_QUAD_B_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_CLR
#define ANA_LANE_2_QUAD_B_CTRL5r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_SET
#define ANA_LANE_2_QUAD_B_CTRL5r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_GET
#define ANA_LANE_2_QUAD_B_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_2_QUAD_B_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_2_QUAD_B_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_2_QUAD_B_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_2_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_2_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL5r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL5r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL5r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL6
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x9406
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r (0x00019406 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl6[1];
	uint32_t _ana_lane_2_quad_b_ctrl6;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_CLR(r) (r).ana_lane_2_quad_b_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_SET(r,d) (r).ana_lane_2_quad_b_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_GET(r) (r).ana_lane_2_quad_b_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_2_quad_b_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_2_quad_b_ctrl6[0]=(((r).ana_lane_2_quad_b_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_2_quad_b_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_2_quad_b_ctrl6[0]=(((r).ana_lane_2_quad_b_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r,_r._ana_lane_2_quad_b_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r,_r._ana_lane_2_quad_b_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL6r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r
#define ANA_LANE_2_QUAD_B_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_t ANA_LANE_2_QUAD_B_CTRL6r_t;
#define ANA_LANE_2_QUAD_B_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_CLR
#define ANA_LANE_2_QUAD_B_CTRL6r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_SET
#define ANA_LANE_2_QUAD_B_CTRL6r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_GET
#define ANA_LANE_2_QUAD_B_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_2_QUAD_B_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_2_QUAD_B_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_2_QUAD_B_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL6r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL6r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL6r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL7
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x9407
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r (0x00019407 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl7[1];
	uint32_t _ana_lane_2_quad_b_ctrl7;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_CLR(r) (r).ana_lane_2_quad_b_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_SET(r,d) (r).ana_lane_2_quad_b_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_GET(r) (r).ana_lane_2_quad_b_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_2_quad_b_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_2_quad_b_ctrl7[0]=(((r).ana_lane_2_quad_b_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_2_quad_b_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_2_quad_b_ctrl7[0]=(((r).ana_lane_2_quad_b_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r,_r._ana_lane_2_quad_b_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r,_r._ana_lane_2_quad_b_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL7r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r
#define ANA_LANE_2_QUAD_B_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_t ANA_LANE_2_QUAD_B_CTRL7r_t;
#define ANA_LANE_2_QUAD_B_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_CLR
#define ANA_LANE_2_QUAD_B_CTRL7r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_SET
#define ANA_LANE_2_QUAD_B_CTRL7r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_GET
#define ANA_LANE_2_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_2_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_2_QUAD_B_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_2_QUAD_B_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL7r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL7r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL7r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL8
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x9408
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r (0x00019408 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl8[1];
	uint32_t _ana_lane_2_quad_b_ctrl8;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_CLR(r) (r).ana_lane_2_quad_b_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_SET(r,d) (r).ana_lane_2_quad_b_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_GET(r) (r).ana_lane_2_quad_b_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_2_quad_b_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_2_quad_b_ctrl8[0]=(((r).ana_lane_2_quad_b_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_2_quad_b_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_2_quad_b_ctrl8[0]=(((r).ana_lane_2_quad_b_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_2_quad_b_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_2_quad_b_ctrl8[0]=(((r).ana_lane_2_quad_b_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r,_r._ana_lane_2_quad_b_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r,_r._ana_lane_2_quad_b_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL8r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r
#define ANA_LANE_2_QUAD_B_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_t ANA_LANE_2_QUAD_B_CTRL8r_t;
#define ANA_LANE_2_QUAD_B_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_CLR
#define ANA_LANE_2_QUAD_B_CTRL8r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_SET
#define ANA_LANE_2_QUAD_B_CTRL8r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_GET
#define ANA_LANE_2_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_2_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_2_QUAD_B_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_2_QUAD_B_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_2_QUAD_B_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_LA_PDf_GET
#define ANA_LANE_2_QUAD_B_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL8r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL8r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL8r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL9
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x9409
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r (0x00019409 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl9[1];
	uint32_t _ana_lane_2_quad_b_ctrl9;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_CLR(r) (r).ana_lane_2_quad_b_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_SET(r,d) (r).ana_lane_2_quad_b_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_GET(r) (r).ana_lane_2_quad_b_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_2_quad_b_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_2_quad_b_ctrl9[0]=(((r).ana_lane_2_quad_b_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_2_quad_b_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_2_quad_b_ctrl9[0]=(((r).ana_lane_2_quad_b_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_2_quad_b_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_2_quad_b_ctrl9[0]=(((r).ana_lane_2_quad_b_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_2_quad_b_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_2_quad_b_ctrl9[0]=(((r).ana_lane_2_quad_b_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r,_r._ana_lane_2_quad_b_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r,_r._ana_lane_2_quad_b_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL9r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r
#define ANA_LANE_2_QUAD_B_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_t ANA_LANE_2_QUAD_B_CTRL9r_t;
#define ANA_LANE_2_QUAD_B_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_CLR
#define ANA_LANE_2_QUAD_B_CTRL9r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_SET
#define ANA_LANE_2_QUAD_B_CTRL9r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_GET
#define ANA_LANE_2_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_2_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_2_QUAD_B_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_2_QUAD_B_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_2_QUAD_B_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_2_QUAD_B_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_2_QUAD_B_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_2_QUAD_B_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL9r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL9r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL9r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL10
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x940a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r (0x0001940a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl10[1];
	uint32_t _ana_lane_2_quad_b_ctrl10;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_CLR(r) (r).ana_lane_2_quad_b_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_SET(r,d) (r).ana_lane_2_quad_b_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_GET(r) (r).ana_lane_2_quad_b_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_2_quad_b_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_2_quad_b_ctrl10[0]=(((r).ana_lane_2_quad_b_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_2_quad_b_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_2_quad_b_ctrl10[0]=(((r).ana_lane_2_quad_b_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_2_quad_b_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_2_quad_b_ctrl10[0]=(((r).ana_lane_2_quad_b_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_2_quad_b_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_2_quad_b_ctrl10[0]=(((r).ana_lane_2_quad_b_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_2_quad_b_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_2_quad_b_ctrl10[0]=(((r).ana_lane_2_quad_b_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r,_r._ana_lane_2_quad_b_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r,_r._ana_lane_2_quad_b_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL10r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r
#define ANA_LANE_2_QUAD_B_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_t ANA_LANE_2_QUAD_B_CTRL10r_t;
#define ANA_LANE_2_QUAD_B_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_CLR
#define ANA_LANE_2_QUAD_B_CTRL10r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_SET
#define ANA_LANE_2_QUAD_B_CTRL10r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_GET
#define ANA_LANE_2_QUAD_B_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_2_QUAD_B_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_2_QUAD_B_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_2_QUAD_B_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_2_QUAD_B_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_2_QUAD_B_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_2_QUAD_B_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_2_QUAD_B_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_2_QUAD_B_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_2_QUAD_B_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL10r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL10r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL10r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL11
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x940b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r (0x0001940b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl11[1];
	uint32_t _ana_lane_2_quad_b_ctrl11;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_CLR(r) (r).ana_lane_2_quad_b_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_SET(r,d) (r).ana_lane_2_quad_b_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_GET(r) (r).ana_lane_2_quad_b_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_2_quad_b_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_2_quad_b_ctrl11[0]=(((r).ana_lane_2_quad_b_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r,_r._ana_lane_2_quad_b_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r,_r._ana_lane_2_quad_b_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL11r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r
#define ANA_LANE_2_QUAD_B_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_t ANA_LANE_2_QUAD_B_CTRL11r_t;
#define ANA_LANE_2_QUAD_B_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_CLR
#define ANA_LANE_2_QUAD_B_CTRL11r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_SET
#define ANA_LANE_2_QUAD_B_CTRL11r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_GET
#define ANA_LANE_2_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_2_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL11r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL11r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL11r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL12
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x940c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r (0x0001940c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl12[1];
	uint32_t _ana_lane_2_quad_b_ctrl12;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_CLR(r) (r).ana_lane_2_quad_b_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_SET(r,d) (r).ana_lane_2_quad_b_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_GET(r) (r).ana_lane_2_quad_b_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_2_quad_b_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_2_quad_b_ctrl12[0]=(((r).ana_lane_2_quad_b_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_2_quad_b_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_b_ctrl12[0]=(((r).ana_lane_2_quad_b_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_2_quad_b_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_2_quad_b_ctrl12[0]=(((r).ana_lane_2_quad_b_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_2_quad_b_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_b_ctrl12[0]=(((r).ana_lane_2_quad_b_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r,_r._ana_lane_2_quad_b_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r,_r._ana_lane_2_quad_b_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL12r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r
#define ANA_LANE_2_QUAD_B_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_t ANA_LANE_2_QUAD_B_CTRL12r_t;
#define ANA_LANE_2_QUAD_B_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_CLR
#define ANA_LANE_2_QUAD_B_CTRL12r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_SET
#define ANA_LANE_2_QUAD_B_CTRL12r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_GET
#define ANA_LANE_2_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_2_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_2_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_2_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_2_QUAD_B_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_2_QUAD_B_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_2_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_2_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL12r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL12r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL12r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL13
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x940d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r (0x0001940d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl13[1];
	uint32_t _ana_lane_2_quad_b_ctrl13;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_CLR(r) (r).ana_lane_2_quad_b_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_SET(r,d) (r).ana_lane_2_quad_b_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_GET(r) (r).ana_lane_2_quad_b_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_2_quad_b_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_2_quad_b_ctrl13[0]=(((r).ana_lane_2_quad_b_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_2_quad_b_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_b_ctrl13[0]=(((r).ana_lane_2_quad_b_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r,_r._ana_lane_2_quad_b_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r,_r._ana_lane_2_quad_b_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL13r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r
#define ANA_LANE_2_QUAD_B_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_t ANA_LANE_2_QUAD_B_CTRL13r_t;
#define ANA_LANE_2_QUAD_B_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_CLR
#define ANA_LANE_2_QUAD_B_CTRL13r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_SET
#define ANA_LANE_2_QUAD_B_CTRL13r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_GET
#define ANA_LANE_2_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_2_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_2_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_2_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL13r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL13r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL13r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL14
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x940e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r (0x0001940e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl14[1];
	uint32_t _ana_lane_2_quad_b_ctrl14;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_CLR(r) (r).ana_lane_2_quad_b_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_SET(r,d) (r).ana_lane_2_quad_b_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_GET(r) (r).ana_lane_2_quad_b_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_2_quad_b_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_2_quad_b_ctrl14[0]=(((r).ana_lane_2_quad_b_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_2_quad_b_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_2_quad_b_ctrl14[0]=(((r).ana_lane_2_quad_b_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_2_quad_b_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_b_ctrl14[0]=(((r).ana_lane_2_quad_b_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r,_r._ana_lane_2_quad_b_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r,_r._ana_lane_2_quad_b_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL14r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r
#define ANA_LANE_2_QUAD_B_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_t ANA_LANE_2_QUAD_B_CTRL14r_t;
#define ANA_LANE_2_QUAD_B_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_CLR
#define ANA_LANE_2_QUAD_B_CTRL14r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_SET
#define ANA_LANE_2_QUAD_B_CTRL14r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_GET
#define ANA_LANE_2_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_2_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_2_QUAD_B_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_2_QUAD_B_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_2_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_2_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL14r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL14r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL14r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL15
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x940f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r (0x0001940f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl15[1];
	uint32_t _ana_lane_2_quad_b_ctrl15;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_CLR(r) (r).ana_lane_2_quad_b_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SET(r,d) (r).ana_lane_2_quad_b_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_GET(r) (r).ana_lane_2_quad_b_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_2_quad_b_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_2_quad_b_ctrl15[0]=(((r).ana_lane_2_quad_b_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_2_quad_b_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_2_quad_b_ctrl15[0]=(((r).ana_lane_2_quad_b_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_2_quad_b_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_2_quad_b_ctrl15[0]=(((r).ana_lane_2_quad_b_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_2_quad_b_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_b_ctrl15[0]=(((r).ana_lane_2_quad_b_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_2_quad_b_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_2_quad_b_ctrl15[0]=(((r).ana_lane_2_quad_b_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_2_quad_b_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_2_quad_b_ctrl15[0]=(((r).ana_lane_2_quad_b_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r,_r._ana_lane_2_quad_b_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r,_r._ana_lane_2_quad_b_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL15r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r
#define ANA_LANE_2_QUAD_B_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_t ANA_LANE_2_QUAD_B_CTRL15r_t;
#define ANA_LANE_2_QUAD_B_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_CLR
#define ANA_LANE_2_QUAD_B_CTRL15r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SET
#define ANA_LANE_2_QUAD_B_CTRL15r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_GET
#define ANA_LANE_2_QUAD_B_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_2_QUAD_B_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_2_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_2_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL15r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL15r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL15r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_CTRL16
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x9410
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r (0x00019410 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_ctrl16[1];
	uint32_t _ana_lane_2_quad_b_ctrl16;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_CLR(r) (r).ana_lane_2_quad_b_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_SET(r,d) (r).ana_lane_2_quad_b_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_GET(r) (r).ana_lane_2_quad_b_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_2_quad_b_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_2_quad_b_ctrl16[0]=(((r).ana_lane_2_quad_b_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_2_quad_b_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_2_quad_b_ctrl16[0]=(((r).ana_lane_2_quad_b_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r,_r._ana_lane_2_quad_b_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r,_r._ana_lane_2_quad_b_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_CTRL16r BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r
#define ANA_LANE_2_QUAD_B_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_t ANA_LANE_2_QUAD_B_CTRL16r_t;
#define ANA_LANE_2_QUAD_B_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_CLR
#define ANA_LANE_2_QUAD_B_CTRL16r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_SET
#define ANA_LANE_2_QUAD_B_CTRL16r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_GET
#define ANA_LANE_2_QUAD_B_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_2_QUAD_B_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_2_QUAD_B_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_2_QUAD_B_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_2_QUAD_B_CTRL16r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_CTRL16r
#define WRITE_ANA_LANE_2_QUAD_B_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_CTRL16r
#define MODIFY_ANA_LANE_2_QUAD_B_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_B_STATUS0
 * BLOCKS:   ANA_LANE_2_QUAD_B
 * REGADDR:  0x9420
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r (0x00019420 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_B_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_b_status0[1];
	uint32_t _ana_lane_2_quad_b_status0;
} BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_CLR(r) (r).ana_lane_2_quad_b_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_SET(r,d) (r).ana_lane_2_quad_b_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_GET(r) (r).ana_lane_2_quad_b_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_2_quad_b_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_2_quad_b_status0[0]=(((r).ana_lane_2_quad_b_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_2_quad_b_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_2_quad_b_status0[0]=(((r).ana_lane_2_quad_b_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_B_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r,_r._ana_lane_2_quad_b_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r,_r._ana_lane_2_quad_b_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_B_STATUS0r BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r
#define ANA_LANE_2_QUAD_B_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_t ANA_LANE_2_QUAD_B_STATUS0r_t;
#define ANA_LANE_2_QUAD_B_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_CLR
#define ANA_LANE_2_QUAD_B_STATUS0r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_SET
#define ANA_LANE_2_QUAD_B_STATUS0r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_GET
#define ANA_LANE_2_QUAD_B_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_2_QUAD_B_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_2_QUAD_B_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_2_QUAD_B_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_2_QUAD_B_STATUS0r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_B_STATUS0r
#define WRITE_ANA_LANE_2_QUAD_B_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_B_STATUS0r
#define MODIFY_ANA_LANE_2_QUAD_B_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_B_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_B_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL0
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x9800
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r (0x00019800 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl0[1];
	uint32_t _ana_lane_3_quad_b_ctrl0;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_CLR(r) (r).ana_lane_3_quad_b_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_SET(r,d) (r).ana_lane_3_quad_b_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_GET(r) (r).ana_lane_3_quad_b_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_3_quad_b_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_3_quad_b_ctrl0[0]=(((r).ana_lane_3_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_3_quad_b_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_3_quad_b_ctrl0[0]=(((r).ana_lane_3_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_3_quad_b_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_3_quad_b_ctrl0[0]=(((r).ana_lane_3_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_3_quad_b_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_3_quad_b_ctrl0[0]=(((r).ana_lane_3_quad_b_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_3_quad_b_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_3_quad_b_ctrl0[0]=(((r).ana_lane_3_quad_b_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r,_r._ana_lane_3_quad_b_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r,_r._ana_lane_3_quad_b_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL0r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r
#define ANA_LANE_3_QUAD_B_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_t ANA_LANE_3_QUAD_B_CTRL0r_t;
#define ANA_LANE_3_QUAD_B_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_CLR
#define ANA_LANE_3_QUAD_B_CTRL0r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_SET
#define ANA_LANE_3_QUAD_B_CTRL0r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_GET
#define ANA_LANE_3_QUAD_B_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_3_QUAD_B_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_3_QUAD_B_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_3_QUAD_B_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL0r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL0r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL0r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL1
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x9801
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r (0x00019801 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl1[1];
	uint32_t _ana_lane_3_quad_b_ctrl1;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_CLR(r) (r).ana_lane_3_quad_b_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_SET(r,d) (r).ana_lane_3_quad_b_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_GET(r) (r).ana_lane_3_quad_b_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_3_quad_b_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_3_quad_b_ctrl1[0]=(((r).ana_lane_3_quad_b_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_3_quad_b_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_3_quad_b_ctrl1[0]=(((r).ana_lane_3_quad_b_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_3_quad_b_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_3_quad_b_ctrl1[0]=(((r).ana_lane_3_quad_b_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_3_quad_b_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_3_quad_b_ctrl1[0]=(((r).ana_lane_3_quad_b_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_3_quad_b_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_3_quad_b_ctrl1[0]=(((r).ana_lane_3_quad_b_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r,_r._ana_lane_3_quad_b_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r,_r._ana_lane_3_quad_b_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL1r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r
#define ANA_LANE_3_QUAD_B_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_t ANA_LANE_3_QUAD_B_CTRL1r_t;
#define ANA_LANE_3_QUAD_B_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_CLR
#define ANA_LANE_3_QUAD_B_CTRL1r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_SET
#define ANA_LANE_3_QUAD_B_CTRL1r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_GET
#define ANA_LANE_3_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_3_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_3_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_3_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_3_QUAD_B_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_3_QUAD_B_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_3_QUAD_B_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_REF_OCLf_GET
#define ANA_LANE_3_QUAD_B_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_REF_OCLf_SET
#define ANA_LANE_3_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_3_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL1r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL1r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL1r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL2
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x9802
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r (0x00019802 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl2[1];
	uint32_t _ana_lane_3_quad_b_ctrl2;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_CLR(r) (r).ana_lane_3_quad_b_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_SET(r,d) (r).ana_lane_3_quad_b_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_GET(r) (r).ana_lane_3_quad_b_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_3_quad_b_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_3_quad_b_ctrl2[0]=(((r).ana_lane_3_quad_b_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_3_quad_b_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_3_quad_b_ctrl2[0]=(((r).ana_lane_3_quad_b_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r,_r._ana_lane_3_quad_b_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r,_r._ana_lane_3_quad_b_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL2r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r
#define ANA_LANE_3_QUAD_B_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_t ANA_LANE_3_QUAD_B_CTRL2r_t;
#define ANA_LANE_3_QUAD_B_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_CLR
#define ANA_LANE_3_QUAD_B_CTRL2r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_SET
#define ANA_LANE_3_QUAD_B_CTRL2r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_GET
#define ANA_LANE_3_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_3_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_3_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_3_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL2r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL2r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL2r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL3
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x9803
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r (0x00019803 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl3[1];
	uint32_t _ana_lane_3_quad_b_ctrl3;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_CLR(r) (r).ana_lane_3_quad_b_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_SET(r,d) (r).ana_lane_3_quad_b_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_GET(r) (r).ana_lane_3_quad_b_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_3_quad_b_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_3_quad_b_ctrl3[0]=(((r).ana_lane_3_quad_b_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_3_quad_b_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_3_quad_b_ctrl3[0]=(((r).ana_lane_3_quad_b_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r,_r._ana_lane_3_quad_b_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r,_r._ana_lane_3_quad_b_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL3r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r
#define ANA_LANE_3_QUAD_B_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_t ANA_LANE_3_QUAD_B_CTRL3r_t;
#define ANA_LANE_3_QUAD_B_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_CLR
#define ANA_LANE_3_QUAD_B_CTRL3r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_SET
#define ANA_LANE_3_QUAD_B_CTRL3r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_GET
#define ANA_LANE_3_QUAD_B_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_3_QUAD_B_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_3_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_3_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL3r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL3r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL3r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL4
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x9804
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r (0x00019804 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl4[1];
	uint32_t _ana_lane_3_quad_b_ctrl4;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_CLR(r) (r).ana_lane_3_quad_b_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_SET(r,d) (r).ana_lane_3_quad_b_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_GET(r) (r).ana_lane_3_quad_b_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_3_quad_b_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_3_quad_b_ctrl4[0]=(((r).ana_lane_3_quad_b_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_3_quad_b_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_3_quad_b_ctrl4[0]=(((r).ana_lane_3_quad_b_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r,_r._ana_lane_3_quad_b_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r,_r._ana_lane_3_quad_b_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL4r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r
#define ANA_LANE_3_QUAD_B_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_t ANA_LANE_3_QUAD_B_CTRL4r_t;
#define ANA_LANE_3_QUAD_B_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_CLR
#define ANA_LANE_3_QUAD_B_CTRL4r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_SET
#define ANA_LANE_3_QUAD_B_CTRL4r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_GET
#define ANA_LANE_3_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_3_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_3_QUAD_B_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_3_QUAD_B_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL4r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL4r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL4r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL5
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x9805
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r (0x00019805 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl5[1];
	uint32_t _ana_lane_3_quad_b_ctrl5;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_CLR(r) (r).ana_lane_3_quad_b_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_SET(r,d) (r).ana_lane_3_quad_b_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_GET(r) (r).ana_lane_3_quad_b_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_3_quad_b_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_3_quad_b_ctrl5[0]=(((r).ana_lane_3_quad_b_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_3_quad_b_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_3_quad_b_ctrl5[0]=(((r).ana_lane_3_quad_b_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_3_quad_b_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_3_quad_b_ctrl5[0]=(((r).ana_lane_3_quad_b_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r,_r._ana_lane_3_quad_b_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r,_r._ana_lane_3_quad_b_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL5r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r
#define ANA_LANE_3_QUAD_B_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_t ANA_LANE_3_QUAD_B_CTRL5r_t;
#define ANA_LANE_3_QUAD_B_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_CLR
#define ANA_LANE_3_QUAD_B_CTRL5r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_SET
#define ANA_LANE_3_QUAD_B_CTRL5r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_GET
#define ANA_LANE_3_QUAD_B_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_3_QUAD_B_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_3_QUAD_B_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_3_QUAD_B_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_3_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_3_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL5r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL5r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL5r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL6
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x9806
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r (0x00019806 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl6[1];
	uint32_t _ana_lane_3_quad_b_ctrl6;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_CLR(r) (r).ana_lane_3_quad_b_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_SET(r,d) (r).ana_lane_3_quad_b_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_GET(r) (r).ana_lane_3_quad_b_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_3_quad_b_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_3_quad_b_ctrl6[0]=(((r).ana_lane_3_quad_b_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_3_quad_b_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_3_quad_b_ctrl6[0]=(((r).ana_lane_3_quad_b_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r,_r._ana_lane_3_quad_b_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r,_r._ana_lane_3_quad_b_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL6r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r
#define ANA_LANE_3_QUAD_B_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_t ANA_LANE_3_QUAD_B_CTRL6r_t;
#define ANA_LANE_3_QUAD_B_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_CLR
#define ANA_LANE_3_QUAD_B_CTRL6r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_SET
#define ANA_LANE_3_QUAD_B_CTRL6r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_GET
#define ANA_LANE_3_QUAD_B_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_3_QUAD_B_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_3_QUAD_B_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_3_QUAD_B_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL6r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL6r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL6r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL7
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x9807
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r (0x00019807 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl7[1];
	uint32_t _ana_lane_3_quad_b_ctrl7;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_CLR(r) (r).ana_lane_3_quad_b_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_SET(r,d) (r).ana_lane_3_quad_b_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_GET(r) (r).ana_lane_3_quad_b_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_3_quad_b_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_3_quad_b_ctrl7[0]=(((r).ana_lane_3_quad_b_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_3_quad_b_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_3_quad_b_ctrl7[0]=(((r).ana_lane_3_quad_b_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r,_r._ana_lane_3_quad_b_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r,_r._ana_lane_3_quad_b_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL7r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r
#define ANA_LANE_3_QUAD_B_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_t ANA_LANE_3_QUAD_B_CTRL7r_t;
#define ANA_LANE_3_QUAD_B_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_CLR
#define ANA_LANE_3_QUAD_B_CTRL7r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_SET
#define ANA_LANE_3_QUAD_B_CTRL7r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_GET
#define ANA_LANE_3_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_3_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_3_QUAD_B_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_3_QUAD_B_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL7r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL7r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL7r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL8
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x9808
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r (0x00019808 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl8[1];
	uint32_t _ana_lane_3_quad_b_ctrl8;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_CLR(r) (r).ana_lane_3_quad_b_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_SET(r,d) (r).ana_lane_3_quad_b_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_GET(r) (r).ana_lane_3_quad_b_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_3_quad_b_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_3_quad_b_ctrl8[0]=(((r).ana_lane_3_quad_b_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_3_quad_b_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_3_quad_b_ctrl8[0]=(((r).ana_lane_3_quad_b_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_3_quad_b_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_3_quad_b_ctrl8[0]=(((r).ana_lane_3_quad_b_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r,_r._ana_lane_3_quad_b_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r,_r._ana_lane_3_quad_b_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL8r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r
#define ANA_LANE_3_QUAD_B_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_t ANA_LANE_3_QUAD_B_CTRL8r_t;
#define ANA_LANE_3_QUAD_B_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_CLR
#define ANA_LANE_3_QUAD_B_CTRL8r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_SET
#define ANA_LANE_3_QUAD_B_CTRL8r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_GET
#define ANA_LANE_3_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_3_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_3_QUAD_B_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_3_QUAD_B_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_3_QUAD_B_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_LA_PDf_GET
#define ANA_LANE_3_QUAD_B_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL8r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL8r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL8r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL9
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x9809
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r (0x00019809 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl9[1];
	uint32_t _ana_lane_3_quad_b_ctrl9;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_CLR(r) (r).ana_lane_3_quad_b_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_SET(r,d) (r).ana_lane_3_quad_b_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_GET(r) (r).ana_lane_3_quad_b_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_3_quad_b_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_3_quad_b_ctrl9[0]=(((r).ana_lane_3_quad_b_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_3_quad_b_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_3_quad_b_ctrl9[0]=(((r).ana_lane_3_quad_b_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_3_quad_b_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_3_quad_b_ctrl9[0]=(((r).ana_lane_3_quad_b_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_3_quad_b_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_3_quad_b_ctrl9[0]=(((r).ana_lane_3_quad_b_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r,_r._ana_lane_3_quad_b_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r,_r._ana_lane_3_quad_b_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL9r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r
#define ANA_LANE_3_QUAD_B_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_t ANA_LANE_3_QUAD_B_CTRL9r_t;
#define ANA_LANE_3_QUAD_B_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_CLR
#define ANA_LANE_3_QUAD_B_CTRL9r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_SET
#define ANA_LANE_3_QUAD_B_CTRL9r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_GET
#define ANA_LANE_3_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_3_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_3_QUAD_B_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_3_QUAD_B_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_3_QUAD_B_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_3_QUAD_B_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_3_QUAD_B_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_3_QUAD_B_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL9r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL9r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL9r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL10
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x980a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r (0x0001980a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl10[1];
	uint32_t _ana_lane_3_quad_b_ctrl10;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_CLR(r) (r).ana_lane_3_quad_b_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_SET(r,d) (r).ana_lane_3_quad_b_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_GET(r) (r).ana_lane_3_quad_b_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_3_quad_b_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_3_quad_b_ctrl10[0]=(((r).ana_lane_3_quad_b_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_3_quad_b_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_3_quad_b_ctrl10[0]=(((r).ana_lane_3_quad_b_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_3_quad_b_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_3_quad_b_ctrl10[0]=(((r).ana_lane_3_quad_b_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_3_quad_b_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_3_quad_b_ctrl10[0]=(((r).ana_lane_3_quad_b_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_3_quad_b_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_3_quad_b_ctrl10[0]=(((r).ana_lane_3_quad_b_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r,_r._ana_lane_3_quad_b_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r,_r._ana_lane_3_quad_b_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL10r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r
#define ANA_LANE_3_QUAD_B_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_t ANA_LANE_3_QUAD_B_CTRL10r_t;
#define ANA_LANE_3_QUAD_B_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_CLR
#define ANA_LANE_3_QUAD_B_CTRL10r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_SET
#define ANA_LANE_3_QUAD_B_CTRL10r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_GET
#define ANA_LANE_3_QUAD_B_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_3_QUAD_B_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_3_QUAD_B_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_3_QUAD_B_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_3_QUAD_B_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_3_QUAD_B_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_3_QUAD_B_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_3_QUAD_B_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_3_QUAD_B_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_3_QUAD_B_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL10r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL10r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL10r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL11
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x980b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r (0x0001980b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl11[1];
	uint32_t _ana_lane_3_quad_b_ctrl11;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_CLR(r) (r).ana_lane_3_quad_b_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_SET(r,d) (r).ana_lane_3_quad_b_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_GET(r) (r).ana_lane_3_quad_b_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_3_quad_b_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_3_quad_b_ctrl11[0]=(((r).ana_lane_3_quad_b_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r,_r._ana_lane_3_quad_b_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r,_r._ana_lane_3_quad_b_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL11r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r
#define ANA_LANE_3_QUAD_B_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_t ANA_LANE_3_QUAD_B_CTRL11r_t;
#define ANA_LANE_3_QUAD_B_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_CLR
#define ANA_LANE_3_QUAD_B_CTRL11r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_SET
#define ANA_LANE_3_QUAD_B_CTRL11r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_GET
#define ANA_LANE_3_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_3_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL11r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL11r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL11r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL12
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x980c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r (0x0001980c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl12[1];
	uint32_t _ana_lane_3_quad_b_ctrl12;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_CLR(r) (r).ana_lane_3_quad_b_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_SET(r,d) (r).ana_lane_3_quad_b_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_GET(r) (r).ana_lane_3_quad_b_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_3_quad_b_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_3_quad_b_ctrl12[0]=(((r).ana_lane_3_quad_b_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_3_quad_b_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_b_ctrl12[0]=(((r).ana_lane_3_quad_b_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_3_quad_b_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_3_quad_b_ctrl12[0]=(((r).ana_lane_3_quad_b_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_3_quad_b_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_b_ctrl12[0]=(((r).ana_lane_3_quad_b_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r,_r._ana_lane_3_quad_b_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r,_r._ana_lane_3_quad_b_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL12r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r
#define ANA_LANE_3_QUAD_B_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_t ANA_LANE_3_QUAD_B_CTRL12r_t;
#define ANA_LANE_3_QUAD_B_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_CLR
#define ANA_LANE_3_QUAD_B_CTRL12r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_SET
#define ANA_LANE_3_QUAD_B_CTRL12r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_GET
#define ANA_LANE_3_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_3_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_3_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_3_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_3_QUAD_B_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_3_QUAD_B_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_3_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_3_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL12r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL12r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL12r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL13
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x980d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r (0x0001980d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl13[1];
	uint32_t _ana_lane_3_quad_b_ctrl13;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_CLR(r) (r).ana_lane_3_quad_b_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_SET(r,d) (r).ana_lane_3_quad_b_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_GET(r) (r).ana_lane_3_quad_b_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_3_quad_b_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_3_quad_b_ctrl13[0]=(((r).ana_lane_3_quad_b_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_3_quad_b_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_b_ctrl13[0]=(((r).ana_lane_3_quad_b_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r,_r._ana_lane_3_quad_b_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r,_r._ana_lane_3_quad_b_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL13r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r
#define ANA_LANE_3_QUAD_B_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_t ANA_LANE_3_QUAD_B_CTRL13r_t;
#define ANA_LANE_3_QUAD_B_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_CLR
#define ANA_LANE_3_QUAD_B_CTRL13r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_SET
#define ANA_LANE_3_QUAD_B_CTRL13r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_GET
#define ANA_LANE_3_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_3_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_3_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_3_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL13r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL13r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL13r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL14
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x980e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r (0x0001980e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl14[1];
	uint32_t _ana_lane_3_quad_b_ctrl14;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_CLR(r) (r).ana_lane_3_quad_b_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_SET(r,d) (r).ana_lane_3_quad_b_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_GET(r) (r).ana_lane_3_quad_b_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_3_quad_b_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_3_quad_b_ctrl14[0]=(((r).ana_lane_3_quad_b_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_3_quad_b_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_3_quad_b_ctrl14[0]=(((r).ana_lane_3_quad_b_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_3_quad_b_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_b_ctrl14[0]=(((r).ana_lane_3_quad_b_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r,_r._ana_lane_3_quad_b_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r,_r._ana_lane_3_quad_b_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL14r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r
#define ANA_LANE_3_QUAD_B_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_t ANA_LANE_3_QUAD_B_CTRL14r_t;
#define ANA_LANE_3_QUAD_B_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_CLR
#define ANA_LANE_3_QUAD_B_CTRL14r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_SET
#define ANA_LANE_3_QUAD_B_CTRL14r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_GET
#define ANA_LANE_3_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_3_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_3_QUAD_B_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_3_QUAD_B_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_3_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_3_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL14r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL14r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL14r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL15
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x980f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r (0x0001980f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl15[1];
	uint32_t _ana_lane_3_quad_b_ctrl15;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_CLR(r) (r).ana_lane_3_quad_b_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SET(r,d) (r).ana_lane_3_quad_b_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_GET(r) (r).ana_lane_3_quad_b_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_3_quad_b_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_3_quad_b_ctrl15[0]=(((r).ana_lane_3_quad_b_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_3_quad_b_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_3_quad_b_ctrl15[0]=(((r).ana_lane_3_quad_b_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_3_quad_b_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_3_quad_b_ctrl15[0]=(((r).ana_lane_3_quad_b_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_3_quad_b_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_b_ctrl15[0]=(((r).ana_lane_3_quad_b_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_3_quad_b_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_3_quad_b_ctrl15[0]=(((r).ana_lane_3_quad_b_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_3_quad_b_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_3_quad_b_ctrl15[0]=(((r).ana_lane_3_quad_b_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r,_r._ana_lane_3_quad_b_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r,_r._ana_lane_3_quad_b_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL15r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r
#define ANA_LANE_3_QUAD_B_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_t ANA_LANE_3_QUAD_B_CTRL15r_t;
#define ANA_LANE_3_QUAD_B_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_CLR
#define ANA_LANE_3_QUAD_B_CTRL15r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SET
#define ANA_LANE_3_QUAD_B_CTRL15r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_GET
#define ANA_LANE_3_QUAD_B_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_3_QUAD_B_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_3_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_3_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL15r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL15r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL15r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_CTRL16
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x9810
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r (0x00019810 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_ctrl16[1];
	uint32_t _ana_lane_3_quad_b_ctrl16;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_CLR(r) (r).ana_lane_3_quad_b_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_SET(r,d) (r).ana_lane_3_quad_b_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_GET(r) (r).ana_lane_3_quad_b_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_3_quad_b_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_3_quad_b_ctrl16[0]=(((r).ana_lane_3_quad_b_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_3_quad_b_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_3_quad_b_ctrl16[0]=(((r).ana_lane_3_quad_b_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r,_r._ana_lane_3_quad_b_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r,_r._ana_lane_3_quad_b_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_CTRL16r BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r
#define ANA_LANE_3_QUAD_B_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_t ANA_LANE_3_QUAD_B_CTRL16r_t;
#define ANA_LANE_3_QUAD_B_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_CLR
#define ANA_LANE_3_QUAD_B_CTRL16r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_SET
#define ANA_LANE_3_QUAD_B_CTRL16r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_GET
#define ANA_LANE_3_QUAD_B_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_3_QUAD_B_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_3_QUAD_B_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_3_QUAD_B_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_3_QUAD_B_CTRL16r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_CTRL16r
#define WRITE_ANA_LANE_3_QUAD_B_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_CTRL16r
#define MODIFY_ANA_LANE_3_QUAD_B_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_B_STATUS0
 * BLOCKS:   ANA_LANE_3_QUAD_B
 * REGADDR:  0x9820
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r (0x00019820 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_B_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_b_status0[1];
	uint32_t _ana_lane_3_quad_b_status0;
} BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_CLR(r) (r).ana_lane_3_quad_b_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_SET(r,d) (r).ana_lane_3_quad_b_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_GET(r) (r).ana_lane_3_quad_b_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_3_quad_b_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_3_quad_b_status0[0]=(((r).ana_lane_3_quad_b_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_3_quad_b_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_3_quad_b_status0[0]=(((r).ana_lane_3_quad_b_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_B_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r,_r._ana_lane_3_quad_b_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r,_r._ana_lane_3_quad_b_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_B_STATUS0r BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r
#define ANA_LANE_3_QUAD_B_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_t ANA_LANE_3_QUAD_B_STATUS0r_t;
#define ANA_LANE_3_QUAD_B_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_CLR
#define ANA_LANE_3_QUAD_B_STATUS0r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_SET
#define ANA_LANE_3_QUAD_B_STATUS0r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_GET
#define ANA_LANE_3_QUAD_B_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_3_QUAD_B_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_3_QUAD_B_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_3_QUAD_B_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_3_QUAD_B_STATUS0r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_B_STATUS0r
#define WRITE_ANA_LANE_3_QUAD_B_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_B_STATUS0r
#define MODIFY_ANA_LANE_3_QUAD_B_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_B_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_B_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL0
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa100
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r (0x0001a100 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl0[1];
	uint32_t _ana_lane_0_quad_c_ctrl0;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_CLR(r) (r).ana_lane_0_quad_c_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_SET(r,d) (r).ana_lane_0_quad_c_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_GET(r) (r).ana_lane_0_quad_c_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_0_quad_c_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_0_quad_c_ctrl0[0]=(((r).ana_lane_0_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_0_quad_c_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_0_quad_c_ctrl0[0]=(((r).ana_lane_0_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_0_quad_c_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_0_quad_c_ctrl0[0]=(((r).ana_lane_0_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_0_quad_c_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_0_quad_c_ctrl0[0]=(((r).ana_lane_0_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_0_quad_c_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_0_quad_c_ctrl0[0]=(((r).ana_lane_0_quad_c_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r,_r._ana_lane_0_quad_c_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r,_r._ana_lane_0_quad_c_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL0r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r
#define ANA_LANE_0_QUAD_C_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_t ANA_LANE_0_QUAD_C_CTRL0r_t;
#define ANA_LANE_0_QUAD_C_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_CLR
#define ANA_LANE_0_QUAD_C_CTRL0r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_SET
#define ANA_LANE_0_QUAD_C_CTRL0r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_GET
#define ANA_LANE_0_QUAD_C_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_0_QUAD_C_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_0_QUAD_C_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_0_QUAD_C_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL0r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL0r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL0r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL1
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa101
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r (0x0001a101 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl1[1];
	uint32_t _ana_lane_0_quad_c_ctrl1;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_CLR(r) (r).ana_lane_0_quad_c_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_SET(r,d) (r).ana_lane_0_quad_c_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_GET(r) (r).ana_lane_0_quad_c_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_0_quad_c_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_0_quad_c_ctrl1[0]=(((r).ana_lane_0_quad_c_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_0_quad_c_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_0_quad_c_ctrl1[0]=(((r).ana_lane_0_quad_c_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_0_quad_c_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_0_quad_c_ctrl1[0]=(((r).ana_lane_0_quad_c_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_0_quad_c_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_0_quad_c_ctrl1[0]=(((r).ana_lane_0_quad_c_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_0_quad_c_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_0_quad_c_ctrl1[0]=(((r).ana_lane_0_quad_c_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r,_r._ana_lane_0_quad_c_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r,_r._ana_lane_0_quad_c_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL1r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r
#define ANA_LANE_0_QUAD_C_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_t ANA_LANE_0_QUAD_C_CTRL1r_t;
#define ANA_LANE_0_QUAD_C_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_CLR
#define ANA_LANE_0_QUAD_C_CTRL1r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_SET
#define ANA_LANE_0_QUAD_C_CTRL1r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_GET
#define ANA_LANE_0_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_0_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_0_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_0_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_0_QUAD_C_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_0_QUAD_C_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_0_QUAD_C_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_REF_OCLf_GET
#define ANA_LANE_0_QUAD_C_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_REF_OCLf_SET
#define ANA_LANE_0_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_0_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL1r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL1r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL1r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL2
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa102
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r (0x0001a102 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl2[1];
	uint32_t _ana_lane_0_quad_c_ctrl2;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_CLR(r) (r).ana_lane_0_quad_c_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_SET(r,d) (r).ana_lane_0_quad_c_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_GET(r) (r).ana_lane_0_quad_c_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_0_quad_c_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_0_quad_c_ctrl2[0]=(((r).ana_lane_0_quad_c_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_0_quad_c_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_0_quad_c_ctrl2[0]=(((r).ana_lane_0_quad_c_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r,_r._ana_lane_0_quad_c_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r,_r._ana_lane_0_quad_c_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL2r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r
#define ANA_LANE_0_QUAD_C_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_t ANA_LANE_0_QUAD_C_CTRL2r_t;
#define ANA_LANE_0_QUAD_C_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_CLR
#define ANA_LANE_0_QUAD_C_CTRL2r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_SET
#define ANA_LANE_0_QUAD_C_CTRL2r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_GET
#define ANA_LANE_0_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_0_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_0_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_0_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL2r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL2r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL2r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL3
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa103
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r (0x0001a103 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl3[1];
	uint32_t _ana_lane_0_quad_c_ctrl3;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_CLR(r) (r).ana_lane_0_quad_c_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_SET(r,d) (r).ana_lane_0_quad_c_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_GET(r) (r).ana_lane_0_quad_c_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_0_quad_c_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_0_quad_c_ctrl3[0]=(((r).ana_lane_0_quad_c_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_0_quad_c_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_0_quad_c_ctrl3[0]=(((r).ana_lane_0_quad_c_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r,_r._ana_lane_0_quad_c_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r,_r._ana_lane_0_quad_c_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL3r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r
#define ANA_LANE_0_QUAD_C_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_t ANA_LANE_0_QUAD_C_CTRL3r_t;
#define ANA_LANE_0_QUAD_C_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_CLR
#define ANA_LANE_0_QUAD_C_CTRL3r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_SET
#define ANA_LANE_0_QUAD_C_CTRL3r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_GET
#define ANA_LANE_0_QUAD_C_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_0_QUAD_C_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_0_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_0_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL3r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL3r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL3r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL4
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa104
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r (0x0001a104 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl4[1];
	uint32_t _ana_lane_0_quad_c_ctrl4;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_CLR(r) (r).ana_lane_0_quad_c_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_SET(r,d) (r).ana_lane_0_quad_c_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_GET(r) (r).ana_lane_0_quad_c_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_0_quad_c_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_0_quad_c_ctrl4[0]=(((r).ana_lane_0_quad_c_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_0_quad_c_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_0_quad_c_ctrl4[0]=(((r).ana_lane_0_quad_c_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r,_r._ana_lane_0_quad_c_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r,_r._ana_lane_0_quad_c_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL4r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r
#define ANA_LANE_0_QUAD_C_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_t ANA_LANE_0_QUAD_C_CTRL4r_t;
#define ANA_LANE_0_QUAD_C_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_CLR
#define ANA_LANE_0_QUAD_C_CTRL4r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_SET
#define ANA_LANE_0_QUAD_C_CTRL4r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_GET
#define ANA_LANE_0_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_0_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_0_QUAD_C_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_0_QUAD_C_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL4r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL4r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL4r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL5
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa105
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r (0x0001a105 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl5[1];
	uint32_t _ana_lane_0_quad_c_ctrl5;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_CLR(r) (r).ana_lane_0_quad_c_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_SET(r,d) (r).ana_lane_0_quad_c_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_GET(r) (r).ana_lane_0_quad_c_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_0_quad_c_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_0_quad_c_ctrl5[0]=(((r).ana_lane_0_quad_c_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_0_quad_c_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_0_quad_c_ctrl5[0]=(((r).ana_lane_0_quad_c_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_0_quad_c_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_0_quad_c_ctrl5[0]=(((r).ana_lane_0_quad_c_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r,_r._ana_lane_0_quad_c_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r,_r._ana_lane_0_quad_c_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL5r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r
#define ANA_LANE_0_QUAD_C_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_t ANA_LANE_0_QUAD_C_CTRL5r_t;
#define ANA_LANE_0_QUAD_C_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_CLR
#define ANA_LANE_0_QUAD_C_CTRL5r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_SET
#define ANA_LANE_0_QUAD_C_CTRL5r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_GET
#define ANA_LANE_0_QUAD_C_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_0_QUAD_C_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_0_QUAD_C_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_0_QUAD_C_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_0_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_0_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL5r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL5r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL5r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL6
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa106
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r (0x0001a106 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl6[1];
	uint32_t _ana_lane_0_quad_c_ctrl6;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_CLR(r) (r).ana_lane_0_quad_c_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_SET(r,d) (r).ana_lane_0_quad_c_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_GET(r) (r).ana_lane_0_quad_c_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_0_quad_c_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_0_quad_c_ctrl6[0]=(((r).ana_lane_0_quad_c_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_0_quad_c_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_0_quad_c_ctrl6[0]=(((r).ana_lane_0_quad_c_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r,_r._ana_lane_0_quad_c_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r,_r._ana_lane_0_quad_c_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL6r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r
#define ANA_LANE_0_QUAD_C_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_t ANA_LANE_0_QUAD_C_CTRL6r_t;
#define ANA_LANE_0_QUAD_C_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_CLR
#define ANA_LANE_0_QUAD_C_CTRL6r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_SET
#define ANA_LANE_0_QUAD_C_CTRL6r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_GET
#define ANA_LANE_0_QUAD_C_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_0_QUAD_C_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_0_QUAD_C_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_0_QUAD_C_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL6r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL6r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL6r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL7
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa107
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r (0x0001a107 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl7[1];
	uint32_t _ana_lane_0_quad_c_ctrl7;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_CLR(r) (r).ana_lane_0_quad_c_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_SET(r,d) (r).ana_lane_0_quad_c_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_GET(r) (r).ana_lane_0_quad_c_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_0_quad_c_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_0_quad_c_ctrl7[0]=(((r).ana_lane_0_quad_c_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_0_quad_c_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_0_quad_c_ctrl7[0]=(((r).ana_lane_0_quad_c_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r,_r._ana_lane_0_quad_c_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r,_r._ana_lane_0_quad_c_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL7r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r
#define ANA_LANE_0_QUAD_C_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_t ANA_LANE_0_QUAD_C_CTRL7r_t;
#define ANA_LANE_0_QUAD_C_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_CLR
#define ANA_LANE_0_QUAD_C_CTRL7r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_SET
#define ANA_LANE_0_QUAD_C_CTRL7r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_GET
#define ANA_LANE_0_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_0_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_0_QUAD_C_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_0_QUAD_C_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL7r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL7r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL7r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL8
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa108
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r (0x0001a108 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl8[1];
	uint32_t _ana_lane_0_quad_c_ctrl8;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_CLR(r) (r).ana_lane_0_quad_c_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_SET(r,d) (r).ana_lane_0_quad_c_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_GET(r) (r).ana_lane_0_quad_c_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_0_quad_c_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_0_quad_c_ctrl8[0]=(((r).ana_lane_0_quad_c_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_0_quad_c_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_0_quad_c_ctrl8[0]=(((r).ana_lane_0_quad_c_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_0_quad_c_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_0_quad_c_ctrl8[0]=(((r).ana_lane_0_quad_c_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r,_r._ana_lane_0_quad_c_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r,_r._ana_lane_0_quad_c_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL8r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r
#define ANA_LANE_0_QUAD_C_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_t ANA_LANE_0_QUAD_C_CTRL8r_t;
#define ANA_LANE_0_QUAD_C_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_CLR
#define ANA_LANE_0_QUAD_C_CTRL8r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_SET
#define ANA_LANE_0_QUAD_C_CTRL8r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_GET
#define ANA_LANE_0_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_0_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_0_QUAD_C_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_0_QUAD_C_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_0_QUAD_C_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_LA_PDf_GET
#define ANA_LANE_0_QUAD_C_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL8r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL8r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL8r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL9
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa109
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r (0x0001a109 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl9[1];
	uint32_t _ana_lane_0_quad_c_ctrl9;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_CLR(r) (r).ana_lane_0_quad_c_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_SET(r,d) (r).ana_lane_0_quad_c_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_GET(r) (r).ana_lane_0_quad_c_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_0_quad_c_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_0_quad_c_ctrl9[0]=(((r).ana_lane_0_quad_c_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_0_quad_c_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_0_quad_c_ctrl9[0]=(((r).ana_lane_0_quad_c_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_0_quad_c_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_0_quad_c_ctrl9[0]=(((r).ana_lane_0_quad_c_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_0_quad_c_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_0_quad_c_ctrl9[0]=(((r).ana_lane_0_quad_c_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r,_r._ana_lane_0_quad_c_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r,_r._ana_lane_0_quad_c_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL9r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r
#define ANA_LANE_0_QUAD_C_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_t ANA_LANE_0_QUAD_C_CTRL9r_t;
#define ANA_LANE_0_QUAD_C_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_CLR
#define ANA_LANE_0_QUAD_C_CTRL9r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_SET
#define ANA_LANE_0_QUAD_C_CTRL9r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_GET
#define ANA_LANE_0_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_0_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_0_QUAD_C_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_0_QUAD_C_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_0_QUAD_C_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_0_QUAD_C_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_0_QUAD_C_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_0_QUAD_C_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL9r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL9r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL9r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL10
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa10a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r (0x0001a10a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl10[1];
	uint32_t _ana_lane_0_quad_c_ctrl10;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_CLR(r) (r).ana_lane_0_quad_c_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_SET(r,d) (r).ana_lane_0_quad_c_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_GET(r) (r).ana_lane_0_quad_c_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_0_quad_c_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_0_quad_c_ctrl10[0]=(((r).ana_lane_0_quad_c_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_0_quad_c_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_0_quad_c_ctrl10[0]=(((r).ana_lane_0_quad_c_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_0_quad_c_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_0_quad_c_ctrl10[0]=(((r).ana_lane_0_quad_c_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_0_quad_c_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_0_quad_c_ctrl10[0]=(((r).ana_lane_0_quad_c_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_0_quad_c_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_0_quad_c_ctrl10[0]=(((r).ana_lane_0_quad_c_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r,_r._ana_lane_0_quad_c_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r,_r._ana_lane_0_quad_c_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL10r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r
#define ANA_LANE_0_QUAD_C_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_t ANA_LANE_0_QUAD_C_CTRL10r_t;
#define ANA_LANE_0_QUAD_C_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_CLR
#define ANA_LANE_0_QUAD_C_CTRL10r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_SET
#define ANA_LANE_0_QUAD_C_CTRL10r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_GET
#define ANA_LANE_0_QUAD_C_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_0_QUAD_C_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_0_QUAD_C_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_0_QUAD_C_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_0_QUAD_C_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_0_QUAD_C_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_0_QUAD_C_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_0_QUAD_C_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_0_QUAD_C_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_0_QUAD_C_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL10r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL10r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL10r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL11
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa10b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r (0x0001a10b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl11[1];
	uint32_t _ana_lane_0_quad_c_ctrl11;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_CLR(r) (r).ana_lane_0_quad_c_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_SET(r,d) (r).ana_lane_0_quad_c_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_GET(r) (r).ana_lane_0_quad_c_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_0_quad_c_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_0_quad_c_ctrl11[0]=(((r).ana_lane_0_quad_c_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r,_r._ana_lane_0_quad_c_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r,_r._ana_lane_0_quad_c_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL11r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r
#define ANA_LANE_0_QUAD_C_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_t ANA_LANE_0_QUAD_C_CTRL11r_t;
#define ANA_LANE_0_QUAD_C_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_CLR
#define ANA_LANE_0_QUAD_C_CTRL11r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_SET
#define ANA_LANE_0_QUAD_C_CTRL11r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_GET
#define ANA_LANE_0_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_0_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL11r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL11r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL11r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL12
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa10c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r (0x0001a10c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl12[1];
	uint32_t _ana_lane_0_quad_c_ctrl12;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_CLR(r) (r).ana_lane_0_quad_c_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_SET(r,d) (r).ana_lane_0_quad_c_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_GET(r) (r).ana_lane_0_quad_c_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_0_quad_c_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_0_quad_c_ctrl12[0]=(((r).ana_lane_0_quad_c_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_0_quad_c_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_c_ctrl12[0]=(((r).ana_lane_0_quad_c_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_0_quad_c_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_0_quad_c_ctrl12[0]=(((r).ana_lane_0_quad_c_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_0_quad_c_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_c_ctrl12[0]=(((r).ana_lane_0_quad_c_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r,_r._ana_lane_0_quad_c_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r,_r._ana_lane_0_quad_c_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL12r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r
#define ANA_LANE_0_QUAD_C_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_t ANA_LANE_0_QUAD_C_CTRL12r_t;
#define ANA_LANE_0_QUAD_C_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_CLR
#define ANA_LANE_0_QUAD_C_CTRL12r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_SET
#define ANA_LANE_0_QUAD_C_CTRL12r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_GET
#define ANA_LANE_0_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_0_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_0_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_0_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_0_QUAD_C_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_0_QUAD_C_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_0_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_0_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL12r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL12r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL12r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL13
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa10d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r (0x0001a10d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl13[1];
	uint32_t _ana_lane_0_quad_c_ctrl13;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_CLR(r) (r).ana_lane_0_quad_c_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_SET(r,d) (r).ana_lane_0_quad_c_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_GET(r) (r).ana_lane_0_quad_c_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_0_quad_c_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_0_quad_c_ctrl13[0]=(((r).ana_lane_0_quad_c_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_0_quad_c_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_c_ctrl13[0]=(((r).ana_lane_0_quad_c_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r,_r._ana_lane_0_quad_c_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r,_r._ana_lane_0_quad_c_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL13r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r
#define ANA_LANE_0_QUAD_C_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_t ANA_LANE_0_QUAD_C_CTRL13r_t;
#define ANA_LANE_0_QUAD_C_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_CLR
#define ANA_LANE_0_QUAD_C_CTRL13r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_SET
#define ANA_LANE_0_QUAD_C_CTRL13r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_GET
#define ANA_LANE_0_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_0_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_0_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_0_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL13r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL13r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL13r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL14
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa10e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r (0x0001a10e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl14[1];
	uint32_t _ana_lane_0_quad_c_ctrl14;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_CLR(r) (r).ana_lane_0_quad_c_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_SET(r,d) (r).ana_lane_0_quad_c_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_GET(r) (r).ana_lane_0_quad_c_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_0_quad_c_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_0_quad_c_ctrl14[0]=(((r).ana_lane_0_quad_c_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_0_quad_c_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_0_quad_c_ctrl14[0]=(((r).ana_lane_0_quad_c_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_0_quad_c_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_c_ctrl14[0]=(((r).ana_lane_0_quad_c_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r,_r._ana_lane_0_quad_c_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r,_r._ana_lane_0_quad_c_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL14r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r
#define ANA_LANE_0_QUAD_C_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_t ANA_LANE_0_QUAD_C_CTRL14r_t;
#define ANA_LANE_0_QUAD_C_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_CLR
#define ANA_LANE_0_QUAD_C_CTRL14r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_SET
#define ANA_LANE_0_QUAD_C_CTRL14r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_GET
#define ANA_LANE_0_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_0_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_0_QUAD_C_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_0_QUAD_C_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_0_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_0_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL14r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL14r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL14r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL15
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa10f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r (0x0001a10f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl15[1];
	uint32_t _ana_lane_0_quad_c_ctrl15;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_CLR(r) (r).ana_lane_0_quad_c_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SET(r,d) (r).ana_lane_0_quad_c_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_GET(r) (r).ana_lane_0_quad_c_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_0_quad_c_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_0_quad_c_ctrl15[0]=(((r).ana_lane_0_quad_c_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_0_quad_c_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_0_quad_c_ctrl15[0]=(((r).ana_lane_0_quad_c_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_0_quad_c_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_0_quad_c_ctrl15[0]=(((r).ana_lane_0_quad_c_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_0_quad_c_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_c_ctrl15[0]=(((r).ana_lane_0_quad_c_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_0_quad_c_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_0_quad_c_ctrl15[0]=(((r).ana_lane_0_quad_c_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_0_quad_c_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_0_quad_c_ctrl15[0]=(((r).ana_lane_0_quad_c_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r,_r._ana_lane_0_quad_c_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r,_r._ana_lane_0_quad_c_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL15r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r
#define ANA_LANE_0_QUAD_C_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_t ANA_LANE_0_QUAD_C_CTRL15r_t;
#define ANA_LANE_0_QUAD_C_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_CLR
#define ANA_LANE_0_QUAD_C_CTRL15r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SET
#define ANA_LANE_0_QUAD_C_CTRL15r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_GET
#define ANA_LANE_0_QUAD_C_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_0_QUAD_C_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_0_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_0_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL15r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL15r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL15r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_CTRL16
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa110
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r (0x0001a110 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_ctrl16[1];
	uint32_t _ana_lane_0_quad_c_ctrl16;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_CLR(r) (r).ana_lane_0_quad_c_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_SET(r,d) (r).ana_lane_0_quad_c_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_GET(r) (r).ana_lane_0_quad_c_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_0_quad_c_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_0_quad_c_ctrl16[0]=(((r).ana_lane_0_quad_c_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_0_quad_c_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_0_quad_c_ctrl16[0]=(((r).ana_lane_0_quad_c_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r,_r._ana_lane_0_quad_c_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r,_r._ana_lane_0_quad_c_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_CTRL16r BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r
#define ANA_LANE_0_QUAD_C_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_t ANA_LANE_0_QUAD_C_CTRL16r_t;
#define ANA_LANE_0_QUAD_C_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_CLR
#define ANA_LANE_0_QUAD_C_CTRL16r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_SET
#define ANA_LANE_0_QUAD_C_CTRL16r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_GET
#define ANA_LANE_0_QUAD_C_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_0_QUAD_C_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_0_QUAD_C_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_0_QUAD_C_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_0_QUAD_C_CTRL16r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_CTRL16r
#define WRITE_ANA_LANE_0_QUAD_C_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_CTRL16r
#define MODIFY_ANA_LANE_0_QUAD_C_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_C_STATUS0
 * BLOCKS:   ANA_LANE_0_QUAD_C
 * REGADDR:  0xa120
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r (0x0001a120 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_C_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_c_status0[1];
	uint32_t _ana_lane_0_quad_c_status0;
} BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_CLR(r) (r).ana_lane_0_quad_c_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_SET(r,d) (r).ana_lane_0_quad_c_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_GET(r) (r).ana_lane_0_quad_c_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_0_quad_c_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_0_quad_c_status0[0]=(((r).ana_lane_0_quad_c_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_0_quad_c_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_0_quad_c_status0[0]=(((r).ana_lane_0_quad_c_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_C_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r,_r._ana_lane_0_quad_c_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r,_r._ana_lane_0_quad_c_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_C_STATUS0r BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r
#define ANA_LANE_0_QUAD_C_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_t ANA_LANE_0_QUAD_C_STATUS0r_t;
#define ANA_LANE_0_QUAD_C_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_CLR
#define ANA_LANE_0_QUAD_C_STATUS0r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_SET
#define ANA_LANE_0_QUAD_C_STATUS0r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_GET
#define ANA_LANE_0_QUAD_C_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_0_QUAD_C_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_0_QUAD_C_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_0_QUAD_C_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_0_QUAD_C_STATUS0r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_C_STATUS0r
#define WRITE_ANA_LANE_0_QUAD_C_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_C_STATUS0r
#define MODIFY_ANA_LANE_0_QUAD_C_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_C_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_C_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL0
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa200
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r (0x0001a200 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl0[1];
	uint32_t _ana_lane_1_quad_c_ctrl0;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_CLR(r) (r).ana_lane_1_quad_c_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_SET(r,d) (r).ana_lane_1_quad_c_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_GET(r) (r).ana_lane_1_quad_c_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_1_quad_c_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_1_quad_c_ctrl0[0]=(((r).ana_lane_1_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_1_quad_c_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_1_quad_c_ctrl0[0]=(((r).ana_lane_1_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_1_quad_c_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_1_quad_c_ctrl0[0]=(((r).ana_lane_1_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_1_quad_c_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_1_quad_c_ctrl0[0]=(((r).ana_lane_1_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_1_quad_c_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_1_quad_c_ctrl0[0]=(((r).ana_lane_1_quad_c_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r,_r._ana_lane_1_quad_c_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r,_r._ana_lane_1_quad_c_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL0r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r
#define ANA_LANE_1_QUAD_C_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_t ANA_LANE_1_QUAD_C_CTRL0r_t;
#define ANA_LANE_1_QUAD_C_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_CLR
#define ANA_LANE_1_QUAD_C_CTRL0r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_SET
#define ANA_LANE_1_QUAD_C_CTRL0r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_GET
#define ANA_LANE_1_QUAD_C_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_1_QUAD_C_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_1_QUAD_C_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_1_QUAD_C_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL0r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL0r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL0r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL1
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa201
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r (0x0001a201 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl1[1];
	uint32_t _ana_lane_1_quad_c_ctrl1;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_CLR(r) (r).ana_lane_1_quad_c_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_SET(r,d) (r).ana_lane_1_quad_c_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_GET(r) (r).ana_lane_1_quad_c_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_1_quad_c_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_1_quad_c_ctrl1[0]=(((r).ana_lane_1_quad_c_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_1_quad_c_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_1_quad_c_ctrl1[0]=(((r).ana_lane_1_quad_c_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_1_quad_c_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_1_quad_c_ctrl1[0]=(((r).ana_lane_1_quad_c_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_1_quad_c_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_1_quad_c_ctrl1[0]=(((r).ana_lane_1_quad_c_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_1_quad_c_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_1_quad_c_ctrl1[0]=(((r).ana_lane_1_quad_c_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r,_r._ana_lane_1_quad_c_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r,_r._ana_lane_1_quad_c_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL1r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r
#define ANA_LANE_1_QUAD_C_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_t ANA_LANE_1_QUAD_C_CTRL1r_t;
#define ANA_LANE_1_QUAD_C_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_CLR
#define ANA_LANE_1_QUAD_C_CTRL1r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_SET
#define ANA_LANE_1_QUAD_C_CTRL1r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_GET
#define ANA_LANE_1_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_1_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_1_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_1_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_1_QUAD_C_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_1_QUAD_C_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_1_QUAD_C_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_REF_OCLf_GET
#define ANA_LANE_1_QUAD_C_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_REF_OCLf_SET
#define ANA_LANE_1_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_1_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL1r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL1r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL1r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL2
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa202
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r (0x0001a202 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl2[1];
	uint32_t _ana_lane_1_quad_c_ctrl2;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_CLR(r) (r).ana_lane_1_quad_c_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_SET(r,d) (r).ana_lane_1_quad_c_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_GET(r) (r).ana_lane_1_quad_c_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_1_quad_c_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_1_quad_c_ctrl2[0]=(((r).ana_lane_1_quad_c_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_1_quad_c_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_1_quad_c_ctrl2[0]=(((r).ana_lane_1_quad_c_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r,_r._ana_lane_1_quad_c_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r,_r._ana_lane_1_quad_c_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL2r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r
#define ANA_LANE_1_QUAD_C_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_t ANA_LANE_1_QUAD_C_CTRL2r_t;
#define ANA_LANE_1_QUAD_C_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_CLR
#define ANA_LANE_1_QUAD_C_CTRL2r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_SET
#define ANA_LANE_1_QUAD_C_CTRL2r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_GET
#define ANA_LANE_1_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_1_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_1_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_1_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL2r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL2r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL2r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL3
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa203
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r (0x0001a203 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl3[1];
	uint32_t _ana_lane_1_quad_c_ctrl3;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_CLR(r) (r).ana_lane_1_quad_c_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_SET(r,d) (r).ana_lane_1_quad_c_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_GET(r) (r).ana_lane_1_quad_c_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_1_quad_c_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_1_quad_c_ctrl3[0]=(((r).ana_lane_1_quad_c_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_1_quad_c_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_1_quad_c_ctrl3[0]=(((r).ana_lane_1_quad_c_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r,_r._ana_lane_1_quad_c_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r,_r._ana_lane_1_quad_c_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL3r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r
#define ANA_LANE_1_QUAD_C_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_t ANA_LANE_1_QUAD_C_CTRL3r_t;
#define ANA_LANE_1_QUAD_C_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_CLR
#define ANA_LANE_1_QUAD_C_CTRL3r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_SET
#define ANA_LANE_1_QUAD_C_CTRL3r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_GET
#define ANA_LANE_1_QUAD_C_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_1_QUAD_C_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_1_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_1_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL3r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL3r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL3r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL4
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa204
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r (0x0001a204 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl4[1];
	uint32_t _ana_lane_1_quad_c_ctrl4;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_CLR(r) (r).ana_lane_1_quad_c_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_SET(r,d) (r).ana_lane_1_quad_c_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_GET(r) (r).ana_lane_1_quad_c_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_1_quad_c_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_1_quad_c_ctrl4[0]=(((r).ana_lane_1_quad_c_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_1_quad_c_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_1_quad_c_ctrl4[0]=(((r).ana_lane_1_quad_c_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r,_r._ana_lane_1_quad_c_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r,_r._ana_lane_1_quad_c_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL4r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r
#define ANA_LANE_1_QUAD_C_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_t ANA_LANE_1_QUAD_C_CTRL4r_t;
#define ANA_LANE_1_QUAD_C_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_CLR
#define ANA_LANE_1_QUAD_C_CTRL4r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_SET
#define ANA_LANE_1_QUAD_C_CTRL4r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_GET
#define ANA_LANE_1_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_1_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_1_QUAD_C_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_1_QUAD_C_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL4r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL4r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL4r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL5
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa205
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r (0x0001a205 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl5[1];
	uint32_t _ana_lane_1_quad_c_ctrl5;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_CLR(r) (r).ana_lane_1_quad_c_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_SET(r,d) (r).ana_lane_1_quad_c_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_GET(r) (r).ana_lane_1_quad_c_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_1_quad_c_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_1_quad_c_ctrl5[0]=(((r).ana_lane_1_quad_c_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_1_quad_c_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_1_quad_c_ctrl5[0]=(((r).ana_lane_1_quad_c_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_1_quad_c_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_1_quad_c_ctrl5[0]=(((r).ana_lane_1_quad_c_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r,_r._ana_lane_1_quad_c_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r,_r._ana_lane_1_quad_c_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL5r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r
#define ANA_LANE_1_QUAD_C_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_t ANA_LANE_1_QUAD_C_CTRL5r_t;
#define ANA_LANE_1_QUAD_C_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_CLR
#define ANA_LANE_1_QUAD_C_CTRL5r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_SET
#define ANA_LANE_1_QUAD_C_CTRL5r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_GET
#define ANA_LANE_1_QUAD_C_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_1_QUAD_C_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_1_QUAD_C_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_1_QUAD_C_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_1_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_1_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL5r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL5r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL5r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL6
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa206
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r (0x0001a206 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl6[1];
	uint32_t _ana_lane_1_quad_c_ctrl6;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_CLR(r) (r).ana_lane_1_quad_c_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_SET(r,d) (r).ana_lane_1_quad_c_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_GET(r) (r).ana_lane_1_quad_c_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_1_quad_c_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_1_quad_c_ctrl6[0]=(((r).ana_lane_1_quad_c_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_1_quad_c_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_1_quad_c_ctrl6[0]=(((r).ana_lane_1_quad_c_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r,_r._ana_lane_1_quad_c_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r,_r._ana_lane_1_quad_c_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL6r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r
#define ANA_LANE_1_QUAD_C_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_t ANA_LANE_1_QUAD_C_CTRL6r_t;
#define ANA_LANE_1_QUAD_C_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_CLR
#define ANA_LANE_1_QUAD_C_CTRL6r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_SET
#define ANA_LANE_1_QUAD_C_CTRL6r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_GET
#define ANA_LANE_1_QUAD_C_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_1_QUAD_C_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_1_QUAD_C_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_1_QUAD_C_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL6r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL6r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL6r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL7
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa207
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r (0x0001a207 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl7[1];
	uint32_t _ana_lane_1_quad_c_ctrl7;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_CLR(r) (r).ana_lane_1_quad_c_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_SET(r,d) (r).ana_lane_1_quad_c_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_GET(r) (r).ana_lane_1_quad_c_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_1_quad_c_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_1_quad_c_ctrl7[0]=(((r).ana_lane_1_quad_c_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_1_quad_c_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_1_quad_c_ctrl7[0]=(((r).ana_lane_1_quad_c_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r,_r._ana_lane_1_quad_c_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r,_r._ana_lane_1_quad_c_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL7r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r
#define ANA_LANE_1_QUAD_C_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_t ANA_LANE_1_QUAD_C_CTRL7r_t;
#define ANA_LANE_1_QUAD_C_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_CLR
#define ANA_LANE_1_QUAD_C_CTRL7r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_SET
#define ANA_LANE_1_QUAD_C_CTRL7r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_GET
#define ANA_LANE_1_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_1_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_1_QUAD_C_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_1_QUAD_C_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL7r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL7r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL7r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL8
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa208
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r (0x0001a208 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl8[1];
	uint32_t _ana_lane_1_quad_c_ctrl8;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_CLR(r) (r).ana_lane_1_quad_c_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_SET(r,d) (r).ana_lane_1_quad_c_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_GET(r) (r).ana_lane_1_quad_c_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_1_quad_c_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_1_quad_c_ctrl8[0]=(((r).ana_lane_1_quad_c_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_1_quad_c_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_1_quad_c_ctrl8[0]=(((r).ana_lane_1_quad_c_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_1_quad_c_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_1_quad_c_ctrl8[0]=(((r).ana_lane_1_quad_c_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r,_r._ana_lane_1_quad_c_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r,_r._ana_lane_1_quad_c_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL8r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r
#define ANA_LANE_1_QUAD_C_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_t ANA_LANE_1_QUAD_C_CTRL8r_t;
#define ANA_LANE_1_QUAD_C_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_CLR
#define ANA_LANE_1_QUAD_C_CTRL8r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_SET
#define ANA_LANE_1_QUAD_C_CTRL8r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_GET
#define ANA_LANE_1_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_1_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_1_QUAD_C_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_1_QUAD_C_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_1_QUAD_C_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_LA_PDf_GET
#define ANA_LANE_1_QUAD_C_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL8r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL8r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL8r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL9
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa209
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r (0x0001a209 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl9[1];
	uint32_t _ana_lane_1_quad_c_ctrl9;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_CLR(r) (r).ana_lane_1_quad_c_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_SET(r,d) (r).ana_lane_1_quad_c_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_GET(r) (r).ana_lane_1_quad_c_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_1_quad_c_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_1_quad_c_ctrl9[0]=(((r).ana_lane_1_quad_c_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_1_quad_c_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_1_quad_c_ctrl9[0]=(((r).ana_lane_1_quad_c_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_1_quad_c_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_1_quad_c_ctrl9[0]=(((r).ana_lane_1_quad_c_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_1_quad_c_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_1_quad_c_ctrl9[0]=(((r).ana_lane_1_quad_c_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r,_r._ana_lane_1_quad_c_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r,_r._ana_lane_1_quad_c_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL9r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r
#define ANA_LANE_1_QUAD_C_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_t ANA_LANE_1_QUAD_C_CTRL9r_t;
#define ANA_LANE_1_QUAD_C_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_CLR
#define ANA_LANE_1_QUAD_C_CTRL9r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_SET
#define ANA_LANE_1_QUAD_C_CTRL9r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_GET
#define ANA_LANE_1_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_1_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_1_QUAD_C_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_1_QUAD_C_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_1_QUAD_C_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_1_QUAD_C_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_1_QUAD_C_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_1_QUAD_C_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL9r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL9r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL9r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL10
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa20a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r (0x0001a20a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl10[1];
	uint32_t _ana_lane_1_quad_c_ctrl10;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_CLR(r) (r).ana_lane_1_quad_c_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_SET(r,d) (r).ana_lane_1_quad_c_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_GET(r) (r).ana_lane_1_quad_c_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_1_quad_c_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_1_quad_c_ctrl10[0]=(((r).ana_lane_1_quad_c_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_1_quad_c_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_1_quad_c_ctrl10[0]=(((r).ana_lane_1_quad_c_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_1_quad_c_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_1_quad_c_ctrl10[0]=(((r).ana_lane_1_quad_c_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_1_quad_c_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_1_quad_c_ctrl10[0]=(((r).ana_lane_1_quad_c_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_1_quad_c_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_1_quad_c_ctrl10[0]=(((r).ana_lane_1_quad_c_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r,_r._ana_lane_1_quad_c_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r,_r._ana_lane_1_quad_c_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL10r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r
#define ANA_LANE_1_QUAD_C_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_t ANA_LANE_1_QUAD_C_CTRL10r_t;
#define ANA_LANE_1_QUAD_C_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_CLR
#define ANA_LANE_1_QUAD_C_CTRL10r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_SET
#define ANA_LANE_1_QUAD_C_CTRL10r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_GET
#define ANA_LANE_1_QUAD_C_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_1_QUAD_C_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_1_QUAD_C_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_1_QUAD_C_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_1_QUAD_C_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_1_QUAD_C_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_1_QUAD_C_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_1_QUAD_C_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_1_QUAD_C_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_1_QUAD_C_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL10r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL10r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL10r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL11
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa20b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r (0x0001a20b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl11[1];
	uint32_t _ana_lane_1_quad_c_ctrl11;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_CLR(r) (r).ana_lane_1_quad_c_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_SET(r,d) (r).ana_lane_1_quad_c_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_GET(r) (r).ana_lane_1_quad_c_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_1_quad_c_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_1_quad_c_ctrl11[0]=(((r).ana_lane_1_quad_c_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r,_r._ana_lane_1_quad_c_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r,_r._ana_lane_1_quad_c_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL11r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r
#define ANA_LANE_1_QUAD_C_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_t ANA_LANE_1_QUAD_C_CTRL11r_t;
#define ANA_LANE_1_QUAD_C_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_CLR
#define ANA_LANE_1_QUAD_C_CTRL11r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_SET
#define ANA_LANE_1_QUAD_C_CTRL11r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_GET
#define ANA_LANE_1_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_1_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL11r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL11r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL11r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL12
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa20c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r (0x0001a20c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl12[1];
	uint32_t _ana_lane_1_quad_c_ctrl12;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_CLR(r) (r).ana_lane_1_quad_c_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_SET(r,d) (r).ana_lane_1_quad_c_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_GET(r) (r).ana_lane_1_quad_c_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_1_quad_c_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_1_quad_c_ctrl12[0]=(((r).ana_lane_1_quad_c_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_1_quad_c_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_c_ctrl12[0]=(((r).ana_lane_1_quad_c_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_1_quad_c_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_1_quad_c_ctrl12[0]=(((r).ana_lane_1_quad_c_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_1_quad_c_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_c_ctrl12[0]=(((r).ana_lane_1_quad_c_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r,_r._ana_lane_1_quad_c_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r,_r._ana_lane_1_quad_c_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL12r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r
#define ANA_LANE_1_QUAD_C_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_t ANA_LANE_1_QUAD_C_CTRL12r_t;
#define ANA_LANE_1_QUAD_C_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_CLR
#define ANA_LANE_1_QUAD_C_CTRL12r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_SET
#define ANA_LANE_1_QUAD_C_CTRL12r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_GET
#define ANA_LANE_1_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_1_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_1_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_1_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_1_QUAD_C_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_1_QUAD_C_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_1_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_1_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL12r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL12r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL12r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL13
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa20d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r (0x0001a20d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl13[1];
	uint32_t _ana_lane_1_quad_c_ctrl13;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_CLR(r) (r).ana_lane_1_quad_c_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_SET(r,d) (r).ana_lane_1_quad_c_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_GET(r) (r).ana_lane_1_quad_c_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_1_quad_c_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_1_quad_c_ctrl13[0]=(((r).ana_lane_1_quad_c_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_1_quad_c_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_c_ctrl13[0]=(((r).ana_lane_1_quad_c_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r,_r._ana_lane_1_quad_c_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r,_r._ana_lane_1_quad_c_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL13r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r
#define ANA_LANE_1_QUAD_C_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_t ANA_LANE_1_QUAD_C_CTRL13r_t;
#define ANA_LANE_1_QUAD_C_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_CLR
#define ANA_LANE_1_QUAD_C_CTRL13r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_SET
#define ANA_LANE_1_QUAD_C_CTRL13r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_GET
#define ANA_LANE_1_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_1_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_1_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_1_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL13r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL13r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL13r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL14
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa20e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r (0x0001a20e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl14[1];
	uint32_t _ana_lane_1_quad_c_ctrl14;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_CLR(r) (r).ana_lane_1_quad_c_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_SET(r,d) (r).ana_lane_1_quad_c_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_GET(r) (r).ana_lane_1_quad_c_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_1_quad_c_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_1_quad_c_ctrl14[0]=(((r).ana_lane_1_quad_c_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_1_quad_c_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_1_quad_c_ctrl14[0]=(((r).ana_lane_1_quad_c_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_1_quad_c_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_c_ctrl14[0]=(((r).ana_lane_1_quad_c_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r,_r._ana_lane_1_quad_c_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r,_r._ana_lane_1_quad_c_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL14r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r
#define ANA_LANE_1_QUAD_C_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_t ANA_LANE_1_QUAD_C_CTRL14r_t;
#define ANA_LANE_1_QUAD_C_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_CLR
#define ANA_LANE_1_QUAD_C_CTRL14r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_SET
#define ANA_LANE_1_QUAD_C_CTRL14r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_GET
#define ANA_LANE_1_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_1_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_1_QUAD_C_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_1_QUAD_C_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_1_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_1_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL14r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL14r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL14r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL15
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa20f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r (0x0001a20f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl15[1];
	uint32_t _ana_lane_1_quad_c_ctrl15;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_CLR(r) (r).ana_lane_1_quad_c_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SET(r,d) (r).ana_lane_1_quad_c_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_GET(r) (r).ana_lane_1_quad_c_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_1_quad_c_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_1_quad_c_ctrl15[0]=(((r).ana_lane_1_quad_c_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_1_quad_c_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_1_quad_c_ctrl15[0]=(((r).ana_lane_1_quad_c_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_1_quad_c_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_1_quad_c_ctrl15[0]=(((r).ana_lane_1_quad_c_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_1_quad_c_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_c_ctrl15[0]=(((r).ana_lane_1_quad_c_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_1_quad_c_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_1_quad_c_ctrl15[0]=(((r).ana_lane_1_quad_c_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_1_quad_c_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_1_quad_c_ctrl15[0]=(((r).ana_lane_1_quad_c_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r,_r._ana_lane_1_quad_c_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r,_r._ana_lane_1_quad_c_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL15r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r
#define ANA_LANE_1_QUAD_C_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_t ANA_LANE_1_QUAD_C_CTRL15r_t;
#define ANA_LANE_1_QUAD_C_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_CLR
#define ANA_LANE_1_QUAD_C_CTRL15r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SET
#define ANA_LANE_1_QUAD_C_CTRL15r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_GET
#define ANA_LANE_1_QUAD_C_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_1_QUAD_C_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_1_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_1_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL15r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL15r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL15r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_CTRL16
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa210
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r (0x0001a210 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_ctrl16[1];
	uint32_t _ana_lane_1_quad_c_ctrl16;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_CLR(r) (r).ana_lane_1_quad_c_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_SET(r,d) (r).ana_lane_1_quad_c_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_GET(r) (r).ana_lane_1_quad_c_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_1_quad_c_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_1_quad_c_ctrl16[0]=(((r).ana_lane_1_quad_c_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_1_quad_c_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_1_quad_c_ctrl16[0]=(((r).ana_lane_1_quad_c_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r,_r._ana_lane_1_quad_c_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r,_r._ana_lane_1_quad_c_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_CTRL16r BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r
#define ANA_LANE_1_QUAD_C_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_t ANA_LANE_1_QUAD_C_CTRL16r_t;
#define ANA_LANE_1_QUAD_C_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_CLR
#define ANA_LANE_1_QUAD_C_CTRL16r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_SET
#define ANA_LANE_1_QUAD_C_CTRL16r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_GET
#define ANA_LANE_1_QUAD_C_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_1_QUAD_C_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_1_QUAD_C_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_1_QUAD_C_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_1_QUAD_C_CTRL16r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_CTRL16r
#define WRITE_ANA_LANE_1_QUAD_C_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_CTRL16r
#define MODIFY_ANA_LANE_1_QUAD_C_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_C_STATUS0
 * BLOCKS:   ANA_LANE_1_QUAD_C
 * REGADDR:  0xa220
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r (0x0001a220 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_C_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_c_status0[1];
	uint32_t _ana_lane_1_quad_c_status0;
} BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_CLR(r) (r).ana_lane_1_quad_c_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_SET(r,d) (r).ana_lane_1_quad_c_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_GET(r) (r).ana_lane_1_quad_c_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_1_quad_c_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_1_quad_c_status0[0]=(((r).ana_lane_1_quad_c_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_1_quad_c_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_1_quad_c_status0[0]=(((r).ana_lane_1_quad_c_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_C_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r,_r._ana_lane_1_quad_c_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r,_r._ana_lane_1_quad_c_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_C_STATUS0r BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r
#define ANA_LANE_1_QUAD_C_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_t ANA_LANE_1_QUAD_C_STATUS0r_t;
#define ANA_LANE_1_QUAD_C_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_CLR
#define ANA_LANE_1_QUAD_C_STATUS0r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_SET
#define ANA_LANE_1_QUAD_C_STATUS0r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_GET
#define ANA_LANE_1_QUAD_C_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_1_QUAD_C_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_1_QUAD_C_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_1_QUAD_C_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_1_QUAD_C_STATUS0r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_C_STATUS0r
#define WRITE_ANA_LANE_1_QUAD_C_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_C_STATUS0r
#define MODIFY_ANA_LANE_1_QUAD_C_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_C_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_C_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL0
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa400
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r (0x0001a400 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl0[1];
	uint32_t _ana_lane_2_quad_c_ctrl0;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_CLR(r) (r).ana_lane_2_quad_c_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_SET(r,d) (r).ana_lane_2_quad_c_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_GET(r) (r).ana_lane_2_quad_c_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_2_quad_c_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_2_quad_c_ctrl0[0]=(((r).ana_lane_2_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_2_quad_c_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_2_quad_c_ctrl0[0]=(((r).ana_lane_2_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_2_quad_c_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_2_quad_c_ctrl0[0]=(((r).ana_lane_2_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_2_quad_c_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_2_quad_c_ctrl0[0]=(((r).ana_lane_2_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_2_quad_c_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_2_quad_c_ctrl0[0]=(((r).ana_lane_2_quad_c_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r,_r._ana_lane_2_quad_c_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r,_r._ana_lane_2_quad_c_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL0r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r
#define ANA_LANE_2_QUAD_C_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_t ANA_LANE_2_QUAD_C_CTRL0r_t;
#define ANA_LANE_2_QUAD_C_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_CLR
#define ANA_LANE_2_QUAD_C_CTRL0r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_SET
#define ANA_LANE_2_QUAD_C_CTRL0r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_GET
#define ANA_LANE_2_QUAD_C_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_2_QUAD_C_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_2_QUAD_C_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_2_QUAD_C_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL0r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL0r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL0r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL1
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa401
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r (0x0001a401 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl1[1];
	uint32_t _ana_lane_2_quad_c_ctrl1;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_CLR(r) (r).ana_lane_2_quad_c_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_SET(r,d) (r).ana_lane_2_quad_c_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_GET(r) (r).ana_lane_2_quad_c_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_2_quad_c_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_2_quad_c_ctrl1[0]=(((r).ana_lane_2_quad_c_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_2_quad_c_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_2_quad_c_ctrl1[0]=(((r).ana_lane_2_quad_c_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_2_quad_c_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_2_quad_c_ctrl1[0]=(((r).ana_lane_2_quad_c_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_2_quad_c_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_2_quad_c_ctrl1[0]=(((r).ana_lane_2_quad_c_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_2_quad_c_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_2_quad_c_ctrl1[0]=(((r).ana_lane_2_quad_c_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r,_r._ana_lane_2_quad_c_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r,_r._ana_lane_2_quad_c_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL1r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r
#define ANA_LANE_2_QUAD_C_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_t ANA_LANE_2_QUAD_C_CTRL1r_t;
#define ANA_LANE_2_QUAD_C_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_CLR
#define ANA_LANE_2_QUAD_C_CTRL1r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_SET
#define ANA_LANE_2_QUAD_C_CTRL1r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_GET
#define ANA_LANE_2_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_2_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_2_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_2_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_2_QUAD_C_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_2_QUAD_C_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_2_QUAD_C_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_REF_OCLf_GET
#define ANA_LANE_2_QUAD_C_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_REF_OCLf_SET
#define ANA_LANE_2_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_2_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL1r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL1r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL1r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL2
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa402
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r (0x0001a402 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl2[1];
	uint32_t _ana_lane_2_quad_c_ctrl2;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_CLR(r) (r).ana_lane_2_quad_c_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_SET(r,d) (r).ana_lane_2_quad_c_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_GET(r) (r).ana_lane_2_quad_c_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_2_quad_c_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_2_quad_c_ctrl2[0]=(((r).ana_lane_2_quad_c_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_2_quad_c_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_2_quad_c_ctrl2[0]=(((r).ana_lane_2_quad_c_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r,_r._ana_lane_2_quad_c_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r,_r._ana_lane_2_quad_c_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL2r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r
#define ANA_LANE_2_QUAD_C_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_t ANA_LANE_2_QUAD_C_CTRL2r_t;
#define ANA_LANE_2_QUAD_C_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_CLR
#define ANA_LANE_2_QUAD_C_CTRL2r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_SET
#define ANA_LANE_2_QUAD_C_CTRL2r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_GET
#define ANA_LANE_2_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_2_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_2_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_2_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL2r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL2r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL2r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL3
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa403
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r (0x0001a403 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl3[1];
	uint32_t _ana_lane_2_quad_c_ctrl3;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_CLR(r) (r).ana_lane_2_quad_c_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_SET(r,d) (r).ana_lane_2_quad_c_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_GET(r) (r).ana_lane_2_quad_c_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_2_quad_c_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_2_quad_c_ctrl3[0]=(((r).ana_lane_2_quad_c_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_2_quad_c_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_2_quad_c_ctrl3[0]=(((r).ana_lane_2_quad_c_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r,_r._ana_lane_2_quad_c_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r,_r._ana_lane_2_quad_c_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL3r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r
#define ANA_LANE_2_QUAD_C_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_t ANA_LANE_2_QUAD_C_CTRL3r_t;
#define ANA_LANE_2_QUAD_C_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_CLR
#define ANA_LANE_2_QUAD_C_CTRL3r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_SET
#define ANA_LANE_2_QUAD_C_CTRL3r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_GET
#define ANA_LANE_2_QUAD_C_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_2_QUAD_C_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_2_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_2_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL3r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL3r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL3r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL4
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa404
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r (0x0001a404 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl4[1];
	uint32_t _ana_lane_2_quad_c_ctrl4;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_CLR(r) (r).ana_lane_2_quad_c_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_SET(r,d) (r).ana_lane_2_quad_c_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_GET(r) (r).ana_lane_2_quad_c_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_2_quad_c_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_2_quad_c_ctrl4[0]=(((r).ana_lane_2_quad_c_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_2_quad_c_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_2_quad_c_ctrl4[0]=(((r).ana_lane_2_quad_c_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r,_r._ana_lane_2_quad_c_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r,_r._ana_lane_2_quad_c_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL4r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r
#define ANA_LANE_2_QUAD_C_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_t ANA_LANE_2_QUAD_C_CTRL4r_t;
#define ANA_LANE_2_QUAD_C_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_CLR
#define ANA_LANE_2_QUAD_C_CTRL4r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_SET
#define ANA_LANE_2_QUAD_C_CTRL4r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_GET
#define ANA_LANE_2_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_2_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_2_QUAD_C_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_2_QUAD_C_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL4r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL4r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL4r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL5
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa405
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r (0x0001a405 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl5[1];
	uint32_t _ana_lane_2_quad_c_ctrl5;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_CLR(r) (r).ana_lane_2_quad_c_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_SET(r,d) (r).ana_lane_2_quad_c_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_GET(r) (r).ana_lane_2_quad_c_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_2_quad_c_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_2_quad_c_ctrl5[0]=(((r).ana_lane_2_quad_c_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_2_quad_c_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_2_quad_c_ctrl5[0]=(((r).ana_lane_2_quad_c_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_2_quad_c_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_2_quad_c_ctrl5[0]=(((r).ana_lane_2_quad_c_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r,_r._ana_lane_2_quad_c_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r,_r._ana_lane_2_quad_c_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL5r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r
#define ANA_LANE_2_QUAD_C_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_t ANA_LANE_2_QUAD_C_CTRL5r_t;
#define ANA_LANE_2_QUAD_C_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_CLR
#define ANA_LANE_2_QUAD_C_CTRL5r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_SET
#define ANA_LANE_2_QUAD_C_CTRL5r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_GET
#define ANA_LANE_2_QUAD_C_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_2_QUAD_C_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_2_QUAD_C_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_2_QUAD_C_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_2_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_2_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL5r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL5r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL5r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL6
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa406
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r (0x0001a406 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl6[1];
	uint32_t _ana_lane_2_quad_c_ctrl6;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_CLR(r) (r).ana_lane_2_quad_c_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_SET(r,d) (r).ana_lane_2_quad_c_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_GET(r) (r).ana_lane_2_quad_c_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_2_quad_c_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_2_quad_c_ctrl6[0]=(((r).ana_lane_2_quad_c_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_2_quad_c_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_2_quad_c_ctrl6[0]=(((r).ana_lane_2_quad_c_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r,_r._ana_lane_2_quad_c_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r,_r._ana_lane_2_quad_c_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL6r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r
#define ANA_LANE_2_QUAD_C_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_t ANA_LANE_2_QUAD_C_CTRL6r_t;
#define ANA_LANE_2_QUAD_C_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_CLR
#define ANA_LANE_2_QUAD_C_CTRL6r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_SET
#define ANA_LANE_2_QUAD_C_CTRL6r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_GET
#define ANA_LANE_2_QUAD_C_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_2_QUAD_C_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_2_QUAD_C_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_2_QUAD_C_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL6r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL6r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL6r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL7
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa407
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r (0x0001a407 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl7[1];
	uint32_t _ana_lane_2_quad_c_ctrl7;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_CLR(r) (r).ana_lane_2_quad_c_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_SET(r,d) (r).ana_lane_2_quad_c_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_GET(r) (r).ana_lane_2_quad_c_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_2_quad_c_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_2_quad_c_ctrl7[0]=(((r).ana_lane_2_quad_c_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_2_quad_c_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_2_quad_c_ctrl7[0]=(((r).ana_lane_2_quad_c_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r,_r._ana_lane_2_quad_c_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r,_r._ana_lane_2_quad_c_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL7r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r
#define ANA_LANE_2_QUAD_C_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_t ANA_LANE_2_QUAD_C_CTRL7r_t;
#define ANA_LANE_2_QUAD_C_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_CLR
#define ANA_LANE_2_QUAD_C_CTRL7r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_SET
#define ANA_LANE_2_QUAD_C_CTRL7r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_GET
#define ANA_LANE_2_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_2_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_2_QUAD_C_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_2_QUAD_C_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL7r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL7r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL7r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL8
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa408
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r (0x0001a408 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl8[1];
	uint32_t _ana_lane_2_quad_c_ctrl8;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_CLR(r) (r).ana_lane_2_quad_c_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_SET(r,d) (r).ana_lane_2_quad_c_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_GET(r) (r).ana_lane_2_quad_c_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_2_quad_c_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_2_quad_c_ctrl8[0]=(((r).ana_lane_2_quad_c_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_2_quad_c_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_2_quad_c_ctrl8[0]=(((r).ana_lane_2_quad_c_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_2_quad_c_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_2_quad_c_ctrl8[0]=(((r).ana_lane_2_quad_c_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r,_r._ana_lane_2_quad_c_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r,_r._ana_lane_2_quad_c_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL8r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r
#define ANA_LANE_2_QUAD_C_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_t ANA_LANE_2_QUAD_C_CTRL8r_t;
#define ANA_LANE_2_QUAD_C_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_CLR
#define ANA_LANE_2_QUAD_C_CTRL8r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_SET
#define ANA_LANE_2_QUAD_C_CTRL8r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_GET
#define ANA_LANE_2_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_2_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_2_QUAD_C_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_2_QUAD_C_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_2_QUAD_C_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_LA_PDf_GET
#define ANA_LANE_2_QUAD_C_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL8r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL8r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL8r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL9
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa409
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r (0x0001a409 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl9[1];
	uint32_t _ana_lane_2_quad_c_ctrl9;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_CLR(r) (r).ana_lane_2_quad_c_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_SET(r,d) (r).ana_lane_2_quad_c_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_GET(r) (r).ana_lane_2_quad_c_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_2_quad_c_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_2_quad_c_ctrl9[0]=(((r).ana_lane_2_quad_c_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_2_quad_c_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_2_quad_c_ctrl9[0]=(((r).ana_lane_2_quad_c_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_2_quad_c_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_2_quad_c_ctrl9[0]=(((r).ana_lane_2_quad_c_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_2_quad_c_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_2_quad_c_ctrl9[0]=(((r).ana_lane_2_quad_c_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r,_r._ana_lane_2_quad_c_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r,_r._ana_lane_2_quad_c_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL9r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r
#define ANA_LANE_2_QUAD_C_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_t ANA_LANE_2_QUAD_C_CTRL9r_t;
#define ANA_LANE_2_QUAD_C_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_CLR
#define ANA_LANE_2_QUAD_C_CTRL9r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_SET
#define ANA_LANE_2_QUAD_C_CTRL9r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_GET
#define ANA_LANE_2_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_2_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_2_QUAD_C_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_2_QUAD_C_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_2_QUAD_C_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_2_QUAD_C_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_2_QUAD_C_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_2_QUAD_C_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL9r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL9r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL9r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL10
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa40a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r (0x0001a40a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl10[1];
	uint32_t _ana_lane_2_quad_c_ctrl10;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_CLR(r) (r).ana_lane_2_quad_c_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_SET(r,d) (r).ana_lane_2_quad_c_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_GET(r) (r).ana_lane_2_quad_c_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_2_quad_c_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_2_quad_c_ctrl10[0]=(((r).ana_lane_2_quad_c_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_2_quad_c_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_2_quad_c_ctrl10[0]=(((r).ana_lane_2_quad_c_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_2_quad_c_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_2_quad_c_ctrl10[0]=(((r).ana_lane_2_quad_c_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_2_quad_c_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_2_quad_c_ctrl10[0]=(((r).ana_lane_2_quad_c_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_2_quad_c_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_2_quad_c_ctrl10[0]=(((r).ana_lane_2_quad_c_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r,_r._ana_lane_2_quad_c_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r,_r._ana_lane_2_quad_c_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL10r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r
#define ANA_LANE_2_QUAD_C_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_t ANA_LANE_2_QUAD_C_CTRL10r_t;
#define ANA_LANE_2_QUAD_C_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_CLR
#define ANA_LANE_2_QUAD_C_CTRL10r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_SET
#define ANA_LANE_2_QUAD_C_CTRL10r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_GET
#define ANA_LANE_2_QUAD_C_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_2_QUAD_C_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_2_QUAD_C_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_2_QUAD_C_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_2_QUAD_C_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_2_QUAD_C_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_2_QUAD_C_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_2_QUAD_C_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_2_QUAD_C_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_2_QUAD_C_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL10r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL10r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL10r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL11
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa40b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r (0x0001a40b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl11[1];
	uint32_t _ana_lane_2_quad_c_ctrl11;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_CLR(r) (r).ana_lane_2_quad_c_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_SET(r,d) (r).ana_lane_2_quad_c_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_GET(r) (r).ana_lane_2_quad_c_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_2_quad_c_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_2_quad_c_ctrl11[0]=(((r).ana_lane_2_quad_c_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r,_r._ana_lane_2_quad_c_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r,_r._ana_lane_2_quad_c_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL11r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r
#define ANA_LANE_2_QUAD_C_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_t ANA_LANE_2_QUAD_C_CTRL11r_t;
#define ANA_LANE_2_QUAD_C_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_CLR
#define ANA_LANE_2_QUAD_C_CTRL11r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_SET
#define ANA_LANE_2_QUAD_C_CTRL11r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_GET
#define ANA_LANE_2_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_2_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL11r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL11r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL11r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL12
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa40c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r (0x0001a40c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl12[1];
	uint32_t _ana_lane_2_quad_c_ctrl12;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_CLR(r) (r).ana_lane_2_quad_c_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_SET(r,d) (r).ana_lane_2_quad_c_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_GET(r) (r).ana_lane_2_quad_c_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_2_quad_c_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_2_quad_c_ctrl12[0]=(((r).ana_lane_2_quad_c_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_2_quad_c_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_c_ctrl12[0]=(((r).ana_lane_2_quad_c_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_2_quad_c_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_2_quad_c_ctrl12[0]=(((r).ana_lane_2_quad_c_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_2_quad_c_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_c_ctrl12[0]=(((r).ana_lane_2_quad_c_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r,_r._ana_lane_2_quad_c_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r,_r._ana_lane_2_quad_c_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL12r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r
#define ANA_LANE_2_QUAD_C_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_t ANA_LANE_2_QUAD_C_CTRL12r_t;
#define ANA_LANE_2_QUAD_C_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_CLR
#define ANA_LANE_2_QUAD_C_CTRL12r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_SET
#define ANA_LANE_2_QUAD_C_CTRL12r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_GET
#define ANA_LANE_2_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_2_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_2_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_2_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_2_QUAD_C_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_2_QUAD_C_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_2_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_2_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL12r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL12r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL12r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL13
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa40d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r (0x0001a40d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl13[1];
	uint32_t _ana_lane_2_quad_c_ctrl13;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_CLR(r) (r).ana_lane_2_quad_c_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_SET(r,d) (r).ana_lane_2_quad_c_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_GET(r) (r).ana_lane_2_quad_c_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_2_quad_c_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_2_quad_c_ctrl13[0]=(((r).ana_lane_2_quad_c_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_2_quad_c_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_c_ctrl13[0]=(((r).ana_lane_2_quad_c_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r,_r._ana_lane_2_quad_c_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r,_r._ana_lane_2_quad_c_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL13r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r
#define ANA_LANE_2_QUAD_C_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_t ANA_LANE_2_QUAD_C_CTRL13r_t;
#define ANA_LANE_2_QUAD_C_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_CLR
#define ANA_LANE_2_QUAD_C_CTRL13r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_SET
#define ANA_LANE_2_QUAD_C_CTRL13r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_GET
#define ANA_LANE_2_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_2_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_2_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_2_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL13r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL13r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL13r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL14
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa40e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r (0x0001a40e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl14[1];
	uint32_t _ana_lane_2_quad_c_ctrl14;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_CLR(r) (r).ana_lane_2_quad_c_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_SET(r,d) (r).ana_lane_2_quad_c_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_GET(r) (r).ana_lane_2_quad_c_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_2_quad_c_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_2_quad_c_ctrl14[0]=(((r).ana_lane_2_quad_c_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_2_quad_c_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_2_quad_c_ctrl14[0]=(((r).ana_lane_2_quad_c_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_2_quad_c_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_c_ctrl14[0]=(((r).ana_lane_2_quad_c_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r,_r._ana_lane_2_quad_c_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r,_r._ana_lane_2_quad_c_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL14r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r
#define ANA_LANE_2_QUAD_C_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_t ANA_LANE_2_QUAD_C_CTRL14r_t;
#define ANA_LANE_2_QUAD_C_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_CLR
#define ANA_LANE_2_QUAD_C_CTRL14r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_SET
#define ANA_LANE_2_QUAD_C_CTRL14r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_GET
#define ANA_LANE_2_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_2_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_2_QUAD_C_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_2_QUAD_C_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_2_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_2_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL14r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL14r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL14r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL15
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa40f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r (0x0001a40f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl15[1];
	uint32_t _ana_lane_2_quad_c_ctrl15;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_CLR(r) (r).ana_lane_2_quad_c_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SET(r,d) (r).ana_lane_2_quad_c_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_GET(r) (r).ana_lane_2_quad_c_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_2_quad_c_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_2_quad_c_ctrl15[0]=(((r).ana_lane_2_quad_c_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_2_quad_c_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_2_quad_c_ctrl15[0]=(((r).ana_lane_2_quad_c_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_2_quad_c_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_2_quad_c_ctrl15[0]=(((r).ana_lane_2_quad_c_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_2_quad_c_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_c_ctrl15[0]=(((r).ana_lane_2_quad_c_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_2_quad_c_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_2_quad_c_ctrl15[0]=(((r).ana_lane_2_quad_c_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_2_quad_c_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_2_quad_c_ctrl15[0]=(((r).ana_lane_2_quad_c_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r,_r._ana_lane_2_quad_c_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r,_r._ana_lane_2_quad_c_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL15r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r
#define ANA_LANE_2_QUAD_C_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_t ANA_LANE_2_QUAD_C_CTRL15r_t;
#define ANA_LANE_2_QUAD_C_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_CLR
#define ANA_LANE_2_QUAD_C_CTRL15r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SET
#define ANA_LANE_2_QUAD_C_CTRL15r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_GET
#define ANA_LANE_2_QUAD_C_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_2_QUAD_C_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_2_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_2_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL15r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL15r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL15r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_CTRL16
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa410
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r (0x0001a410 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_ctrl16[1];
	uint32_t _ana_lane_2_quad_c_ctrl16;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_CLR(r) (r).ana_lane_2_quad_c_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_SET(r,d) (r).ana_lane_2_quad_c_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_GET(r) (r).ana_lane_2_quad_c_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_2_quad_c_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_2_quad_c_ctrl16[0]=(((r).ana_lane_2_quad_c_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_2_quad_c_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_2_quad_c_ctrl16[0]=(((r).ana_lane_2_quad_c_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r,_r._ana_lane_2_quad_c_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r,_r._ana_lane_2_quad_c_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_CTRL16r BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r
#define ANA_LANE_2_QUAD_C_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_t ANA_LANE_2_QUAD_C_CTRL16r_t;
#define ANA_LANE_2_QUAD_C_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_CLR
#define ANA_LANE_2_QUAD_C_CTRL16r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_SET
#define ANA_LANE_2_QUAD_C_CTRL16r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_GET
#define ANA_LANE_2_QUAD_C_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_2_QUAD_C_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_2_QUAD_C_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_2_QUAD_C_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_2_QUAD_C_CTRL16r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_CTRL16r
#define WRITE_ANA_LANE_2_QUAD_C_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_CTRL16r
#define MODIFY_ANA_LANE_2_QUAD_C_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_C_STATUS0
 * BLOCKS:   ANA_LANE_2_QUAD_C
 * REGADDR:  0xa420
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r (0x0001a420 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_C_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_c_status0[1];
	uint32_t _ana_lane_2_quad_c_status0;
} BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_CLR(r) (r).ana_lane_2_quad_c_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_SET(r,d) (r).ana_lane_2_quad_c_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_GET(r) (r).ana_lane_2_quad_c_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_2_quad_c_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_2_quad_c_status0[0]=(((r).ana_lane_2_quad_c_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_2_quad_c_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_2_quad_c_status0[0]=(((r).ana_lane_2_quad_c_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_C_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r,_r._ana_lane_2_quad_c_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r,_r._ana_lane_2_quad_c_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_C_STATUS0r BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r
#define ANA_LANE_2_QUAD_C_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_t ANA_LANE_2_QUAD_C_STATUS0r_t;
#define ANA_LANE_2_QUAD_C_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_CLR
#define ANA_LANE_2_QUAD_C_STATUS0r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_SET
#define ANA_LANE_2_QUAD_C_STATUS0r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_GET
#define ANA_LANE_2_QUAD_C_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_2_QUAD_C_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_2_QUAD_C_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_2_QUAD_C_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_2_QUAD_C_STATUS0r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_C_STATUS0r
#define WRITE_ANA_LANE_2_QUAD_C_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_C_STATUS0r
#define MODIFY_ANA_LANE_2_QUAD_C_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_C_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_C_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL0
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa800
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r (0x0001a800 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl0[1];
	uint32_t _ana_lane_3_quad_c_ctrl0;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_CLR(r) (r).ana_lane_3_quad_c_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_SET(r,d) (r).ana_lane_3_quad_c_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_GET(r) (r).ana_lane_3_quad_c_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_3_quad_c_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_3_quad_c_ctrl0[0]=(((r).ana_lane_3_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_3_quad_c_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_3_quad_c_ctrl0[0]=(((r).ana_lane_3_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_3_quad_c_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_3_quad_c_ctrl0[0]=(((r).ana_lane_3_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_3_quad_c_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_3_quad_c_ctrl0[0]=(((r).ana_lane_3_quad_c_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_3_quad_c_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_3_quad_c_ctrl0[0]=(((r).ana_lane_3_quad_c_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r,_r._ana_lane_3_quad_c_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r,_r._ana_lane_3_quad_c_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL0r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r
#define ANA_LANE_3_QUAD_C_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_t ANA_LANE_3_QUAD_C_CTRL0r_t;
#define ANA_LANE_3_QUAD_C_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_CLR
#define ANA_LANE_3_QUAD_C_CTRL0r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_SET
#define ANA_LANE_3_QUAD_C_CTRL0r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_GET
#define ANA_LANE_3_QUAD_C_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_3_QUAD_C_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_3_QUAD_C_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_3_QUAD_C_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL0r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL0r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL0r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL1
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa801
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r (0x0001a801 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl1[1];
	uint32_t _ana_lane_3_quad_c_ctrl1;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_CLR(r) (r).ana_lane_3_quad_c_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_SET(r,d) (r).ana_lane_3_quad_c_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_GET(r) (r).ana_lane_3_quad_c_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_3_quad_c_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_3_quad_c_ctrl1[0]=(((r).ana_lane_3_quad_c_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_3_quad_c_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_3_quad_c_ctrl1[0]=(((r).ana_lane_3_quad_c_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_3_quad_c_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_3_quad_c_ctrl1[0]=(((r).ana_lane_3_quad_c_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_3_quad_c_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_3_quad_c_ctrl1[0]=(((r).ana_lane_3_quad_c_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_3_quad_c_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_3_quad_c_ctrl1[0]=(((r).ana_lane_3_quad_c_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r,_r._ana_lane_3_quad_c_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r,_r._ana_lane_3_quad_c_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL1r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r
#define ANA_LANE_3_QUAD_C_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_t ANA_LANE_3_QUAD_C_CTRL1r_t;
#define ANA_LANE_3_QUAD_C_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_CLR
#define ANA_LANE_3_QUAD_C_CTRL1r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_SET
#define ANA_LANE_3_QUAD_C_CTRL1r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_GET
#define ANA_LANE_3_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_3_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_3_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_3_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_3_QUAD_C_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_3_QUAD_C_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_3_QUAD_C_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_REF_OCLf_GET
#define ANA_LANE_3_QUAD_C_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_REF_OCLf_SET
#define ANA_LANE_3_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_3_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL1r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL1r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL1r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL2
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa802
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r (0x0001a802 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl2[1];
	uint32_t _ana_lane_3_quad_c_ctrl2;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_CLR(r) (r).ana_lane_3_quad_c_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_SET(r,d) (r).ana_lane_3_quad_c_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_GET(r) (r).ana_lane_3_quad_c_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_3_quad_c_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_3_quad_c_ctrl2[0]=(((r).ana_lane_3_quad_c_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_3_quad_c_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_3_quad_c_ctrl2[0]=(((r).ana_lane_3_quad_c_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r,_r._ana_lane_3_quad_c_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r,_r._ana_lane_3_quad_c_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL2r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r
#define ANA_LANE_3_QUAD_C_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_t ANA_LANE_3_QUAD_C_CTRL2r_t;
#define ANA_LANE_3_QUAD_C_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_CLR
#define ANA_LANE_3_QUAD_C_CTRL2r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_SET
#define ANA_LANE_3_QUAD_C_CTRL2r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_GET
#define ANA_LANE_3_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_3_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_3_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_3_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL2r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL2r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL2r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL3
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa803
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r (0x0001a803 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl3[1];
	uint32_t _ana_lane_3_quad_c_ctrl3;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_CLR(r) (r).ana_lane_3_quad_c_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_SET(r,d) (r).ana_lane_3_quad_c_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_GET(r) (r).ana_lane_3_quad_c_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_3_quad_c_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_3_quad_c_ctrl3[0]=(((r).ana_lane_3_quad_c_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_3_quad_c_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_3_quad_c_ctrl3[0]=(((r).ana_lane_3_quad_c_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r,_r._ana_lane_3_quad_c_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r,_r._ana_lane_3_quad_c_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL3r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r
#define ANA_LANE_3_QUAD_C_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_t ANA_LANE_3_QUAD_C_CTRL3r_t;
#define ANA_LANE_3_QUAD_C_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_CLR
#define ANA_LANE_3_QUAD_C_CTRL3r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_SET
#define ANA_LANE_3_QUAD_C_CTRL3r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_GET
#define ANA_LANE_3_QUAD_C_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_3_QUAD_C_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_3_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_3_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL3r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL3r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL3r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL4
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa804
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r (0x0001a804 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl4[1];
	uint32_t _ana_lane_3_quad_c_ctrl4;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_CLR(r) (r).ana_lane_3_quad_c_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_SET(r,d) (r).ana_lane_3_quad_c_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_GET(r) (r).ana_lane_3_quad_c_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_3_quad_c_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_3_quad_c_ctrl4[0]=(((r).ana_lane_3_quad_c_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_3_quad_c_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_3_quad_c_ctrl4[0]=(((r).ana_lane_3_quad_c_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r,_r._ana_lane_3_quad_c_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r,_r._ana_lane_3_quad_c_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL4r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r
#define ANA_LANE_3_QUAD_C_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_t ANA_LANE_3_QUAD_C_CTRL4r_t;
#define ANA_LANE_3_QUAD_C_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_CLR
#define ANA_LANE_3_QUAD_C_CTRL4r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_SET
#define ANA_LANE_3_QUAD_C_CTRL4r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_GET
#define ANA_LANE_3_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_3_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_3_QUAD_C_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_3_QUAD_C_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL4r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL4r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL4r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL5
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa805
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r (0x0001a805 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl5[1];
	uint32_t _ana_lane_3_quad_c_ctrl5;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_CLR(r) (r).ana_lane_3_quad_c_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_SET(r,d) (r).ana_lane_3_quad_c_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_GET(r) (r).ana_lane_3_quad_c_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_3_quad_c_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_3_quad_c_ctrl5[0]=(((r).ana_lane_3_quad_c_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_3_quad_c_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_3_quad_c_ctrl5[0]=(((r).ana_lane_3_quad_c_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_3_quad_c_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_3_quad_c_ctrl5[0]=(((r).ana_lane_3_quad_c_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r,_r._ana_lane_3_quad_c_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r,_r._ana_lane_3_quad_c_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL5r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r
#define ANA_LANE_3_QUAD_C_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_t ANA_LANE_3_QUAD_C_CTRL5r_t;
#define ANA_LANE_3_QUAD_C_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_CLR
#define ANA_LANE_3_QUAD_C_CTRL5r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_SET
#define ANA_LANE_3_QUAD_C_CTRL5r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_GET
#define ANA_LANE_3_QUAD_C_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_3_QUAD_C_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_3_QUAD_C_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_3_QUAD_C_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_3_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_3_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL5r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL5r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL5r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL6
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa806
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r (0x0001a806 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl6[1];
	uint32_t _ana_lane_3_quad_c_ctrl6;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_CLR(r) (r).ana_lane_3_quad_c_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_SET(r,d) (r).ana_lane_3_quad_c_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_GET(r) (r).ana_lane_3_quad_c_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_3_quad_c_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_3_quad_c_ctrl6[0]=(((r).ana_lane_3_quad_c_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_3_quad_c_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_3_quad_c_ctrl6[0]=(((r).ana_lane_3_quad_c_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r,_r._ana_lane_3_quad_c_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r,_r._ana_lane_3_quad_c_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL6r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r
#define ANA_LANE_3_QUAD_C_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_t ANA_LANE_3_QUAD_C_CTRL6r_t;
#define ANA_LANE_3_QUAD_C_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_CLR
#define ANA_LANE_3_QUAD_C_CTRL6r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_SET
#define ANA_LANE_3_QUAD_C_CTRL6r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_GET
#define ANA_LANE_3_QUAD_C_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_3_QUAD_C_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_3_QUAD_C_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_3_QUAD_C_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL6r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL6r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL6r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL7
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa807
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r (0x0001a807 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl7[1];
	uint32_t _ana_lane_3_quad_c_ctrl7;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_CLR(r) (r).ana_lane_3_quad_c_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_SET(r,d) (r).ana_lane_3_quad_c_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_GET(r) (r).ana_lane_3_quad_c_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_3_quad_c_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_3_quad_c_ctrl7[0]=(((r).ana_lane_3_quad_c_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_3_quad_c_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_3_quad_c_ctrl7[0]=(((r).ana_lane_3_quad_c_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r,_r._ana_lane_3_quad_c_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r,_r._ana_lane_3_quad_c_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL7r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r
#define ANA_LANE_3_QUAD_C_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_t ANA_LANE_3_QUAD_C_CTRL7r_t;
#define ANA_LANE_3_QUAD_C_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_CLR
#define ANA_LANE_3_QUAD_C_CTRL7r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_SET
#define ANA_LANE_3_QUAD_C_CTRL7r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_GET
#define ANA_LANE_3_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_3_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_3_QUAD_C_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_3_QUAD_C_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL7r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL7r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL7r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL8
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa808
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r (0x0001a808 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl8[1];
	uint32_t _ana_lane_3_quad_c_ctrl8;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_CLR(r) (r).ana_lane_3_quad_c_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_SET(r,d) (r).ana_lane_3_quad_c_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_GET(r) (r).ana_lane_3_quad_c_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_3_quad_c_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_3_quad_c_ctrl8[0]=(((r).ana_lane_3_quad_c_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_3_quad_c_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_3_quad_c_ctrl8[0]=(((r).ana_lane_3_quad_c_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_3_quad_c_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_3_quad_c_ctrl8[0]=(((r).ana_lane_3_quad_c_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r,_r._ana_lane_3_quad_c_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r,_r._ana_lane_3_quad_c_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL8r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r
#define ANA_LANE_3_QUAD_C_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_t ANA_LANE_3_QUAD_C_CTRL8r_t;
#define ANA_LANE_3_QUAD_C_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_CLR
#define ANA_LANE_3_QUAD_C_CTRL8r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_SET
#define ANA_LANE_3_QUAD_C_CTRL8r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_GET
#define ANA_LANE_3_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_3_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_3_QUAD_C_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_3_QUAD_C_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_3_QUAD_C_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_LA_PDf_GET
#define ANA_LANE_3_QUAD_C_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL8r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL8r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL8r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL9
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa809
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r (0x0001a809 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl9[1];
	uint32_t _ana_lane_3_quad_c_ctrl9;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_CLR(r) (r).ana_lane_3_quad_c_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_SET(r,d) (r).ana_lane_3_quad_c_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_GET(r) (r).ana_lane_3_quad_c_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_3_quad_c_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_3_quad_c_ctrl9[0]=(((r).ana_lane_3_quad_c_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_3_quad_c_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_3_quad_c_ctrl9[0]=(((r).ana_lane_3_quad_c_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_3_quad_c_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_3_quad_c_ctrl9[0]=(((r).ana_lane_3_quad_c_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_3_quad_c_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_3_quad_c_ctrl9[0]=(((r).ana_lane_3_quad_c_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r,_r._ana_lane_3_quad_c_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r,_r._ana_lane_3_quad_c_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL9r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r
#define ANA_LANE_3_QUAD_C_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_t ANA_LANE_3_QUAD_C_CTRL9r_t;
#define ANA_LANE_3_QUAD_C_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_CLR
#define ANA_LANE_3_QUAD_C_CTRL9r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_SET
#define ANA_LANE_3_QUAD_C_CTRL9r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_GET
#define ANA_LANE_3_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_3_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_3_QUAD_C_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_3_QUAD_C_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_3_QUAD_C_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_3_QUAD_C_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_3_QUAD_C_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_3_QUAD_C_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL9r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL9r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL9r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL10
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa80a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r (0x0001a80a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl10[1];
	uint32_t _ana_lane_3_quad_c_ctrl10;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_CLR(r) (r).ana_lane_3_quad_c_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_SET(r,d) (r).ana_lane_3_quad_c_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_GET(r) (r).ana_lane_3_quad_c_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_3_quad_c_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_3_quad_c_ctrl10[0]=(((r).ana_lane_3_quad_c_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_3_quad_c_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_3_quad_c_ctrl10[0]=(((r).ana_lane_3_quad_c_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_3_quad_c_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_3_quad_c_ctrl10[0]=(((r).ana_lane_3_quad_c_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_3_quad_c_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_3_quad_c_ctrl10[0]=(((r).ana_lane_3_quad_c_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_3_quad_c_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_3_quad_c_ctrl10[0]=(((r).ana_lane_3_quad_c_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r,_r._ana_lane_3_quad_c_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r,_r._ana_lane_3_quad_c_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL10r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r
#define ANA_LANE_3_QUAD_C_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_t ANA_LANE_3_QUAD_C_CTRL10r_t;
#define ANA_LANE_3_QUAD_C_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_CLR
#define ANA_LANE_3_QUAD_C_CTRL10r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_SET
#define ANA_LANE_3_QUAD_C_CTRL10r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_GET
#define ANA_LANE_3_QUAD_C_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_3_QUAD_C_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_3_QUAD_C_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_3_QUAD_C_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_3_QUAD_C_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_3_QUAD_C_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_3_QUAD_C_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_3_QUAD_C_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_3_QUAD_C_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_3_QUAD_C_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL10r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL10r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL10r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL11
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa80b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r (0x0001a80b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl11[1];
	uint32_t _ana_lane_3_quad_c_ctrl11;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_CLR(r) (r).ana_lane_3_quad_c_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_SET(r,d) (r).ana_lane_3_quad_c_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_GET(r) (r).ana_lane_3_quad_c_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_3_quad_c_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_3_quad_c_ctrl11[0]=(((r).ana_lane_3_quad_c_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r,_r._ana_lane_3_quad_c_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r,_r._ana_lane_3_quad_c_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL11r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r
#define ANA_LANE_3_QUAD_C_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_t ANA_LANE_3_QUAD_C_CTRL11r_t;
#define ANA_LANE_3_QUAD_C_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_CLR
#define ANA_LANE_3_QUAD_C_CTRL11r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_SET
#define ANA_LANE_3_QUAD_C_CTRL11r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_GET
#define ANA_LANE_3_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_3_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL11r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL11r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL11r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL12
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa80c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r (0x0001a80c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl12[1];
	uint32_t _ana_lane_3_quad_c_ctrl12;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_CLR(r) (r).ana_lane_3_quad_c_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_SET(r,d) (r).ana_lane_3_quad_c_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_GET(r) (r).ana_lane_3_quad_c_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_3_quad_c_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_3_quad_c_ctrl12[0]=(((r).ana_lane_3_quad_c_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_3_quad_c_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_c_ctrl12[0]=(((r).ana_lane_3_quad_c_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_3_quad_c_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_3_quad_c_ctrl12[0]=(((r).ana_lane_3_quad_c_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_3_quad_c_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_c_ctrl12[0]=(((r).ana_lane_3_quad_c_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r,_r._ana_lane_3_quad_c_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r,_r._ana_lane_3_quad_c_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL12r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r
#define ANA_LANE_3_QUAD_C_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_t ANA_LANE_3_QUAD_C_CTRL12r_t;
#define ANA_LANE_3_QUAD_C_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_CLR
#define ANA_LANE_3_QUAD_C_CTRL12r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_SET
#define ANA_LANE_3_QUAD_C_CTRL12r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_GET
#define ANA_LANE_3_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_3_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_3_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_3_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_3_QUAD_C_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_3_QUAD_C_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_3_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_3_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL12r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL12r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL12r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL13
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa80d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r (0x0001a80d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl13[1];
	uint32_t _ana_lane_3_quad_c_ctrl13;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_CLR(r) (r).ana_lane_3_quad_c_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_SET(r,d) (r).ana_lane_3_quad_c_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_GET(r) (r).ana_lane_3_quad_c_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_3_quad_c_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_3_quad_c_ctrl13[0]=(((r).ana_lane_3_quad_c_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_3_quad_c_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_c_ctrl13[0]=(((r).ana_lane_3_quad_c_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r,_r._ana_lane_3_quad_c_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r,_r._ana_lane_3_quad_c_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL13r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r
#define ANA_LANE_3_QUAD_C_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_t ANA_LANE_3_QUAD_C_CTRL13r_t;
#define ANA_LANE_3_QUAD_C_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_CLR
#define ANA_LANE_3_QUAD_C_CTRL13r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_SET
#define ANA_LANE_3_QUAD_C_CTRL13r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_GET
#define ANA_LANE_3_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_3_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_3_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_3_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL13r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL13r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL13r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL14
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa80e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r (0x0001a80e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl14[1];
	uint32_t _ana_lane_3_quad_c_ctrl14;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_CLR(r) (r).ana_lane_3_quad_c_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_SET(r,d) (r).ana_lane_3_quad_c_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_GET(r) (r).ana_lane_3_quad_c_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_3_quad_c_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_3_quad_c_ctrl14[0]=(((r).ana_lane_3_quad_c_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_3_quad_c_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_3_quad_c_ctrl14[0]=(((r).ana_lane_3_quad_c_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_3_quad_c_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_c_ctrl14[0]=(((r).ana_lane_3_quad_c_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r,_r._ana_lane_3_quad_c_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r,_r._ana_lane_3_quad_c_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL14r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r
#define ANA_LANE_3_QUAD_C_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_t ANA_LANE_3_QUAD_C_CTRL14r_t;
#define ANA_LANE_3_QUAD_C_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_CLR
#define ANA_LANE_3_QUAD_C_CTRL14r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_SET
#define ANA_LANE_3_QUAD_C_CTRL14r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_GET
#define ANA_LANE_3_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_3_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_3_QUAD_C_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_3_QUAD_C_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_3_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_3_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL14r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL14r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL14r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL15
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa80f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r (0x0001a80f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl15[1];
	uint32_t _ana_lane_3_quad_c_ctrl15;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_CLR(r) (r).ana_lane_3_quad_c_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SET(r,d) (r).ana_lane_3_quad_c_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_GET(r) (r).ana_lane_3_quad_c_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_3_quad_c_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_3_quad_c_ctrl15[0]=(((r).ana_lane_3_quad_c_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_3_quad_c_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_3_quad_c_ctrl15[0]=(((r).ana_lane_3_quad_c_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_3_quad_c_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_3_quad_c_ctrl15[0]=(((r).ana_lane_3_quad_c_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_3_quad_c_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_c_ctrl15[0]=(((r).ana_lane_3_quad_c_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_3_quad_c_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_3_quad_c_ctrl15[0]=(((r).ana_lane_3_quad_c_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_3_quad_c_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_3_quad_c_ctrl15[0]=(((r).ana_lane_3_quad_c_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r,_r._ana_lane_3_quad_c_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r,_r._ana_lane_3_quad_c_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL15r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r
#define ANA_LANE_3_QUAD_C_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_t ANA_LANE_3_QUAD_C_CTRL15r_t;
#define ANA_LANE_3_QUAD_C_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_CLR
#define ANA_LANE_3_QUAD_C_CTRL15r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SET
#define ANA_LANE_3_QUAD_C_CTRL15r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_GET
#define ANA_LANE_3_QUAD_C_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_3_QUAD_C_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_3_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_3_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL15r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL15r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL15r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_CTRL16
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa810
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r (0x0001a810 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_ctrl16[1];
	uint32_t _ana_lane_3_quad_c_ctrl16;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_CLR(r) (r).ana_lane_3_quad_c_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_SET(r,d) (r).ana_lane_3_quad_c_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_GET(r) (r).ana_lane_3_quad_c_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_3_quad_c_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_3_quad_c_ctrl16[0]=(((r).ana_lane_3_quad_c_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_3_quad_c_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_3_quad_c_ctrl16[0]=(((r).ana_lane_3_quad_c_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r,_r._ana_lane_3_quad_c_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r,_r._ana_lane_3_quad_c_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_CTRL16r BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r
#define ANA_LANE_3_QUAD_C_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_t ANA_LANE_3_QUAD_C_CTRL16r_t;
#define ANA_LANE_3_QUAD_C_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_CLR
#define ANA_LANE_3_QUAD_C_CTRL16r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_SET
#define ANA_LANE_3_QUAD_C_CTRL16r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_GET
#define ANA_LANE_3_QUAD_C_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_3_QUAD_C_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_3_QUAD_C_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_3_QUAD_C_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_3_QUAD_C_CTRL16r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_CTRL16r
#define WRITE_ANA_LANE_3_QUAD_C_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_CTRL16r
#define MODIFY_ANA_LANE_3_QUAD_C_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_C_STATUS0
 * BLOCKS:   ANA_LANE_3_QUAD_C
 * REGADDR:  0xa820
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r (0x0001a820 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_C_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_c_status0[1];
	uint32_t _ana_lane_3_quad_c_status0;
} BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_CLR(r) (r).ana_lane_3_quad_c_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_SET(r,d) (r).ana_lane_3_quad_c_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_GET(r) (r).ana_lane_3_quad_c_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_3_quad_c_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_3_quad_c_status0[0]=(((r).ana_lane_3_quad_c_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_3_quad_c_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_3_quad_c_status0[0]=(((r).ana_lane_3_quad_c_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_C_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r,_r._ana_lane_3_quad_c_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r,_r._ana_lane_3_quad_c_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_C_STATUS0r BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r
#define ANA_LANE_3_QUAD_C_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_t ANA_LANE_3_QUAD_C_STATUS0r_t;
#define ANA_LANE_3_QUAD_C_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_CLR
#define ANA_LANE_3_QUAD_C_STATUS0r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_SET
#define ANA_LANE_3_QUAD_C_STATUS0r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_GET
#define ANA_LANE_3_QUAD_C_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_3_QUAD_C_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_3_QUAD_C_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_3_QUAD_C_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_3_QUAD_C_STATUS0r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_C_STATUS0r
#define WRITE_ANA_LANE_3_QUAD_C_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_C_STATUS0r
#define MODIFY_ANA_LANE_3_QUAD_C_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_C_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_C_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  CHIP_ID
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb000
 * DEVAD:    1
 * DESC:     Chip ID for Huracan
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CHIP_ID_15_0     
 *
 ******************************************************************************/
#define BCMI_HURACAN_CHIP_IDr (0x0001b000 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_CHIP_IDr_SIZE 4

/*
 * This structure should be used to declare and program CHIP_ID.
 *
 */
typedef union BCMI_HURACAN_CHIP_IDr_s {
	uint32_t v[1];
	uint32_t chip_id[1];
	uint32_t _chip_id;
} BCMI_HURACAN_CHIP_IDr_t;

#define BCMI_HURACAN_CHIP_IDr_CLR(r) (r).chip_id[0] = 0
#define BCMI_HURACAN_CHIP_IDr_SET(r,d) (r).chip_id[0] = d
#define BCMI_HURACAN_CHIP_IDr_GET(r) (r).chip_id[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_CHIP_IDr_CHIP_ID_15_0f_GET(r) (((r).chip_id[0]) & 0xffff)
#define BCMI_HURACAN_CHIP_IDr_CHIP_ID_15_0f_SET(r,f) (r).chip_id[0]=(((r).chip_id[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access CHIP_ID.
 *
 */
#define BCMI_HURACAN_READ_CHIP_IDr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_CHIP_IDr,_r._chip_id)
#define BCMI_HURACAN_WRITE_CHIP_IDr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_CHIP_IDr,_r._chip_id)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define CHIP_IDr BCMI_HURACAN_CHIP_IDr
#define CHIP_IDr_SIZE BCMI_HURACAN_CHIP_IDr_SIZE
typedef BCMI_HURACAN_CHIP_IDr_t CHIP_IDr_t;
#define CHIP_IDr_CLR BCMI_HURACAN_CHIP_IDr_CLR
#define CHIP_IDr_SET BCMI_HURACAN_CHIP_IDr_SET
#define CHIP_IDr_GET BCMI_HURACAN_CHIP_IDr_GET
#define CHIP_IDr_CHIP_ID_15_0f_GET BCMI_HURACAN_CHIP_IDr_CHIP_ID_15_0f_GET
#define CHIP_IDr_CHIP_ID_15_0f_SET BCMI_HURACAN_CHIP_IDr_CHIP_ID_15_0f_SET
#define READ_CHIP_IDr BCMI_HURACAN_READ_CHIP_IDr
#define WRITE_CHIP_IDr BCMI_HURACAN_WRITE_CHIP_IDr
#define MODIFY_CHIP_IDr BCMI_HURACAN_MODIFY_CHIP_IDr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_CHIP_IDr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  CHIP_REVISION
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb001
 * DEVAD:    1
 * DESC:     Rev ID for Huracan
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CHIP_REV         
 *     CHIP_ID_19_16    
 *
 ******************************************************************************/
#define BCMI_HURACAN_CHIP_REVISIONr (0x0001b001 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_CHIP_REVISIONr_SIZE 4

/*
 * This structure should be used to declare and program CHIP_REVISION.
 *
 */
typedef union BCMI_HURACAN_CHIP_REVISIONr_s {
	uint32_t v[1];
	uint32_t chip_revision[1];
	uint32_t _chip_revision;
} BCMI_HURACAN_CHIP_REVISIONr_t;

#define BCMI_HURACAN_CHIP_REVISIONr_CLR(r) (r).chip_revision[0] = 0
#define BCMI_HURACAN_CHIP_REVISIONr_SET(r,d) (r).chip_revision[0] = d
#define BCMI_HURACAN_CHIP_REVISIONr_GET(r) (r).chip_revision[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_CHIP_REVISIONr_CHIP_ID_19_16f_GET(r) ((((r).chip_revision[0]) >> 12) & 0xf)
#define BCMI_HURACAN_CHIP_REVISIONr_CHIP_ID_19_16f_SET(r,f) (r).chip_revision[0]=(((r).chip_revision[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_CHIP_REVISIONr_CHIP_REVf_GET(r) (((r).chip_revision[0]) & 0xff)
#define BCMI_HURACAN_CHIP_REVISIONr_CHIP_REVf_SET(r,f) (r).chip_revision[0]=(((r).chip_revision[0] & ~((uint32_t)0xff)) | (((uint32_t)f) & 0xff)) | (0xff << 16)

/*
 * These macros can be used to access CHIP_REVISION.
 *
 */
#define BCMI_HURACAN_READ_CHIP_REVISIONr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_CHIP_REVISIONr,_r._chip_revision)
#define BCMI_HURACAN_WRITE_CHIP_REVISIONr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_CHIP_REVISIONr,_r._chip_revision)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define CHIP_REVISIONr BCMI_HURACAN_CHIP_REVISIONr
#define CHIP_REVISIONr_SIZE BCMI_HURACAN_CHIP_REVISIONr_SIZE
typedef BCMI_HURACAN_CHIP_REVISIONr_t CHIP_REVISIONr_t;
#define CHIP_REVISIONr_CLR BCMI_HURACAN_CHIP_REVISIONr_CLR
#define CHIP_REVISIONr_SET BCMI_HURACAN_CHIP_REVISIONr_SET
#define CHIP_REVISIONr_GET BCMI_HURACAN_CHIP_REVISIONr_GET
#define CHIP_REVISIONr_CHIP_ID_19_16f_GET BCMI_HURACAN_CHIP_REVISIONr_CHIP_ID_19_16f_GET
#define CHIP_REVISIONr_CHIP_ID_19_16f_SET BCMI_HURACAN_CHIP_REVISIONr_CHIP_ID_19_16f_SET
#define CHIP_REVISIONr_CHIP_REVf_GET BCMI_HURACAN_CHIP_REVISIONr_CHIP_REVf_GET
#define CHIP_REVISIONr_CHIP_REVf_SET BCMI_HURACAN_CHIP_REVISIONr_CHIP_REVf_SET
#define READ_CHIP_REVISIONr BCMI_HURACAN_READ_CHIP_REVISIONr
#define WRITE_CHIP_REVISIONr BCMI_HURACAN_WRITE_CHIP_REVISIONr
#define MODIFY_CHIP_REVISIONr BCMI_HURACAN_MODIFY_CHIP_REVISIONr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_CHIP_REVISIONr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  GEN_CONTROL1
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb002
 * DEVAD:    1
 * DESC:     General control register 1.
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RESETB           
 *     ARB_RSTB         
 *     RESCAL_RSTB      
 *     RESCAL_RSTB_SC   
 *     OTP_RSTB         
 *     PVTMON_RSTB      
 *     REG_RSTB         
 *
 ******************************************************************************/
#define BCMI_HURACAN_GEN_CONTROL1r (0x00018002 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_GEN_CONTROL1r_SIZE 4

/*
 * This structure should be used to declare and program GEN_CONTROL1.
 *
 */
typedef union BCMI_HURACAN_GEN_CONTROL1r_s {
	uint32_t v[1];
	uint32_t gen_control1[1];
	uint32_t _gen_control1;
} BCMI_HURACAN_GEN_CONTROL1r_t;

#define BCMI_HURACAN_GEN_CONTROL1r_CLR(r) (r).gen_control1[0] = 0
#define BCMI_HURACAN_GEN_CONTROL1r_SET(r,d) (r).gen_control1[0] = d
#define BCMI_HURACAN_GEN_CONTROL1r_GET(r) (r).gen_control1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_GEN_CONTROL1r_REG_RSTBf_GET(r) ((((r).gen_control1[0]) >> 6) & 0x1)
#define BCMI_HURACAN_GEN_CONTROL1r_REG_RSTBf_SET(r,f) (r).gen_control1[0]=(((r).gen_control1[0] & ~((uint32_t)0x1 << 6)) | ((((uint32_t)f) & 0x1) << 6)) | (1 << (16 + 6))
#define BCMI_HURACAN_GEN_CONTROL1r_PVTMON_RSTBf_GET(r) ((((r).gen_control1[0]) >> 5) & 0x1)
#define BCMI_HURACAN_GEN_CONTROL1r_PVTMON_RSTBf_SET(r,f) (r).gen_control1[0]=(((r).gen_control1[0] & ~((uint32_t)0x1 << 5)) | ((((uint32_t)f) & 0x1) << 5)) | (1 << (16 + 5))
#define BCMI_HURACAN_GEN_CONTROL1r_OTP_RSTBf_GET(r) ((((r).gen_control1[0]) >> 4) & 0x1)
#define BCMI_HURACAN_GEN_CONTROL1r_OTP_RSTBf_SET(r,f) (r).gen_control1[0]=(((r).gen_control1[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_GEN_CONTROL1r_RESCAL_RSTB_SCf_GET(r) ((((r).gen_control1[0]) >> 3) & 0x1)
#define BCMI_HURACAN_GEN_CONTROL1r_RESCAL_RSTB_SCf_SET(r,f) (r).gen_control1[0]=(((r).gen_control1[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_GEN_CONTROL1r_RESCAL_RSTBf_GET(r) ((((r).gen_control1[0]) >> 2) & 0x1)
#define BCMI_HURACAN_GEN_CONTROL1r_RESCAL_RSTBf_SET(r,f) (r).gen_control1[0]=(((r).gen_control1[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_GEN_CONTROL1r_ARB_RSTBf_GET(r) ((((r).gen_control1[0]) >> 1) & 0x1)
#define BCMI_HURACAN_GEN_CONTROL1r_ARB_RSTBf_SET(r,f) (r).gen_control1[0]=(((r).gen_control1[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_GEN_CONTROL1r_RESETBf_GET(r) (((r).gen_control1[0]) & 0x1)
#define BCMI_HURACAN_GEN_CONTROL1r_RESETBf_SET(r,f) (r).gen_control1[0]=(((r).gen_control1[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access GEN_CONTROL1.
 *
 */
#define BCMI_HURACAN_READ_GEN_CONTROL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_GEN_CONTROL1r,_r._gen_control1)
#define BCMI_HURACAN_WRITE_GEN_CONTROL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_GEN_CONTROL1r,_r._gen_control1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define GEN_CONTROL1r BCMI_HURACAN_GEN_CONTROL1r
#define GEN_CONTROL1r_SIZE BCMI_HURACAN_GEN_CONTROL1r_SIZE
typedef BCMI_HURACAN_GEN_CONTROL1r_t GEN_CONTROL1r_t;
#define GEN_CONTROL1r_CLR BCMI_HURACAN_GEN_CONTROL1r_CLR
#define GEN_CONTROL1r_SET BCMI_HURACAN_GEN_CONTROL1r_SET
#define GEN_CONTROL1r_GET BCMI_HURACAN_GEN_CONTROL1r_GET
#define GEN_CONTROL1r_REG_RSTBf_GET BCMI_HURACAN_GEN_CONTROL1r_REG_RSTBf_GET
#define GEN_CONTROL1r_REG_RSTBf_SET BCMI_HURACAN_GEN_CONTROL1r_REG_RSTBf_SET
#define GEN_CONTROL1r_PVTMON_RSTBf_GET BCMI_HURACAN_GEN_CONTROL1r_PVTMON_RSTBf_GET
#define GEN_CONTROL1r_PVTMON_RSTBf_SET BCMI_HURACAN_GEN_CONTROL1r_PVTMON_RSTBf_SET
#define GEN_CONTROL1r_OTP_RSTBf_GET BCMI_HURACAN_GEN_CONTROL1r_OTP_RSTBf_GET
#define GEN_CONTROL1r_OTP_RSTBf_SET BCMI_HURACAN_GEN_CONTROL1r_OTP_RSTBf_SET
#define GEN_CONTROL1r_RESCAL_RSTB_SCf_GET BCMI_HURACAN_GEN_CONTROL1r_RESCAL_RSTB_SCf_GET
#define GEN_CONTROL1r_RESCAL_RSTB_SCf_SET BCMI_HURACAN_GEN_CONTROL1r_RESCAL_RSTB_SCf_SET
#define GEN_CONTROL1r_RESCAL_RSTBf_GET BCMI_HURACAN_GEN_CONTROL1r_RESCAL_RSTBf_GET
#define GEN_CONTROL1r_RESCAL_RSTBf_SET BCMI_HURACAN_GEN_CONTROL1r_RESCAL_RSTBf_SET
#define GEN_CONTROL1r_ARB_RSTBf_GET BCMI_HURACAN_GEN_CONTROL1r_ARB_RSTBf_GET
#define GEN_CONTROL1r_ARB_RSTBf_SET BCMI_HURACAN_GEN_CONTROL1r_ARB_RSTBf_SET
#define GEN_CONTROL1r_RESETBf_GET BCMI_HURACAN_GEN_CONTROL1r_RESETBf_GET
#define GEN_CONTROL1r_RESETBf_SET BCMI_HURACAN_GEN_CONTROL1r_RESETBf_SET
#define READ_GEN_CONTROL1r BCMI_HURACAN_READ_GEN_CONTROL1r
#define WRITE_GEN_CONTROL1r BCMI_HURACAN_WRITE_GEN_CONTROL1r
#define MODIFY_GEN_CONTROL1r BCMI_HURACAN_MODIFY_GEN_CONTROL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_GEN_CONTROL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  MDIO_PHYAD_CTRL
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb003
 * DEVAD:    1
 * DESC:     MDIO Phy Address Control
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     MDIO_BRDCST_EN   
 *     MDIO_MULTI_EN    
 *     MULTI_PORT_PHYAD 
 *
 ******************************************************************************/
#define BCMI_HURACAN_MDIO_PHYAD_CTRLr (0x0001b003 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_MDIO_PHYAD_CTRLr_SIZE 4

/*
 * This structure should be used to declare and program MDIO_PHYAD_CTRL.
 *
 */
typedef union BCMI_HURACAN_MDIO_PHYAD_CTRLr_s {
	uint32_t v[1];
	uint32_t mdio_phyad_ctrl[1];
	uint32_t _mdio_phyad_ctrl;
} BCMI_HURACAN_MDIO_PHYAD_CTRLr_t;

#define BCMI_HURACAN_MDIO_PHYAD_CTRLr_CLR(r) (r).mdio_phyad_ctrl[0] = 0
#define BCMI_HURACAN_MDIO_PHYAD_CTRLr_SET(r,d) (r).mdio_phyad_ctrl[0] = d
#define BCMI_HURACAN_MDIO_PHYAD_CTRLr_GET(r) (r).mdio_phyad_ctrl[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_MDIO_PHYAD_CTRLr_MULTI_PORT_PHYADf_GET(r) ((((r).mdio_phyad_ctrl[0]) >> 2) & 0x1f)
#define BCMI_HURACAN_MDIO_PHYAD_CTRLr_MULTI_PORT_PHYADf_SET(r,f) (r).mdio_phyad_ctrl[0]=(((r).mdio_phyad_ctrl[0] & ~((uint32_t)0x1f << 2)) | ((((uint32_t)f) & 0x1f) << 2)) | (31 << (16 + 2))
#define BCMI_HURACAN_MDIO_PHYAD_CTRLr_MDIO_MULTI_ENf_GET(r) ((((r).mdio_phyad_ctrl[0]) >> 1) & 0x1)
#define BCMI_HURACAN_MDIO_PHYAD_CTRLr_MDIO_MULTI_ENf_SET(r,f) (r).mdio_phyad_ctrl[0]=(((r).mdio_phyad_ctrl[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_MDIO_PHYAD_CTRLr_MDIO_BRDCST_ENf_GET(r) (((r).mdio_phyad_ctrl[0]) & 0x1)
#define BCMI_HURACAN_MDIO_PHYAD_CTRLr_MDIO_BRDCST_ENf_SET(r,f) (r).mdio_phyad_ctrl[0]=(((r).mdio_phyad_ctrl[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access MDIO_PHYAD_CTRL.
 *
 */
#define BCMI_HURACAN_READ_MDIO_PHYAD_CTRLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_MDIO_PHYAD_CTRLr,_r._mdio_phyad_ctrl)
#define BCMI_HURACAN_WRITE_MDIO_PHYAD_CTRLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_MDIO_PHYAD_CTRLr,_r._mdio_phyad_ctrl)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define MDIO_PHYAD_CTRLr BCMI_HURACAN_MDIO_PHYAD_CTRLr
#define MDIO_PHYAD_CTRLr_SIZE BCMI_HURACAN_MDIO_PHYAD_CTRLr_SIZE
typedef BCMI_HURACAN_MDIO_PHYAD_CTRLr_t MDIO_PHYAD_CTRLr_t;
#define MDIO_PHYAD_CTRLr_CLR BCMI_HURACAN_MDIO_PHYAD_CTRLr_CLR
#define MDIO_PHYAD_CTRLr_SET BCMI_HURACAN_MDIO_PHYAD_CTRLr_SET
#define MDIO_PHYAD_CTRLr_GET BCMI_HURACAN_MDIO_PHYAD_CTRLr_GET
#define MDIO_PHYAD_CTRLr_MULTI_PORT_PHYADf_GET BCMI_HURACAN_MDIO_PHYAD_CTRLr_MULTI_PORT_PHYADf_GET
#define MDIO_PHYAD_CTRLr_MULTI_PORT_PHYADf_SET BCMI_HURACAN_MDIO_PHYAD_CTRLr_MULTI_PORT_PHYADf_SET
#define MDIO_PHYAD_CTRLr_MDIO_MULTI_ENf_GET BCMI_HURACAN_MDIO_PHYAD_CTRLr_MDIO_MULTI_ENf_GET
#define MDIO_PHYAD_CTRLr_MDIO_MULTI_ENf_SET BCMI_HURACAN_MDIO_PHYAD_CTRLr_MDIO_MULTI_ENf_SET
#define MDIO_PHYAD_CTRLr_MDIO_BRDCST_ENf_GET BCMI_HURACAN_MDIO_PHYAD_CTRLr_MDIO_BRDCST_ENf_GET
#define MDIO_PHYAD_CTRLr_MDIO_BRDCST_ENf_SET BCMI_HURACAN_MDIO_PHYAD_CTRLr_MDIO_BRDCST_ENf_SET
#define READ_MDIO_PHYAD_CTRLr BCMI_HURACAN_READ_MDIO_PHYAD_CTRLr
#define WRITE_MDIO_PHYAD_CTRLr BCMI_HURACAN_WRITE_MDIO_PHYAD_CTRLr
#define MODIFY_MDIO_PHYAD_CTRLr BCMI_HURACAN_MODIFY_MDIO_PHYAD_CTRLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_MDIO_PHYAD_CTRLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  GPIO_CTRL
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb004
 * DEVAD:    1
 * DESC:     GPIO overload control
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     GPIO_1_OUT_SEL   
 *
 ******************************************************************************/
#define BCMI_HURACAN_GPIO_CTRLr (0x0001b004 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_GPIO_CTRLr_SIZE 4

/*
 * This structure should be used to declare and program GPIO_CTRL.
 *
 */
typedef union BCMI_HURACAN_GPIO_CTRLr_s {
	uint32_t v[1];
	uint32_t gpio_ctrl[1];
	uint32_t _gpio_ctrl;
} BCMI_HURACAN_GPIO_CTRLr_t;

#define BCMI_HURACAN_GPIO_CTRLr_CLR(r) (r).gpio_ctrl[0] = 0
#define BCMI_HURACAN_GPIO_CTRLr_SET(r,d) (r).gpio_ctrl[0] = d
#define BCMI_HURACAN_GPIO_CTRLr_GET(r) (r).gpio_ctrl[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_GPIO_CTRLr_GPIO_1_OUT_SELf_GET(r) (((r).gpio_ctrl[0]) & 0x7)
#define BCMI_HURACAN_GPIO_CTRLr_GPIO_1_OUT_SELf_SET(r,f) (r).gpio_ctrl[0]=(((r).gpio_ctrl[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access GPIO_CTRL.
 *
 */
#define BCMI_HURACAN_READ_GPIO_CTRLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_GPIO_CTRLr,_r._gpio_ctrl)
#define BCMI_HURACAN_WRITE_GPIO_CTRLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_GPIO_CTRLr,_r._gpio_ctrl)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define GPIO_CTRLr BCMI_HURACAN_GPIO_CTRLr
#define GPIO_CTRLr_SIZE BCMI_HURACAN_GPIO_CTRLr_SIZE
typedef BCMI_HURACAN_GPIO_CTRLr_t GPIO_CTRLr_t;
#define GPIO_CTRLr_CLR BCMI_HURACAN_GPIO_CTRLr_CLR
#define GPIO_CTRLr_SET BCMI_HURACAN_GPIO_CTRLr_SET
#define GPIO_CTRLr_GET BCMI_HURACAN_GPIO_CTRLr_GET
#define GPIO_CTRLr_GPIO_1_OUT_SELf_GET BCMI_HURACAN_GPIO_CTRLr_GPIO_1_OUT_SELf_GET
#define GPIO_CTRLr_GPIO_1_OUT_SELf_SET BCMI_HURACAN_GPIO_CTRLr_GPIO_1_OUT_SELf_SET
#define READ_GPIO_CTRLr BCMI_HURACAN_READ_GPIO_CTRLr
#define WRITE_GPIO_CTRLr BCMI_HURACAN_WRITE_GPIO_CTRLr
#define MODIFY_GPIO_CTRLr BCMI_HURACAN_MODIFY_GPIO_CTRLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_GPIO_CTRLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  HEARTBEAT_CTRL
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb005
 * DEVAD:    1
 * DESC:     1us heartbeat Control
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     HEARTBEAT_1US_COUNT 
 *
 ******************************************************************************/
#define BCMI_HURACAN_HEARTBEAT_CTRLr (0x0001b005 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_HEARTBEAT_CTRLr_SIZE 4

/*
 * This structure should be used to declare and program HEARTBEAT_CTRL.
 *
 */
typedef union BCMI_HURACAN_HEARTBEAT_CTRLr_s {
	uint32_t v[1];
	uint32_t heartbeat_ctrl[1];
	uint32_t _heartbeat_ctrl;
} BCMI_HURACAN_HEARTBEAT_CTRLr_t;

#define BCMI_HURACAN_HEARTBEAT_CTRLr_CLR(r) (r).heartbeat_ctrl[0] = 0
#define BCMI_HURACAN_HEARTBEAT_CTRLr_SET(r,d) (r).heartbeat_ctrl[0] = d
#define BCMI_HURACAN_HEARTBEAT_CTRLr_GET(r) (r).heartbeat_ctrl[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_HEARTBEAT_CTRLr_HEARTBEAT_1US_COUNTf_GET(r) (((r).heartbeat_ctrl[0]) & 0xff)
#define BCMI_HURACAN_HEARTBEAT_CTRLr_HEARTBEAT_1US_COUNTf_SET(r,f) (r).heartbeat_ctrl[0]=(((r).heartbeat_ctrl[0] & ~((uint32_t)0xff)) | (((uint32_t)f) & 0xff)) | (0xff << 16)

/*
 * These macros can be used to access HEARTBEAT_CTRL.
 *
 */
#define BCMI_HURACAN_READ_HEARTBEAT_CTRLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_HEARTBEAT_CTRLr,_r._heartbeat_ctrl)
#define BCMI_HURACAN_WRITE_HEARTBEAT_CTRLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_HEARTBEAT_CTRLr,_r._heartbeat_ctrl)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define HEARTBEAT_CTRLr BCMI_HURACAN_HEARTBEAT_CTRLr
#define HEARTBEAT_CTRLr_SIZE BCMI_HURACAN_HEARTBEAT_CTRLr_SIZE
typedef BCMI_HURACAN_HEARTBEAT_CTRLr_t HEARTBEAT_CTRLr_t;
#define HEARTBEAT_CTRLr_CLR BCMI_HURACAN_HEARTBEAT_CTRLr_CLR
#define HEARTBEAT_CTRLr_SET BCMI_HURACAN_HEARTBEAT_CTRLr_SET
#define HEARTBEAT_CTRLr_GET BCMI_HURACAN_HEARTBEAT_CTRLr_GET
#define HEARTBEAT_CTRLr_HEARTBEAT_1US_COUNTf_GET BCMI_HURACAN_HEARTBEAT_CTRLr_HEARTBEAT_1US_COUNTf_GET
#define HEARTBEAT_CTRLr_HEARTBEAT_1US_COUNTf_SET BCMI_HURACAN_HEARTBEAT_CTRLr_HEARTBEAT_1US_COUNTf_SET
#define READ_HEARTBEAT_CTRLr BCMI_HURACAN_READ_HEARTBEAT_CTRLr
#define WRITE_HEARTBEAT_CTRLr BCMI_HURACAN_WRITE_HEARTBEAT_CTRLr
#define MODIFY_HEARTBEAT_CTRLr BCMI_HURACAN_MODIFY_HEARTBEAT_CTRLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_HEARTBEAT_CTRLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  OTP_CON_CTL
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb010
 * DEVAD:    1
 * DESC:     one time programmable controller register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     I_OTP_SFT_RESET  
 *
 ******************************************************************************/
#define BCMI_HURACAN_OTP_CON_CTLr (0x0001b010 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_OTP_CON_CTLr_SIZE 4

/*
 * This structure should be used to declare and program OTP_CON_CTL.
 *
 */
typedef union BCMI_HURACAN_OTP_CON_CTLr_s {
	uint32_t v[1];
	uint32_t otp_con_ctl[1];
	uint32_t _otp_con_ctl;
} BCMI_HURACAN_OTP_CON_CTLr_t;

#define BCMI_HURACAN_OTP_CON_CTLr_CLR(r) (r).otp_con_ctl[0] = 0
#define BCMI_HURACAN_OTP_CON_CTLr_SET(r,d) (r).otp_con_ctl[0] = d
#define BCMI_HURACAN_OTP_CON_CTLr_GET(r) (r).otp_con_ctl[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_OTP_CON_CTLr_I_OTP_SFT_RESETf_GET(r) (((r).otp_con_ctl[0]) & 0x1)
#define BCMI_HURACAN_OTP_CON_CTLr_I_OTP_SFT_RESETf_SET(r,f) (r).otp_con_ctl[0]=(((r).otp_con_ctl[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access OTP_CON_CTL.
 *
 */
#define BCMI_HURACAN_READ_OTP_CON_CTLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_OTP_CON_CTLr,_r._otp_con_ctl)
#define BCMI_HURACAN_WRITE_OTP_CON_CTLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_OTP_CON_CTLr,_r._otp_con_ctl)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define OTP_CON_CTLr BCMI_HURACAN_OTP_CON_CTLr
#define OTP_CON_CTLr_SIZE BCMI_HURACAN_OTP_CON_CTLr_SIZE
typedef BCMI_HURACAN_OTP_CON_CTLr_t OTP_CON_CTLr_t;
#define OTP_CON_CTLr_CLR BCMI_HURACAN_OTP_CON_CTLr_CLR
#define OTP_CON_CTLr_SET BCMI_HURACAN_OTP_CON_CTLr_SET
#define OTP_CON_CTLr_GET BCMI_HURACAN_OTP_CON_CTLr_GET
#define OTP_CON_CTLr_I_OTP_SFT_RESETf_GET BCMI_HURACAN_OTP_CON_CTLr_I_OTP_SFT_RESETf_GET
#define OTP_CON_CTLr_I_OTP_SFT_RESETf_SET BCMI_HURACAN_OTP_CON_CTLr_I_OTP_SFT_RESETf_SET
#define READ_OTP_CON_CTLr BCMI_HURACAN_READ_OTP_CON_CTLr
#define WRITE_OTP_CON_CTLr BCMI_HURACAN_WRITE_OTP_CON_CTLr
#define MODIFY_OTP_CON_CTLr BCMI_HURACAN_MODIFY_OTP_CON_CTLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_OTP_CON_CTLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  OTP_CON_STS
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb011
 * DEVAD:    1
 * DESC:     one time programmable memory status
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     OTP_FOUT_DONE    
 *
 ******************************************************************************/
#define BCMI_HURACAN_OTP_CON_STSr (0x0001b011 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_OTP_CON_STSr_SIZE 4

/*
 * This structure should be used to declare and program OTP_CON_STS.
 *
 */
typedef union BCMI_HURACAN_OTP_CON_STSr_s {
	uint32_t v[1];
	uint32_t otp_con_sts[1];
	uint32_t _otp_con_sts;
} BCMI_HURACAN_OTP_CON_STSr_t;

#define BCMI_HURACAN_OTP_CON_STSr_CLR(r) (r).otp_con_sts[0] = 0
#define BCMI_HURACAN_OTP_CON_STSr_SET(r,d) (r).otp_con_sts[0] = d
#define BCMI_HURACAN_OTP_CON_STSr_GET(r) (r).otp_con_sts[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_OTP_CON_STSr_OTP_FOUT_DONEf_GET(r) (((r).otp_con_sts[0]) & 0x1)
#define BCMI_HURACAN_OTP_CON_STSr_OTP_FOUT_DONEf_SET(r,f) (r).otp_con_sts[0]=(((r).otp_con_sts[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access OTP_CON_STS.
 *
 */
#define BCMI_HURACAN_READ_OTP_CON_STSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_OTP_CON_STSr,_r._otp_con_sts)
#define BCMI_HURACAN_WRITE_OTP_CON_STSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_OTP_CON_STSr,_r._otp_con_sts)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define OTP_CON_STSr BCMI_HURACAN_OTP_CON_STSr
#define OTP_CON_STSr_SIZE BCMI_HURACAN_OTP_CON_STSr_SIZE
typedef BCMI_HURACAN_OTP_CON_STSr_t OTP_CON_STSr_t;
#define OTP_CON_STSr_CLR BCMI_HURACAN_OTP_CON_STSr_CLR
#define OTP_CON_STSr_SET BCMI_HURACAN_OTP_CON_STSr_SET
#define OTP_CON_STSr_GET BCMI_HURACAN_OTP_CON_STSr_GET
#define OTP_CON_STSr_OTP_FOUT_DONEf_GET BCMI_HURACAN_OTP_CON_STSr_OTP_FOUT_DONEf_GET
#define OTP_CON_STSr_OTP_FOUT_DONEf_SET BCMI_HURACAN_OTP_CON_STSr_OTP_FOUT_DONEf_SET
#define READ_OTP_CON_STSr BCMI_HURACAN_READ_OTP_CON_STSr
#define WRITE_OTP_CON_STSr BCMI_HURACAN_WRITE_OTP_CON_STSr
#define MODIFY_OTP_CON_STSr BCMI_HURACAN_MODIFY_OTP_CON_STSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_OTP_CON_STSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  OTP_FOUT0
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb012
 * DEVAD:    1
 * DESC:     the fout bits from OTP memory, debug related
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     FOUT_15_0        
 *
 ******************************************************************************/
#define BCMI_HURACAN_OTP_FOUT0r (0x0001b012 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_OTP_FOUT0r_SIZE 4

/*
 * This structure should be used to declare and program OTP_FOUT0.
 *
 */
typedef union BCMI_HURACAN_OTP_FOUT0r_s {
	uint32_t v[1];
	uint32_t otp_fout0[1];
	uint32_t _otp_fout0;
} BCMI_HURACAN_OTP_FOUT0r_t;

#define BCMI_HURACAN_OTP_FOUT0r_CLR(r) (r).otp_fout0[0] = 0
#define BCMI_HURACAN_OTP_FOUT0r_SET(r,d) (r).otp_fout0[0] = d
#define BCMI_HURACAN_OTP_FOUT0r_GET(r) (r).otp_fout0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_OTP_FOUT0r_FOUT_15_0f_GET(r) (((r).otp_fout0[0]) & 0xffff)
#define BCMI_HURACAN_OTP_FOUT0r_FOUT_15_0f_SET(r,f) (r).otp_fout0[0]=(((r).otp_fout0[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access OTP_FOUT0.
 *
 */
#define BCMI_HURACAN_READ_OTP_FOUT0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_OTP_FOUT0r,_r._otp_fout0)
#define BCMI_HURACAN_WRITE_OTP_FOUT0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_OTP_FOUT0r,_r._otp_fout0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define OTP_FOUT0r BCMI_HURACAN_OTP_FOUT0r
#define OTP_FOUT0r_SIZE BCMI_HURACAN_OTP_FOUT0r_SIZE
typedef BCMI_HURACAN_OTP_FOUT0r_t OTP_FOUT0r_t;
#define OTP_FOUT0r_CLR BCMI_HURACAN_OTP_FOUT0r_CLR
#define OTP_FOUT0r_SET BCMI_HURACAN_OTP_FOUT0r_SET
#define OTP_FOUT0r_GET BCMI_HURACAN_OTP_FOUT0r_GET
#define OTP_FOUT0r_FOUT_15_0f_GET BCMI_HURACAN_OTP_FOUT0r_FOUT_15_0f_GET
#define OTP_FOUT0r_FOUT_15_0f_SET BCMI_HURACAN_OTP_FOUT0r_FOUT_15_0f_SET
#define READ_OTP_FOUT0r BCMI_HURACAN_READ_OTP_FOUT0r
#define WRITE_OTP_FOUT0r BCMI_HURACAN_WRITE_OTP_FOUT0r
#define MODIFY_OTP_FOUT0r BCMI_HURACAN_MODIFY_OTP_FOUT0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_OTP_FOUT0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  OTP_FOUT1
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb013
 * DEVAD:    1
 * DESC:     the fout bits from OTP memory, debug related
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     FOUT_31_16       
 *
 ******************************************************************************/
#define BCMI_HURACAN_OTP_FOUT1r (0x0001b013 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_OTP_FOUT1r_SIZE 4

/*
 * This structure should be used to declare and program OTP_FOUT1.
 *
 */
typedef union BCMI_HURACAN_OTP_FOUT1r_s {
	uint32_t v[1];
	uint32_t otp_fout1[1];
	uint32_t _otp_fout1;
} BCMI_HURACAN_OTP_FOUT1r_t;

#define BCMI_HURACAN_OTP_FOUT1r_CLR(r) (r).otp_fout1[0] = 0
#define BCMI_HURACAN_OTP_FOUT1r_SET(r,d) (r).otp_fout1[0] = d
#define BCMI_HURACAN_OTP_FOUT1r_GET(r) (r).otp_fout1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_OTP_FOUT1r_FOUT_31_16f_GET(r) (((r).otp_fout1[0]) & 0xffff)
#define BCMI_HURACAN_OTP_FOUT1r_FOUT_31_16f_SET(r,f) (r).otp_fout1[0]=(((r).otp_fout1[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access OTP_FOUT1.
 *
 */
#define BCMI_HURACAN_READ_OTP_FOUT1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_OTP_FOUT1r,_r._otp_fout1)
#define BCMI_HURACAN_WRITE_OTP_FOUT1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_OTP_FOUT1r,_r._otp_fout1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define OTP_FOUT1r BCMI_HURACAN_OTP_FOUT1r
#define OTP_FOUT1r_SIZE BCMI_HURACAN_OTP_FOUT1r_SIZE
typedef BCMI_HURACAN_OTP_FOUT1r_t OTP_FOUT1r_t;
#define OTP_FOUT1r_CLR BCMI_HURACAN_OTP_FOUT1r_CLR
#define OTP_FOUT1r_SET BCMI_HURACAN_OTP_FOUT1r_SET
#define OTP_FOUT1r_GET BCMI_HURACAN_OTP_FOUT1r_GET
#define OTP_FOUT1r_FOUT_31_16f_GET BCMI_HURACAN_OTP_FOUT1r_FOUT_31_16f_GET
#define OTP_FOUT1r_FOUT_31_16f_SET BCMI_HURACAN_OTP_FOUT1r_FOUT_31_16f_SET
#define READ_OTP_FOUT1r BCMI_HURACAN_READ_OTP_FOUT1r
#define WRITE_OTP_FOUT1r BCMI_HURACAN_WRITE_OTP_FOUT1r
#define MODIFY_OTP_FOUT1r BCMI_HURACAN_MODIFY_OTP_FOUT1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_OTP_FOUT1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  PVTMON_CNTL0
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb020
 * DEVAD:    1
 * DESC:     process voltage temperature sensor controls
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTRL_I_PWRDN     
 *     CTRL_I_VAVSMON   
 *     CTRL_I_ADC_RESETB 
 *     CTRL_I_PVTMON_SEL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_PVTMON_CNTL0r (0x0001b020 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_PVTMON_CNTL0r_SIZE 4

/*
 * This structure should be used to declare and program PVTMON_CNTL0.
 *
 */
typedef union BCMI_HURACAN_PVTMON_CNTL0r_s {
	uint32_t v[1];
	uint32_t pvtmon_cntl0[1];
	uint32_t _pvtmon_cntl0;
} BCMI_HURACAN_PVTMON_CNTL0r_t;

#define BCMI_HURACAN_PVTMON_CNTL0r_CLR(r) (r).pvtmon_cntl0[0] = 0
#define BCMI_HURACAN_PVTMON_CNTL0r_SET(r,d) (r).pvtmon_cntl0[0] = d
#define BCMI_HURACAN_PVTMON_CNTL0r_GET(r) (r).pvtmon_cntl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_PVTMON_SELf_GET(r) ((((r).pvtmon_cntl0[0]) >> 4) & 0x7)
#define BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_PVTMON_SELf_SET(r,f) (r).pvtmon_cntl0[0]=(((r).pvtmon_cntl0[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_ADC_RESETBf_GET(r) ((((r).pvtmon_cntl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_ADC_RESETBf_SET(r,f) (r).pvtmon_cntl0[0]=(((r).pvtmon_cntl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_VAVSMONf_GET(r) ((((r).pvtmon_cntl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_VAVSMONf_SET(r,f) (r).pvtmon_cntl0[0]=(((r).pvtmon_cntl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_PWRDNf_GET(r) (((r).pvtmon_cntl0[0]) & 0x1)
#define BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_PWRDNf_SET(r,f) (r).pvtmon_cntl0[0]=(((r).pvtmon_cntl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access PVTMON_CNTL0.
 *
 */
#define BCMI_HURACAN_READ_PVTMON_CNTL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_PVTMON_CNTL0r,_r._pvtmon_cntl0)
#define BCMI_HURACAN_WRITE_PVTMON_CNTL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_PVTMON_CNTL0r,_r._pvtmon_cntl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define PVTMON_CNTL0r BCMI_HURACAN_PVTMON_CNTL0r
#define PVTMON_CNTL0r_SIZE BCMI_HURACAN_PVTMON_CNTL0r_SIZE
typedef BCMI_HURACAN_PVTMON_CNTL0r_t PVTMON_CNTL0r_t;
#define PVTMON_CNTL0r_CLR BCMI_HURACAN_PVTMON_CNTL0r_CLR
#define PVTMON_CNTL0r_SET BCMI_HURACAN_PVTMON_CNTL0r_SET
#define PVTMON_CNTL0r_GET BCMI_HURACAN_PVTMON_CNTL0r_GET
#define PVTMON_CNTL0r_CTRL_I_PVTMON_SELf_GET BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_PVTMON_SELf_GET
#define PVTMON_CNTL0r_CTRL_I_PVTMON_SELf_SET BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_PVTMON_SELf_SET
#define PVTMON_CNTL0r_CTRL_I_ADC_RESETBf_GET BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_ADC_RESETBf_GET
#define PVTMON_CNTL0r_CTRL_I_ADC_RESETBf_SET BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_ADC_RESETBf_SET
#define PVTMON_CNTL0r_CTRL_I_VAVSMONf_GET BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_VAVSMONf_GET
#define PVTMON_CNTL0r_CTRL_I_VAVSMONf_SET BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_VAVSMONf_SET
#define PVTMON_CNTL0r_CTRL_I_PWRDNf_GET BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_PWRDNf_GET
#define PVTMON_CNTL0r_CTRL_I_PWRDNf_SET BCMI_HURACAN_PVTMON_CNTL0r_CTRL_I_PWRDNf_SET
#define READ_PVTMON_CNTL0r BCMI_HURACAN_READ_PVTMON_CNTL0r
#define WRITE_PVTMON_CNTL0r BCMI_HURACAN_WRITE_PVTMON_CNTL0r
#define MODIFY_PVTMON_CNTL0r BCMI_HURACAN_MODIFY_PVTMON_CNTL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_PVTMON_CNTL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  PVTMON_CNTL1
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb021
 * DEVAD:    1
 * DESC:     process voltage temperature sensor controls
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTRL_16_16_CON_PAD 
 *     CTRL_17_17_BURNIN_EN 
 *     CTRL_27_27_DAC_RESET 
 *     CTRL_28_28_DAC_SET 
 *     CTRL_23_20_VAVSMON_REFADJ_MIN0 
 *     CTRL_26_24_VAVSMON_REFADJ_MIN1 
 *     CTRL_18_RSVD     
 *     CTRL_31_29_VAVSMON_REFADJ_MAX 
 *     CTRL_19_RSVD     
 *
 ******************************************************************************/
#define BCMI_HURACAN_PVTMON_CNTL1r (0x0001b021 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_PVTMON_CNTL1r_SIZE 4

/*
 * This structure should be used to declare and program PVTMON_CNTL1.
 *
 */
typedef union BCMI_HURACAN_PVTMON_CNTL1r_s {
	uint32_t v[1];
	uint32_t pvtmon_cntl1[1];
	uint32_t _pvtmon_cntl1;
} BCMI_HURACAN_PVTMON_CNTL1r_t;

#define BCMI_HURACAN_PVTMON_CNTL1r_CLR(r) (r).pvtmon_cntl1[0] = 0
#define BCMI_HURACAN_PVTMON_CNTL1r_SET(r,d) (r).pvtmon_cntl1[0] = d
#define BCMI_HURACAN_PVTMON_CNTL1r_GET(r) (r).pvtmon_cntl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_19_RSVDf_GET(r) ((((r).pvtmon_cntl1[0]) >> 15) & 0x1)
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_19_RSVDf_SET(r,f) (r).pvtmon_cntl1[0]=(((r).pvtmon_cntl1[0] & ~((uint32_t)0x1 << 15)) | ((((uint32_t)f) & 0x1) << 15)) | (1 << (16 + 15))
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_31_29_VAVSMON_REFADJ_MAXf_GET(r) ((((r).pvtmon_cntl1[0]) >> 12) & 0x7)
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_31_29_VAVSMON_REFADJ_MAXf_SET(r,f) (r).pvtmon_cntl1[0]=(((r).pvtmon_cntl1[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_18_RSVDf_GET(r) ((((r).pvtmon_cntl1[0]) >> 11) & 0x1)
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_18_RSVDf_SET(r,f) (r).pvtmon_cntl1[0]=(((r).pvtmon_cntl1[0] & ~((uint32_t)0x1 << 11)) | ((((uint32_t)f) & 0x1) << 11)) | (1 << (16 + 11))
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_26_24_VAVSMON_REFADJ_MIN1f_GET(r) ((((r).pvtmon_cntl1[0]) >> 8) & 0x7)
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_26_24_VAVSMON_REFADJ_MIN1f_SET(r,f) (r).pvtmon_cntl1[0]=(((r).pvtmon_cntl1[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_23_20_VAVSMON_REFADJ_MIN0f_GET(r) ((((r).pvtmon_cntl1[0]) >> 4) & 0xf)
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_23_20_VAVSMON_REFADJ_MIN0f_SET(r,f) (r).pvtmon_cntl1[0]=(((r).pvtmon_cntl1[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_28_28_DAC_SETf_GET(r) ((((r).pvtmon_cntl1[0]) >> 3) & 0x1)
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_28_28_DAC_SETf_SET(r,f) (r).pvtmon_cntl1[0]=(((r).pvtmon_cntl1[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_27_27_DAC_RESETf_GET(r) ((((r).pvtmon_cntl1[0]) >> 2) & 0x1)
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_27_27_DAC_RESETf_SET(r,f) (r).pvtmon_cntl1[0]=(((r).pvtmon_cntl1[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_17_17_BURNIN_ENf_GET(r) ((((r).pvtmon_cntl1[0]) >> 1) & 0x1)
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_17_17_BURNIN_ENf_SET(r,f) (r).pvtmon_cntl1[0]=(((r).pvtmon_cntl1[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_16_16_CON_PADf_GET(r) (((r).pvtmon_cntl1[0]) & 0x1)
#define BCMI_HURACAN_PVTMON_CNTL1r_CTRL_16_16_CON_PADf_SET(r,f) (r).pvtmon_cntl1[0]=(((r).pvtmon_cntl1[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access PVTMON_CNTL1.
 *
 */
#define BCMI_HURACAN_READ_PVTMON_CNTL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_PVTMON_CNTL1r,_r._pvtmon_cntl1)
#define BCMI_HURACAN_WRITE_PVTMON_CNTL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_PVTMON_CNTL1r,_r._pvtmon_cntl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define PVTMON_CNTL1r BCMI_HURACAN_PVTMON_CNTL1r
#define PVTMON_CNTL1r_SIZE BCMI_HURACAN_PVTMON_CNTL1r_SIZE
typedef BCMI_HURACAN_PVTMON_CNTL1r_t PVTMON_CNTL1r_t;
#define PVTMON_CNTL1r_CLR BCMI_HURACAN_PVTMON_CNTL1r_CLR
#define PVTMON_CNTL1r_SET BCMI_HURACAN_PVTMON_CNTL1r_SET
#define PVTMON_CNTL1r_GET BCMI_HURACAN_PVTMON_CNTL1r_GET
#define PVTMON_CNTL1r_CTRL_19_RSVDf_GET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_19_RSVDf_GET
#define PVTMON_CNTL1r_CTRL_19_RSVDf_SET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_19_RSVDf_SET
#define PVTMON_CNTL1r_CTRL_31_29_VAVSMON_REFADJ_MAXf_GET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_31_29_VAVSMON_REFADJ_MAXf_GET
#define PVTMON_CNTL1r_CTRL_31_29_VAVSMON_REFADJ_MAXf_SET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_31_29_VAVSMON_REFADJ_MAXf_SET
#define PVTMON_CNTL1r_CTRL_18_RSVDf_GET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_18_RSVDf_GET
#define PVTMON_CNTL1r_CTRL_18_RSVDf_SET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_18_RSVDf_SET
#define PVTMON_CNTL1r_CTRL_26_24_VAVSMON_REFADJ_MIN1f_GET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_26_24_VAVSMON_REFADJ_MIN1f_GET
#define PVTMON_CNTL1r_CTRL_26_24_VAVSMON_REFADJ_MIN1f_SET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_26_24_VAVSMON_REFADJ_MIN1f_SET
#define PVTMON_CNTL1r_CTRL_23_20_VAVSMON_REFADJ_MIN0f_GET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_23_20_VAVSMON_REFADJ_MIN0f_GET
#define PVTMON_CNTL1r_CTRL_23_20_VAVSMON_REFADJ_MIN0f_SET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_23_20_VAVSMON_REFADJ_MIN0f_SET
#define PVTMON_CNTL1r_CTRL_28_28_DAC_SETf_GET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_28_28_DAC_SETf_GET
#define PVTMON_CNTL1r_CTRL_28_28_DAC_SETf_SET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_28_28_DAC_SETf_SET
#define PVTMON_CNTL1r_CTRL_27_27_DAC_RESETf_GET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_27_27_DAC_RESETf_GET
#define PVTMON_CNTL1r_CTRL_27_27_DAC_RESETf_SET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_27_27_DAC_RESETf_SET
#define PVTMON_CNTL1r_CTRL_17_17_BURNIN_ENf_GET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_17_17_BURNIN_ENf_GET
#define PVTMON_CNTL1r_CTRL_17_17_BURNIN_ENf_SET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_17_17_BURNIN_ENf_SET
#define PVTMON_CNTL1r_CTRL_16_16_CON_PADf_GET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_16_16_CON_PADf_GET
#define PVTMON_CNTL1r_CTRL_16_16_CON_PADf_SET BCMI_HURACAN_PVTMON_CNTL1r_CTRL_16_16_CON_PADf_SET
#define READ_PVTMON_CNTL1r BCMI_HURACAN_READ_PVTMON_CNTL1r
#define WRITE_PVTMON_CNTL1r BCMI_HURACAN_WRITE_PVTMON_CNTL1r
#define MODIFY_PVTMON_CNTL1r BCMI_HURACAN_MODIFY_PVTMON_CNTL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_PVTMON_CNTL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  PVTMON_CNTL2
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb022
 * DEVAD:    1
 * DESC:     process voltage temperature sensor controls
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTRL_14_13_ADC_INSEL_14_13 
 *     CTRL_15_15_DAC_EN 
 *
 ******************************************************************************/
#define BCMI_HURACAN_PVTMON_CNTL2r (0x0001b022 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_PVTMON_CNTL2r_SIZE 4

/*
 * This structure should be used to declare and program PVTMON_CNTL2.
 *
 */
typedef union BCMI_HURACAN_PVTMON_CNTL2r_s {
	uint32_t v[1];
	uint32_t pvtmon_cntl2[1];
	uint32_t _pvtmon_cntl2;
} BCMI_HURACAN_PVTMON_CNTL2r_t;

#define BCMI_HURACAN_PVTMON_CNTL2r_CLR(r) (r).pvtmon_cntl2[0] = 0
#define BCMI_HURACAN_PVTMON_CNTL2r_SET(r,d) (r).pvtmon_cntl2[0] = d
#define BCMI_HURACAN_PVTMON_CNTL2r_GET(r) (r).pvtmon_cntl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_PVTMON_CNTL2r_CTRL_15_15_DAC_ENf_GET(r) ((((r).pvtmon_cntl2[0]) >> 2) & 0x1)
#define BCMI_HURACAN_PVTMON_CNTL2r_CTRL_15_15_DAC_ENf_SET(r,f) (r).pvtmon_cntl2[0]=(((r).pvtmon_cntl2[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_PVTMON_CNTL2r_CTRL_14_13_ADC_INSEL_14_13f_GET(r) (((r).pvtmon_cntl2[0]) & 0x3)
#define BCMI_HURACAN_PVTMON_CNTL2r_CTRL_14_13_ADC_INSEL_14_13f_SET(r,f) (r).pvtmon_cntl2[0]=(((r).pvtmon_cntl2[0] & ~((uint32_t)0x3)) | (((uint32_t)f) & 0x3)) | (0x3 << 16)

/*
 * These macros can be used to access PVTMON_CNTL2.
 *
 */
#define BCMI_HURACAN_READ_PVTMON_CNTL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_PVTMON_CNTL2r,_r._pvtmon_cntl2)
#define BCMI_HURACAN_WRITE_PVTMON_CNTL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_PVTMON_CNTL2r,_r._pvtmon_cntl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define PVTMON_CNTL2r BCMI_HURACAN_PVTMON_CNTL2r
#define PVTMON_CNTL2r_SIZE BCMI_HURACAN_PVTMON_CNTL2r_SIZE
typedef BCMI_HURACAN_PVTMON_CNTL2r_t PVTMON_CNTL2r_t;
#define PVTMON_CNTL2r_CLR BCMI_HURACAN_PVTMON_CNTL2r_CLR
#define PVTMON_CNTL2r_SET BCMI_HURACAN_PVTMON_CNTL2r_SET
#define PVTMON_CNTL2r_GET BCMI_HURACAN_PVTMON_CNTL2r_GET
#define PVTMON_CNTL2r_CTRL_15_15_DAC_ENf_GET BCMI_HURACAN_PVTMON_CNTL2r_CTRL_15_15_DAC_ENf_GET
#define PVTMON_CNTL2r_CTRL_15_15_DAC_ENf_SET BCMI_HURACAN_PVTMON_CNTL2r_CTRL_15_15_DAC_ENf_SET
#define PVTMON_CNTL2r_CTRL_14_13_ADC_INSEL_14_13f_GET BCMI_HURACAN_PVTMON_CNTL2r_CTRL_14_13_ADC_INSEL_14_13f_GET
#define PVTMON_CNTL2r_CTRL_14_13_ADC_INSEL_14_13f_SET BCMI_HURACAN_PVTMON_CNTL2r_CTRL_14_13_ADC_INSEL_14_13f_SET
#define READ_PVTMON_CNTL2r BCMI_HURACAN_READ_PVTMON_CNTL2r
#define WRITE_PVTMON_CNTL2r BCMI_HURACAN_WRITE_PVTMON_CNTL2r
#define MODIFY_PVTMON_CNTL2r BCMI_HURACAN_MODIFY_PVTMON_CNTL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_PVTMON_CNTL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  PVTMON_CNTL3
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb023
 * DEVAD:    1
 * DESC:     process voltage temperature sensor controls
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTRL_2_0_BG_ADJ  
 *     CTRL_6_3_VTEST_SEL 
 *     CTRL_9_7_RMON_SEL 
 *     CTRL_12_10_MODE  
 *
 ******************************************************************************/
#define BCMI_HURACAN_PVTMON_CNTL3r (0x0001b023 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_PVTMON_CNTL3r_SIZE 4

/*
 * This structure should be used to declare and program PVTMON_CNTL3.
 *
 */
typedef union BCMI_HURACAN_PVTMON_CNTL3r_s {
	uint32_t v[1];
	uint32_t pvtmon_cntl3[1];
	uint32_t _pvtmon_cntl3;
} BCMI_HURACAN_PVTMON_CNTL3r_t;

#define BCMI_HURACAN_PVTMON_CNTL3r_CLR(r) (r).pvtmon_cntl3[0] = 0
#define BCMI_HURACAN_PVTMON_CNTL3r_SET(r,d) (r).pvtmon_cntl3[0] = d
#define BCMI_HURACAN_PVTMON_CNTL3r_GET(r) (r).pvtmon_cntl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_PVTMON_CNTL3r_CTRL_12_10_MODEf_GET(r) ((((r).pvtmon_cntl3[0]) >> 12) & 0x7)
#define BCMI_HURACAN_PVTMON_CNTL3r_CTRL_12_10_MODEf_SET(r,f) (r).pvtmon_cntl3[0]=(((r).pvtmon_cntl3[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_PVTMON_CNTL3r_CTRL_9_7_RMON_SELf_GET(r) ((((r).pvtmon_cntl3[0]) >> 8) & 0x7)
#define BCMI_HURACAN_PVTMON_CNTL3r_CTRL_9_7_RMON_SELf_SET(r,f) (r).pvtmon_cntl3[0]=(((r).pvtmon_cntl3[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_PVTMON_CNTL3r_CTRL_6_3_VTEST_SELf_GET(r) ((((r).pvtmon_cntl3[0]) >> 4) & 0xf)
#define BCMI_HURACAN_PVTMON_CNTL3r_CTRL_6_3_VTEST_SELf_SET(r,f) (r).pvtmon_cntl3[0]=(((r).pvtmon_cntl3[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_PVTMON_CNTL3r_CTRL_2_0_BG_ADJf_GET(r) (((r).pvtmon_cntl3[0]) & 0x7)
#define BCMI_HURACAN_PVTMON_CNTL3r_CTRL_2_0_BG_ADJf_SET(r,f) (r).pvtmon_cntl3[0]=(((r).pvtmon_cntl3[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access PVTMON_CNTL3.
 *
 */
#define BCMI_HURACAN_READ_PVTMON_CNTL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_PVTMON_CNTL3r,_r._pvtmon_cntl3)
#define BCMI_HURACAN_WRITE_PVTMON_CNTL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_PVTMON_CNTL3r,_r._pvtmon_cntl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define PVTMON_CNTL3r BCMI_HURACAN_PVTMON_CNTL3r
#define PVTMON_CNTL3r_SIZE BCMI_HURACAN_PVTMON_CNTL3r_SIZE
typedef BCMI_HURACAN_PVTMON_CNTL3r_t PVTMON_CNTL3r_t;
#define PVTMON_CNTL3r_CLR BCMI_HURACAN_PVTMON_CNTL3r_CLR
#define PVTMON_CNTL3r_SET BCMI_HURACAN_PVTMON_CNTL3r_SET
#define PVTMON_CNTL3r_GET BCMI_HURACAN_PVTMON_CNTL3r_GET
#define PVTMON_CNTL3r_CTRL_12_10_MODEf_GET BCMI_HURACAN_PVTMON_CNTL3r_CTRL_12_10_MODEf_GET
#define PVTMON_CNTL3r_CTRL_12_10_MODEf_SET BCMI_HURACAN_PVTMON_CNTL3r_CTRL_12_10_MODEf_SET
#define PVTMON_CNTL3r_CTRL_9_7_RMON_SELf_GET BCMI_HURACAN_PVTMON_CNTL3r_CTRL_9_7_RMON_SELf_GET
#define PVTMON_CNTL3r_CTRL_9_7_RMON_SELf_SET BCMI_HURACAN_PVTMON_CNTL3r_CTRL_9_7_RMON_SELf_SET
#define PVTMON_CNTL3r_CTRL_6_3_VTEST_SELf_GET BCMI_HURACAN_PVTMON_CNTL3r_CTRL_6_3_VTEST_SELf_GET
#define PVTMON_CNTL3r_CTRL_6_3_VTEST_SELf_SET BCMI_HURACAN_PVTMON_CNTL3r_CTRL_6_3_VTEST_SELf_SET
#define PVTMON_CNTL3r_CTRL_2_0_BG_ADJf_GET BCMI_HURACAN_PVTMON_CNTL3r_CTRL_2_0_BG_ADJf_GET
#define PVTMON_CNTL3r_CTRL_2_0_BG_ADJf_SET BCMI_HURACAN_PVTMON_CNTL3r_CTRL_2_0_BG_ADJf_SET
#define READ_PVTMON_CNTL3r BCMI_HURACAN_READ_PVTMON_CNTL3r
#define WRITE_PVTMON_CNTL3r BCMI_HURACAN_WRITE_PVTMON_CNTL3r
#define MODIFY_PVTMON_CNTL3r BCMI_HURACAN_MODIFY_PVTMON_CNTL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_PVTMON_CNTL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  PVTMON_CNTL4
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb024
 * DEVAD:    1
 * DESC:     process voltage temperature sensor controls
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTRL_DAC_DATA    
 *
 ******************************************************************************/
#define BCMI_HURACAN_PVTMON_CNTL4r (0x0001b024 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_PVTMON_CNTL4r_SIZE 4

/*
 * This structure should be used to declare and program PVTMON_CNTL4.
 *
 */
typedef union BCMI_HURACAN_PVTMON_CNTL4r_s {
	uint32_t v[1];
	uint32_t pvtmon_cntl4[1];
	uint32_t _pvtmon_cntl4;
} BCMI_HURACAN_PVTMON_CNTL4r_t;

#define BCMI_HURACAN_PVTMON_CNTL4r_CLR(r) (r).pvtmon_cntl4[0] = 0
#define BCMI_HURACAN_PVTMON_CNTL4r_SET(r,d) (r).pvtmon_cntl4[0] = d
#define BCMI_HURACAN_PVTMON_CNTL4r_GET(r) (r).pvtmon_cntl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_PVTMON_CNTL4r_CTRL_DAC_DATAf_GET(r) (((r).pvtmon_cntl4[0]) & 0x3ff)
#define BCMI_HURACAN_PVTMON_CNTL4r_CTRL_DAC_DATAf_SET(r,f) (r).pvtmon_cntl4[0]=(((r).pvtmon_cntl4[0] & ~((uint32_t)0x3ff)) | (((uint32_t)f) & 0x3ff)) | (0x3ff << 16)

/*
 * These macros can be used to access PVTMON_CNTL4.
 *
 */
#define BCMI_HURACAN_READ_PVTMON_CNTL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_PVTMON_CNTL4r,_r._pvtmon_cntl4)
#define BCMI_HURACAN_WRITE_PVTMON_CNTL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_PVTMON_CNTL4r,_r._pvtmon_cntl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define PVTMON_CNTL4r BCMI_HURACAN_PVTMON_CNTL4r
#define PVTMON_CNTL4r_SIZE BCMI_HURACAN_PVTMON_CNTL4r_SIZE
typedef BCMI_HURACAN_PVTMON_CNTL4r_t PVTMON_CNTL4r_t;
#define PVTMON_CNTL4r_CLR BCMI_HURACAN_PVTMON_CNTL4r_CLR
#define PVTMON_CNTL4r_SET BCMI_HURACAN_PVTMON_CNTL4r_SET
#define PVTMON_CNTL4r_GET BCMI_HURACAN_PVTMON_CNTL4r_GET
#define PVTMON_CNTL4r_CTRL_DAC_DATAf_GET BCMI_HURACAN_PVTMON_CNTL4r_CTRL_DAC_DATAf_GET
#define PVTMON_CNTL4r_CTRL_DAC_DATAf_SET BCMI_HURACAN_PVTMON_CNTL4r_CTRL_DAC_DATAf_SET
#define READ_PVTMON_CNTL4r BCMI_HURACAN_READ_PVTMON_CNTL4r
#define WRITE_PVTMON_CNTL4r BCMI_HURACAN_WRITE_PVTMON_CNTL4r
#define MODIFY_PVTMON_CNTL4r BCMI_HURACAN_MODIFY_PVTMON_CNTL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_PVTMON_CNTL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  PVTMON_STATUS0
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb025
 * DEVAD:    1
 * DESC:     process voltage temperature sensor controls
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     STS_O_VAVS_MINB0 
 *     STS_O_VAVS_WARNINGB0 
 *     STS_O_VAVS_MINB1 
 *     STS_O_VAVS_WARNINGB1 
 *     STS_O_VAVS_MAXB0 
 *     STS_O_VAVS_MAXB1 
 *
 ******************************************************************************/
#define BCMI_HURACAN_PVTMON_STATUS0r (0x0001b025 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_PVTMON_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program PVTMON_STATUS0.
 *
 */
typedef union BCMI_HURACAN_PVTMON_STATUS0r_s {
	uint32_t v[1];
	uint32_t pvtmon_status0[1];
	uint32_t _pvtmon_status0;
} BCMI_HURACAN_PVTMON_STATUS0r_t;

#define BCMI_HURACAN_PVTMON_STATUS0r_CLR(r) (r).pvtmon_status0[0] = 0
#define BCMI_HURACAN_PVTMON_STATUS0r_SET(r,d) (r).pvtmon_status0[0] = d
#define BCMI_HURACAN_PVTMON_STATUS0r_GET(r) (r).pvtmon_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MAXB1f_GET(r) ((((r).pvtmon_status0[0]) >> 5) & 0x1)
#define BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MAXB1f_SET(r,f) (r).pvtmon_status0[0]=(((r).pvtmon_status0[0] & ~((uint32_t)0x1 << 5)) | ((((uint32_t)f) & 0x1) << 5)) | (1 << (16 + 5))
#define BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MAXB0f_GET(r) ((((r).pvtmon_status0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MAXB0f_SET(r,f) (r).pvtmon_status0[0]=(((r).pvtmon_status0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_WARNINGB1f_GET(r) ((((r).pvtmon_status0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_WARNINGB1f_SET(r,f) (r).pvtmon_status0[0]=(((r).pvtmon_status0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MINB1f_GET(r) ((((r).pvtmon_status0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MINB1f_SET(r,f) (r).pvtmon_status0[0]=(((r).pvtmon_status0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_WARNINGB0f_GET(r) ((((r).pvtmon_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_WARNINGB0f_SET(r,f) (r).pvtmon_status0[0]=(((r).pvtmon_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MINB0f_GET(r) (((r).pvtmon_status0[0]) & 0x1)
#define BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MINB0f_SET(r,f) (r).pvtmon_status0[0]=(((r).pvtmon_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access PVTMON_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_PVTMON_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_PVTMON_STATUS0r,_r._pvtmon_status0)
#define BCMI_HURACAN_WRITE_PVTMON_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_PVTMON_STATUS0r,_r._pvtmon_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define PVTMON_STATUS0r BCMI_HURACAN_PVTMON_STATUS0r
#define PVTMON_STATUS0r_SIZE BCMI_HURACAN_PVTMON_STATUS0r_SIZE
typedef BCMI_HURACAN_PVTMON_STATUS0r_t PVTMON_STATUS0r_t;
#define PVTMON_STATUS0r_CLR BCMI_HURACAN_PVTMON_STATUS0r_CLR
#define PVTMON_STATUS0r_SET BCMI_HURACAN_PVTMON_STATUS0r_SET
#define PVTMON_STATUS0r_GET BCMI_HURACAN_PVTMON_STATUS0r_GET
#define PVTMON_STATUS0r_STS_O_VAVS_MAXB1f_GET BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MAXB1f_GET
#define PVTMON_STATUS0r_STS_O_VAVS_MAXB1f_SET BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MAXB1f_SET
#define PVTMON_STATUS0r_STS_O_VAVS_MAXB0f_GET BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MAXB0f_GET
#define PVTMON_STATUS0r_STS_O_VAVS_MAXB0f_SET BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MAXB0f_SET
#define PVTMON_STATUS0r_STS_O_VAVS_WARNINGB1f_GET BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_WARNINGB1f_GET
#define PVTMON_STATUS0r_STS_O_VAVS_WARNINGB1f_SET BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_WARNINGB1f_SET
#define PVTMON_STATUS0r_STS_O_VAVS_MINB1f_GET BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MINB1f_GET
#define PVTMON_STATUS0r_STS_O_VAVS_MINB1f_SET BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MINB1f_SET
#define PVTMON_STATUS0r_STS_O_VAVS_WARNINGB0f_GET BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_WARNINGB0f_GET
#define PVTMON_STATUS0r_STS_O_VAVS_WARNINGB0f_SET BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_WARNINGB0f_SET
#define PVTMON_STATUS0r_STS_O_VAVS_MINB0f_GET BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MINB0f_GET
#define PVTMON_STATUS0r_STS_O_VAVS_MINB0f_SET BCMI_HURACAN_PVTMON_STATUS0r_STS_O_VAVS_MINB0f_SET
#define READ_PVTMON_STATUS0r BCMI_HURACAN_READ_PVTMON_STATUS0r
#define WRITE_PVTMON_STATUS0r BCMI_HURACAN_WRITE_PVTMON_STATUS0r
#define MODIFY_PVTMON_STATUS0r BCMI_HURACAN_MODIFY_PVTMON_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_PVTMON_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  PVTMON_STATUS1
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb026
 * DEVAD:    1
 * DESC:     process voltage temperature sensor controls
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     STS_O_ADC_DATA   
 *     STS_O_ADC_STROBE 
 *
 ******************************************************************************/
#define BCMI_HURACAN_PVTMON_STATUS1r (0x0001b026 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_PVTMON_STATUS1r_SIZE 4

/*
 * This structure should be used to declare and program PVTMON_STATUS1.
 *
 */
typedef union BCMI_HURACAN_PVTMON_STATUS1r_s {
	uint32_t v[1];
	uint32_t pvtmon_status1[1];
	uint32_t _pvtmon_status1;
} BCMI_HURACAN_PVTMON_STATUS1r_t;

#define BCMI_HURACAN_PVTMON_STATUS1r_CLR(r) (r).pvtmon_status1[0] = 0
#define BCMI_HURACAN_PVTMON_STATUS1r_SET(r,d) (r).pvtmon_status1[0] = d
#define BCMI_HURACAN_PVTMON_STATUS1r_GET(r) (r).pvtmon_status1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_PVTMON_STATUS1r_STS_O_ADC_STROBEf_GET(r) ((((r).pvtmon_status1[0]) >> 12) & 0x1)
#define BCMI_HURACAN_PVTMON_STATUS1r_STS_O_ADC_STROBEf_SET(r,f) (r).pvtmon_status1[0]=(((r).pvtmon_status1[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_PVTMON_STATUS1r_STS_O_ADC_DATAf_GET(r) (((r).pvtmon_status1[0]) & 0x3ff)
#define BCMI_HURACAN_PVTMON_STATUS1r_STS_O_ADC_DATAf_SET(r,f) (r).pvtmon_status1[0]=(((r).pvtmon_status1[0] & ~((uint32_t)0x3ff)) | (((uint32_t)f) & 0x3ff)) | (0x3ff << 16)

/*
 * These macros can be used to access PVTMON_STATUS1.
 *
 */
#define BCMI_HURACAN_READ_PVTMON_STATUS1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_PVTMON_STATUS1r,_r._pvtmon_status1)
#define BCMI_HURACAN_WRITE_PVTMON_STATUS1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_PVTMON_STATUS1r,_r._pvtmon_status1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define PVTMON_STATUS1r BCMI_HURACAN_PVTMON_STATUS1r
#define PVTMON_STATUS1r_SIZE BCMI_HURACAN_PVTMON_STATUS1r_SIZE
typedef BCMI_HURACAN_PVTMON_STATUS1r_t PVTMON_STATUS1r_t;
#define PVTMON_STATUS1r_CLR BCMI_HURACAN_PVTMON_STATUS1r_CLR
#define PVTMON_STATUS1r_SET BCMI_HURACAN_PVTMON_STATUS1r_SET
#define PVTMON_STATUS1r_GET BCMI_HURACAN_PVTMON_STATUS1r_GET
#define PVTMON_STATUS1r_STS_O_ADC_STROBEf_GET BCMI_HURACAN_PVTMON_STATUS1r_STS_O_ADC_STROBEf_GET
#define PVTMON_STATUS1r_STS_O_ADC_STROBEf_SET BCMI_HURACAN_PVTMON_STATUS1r_STS_O_ADC_STROBEf_SET
#define PVTMON_STATUS1r_STS_O_ADC_DATAf_GET BCMI_HURACAN_PVTMON_STATUS1r_STS_O_ADC_DATAf_GET
#define PVTMON_STATUS1r_STS_O_ADC_DATAf_SET BCMI_HURACAN_PVTMON_STATUS1r_STS_O_ADC_DATAf_SET
#define READ_PVTMON_STATUS1r BCMI_HURACAN_READ_PVTMON_STATUS1r
#define WRITE_PVTMON_STATUS1r BCMI_HURACAN_WRITE_PVTMON_STATUS1r
#define MODIFY_PVTMON_STATUS1r BCMI_HURACAN_MODIFY_PVTMON_STATUS1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_PVTMON_STATUS1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  I_VR_CNTL_0_TO_15
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb030
 * DEVAD:    1
 * DESC:     i_vr_cntl_0_to_15 voltage regulator control bits
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     I_VR_CNTL0       
 *
 ******************************************************************************/
#define BCMI_HURACAN_I_VR_CNTL_0_TO_15r (0x0001b030 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_I_VR_CNTL_0_TO_15r_SIZE 4

/*
 * This structure should be used to declare and program I_VR_CNTL_0_TO_15.
 *
 */
typedef union BCMI_HURACAN_I_VR_CNTL_0_TO_15r_s {
	uint32_t v[1];
	uint32_t i_vr_cntl_0_to_15[1];
	uint32_t _i_vr_cntl_0_to_15;
} BCMI_HURACAN_I_VR_CNTL_0_TO_15r_t;

#define BCMI_HURACAN_I_VR_CNTL_0_TO_15r_CLR(r) (r).i_vr_cntl_0_to_15[0] = 0
#define BCMI_HURACAN_I_VR_CNTL_0_TO_15r_SET(r,d) (r).i_vr_cntl_0_to_15[0] = d
#define BCMI_HURACAN_I_VR_CNTL_0_TO_15r_GET(r) (r).i_vr_cntl_0_to_15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_I_VR_CNTL_0_TO_15r_I_VR_CNTL0f_GET(r) (((r).i_vr_cntl_0_to_15[0]) & 0xffff)
#define BCMI_HURACAN_I_VR_CNTL_0_TO_15r_I_VR_CNTL0f_SET(r,f) (r).i_vr_cntl_0_to_15[0]=(((r).i_vr_cntl_0_to_15[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access I_VR_CNTL_0_TO_15.
 *
 */
#define BCMI_HURACAN_READ_I_VR_CNTL_0_TO_15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_I_VR_CNTL_0_TO_15r,_r._i_vr_cntl_0_to_15)
#define BCMI_HURACAN_WRITE_I_VR_CNTL_0_TO_15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_I_VR_CNTL_0_TO_15r,_r._i_vr_cntl_0_to_15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define I_VR_CNTL_0_TO_15r BCMI_HURACAN_I_VR_CNTL_0_TO_15r
#define I_VR_CNTL_0_TO_15r_SIZE BCMI_HURACAN_I_VR_CNTL_0_TO_15r_SIZE
typedef BCMI_HURACAN_I_VR_CNTL_0_TO_15r_t I_VR_CNTL_0_TO_15r_t;
#define I_VR_CNTL_0_TO_15r_CLR BCMI_HURACAN_I_VR_CNTL_0_TO_15r_CLR
#define I_VR_CNTL_0_TO_15r_SET BCMI_HURACAN_I_VR_CNTL_0_TO_15r_SET
#define I_VR_CNTL_0_TO_15r_GET BCMI_HURACAN_I_VR_CNTL_0_TO_15r_GET
#define I_VR_CNTL_0_TO_15r_I_VR_CNTL0f_GET BCMI_HURACAN_I_VR_CNTL_0_TO_15r_I_VR_CNTL0f_GET
#define I_VR_CNTL_0_TO_15r_I_VR_CNTL0f_SET BCMI_HURACAN_I_VR_CNTL_0_TO_15r_I_VR_CNTL0f_SET
#define READ_I_VR_CNTL_0_TO_15r BCMI_HURACAN_READ_I_VR_CNTL_0_TO_15r
#define WRITE_I_VR_CNTL_0_TO_15r BCMI_HURACAN_WRITE_I_VR_CNTL_0_TO_15r
#define MODIFY_I_VR_CNTL_0_TO_15r BCMI_HURACAN_MODIFY_I_VR_CNTL_0_TO_15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_I_VR_CNTL_0_TO_15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  I_VR_CNTL_16_TO_18
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb031
 * DEVAD:    1
 * DESC:     i_vr_cntl_16_to_18 voltage regulator control bits
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     I_VR_CNTL1       
 *
 ******************************************************************************/
#define BCMI_HURACAN_I_VR_CNTL_16_TO_18r (0x0001b031 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_I_VR_CNTL_16_TO_18r_SIZE 4

/*
 * This structure should be used to declare and program I_VR_CNTL_16_TO_18.
 *
 */
typedef union BCMI_HURACAN_I_VR_CNTL_16_TO_18r_s {
	uint32_t v[1];
	uint32_t i_vr_cntl_16_to_18[1];
	uint32_t _i_vr_cntl_16_to_18;
} BCMI_HURACAN_I_VR_CNTL_16_TO_18r_t;

#define BCMI_HURACAN_I_VR_CNTL_16_TO_18r_CLR(r) (r).i_vr_cntl_16_to_18[0] = 0
#define BCMI_HURACAN_I_VR_CNTL_16_TO_18r_SET(r,d) (r).i_vr_cntl_16_to_18[0] = d
#define BCMI_HURACAN_I_VR_CNTL_16_TO_18r_GET(r) (r).i_vr_cntl_16_to_18[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_I_VR_CNTL_16_TO_18r_I_VR_CNTL1f_GET(r) (((r).i_vr_cntl_16_to_18[0]) & 0x7)
#define BCMI_HURACAN_I_VR_CNTL_16_TO_18r_I_VR_CNTL1f_SET(r,f) (r).i_vr_cntl_16_to_18[0]=(((r).i_vr_cntl_16_to_18[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access I_VR_CNTL_16_TO_18.
 *
 */
#define BCMI_HURACAN_READ_I_VR_CNTL_16_TO_18r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_I_VR_CNTL_16_TO_18r,_r._i_vr_cntl_16_to_18)
#define BCMI_HURACAN_WRITE_I_VR_CNTL_16_TO_18r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_I_VR_CNTL_16_TO_18r,_r._i_vr_cntl_16_to_18)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define I_VR_CNTL_16_TO_18r BCMI_HURACAN_I_VR_CNTL_16_TO_18r
#define I_VR_CNTL_16_TO_18r_SIZE BCMI_HURACAN_I_VR_CNTL_16_TO_18r_SIZE
typedef BCMI_HURACAN_I_VR_CNTL_16_TO_18r_t I_VR_CNTL_16_TO_18r_t;
#define I_VR_CNTL_16_TO_18r_CLR BCMI_HURACAN_I_VR_CNTL_16_TO_18r_CLR
#define I_VR_CNTL_16_TO_18r_SET BCMI_HURACAN_I_VR_CNTL_16_TO_18r_SET
#define I_VR_CNTL_16_TO_18r_GET BCMI_HURACAN_I_VR_CNTL_16_TO_18r_GET
#define I_VR_CNTL_16_TO_18r_I_VR_CNTL1f_GET BCMI_HURACAN_I_VR_CNTL_16_TO_18r_I_VR_CNTL1f_GET
#define I_VR_CNTL_16_TO_18r_I_VR_CNTL1f_SET BCMI_HURACAN_I_VR_CNTL_16_TO_18r_I_VR_CNTL1f_SET
#define READ_I_VR_CNTL_16_TO_18r BCMI_HURACAN_READ_I_VR_CNTL_16_TO_18r
#define WRITE_I_VR_CNTL_16_TO_18r BCMI_HURACAN_WRITE_I_VR_CNTL_16_TO_18r
#define MODIFY_I_VR_CNTL_16_TO_18r BCMI_HURACAN_MODIFY_I_VR_CNTL_16_TO_18r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_I_VR_CNTL_16_TO_18r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  I_VR_PWRDN_CNTL
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb032
 * DEVAD:    1
 * DESC:     i_vr_pwrdn_cntl voltage regulator control bits
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     I_VR_PWRDN       
 *
 ******************************************************************************/
#define BCMI_HURACAN_I_VR_PWRDN_CNTLr (0x0001b032 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_I_VR_PWRDN_CNTLr_SIZE 4

/*
 * This structure should be used to declare and program I_VR_PWRDN_CNTL.
 *
 */
typedef union BCMI_HURACAN_I_VR_PWRDN_CNTLr_s {
	uint32_t v[1];
	uint32_t i_vr_pwrdn_cntl[1];
	uint32_t _i_vr_pwrdn_cntl;
} BCMI_HURACAN_I_VR_PWRDN_CNTLr_t;

#define BCMI_HURACAN_I_VR_PWRDN_CNTLr_CLR(r) (r).i_vr_pwrdn_cntl[0] = 0
#define BCMI_HURACAN_I_VR_PWRDN_CNTLr_SET(r,d) (r).i_vr_pwrdn_cntl[0] = d
#define BCMI_HURACAN_I_VR_PWRDN_CNTLr_GET(r) (r).i_vr_pwrdn_cntl[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_I_VR_PWRDN_CNTLr_I_VR_PWRDNf_GET(r) (((r).i_vr_pwrdn_cntl[0]) & 0x1)
#define BCMI_HURACAN_I_VR_PWRDN_CNTLr_I_VR_PWRDNf_SET(r,f) (r).i_vr_pwrdn_cntl[0]=(((r).i_vr_pwrdn_cntl[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access I_VR_PWRDN_CNTL.
 *
 */
#define BCMI_HURACAN_READ_I_VR_PWRDN_CNTLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_I_VR_PWRDN_CNTLr,_r._i_vr_pwrdn_cntl)
#define BCMI_HURACAN_WRITE_I_VR_PWRDN_CNTLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_I_VR_PWRDN_CNTLr,_r._i_vr_pwrdn_cntl)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define I_VR_PWRDN_CNTLr BCMI_HURACAN_I_VR_PWRDN_CNTLr
#define I_VR_PWRDN_CNTLr_SIZE BCMI_HURACAN_I_VR_PWRDN_CNTLr_SIZE
typedef BCMI_HURACAN_I_VR_PWRDN_CNTLr_t I_VR_PWRDN_CNTLr_t;
#define I_VR_PWRDN_CNTLr_CLR BCMI_HURACAN_I_VR_PWRDN_CNTLr_CLR
#define I_VR_PWRDN_CNTLr_SET BCMI_HURACAN_I_VR_PWRDN_CNTLr_SET
#define I_VR_PWRDN_CNTLr_GET BCMI_HURACAN_I_VR_PWRDN_CNTLr_GET
#define I_VR_PWRDN_CNTLr_I_VR_PWRDNf_GET BCMI_HURACAN_I_VR_PWRDN_CNTLr_I_VR_PWRDNf_GET
#define I_VR_PWRDN_CNTLr_I_VR_PWRDNf_SET BCMI_HURACAN_I_VR_PWRDN_CNTLr_I_VR_PWRDNf_SET
#define READ_I_VR_PWRDN_CNTLr BCMI_HURACAN_READ_I_VR_PWRDN_CNTLr
#define WRITE_I_VR_PWRDN_CNTLr BCMI_HURACAN_WRITE_I_VR_PWRDN_CNTLr
#define MODIFY_I_VR_PWRDN_CNTLr BCMI_HURACAN_MODIFY_I_VR_PWRDN_CNTLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_I_VR_PWRDN_CNTLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  I_VR_CNTL_ENABLE
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb033
 * DEVAD:    1
 * DESC:     i_vr_cntl_enable enable the voltage regulator
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     I_VR_CNTL_EN     
 *
 ******************************************************************************/
#define BCMI_HURACAN_I_VR_CNTL_ENABLEr (0x0001b033 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_I_VR_CNTL_ENABLEr_SIZE 4

/*
 * This structure should be used to declare and program I_VR_CNTL_ENABLE.
 *
 */
typedef union BCMI_HURACAN_I_VR_CNTL_ENABLEr_s {
	uint32_t v[1];
	uint32_t i_vr_cntl_enable[1];
	uint32_t _i_vr_cntl_enable;
} BCMI_HURACAN_I_VR_CNTL_ENABLEr_t;

#define BCMI_HURACAN_I_VR_CNTL_ENABLEr_CLR(r) (r).i_vr_cntl_enable[0] = 0
#define BCMI_HURACAN_I_VR_CNTL_ENABLEr_SET(r,d) (r).i_vr_cntl_enable[0] = d
#define BCMI_HURACAN_I_VR_CNTL_ENABLEr_GET(r) (r).i_vr_cntl_enable[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_I_VR_CNTL_ENABLEr_I_VR_CNTL_ENf_GET(r) (((r).i_vr_cntl_enable[0]) & 0x1)
#define BCMI_HURACAN_I_VR_CNTL_ENABLEr_I_VR_CNTL_ENf_SET(r,f) (r).i_vr_cntl_enable[0]=(((r).i_vr_cntl_enable[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access I_VR_CNTL_ENABLE.
 *
 */
#define BCMI_HURACAN_READ_I_VR_CNTL_ENABLEr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_I_VR_CNTL_ENABLEr,_r._i_vr_cntl_enable)
#define BCMI_HURACAN_WRITE_I_VR_CNTL_ENABLEr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_I_VR_CNTL_ENABLEr,_r._i_vr_cntl_enable)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define I_VR_CNTL_ENABLEr BCMI_HURACAN_I_VR_CNTL_ENABLEr
#define I_VR_CNTL_ENABLEr_SIZE BCMI_HURACAN_I_VR_CNTL_ENABLEr_SIZE
typedef BCMI_HURACAN_I_VR_CNTL_ENABLEr_t I_VR_CNTL_ENABLEr_t;
#define I_VR_CNTL_ENABLEr_CLR BCMI_HURACAN_I_VR_CNTL_ENABLEr_CLR
#define I_VR_CNTL_ENABLEr_SET BCMI_HURACAN_I_VR_CNTL_ENABLEr_SET
#define I_VR_CNTL_ENABLEr_GET BCMI_HURACAN_I_VR_CNTL_ENABLEr_GET
#define I_VR_CNTL_ENABLEr_I_VR_CNTL_ENf_GET BCMI_HURACAN_I_VR_CNTL_ENABLEr_I_VR_CNTL_ENf_GET
#define I_VR_CNTL_ENABLEr_I_VR_CNTL_ENf_SET BCMI_HURACAN_I_VR_CNTL_ENABLEr_I_VR_CNTL_ENf_SET
#define READ_I_VR_CNTL_ENABLEr BCMI_HURACAN_READ_I_VR_CNTL_ENABLEr
#define WRITE_I_VR_CNTL_ENABLEr BCMI_HURACAN_WRITE_I_VR_CNTL_ENABLEr
#define MODIFY_I_VR_CNTL_ENABLEr BCMI_HURACAN_MODIFY_I_VR_CNTL_ENABLEr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_I_VR_CNTL_ENABLEr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  RESCAL_STS1
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb040
 * DEVAD:    1
 * DESC:     status register-1 holds various debug signals
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RESCAL_CTRL_DFS 
 *     O_VALID          
 *
 ******************************************************************************/
#define BCMI_HURACAN_RESCAL_STS1r (0x0001b040 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_RESCAL_STS1r_SIZE 4

/*
 * This structure should be used to declare and program RESCAL_STS1.
 *
 */
typedef union BCMI_HURACAN_RESCAL_STS1r_s {
	uint32_t v[1];
	uint32_t rescal_sts1[1];
	uint32_t _rescal_sts1;
} BCMI_HURACAN_RESCAL_STS1r_t;

#define BCMI_HURACAN_RESCAL_STS1r_CLR(r) (r).rescal_sts1[0] = 0
#define BCMI_HURACAN_RESCAL_STS1r_SET(r,d) (r).rescal_sts1[0] = d
#define BCMI_HURACAN_RESCAL_STS1r_GET(r) (r).rescal_sts1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_RESCAL_STS1r_O_VALIDf_GET(r) ((((r).rescal_sts1[0]) >> 13) & 0x1)
#define BCMI_HURACAN_RESCAL_STS1r_O_VALIDf_SET(r,f) (r).rescal_sts1[0]=(((r).rescal_sts1[0] & ~((uint32_t)0x1 << 13)) | ((((uint32_t)f) & 0x1) << 13)) | (1 << (16 + 13))
#define BCMI_HURACAN_RESCAL_STS1r_O_RESCAL_CTRL_DFSf_GET(r) (((r).rescal_sts1[0]) & 0x1fff)
#define BCMI_HURACAN_RESCAL_STS1r_O_RESCAL_CTRL_DFSf_SET(r,f) (r).rescal_sts1[0]=(((r).rescal_sts1[0] & ~((uint32_t)0x1fff)) | (((uint32_t)f) & 0x1fff)) | (0x1fff << 16)

/*
 * These macros can be used to access RESCAL_STS1.
 *
 */
#define BCMI_HURACAN_READ_RESCAL_STS1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_RESCAL_STS1r,_r._rescal_sts1)
#define BCMI_HURACAN_WRITE_RESCAL_STS1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_RESCAL_STS1r,_r._rescal_sts1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define RESCAL_STS1r BCMI_HURACAN_RESCAL_STS1r
#define RESCAL_STS1r_SIZE BCMI_HURACAN_RESCAL_STS1r_SIZE
typedef BCMI_HURACAN_RESCAL_STS1r_t RESCAL_STS1r_t;
#define RESCAL_STS1r_CLR BCMI_HURACAN_RESCAL_STS1r_CLR
#define RESCAL_STS1r_SET BCMI_HURACAN_RESCAL_STS1r_SET
#define RESCAL_STS1r_GET BCMI_HURACAN_RESCAL_STS1r_GET
#define RESCAL_STS1r_O_VALIDf_GET BCMI_HURACAN_RESCAL_STS1r_O_VALIDf_GET
#define RESCAL_STS1r_O_VALIDf_SET BCMI_HURACAN_RESCAL_STS1r_O_VALIDf_SET
#define RESCAL_STS1r_O_RESCAL_CTRL_DFSf_GET BCMI_HURACAN_RESCAL_STS1r_O_RESCAL_CTRL_DFSf_GET
#define RESCAL_STS1r_O_RESCAL_CTRL_DFSf_SET BCMI_HURACAN_RESCAL_STS1r_O_RESCAL_CTRL_DFSf_SET
#define READ_RESCAL_STS1r BCMI_HURACAN_READ_RESCAL_STS1r
#define WRITE_RESCAL_STS1r BCMI_HURACAN_WRITE_RESCAL_STS1r
#define MODIFY_RESCAL_STS1r BCMI_HURACAN_MODIFY_RESCAL_STS1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_RESCAL_STS1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  RESCAL_STS2
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb041
 * DEVAD:    1
 * DESC:     status register-2 holds various debug signals
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RESCAL_STATE   
 *     O_RESCALCOMP     
 *     O_PREV_COMP_CNT  
 *     O_CURR_COMP_CNT  
 *
 ******************************************************************************/
#define BCMI_HURACAN_RESCAL_STS2r (0x0001b041 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_RESCAL_STS2r_SIZE 4

/*
 * This structure should be used to declare and program RESCAL_STS2.
 *
 */
typedef union BCMI_HURACAN_RESCAL_STS2r_s {
	uint32_t v[1];
	uint32_t rescal_sts2[1];
	uint32_t _rescal_sts2;
} BCMI_HURACAN_RESCAL_STS2r_t;

#define BCMI_HURACAN_RESCAL_STS2r_CLR(r) (r).rescal_sts2[0] = 0
#define BCMI_HURACAN_RESCAL_STS2r_SET(r,d) (r).rescal_sts2[0] = d
#define BCMI_HURACAN_RESCAL_STS2r_GET(r) (r).rescal_sts2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_RESCAL_STS2r_O_CURR_COMP_CNTf_GET(r) ((((r).rescal_sts2[0]) >> 8) & 0x3f)
#define BCMI_HURACAN_RESCAL_STS2r_O_CURR_COMP_CNTf_SET(r,f) (r).rescal_sts2[0]=(((r).rescal_sts2[0] & ~((uint32_t)0x3f << 8)) | ((((uint32_t)f) & 0x3f) << 8)) | (63 << (16 + 8))
#define BCMI_HURACAN_RESCAL_STS2r_O_PREV_COMP_CNTf_GET(r) ((((r).rescal_sts2[0]) >> 4) & 0xf)
#define BCMI_HURACAN_RESCAL_STS2r_O_PREV_COMP_CNTf_SET(r,f) (r).rescal_sts2[0]=(((r).rescal_sts2[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_RESCAL_STS2r_O_RESCALCOMPf_GET(r) ((((r).rescal_sts2[0]) >> 3) & 0x1)
#define BCMI_HURACAN_RESCAL_STS2r_O_RESCALCOMPf_SET(r,f) (r).rescal_sts2[0]=(((r).rescal_sts2[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_RESCAL_STS2r_O_RESCAL_STATEf_GET(r) (((r).rescal_sts2[0]) & 0x7)
#define BCMI_HURACAN_RESCAL_STS2r_O_RESCAL_STATEf_SET(r,f) (r).rescal_sts2[0]=(((r).rescal_sts2[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access RESCAL_STS2.
 *
 */
#define BCMI_HURACAN_READ_RESCAL_STS2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_RESCAL_STS2r,_r._rescal_sts2)
#define BCMI_HURACAN_WRITE_RESCAL_STS2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_RESCAL_STS2r,_r._rescal_sts2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define RESCAL_STS2r BCMI_HURACAN_RESCAL_STS2r
#define RESCAL_STS2r_SIZE BCMI_HURACAN_RESCAL_STS2r_SIZE
typedef BCMI_HURACAN_RESCAL_STS2r_t RESCAL_STS2r_t;
#define RESCAL_STS2r_CLR BCMI_HURACAN_RESCAL_STS2r_CLR
#define RESCAL_STS2r_SET BCMI_HURACAN_RESCAL_STS2r_SET
#define RESCAL_STS2r_GET BCMI_HURACAN_RESCAL_STS2r_GET
#define RESCAL_STS2r_O_CURR_COMP_CNTf_GET BCMI_HURACAN_RESCAL_STS2r_O_CURR_COMP_CNTf_GET
#define RESCAL_STS2r_O_CURR_COMP_CNTf_SET BCMI_HURACAN_RESCAL_STS2r_O_CURR_COMP_CNTf_SET
#define RESCAL_STS2r_O_PREV_COMP_CNTf_GET BCMI_HURACAN_RESCAL_STS2r_O_PREV_COMP_CNTf_GET
#define RESCAL_STS2r_O_PREV_COMP_CNTf_SET BCMI_HURACAN_RESCAL_STS2r_O_PREV_COMP_CNTf_SET
#define RESCAL_STS2r_O_RESCALCOMPf_GET BCMI_HURACAN_RESCAL_STS2r_O_RESCALCOMPf_GET
#define RESCAL_STS2r_O_RESCALCOMPf_SET BCMI_HURACAN_RESCAL_STS2r_O_RESCALCOMPf_SET
#define RESCAL_STS2r_O_RESCAL_STATEf_GET BCMI_HURACAN_RESCAL_STS2r_O_RESCAL_STATEf_GET
#define RESCAL_STS2r_O_RESCAL_STATEf_SET BCMI_HURACAN_RESCAL_STS2r_O_RESCAL_STATEf_SET
#define READ_RESCAL_STS2r BCMI_HURACAN_READ_RESCAL_STS2r
#define WRITE_RESCAL_STS2r BCMI_HURACAN_WRITE_RESCAL_STS2r
#define MODIFY_RESCAL_STS2r BCMI_HURACAN_MODIFY_RESCAL_STS2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_RESCAL_STS2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  RESCAL_STS3
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb042
 * DEVAD:    1
 * DESC:     status register-3 holds result of rescal computation
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_PON            
 *     O_DONE           
 *
 ******************************************************************************/
#define BCMI_HURACAN_RESCAL_STS3r (0x0001b042 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_RESCAL_STS3r_SIZE 4

/*
 * This structure should be used to declare and program RESCAL_STS3.
 *
 */
typedef union BCMI_HURACAN_RESCAL_STS3r_s {
	uint32_t v[1];
	uint32_t rescal_sts3[1];
	uint32_t _rescal_sts3;
} BCMI_HURACAN_RESCAL_STS3r_t;

#define BCMI_HURACAN_RESCAL_STS3r_CLR(r) (r).rescal_sts3[0] = 0
#define BCMI_HURACAN_RESCAL_STS3r_SET(r,d) (r).rescal_sts3[0] = d
#define BCMI_HURACAN_RESCAL_STS3r_GET(r) (r).rescal_sts3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_RESCAL_STS3r_O_DONEf_GET(r) ((((r).rescal_sts3[0]) >> 4) & 0x1)
#define BCMI_HURACAN_RESCAL_STS3r_O_DONEf_SET(r,f) (r).rescal_sts3[0]=(((r).rescal_sts3[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_RESCAL_STS3r_O_PONf_GET(r) (((r).rescal_sts3[0]) & 0xf)
#define BCMI_HURACAN_RESCAL_STS3r_O_PONf_SET(r,f) (r).rescal_sts3[0]=(((r).rescal_sts3[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access RESCAL_STS3.
 *
 */
#define BCMI_HURACAN_READ_RESCAL_STS3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_RESCAL_STS3r,_r._rescal_sts3)
#define BCMI_HURACAN_WRITE_RESCAL_STS3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_RESCAL_STS3r,_r._rescal_sts3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define RESCAL_STS3r BCMI_HURACAN_RESCAL_STS3r
#define RESCAL_STS3r_SIZE BCMI_HURACAN_RESCAL_STS3r_SIZE
typedef BCMI_HURACAN_RESCAL_STS3r_t RESCAL_STS3r_t;
#define RESCAL_STS3r_CLR BCMI_HURACAN_RESCAL_STS3r_CLR
#define RESCAL_STS3r_SET BCMI_HURACAN_RESCAL_STS3r_SET
#define RESCAL_STS3r_GET BCMI_HURACAN_RESCAL_STS3r_GET
#define RESCAL_STS3r_O_DONEf_GET BCMI_HURACAN_RESCAL_STS3r_O_DONEf_GET
#define RESCAL_STS3r_O_DONEf_SET BCMI_HURACAN_RESCAL_STS3r_O_DONEf_SET
#define RESCAL_STS3r_O_PONf_GET BCMI_HURACAN_RESCAL_STS3r_O_PONf_GET
#define RESCAL_STS3r_O_PONf_SET BCMI_HURACAN_RESCAL_STS3r_O_PONf_SET
#define READ_RESCAL_STS3r BCMI_HURACAN_READ_RESCAL_STS3r
#define WRITE_RESCAL_STS3r BCMI_HURACAN_WRITE_RESCAL_STS3r
#define MODIFY_RESCAL_STS3r BCMI_HURACAN_MODIFY_RESCAL_STS3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_RESCAL_STS3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  RESCAL_CTRL0
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb043
 * DEVAD:    1
 * DESC:     control register for the rescal block
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     I_RESCAL_CTRL    
 *
 ******************************************************************************/
#define BCMI_HURACAN_RESCAL_CTRL0r (0x0001b043 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_RESCAL_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program RESCAL_CTRL0.
 *
 */
typedef union BCMI_HURACAN_RESCAL_CTRL0r_s {
	uint32_t v[1];
	uint32_t rescal_ctrl0[1];
	uint32_t _rescal_ctrl0;
} BCMI_HURACAN_RESCAL_CTRL0r_t;

#define BCMI_HURACAN_RESCAL_CTRL0r_CLR(r) (r).rescal_ctrl0[0] = 0
#define BCMI_HURACAN_RESCAL_CTRL0r_SET(r,d) (r).rescal_ctrl0[0] = d
#define BCMI_HURACAN_RESCAL_CTRL0r_GET(r) (r).rescal_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_RESCAL_CTRL0r_I_RESCAL_CTRLf_GET(r) (((r).rescal_ctrl0[0]) & 0x1fff)
#define BCMI_HURACAN_RESCAL_CTRL0r_I_RESCAL_CTRLf_SET(r,f) (r).rescal_ctrl0[0]=(((r).rescal_ctrl0[0] & ~((uint32_t)0x1fff)) | (((uint32_t)f) & 0x1fff)) | (0x1fff << 16)

/*
 * These macros can be used to access RESCAL_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_RESCAL_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_RESCAL_CTRL0r,_r._rescal_ctrl0)
#define BCMI_HURACAN_WRITE_RESCAL_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_RESCAL_CTRL0r,_r._rescal_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define RESCAL_CTRL0r BCMI_HURACAN_RESCAL_CTRL0r
#define RESCAL_CTRL0r_SIZE BCMI_HURACAN_RESCAL_CTRL0r_SIZE
typedef BCMI_HURACAN_RESCAL_CTRL0r_t RESCAL_CTRL0r_t;
#define RESCAL_CTRL0r_CLR BCMI_HURACAN_RESCAL_CTRL0r_CLR
#define RESCAL_CTRL0r_SET BCMI_HURACAN_RESCAL_CTRL0r_SET
#define RESCAL_CTRL0r_GET BCMI_HURACAN_RESCAL_CTRL0r_GET
#define RESCAL_CTRL0r_I_RESCAL_CTRLf_GET BCMI_HURACAN_RESCAL_CTRL0r_I_RESCAL_CTRLf_GET
#define RESCAL_CTRL0r_I_RESCAL_CTRLf_SET BCMI_HURACAN_RESCAL_CTRL0r_I_RESCAL_CTRLf_SET
#define READ_RESCAL_CTRL0r BCMI_HURACAN_READ_RESCAL_CTRL0r
#define WRITE_RESCAL_CTRL0r BCMI_HURACAN_WRITE_RESCAL_CTRL0r
#define MODIFY_RESCAL_CTRL0r BCMI_HURACAN_MODIFY_RESCAL_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_RESCAL_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  RESCAL_CTRL1
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb044
 * DEVAD:    1
 * DESC:     control register for the rescal block
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     I_PWRDN          
 *     I_DIAG_ON        
 *
 ******************************************************************************/
#define BCMI_HURACAN_RESCAL_CTRL1r (0x0001b044 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_RESCAL_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program RESCAL_CTRL1.
 *
 */
typedef union BCMI_HURACAN_RESCAL_CTRL1r_s {
	uint32_t v[1];
	uint32_t rescal_ctrl1[1];
	uint32_t _rescal_ctrl1;
} BCMI_HURACAN_RESCAL_CTRL1r_t;

#define BCMI_HURACAN_RESCAL_CTRL1r_CLR(r) (r).rescal_ctrl1[0] = 0
#define BCMI_HURACAN_RESCAL_CTRL1r_SET(r,d) (r).rescal_ctrl1[0] = d
#define BCMI_HURACAN_RESCAL_CTRL1r_GET(r) (r).rescal_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_RESCAL_CTRL1r_I_DIAG_ONf_GET(r) ((((r).rescal_ctrl1[0]) >> 1) & 0x1)
#define BCMI_HURACAN_RESCAL_CTRL1r_I_DIAG_ONf_SET(r,f) (r).rescal_ctrl1[0]=(((r).rescal_ctrl1[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_RESCAL_CTRL1r_I_PWRDNf_GET(r) (((r).rescal_ctrl1[0]) & 0x1)
#define BCMI_HURACAN_RESCAL_CTRL1r_I_PWRDNf_SET(r,f) (r).rescal_ctrl1[0]=(((r).rescal_ctrl1[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access RESCAL_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_RESCAL_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_RESCAL_CTRL1r,_r._rescal_ctrl1)
#define BCMI_HURACAN_WRITE_RESCAL_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_RESCAL_CTRL1r,_r._rescal_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define RESCAL_CTRL1r BCMI_HURACAN_RESCAL_CTRL1r
#define RESCAL_CTRL1r_SIZE BCMI_HURACAN_RESCAL_CTRL1r_SIZE
typedef BCMI_HURACAN_RESCAL_CTRL1r_t RESCAL_CTRL1r_t;
#define RESCAL_CTRL1r_CLR BCMI_HURACAN_RESCAL_CTRL1r_CLR
#define RESCAL_CTRL1r_SET BCMI_HURACAN_RESCAL_CTRL1r_SET
#define RESCAL_CTRL1r_GET BCMI_HURACAN_RESCAL_CTRL1r_GET
#define RESCAL_CTRL1r_I_DIAG_ONf_GET BCMI_HURACAN_RESCAL_CTRL1r_I_DIAG_ONf_GET
#define RESCAL_CTRL1r_I_DIAG_ONf_SET BCMI_HURACAN_RESCAL_CTRL1r_I_DIAG_ONf_SET
#define RESCAL_CTRL1r_I_PWRDNf_GET BCMI_HURACAN_RESCAL_CTRL1r_I_PWRDNf_GET
#define RESCAL_CTRL1r_I_PWRDNf_SET BCMI_HURACAN_RESCAL_CTRL1r_I_PWRDNf_SET
#define READ_RESCAL_CTRL1r BCMI_HURACAN_READ_RESCAL_CTRL1r
#define WRITE_RESCAL_CTRL1r BCMI_HURACAN_WRITE_RESCAL_CTRL1r
#define MODIFY_RESCAL_CTRL1r BCMI_HURACAN_MODIFY_RESCAL_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_RESCAL_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  LIB_ROSC_EN_CTRL
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb050
 * DEVAD:    1
 * DESC:     ring oscillaor enable controls
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     ROSC_EN          
 *
 ******************************************************************************/
#define BCMI_HURACAN_LIB_ROSC_EN_CTRLr (0x0001b050 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_LIB_ROSC_EN_CTRLr_SIZE 4

/*
 * This structure should be used to declare and program LIB_ROSC_EN_CTRL.
 *
 */
typedef union BCMI_HURACAN_LIB_ROSC_EN_CTRLr_s {
	uint32_t v[1];
	uint32_t lib_rosc_en_ctrl[1];
	uint32_t _lib_rosc_en_ctrl;
} BCMI_HURACAN_LIB_ROSC_EN_CTRLr_t;

#define BCMI_HURACAN_LIB_ROSC_EN_CTRLr_CLR(r) (r).lib_rosc_en_ctrl[0] = 0
#define BCMI_HURACAN_LIB_ROSC_EN_CTRLr_SET(r,d) (r).lib_rosc_en_ctrl[0] = d
#define BCMI_HURACAN_LIB_ROSC_EN_CTRLr_GET(r) (r).lib_rosc_en_ctrl[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_LIB_ROSC_EN_CTRLr_ROSC_ENf_GET(r) (((r).lib_rosc_en_ctrl[0]) & 0xfff)
#define BCMI_HURACAN_LIB_ROSC_EN_CTRLr_ROSC_ENf_SET(r,f) (r).lib_rosc_en_ctrl[0]=(((r).lib_rosc_en_ctrl[0] & ~((uint32_t)0xfff)) | (((uint32_t)f) & 0xfff)) | (0xfff << 16)

/*
 * These macros can be used to access LIB_ROSC_EN_CTRL.
 *
 */
#define BCMI_HURACAN_READ_LIB_ROSC_EN_CTRLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_LIB_ROSC_EN_CTRLr,_r._lib_rosc_en_ctrl)
#define BCMI_HURACAN_WRITE_LIB_ROSC_EN_CTRLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_LIB_ROSC_EN_CTRLr,_r._lib_rosc_en_ctrl)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define LIB_ROSC_EN_CTRLr BCMI_HURACAN_LIB_ROSC_EN_CTRLr
#define LIB_ROSC_EN_CTRLr_SIZE BCMI_HURACAN_LIB_ROSC_EN_CTRLr_SIZE
typedef BCMI_HURACAN_LIB_ROSC_EN_CTRLr_t LIB_ROSC_EN_CTRLr_t;
#define LIB_ROSC_EN_CTRLr_CLR BCMI_HURACAN_LIB_ROSC_EN_CTRLr_CLR
#define LIB_ROSC_EN_CTRLr_SET BCMI_HURACAN_LIB_ROSC_EN_CTRLr_SET
#define LIB_ROSC_EN_CTRLr_GET BCMI_HURACAN_LIB_ROSC_EN_CTRLr_GET
#define LIB_ROSC_EN_CTRLr_ROSC_ENf_GET BCMI_HURACAN_LIB_ROSC_EN_CTRLr_ROSC_ENf_GET
#define LIB_ROSC_EN_CTRLr_ROSC_ENf_SET BCMI_HURACAN_LIB_ROSC_EN_CTRLr_ROSC_ENf_SET
#define READ_LIB_ROSC_EN_CTRLr BCMI_HURACAN_READ_LIB_ROSC_EN_CTRLr
#define WRITE_LIB_ROSC_EN_CTRLr BCMI_HURACAN_WRITE_LIB_ROSC_EN_CTRLr
#define MODIFY_LIB_ROSC_EN_CTRLr BCMI_HURACAN_MODIFY_LIB_ROSC_EN_CTRLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_LIB_ROSC_EN_CTRLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  LIB_ROSC_SEL_CTRL
 * BLOCKS:   HARD_IP_QUAD_D
 * REGADDR:  0xb051
 * DEVAD:    1
 * DESC:     ring oscillaor sel controls
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     ROSC_SEL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_LIB_ROSC_SEL_CTRLr (0x0001b051 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_SIZE 4

/*
 * This structure should be used to declare and program LIB_ROSC_SEL_CTRL.
 *
 */
typedef union BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_s {
	uint32_t v[1];
	uint32_t lib_rosc_sel_ctrl[1];
	uint32_t _lib_rosc_sel_ctrl;
} BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_t;

#define BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_CLR(r) (r).lib_rosc_sel_ctrl[0] = 0
#define BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_SET(r,d) (r).lib_rosc_sel_ctrl[0] = d
#define BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_GET(r) (r).lib_rosc_sel_ctrl[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_ROSC_SELf_GET(r) (((r).lib_rosc_sel_ctrl[0]) & 0xfff)
#define BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_ROSC_SELf_SET(r,f) (r).lib_rosc_sel_ctrl[0]=(((r).lib_rosc_sel_ctrl[0] & ~((uint32_t)0xfff)) | (((uint32_t)f) & 0xfff)) | (0xfff << 16)

/*
 * These macros can be used to access LIB_ROSC_SEL_CTRL.
 *
 */
#define BCMI_HURACAN_READ_LIB_ROSC_SEL_CTRLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_LIB_ROSC_SEL_CTRLr,_r._lib_rosc_sel_ctrl)
#define BCMI_HURACAN_WRITE_LIB_ROSC_SEL_CTRLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_LIB_ROSC_SEL_CTRLr,_r._lib_rosc_sel_ctrl)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define LIB_ROSC_SEL_CTRLr BCMI_HURACAN_LIB_ROSC_SEL_CTRLr
#define LIB_ROSC_SEL_CTRLr_SIZE BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_SIZE
typedef BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_t LIB_ROSC_SEL_CTRLr_t;
#define LIB_ROSC_SEL_CTRLr_CLR BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_CLR
#define LIB_ROSC_SEL_CTRLr_SET BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_SET
#define LIB_ROSC_SEL_CTRLr_GET BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_GET
#define LIB_ROSC_SEL_CTRLr_ROSC_SELf_GET BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_ROSC_SELf_GET
#define LIB_ROSC_SEL_CTRLr_ROSC_SELf_SET BCMI_HURACAN_LIB_ROSC_SEL_CTRLr_ROSC_SELf_SET
#define READ_LIB_ROSC_SEL_CTRLr BCMI_HURACAN_READ_LIB_ROSC_SEL_CTRLr
#define WRITE_LIB_ROSC_SEL_CTRLr BCMI_HURACAN_WRITE_LIB_ROSC_SEL_CTRLr
#define MODIFY_LIB_ROSC_SEL_CTRLr BCMI_HURACAN_MODIFY_LIB_ROSC_SEL_CTRLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_LIB_ROSC_SEL_CTRLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BONDSEL_0_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb060
 * DEVAD:    1
 * DESC:     PAD bondsel_0 control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BONDSEL_0_IBYP   
 *     BONDSEL_0_INVERT_EN 
 *     BONDSEL_0_DGLH_CNT 
 *
 ******************************************************************************/
#define BCMI_HURACAN_BONDSEL_0_CONTROLr (0x0001b060 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BONDSEL_0_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program BONDSEL_0_CONTROL.
 *
 */
typedef union BCMI_HURACAN_BONDSEL_0_CONTROLr_s {
	uint32_t v[1];
	uint32_t bondsel_0_control[1];
	uint32_t _bondsel_0_control;
} BCMI_HURACAN_BONDSEL_0_CONTROLr_t;

#define BCMI_HURACAN_BONDSEL_0_CONTROLr_CLR(r) (r).bondsel_0_control[0] = 0
#define BCMI_HURACAN_BONDSEL_0_CONTROLr_SET(r,d) (r).bondsel_0_control[0] = d
#define BCMI_HURACAN_BONDSEL_0_CONTROLr_GET(r) (r).bondsel_0_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BONDSEL_0_CONTROLr_BONDSEL_0_DGLH_CNTf_GET(r) ((((r).bondsel_0_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BONDSEL_0_CONTROLr_BONDSEL_0_DGLH_CNTf_SET(r,f) (r).bondsel_0_control[0]=(((r).bondsel_0_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BONDSEL_0_CONTROLr_BONDSEL_0_INVERT_ENf_GET(r) ((((r).bondsel_0_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_BONDSEL_0_CONTROLr_BONDSEL_0_INVERT_ENf_SET(r,f) (r).bondsel_0_control[0]=(((r).bondsel_0_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_BONDSEL_0_CONTROLr_BONDSEL_0_IBYPf_GET(r) ((((r).bondsel_0_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_BONDSEL_0_CONTROLr_BONDSEL_0_IBYPf_SET(r,f) (r).bondsel_0_control[0]=(((r).bondsel_0_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))

/*
 * These macros can be used to access BONDSEL_0_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_BONDSEL_0_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BONDSEL_0_CONTROLr,_r._bondsel_0_control)
#define BCMI_HURACAN_WRITE_BONDSEL_0_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BONDSEL_0_CONTROLr,_r._bondsel_0_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BONDSEL_0_CONTROLr BCMI_HURACAN_BONDSEL_0_CONTROLr
#define BONDSEL_0_CONTROLr_SIZE BCMI_HURACAN_BONDSEL_0_CONTROLr_SIZE
typedef BCMI_HURACAN_BONDSEL_0_CONTROLr_t BONDSEL_0_CONTROLr_t;
#define BONDSEL_0_CONTROLr_CLR BCMI_HURACAN_BONDSEL_0_CONTROLr_CLR
#define BONDSEL_0_CONTROLr_SET BCMI_HURACAN_BONDSEL_0_CONTROLr_SET
#define BONDSEL_0_CONTROLr_GET BCMI_HURACAN_BONDSEL_0_CONTROLr_GET
#define BONDSEL_0_CONTROLr_BONDSEL_0_DGLH_CNTf_GET BCMI_HURACAN_BONDSEL_0_CONTROLr_BONDSEL_0_DGLH_CNTf_GET
#define BONDSEL_0_CONTROLr_BONDSEL_0_DGLH_CNTf_SET BCMI_HURACAN_BONDSEL_0_CONTROLr_BONDSEL_0_DGLH_CNTf_SET
#define BONDSEL_0_CONTROLr_BONDSEL_0_INVERT_ENf_GET BCMI_HURACAN_BONDSEL_0_CONTROLr_BONDSEL_0_INVERT_ENf_GET
#define BONDSEL_0_CONTROLr_BONDSEL_0_INVERT_ENf_SET BCMI_HURACAN_BONDSEL_0_CONTROLr_BONDSEL_0_INVERT_ENf_SET
#define BONDSEL_0_CONTROLr_BONDSEL_0_IBYPf_GET BCMI_HURACAN_BONDSEL_0_CONTROLr_BONDSEL_0_IBYPf_GET
#define BONDSEL_0_CONTROLr_BONDSEL_0_IBYPf_SET BCMI_HURACAN_BONDSEL_0_CONTROLr_BONDSEL_0_IBYPf_SET
#define READ_BONDSEL_0_CONTROLr BCMI_HURACAN_READ_BONDSEL_0_CONTROLr
#define WRITE_BONDSEL_0_CONTROLr BCMI_HURACAN_WRITE_BONDSEL_0_CONTROLr
#define MODIFY_BONDSEL_0_CONTROLr BCMI_HURACAN_MODIFY_BONDSEL_0_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BONDSEL_0_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BONDSEL_0_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb061
 * DEVAD:    1
 * DESC:     PAD bondsel_0 status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BONDSEL_0_DIN_LH 
 *     BONDSEL_0_DIN_LL 
 *     BONDSEL_0_DIN    
 *
 ******************************************************************************/
#define BCMI_HURACAN_BONDSEL_0_STATUSr (0x0001b061 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BONDSEL_0_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program BONDSEL_0_STATUS.
 *
 */
typedef union BCMI_HURACAN_BONDSEL_0_STATUSr_s {
	uint32_t v[1];
	uint32_t bondsel_0_status[1];
	uint32_t _bondsel_0_status;
} BCMI_HURACAN_BONDSEL_0_STATUSr_t;

#define BCMI_HURACAN_BONDSEL_0_STATUSr_CLR(r) (r).bondsel_0_status[0] = 0
#define BCMI_HURACAN_BONDSEL_0_STATUSr_SET(r,d) (r).bondsel_0_status[0] = d
#define BCMI_HURACAN_BONDSEL_0_STATUSr_GET(r) (r).bondsel_0_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BONDSEL_0_STATUSr_BONDSEL_0_DINf_GET(r) ((((r).bondsel_0_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_BONDSEL_0_STATUSr_BONDSEL_0_DINf_SET(r,f) (r).bondsel_0_status[0]=(((r).bondsel_0_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_BONDSEL_0_STATUSr_BONDSEL_0_DIN_LLf_GET(r) ((((r).bondsel_0_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_BONDSEL_0_STATUSr_BONDSEL_0_DIN_LLf_SET(r,f) (r).bondsel_0_status[0]=(((r).bondsel_0_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_BONDSEL_0_STATUSr_BONDSEL_0_DIN_LHf_GET(r) (((r).bondsel_0_status[0]) & 0x1)
#define BCMI_HURACAN_BONDSEL_0_STATUSr_BONDSEL_0_DIN_LHf_SET(r,f) (r).bondsel_0_status[0]=(((r).bondsel_0_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access BONDSEL_0_STATUS.
 *
 */
#define BCMI_HURACAN_READ_BONDSEL_0_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BONDSEL_0_STATUSr,_r._bondsel_0_status)
#define BCMI_HURACAN_WRITE_BONDSEL_0_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BONDSEL_0_STATUSr,_r._bondsel_0_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BONDSEL_0_STATUSr BCMI_HURACAN_BONDSEL_0_STATUSr
#define BONDSEL_0_STATUSr_SIZE BCMI_HURACAN_BONDSEL_0_STATUSr_SIZE
typedef BCMI_HURACAN_BONDSEL_0_STATUSr_t BONDSEL_0_STATUSr_t;
#define BONDSEL_0_STATUSr_CLR BCMI_HURACAN_BONDSEL_0_STATUSr_CLR
#define BONDSEL_0_STATUSr_SET BCMI_HURACAN_BONDSEL_0_STATUSr_SET
#define BONDSEL_0_STATUSr_GET BCMI_HURACAN_BONDSEL_0_STATUSr_GET
#define BONDSEL_0_STATUSr_BONDSEL_0_DINf_GET BCMI_HURACAN_BONDSEL_0_STATUSr_BONDSEL_0_DINf_GET
#define BONDSEL_0_STATUSr_BONDSEL_0_DINf_SET BCMI_HURACAN_BONDSEL_0_STATUSr_BONDSEL_0_DINf_SET
#define BONDSEL_0_STATUSr_BONDSEL_0_DIN_LLf_GET BCMI_HURACAN_BONDSEL_0_STATUSr_BONDSEL_0_DIN_LLf_GET
#define BONDSEL_0_STATUSr_BONDSEL_0_DIN_LLf_SET BCMI_HURACAN_BONDSEL_0_STATUSr_BONDSEL_0_DIN_LLf_SET
#define BONDSEL_0_STATUSr_BONDSEL_0_DIN_LHf_GET BCMI_HURACAN_BONDSEL_0_STATUSr_BONDSEL_0_DIN_LHf_GET
#define BONDSEL_0_STATUSr_BONDSEL_0_DIN_LHf_SET BCMI_HURACAN_BONDSEL_0_STATUSr_BONDSEL_0_DIN_LHf_SET
#define READ_BONDSEL_0_STATUSr BCMI_HURACAN_READ_BONDSEL_0_STATUSr
#define WRITE_BONDSEL_0_STATUSr BCMI_HURACAN_WRITE_BONDSEL_0_STATUSr
#define MODIFY_BONDSEL_0_STATUSr BCMI_HURACAN_MODIFY_BONDSEL_0_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BONDSEL_0_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BONDSEL_1_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb062
 * DEVAD:    1
 * DESC:     PAD bondsel_1 control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BONDSEL_1_IBYP   
 *     BONDSEL_1_INVERT_EN 
 *     BONDSEL_1_DGLH_CNT 
 *
 ******************************************************************************/
#define BCMI_HURACAN_BONDSEL_1_CONTROLr (0x0001b062 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BONDSEL_1_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program BONDSEL_1_CONTROL.
 *
 */
typedef union BCMI_HURACAN_BONDSEL_1_CONTROLr_s {
	uint32_t v[1];
	uint32_t bondsel_1_control[1];
	uint32_t _bondsel_1_control;
} BCMI_HURACAN_BONDSEL_1_CONTROLr_t;

#define BCMI_HURACAN_BONDSEL_1_CONTROLr_CLR(r) (r).bondsel_1_control[0] = 0
#define BCMI_HURACAN_BONDSEL_1_CONTROLr_SET(r,d) (r).bondsel_1_control[0] = d
#define BCMI_HURACAN_BONDSEL_1_CONTROLr_GET(r) (r).bondsel_1_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BONDSEL_1_CONTROLr_BONDSEL_1_DGLH_CNTf_GET(r) ((((r).bondsel_1_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BONDSEL_1_CONTROLr_BONDSEL_1_DGLH_CNTf_SET(r,f) (r).bondsel_1_control[0]=(((r).bondsel_1_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BONDSEL_1_CONTROLr_BONDSEL_1_INVERT_ENf_GET(r) ((((r).bondsel_1_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_BONDSEL_1_CONTROLr_BONDSEL_1_INVERT_ENf_SET(r,f) (r).bondsel_1_control[0]=(((r).bondsel_1_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_BONDSEL_1_CONTROLr_BONDSEL_1_IBYPf_GET(r) ((((r).bondsel_1_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_BONDSEL_1_CONTROLr_BONDSEL_1_IBYPf_SET(r,f) (r).bondsel_1_control[0]=(((r).bondsel_1_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))

/*
 * These macros can be used to access BONDSEL_1_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_BONDSEL_1_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BONDSEL_1_CONTROLr,_r._bondsel_1_control)
#define BCMI_HURACAN_WRITE_BONDSEL_1_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BONDSEL_1_CONTROLr,_r._bondsel_1_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BONDSEL_1_CONTROLr BCMI_HURACAN_BONDSEL_1_CONTROLr
#define BONDSEL_1_CONTROLr_SIZE BCMI_HURACAN_BONDSEL_1_CONTROLr_SIZE
typedef BCMI_HURACAN_BONDSEL_1_CONTROLr_t BONDSEL_1_CONTROLr_t;
#define BONDSEL_1_CONTROLr_CLR BCMI_HURACAN_BONDSEL_1_CONTROLr_CLR
#define BONDSEL_1_CONTROLr_SET BCMI_HURACAN_BONDSEL_1_CONTROLr_SET
#define BONDSEL_1_CONTROLr_GET BCMI_HURACAN_BONDSEL_1_CONTROLr_GET
#define BONDSEL_1_CONTROLr_BONDSEL_1_DGLH_CNTf_GET BCMI_HURACAN_BONDSEL_1_CONTROLr_BONDSEL_1_DGLH_CNTf_GET
#define BONDSEL_1_CONTROLr_BONDSEL_1_DGLH_CNTf_SET BCMI_HURACAN_BONDSEL_1_CONTROLr_BONDSEL_1_DGLH_CNTf_SET
#define BONDSEL_1_CONTROLr_BONDSEL_1_INVERT_ENf_GET BCMI_HURACAN_BONDSEL_1_CONTROLr_BONDSEL_1_INVERT_ENf_GET
#define BONDSEL_1_CONTROLr_BONDSEL_1_INVERT_ENf_SET BCMI_HURACAN_BONDSEL_1_CONTROLr_BONDSEL_1_INVERT_ENf_SET
#define BONDSEL_1_CONTROLr_BONDSEL_1_IBYPf_GET BCMI_HURACAN_BONDSEL_1_CONTROLr_BONDSEL_1_IBYPf_GET
#define BONDSEL_1_CONTROLr_BONDSEL_1_IBYPf_SET BCMI_HURACAN_BONDSEL_1_CONTROLr_BONDSEL_1_IBYPf_SET
#define READ_BONDSEL_1_CONTROLr BCMI_HURACAN_READ_BONDSEL_1_CONTROLr
#define WRITE_BONDSEL_1_CONTROLr BCMI_HURACAN_WRITE_BONDSEL_1_CONTROLr
#define MODIFY_BONDSEL_1_CONTROLr BCMI_HURACAN_MODIFY_BONDSEL_1_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BONDSEL_1_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BONDSEL_1_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb063
 * DEVAD:    1
 * DESC:     PAD bondsel_1 status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BONDSEL_1_DIN_LH 
 *     BONDSEL_1_DIN_LL 
 *     BONDSEL_1_DIN    
 *
 ******************************************************************************/
#define BCMI_HURACAN_BONDSEL_1_STATUSr (0x0001b063 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BONDSEL_1_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program BONDSEL_1_STATUS.
 *
 */
typedef union BCMI_HURACAN_BONDSEL_1_STATUSr_s {
	uint32_t v[1];
	uint32_t bondsel_1_status[1];
	uint32_t _bondsel_1_status;
} BCMI_HURACAN_BONDSEL_1_STATUSr_t;

#define BCMI_HURACAN_BONDSEL_1_STATUSr_CLR(r) (r).bondsel_1_status[0] = 0
#define BCMI_HURACAN_BONDSEL_1_STATUSr_SET(r,d) (r).bondsel_1_status[0] = d
#define BCMI_HURACAN_BONDSEL_1_STATUSr_GET(r) (r).bondsel_1_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BONDSEL_1_STATUSr_BONDSEL_1_DINf_GET(r) ((((r).bondsel_1_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_BONDSEL_1_STATUSr_BONDSEL_1_DINf_SET(r,f) (r).bondsel_1_status[0]=(((r).bondsel_1_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_BONDSEL_1_STATUSr_BONDSEL_1_DIN_LLf_GET(r) ((((r).bondsel_1_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_BONDSEL_1_STATUSr_BONDSEL_1_DIN_LLf_SET(r,f) (r).bondsel_1_status[0]=(((r).bondsel_1_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_BONDSEL_1_STATUSr_BONDSEL_1_DIN_LHf_GET(r) (((r).bondsel_1_status[0]) & 0x1)
#define BCMI_HURACAN_BONDSEL_1_STATUSr_BONDSEL_1_DIN_LHf_SET(r,f) (r).bondsel_1_status[0]=(((r).bondsel_1_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access BONDSEL_1_STATUS.
 *
 */
#define BCMI_HURACAN_READ_BONDSEL_1_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BONDSEL_1_STATUSr,_r._bondsel_1_status)
#define BCMI_HURACAN_WRITE_BONDSEL_1_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BONDSEL_1_STATUSr,_r._bondsel_1_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BONDSEL_1_STATUSr BCMI_HURACAN_BONDSEL_1_STATUSr
#define BONDSEL_1_STATUSr_SIZE BCMI_HURACAN_BONDSEL_1_STATUSr_SIZE
typedef BCMI_HURACAN_BONDSEL_1_STATUSr_t BONDSEL_1_STATUSr_t;
#define BONDSEL_1_STATUSr_CLR BCMI_HURACAN_BONDSEL_1_STATUSr_CLR
#define BONDSEL_1_STATUSr_SET BCMI_HURACAN_BONDSEL_1_STATUSr_SET
#define BONDSEL_1_STATUSr_GET BCMI_HURACAN_BONDSEL_1_STATUSr_GET
#define BONDSEL_1_STATUSr_BONDSEL_1_DINf_GET BCMI_HURACAN_BONDSEL_1_STATUSr_BONDSEL_1_DINf_GET
#define BONDSEL_1_STATUSr_BONDSEL_1_DINf_SET BCMI_HURACAN_BONDSEL_1_STATUSr_BONDSEL_1_DINf_SET
#define BONDSEL_1_STATUSr_BONDSEL_1_DIN_LLf_GET BCMI_HURACAN_BONDSEL_1_STATUSr_BONDSEL_1_DIN_LLf_GET
#define BONDSEL_1_STATUSr_BONDSEL_1_DIN_LLf_SET BCMI_HURACAN_BONDSEL_1_STATUSr_BONDSEL_1_DIN_LLf_SET
#define BONDSEL_1_STATUSr_BONDSEL_1_DIN_LHf_GET BCMI_HURACAN_BONDSEL_1_STATUSr_BONDSEL_1_DIN_LHf_GET
#define BONDSEL_1_STATUSr_BONDSEL_1_DIN_LHf_SET BCMI_HURACAN_BONDSEL_1_STATUSr_BONDSEL_1_DIN_LHf_SET
#define READ_BONDSEL_1_STATUSr BCMI_HURACAN_READ_BONDSEL_1_STATUSr
#define WRITE_BONDSEL_1_STATUSr BCMI_HURACAN_WRITE_BONDSEL_1_STATUSr
#define MODIFY_BONDSEL_1_STATUSr BCMI_HURACAN_MODIFY_BONDSEL_1_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BONDSEL_1_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BONDSEL_2_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb064
 * DEVAD:    1
 * DESC:     PAD bondsel_2 control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BONDSEL_2_IBYP   
 *     BONDSEL_2_INVERT_EN 
 *     BONDSEL_2_DGLH_CNT 
 *
 ******************************************************************************/
#define BCMI_HURACAN_BONDSEL_2_CONTROLr (0x0001b064 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BONDSEL_2_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program BONDSEL_2_CONTROL.
 *
 */
typedef union BCMI_HURACAN_BONDSEL_2_CONTROLr_s {
	uint32_t v[1];
	uint32_t bondsel_2_control[1];
	uint32_t _bondsel_2_control;
} BCMI_HURACAN_BONDSEL_2_CONTROLr_t;

#define BCMI_HURACAN_BONDSEL_2_CONTROLr_CLR(r) (r).bondsel_2_control[0] = 0
#define BCMI_HURACAN_BONDSEL_2_CONTROLr_SET(r,d) (r).bondsel_2_control[0] = d
#define BCMI_HURACAN_BONDSEL_2_CONTROLr_GET(r) (r).bondsel_2_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BONDSEL_2_CONTROLr_BONDSEL_2_DGLH_CNTf_GET(r) ((((r).bondsel_2_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BONDSEL_2_CONTROLr_BONDSEL_2_DGLH_CNTf_SET(r,f) (r).bondsel_2_control[0]=(((r).bondsel_2_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BONDSEL_2_CONTROLr_BONDSEL_2_INVERT_ENf_GET(r) ((((r).bondsel_2_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_BONDSEL_2_CONTROLr_BONDSEL_2_INVERT_ENf_SET(r,f) (r).bondsel_2_control[0]=(((r).bondsel_2_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_BONDSEL_2_CONTROLr_BONDSEL_2_IBYPf_GET(r) ((((r).bondsel_2_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_BONDSEL_2_CONTROLr_BONDSEL_2_IBYPf_SET(r,f) (r).bondsel_2_control[0]=(((r).bondsel_2_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))

/*
 * These macros can be used to access BONDSEL_2_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_BONDSEL_2_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BONDSEL_2_CONTROLr,_r._bondsel_2_control)
#define BCMI_HURACAN_WRITE_BONDSEL_2_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BONDSEL_2_CONTROLr,_r._bondsel_2_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BONDSEL_2_CONTROLr BCMI_HURACAN_BONDSEL_2_CONTROLr
#define BONDSEL_2_CONTROLr_SIZE BCMI_HURACAN_BONDSEL_2_CONTROLr_SIZE
typedef BCMI_HURACAN_BONDSEL_2_CONTROLr_t BONDSEL_2_CONTROLr_t;
#define BONDSEL_2_CONTROLr_CLR BCMI_HURACAN_BONDSEL_2_CONTROLr_CLR
#define BONDSEL_2_CONTROLr_SET BCMI_HURACAN_BONDSEL_2_CONTROLr_SET
#define BONDSEL_2_CONTROLr_GET BCMI_HURACAN_BONDSEL_2_CONTROLr_GET
#define BONDSEL_2_CONTROLr_BONDSEL_2_DGLH_CNTf_GET BCMI_HURACAN_BONDSEL_2_CONTROLr_BONDSEL_2_DGLH_CNTf_GET
#define BONDSEL_2_CONTROLr_BONDSEL_2_DGLH_CNTf_SET BCMI_HURACAN_BONDSEL_2_CONTROLr_BONDSEL_2_DGLH_CNTf_SET
#define BONDSEL_2_CONTROLr_BONDSEL_2_INVERT_ENf_GET BCMI_HURACAN_BONDSEL_2_CONTROLr_BONDSEL_2_INVERT_ENf_GET
#define BONDSEL_2_CONTROLr_BONDSEL_2_INVERT_ENf_SET BCMI_HURACAN_BONDSEL_2_CONTROLr_BONDSEL_2_INVERT_ENf_SET
#define BONDSEL_2_CONTROLr_BONDSEL_2_IBYPf_GET BCMI_HURACAN_BONDSEL_2_CONTROLr_BONDSEL_2_IBYPf_GET
#define BONDSEL_2_CONTROLr_BONDSEL_2_IBYPf_SET BCMI_HURACAN_BONDSEL_2_CONTROLr_BONDSEL_2_IBYPf_SET
#define READ_BONDSEL_2_CONTROLr BCMI_HURACAN_READ_BONDSEL_2_CONTROLr
#define WRITE_BONDSEL_2_CONTROLr BCMI_HURACAN_WRITE_BONDSEL_2_CONTROLr
#define MODIFY_BONDSEL_2_CONTROLr BCMI_HURACAN_MODIFY_BONDSEL_2_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BONDSEL_2_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BONDSEL_2_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb065
 * DEVAD:    1
 * DESC:     PAD bondsel_2 status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BONDSEL_2_DIN_LH 
 *     BONDSEL_2_DIN_LL 
 *     BONDSEL_2_DIN    
 *
 ******************************************************************************/
#define BCMI_HURACAN_BONDSEL_2_STATUSr (0x0001b065 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BONDSEL_2_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program BONDSEL_2_STATUS.
 *
 */
typedef union BCMI_HURACAN_BONDSEL_2_STATUSr_s {
	uint32_t v[1];
	uint32_t bondsel_2_status[1];
	uint32_t _bondsel_2_status;
} BCMI_HURACAN_BONDSEL_2_STATUSr_t;

#define BCMI_HURACAN_BONDSEL_2_STATUSr_CLR(r) (r).bondsel_2_status[0] = 0
#define BCMI_HURACAN_BONDSEL_2_STATUSr_SET(r,d) (r).bondsel_2_status[0] = d
#define BCMI_HURACAN_BONDSEL_2_STATUSr_GET(r) (r).bondsel_2_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BONDSEL_2_STATUSr_BONDSEL_2_DINf_GET(r) ((((r).bondsel_2_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_BONDSEL_2_STATUSr_BONDSEL_2_DINf_SET(r,f) (r).bondsel_2_status[0]=(((r).bondsel_2_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_BONDSEL_2_STATUSr_BONDSEL_2_DIN_LLf_GET(r) ((((r).bondsel_2_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_BONDSEL_2_STATUSr_BONDSEL_2_DIN_LLf_SET(r,f) (r).bondsel_2_status[0]=(((r).bondsel_2_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_BONDSEL_2_STATUSr_BONDSEL_2_DIN_LHf_GET(r) (((r).bondsel_2_status[0]) & 0x1)
#define BCMI_HURACAN_BONDSEL_2_STATUSr_BONDSEL_2_DIN_LHf_SET(r,f) (r).bondsel_2_status[0]=(((r).bondsel_2_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access BONDSEL_2_STATUS.
 *
 */
#define BCMI_HURACAN_READ_BONDSEL_2_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BONDSEL_2_STATUSr,_r._bondsel_2_status)
#define BCMI_HURACAN_WRITE_BONDSEL_2_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BONDSEL_2_STATUSr,_r._bondsel_2_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BONDSEL_2_STATUSr BCMI_HURACAN_BONDSEL_2_STATUSr
#define BONDSEL_2_STATUSr_SIZE BCMI_HURACAN_BONDSEL_2_STATUSr_SIZE
typedef BCMI_HURACAN_BONDSEL_2_STATUSr_t BONDSEL_2_STATUSr_t;
#define BONDSEL_2_STATUSr_CLR BCMI_HURACAN_BONDSEL_2_STATUSr_CLR
#define BONDSEL_2_STATUSr_SET BCMI_HURACAN_BONDSEL_2_STATUSr_SET
#define BONDSEL_2_STATUSr_GET BCMI_HURACAN_BONDSEL_2_STATUSr_GET
#define BONDSEL_2_STATUSr_BONDSEL_2_DINf_GET BCMI_HURACAN_BONDSEL_2_STATUSr_BONDSEL_2_DINf_GET
#define BONDSEL_2_STATUSr_BONDSEL_2_DINf_SET BCMI_HURACAN_BONDSEL_2_STATUSr_BONDSEL_2_DINf_SET
#define BONDSEL_2_STATUSr_BONDSEL_2_DIN_LLf_GET BCMI_HURACAN_BONDSEL_2_STATUSr_BONDSEL_2_DIN_LLf_GET
#define BONDSEL_2_STATUSr_BONDSEL_2_DIN_LLf_SET BCMI_HURACAN_BONDSEL_2_STATUSr_BONDSEL_2_DIN_LLf_SET
#define BONDSEL_2_STATUSr_BONDSEL_2_DIN_LHf_GET BCMI_HURACAN_BONDSEL_2_STATUSr_BONDSEL_2_DIN_LHf_GET
#define BONDSEL_2_STATUSr_BONDSEL_2_DIN_LHf_SET BCMI_HURACAN_BONDSEL_2_STATUSr_BONDSEL_2_DIN_LHf_SET
#define READ_BONDSEL_2_STATUSr BCMI_HURACAN_READ_BONDSEL_2_STATUSr
#define WRITE_BONDSEL_2_STATUSr BCMI_HURACAN_WRITE_BONDSEL_2_STATUSr
#define MODIFY_BONDSEL_2_STATUSr BCMI_HURACAN_MODIFY_BONDSEL_2_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BONDSEL_2_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  INT_CLK_SEL_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb066
 * DEVAD:    1
 * DESC:     PAD int_clk_sel control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     INT_CLK_SEL_IBYP 
 *     INT_CLK_SEL_INVERT_EN 
 *     INT_CLK_SEL_DGLH_CNT 
 *
 ******************************************************************************/
#define BCMI_HURACAN_INT_CLK_SEL_CONTROLr (0x0001b066 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_INT_CLK_SEL_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program INT_CLK_SEL_CONTROL.
 *
 */
typedef union BCMI_HURACAN_INT_CLK_SEL_CONTROLr_s {
	uint32_t v[1];
	uint32_t int_clk_sel_control[1];
	uint32_t _int_clk_sel_control;
} BCMI_HURACAN_INT_CLK_SEL_CONTROLr_t;

#define BCMI_HURACAN_INT_CLK_SEL_CONTROLr_CLR(r) (r).int_clk_sel_control[0] = 0
#define BCMI_HURACAN_INT_CLK_SEL_CONTROLr_SET(r,d) (r).int_clk_sel_control[0] = d
#define BCMI_HURACAN_INT_CLK_SEL_CONTROLr_GET(r) (r).int_clk_sel_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_INT_CLK_SEL_CONTROLr_INT_CLK_SEL_DGLH_CNTf_GET(r) ((((r).int_clk_sel_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_INT_CLK_SEL_CONTROLr_INT_CLK_SEL_DGLH_CNTf_SET(r,f) (r).int_clk_sel_control[0]=(((r).int_clk_sel_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_INT_CLK_SEL_CONTROLr_INT_CLK_SEL_INVERT_ENf_GET(r) ((((r).int_clk_sel_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_INT_CLK_SEL_CONTROLr_INT_CLK_SEL_INVERT_ENf_SET(r,f) (r).int_clk_sel_control[0]=(((r).int_clk_sel_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_INT_CLK_SEL_CONTROLr_INT_CLK_SEL_IBYPf_GET(r) ((((r).int_clk_sel_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_INT_CLK_SEL_CONTROLr_INT_CLK_SEL_IBYPf_SET(r,f) (r).int_clk_sel_control[0]=(((r).int_clk_sel_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))

/*
 * These macros can be used to access INT_CLK_SEL_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_INT_CLK_SEL_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_INT_CLK_SEL_CONTROLr,_r._int_clk_sel_control)
#define BCMI_HURACAN_WRITE_INT_CLK_SEL_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_INT_CLK_SEL_CONTROLr,_r._int_clk_sel_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define INT_CLK_SEL_CONTROLr BCMI_HURACAN_INT_CLK_SEL_CONTROLr
#define INT_CLK_SEL_CONTROLr_SIZE BCMI_HURACAN_INT_CLK_SEL_CONTROLr_SIZE
typedef BCMI_HURACAN_INT_CLK_SEL_CONTROLr_t INT_CLK_SEL_CONTROLr_t;
#define INT_CLK_SEL_CONTROLr_CLR BCMI_HURACAN_INT_CLK_SEL_CONTROLr_CLR
#define INT_CLK_SEL_CONTROLr_SET BCMI_HURACAN_INT_CLK_SEL_CONTROLr_SET
#define INT_CLK_SEL_CONTROLr_GET BCMI_HURACAN_INT_CLK_SEL_CONTROLr_GET
#define INT_CLK_SEL_CONTROLr_INT_CLK_SEL_DGLH_CNTf_GET BCMI_HURACAN_INT_CLK_SEL_CONTROLr_INT_CLK_SEL_DGLH_CNTf_GET
#define INT_CLK_SEL_CONTROLr_INT_CLK_SEL_DGLH_CNTf_SET BCMI_HURACAN_INT_CLK_SEL_CONTROLr_INT_CLK_SEL_DGLH_CNTf_SET
#define INT_CLK_SEL_CONTROLr_INT_CLK_SEL_INVERT_ENf_GET BCMI_HURACAN_INT_CLK_SEL_CONTROLr_INT_CLK_SEL_INVERT_ENf_GET
#define INT_CLK_SEL_CONTROLr_INT_CLK_SEL_INVERT_ENf_SET BCMI_HURACAN_INT_CLK_SEL_CONTROLr_INT_CLK_SEL_INVERT_ENf_SET
#define INT_CLK_SEL_CONTROLr_INT_CLK_SEL_IBYPf_GET BCMI_HURACAN_INT_CLK_SEL_CONTROLr_INT_CLK_SEL_IBYPf_GET
#define INT_CLK_SEL_CONTROLr_INT_CLK_SEL_IBYPf_SET BCMI_HURACAN_INT_CLK_SEL_CONTROLr_INT_CLK_SEL_IBYPf_SET
#define READ_INT_CLK_SEL_CONTROLr BCMI_HURACAN_READ_INT_CLK_SEL_CONTROLr
#define WRITE_INT_CLK_SEL_CONTROLr BCMI_HURACAN_WRITE_INT_CLK_SEL_CONTROLr
#define MODIFY_INT_CLK_SEL_CONTROLr BCMI_HURACAN_MODIFY_INT_CLK_SEL_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_INT_CLK_SEL_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  INT_CLK_SEL_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb067
 * DEVAD:    1
 * DESC:     PAD int_clk_sel status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     INT_CLK_SEL_DIN_LH 
 *     INT_CLK_SEL_DIN_LL 
 *     INT_CLK_SEL_DIN  
 *
 ******************************************************************************/
#define BCMI_HURACAN_INT_CLK_SEL_STATUSr (0x0001b067 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_INT_CLK_SEL_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program INT_CLK_SEL_STATUS.
 *
 */
typedef union BCMI_HURACAN_INT_CLK_SEL_STATUSr_s {
	uint32_t v[1];
	uint32_t int_clk_sel_status[1];
	uint32_t _int_clk_sel_status;
} BCMI_HURACAN_INT_CLK_SEL_STATUSr_t;

#define BCMI_HURACAN_INT_CLK_SEL_STATUSr_CLR(r) (r).int_clk_sel_status[0] = 0
#define BCMI_HURACAN_INT_CLK_SEL_STATUSr_SET(r,d) (r).int_clk_sel_status[0] = d
#define BCMI_HURACAN_INT_CLK_SEL_STATUSr_GET(r) (r).int_clk_sel_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_INT_CLK_SEL_STATUSr_INT_CLK_SEL_DINf_GET(r) ((((r).int_clk_sel_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_INT_CLK_SEL_STATUSr_INT_CLK_SEL_DINf_SET(r,f) (r).int_clk_sel_status[0]=(((r).int_clk_sel_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_INT_CLK_SEL_STATUSr_INT_CLK_SEL_DIN_LLf_GET(r) ((((r).int_clk_sel_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_INT_CLK_SEL_STATUSr_INT_CLK_SEL_DIN_LLf_SET(r,f) (r).int_clk_sel_status[0]=(((r).int_clk_sel_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_INT_CLK_SEL_STATUSr_INT_CLK_SEL_DIN_LHf_GET(r) (((r).int_clk_sel_status[0]) & 0x1)
#define BCMI_HURACAN_INT_CLK_SEL_STATUSr_INT_CLK_SEL_DIN_LHf_SET(r,f) (r).int_clk_sel_status[0]=(((r).int_clk_sel_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access INT_CLK_SEL_STATUS.
 *
 */
#define BCMI_HURACAN_READ_INT_CLK_SEL_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_INT_CLK_SEL_STATUSr,_r._int_clk_sel_status)
#define BCMI_HURACAN_WRITE_INT_CLK_SEL_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_INT_CLK_SEL_STATUSr,_r._int_clk_sel_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define INT_CLK_SEL_STATUSr BCMI_HURACAN_INT_CLK_SEL_STATUSr
#define INT_CLK_SEL_STATUSr_SIZE BCMI_HURACAN_INT_CLK_SEL_STATUSr_SIZE
typedef BCMI_HURACAN_INT_CLK_SEL_STATUSr_t INT_CLK_SEL_STATUSr_t;
#define INT_CLK_SEL_STATUSr_CLR BCMI_HURACAN_INT_CLK_SEL_STATUSr_CLR
#define INT_CLK_SEL_STATUSr_SET BCMI_HURACAN_INT_CLK_SEL_STATUSr_SET
#define INT_CLK_SEL_STATUSr_GET BCMI_HURACAN_INT_CLK_SEL_STATUSr_GET
#define INT_CLK_SEL_STATUSr_INT_CLK_SEL_DINf_GET BCMI_HURACAN_INT_CLK_SEL_STATUSr_INT_CLK_SEL_DINf_GET
#define INT_CLK_SEL_STATUSr_INT_CLK_SEL_DINf_SET BCMI_HURACAN_INT_CLK_SEL_STATUSr_INT_CLK_SEL_DINf_SET
#define INT_CLK_SEL_STATUSr_INT_CLK_SEL_DIN_LLf_GET BCMI_HURACAN_INT_CLK_SEL_STATUSr_INT_CLK_SEL_DIN_LLf_GET
#define INT_CLK_SEL_STATUSr_INT_CLK_SEL_DIN_LLf_SET BCMI_HURACAN_INT_CLK_SEL_STATUSr_INT_CLK_SEL_DIN_LLf_SET
#define INT_CLK_SEL_STATUSr_INT_CLK_SEL_DIN_LHf_GET BCMI_HURACAN_INT_CLK_SEL_STATUSr_INT_CLK_SEL_DIN_LHf_GET
#define INT_CLK_SEL_STATUSr_INT_CLK_SEL_DIN_LHf_SET BCMI_HURACAN_INT_CLK_SEL_STATUSr_INT_CLK_SEL_DIN_LHf_SET
#define READ_INT_CLK_SEL_STATUSr BCMI_HURACAN_READ_INT_CLK_SEL_STATUSr
#define WRITE_INT_CLK_SEL_STATUSr BCMI_HURACAN_WRITE_INT_CLK_SEL_STATUSr
#define MODIFY_INT_CLK_SEL_STATUSr BCMI_HURACAN_MODIFY_INT_CLK_SEL_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_INT_CLK_SEL_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  MDC_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb068
 * DEVAD:    1
 * DESC:     PAD mdc control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     MDC_IBYP         
 *     MDC_INVERT_EN    
 *     MDC_DGLH_CNT     
 *
 ******************************************************************************/
#define BCMI_HURACAN_MDC_CONTROLr (0x0001b068 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_MDC_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program MDC_CONTROL.
 *
 */
typedef union BCMI_HURACAN_MDC_CONTROLr_s {
	uint32_t v[1];
	uint32_t mdc_control[1];
	uint32_t _mdc_control;
} BCMI_HURACAN_MDC_CONTROLr_t;

#define BCMI_HURACAN_MDC_CONTROLr_CLR(r) (r).mdc_control[0] = 0
#define BCMI_HURACAN_MDC_CONTROLr_SET(r,d) (r).mdc_control[0] = d
#define BCMI_HURACAN_MDC_CONTROLr_GET(r) (r).mdc_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_MDC_CONTROLr_MDC_DGLH_CNTf_GET(r) ((((r).mdc_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_MDC_CONTROLr_MDC_DGLH_CNTf_SET(r,f) (r).mdc_control[0]=(((r).mdc_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_MDC_CONTROLr_MDC_INVERT_ENf_GET(r) ((((r).mdc_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_MDC_CONTROLr_MDC_INVERT_ENf_SET(r,f) (r).mdc_control[0]=(((r).mdc_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_MDC_CONTROLr_MDC_IBYPf_GET(r) ((((r).mdc_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_MDC_CONTROLr_MDC_IBYPf_SET(r,f) (r).mdc_control[0]=(((r).mdc_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))

/*
 * These macros can be used to access MDC_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_MDC_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_MDC_CONTROLr,_r._mdc_control)
#define BCMI_HURACAN_WRITE_MDC_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_MDC_CONTROLr,_r._mdc_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define MDC_CONTROLr BCMI_HURACAN_MDC_CONTROLr
#define MDC_CONTROLr_SIZE BCMI_HURACAN_MDC_CONTROLr_SIZE
typedef BCMI_HURACAN_MDC_CONTROLr_t MDC_CONTROLr_t;
#define MDC_CONTROLr_CLR BCMI_HURACAN_MDC_CONTROLr_CLR
#define MDC_CONTROLr_SET BCMI_HURACAN_MDC_CONTROLr_SET
#define MDC_CONTROLr_GET BCMI_HURACAN_MDC_CONTROLr_GET
#define MDC_CONTROLr_MDC_DGLH_CNTf_GET BCMI_HURACAN_MDC_CONTROLr_MDC_DGLH_CNTf_GET
#define MDC_CONTROLr_MDC_DGLH_CNTf_SET BCMI_HURACAN_MDC_CONTROLr_MDC_DGLH_CNTf_SET
#define MDC_CONTROLr_MDC_INVERT_ENf_GET BCMI_HURACAN_MDC_CONTROLr_MDC_INVERT_ENf_GET
#define MDC_CONTROLr_MDC_INVERT_ENf_SET BCMI_HURACAN_MDC_CONTROLr_MDC_INVERT_ENf_SET
#define MDC_CONTROLr_MDC_IBYPf_GET BCMI_HURACAN_MDC_CONTROLr_MDC_IBYPf_GET
#define MDC_CONTROLr_MDC_IBYPf_SET BCMI_HURACAN_MDC_CONTROLr_MDC_IBYPf_SET
#define READ_MDC_CONTROLr BCMI_HURACAN_READ_MDC_CONTROLr
#define WRITE_MDC_CONTROLr BCMI_HURACAN_WRITE_MDC_CONTROLr
#define MODIFY_MDC_CONTROLr BCMI_HURACAN_MODIFY_MDC_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_MDC_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  MDC_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb069
 * DEVAD:    1
 * DESC:     PAD mdc status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     MDC_DIN_LH       
 *     MDC_DIN_LL       
 *     MDC_DIN          
 *
 ******************************************************************************/
#define BCMI_HURACAN_MDC_STATUSr (0x0001b069 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_MDC_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program MDC_STATUS.
 *
 */
typedef union BCMI_HURACAN_MDC_STATUSr_s {
	uint32_t v[1];
	uint32_t mdc_status[1];
	uint32_t _mdc_status;
} BCMI_HURACAN_MDC_STATUSr_t;

#define BCMI_HURACAN_MDC_STATUSr_CLR(r) (r).mdc_status[0] = 0
#define BCMI_HURACAN_MDC_STATUSr_SET(r,d) (r).mdc_status[0] = d
#define BCMI_HURACAN_MDC_STATUSr_GET(r) (r).mdc_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_MDC_STATUSr_MDC_DINf_GET(r) ((((r).mdc_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_MDC_STATUSr_MDC_DINf_SET(r,f) (r).mdc_status[0]=(((r).mdc_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_MDC_STATUSr_MDC_DIN_LLf_GET(r) ((((r).mdc_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_MDC_STATUSr_MDC_DIN_LLf_SET(r,f) (r).mdc_status[0]=(((r).mdc_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_MDC_STATUSr_MDC_DIN_LHf_GET(r) (((r).mdc_status[0]) & 0x1)
#define BCMI_HURACAN_MDC_STATUSr_MDC_DIN_LHf_SET(r,f) (r).mdc_status[0]=(((r).mdc_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access MDC_STATUS.
 *
 */
#define BCMI_HURACAN_READ_MDC_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_MDC_STATUSr,_r._mdc_status)
#define BCMI_HURACAN_WRITE_MDC_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_MDC_STATUSr,_r._mdc_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define MDC_STATUSr BCMI_HURACAN_MDC_STATUSr
#define MDC_STATUSr_SIZE BCMI_HURACAN_MDC_STATUSr_SIZE
typedef BCMI_HURACAN_MDC_STATUSr_t MDC_STATUSr_t;
#define MDC_STATUSr_CLR BCMI_HURACAN_MDC_STATUSr_CLR
#define MDC_STATUSr_SET BCMI_HURACAN_MDC_STATUSr_SET
#define MDC_STATUSr_GET BCMI_HURACAN_MDC_STATUSr_GET
#define MDC_STATUSr_MDC_DINf_GET BCMI_HURACAN_MDC_STATUSr_MDC_DINf_GET
#define MDC_STATUSr_MDC_DINf_SET BCMI_HURACAN_MDC_STATUSr_MDC_DINf_SET
#define MDC_STATUSr_MDC_DIN_LLf_GET BCMI_HURACAN_MDC_STATUSr_MDC_DIN_LLf_GET
#define MDC_STATUSr_MDC_DIN_LLf_SET BCMI_HURACAN_MDC_STATUSr_MDC_DIN_LLf_SET
#define MDC_STATUSr_MDC_DIN_LHf_GET BCMI_HURACAN_MDC_STATUSr_MDC_DIN_LHf_GET
#define MDC_STATUSr_MDC_DIN_LHf_SET BCMI_HURACAN_MDC_STATUSr_MDC_DIN_LHf_SET
#define READ_MDC_STATUSr BCMI_HURACAN_READ_MDC_STATUSr
#define WRITE_MDC_STATUSr BCMI_HURACAN_WRITE_MDC_STATUSr
#define MODIFY_MDC_STATUSr BCMI_HURACAN_MODIFY_MDC_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_MDC_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  MDIO_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb06a
 * DEVAD:    1
 * DESC:     PAD mdio control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     MDIO_SEL0        
 *     MDIO_SEL1        
 *     MDIO_SEL2        
 *     MDIO_IBOF        
 *     MDIO_INVERT_EN   
 *     MDIO_OUT_FRCVAL  
 *     MDIO_DGLH_CNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_MDIO_CONTROLr (0x0001b06a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_MDIO_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program MDIO_CONTROL.
 *
 */
typedef union BCMI_HURACAN_MDIO_CONTROLr_s {
	uint32_t v[1];
	uint32_t mdio_control[1];
	uint32_t _mdio_control;
} BCMI_HURACAN_MDIO_CONTROLr_t;

#define BCMI_HURACAN_MDIO_CONTROLr_CLR(r) (r).mdio_control[0] = 0
#define BCMI_HURACAN_MDIO_CONTROLr_SET(r,d) (r).mdio_control[0] = d
#define BCMI_HURACAN_MDIO_CONTROLr_GET(r) (r).mdio_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_DGLH_CNTf_GET(r) ((((r).mdio_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_DGLH_CNTf_SET(r,f) (r).mdio_control[0]=(((r).mdio_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_OUT_FRCVALf_GET(r) ((((r).mdio_control[0]) >> 11) & 0x1)
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_OUT_FRCVALf_SET(r,f) (r).mdio_control[0]=(((r).mdio_control[0] & ~((uint32_t)0x1 << 11)) | ((((uint32_t)f) & 0x1) << 11)) | (1 << (16 + 11))
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_INVERT_ENf_GET(r) ((((r).mdio_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_INVERT_ENf_SET(r,f) (r).mdio_control[0]=(((r).mdio_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_IBOFf_GET(r) ((((r).mdio_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_IBOFf_SET(r,f) (r).mdio_control[0]=(((r).mdio_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_SEL2f_GET(r) ((((r).mdio_control[0]) >> 7) & 0x1)
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_SEL2f_SET(r,f) (r).mdio_control[0]=(((r).mdio_control[0] & ~((uint32_t)0x1 << 7)) | ((((uint32_t)f) & 0x1) << 7)) | (1 << (16 + 7))
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_SEL1f_GET(r) ((((r).mdio_control[0]) >> 6) & 0x1)
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_SEL1f_SET(r,f) (r).mdio_control[0]=(((r).mdio_control[0] & ~((uint32_t)0x1 << 6)) | ((((uint32_t)f) & 0x1) << 6)) | (1 << (16 + 6))
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_SEL0f_GET(r) ((((r).mdio_control[0]) >> 5) & 0x1)
#define BCMI_HURACAN_MDIO_CONTROLr_MDIO_SEL0f_SET(r,f) (r).mdio_control[0]=(((r).mdio_control[0] & ~((uint32_t)0x1 << 5)) | ((((uint32_t)f) & 0x1) << 5)) | (1 << (16 + 5))

/*
 * These macros can be used to access MDIO_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_MDIO_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_MDIO_CONTROLr,_r._mdio_control)
#define BCMI_HURACAN_WRITE_MDIO_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_MDIO_CONTROLr,_r._mdio_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define MDIO_CONTROLr BCMI_HURACAN_MDIO_CONTROLr
#define MDIO_CONTROLr_SIZE BCMI_HURACAN_MDIO_CONTROLr_SIZE
typedef BCMI_HURACAN_MDIO_CONTROLr_t MDIO_CONTROLr_t;
#define MDIO_CONTROLr_CLR BCMI_HURACAN_MDIO_CONTROLr_CLR
#define MDIO_CONTROLr_SET BCMI_HURACAN_MDIO_CONTROLr_SET
#define MDIO_CONTROLr_GET BCMI_HURACAN_MDIO_CONTROLr_GET
#define MDIO_CONTROLr_MDIO_DGLH_CNTf_GET BCMI_HURACAN_MDIO_CONTROLr_MDIO_DGLH_CNTf_GET
#define MDIO_CONTROLr_MDIO_DGLH_CNTf_SET BCMI_HURACAN_MDIO_CONTROLr_MDIO_DGLH_CNTf_SET
#define MDIO_CONTROLr_MDIO_OUT_FRCVALf_GET BCMI_HURACAN_MDIO_CONTROLr_MDIO_OUT_FRCVALf_GET
#define MDIO_CONTROLr_MDIO_OUT_FRCVALf_SET BCMI_HURACAN_MDIO_CONTROLr_MDIO_OUT_FRCVALf_SET
#define MDIO_CONTROLr_MDIO_INVERT_ENf_GET BCMI_HURACAN_MDIO_CONTROLr_MDIO_INVERT_ENf_GET
#define MDIO_CONTROLr_MDIO_INVERT_ENf_SET BCMI_HURACAN_MDIO_CONTROLr_MDIO_INVERT_ENf_SET
#define MDIO_CONTROLr_MDIO_IBOFf_GET BCMI_HURACAN_MDIO_CONTROLr_MDIO_IBOFf_GET
#define MDIO_CONTROLr_MDIO_IBOFf_SET BCMI_HURACAN_MDIO_CONTROLr_MDIO_IBOFf_SET
#define MDIO_CONTROLr_MDIO_SEL2f_GET BCMI_HURACAN_MDIO_CONTROLr_MDIO_SEL2f_GET
#define MDIO_CONTROLr_MDIO_SEL2f_SET BCMI_HURACAN_MDIO_CONTROLr_MDIO_SEL2f_SET
#define MDIO_CONTROLr_MDIO_SEL1f_GET BCMI_HURACAN_MDIO_CONTROLr_MDIO_SEL1f_GET
#define MDIO_CONTROLr_MDIO_SEL1f_SET BCMI_HURACAN_MDIO_CONTROLr_MDIO_SEL1f_SET
#define MDIO_CONTROLr_MDIO_SEL0f_GET BCMI_HURACAN_MDIO_CONTROLr_MDIO_SEL0f_GET
#define MDIO_CONTROLr_MDIO_SEL0f_SET BCMI_HURACAN_MDIO_CONTROLr_MDIO_SEL0f_SET
#define READ_MDIO_CONTROLr BCMI_HURACAN_READ_MDIO_CONTROLr
#define WRITE_MDIO_CONTROLr BCMI_HURACAN_WRITE_MDIO_CONTROLr
#define MODIFY_MDIO_CONTROLr BCMI_HURACAN_MODIFY_MDIO_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_MDIO_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  MDIO_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb06b
 * DEVAD:    1
 * DESC:     PAD mdio status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     MDIO_DIN_LH      
 *     MDIO_DIN_LL      
 *     MDIO_DIN         
 *
 ******************************************************************************/
#define BCMI_HURACAN_MDIO_STATUSr (0x0001b06b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_MDIO_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program MDIO_STATUS.
 *
 */
typedef union BCMI_HURACAN_MDIO_STATUSr_s {
	uint32_t v[1];
	uint32_t mdio_status[1];
	uint32_t _mdio_status;
} BCMI_HURACAN_MDIO_STATUSr_t;

#define BCMI_HURACAN_MDIO_STATUSr_CLR(r) (r).mdio_status[0] = 0
#define BCMI_HURACAN_MDIO_STATUSr_SET(r,d) (r).mdio_status[0] = d
#define BCMI_HURACAN_MDIO_STATUSr_GET(r) (r).mdio_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_MDIO_STATUSr_MDIO_DINf_GET(r) ((((r).mdio_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_MDIO_STATUSr_MDIO_DINf_SET(r,f) (r).mdio_status[0]=(((r).mdio_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_MDIO_STATUSr_MDIO_DIN_LLf_GET(r) ((((r).mdio_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_MDIO_STATUSr_MDIO_DIN_LLf_SET(r,f) (r).mdio_status[0]=(((r).mdio_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_MDIO_STATUSr_MDIO_DIN_LHf_GET(r) (((r).mdio_status[0]) & 0x1)
#define BCMI_HURACAN_MDIO_STATUSr_MDIO_DIN_LHf_SET(r,f) (r).mdio_status[0]=(((r).mdio_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access MDIO_STATUS.
 *
 */
#define BCMI_HURACAN_READ_MDIO_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_MDIO_STATUSr,_r._mdio_status)
#define BCMI_HURACAN_WRITE_MDIO_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_MDIO_STATUSr,_r._mdio_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define MDIO_STATUSr BCMI_HURACAN_MDIO_STATUSr
#define MDIO_STATUSr_SIZE BCMI_HURACAN_MDIO_STATUSr_SIZE
typedef BCMI_HURACAN_MDIO_STATUSr_t MDIO_STATUSr_t;
#define MDIO_STATUSr_CLR BCMI_HURACAN_MDIO_STATUSr_CLR
#define MDIO_STATUSr_SET BCMI_HURACAN_MDIO_STATUSr_SET
#define MDIO_STATUSr_GET BCMI_HURACAN_MDIO_STATUSr_GET
#define MDIO_STATUSr_MDIO_DINf_GET BCMI_HURACAN_MDIO_STATUSr_MDIO_DINf_GET
#define MDIO_STATUSr_MDIO_DINf_SET BCMI_HURACAN_MDIO_STATUSr_MDIO_DINf_SET
#define MDIO_STATUSr_MDIO_DIN_LLf_GET BCMI_HURACAN_MDIO_STATUSr_MDIO_DIN_LLf_GET
#define MDIO_STATUSr_MDIO_DIN_LLf_SET BCMI_HURACAN_MDIO_STATUSr_MDIO_DIN_LLf_SET
#define MDIO_STATUSr_MDIO_DIN_LHf_GET BCMI_HURACAN_MDIO_STATUSr_MDIO_DIN_LHf_GET
#define MDIO_STATUSr_MDIO_DIN_LHf_SET BCMI_HURACAN_MDIO_STATUSr_MDIO_DIN_LHf_SET
#define READ_MDIO_STATUSr BCMI_HURACAN_READ_MDIO_STATUSr
#define WRITE_MDIO_STATUSr BCMI_HURACAN_WRITE_MDIO_STATUSr
#define MODIFY_MDIO_STATUSr BCMI_HURACAN_MODIFY_MDIO_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_MDIO_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ADR0_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb06c
 * DEVAD:    1
 * DESC:     PAD adr0 control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     ADR0_PUP         
 *     ADR0_PDN         
 *     ADR0_IBYP        
 *     ADR0_INVERT_EN   
 *     ADR0_DGLH_CNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ADR0_CONTROLr (0x0001b06c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ADR0_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program ADR0_CONTROL.
 *
 */
typedef union BCMI_HURACAN_ADR0_CONTROLr_s {
	uint32_t v[1];
	uint32_t adr0_control[1];
	uint32_t _adr0_control;
} BCMI_HURACAN_ADR0_CONTROLr_t;

#define BCMI_HURACAN_ADR0_CONTROLr_CLR(r) (r).adr0_control[0] = 0
#define BCMI_HURACAN_ADR0_CONTROLr_SET(r,d) (r).adr0_control[0] = d
#define BCMI_HURACAN_ADR0_CONTROLr_GET(r) (r).adr0_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ADR0_CONTROLr_ADR0_DGLH_CNTf_GET(r) ((((r).adr0_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ADR0_CONTROLr_ADR0_DGLH_CNTf_SET(r,f) (r).adr0_control[0]=(((r).adr0_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ADR0_CONTROLr_ADR0_INVERT_ENf_GET(r) ((((r).adr0_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_ADR0_CONTROLr_ADR0_INVERT_ENf_SET(r,f) (r).adr0_control[0]=(((r).adr0_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_ADR0_CONTROLr_ADR0_IBYPf_GET(r) ((((r).adr0_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ADR0_CONTROLr_ADR0_IBYPf_SET(r,f) (r).adr0_control[0]=(((r).adr0_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ADR0_CONTROLr_ADR0_PDNf_GET(r) ((((r).adr0_control[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ADR0_CONTROLr_ADR0_PDNf_SET(r,f) (r).adr0_control[0]=(((r).adr0_control[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ADR0_CONTROLr_ADR0_PUPf_GET(r) ((((r).adr0_control[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ADR0_CONTROLr_ADR0_PUPf_SET(r,f) (r).adr0_control[0]=(((r).adr0_control[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))

/*
 * These macros can be used to access ADR0_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_ADR0_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ADR0_CONTROLr,_r._adr0_control)
#define BCMI_HURACAN_WRITE_ADR0_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ADR0_CONTROLr,_r._adr0_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ADR0_CONTROLr BCMI_HURACAN_ADR0_CONTROLr
#define ADR0_CONTROLr_SIZE BCMI_HURACAN_ADR0_CONTROLr_SIZE
typedef BCMI_HURACAN_ADR0_CONTROLr_t ADR0_CONTROLr_t;
#define ADR0_CONTROLr_CLR BCMI_HURACAN_ADR0_CONTROLr_CLR
#define ADR0_CONTROLr_SET BCMI_HURACAN_ADR0_CONTROLr_SET
#define ADR0_CONTROLr_GET BCMI_HURACAN_ADR0_CONTROLr_GET
#define ADR0_CONTROLr_ADR0_DGLH_CNTf_GET BCMI_HURACAN_ADR0_CONTROLr_ADR0_DGLH_CNTf_GET
#define ADR0_CONTROLr_ADR0_DGLH_CNTf_SET BCMI_HURACAN_ADR0_CONTROLr_ADR0_DGLH_CNTf_SET
#define ADR0_CONTROLr_ADR0_INVERT_ENf_GET BCMI_HURACAN_ADR0_CONTROLr_ADR0_INVERT_ENf_GET
#define ADR0_CONTROLr_ADR0_INVERT_ENf_SET BCMI_HURACAN_ADR0_CONTROLr_ADR0_INVERT_ENf_SET
#define ADR0_CONTROLr_ADR0_IBYPf_GET BCMI_HURACAN_ADR0_CONTROLr_ADR0_IBYPf_GET
#define ADR0_CONTROLr_ADR0_IBYPf_SET BCMI_HURACAN_ADR0_CONTROLr_ADR0_IBYPf_SET
#define ADR0_CONTROLr_ADR0_PDNf_GET BCMI_HURACAN_ADR0_CONTROLr_ADR0_PDNf_GET
#define ADR0_CONTROLr_ADR0_PDNf_SET BCMI_HURACAN_ADR0_CONTROLr_ADR0_PDNf_SET
#define ADR0_CONTROLr_ADR0_PUPf_GET BCMI_HURACAN_ADR0_CONTROLr_ADR0_PUPf_GET
#define ADR0_CONTROLr_ADR0_PUPf_SET BCMI_HURACAN_ADR0_CONTROLr_ADR0_PUPf_SET
#define READ_ADR0_CONTROLr BCMI_HURACAN_READ_ADR0_CONTROLr
#define WRITE_ADR0_CONTROLr BCMI_HURACAN_WRITE_ADR0_CONTROLr
#define MODIFY_ADR0_CONTROLr BCMI_HURACAN_MODIFY_ADR0_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ADR0_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ADR0_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb06d
 * DEVAD:    1
 * DESC:     PAD adr0 status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     ADR0_DIN_LH      
 *     ADR0_DIN_LL      
 *     ADR0_DIN         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ADR0_STATUSr (0x0001b06d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ADR0_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program ADR0_STATUS.
 *
 */
typedef union BCMI_HURACAN_ADR0_STATUSr_s {
	uint32_t v[1];
	uint32_t adr0_status[1];
	uint32_t _adr0_status;
} BCMI_HURACAN_ADR0_STATUSr_t;

#define BCMI_HURACAN_ADR0_STATUSr_CLR(r) (r).adr0_status[0] = 0
#define BCMI_HURACAN_ADR0_STATUSr_SET(r,d) (r).adr0_status[0] = d
#define BCMI_HURACAN_ADR0_STATUSr_GET(r) (r).adr0_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ADR0_STATUSr_ADR0_DINf_GET(r) ((((r).adr0_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ADR0_STATUSr_ADR0_DINf_SET(r,f) (r).adr0_status[0]=(((r).adr0_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ADR0_STATUSr_ADR0_DIN_LLf_GET(r) ((((r).adr0_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ADR0_STATUSr_ADR0_DIN_LLf_SET(r,f) (r).adr0_status[0]=(((r).adr0_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ADR0_STATUSr_ADR0_DIN_LHf_GET(r) (((r).adr0_status[0]) & 0x1)
#define BCMI_HURACAN_ADR0_STATUSr_ADR0_DIN_LHf_SET(r,f) (r).adr0_status[0]=(((r).adr0_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ADR0_STATUS.
 *
 */
#define BCMI_HURACAN_READ_ADR0_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ADR0_STATUSr,_r._adr0_status)
#define BCMI_HURACAN_WRITE_ADR0_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ADR0_STATUSr,_r._adr0_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ADR0_STATUSr BCMI_HURACAN_ADR0_STATUSr
#define ADR0_STATUSr_SIZE BCMI_HURACAN_ADR0_STATUSr_SIZE
typedef BCMI_HURACAN_ADR0_STATUSr_t ADR0_STATUSr_t;
#define ADR0_STATUSr_CLR BCMI_HURACAN_ADR0_STATUSr_CLR
#define ADR0_STATUSr_SET BCMI_HURACAN_ADR0_STATUSr_SET
#define ADR0_STATUSr_GET BCMI_HURACAN_ADR0_STATUSr_GET
#define ADR0_STATUSr_ADR0_DINf_GET BCMI_HURACAN_ADR0_STATUSr_ADR0_DINf_GET
#define ADR0_STATUSr_ADR0_DINf_SET BCMI_HURACAN_ADR0_STATUSr_ADR0_DINf_SET
#define ADR0_STATUSr_ADR0_DIN_LLf_GET BCMI_HURACAN_ADR0_STATUSr_ADR0_DIN_LLf_GET
#define ADR0_STATUSr_ADR0_DIN_LLf_SET BCMI_HURACAN_ADR0_STATUSr_ADR0_DIN_LLf_SET
#define ADR0_STATUSr_ADR0_DIN_LHf_GET BCMI_HURACAN_ADR0_STATUSr_ADR0_DIN_LHf_GET
#define ADR0_STATUSr_ADR0_DIN_LHf_SET BCMI_HURACAN_ADR0_STATUSr_ADR0_DIN_LHf_SET
#define READ_ADR0_STATUSr BCMI_HURACAN_READ_ADR0_STATUSr
#define WRITE_ADR0_STATUSr BCMI_HURACAN_WRITE_ADR0_STATUSr
#define MODIFY_ADR0_STATUSr BCMI_HURACAN_MODIFY_ADR0_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ADR0_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ADR1_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb06e
 * DEVAD:    1
 * DESC:     PAD adr1 control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     ADR1_PUP         
 *     ADR1_PDN         
 *     ADR1_IBYP        
 *     ADR1_INVERT_EN   
 *     ADR1_DGLH_CNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ADR1_CONTROLr (0x0001b06e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ADR1_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program ADR1_CONTROL.
 *
 */
typedef union BCMI_HURACAN_ADR1_CONTROLr_s {
	uint32_t v[1];
	uint32_t adr1_control[1];
	uint32_t _adr1_control;
} BCMI_HURACAN_ADR1_CONTROLr_t;

#define BCMI_HURACAN_ADR1_CONTROLr_CLR(r) (r).adr1_control[0] = 0
#define BCMI_HURACAN_ADR1_CONTROLr_SET(r,d) (r).adr1_control[0] = d
#define BCMI_HURACAN_ADR1_CONTROLr_GET(r) (r).adr1_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ADR1_CONTROLr_ADR1_DGLH_CNTf_GET(r) ((((r).adr1_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ADR1_CONTROLr_ADR1_DGLH_CNTf_SET(r,f) (r).adr1_control[0]=(((r).adr1_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ADR1_CONTROLr_ADR1_INVERT_ENf_GET(r) ((((r).adr1_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_ADR1_CONTROLr_ADR1_INVERT_ENf_SET(r,f) (r).adr1_control[0]=(((r).adr1_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_ADR1_CONTROLr_ADR1_IBYPf_GET(r) ((((r).adr1_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ADR1_CONTROLr_ADR1_IBYPf_SET(r,f) (r).adr1_control[0]=(((r).adr1_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ADR1_CONTROLr_ADR1_PDNf_GET(r) ((((r).adr1_control[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ADR1_CONTROLr_ADR1_PDNf_SET(r,f) (r).adr1_control[0]=(((r).adr1_control[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ADR1_CONTROLr_ADR1_PUPf_GET(r) ((((r).adr1_control[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ADR1_CONTROLr_ADR1_PUPf_SET(r,f) (r).adr1_control[0]=(((r).adr1_control[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))

/*
 * These macros can be used to access ADR1_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_ADR1_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ADR1_CONTROLr,_r._adr1_control)
#define BCMI_HURACAN_WRITE_ADR1_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ADR1_CONTROLr,_r._adr1_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ADR1_CONTROLr BCMI_HURACAN_ADR1_CONTROLr
#define ADR1_CONTROLr_SIZE BCMI_HURACAN_ADR1_CONTROLr_SIZE
typedef BCMI_HURACAN_ADR1_CONTROLr_t ADR1_CONTROLr_t;
#define ADR1_CONTROLr_CLR BCMI_HURACAN_ADR1_CONTROLr_CLR
#define ADR1_CONTROLr_SET BCMI_HURACAN_ADR1_CONTROLr_SET
#define ADR1_CONTROLr_GET BCMI_HURACAN_ADR1_CONTROLr_GET
#define ADR1_CONTROLr_ADR1_DGLH_CNTf_GET BCMI_HURACAN_ADR1_CONTROLr_ADR1_DGLH_CNTf_GET
#define ADR1_CONTROLr_ADR1_DGLH_CNTf_SET BCMI_HURACAN_ADR1_CONTROLr_ADR1_DGLH_CNTf_SET
#define ADR1_CONTROLr_ADR1_INVERT_ENf_GET BCMI_HURACAN_ADR1_CONTROLr_ADR1_INVERT_ENf_GET
#define ADR1_CONTROLr_ADR1_INVERT_ENf_SET BCMI_HURACAN_ADR1_CONTROLr_ADR1_INVERT_ENf_SET
#define ADR1_CONTROLr_ADR1_IBYPf_GET BCMI_HURACAN_ADR1_CONTROLr_ADR1_IBYPf_GET
#define ADR1_CONTROLr_ADR1_IBYPf_SET BCMI_HURACAN_ADR1_CONTROLr_ADR1_IBYPf_SET
#define ADR1_CONTROLr_ADR1_PDNf_GET BCMI_HURACAN_ADR1_CONTROLr_ADR1_PDNf_GET
#define ADR1_CONTROLr_ADR1_PDNf_SET BCMI_HURACAN_ADR1_CONTROLr_ADR1_PDNf_SET
#define ADR1_CONTROLr_ADR1_PUPf_GET BCMI_HURACAN_ADR1_CONTROLr_ADR1_PUPf_GET
#define ADR1_CONTROLr_ADR1_PUPf_SET BCMI_HURACAN_ADR1_CONTROLr_ADR1_PUPf_SET
#define READ_ADR1_CONTROLr BCMI_HURACAN_READ_ADR1_CONTROLr
#define WRITE_ADR1_CONTROLr BCMI_HURACAN_WRITE_ADR1_CONTROLr
#define MODIFY_ADR1_CONTROLr BCMI_HURACAN_MODIFY_ADR1_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ADR1_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ADR1_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb06f
 * DEVAD:    1
 * DESC:     PAD adr1 status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     ADR1_DIN_LH      
 *     ADR1_DIN_LL      
 *     ADR1_DIN         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ADR1_STATUSr (0x0001b06f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ADR1_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program ADR1_STATUS.
 *
 */
typedef union BCMI_HURACAN_ADR1_STATUSr_s {
	uint32_t v[1];
	uint32_t adr1_status[1];
	uint32_t _adr1_status;
} BCMI_HURACAN_ADR1_STATUSr_t;

#define BCMI_HURACAN_ADR1_STATUSr_CLR(r) (r).adr1_status[0] = 0
#define BCMI_HURACAN_ADR1_STATUSr_SET(r,d) (r).adr1_status[0] = d
#define BCMI_HURACAN_ADR1_STATUSr_GET(r) (r).adr1_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ADR1_STATUSr_ADR1_DINf_GET(r) ((((r).adr1_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ADR1_STATUSr_ADR1_DINf_SET(r,f) (r).adr1_status[0]=(((r).adr1_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ADR1_STATUSr_ADR1_DIN_LLf_GET(r) ((((r).adr1_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ADR1_STATUSr_ADR1_DIN_LLf_SET(r,f) (r).adr1_status[0]=(((r).adr1_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ADR1_STATUSr_ADR1_DIN_LHf_GET(r) (((r).adr1_status[0]) & 0x1)
#define BCMI_HURACAN_ADR1_STATUSr_ADR1_DIN_LHf_SET(r,f) (r).adr1_status[0]=(((r).adr1_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ADR1_STATUS.
 *
 */
#define BCMI_HURACAN_READ_ADR1_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ADR1_STATUSr,_r._adr1_status)
#define BCMI_HURACAN_WRITE_ADR1_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ADR1_STATUSr,_r._adr1_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ADR1_STATUSr BCMI_HURACAN_ADR1_STATUSr
#define ADR1_STATUSr_SIZE BCMI_HURACAN_ADR1_STATUSr_SIZE
typedef BCMI_HURACAN_ADR1_STATUSr_t ADR1_STATUSr_t;
#define ADR1_STATUSr_CLR BCMI_HURACAN_ADR1_STATUSr_CLR
#define ADR1_STATUSr_SET BCMI_HURACAN_ADR1_STATUSr_SET
#define ADR1_STATUSr_GET BCMI_HURACAN_ADR1_STATUSr_GET
#define ADR1_STATUSr_ADR1_DINf_GET BCMI_HURACAN_ADR1_STATUSr_ADR1_DINf_GET
#define ADR1_STATUSr_ADR1_DINf_SET BCMI_HURACAN_ADR1_STATUSr_ADR1_DINf_SET
#define ADR1_STATUSr_ADR1_DIN_LLf_GET BCMI_HURACAN_ADR1_STATUSr_ADR1_DIN_LLf_GET
#define ADR1_STATUSr_ADR1_DIN_LLf_SET BCMI_HURACAN_ADR1_STATUSr_ADR1_DIN_LLf_SET
#define ADR1_STATUSr_ADR1_DIN_LHf_GET BCMI_HURACAN_ADR1_STATUSr_ADR1_DIN_LHf_GET
#define ADR1_STATUSr_ADR1_DIN_LHf_SET BCMI_HURACAN_ADR1_STATUSr_ADR1_DIN_LHf_SET
#define READ_ADR1_STATUSr BCMI_HURACAN_READ_ADR1_STATUSr
#define WRITE_ADR1_STATUSr BCMI_HURACAN_WRITE_ADR1_STATUSr
#define MODIFY_ADR1_STATUSr BCMI_HURACAN_MODIFY_ADR1_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ADR1_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ADR2_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb070
 * DEVAD:    1
 * DESC:     PAD adr2 control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     ADR2_PUP         
 *     ADR2_PDN         
 *     ADR2_IBYP        
 *     ADR2_INVERT_EN   
 *     ADR2_DGLH_CNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ADR2_CONTROLr (0x0001b070 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ADR2_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program ADR2_CONTROL.
 *
 */
typedef union BCMI_HURACAN_ADR2_CONTROLr_s {
	uint32_t v[1];
	uint32_t adr2_control[1];
	uint32_t _adr2_control;
} BCMI_HURACAN_ADR2_CONTROLr_t;

#define BCMI_HURACAN_ADR2_CONTROLr_CLR(r) (r).adr2_control[0] = 0
#define BCMI_HURACAN_ADR2_CONTROLr_SET(r,d) (r).adr2_control[0] = d
#define BCMI_HURACAN_ADR2_CONTROLr_GET(r) (r).adr2_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ADR2_CONTROLr_ADR2_DGLH_CNTf_GET(r) ((((r).adr2_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ADR2_CONTROLr_ADR2_DGLH_CNTf_SET(r,f) (r).adr2_control[0]=(((r).adr2_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ADR2_CONTROLr_ADR2_INVERT_ENf_GET(r) ((((r).adr2_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_ADR2_CONTROLr_ADR2_INVERT_ENf_SET(r,f) (r).adr2_control[0]=(((r).adr2_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_ADR2_CONTROLr_ADR2_IBYPf_GET(r) ((((r).adr2_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ADR2_CONTROLr_ADR2_IBYPf_SET(r,f) (r).adr2_control[0]=(((r).adr2_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ADR2_CONTROLr_ADR2_PDNf_GET(r) ((((r).adr2_control[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ADR2_CONTROLr_ADR2_PDNf_SET(r,f) (r).adr2_control[0]=(((r).adr2_control[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ADR2_CONTROLr_ADR2_PUPf_GET(r) ((((r).adr2_control[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ADR2_CONTROLr_ADR2_PUPf_SET(r,f) (r).adr2_control[0]=(((r).adr2_control[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))

/*
 * These macros can be used to access ADR2_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_ADR2_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ADR2_CONTROLr,_r._adr2_control)
#define BCMI_HURACAN_WRITE_ADR2_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ADR2_CONTROLr,_r._adr2_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ADR2_CONTROLr BCMI_HURACAN_ADR2_CONTROLr
#define ADR2_CONTROLr_SIZE BCMI_HURACAN_ADR2_CONTROLr_SIZE
typedef BCMI_HURACAN_ADR2_CONTROLr_t ADR2_CONTROLr_t;
#define ADR2_CONTROLr_CLR BCMI_HURACAN_ADR2_CONTROLr_CLR
#define ADR2_CONTROLr_SET BCMI_HURACAN_ADR2_CONTROLr_SET
#define ADR2_CONTROLr_GET BCMI_HURACAN_ADR2_CONTROLr_GET
#define ADR2_CONTROLr_ADR2_DGLH_CNTf_GET BCMI_HURACAN_ADR2_CONTROLr_ADR2_DGLH_CNTf_GET
#define ADR2_CONTROLr_ADR2_DGLH_CNTf_SET BCMI_HURACAN_ADR2_CONTROLr_ADR2_DGLH_CNTf_SET
#define ADR2_CONTROLr_ADR2_INVERT_ENf_GET BCMI_HURACAN_ADR2_CONTROLr_ADR2_INVERT_ENf_GET
#define ADR2_CONTROLr_ADR2_INVERT_ENf_SET BCMI_HURACAN_ADR2_CONTROLr_ADR2_INVERT_ENf_SET
#define ADR2_CONTROLr_ADR2_IBYPf_GET BCMI_HURACAN_ADR2_CONTROLr_ADR2_IBYPf_GET
#define ADR2_CONTROLr_ADR2_IBYPf_SET BCMI_HURACAN_ADR2_CONTROLr_ADR2_IBYPf_SET
#define ADR2_CONTROLr_ADR2_PDNf_GET BCMI_HURACAN_ADR2_CONTROLr_ADR2_PDNf_GET
#define ADR2_CONTROLr_ADR2_PDNf_SET BCMI_HURACAN_ADR2_CONTROLr_ADR2_PDNf_SET
#define ADR2_CONTROLr_ADR2_PUPf_GET BCMI_HURACAN_ADR2_CONTROLr_ADR2_PUPf_GET
#define ADR2_CONTROLr_ADR2_PUPf_SET BCMI_HURACAN_ADR2_CONTROLr_ADR2_PUPf_SET
#define READ_ADR2_CONTROLr BCMI_HURACAN_READ_ADR2_CONTROLr
#define WRITE_ADR2_CONTROLr BCMI_HURACAN_WRITE_ADR2_CONTROLr
#define MODIFY_ADR2_CONTROLr BCMI_HURACAN_MODIFY_ADR2_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ADR2_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ADR2_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb071
 * DEVAD:    1
 * DESC:     PAD adr2 status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     ADR2_DIN_LH      
 *     ADR2_DIN_LL      
 *     ADR2_DIN         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ADR2_STATUSr (0x0001b071 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ADR2_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program ADR2_STATUS.
 *
 */
typedef union BCMI_HURACAN_ADR2_STATUSr_s {
	uint32_t v[1];
	uint32_t adr2_status[1];
	uint32_t _adr2_status;
} BCMI_HURACAN_ADR2_STATUSr_t;

#define BCMI_HURACAN_ADR2_STATUSr_CLR(r) (r).adr2_status[0] = 0
#define BCMI_HURACAN_ADR2_STATUSr_SET(r,d) (r).adr2_status[0] = d
#define BCMI_HURACAN_ADR2_STATUSr_GET(r) (r).adr2_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ADR2_STATUSr_ADR2_DINf_GET(r) ((((r).adr2_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ADR2_STATUSr_ADR2_DINf_SET(r,f) (r).adr2_status[0]=(((r).adr2_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ADR2_STATUSr_ADR2_DIN_LLf_GET(r) ((((r).adr2_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ADR2_STATUSr_ADR2_DIN_LLf_SET(r,f) (r).adr2_status[0]=(((r).adr2_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ADR2_STATUSr_ADR2_DIN_LHf_GET(r) (((r).adr2_status[0]) & 0x1)
#define BCMI_HURACAN_ADR2_STATUSr_ADR2_DIN_LHf_SET(r,f) (r).adr2_status[0]=(((r).adr2_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ADR2_STATUS.
 *
 */
#define BCMI_HURACAN_READ_ADR2_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ADR2_STATUSr,_r._adr2_status)
#define BCMI_HURACAN_WRITE_ADR2_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ADR2_STATUSr,_r._adr2_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ADR2_STATUSr BCMI_HURACAN_ADR2_STATUSr
#define ADR2_STATUSr_SIZE BCMI_HURACAN_ADR2_STATUSr_SIZE
typedef BCMI_HURACAN_ADR2_STATUSr_t ADR2_STATUSr_t;
#define ADR2_STATUSr_CLR BCMI_HURACAN_ADR2_STATUSr_CLR
#define ADR2_STATUSr_SET BCMI_HURACAN_ADR2_STATUSr_SET
#define ADR2_STATUSr_GET BCMI_HURACAN_ADR2_STATUSr_GET
#define ADR2_STATUSr_ADR2_DINf_GET BCMI_HURACAN_ADR2_STATUSr_ADR2_DINf_GET
#define ADR2_STATUSr_ADR2_DINf_SET BCMI_HURACAN_ADR2_STATUSr_ADR2_DINf_SET
#define ADR2_STATUSr_ADR2_DIN_LLf_GET BCMI_HURACAN_ADR2_STATUSr_ADR2_DIN_LLf_GET
#define ADR2_STATUSr_ADR2_DIN_LLf_SET BCMI_HURACAN_ADR2_STATUSr_ADR2_DIN_LLf_SET
#define ADR2_STATUSr_ADR2_DIN_LHf_GET BCMI_HURACAN_ADR2_STATUSr_ADR2_DIN_LHf_GET
#define ADR2_STATUSr_ADR2_DIN_LHf_SET BCMI_HURACAN_ADR2_STATUSr_ADR2_DIN_LHf_SET
#define READ_ADR2_STATUSr BCMI_HURACAN_READ_ADR2_STATUSr
#define WRITE_ADR2_STATUSr BCMI_HURACAN_WRITE_ADR2_STATUSr
#define MODIFY_ADR2_STATUSr BCMI_HURACAN_MODIFY_ADR2_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ADR2_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ADR3_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb072
 * DEVAD:    1
 * DESC:     PAD adr3 control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     ADR3_PUP         
 *     ADR3_PDN         
 *     ADR3_IBYP        
 *     ADR3_INVERT_EN   
 *     ADR3_DGLH_CNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ADR3_CONTROLr (0x0001b072 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ADR3_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program ADR3_CONTROL.
 *
 */
typedef union BCMI_HURACAN_ADR3_CONTROLr_s {
	uint32_t v[1];
	uint32_t adr3_control[1];
	uint32_t _adr3_control;
} BCMI_HURACAN_ADR3_CONTROLr_t;

#define BCMI_HURACAN_ADR3_CONTROLr_CLR(r) (r).adr3_control[0] = 0
#define BCMI_HURACAN_ADR3_CONTROLr_SET(r,d) (r).adr3_control[0] = d
#define BCMI_HURACAN_ADR3_CONTROLr_GET(r) (r).adr3_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ADR3_CONTROLr_ADR3_DGLH_CNTf_GET(r) ((((r).adr3_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ADR3_CONTROLr_ADR3_DGLH_CNTf_SET(r,f) (r).adr3_control[0]=(((r).adr3_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ADR3_CONTROLr_ADR3_INVERT_ENf_GET(r) ((((r).adr3_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_ADR3_CONTROLr_ADR3_INVERT_ENf_SET(r,f) (r).adr3_control[0]=(((r).adr3_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_ADR3_CONTROLr_ADR3_IBYPf_GET(r) ((((r).adr3_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ADR3_CONTROLr_ADR3_IBYPf_SET(r,f) (r).adr3_control[0]=(((r).adr3_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ADR3_CONTROLr_ADR3_PDNf_GET(r) ((((r).adr3_control[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ADR3_CONTROLr_ADR3_PDNf_SET(r,f) (r).adr3_control[0]=(((r).adr3_control[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ADR3_CONTROLr_ADR3_PUPf_GET(r) ((((r).adr3_control[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ADR3_CONTROLr_ADR3_PUPf_SET(r,f) (r).adr3_control[0]=(((r).adr3_control[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))

/*
 * These macros can be used to access ADR3_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_ADR3_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ADR3_CONTROLr,_r._adr3_control)
#define BCMI_HURACAN_WRITE_ADR3_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ADR3_CONTROLr,_r._adr3_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ADR3_CONTROLr BCMI_HURACAN_ADR3_CONTROLr
#define ADR3_CONTROLr_SIZE BCMI_HURACAN_ADR3_CONTROLr_SIZE
typedef BCMI_HURACAN_ADR3_CONTROLr_t ADR3_CONTROLr_t;
#define ADR3_CONTROLr_CLR BCMI_HURACAN_ADR3_CONTROLr_CLR
#define ADR3_CONTROLr_SET BCMI_HURACAN_ADR3_CONTROLr_SET
#define ADR3_CONTROLr_GET BCMI_HURACAN_ADR3_CONTROLr_GET
#define ADR3_CONTROLr_ADR3_DGLH_CNTf_GET BCMI_HURACAN_ADR3_CONTROLr_ADR3_DGLH_CNTf_GET
#define ADR3_CONTROLr_ADR3_DGLH_CNTf_SET BCMI_HURACAN_ADR3_CONTROLr_ADR3_DGLH_CNTf_SET
#define ADR3_CONTROLr_ADR3_INVERT_ENf_GET BCMI_HURACAN_ADR3_CONTROLr_ADR3_INVERT_ENf_GET
#define ADR3_CONTROLr_ADR3_INVERT_ENf_SET BCMI_HURACAN_ADR3_CONTROLr_ADR3_INVERT_ENf_SET
#define ADR3_CONTROLr_ADR3_IBYPf_GET BCMI_HURACAN_ADR3_CONTROLr_ADR3_IBYPf_GET
#define ADR3_CONTROLr_ADR3_IBYPf_SET BCMI_HURACAN_ADR3_CONTROLr_ADR3_IBYPf_SET
#define ADR3_CONTROLr_ADR3_PDNf_GET BCMI_HURACAN_ADR3_CONTROLr_ADR3_PDNf_GET
#define ADR3_CONTROLr_ADR3_PDNf_SET BCMI_HURACAN_ADR3_CONTROLr_ADR3_PDNf_SET
#define ADR3_CONTROLr_ADR3_PUPf_GET BCMI_HURACAN_ADR3_CONTROLr_ADR3_PUPf_GET
#define ADR3_CONTROLr_ADR3_PUPf_SET BCMI_HURACAN_ADR3_CONTROLr_ADR3_PUPf_SET
#define READ_ADR3_CONTROLr BCMI_HURACAN_READ_ADR3_CONTROLr
#define WRITE_ADR3_CONTROLr BCMI_HURACAN_WRITE_ADR3_CONTROLr
#define MODIFY_ADR3_CONTROLr BCMI_HURACAN_MODIFY_ADR3_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ADR3_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ADR3_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb073
 * DEVAD:    1
 * DESC:     PAD adr3 status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     ADR3_DIN_LH      
 *     ADR3_DIN_LL      
 *     ADR3_DIN         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ADR3_STATUSr (0x0001b073 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ADR3_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program ADR3_STATUS.
 *
 */
typedef union BCMI_HURACAN_ADR3_STATUSr_s {
	uint32_t v[1];
	uint32_t adr3_status[1];
	uint32_t _adr3_status;
} BCMI_HURACAN_ADR3_STATUSr_t;

#define BCMI_HURACAN_ADR3_STATUSr_CLR(r) (r).adr3_status[0] = 0
#define BCMI_HURACAN_ADR3_STATUSr_SET(r,d) (r).adr3_status[0] = d
#define BCMI_HURACAN_ADR3_STATUSr_GET(r) (r).adr3_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ADR3_STATUSr_ADR3_DINf_GET(r) ((((r).adr3_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ADR3_STATUSr_ADR3_DINf_SET(r,f) (r).adr3_status[0]=(((r).adr3_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ADR3_STATUSr_ADR3_DIN_LLf_GET(r) ((((r).adr3_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ADR3_STATUSr_ADR3_DIN_LLf_SET(r,f) (r).adr3_status[0]=(((r).adr3_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ADR3_STATUSr_ADR3_DIN_LHf_GET(r) (((r).adr3_status[0]) & 0x1)
#define BCMI_HURACAN_ADR3_STATUSr_ADR3_DIN_LHf_SET(r,f) (r).adr3_status[0]=(((r).adr3_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ADR3_STATUS.
 *
 */
#define BCMI_HURACAN_READ_ADR3_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ADR3_STATUSr,_r._adr3_status)
#define BCMI_HURACAN_WRITE_ADR3_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ADR3_STATUSr,_r._adr3_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ADR3_STATUSr BCMI_HURACAN_ADR3_STATUSr
#define ADR3_STATUSr_SIZE BCMI_HURACAN_ADR3_STATUSr_SIZE
typedef BCMI_HURACAN_ADR3_STATUSr_t ADR3_STATUSr_t;
#define ADR3_STATUSr_CLR BCMI_HURACAN_ADR3_STATUSr_CLR
#define ADR3_STATUSr_SET BCMI_HURACAN_ADR3_STATUSr_SET
#define ADR3_STATUSr_GET BCMI_HURACAN_ADR3_STATUSr_GET
#define ADR3_STATUSr_ADR3_DINf_GET BCMI_HURACAN_ADR3_STATUSr_ADR3_DINf_GET
#define ADR3_STATUSr_ADR3_DINf_SET BCMI_HURACAN_ADR3_STATUSr_ADR3_DINf_SET
#define ADR3_STATUSr_ADR3_DIN_LLf_GET BCMI_HURACAN_ADR3_STATUSr_ADR3_DIN_LLf_GET
#define ADR3_STATUSr_ADR3_DIN_LLf_SET BCMI_HURACAN_ADR3_STATUSr_ADR3_DIN_LLf_SET
#define ADR3_STATUSr_ADR3_DIN_LHf_GET BCMI_HURACAN_ADR3_STATUSr_ADR3_DIN_LHf_GET
#define ADR3_STATUSr_ADR3_DIN_LHf_SET BCMI_HURACAN_ADR3_STATUSr_ADR3_DIN_LHf_SET
#define READ_ADR3_STATUSr BCMI_HURACAN_READ_ADR3_STATUSr
#define WRITE_ADR3_STATUSr BCMI_HURACAN_WRITE_ADR3_STATUSr
#define MODIFY_ADR3_STATUSr BCMI_HURACAN_MODIFY_ADR3_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ADR3_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  MDIO_SEL_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb074
 * DEVAD:    1
 * DESC:     PAD mdio_sel control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     MDIO_SEL_PUP     
 *     MDIO_SEL_PDN     
 *     MDIO_SEL_IBYP    
 *     MDIO_SEL_INVERT_EN 
 *     MDIO_SEL_DGLH_CNT 
 *
 ******************************************************************************/
#define BCMI_HURACAN_MDIO_SEL_CONTROLr (0x0001b074 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_MDIO_SEL_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program MDIO_SEL_CONTROL.
 *
 */
typedef union BCMI_HURACAN_MDIO_SEL_CONTROLr_s {
	uint32_t v[1];
	uint32_t mdio_sel_control[1];
	uint32_t _mdio_sel_control;
} BCMI_HURACAN_MDIO_SEL_CONTROLr_t;

#define BCMI_HURACAN_MDIO_SEL_CONTROLr_CLR(r) (r).mdio_sel_control[0] = 0
#define BCMI_HURACAN_MDIO_SEL_CONTROLr_SET(r,d) (r).mdio_sel_control[0] = d
#define BCMI_HURACAN_MDIO_SEL_CONTROLr_GET(r) (r).mdio_sel_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_DGLH_CNTf_GET(r) ((((r).mdio_sel_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_DGLH_CNTf_SET(r,f) (r).mdio_sel_control[0]=(((r).mdio_sel_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_INVERT_ENf_GET(r) ((((r).mdio_sel_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_INVERT_ENf_SET(r,f) (r).mdio_sel_control[0]=(((r).mdio_sel_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_IBYPf_GET(r) ((((r).mdio_sel_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_IBYPf_SET(r,f) (r).mdio_sel_control[0]=(((r).mdio_sel_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_PDNf_GET(r) ((((r).mdio_sel_control[0]) >> 2) & 0x1)
#define BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_PDNf_SET(r,f) (r).mdio_sel_control[0]=(((r).mdio_sel_control[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_PUPf_GET(r) ((((r).mdio_sel_control[0]) >> 1) & 0x1)
#define BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_PUPf_SET(r,f) (r).mdio_sel_control[0]=(((r).mdio_sel_control[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))

/*
 * These macros can be used to access MDIO_SEL_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_MDIO_SEL_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_MDIO_SEL_CONTROLr,_r._mdio_sel_control)
#define BCMI_HURACAN_WRITE_MDIO_SEL_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_MDIO_SEL_CONTROLr,_r._mdio_sel_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define MDIO_SEL_CONTROLr BCMI_HURACAN_MDIO_SEL_CONTROLr
#define MDIO_SEL_CONTROLr_SIZE BCMI_HURACAN_MDIO_SEL_CONTROLr_SIZE
typedef BCMI_HURACAN_MDIO_SEL_CONTROLr_t MDIO_SEL_CONTROLr_t;
#define MDIO_SEL_CONTROLr_CLR BCMI_HURACAN_MDIO_SEL_CONTROLr_CLR
#define MDIO_SEL_CONTROLr_SET BCMI_HURACAN_MDIO_SEL_CONTROLr_SET
#define MDIO_SEL_CONTROLr_GET BCMI_HURACAN_MDIO_SEL_CONTROLr_GET
#define MDIO_SEL_CONTROLr_MDIO_SEL_DGLH_CNTf_GET BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_DGLH_CNTf_GET
#define MDIO_SEL_CONTROLr_MDIO_SEL_DGLH_CNTf_SET BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_DGLH_CNTf_SET
#define MDIO_SEL_CONTROLr_MDIO_SEL_INVERT_ENf_GET BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_INVERT_ENf_GET
#define MDIO_SEL_CONTROLr_MDIO_SEL_INVERT_ENf_SET BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_INVERT_ENf_SET
#define MDIO_SEL_CONTROLr_MDIO_SEL_IBYPf_GET BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_IBYPf_GET
#define MDIO_SEL_CONTROLr_MDIO_SEL_IBYPf_SET BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_IBYPf_SET
#define MDIO_SEL_CONTROLr_MDIO_SEL_PDNf_GET BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_PDNf_GET
#define MDIO_SEL_CONTROLr_MDIO_SEL_PDNf_SET BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_PDNf_SET
#define MDIO_SEL_CONTROLr_MDIO_SEL_PUPf_GET BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_PUPf_GET
#define MDIO_SEL_CONTROLr_MDIO_SEL_PUPf_SET BCMI_HURACAN_MDIO_SEL_CONTROLr_MDIO_SEL_PUPf_SET
#define READ_MDIO_SEL_CONTROLr BCMI_HURACAN_READ_MDIO_SEL_CONTROLr
#define WRITE_MDIO_SEL_CONTROLr BCMI_HURACAN_WRITE_MDIO_SEL_CONTROLr
#define MODIFY_MDIO_SEL_CONTROLr BCMI_HURACAN_MODIFY_MDIO_SEL_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_MDIO_SEL_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  MDIO_SEL_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb075
 * DEVAD:    1
 * DESC:     PAD mdio_sel status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     MDIO_SEL_DIN_LH  
 *     MDIO_SEL_DIN_LL  
 *     MDIO_SEL_DIN     
 *
 ******************************************************************************/
#define BCMI_HURACAN_MDIO_SEL_STATUSr (0x0001b075 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_MDIO_SEL_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program MDIO_SEL_STATUS.
 *
 */
typedef union BCMI_HURACAN_MDIO_SEL_STATUSr_s {
	uint32_t v[1];
	uint32_t mdio_sel_status[1];
	uint32_t _mdio_sel_status;
} BCMI_HURACAN_MDIO_SEL_STATUSr_t;

#define BCMI_HURACAN_MDIO_SEL_STATUSr_CLR(r) (r).mdio_sel_status[0] = 0
#define BCMI_HURACAN_MDIO_SEL_STATUSr_SET(r,d) (r).mdio_sel_status[0] = d
#define BCMI_HURACAN_MDIO_SEL_STATUSr_GET(r) (r).mdio_sel_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_MDIO_SEL_STATUSr_MDIO_SEL_DINf_GET(r) ((((r).mdio_sel_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_MDIO_SEL_STATUSr_MDIO_SEL_DINf_SET(r,f) (r).mdio_sel_status[0]=(((r).mdio_sel_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_MDIO_SEL_STATUSr_MDIO_SEL_DIN_LLf_GET(r) ((((r).mdio_sel_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_MDIO_SEL_STATUSr_MDIO_SEL_DIN_LLf_SET(r,f) (r).mdio_sel_status[0]=(((r).mdio_sel_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_MDIO_SEL_STATUSr_MDIO_SEL_DIN_LHf_GET(r) (((r).mdio_sel_status[0]) & 0x1)
#define BCMI_HURACAN_MDIO_SEL_STATUSr_MDIO_SEL_DIN_LHf_SET(r,f) (r).mdio_sel_status[0]=(((r).mdio_sel_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access MDIO_SEL_STATUS.
 *
 */
#define BCMI_HURACAN_READ_MDIO_SEL_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_MDIO_SEL_STATUSr,_r._mdio_sel_status)
#define BCMI_HURACAN_WRITE_MDIO_SEL_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_MDIO_SEL_STATUSr,_r._mdio_sel_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define MDIO_SEL_STATUSr BCMI_HURACAN_MDIO_SEL_STATUSr
#define MDIO_SEL_STATUSr_SIZE BCMI_HURACAN_MDIO_SEL_STATUSr_SIZE
typedef BCMI_HURACAN_MDIO_SEL_STATUSr_t MDIO_SEL_STATUSr_t;
#define MDIO_SEL_STATUSr_CLR BCMI_HURACAN_MDIO_SEL_STATUSr_CLR
#define MDIO_SEL_STATUSr_SET BCMI_HURACAN_MDIO_SEL_STATUSr_SET
#define MDIO_SEL_STATUSr_GET BCMI_HURACAN_MDIO_SEL_STATUSr_GET
#define MDIO_SEL_STATUSr_MDIO_SEL_DINf_GET BCMI_HURACAN_MDIO_SEL_STATUSr_MDIO_SEL_DINf_GET
#define MDIO_SEL_STATUSr_MDIO_SEL_DINf_SET BCMI_HURACAN_MDIO_SEL_STATUSr_MDIO_SEL_DINf_SET
#define MDIO_SEL_STATUSr_MDIO_SEL_DIN_LLf_GET BCMI_HURACAN_MDIO_SEL_STATUSr_MDIO_SEL_DIN_LLf_GET
#define MDIO_SEL_STATUSr_MDIO_SEL_DIN_LLf_SET BCMI_HURACAN_MDIO_SEL_STATUSr_MDIO_SEL_DIN_LLf_SET
#define MDIO_SEL_STATUSr_MDIO_SEL_DIN_LHf_GET BCMI_HURACAN_MDIO_SEL_STATUSr_MDIO_SEL_DIN_LHf_GET
#define MDIO_SEL_STATUSr_MDIO_SEL_DIN_LHf_SET BCMI_HURACAN_MDIO_SEL_STATUSr_MDIO_SEL_DIN_LHf_SET
#define READ_MDIO_SEL_STATUSr BCMI_HURACAN_READ_MDIO_SEL_STATUSr
#define WRITE_MDIO_SEL_STATUSr BCMI_HURACAN_WRITE_MDIO_SEL_STATUSr
#define MODIFY_MDIO_SEL_STATUSr BCMI_HURACAN_MODIFY_MDIO_SEL_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_MDIO_SEL_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  EXT_INTRB_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb076
 * DEVAD:    1
 * DESC:     PAD ext_intrb control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     EXT_INTRB_OEB    
 *     EXT_INTRB_SEL0   
 *     EXT_INTRB_SEL1   
 *     EXT_INTRB_SEL2   
 *     EXT_INTRB_IBOF   
 *     EXT_INTRB_INVERT_EN 
 *     EXT_INTRB_OUT_FRCVAL 
 *     EXT_INTRB_DGLH_CNT 
 *
 ******************************************************************************/
#define BCMI_HURACAN_EXT_INTRB_CONTROLr (0x0001b076 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_EXT_INTRB_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program EXT_INTRB_CONTROL.
 *
 */
typedef union BCMI_HURACAN_EXT_INTRB_CONTROLr_s {
	uint32_t v[1];
	uint32_t ext_intrb_control[1];
	uint32_t _ext_intrb_control;
} BCMI_HURACAN_EXT_INTRB_CONTROLr_t;

#define BCMI_HURACAN_EXT_INTRB_CONTROLr_CLR(r) (r).ext_intrb_control[0] = 0
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_SET(r,d) (r).ext_intrb_control[0] = d
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_GET(r) (r).ext_intrb_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_DGLH_CNTf_GET(r) ((((r).ext_intrb_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_DGLH_CNTf_SET(r,f) (r).ext_intrb_control[0]=(((r).ext_intrb_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_OUT_FRCVALf_GET(r) ((((r).ext_intrb_control[0]) >> 11) & 0x1)
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_OUT_FRCVALf_SET(r,f) (r).ext_intrb_control[0]=(((r).ext_intrb_control[0] & ~((uint32_t)0x1 << 11)) | ((((uint32_t)f) & 0x1) << 11)) | (1 << (16 + 11))
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_INVERT_ENf_GET(r) ((((r).ext_intrb_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_INVERT_ENf_SET(r,f) (r).ext_intrb_control[0]=(((r).ext_intrb_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_IBOFf_GET(r) ((((r).ext_intrb_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_IBOFf_SET(r,f) (r).ext_intrb_control[0]=(((r).ext_intrb_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_SEL2f_GET(r) ((((r).ext_intrb_control[0]) >> 7) & 0x1)
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_SEL2f_SET(r,f) (r).ext_intrb_control[0]=(((r).ext_intrb_control[0] & ~((uint32_t)0x1 << 7)) | ((((uint32_t)f) & 0x1) << 7)) | (1 << (16 + 7))
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_SEL1f_GET(r) ((((r).ext_intrb_control[0]) >> 6) & 0x1)
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_SEL1f_SET(r,f) (r).ext_intrb_control[0]=(((r).ext_intrb_control[0] & ~((uint32_t)0x1 << 6)) | ((((uint32_t)f) & 0x1) << 6)) | (1 << (16 + 6))
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_SEL0f_GET(r) ((((r).ext_intrb_control[0]) >> 5) & 0x1)
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_SEL0f_SET(r,f) (r).ext_intrb_control[0]=(((r).ext_intrb_control[0] & ~((uint32_t)0x1 << 5)) | ((((uint32_t)f) & 0x1) << 5)) | (1 << (16 + 5))
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_OEBf_GET(r) (((r).ext_intrb_control[0]) & 0x1)
#define BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_OEBf_SET(r,f) (r).ext_intrb_control[0]=(((r).ext_intrb_control[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access EXT_INTRB_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_EXT_INTRB_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_EXT_INTRB_CONTROLr,_r._ext_intrb_control)
#define BCMI_HURACAN_WRITE_EXT_INTRB_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_EXT_INTRB_CONTROLr,_r._ext_intrb_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define EXT_INTRB_CONTROLr BCMI_HURACAN_EXT_INTRB_CONTROLr
#define EXT_INTRB_CONTROLr_SIZE BCMI_HURACAN_EXT_INTRB_CONTROLr_SIZE
typedef BCMI_HURACAN_EXT_INTRB_CONTROLr_t EXT_INTRB_CONTROLr_t;
#define EXT_INTRB_CONTROLr_CLR BCMI_HURACAN_EXT_INTRB_CONTROLr_CLR
#define EXT_INTRB_CONTROLr_SET BCMI_HURACAN_EXT_INTRB_CONTROLr_SET
#define EXT_INTRB_CONTROLr_GET BCMI_HURACAN_EXT_INTRB_CONTROLr_GET
#define EXT_INTRB_CONTROLr_EXT_INTRB_DGLH_CNTf_GET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_DGLH_CNTf_GET
#define EXT_INTRB_CONTROLr_EXT_INTRB_DGLH_CNTf_SET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_DGLH_CNTf_SET
#define EXT_INTRB_CONTROLr_EXT_INTRB_OUT_FRCVALf_GET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_OUT_FRCVALf_GET
#define EXT_INTRB_CONTROLr_EXT_INTRB_OUT_FRCVALf_SET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_OUT_FRCVALf_SET
#define EXT_INTRB_CONTROLr_EXT_INTRB_INVERT_ENf_GET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_INVERT_ENf_GET
#define EXT_INTRB_CONTROLr_EXT_INTRB_INVERT_ENf_SET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_INVERT_ENf_SET
#define EXT_INTRB_CONTROLr_EXT_INTRB_IBOFf_GET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_IBOFf_GET
#define EXT_INTRB_CONTROLr_EXT_INTRB_IBOFf_SET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_IBOFf_SET
#define EXT_INTRB_CONTROLr_EXT_INTRB_SEL2f_GET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_SEL2f_GET
#define EXT_INTRB_CONTROLr_EXT_INTRB_SEL2f_SET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_SEL2f_SET
#define EXT_INTRB_CONTROLr_EXT_INTRB_SEL1f_GET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_SEL1f_GET
#define EXT_INTRB_CONTROLr_EXT_INTRB_SEL1f_SET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_SEL1f_SET
#define EXT_INTRB_CONTROLr_EXT_INTRB_SEL0f_GET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_SEL0f_GET
#define EXT_INTRB_CONTROLr_EXT_INTRB_SEL0f_SET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_SEL0f_SET
#define EXT_INTRB_CONTROLr_EXT_INTRB_OEBf_GET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_OEBf_GET
#define EXT_INTRB_CONTROLr_EXT_INTRB_OEBf_SET BCMI_HURACAN_EXT_INTRB_CONTROLr_EXT_INTRB_OEBf_SET
#define READ_EXT_INTRB_CONTROLr BCMI_HURACAN_READ_EXT_INTRB_CONTROLr
#define WRITE_EXT_INTRB_CONTROLr BCMI_HURACAN_WRITE_EXT_INTRB_CONTROLr
#define MODIFY_EXT_INTRB_CONTROLr BCMI_HURACAN_MODIFY_EXT_INTRB_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_EXT_INTRB_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  EXT_INTRB_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb077
 * DEVAD:    1
 * DESC:     PAD ext_intrb status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     EXT_INTRB_DIN_LH 
 *     EXT_INTRB_DIN_LL 
 *     EXT_INTRB_DIN    
 *
 ******************************************************************************/
#define BCMI_HURACAN_EXT_INTRB_STATUSr (0x0001b077 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_EXT_INTRB_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program EXT_INTRB_STATUS.
 *
 */
typedef union BCMI_HURACAN_EXT_INTRB_STATUSr_s {
	uint32_t v[1];
	uint32_t ext_intrb_status[1];
	uint32_t _ext_intrb_status;
} BCMI_HURACAN_EXT_INTRB_STATUSr_t;

#define BCMI_HURACAN_EXT_INTRB_STATUSr_CLR(r) (r).ext_intrb_status[0] = 0
#define BCMI_HURACAN_EXT_INTRB_STATUSr_SET(r,d) (r).ext_intrb_status[0] = d
#define BCMI_HURACAN_EXT_INTRB_STATUSr_GET(r) (r).ext_intrb_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_EXT_INTRB_STATUSr_EXT_INTRB_DINf_GET(r) ((((r).ext_intrb_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_EXT_INTRB_STATUSr_EXT_INTRB_DINf_SET(r,f) (r).ext_intrb_status[0]=(((r).ext_intrb_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_EXT_INTRB_STATUSr_EXT_INTRB_DIN_LLf_GET(r) ((((r).ext_intrb_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_EXT_INTRB_STATUSr_EXT_INTRB_DIN_LLf_SET(r,f) (r).ext_intrb_status[0]=(((r).ext_intrb_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_EXT_INTRB_STATUSr_EXT_INTRB_DIN_LHf_GET(r) (((r).ext_intrb_status[0]) & 0x1)
#define BCMI_HURACAN_EXT_INTRB_STATUSr_EXT_INTRB_DIN_LHf_SET(r,f) (r).ext_intrb_status[0]=(((r).ext_intrb_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access EXT_INTRB_STATUS.
 *
 */
#define BCMI_HURACAN_READ_EXT_INTRB_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_EXT_INTRB_STATUSr,_r._ext_intrb_status)
#define BCMI_HURACAN_WRITE_EXT_INTRB_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_EXT_INTRB_STATUSr,_r._ext_intrb_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define EXT_INTRB_STATUSr BCMI_HURACAN_EXT_INTRB_STATUSr
#define EXT_INTRB_STATUSr_SIZE BCMI_HURACAN_EXT_INTRB_STATUSr_SIZE
typedef BCMI_HURACAN_EXT_INTRB_STATUSr_t EXT_INTRB_STATUSr_t;
#define EXT_INTRB_STATUSr_CLR BCMI_HURACAN_EXT_INTRB_STATUSr_CLR
#define EXT_INTRB_STATUSr_SET BCMI_HURACAN_EXT_INTRB_STATUSr_SET
#define EXT_INTRB_STATUSr_GET BCMI_HURACAN_EXT_INTRB_STATUSr_GET
#define EXT_INTRB_STATUSr_EXT_INTRB_DINf_GET BCMI_HURACAN_EXT_INTRB_STATUSr_EXT_INTRB_DINf_GET
#define EXT_INTRB_STATUSr_EXT_INTRB_DINf_SET BCMI_HURACAN_EXT_INTRB_STATUSr_EXT_INTRB_DINf_SET
#define EXT_INTRB_STATUSr_EXT_INTRB_DIN_LLf_GET BCMI_HURACAN_EXT_INTRB_STATUSr_EXT_INTRB_DIN_LLf_GET
#define EXT_INTRB_STATUSr_EXT_INTRB_DIN_LLf_SET BCMI_HURACAN_EXT_INTRB_STATUSr_EXT_INTRB_DIN_LLf_SET
#define EXT_INTRB_STATUSr_EXT_INTRB_DIN_LHf_GET BCMI_HURACAN_EXT_INTRB_STATUSr_EXT_INTRB_DIN_LHf_GET
#define EXT_INTRB_STATUSr_EXT_INTRB_DIN_LHf_SET BCMI_HURACAN_EXT_INTRB_STATUSr_EXT_INTRB_DIN_LHf_SET
#define READ_EXT_INTRB_STATUSr BCMI_HURACAN_READ_EXT_INTRB_STATUSr
#define WRITE_EXT_INTRB_STATUSr BCMI_HURACAN_WRITE_EXT_INTRB_STATUSr
#define MODIFY_EXT_INTRB_STATUSr BCMI_HURACAN_MODIFY_EXT_INTRB_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_EXT_INTRB_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  GPIO_0_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb078
 * DEVAD:    1
 * DESC:     PAD gpio_0 control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     GPIO_0_OEB       
 *     GPIO_0_PUP       
 *     GPIO_0_PDN       
 *     GPIO_0_IND       
 *     GPIO_0_SEL0      
 *     GPIO_0_SEL1      
 *     GPIO_0_SEL2      
 *     GPIO_0_IBOF      
 *     GPIO_0_INVERT_EN 
 *     GPIO_0_OUT_FRCVAL 
 *     GPIO_0_DGLH_CNT  
 *
 ******************************************************************************/
#define BCMI_HURACAN_GPIO_0_CONTROLr (0x0001b078 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_GPIO_0_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program GPIO_0_CONTROL.
 *
 */
typedef union BCMI_HURACAN_GPIO_0_CONTROLr_s {
	uint32_t v[1];
	uint32_t gpio_0_control[1];
	uint32_t _gpio_0_control;
} BCMI_HURACAN_GPIO_0_CONTROLr_t;

#define BCMI_HURACAN_GPIO_0_CONTROLr_CLR(r) (r).gpio_0_control[0] = 0
#define BCMI_HURACAN_GPIO_0_CONTROLr_SET(r,d) (r).gpio_0_control[0] = d
#define BCMI_HURACAN_GPIO_0_CONTROLr_GET(r) (r).gpio_0_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_DGLH_CNTf_GET(r) ((((r).gpio_0_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_DGLH_CNTf_SET(r,f) (r).gpio_0_control[0]=(((r).gpio_0_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_OUT_FRCVALf_GET(r) ((((r).gpio_0_control[0]) >> 11) & 0x1)
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_OUT_FRCVALf_SET(r,f) (r).gpio_0_control[0]=(((r).gpio_0_control[0] & ~((uint32_t)0x1 << 11)) | ((((uint32_t)f) & 0x1) << 11)) | (1 << (16 + 11))
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_INVERT_ENf_GET(r) ((((r).gpio_0_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_INVERT_ENf_SET(r,f) (r).gpio_0_control[0]=(((r).gpio_0_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_IBOFf_GET(r) ((((r).gpio_0_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_IBOFf_SET(r,f) (r).gpio_0_control[0]=(((r).gpio_0_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_SEL2f_GET(r) ((((r).gpio_0_control[0]) >> 7) & 0x1)
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_SEL2f_SET(r,f) (r).gpio_0_control[0]=(((r).gpio_0_control[0] & ~((uint32_t)0x1 << 7)) | ((((uint32_t)f) & 0x1) << 7)) | (1 << (16 + 7))
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_SEL1f_GET(r) ((((r).gpio_0_control[0]) >> 6) & 0x1)
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_SEL1f_SET(r,f) (r).gpio_0_control[0]=(((r).gpio_0_control[0] & ~((uint32_t)0x1 << 6)) | ((((uint32_t)f) & 0x1) << 6)) | (1 << (16 + 6))
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_SEL0f_GET(r) ((((r).gpio_0_control[0]) >> 5) & 0x1)
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_SEL0f_SET(r,f) (r).gpio_0_control[0]=(((r).gpio_0_control[0] & ~((uint32_t)0x1 << 5)) | ((((uint32_t)f) & 0x1) << 5)) | (1 << (16 + 5))
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_INDf_GET(r) ((((r).gpio_0_control[0]) >> 4) & 0x1)
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_INDf_SET(r,f) (r).gpio_0_control[0]=(((r).gpio_0_control[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_PDNf_GET(r) ((((r).gpio_0_control[0]) >> 2) & 0x1)
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_PDNf_SET(r,f) (r).gpio_0_control[0]=(((r).gpio_0_control[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_PUPf_GET(r) ((((r).gpio_0_control[0]) >> 1) & 0x1)
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_PUPf_SET(r,f) (r).gpio_0_control[0]=(((r).gpio_0_control[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_OEBf_GET(r) (((r).gpio_0_control[0]) & 0x1)
#define BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_OEBf_SET(r,f) (r).gpio_0_control[0]=(((r).gpio_0_control[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access GPIO_0_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_GPIO_0_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_GPIO_0_CONTROLr,_r._gpio_0_control)
#define BCMI_HURACAN_WRITE_GPIO_0_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_GPIO_0_CONTROLr,_r._gpio_0_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define GPIO_0_CONTROLr BCMI_HURACAN_GPIO_0_CONTROLr
#define GPIO_0_CONTROLr_SIZE BCMI_HURACAN_GPIO_0_CONTROLr_SIZE
typedef BCMI_HURACAN_GPIO_0_CONTROLr_t GPIO_0_CONTROLr_t;
#define GPIO_0_CONTROLr_CLR BCMI_HURACAN_GPIO_0_CONTROLr_CLR
#define GPIO_0_CONTROLr_SET BCMI_HURACAN_GPIO_0_CONTROLr_SET
#define GPIO_0_CONTROLr_GET BCMI_HURACAN_GPIO_0_CONTROLr_GET
#define GPIO_0_CONTROLr_GPIO_0_DGLH_CNTf_GET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_DGLH_CNTf_GET
#define GPIO_0_CONTROLr_GPIO_0_DGLH_CNTf_SET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_DGLH_CNTf_SET
#define GPIO_0_CONTROLr_GPIO_0_OUT_FRCVALf_GET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_OUT_FRCVALf_GET
#define GPIO_0_CONTROLr_GPIO_0_OUT_FRCVALf_SET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_OUT_FRCVALf_SET
#define GPIO_0_CONTROLr_GPIO_0_INVERT_ENf_GET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_INVERT_ENf_GET
#define GPIO_0_CONTROLr_GPIO_0_INVERT_ENf_SET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_INVERT_ENf_SET
#define GPIO_0_CONTROLr_GPIO_0_IBOFf_GET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_IBOFf_GET
#define GPIO_0_CONTROLr_GPIO_0_IBOFf_SET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_IBOFf_SET
#define GPIO_0_CONTROLr_GPIO_0_SEL2f_GET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_SEL2f_GET
#define GPIO_0_CONTROLr_GPIO_0_SEL2f_SET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_SEL2f_SET
#define GPIO_0_CONTROLr_GPIO_0_SEL1f_GET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_SEL1f_GET
#define GPIO_0_CONTROLr_GPIO_0_SEL1f_SET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_SEL1f_SET
#define GPIO_0_CONTROLr_GPIO_0_SEL0f_GET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_SEL0f_GET
#define GPIO_0_CONTROLr_GPIO_0_SEL0f_SET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_SEL0f_SET
#define GPIO_0_CONTROLr_GPIO_0_INDf_GET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_INDf_GET
#define GPIO_0_CONTROLr_GPIO_0_INDf_SET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_INDf_SET
#define GPIO_0_CONTROLr_GPIO_0_PDNf_GET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_PDNf_GET
#define GPIO_0_CONTROLr_GPIO_0_PDNf_SET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_PDNf_SET
#define GPIO_0_CONTROLr_GPIO_0_PUPf_GET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_PUPf_GET
#define GPIO_0_CONTROLr_GPIO_0_PUPf_SET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_PUPf_SET
#define GPIO_0_CONTROLr_GPIO_0_OEBf_GET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_OEBf_GET
#define GPIO_0_CONTROLr_GPIO_0_OEBf_SET BCMI_HURACAN_GPIO_0_CONTROLr_GPIO_0_OEBf_SET
#define READ_GPIO_0_CONTROLr BCMI_HURACAN_READ_GPIO_0_CONTROLr
#define WRITE_GPIO_0_CONTROLr BCMI_HURACAN_WRITE_GPIO_0_CONTROLr
#define MODIFY_GPIO_0_CONTROLr BCMI_HURACAN_MODIFY_GPIO_0_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_GPIO_0_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  GPIO_0_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb079
 * DEVAD:    1
 * DESC:     PAD gpio_0 status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     GPIO_0_DIN_LH    
 *     GPIO_0_DIN_LL    
 *     GPIO_0_DIN       
 *
 ******************************************************************************/
#define BCMI_HURACAN_GPIO_0_STATUSr (0x0001b079 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_GPIO_0_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program GPIO_0_STATUS.
 *
 */
typedef union BCMI_HURACAN_GPIO_0_STATUSr_s {
	uint32_t v[1];
	uint32_t gpio_0_status[1];
	uint32_t _gpio_0_status;
} BCMI_HURACAN_GPIO_0_STATUSr_t;

#define BCMI_HURACAN_GPIO_0_STATUSr_CLR(r) (r).gpio_0_status[0] = 0
#define BCMI_HURACAN_GPIO_0_STATUSr_SET(r,d) (r).gpio_0_status[0] = d
#define BCMI_HURACAN_GPIO_0_STATUSr_GET(r) (r).gpio_0_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_GPIO_0_STATUSr_GPIO_0_DINf_GET(r) ((((r).gpio_0_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_GPIO_0_STATUSr_GPIO_0_DINf_SET(r,f) (r).gpio_0_status[0]=(((r).gpio_0_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_GPIO_0_STATUSr_GPIO_0_DIN_LLf_GET(r) ((((r).gpio_0_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_GPIO_0_STATUSr_GPIO_0_DIN_LLf_SET(r,f) (r).gpio_0_status[0]=(((r).gpio_0_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_GPIO_0_STATUSr_GPIO_0_DIN_LHf_GET(r) (((r).gpio_0_status[0]) & 0x1)
#define BCMI_HURACAN_GPIO_0_STATUSr_GPIO_0_DIN_LHf_SET(r,f) (r).gpio_0_status[0]=(((r).gpio_0_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access GPIO_0_STATUS.
 *
 */
#define BCMI_HURACAN_READ_GPIO_0_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_GPIO_0_STATUSr,_r._gpio_0_status)
#define BCMI_HURACAN_WRITE_GPIO_0_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_GPIO_0_STATUSr,_r._gpio_0_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define GPIO_0_STATUSr BCMI_HURACAN_GPIO_0_STATUSr
#define GPIO_0_STATUSr_SIZE BCMI_HURACAN_GPIO_0_STATUSr_SIZE
typedef BCMI_HURACAN_GPIO_0_STATUSr_t GPIO_0_STATUSr_t;
#define GPIO_0_STATUSr_CLR BCMI_HURACAN_GPIO_0_STATUSr_CLR
#define GPIO_0_STATUSr_SET BCMI_HURACAN_GPIO_0_STATUSr_SET
#define GPIO_0_STATUSr_GET BCMI_HURACAN_GPIO_0_STATUSr_GET
#define GPIO_0_STATUSr_GPIO_0_DINf_GET BCMI_HURACAN_GPIO_0_STATUSr_GPIO_0_DINf_GET
#define GPIO_0_STATUSr_GPIO_0_DINf_SET BCMI_HURACAN_GPIO_0_STATUSr_GPIO_0_DINf_SET
#define GPIO_0_STATUSr_GPIO_0_DIN_LLf_GET BCMI_HURACAN_GPIO_0_STATUSr_GPIO_0_DIN_LLf_GET
#define GPIO_0_STATUSr_GPIO_0_DIN_LLf_SET BCMI_HURACAN_GPIO_0_STATUSr_GPIO_0_DIN_LLf_SET
#define GPIO_0_STATUSr_GPIO_0_DIN_LHf_GET BCMI_HURACAN_GPIO_0_STATUSr_GPIO_0_DIN_LHf_GET
#define GPIO_0_STATUSr_GPIO_0_DIN_LHf_SET BCMI_HURACAN_GPIO_0_STATUSr_GPIO_0_DIN_LHf_SET
#define READ_GPIO_0_STATUSr BCMI_HURACAN_READ_GPIO_0_STATUSr
#define WRITE_GPIO_0_STATUSr BCMI_HURACAN_WRITE_GPIO_0_STATUSr
#define MODIFY_GPIO_0_STATUSr BCMI_HURACAN_MODIFY_GPIO_0_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_GPIO_0_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  GPIO_1_CONTROL
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb07a
 * DEVAD:    1
 * DESC:     PAD gpio_1 control register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     GPIO_1_OEB       
 *     GPIO_1_PUP       
 *     GPIO_1_PDN       
 *     GPIO_1_IND       
 *     GPIO_1_SEL0      
 *     GPIO_1_SEL1      
 *     GPIO_1_SEL2      
 *     GPIO_1_IBOF      
 *     GPIO_1_INVERT_EN 
 *     GPIO_1_OUT_FRCVAL 
 *     GPIO_1_DGLH_CNT  
 *
 ******************************************************************************/
#define BCMI_HURACAN_GPIO_1_CONTROLr (0x0001b07a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_GPIO_1_CONTROLr_SIZE 4

/*
 * This structure should be used to declare and program GPIO_1_CONTROL.
 *
 */
typedef union BCMI_HURACAN_GPIO_1_CONTROLr_s {
	uint32_t v[1];
	uint32_t gpio_1_control[1];
	uint32_t _gpio_1_control;
} BCMI_HURACAN_GPIO_1_CONTROLr_t;

#define BCMI_HURACAN_GPIO_1_CONTROLr_CLR(r) (r).gpio_1_control[0] = 0
#define BCMI_HURACAN_GPIO_1_CONTROLr_SET(r,d) (r).gpio_1_control[0] = d
#define BCMI_HURACAN_GPIO_1_CONTROLr_GET(r) (r).gpio_1_control[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_DGLH_CNTf_GET(r) ((((r).gpio_1_control[0]) >> 12) & 0xf)
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_DGLH_CNTf_SET(r,f) (r).gpio_1_control[0]=(((r).gpio_1_control[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_OUT_FRCVALf_GET(r) ((((r).gpio_1_control[0]) >> 11) & 0x1)
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_OUT_FRCVALf_SET(r,f) (r).gpio_1_control[0]=(((r).gpio_1_control[0] & ~((uint32_t)0x1 << 11)) | ((((uint32_t)f) & 0x1) << 11)) | (1 << (16 + 11))
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_INVERT_ENf_GET(r) ((((r).gpio_1_control[0]) >> 10) & 0x1)
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_INVERT_ENf_SET(r,f) (r).gpio_1_control[0]=(((r).gpio_1_control[0] & ~((uint32_t)0x1 << 10)) | ((((uint32_t)f) & 0x1) << 10)) | (1 << (16 + 10))
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_IBOFf_GET(r) ((((r).gpio_1_control[0]) >> 9) & 0x1)
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_IBOFf_SET(r,f) (r).gpio_1_control[0]=(((r).gpio_1_control[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_SEL2f_GET(r) ((((r).gpio_1_control[0]) >> 7) & 0x1)
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_SEL2f_SET(r,f) (r).gpio_1_control[0]=(((r).gpio_1_control[0] & ~((uint32_t)0x1 << 7)) | ((((uint32_t)f) & 0x1) << 7)) | (1 << (16 + 7))
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_SEL1f_GET(r) ((((r).gpio_1_control[0]) >> 6) & 0x1)
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_SEL1f_SET(r,f) (r).gpio_1_control[0]=(((r).gpio_1_control[0] & ~((uint32_t)0x1 << 6)) | ((((uint32_t)f) & 0x1) << 6)) | (1 << (16 + 6))
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_SEL0f_GET(r) ((((r).gpio_1_control[0]) >> 5) & 0x1)
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_SEL0f_SET(r,f) (r).gpio_1_control[0]=(((r).gpio_1_control[0] & ~((uint32_t)0x1 << 5)) | ((((uint32_t)f) & 0x1) << 5)) | (1 << (16 + 5))
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_INDf_GET(r) ((((r).gpio_1_control[0]) >> 4) & 0x1)
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_INDf_SET(r,f) (r).gpio_1_control[0]=(((r).gpio_1_control[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_PDNf_GET(r) ((((r).gpio_1_control[0]) >> 2) & 0x1)
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_PDNf_SET(r,f) (r).gpio_1_control[0]=(((r).gpio_1_control[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_PUPf_GET(r) ((((r).gpio_1_control[0]) >> 1) & 0x1)
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_PUPf_SET(r,f) (r).gpio_1_control[0]=(((r).gpio_1_control[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_OEBf_GET(r) (((r).gpio_1_control[0]) & 0x1)
#define BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_OEBf_SET(r,f) (r).gpio_1_control[0]=(((r).gpio_1_control[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access GPIO_1_CONTROL.
 *
 */
#define BCMI_HURACAN_READ_GPIO_1_CONTROLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_GPIO_1_CONTROLr,_r._gpio_1_control)
#define BCMI_HURACAN_WRITE_GPIO_1_CONTROLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_GPIO_1_CONTROLr,_r._gpio_1_control)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define GPIO_1_CONTROLr BCMI_HURACAN_GPIO_1_CONTROLr
#define GPIO_1_CONTROLr_SIZE BCMI_HURACAN_GPIO_1_CONTROLr_SIZE
typedef BCMI_HURACAN_GPIO_1_CONTROLr_t GPIO_1_CONTROLr_t;
#define GPIO_1_CONTROLr_CLR BCMI_HURACAN_GPIO_1_CONTROLr_CLR
#define GPIO_1_CONTROLr_SET BCMI_HURACAN_GPIO_1_CONTROLr_SET
#define GPIO_1_CONTROLr_GET BCMI_HURACAN_GPIO_1_CONTROLr_GET
#define GPIO_1_CONTROLr_GPIO_1_DGLH_CNTf_GET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_DGLH_CNTf_GET
#define GPIO_1_CONTROLr_GPIO_1_DGLH_CNTf_SET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_DGLH_CNTf_SET
#define GPIO_1_CONTROLr_GPIO_1_OUT_FRCVALf_GET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_OUT_FRCVALf_GET
#define GPIO_1_CONTROLr_GPIO_1_OUT_FRCVALf_SET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_OUT_FRCVALf_SET
#define GPIO_1_CONTROLr_GPIO_1_INVERT_ENf_GET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_INVERT_ENf_GET
#define GPIO_1_CONTROLr_GPIO_1_INVERT_ENf_SET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_INVERT_ENf_SET
#define GPIO_1_CONTROLr_GPIO_1_IBOFf_GET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_IBOFf_GET
#define GPIO_1_CONTROLr_GPIO_1_IBOFf_SET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_IBOFf_SET
#define GPIO_1_CONTROLr_GPIO_1_SEL2f_GET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_SEL2f_GET
#define GPIO_1_CONTROLr_GPIO_1_SEL2f_SET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_SEL2f_SET
#define GPIO_1_CONTROLr_GPIO_1_SEL1f_GET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_SEL1f_GET
#define GPIO_1_CONTROLr_GPIO_1_SEL1f_SET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_SEL1f_SET
#define GPIO_1_CONTROLr_GPIO_1_SEL0f_GET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_SEL0f_GET
#define GPIO_1_CONTROLr_GPIO_1_SEL0f_SET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_SEL0f_SET
#define GPIO_1_CONTROLr_GPIO_1_INDf_GET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_INDf_GET
#define GPIO_1_CONTROLr_GPIO_1_INDf_SET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_INDf_SET
#define GPIO_1_CONTROLr_GPIO_1_PDNf_GET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_PDNf_GET
#define GPIO_1_CONTROLr_GPIO_1_PDNf_SET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_PDNf_SET
#define GPIO_1_CONTROLr_GPIO_1_PUPf_GET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_PUPf_GET
#define GPIO_1_CONTROLr_GPIO_1_PUPf_SET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_PUPf_SET
#define GPIO_1_CONTROLr_GPIO_1_OEBf_GET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_OEBf_GET
#define GPIO_1_CONTROLr_GPIO_1_OEBf_SET BCMI_HURACAN_GPIO_1_CONTROLr_GPIO_1_OEBf_SET
#define READ_GPIO_1_CONTROLr BCMI_HURACAN_READ_GPIO_1_CONTROLr
#define WRITE_GPIO_1_CONTROLr BCMI_HURACAN_WRITE_GPIO_1_CONTROLr
#define MODIFY_GPIO_1_CONTROLr BCMI_HURACAN_MODIFY_GPIO_1_CONTROLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_GPIO_1_CONTROLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  GPIO_1_STATUS
 * BLOCKS:   PAD_CTRL_QUAD_D
 * REGADDR:  0xb07b
 * DEVAD:    1
 * DESC:     PAD gpio_1 status register
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     GPIO_1_DIN_LH    
 *     GPIO_1_DIN_LL    
 *     GPIO_1_DIN       
 *
 ******************************************************************************/
#define BCMI_HURACAN_GPIO_1_STATUSr (0x0001b07b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_GPIO_1_STATUSr_SIZE 4

/*
 * This structure should be used to declare and program GPIO_1_STATUS.
 *
 */
typedef union BCMI_HURACAN_GPIO_1_STATUSr_s {
	uint32_t v[1];
	uint32_t gpio_1_status[1];
	uint32_t _gpio_1_status;
} BCMI_HURACAN_GPIO_1_STATUSr_t;

#define BCMI_HURACAN_GPIO_1_STATUSr_CLR(r) (r).gpio_1_status[0] = 0
#define BCMI_HURACAN_GPIO_1_STATUSr_SET(r,d) (r).gpio_1_status[0] = d
#define BCMI_HURACAN_GPIO_1_STATUSr_GET(r) (r).gpio_1_status[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_GPIO_1_STATUSr_GPIO_1_DINf_GET(r) ((((r).gpio_1_status[0]) >> 2) & 0x1)
#define BCMI_HURACAN_GPIO_1_STATUSr_GPIO_1_DINf_SET(r,f) (r).gpio_1_status[0]=(((r).gpio_1_status[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_GPIO_1_STATUSr_GPIO_1_DIN_LLf_GET(r) ((((r).gpio_1_status[0]) >> 1) & 0x1)
#define BCMI_HURACAN_GPIO_1_STATUSr_GPIO_1_DIN_LLf_SET(r,f) (r).gpio_1_status[0]=(((r).gpio_1_status[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_GPIO_1_STATUSr_GPIO_1_DIN_LHf_GET(r) (((r).gpio_1_status[0]) & 0x1)
#define BCMI_HURACAN_GPIO_1_STATUSr_GPIO_1_DIN_LHf_SET(r,f) (r).gpio_1_status[0]=(((r).gpio_1_status[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access GPIO_1_STATUS.
 *
 */
#define BCMI_HURACAN_READ_GPIO_1_STATUSr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_GPIO_1_STATUSr,_r._gpio_1_status)
#define BCMI_HURACAN_WRITE_GPIO_1_STATUSr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_GPIO_1_STATUSr,_r._gpio_1_status)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define GPIO_1_STATUSr BCMI_HURACAN_GPIO_1_STATUSr
#define GPIO_1_STATUSr_SIZE BCMI_HURACAN_GPIO_1_STATUSr_SIZE
typedef BCMI_HURACAN_GPIO_1_STATUSr_t GPIO_1_STATUSr_t;
#define GPIO_1_STATUSr_CLR BCMI_HURACAN_GPIO_1_STATUSr_CLR
#define GPIO_1_STATUSr_SET BCMI_HURACAN_GPIO_1_STATUSr_SET
#define GPIO_1_STATUSr_GET BCMI_HURACAN_GPIO_1_STATUSr_GET
#define GPIO_1_STATUSr_GPIO_1_DINf_GET BCMI_HURACAN_GPIO_1_STATUSr_GPIO_1_DINf_GET
#define GPIO_1_STATUSr_GPIO_1_DINf_SET BCMI_HURACAN_GPIO_1_STATUSr_GPIO_1_DINf_SET
#define GPIO_1_STATUSr_GPIO_1_DIN_LLf_GET BCMI_HURACAN_GPIO_1_STATUSr_GPIO_1_DIN_LLf_GET
#define GPIO_1_STATUSr_GPIO_1_DIN_LLf_SET BCMI_HURACAN_GPIO_1_STATUSr_GPIO_1_DIN_LLf_SET
#define GPIO_1_STATUSr_GPIO_1_DIN_LHf_GET BCMI_HURACAN_GPIO_1_STATUSr_GPIO_1_DIN_LHf_GET
#define GPIO_1_STATUSr_GPIO_1_DIN_LHf_SET BCMI_HURACAN_GPIO_1_STATUSr_GPIO_1_DIN_LHf_SET
#define READ_GPIO_1_STATUSr BCMI_HURACAN_READ_GPIO_1_STATUSr
#define WRITE_GPIO_1_STATUSr BCMI_HURACAN_WRITE_GPIO_1_STATUSr
#define MODIFY_GPIO_1_STATUSr BCMI_HURACAN_MODIFY_GPIO_1_STATUSr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_GPIO_1_STATUSr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_MAP0TO3_CTRL
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb080
 * DEVAD:    1
 * DESC:     Rescal to BG control map, value 0 to 3
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RES2BG0          
 *     RES2BG1          
 *     RES2BG2          
 *     RES2BG3          
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_MAP0TO3_CTRLr (0x0001b080 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_MAP0TO3_CTRLr_SIZE 4

/*
 * This structure should be used to declare and program BG_MAP0TO3_CTRL.
 *
 */
typedef union BCMI_HURACAN_BG_MAP0TO3_CTRLr_s {
	uint32_t v[1];
	uint32_t bg_map0to3_ctrl[1];
	uint32_t _bg_map0to3_ctrl;
} BCMI_HURACAN_BG_MAP0TO3_CTRLr_t;

#define BCMI_HURACAN_BG_MAP0TO3_CTRLr_CLR(r) (r).bg_map0to3_ctrl[0] = 0
#define BCMI_HURACAN_BG_MAP0TO3_CTRLr_SET(r,d) (r).bg_map0to3_ctrl[0] = d
#define BCMI_HURACAN_BG_MAP0TO3_CTRLr_GET(r) (r).bg_map0to3_ctrl[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG3f_GET(r) ((((r).bg_map0to3_ctrl[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG3f_SET(r,f) (r).bg_map0to3_ctrl[0]=(((r).bg_map0to3_ctrl[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG2f_GET(r) ((((r).bg_map0to3_ctrl[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG2f_SET(r,f) (r).bg_map0to3_ctrl[0]=(((r).bg_map0to3_ctrl[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG1f_GET(r) ((((r).bg_map0to3_ctrl[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG1f_SET(r,f) (r).bg_map0to3_ctrl[0]=(((r).bg_map0to3_ctrl[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG0f_GET(r) (((r).bg_map0to3_ctrl[0]) & 0xf)
#define BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG0f_SET(r,f) (r).bg_map0to3_ctrl[0]=(((r).bg_map0to3_ctrl[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_MAP0TO3_CTRL.
 *
 */
#define BCMI_HURACAN_READ_BG_MAP0TO3_CTRLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_MAP0TO3_CTRLr,_r._bg_map0to3_ctrl)
#define BCMI_HURACAN_WRITE_BG_MAP0TO3_CTRLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_MAP0TO3_CTRLr,_r._bg_map0to3_ctrl)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_MAP0TO3_CTRLr BCMI_HURACAN_BG_MAP0TO3_CTRLr
#define BG_MAP0TO3_CTRLr_SIZE BCMI_HURACAN_BG_MAP0TO3_CTRLr_SIZE
typedef BCMI_HURACAN_BG_MAP0TO3_CTRLr_t BG_MAP0TO3_CTRLr_t;
#define BG_MAP0TO3_CTRLr_CLR BCMI_HURACAN_BG_MAP0TO3_CTRLr_CLR
#define BG_MAP0TO3_CTRLr_SET BCMI_HURACAN_BG_MAP0TO3_CTRLr_SET
#define BG_MAP0TO3_CTRLr_GET BCMI_HURACAN_BG_MAP0TO3_CTRLr_GET
#define BG_MAP0TO3_CTRLr_RES2BG3f_GET BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG3f_GET
#define BG_MAP0TO3_CTRLr_RES2BG3f_SET BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG3f_SET
#define BG_MAP0TO3_CTRLr_RES2BG2f_GET BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG2f_GET
#define BG_MAP0TO3_CTRLr_RES2BG2f_SET BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG2f_SET
#define BG_MAP0TO3_CTRLr_RES2BG1f_GET BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG1f_GET
#define BG_MAP0TO3_CTRLr_RES2BG1f_SET BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG1f_SET
#define BG_MAP0TO3_CTRLr_RES2BG0f_GET BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG0f_GET
#define BG_MAP0TO3_CTRLr_RES2BG0f_SET BCMI_HURACAN_BG_MAP0TO3_CTRLr_RES2BG0f_SET
#define READ_BG_MAP0TO3_CTRLr BCMI_HURACAN_READ_BG_MAP0TO3_CTRLr
#define WRITE_BG_MAP0TO3_CTRLr BCMI_HURACAN_WRITE_BG_MAP0TO3_CTRLr
#define MODIFY_BG_MAP0TO3_CTRLr BCMI_HURACAN_MODIFY_BG_MAP0TO3_CTRLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_MAP0TO3_CTRLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_MAP4TO7_CTRL
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb081
 * DEVAD:    1
 * DESC:     Rescal to BG control map, value 4 to 7
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RES2BG4          
 *     RES2BG5          
 *     RES2BG6          
 *     RES2BG7          
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_MAP4TO7_CTRLr (0x0001b081 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_MAP4TO7_CTRLr_SIZE 4

/*
 * This structure should be used to declare and program BG_MAP4TO7_CTRL.
 *
 */
typedef union BCMI_HURACAN_BG_MAP4TO7_CTRLr_s {
	uint32_t v[1];
	uint32_t bg_map4to7_ctrl[1];
	uint32_t _bg_map4to7_ctrl;
} BCMI_HURACAN_BG_MAP4TO7_CTRLr_t;

#define BCMI_HURACAN_BG_MAP4TO7_CTRLr_CLR(r) (r).bg_map4to7_ctrl[0] = 0
#define BCMI_HURACAN_BG_MAP4TO7_CTRLr_SET(r,d) (r).bg_map4to7_ctrl[0] = d
#define BCMI_HURACAN_BG_MAP4TO7_CTRLr_GET(r) (r).bg_map4to7_ctrl[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG7f_GET(r) ((((r).bg_map4to7_ctrl[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG7f_SET(r,f) (r).bg_map4to7_ctrl[0]=(((r).bg_map4to7_ctrl[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG6f_GET(r) ((((r).bg_map4to7_ctrl[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG6f_SET(r,f) (r).bg_map4to7_ctrl[0]=(((r).bg_map4to7_ctrl[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG5f_GET(r) ((((r).bg_map4to7_ctrl[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG5f_SET(r,f) (r).bg_map4to7_ctrl[0]=(((r).bg_map4to7_ctrl[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG4f_GET(r) (((r).bg_map4to7_ctrl[0]) & 0xf)
#define BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG4f_SET(r,f) (r).bg_map4to7_ctrl[0]=(((r).bg_map4to7_ctrl[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_MAP4TO7_CTRL.
 *
 */
#define BCMI_HURACAN_READ_BG_MAP4TO7_CTRLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_MAP4TO7_CTRLr,_r._bg_map4to7_ctrl)
#define BCMI_HURACAN_WRITE_BG_MAP4TO7_CTRLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_MAP4TO7_CTRLr,_r._bg_map4to7_ctrl)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_MAP4TO7_CTRLr BCMI_HURACAN_BG_MAP4TO7_CTRLr
#define BG_MAP4TO7_CTRLr_SIZE BCMI_HURACAN_BG_MAP4TO7_CTRLr_SIZE
typedef BCMI_HURACAN_BG_MAP4TO7_CTRLr_t BG_MAP4TO7_CTRLr_t;
#define BG_MAP4TO7_CTRLr_CLR BCMI_HURACAN_BG_MAP4TO7_CTRLr_CLR
#define BG_MAP4TO7_CTRLr_SET BCMI_HURACAN_BG_MAP4TO7_CTRLr_SET
#define BG_MAP4TO7_CTRLr_GET BCMI_HURACAN_BG_MAP4TO7_CTRLr_GET
#define BG_MAP4TO7_CTRLr_RES2BG7f_GET BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG7f_GET
#define BG_MAP4TO7_CTRLr_RES2BG7f_SET BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG7f_SET
#define BG_MAP4TO7_CTRLr_RES2BG6f_GET BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG6f_GET
#define BG_MAP4TO7_CTRLr_RES2BG6f_SET BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG6f_SET
#define BG_MAP4TO7_CTRLr_RES2BG5f_GET BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG5f_GET
#define BG_MAP4TO7_CTRLr_RES2BG5f_SET BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG5f_SET
#define BG_MAP4TO7_CTRLr_RES2BG4f_GET BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG4f_GET
#define BG_MAP4TO7_CTRLr_RES2BG4f_SET BCMI_HURACAN_BG_MAP4TO7_CTRLr_RES2BG4f_SET
#define READ_BG_MAP4TO7_CTRLr BCMI_HURACAN_READ_BG_MAP4TO7_CTRLr
#define WRITE_BG_MAP4TO7_CTRLr BCMI_HURACAN_WRITE_BG_MAP4TO7_CTRLr
#define MODIFY_BG_MAP4TO7_CTRLr BCMI_HURACAN_MODIFY_BG_MAP4TO7_CTRLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_MAP4TO7_CTRLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_MAP8TOB_CTRL
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb082
 * DEVAD:    1
 * DESC:     Rescal to BG control map, value 8 to B
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RES2BG8          
 *     RES2BG9          
 *     RES2BGA          
 *     RES2BGB          
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_MAP8TOB_CTRLr (0x0001b082 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_MAP8TOB_CTRLr_SIZE 4

/*
 * This structure should be used to declare and program BG_MAP8TOB_CTRL.
 *
 */
typedef union BCMI_HURACAN_BG_MAP8TOB_CTRLr_s {
	uint32_t v[1];
	uint32_t bg_map8tob_ctrl[1];
	uint32_t _bg_map8tob_ctrl;
} BCMI_HURACAN_BG_MAP8TOB_CTRLr_t;

#define BCMI_HURACAN_BG_MAP8TOB_CTRLr_CLR(r) (r).bg_map8tob_ctrl[0] = 0
#define BCMI_HURACAN_BG_MAP8TOB_CTRLr_SET(r,d) (r).bg_map8tob_ctrl[0] = d
#define BCMI_HURACAN_BG_MAP8TOB_CTRLr_GET(r) (r).bg_map8tob_ctrl[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BGBf_GET(r) ((((r).bg_map8tob_ctrl[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BGBf_SET(r,f) (r).bg_map8tob_ctrl[0]=(((r).bg_map8tob_ctrl[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BGAf_GET(r) ((((r).bg_map8tob_ctrl[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BGAf_SET(r,f) (r).bg_map8tob_ctrl[0]=(((r).bg_map8tob_ctrl[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BG9f_GET(r) ((((r).bg_map8tob_ctrl[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BG9f_SET(r,f) (r).bg_map8tob_ctrl[0]=(((r).bg_map8tob_ctrl[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BG8f_GET(r) (((r).bg_map8tob_ctrl[0]) & 0xf)
#define BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BG8f_SET(r,f) (r).bg_map8tob_ctrl[0]=(((r).bg_map8tob_ctrl[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_MAP8TOB_CTRL.
 *
 */
#define BCMI_HURACAN_READ_BG_MAP8TOB_CTRLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_MAP8TOB_CTRLr,_r._bg_map8tob_ctrl)
#define BCMI_HURACAN_WRITE_BG_MAP8TOB_CTRLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_MAP8TOB_CTRLr,_r._bg_map8tob_ctrl)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_MAP8TOB_CTRLr BCMI_HURACAN_BG_MAP8TOB_CTRLr
#define BG_MAP8TOB_CTRLr_SIZE BCMI_HURACAN_BG_MAP8TOB_CTRLr_SIZE
typedef BCMI_HURACAN_BG_MAP8TOB_CTRLr_t BG_MAP8TOB_CTRLr_t;
#define BG_MAP8TOB_CTRLr_CLR BCMI_HURACAN_BG_MAP8TOB_CTRLr_CLR
#define BG_MAP8TOB_CTRLr_SET BCMI_HURACAN_BG_MAP8TOB_CTRLr_SET
#define BG_MAP8TOB_CTRLr_GET BCMI_HURACAN_BG_MAP8TOB_CTRLr_GET
#define BG_MAP8TOB_CTRLr_RES2BGBf_GET BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BGBf_GET
#define BG_MAP8TOB_CTRLr_RES2BGBf_SET BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BGBf_SET
#define BG_MAP8TOB_CTRLr_RES2BGAf_GET BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BGAf_GET
#define BG_MAP8TOB_CTRLr_RES2BGAf_SET BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BGAf_SET
#define BG_MAP8TOB_CTRLr_RES2BG9f_GET BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BG9f_GET
#define BG_MAP8TOB_CTRLr_RES2BG9f_SET BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BG9f_SET
#define BG_MAP8TOB_CTRLr_RES2BG8f_GET BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BG8f_GET
#define BG_MAP8TOB_CTRLr_RES2BG8f_SET BCMI_HURACAN_BG_MAP8TOB_CTRLr_RES2BG8f_SET
#define READ_BG_MAP8TOB_CTRLr BCMI_HURACAN_READ_BG_MAP8TOB_CTRLr
#define WRITE_BG_MAP8TOB_CTRLr BCMI_HURACAN_WRITE_BG_MAP8TOB_CTRLr
#define MODIFY_BG_MAP8TOB_CTRLr BCMI_HURACAN_MODIFY_BG_MAP8TOB_CTRLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_MAP8TOB_CTRLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_MAPCTOF_CTRL
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb083
 * DEVAD:    1
 * DESC:     Rescal to BG control map, value C to F
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RES2BGC          
 *     RES2BGD          
 *     RES2BGE          
 *     RES2BGF          
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_MAPCTOF_CTRLr (0x0001b083 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_MAPCTOF_CTRLr_SIZE 4

/*
 * This structure should be used to declare and program BG_MAPCTOF_CTRL.
 *
 */
typedef union BCMI_HURACAN_BG_MAPCTOF_CTRLr_s {
	uint32_t v[1];
	uint32_t bg_mapctof_ctrl[1];
	uint32_t _bg_mapctof_ctrl;
} BCMI_HURACAN_BG_MAPCTOF_CTRLr_t;

#define BCMI_HURACAN_BG_MAPCTOF_CTRLr_CLR(r) (r).bg_mapctof_ctrl[0] = 0
#define BCMI_HURACAN_BG_MAPCTOF_CTRLr_SET(r,d) (r).bg_mapctof_ctrl[0] = d
#define BCMI_HURACAN_BG_MAPCTOF_CTRLr_GET(r) (r).bg_mapctof_ctrl[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGFf_GET(r) ((((r).bg_mapctof_ctrl[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGFf_SET(r,f) (r).bg_mapctof_ctrl[0]=(((r).bg_mapctof_ctrl[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGEf_GET(r) ((((r).bg_mapctof_ctrl[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGEf_SET(r,f) (r).bg_mapctof_ctrl[0]=(((r).bg_mapctof_ctrl[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGDf_GET(r) ((((r).bg_mapctof_ctrl[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGDf_SET(r,f) (r).bg_mapctof_ctrl[0]=(((r).bg_mapctof_ctrl[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGCf_GET(r) (((r).bg_mapctof_ctrl[0]) & 0xf)
#define BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGCf_SET(r,f) (r).bg_mapctof_ctrl[0]=(((r).bg_mapctof_ctrl[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_MAPCTOF_CTRL.
 *
 */
#define BCMI_HURACAN_READ_BG_MAPCTOF_CTRLr(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_MAPCTOF_CTRLr,_r._bg_mapctof_ctrl)
#define BCMI_HURACAN_WRITE_BG_MAPCTOF_CTRLr(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_MAPCTOF_CTRLr,_r._bg_mapctof_ctrl)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_MAPCTOF_CTRLr BCMI_HURACAN_BG_MAPCTOF_CTRLr
#define BG_MAPCTOF_CTRLr_SIZE BCMI_HURACAN_BG_MAPCTOF_CTRLr_SIZE
typedef BCMI_HURACAN_BG_MAPCTOF_CTRLr_t BG_MAPCTOF_CTRLr_t;
#define BG_MAPCTOF_CTRLr_CLR BCMI_HURACAN_BG_MAPCTOF_CTRLr_CLR
#define BG_MAPCTOF_CTRLr_SET BCMI_HURACAN_BG_MAPCTOF_CTRLr_SET
#define BG_MAPCTOF_CTRLr_GET BCMI_HURACAN_BG_MAPCTOF_CTRLr_GET
#define BG_MAPCTOF_CTRLr_RES2BGFf_GET BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGFf_GET
#define BG_MAPCTOF_CTRLr_RES2BGFf_SET BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGFf_SET
#define BG_MAPCTOF_CTRLr_RES2BGEf_GET BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGEf_GET
#define BG_MAPCTOF_CTRLr_RES2BGEf_SET BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGEf_SET
#define BG_MAPCTOF_CTRLr_RES2BGDf_GET BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGDf_GET
#define BG_MAPCTOF_CTRLr_RES2BGDf_SET BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGDf_SET
#define BG_MAPCTOF_CTRLr_RES2BGCf_GET BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGCf_GET
#define BG_MAPCTOF_CTRLr_RES2BGCf_SET BCMI_HURACAN_BG_MAPCTOF_CTRLr_RES2BGCf_SET
#define READ_BG_MAPCTOF_CTRLr BCMI_HURACAN_READ_BG_MAPCTOF_CTRLr
#define WRITE_BG_MAPCTOF_CTRLr BCMI_HURACAN_WRITE_BG_MAPCTOF_CTRLr
#define MODIFY_BG_MAPCTOF_CTRLr BCMI_HURACAN_MODIFY_BG_MAPCTOF_CTRLr

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_MAPCTOF_CTRLr'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL15
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb084
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BG_RESERVED_FOR_255_TO_240 
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL15r (0x0001b084 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL15.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL15r_s {
	uint32_t v[1];
	uint32_t bg_ctrl15[1];
	uint32_t _bg_ctrl15;
} BCMI_HURACAN_BG_CTRL15r_t;

#define BCMI_HURACAN_BG_CTRL15r_CLR(r) (r).bg_ctrl15[0] = 0
#define BCMI_HURACAN_BG_CTRL15r_SET(r,d) (r).bg_ctrl15[0] = d
#define BCMI_HURACAN_BG_CTRL15r_GET(r) (r).bg_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL15r_BG_RESERVED_FOR_255_TO_240f_GET(r) (((r).bg_ctrl15[0]) & 0xffff)
#define BCMI_HURACAN_BG_CTRL15r_BG_RESERVED_FOR_255_TO_240f_SET(r,f) (r).bg_ctrl15[0]=(((r).bg_ctrl15[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access BG_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL15r,_r._bg_ctrl15)
#define BCMI_HURACAN_WRITE_BG_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL15r,_r._bg_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL15r BCMI_HURACAN_BG_CTRL15r
#define BG_CTRL15r_SIZE BCMI_HURACAN_BG_CTRL15r_SIZE
typedef BCMI_HURACAN_BG_CTRL15r_t BG_CTRL15r_t;
#define BG_CTRL15r_CLR BCMI_HURACAN_BG_CTRL15r_CLR
#define BG_CTRL15r_SET BCMI_HURACAN_BG_CTRL15r_SET
#define BG_CTRL15r_GET BCMI_HURACAN_BG_CTRL15r_GET
#define BG_CTRL15r_BG_RESERVED_FOR_255_TO_240f_GET BCMI_HURACAN_BG_CTRL15r_BG_RESERVED_FOR_255_TO_240f_GET
#define BG_CTRL15r_BG_RESERVED_FOR_255_TO_240f_SET BCMI_HURACAN_BG_CTRL15r_BG_RESERVED_FOR_255_TO_240f_SET
#define READ_BG_CTRL15r BCMI_HURACAN_READ_BG_CTRL15r
#define WRITE_BG_CTRL15r BCMI_HURACAN_WRITE_BG_CTRL15r
#define MODIFY_BG_CTRL15r BCMI_HURACAN_MODIFY_BG_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL16
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb085
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     PMIR_TEST        
 *     VBGP_IV          
 *     BSX2_EN          
 *     TEN              
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL16r (0x0001b085 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL16.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL16r_s {
	uint32_t v[1];
	uint32_t bg_ctrl16[1];
	uint32_t _bg_ctrl16;
} BCMI_HURACAN_BG_CTRL16r_t;

#define BCMI_HURACAN_BG_CTRL16r_CLR(r) (r).bg_ctrl16[0] = 0
#define BCMI_HURACAN_BG_CTRL16r_SET(r,d) (r).bg_ctrl16[0] = d
#define BCMI_HURACAN_BG_CTRL16r_GET(r) (r).bg_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL16r_TENf_GET(r) ((((r).bg_ctrl16[0]) >> 8) & 0x3)
#define BCMI_HURACAN_BG_CTRL16r_TENf_SET(r,f) (r).bg_ctrl16[0]=(((r).bg_ctrl16[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL16r_BSX2_ENf_GET(r) ((((r).bg_ctrl16[0]) >> 4) & 0x3)
#define BCMI_HURACAN_BG_CTRL16r_BSX2_ENf_SET(r,f) (r).bg_ctrl16[0]=(((r).bg_ctrl16[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_BG_CTRL16r_VBGP_IVf_GET(r) ((((r).bg_ctrl16[0]) >> 1) & 0x1)
#define BCMI_HURACAN_BG_CTRL16r_VBGP_IVf_SET(r,f) (r).bg_ctrl16[0]=(((r).bg_ctrl16[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_BG_CTRL16r_PMIR_TESTf_GET(r) (((r).bg_ctrl16[0]) & 0x1)
#define BCMI_HURACAN_BG_CTRL16r_PMIR_TESTf_SET(r,f) (r).bg_ctrl16[0]=(((r).bg_ctrl16[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access BG_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL16r,_r._bg_ctrl16)
#define BCMI_HURACAN_WRITE_BG_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL16r,_r._bg_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL16r BCMI_HURACAN_BG_CTRL16r
#define BG_CTRL16r_SIZE BCMI_HURACAN_BG_CTRL16r_SIZE
typedef BCMI_HURACAN_BG_CTRL16r_t BG_CTRL16r_t;
#define BG_CTRL16r_CLR BCMI_HURACAN_BG_CTRL16r_CLR
#define BG_CTRL16r_SET BCMI_HURACAN_BG_CTRL16r_SET
#define BG_CTRL16r_GET BCMI_HURACAN_BG_CTRL16r_GET
#define BG_CTRL16r_TENf_GET BCMI_HURACAN_BG_CTRL16r_TENf_GET
#define BG_CTRL16r_TENf_SET BCMI_HURACAN_BG_CTRL16r_TENf_SET
#define BG_CTRL16r_BSX2_ENf_GET BCMI_HURACAN_BG_CTRL16r_BSX2_ENf_GET
#define BG_CTRL16r_BSX2_ENf_SET BCMI_HURACAN_BG_CTRL16r_BSX2_ENf_SET
#define BG_CTRL16r_VBGP_IVf_GET BCMI_HURACAN_BG_CTRL16r_VBGP_IVf_GET
#define BG_CTRL16r_VBGP_IVf_SET BCMI_HURACAN_BG_CTRL16r_VBGP_IVf_SET
#define BG_CTRL16r_PMIR_TESTf_GET BCMI_HURACAN_BG_CTRL16r_PMIR_TESTf_GET
#define BG_CTRL16r_PMIR_TESTf_SET BCMI_HURACAN_BG_CTRL16r_PMIR_TESTf_SET
#define READ_BG_CTRL16r BCMI_HURACAN_READ_BG_CTRL16r
#define WRITE_BG_CTRL16r BCMI_HURACAN_WRITE_BG_CTRL16r
#define MODIFY_BG_CTRL16r BCMI_HURACAN_MODIFY_BG_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL17
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb086
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     PTATADJ_BG_R     
 *     CTATADJ_BG_R     
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL17r (0x0001b086 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL17r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL17.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL17r_s {
	uint32_t v[1];
	uint32_t bg_ctrl17[1];
	uint32_t _bg_ctrl17;
} BCMI_HURACAN_BG_CTRL17r_t;

#define BCMI_HURACAN_BG_CTRL17r_CLR(r) (r).bg_ctrl17[0] = 0
#define BCMI_HURACAN_BG_CTRL17r_SET(r,d) (r).bg_ctrl17[0] = d
#define BCMI_HURACAN_BG_CTRL17r_GET(r) (r).bg_ctrl17[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL17r_CTATADJ_BG_Rf_GET(r) ((((r).bg_ctrl17[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_CTRL17r_CTATADJ_BG_Rf_SET(r,f) (r).bg_ctrl17[0]=(((r).bg_ctrl17[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_CTRL17r_PTATADJ_BG_Rf_GET(r) (((r).bg_ctrl17[0]) & 0xf)
#define BCMI_HURACAN_BG_CTRL17r_PTATADJ_BG_Rf_SET(r,f) (r).bg_ctrl17[0]=(((r).bg_ctrl17[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_CTRL17.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL17r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL17r,_r._bg_ctrl17)
#define BCMI_HURACAN_WRITE_BG_CTRL17r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL17r,_r._bg_ctrl17)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL17r BCMI_HURACAN_BG_CTRL17r
#define BG_CTRL17r_SIZE BCMI_HURACAN_BG_CTRL17r_SIZE
typedef BCMI_HURACAN_BG_CTRL17r_t BG_CTRL17r_t;
#define BG_CTRL17r_CLR BCMI_HURACAN_BG_CTRL17r_CLR
#define BG_CTRL17r_SET BCMI_HURACAN_BG_CTRL17r_SET
#define BG_CTRL17r_GET BCMI_HURACAN_BG_CTRL17r_GET
#define BG_CTRL17r_CTATADJ_BG_Rf_GET BCMI_HURACAN_BG_CTRL17r_CTATADJ_BG_Rf_GET
#define BG_CTRL17r_CTATADJ_BG_Rf_SET BCMI_HURACAN_BG_CTRL17r_CTATADJ_BG_Rf_SET
#define BG_CTRL17r_PTATADJ_BG_Rf_GET BCMI_HURACAN_BG_CTRL17r_PTATADJ_BG_Rf_GET
#define BG_CTRL17r_PTATADJ_BG_Rf_SET BCMI_HURACAN_BG_CTRL17r_PTATADJ_BG_Rf_SET
#define READ_BG_CTRL17r BCMI_HURACAN_READ_BG_CTRL17r
#define WRITE_BG_CTRL17r BCMI_HURACAN_WRITE_BG_CTRL17r
#define MODIFY_BG_CTRL17r BCMI_HURACAN_MODIFY_BG_CTRL17r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL17r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL18
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb087
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     PTATADJ_PTAT_RCAL 
 *     CTATADJ_PTAT_RCAL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL18r (0x0001b087 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL18r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL18.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL18r_s {
	uint32_t v[1];
	uint32_t bg_ctrl18[1];
	uint32_t _bg_ctrl18;
} BCMI_HURACAN_BG_CTRL18r_t;

#define BCMI_HURACAN_BG_CTRL18r_CLR(r) (r).bg_ctrl18[0] = 0
#define BCMI_HURACAN_BG_CTRL18r_SET(r,d) (r).bg_ctrl18[0] = d
#define BCMI_HURACAN_BG_CTRL18r_GET(r) (r).bg_ctrl18[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL18r_CTATADJ_PTAT_RCALf_GET(r) ((((r).bg_ctrl18[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_BG_CTRL18r_CTATADJ_PTAT_RCALf_SET(r,f) (r).bg_ctrl18[0]=(((r).bg_ctrl18[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL18r_PTATADJ_PTAT_RCALf_GET(r) (((r).bg_ctrl18[0]) & 0x1f)
#define BCMI_HURACAN_BG_CTRL18r_PTATADJ_PTAT_RCALf_SET(r,f) (r).bg_ctrl18[0]=(((r).bg_ctrl18[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access BG_CTRL18.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL18r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL18r,_r._bg_ctrl18)
#define BCMI_HURACAN_WRITE_BG_CTRL18r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL18r,_r._bg_ctrl18)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL18r BCMI_HURACAN_BG_CTRL18r
#define BG_CTRL18r_SIZE BCMI_HURACAN_BG_CTRL18r_SIZE
typedef BCMI_HURACAN_BG_CTRL18r_t BG_CTRL18r_t;
#define BG_CTRL18r_CLR BCMI_HURACAN_BG_CTRL18r_CLR
#define BG_CTRL18r_SET BCMI_HURACAN_BG_CTRL18r_SET
#define BG_CTRL18r_GET BCMI_HURACAN_BG_CTRL18r_GET
#define BG_CTRL18r_CTATADJ_PTAT_RCALf_GET BCMI_HURACAN_BG_CTRL18r_CTATADJ_PTAT_RCALf_GET
#define BG_CTRL18r_CTATADJ_PTAT_RCALf_SET BCMI_HURACAN_BG_CTRL18r_CTATADJ_PTAT_RCALf_SET
#define BG_CTRL18r_PTATADJ_PTAT_RCALf_GET BCMI_HURACAN_BG_CTRL18r_PTATADJ_PTAT_RCALf_GET
#define BG_CTRL18r_PTATADJ_PTAT_RCALf_SET BCMI_HURACAN_BG_CTRL18r_PTATADJ_PTAT_RCALf_SET
#define READ_BG_CTRL18r BCMI_HURACAN_READ_BG_CTRL18r
#define WRITE_BG_CTRL18r BCMI_HURACAN_WRITE_BG_CTRL18r
#define MODIFY_BG_CTRL18r BCMI_HURACAN_MODIFY_BG_CTRL18r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL18r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL19
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb088
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     PTATADJ_BG_RCAL  
 *     CTATADJ_BG_RCAL  
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL19r (0x0001b088 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL19r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL19.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL19r_s {
	uint32_t v[1];
	uint32_t bg_ctrl19[1];
	uint32_t _bg_ctrl19;
} BCMI_HURACAN_BG_CTRL19r_t;

#define BCMI_HURACAN_BG_CTRL19r_CLR(r) (r).bg_ctrl19[0] = 0
#define BCMI_HURACAN_BG_CTRL19r_SET(r,d) (r).bg_ctrl19[0] = d
#define BCMI_HURACAN_BG_CTRL19r_GET(r) (r).bg_ctrl19[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL19r_CTATADJ_BG_RCALf_GET(r) ((((r).bg_ctrl19[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_BG_CTRL19r_CTATADJ_BG_RCALf_SET(r,f) (r).bg_ctrl19[0]=(((r).bg_ctrl19[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL19r_PTATADJ_BG_RCALf_GET(r) (((r).bg_ctrl19[0]) & 0x1f)
#define BCMI_HURACAN_BG_CTRL19r_PTATADJ_BG_RCALf_SET(r,f) (r).bg_ctrl19[0]=(((r).bg_ctrl19[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access BG_CTRL19.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL19r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL19r,_r._bg_ctrl19)
#define BCMI_HURACAN_WRITE_BG_CTRL19r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL19r,_r._bg_ctrl19)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL19r BCMI_HURACAN_BG_CTRL19r
#define BG_CTRL19r_SIZE BCMI_HURACAN_BG_CTRL19r_SIZE
typedef BCMI_HURACAN_BG_CTRL19r_t BG_CTRL19r_t;
#define BG_CTRL19r_CLR BCMI_HURACAN_BG_CTRL19r_CLR
#define BG_CTRL19r_SET BCMI_HURACAN_BG_CTRL19r_SET
#define BG_CTRL19r_GET BCMI_HURACAN_BG_CTRL19r_GET
#define BG_CTRL19r_CTATADJ_BG_RCALf_GET BCMI_HURACAN_BG_CTRL19r_CTATADJ_BG_RCALf_GET
#define BG_CTRL19r_CTATADJ_BG_RCALf_SET BCMI_HURACAN_BG_CTRL19r_CTATADJ_BG_RCALf_SET
#define BG_CTRL19r_PTATADJ_BG_RCALf_GET BCMI_HURACAN_BG_CTRL19r_PTATADJ_BG_RCALf_GET
#define BG_CTRL19r_PTATADJ_BG_RCALf_SET BCMI_HURACAN_BG_CTRL19r_PTATADJ_BG_RCALf_SET
#define READ_BG_CTRL19r BCMI_HURACAN_READ_BG_CTRL19r
#define WRITE_BG_CTRL19r BCMI_HURACAN_WRITE_BG_CTRL19r
#define MODIFY_BG_CTRL19r BCMI_HURACAN_MODIFY_BG_CTRL19r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL19r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL20
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb089
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BG_RESERVED_FOR_199_TO_184 
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL20r (0x0001b089 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL20r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL20.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL20r_s {
	uint32_t v[1];
	uint32_t bg_ctrl20[1];
	uint32_t _bg_ctrl20;
} BCMI_HURACAN_BG_CTRL20r_t;

#define BCMI_HURACAN_BG_CTRL20r_CLR(r) (r).bg_ctrl20[0] = 0
#define BCMI_HURACAN_BG_CTRL20r_SET(r,d) (r).bg_ctrl20[0] = d
#define BCMI_HURACAN_BG_CTRL20r_GET(r) (r).bg_ctrl20[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL20r_BG_RESERVED_FOR_199_TO_184f_GET(r) (((r).bg_ctrl20[0]) & 0xffff)
#define BCMI_HURACAN_BG_CTRL20r_BG_RESERVED_FOR_199_TO_184f_SET(r,f) (r).bg_ctrl20[0]=(((r).bg_ctrl20[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access BG_CTRL20.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL20r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL20r,_r._bg_ctrl20)
#define BCMI_HURACAN_WRITE_BG_CTRL20r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL20r,_r._bg_ctrl20)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL20r BCMI_HURACAN_BG_CTRL20r
#define BG_CTRL20r_SIZE BCMI_HURACAN_BG_CTRL20r_SIZE
typedef BCMI_HURACAN_BG_CTRL20r_t BG_CTRL20r_t;
#define BG_CTRL20r_CLR BCMI_HURACAN_BG_CTRL20r_CLR
#define BG_CTRL20r_SET BCMI_HURACAN_BG_CTRL20r_SET
#define BG_CTRL20r_GET BCMI_HURACAN_BG_CTRL20r_GET
#define BG_CTRL20r_BG_RESERVED_FOR_199_TO_184f_GET BCMI_HURACAN_BG_CTRL20r_BG_RESERVED_FOR_199_TO_184f_GET
#define BG_CTRL20r_BG_RESERVED_FOR_199_TO_184f_SET BCMI_HURACAN_BG_CTRL20r_BG_RESERVED_FOR_199_TO_184f_SET
#define READ_BG_CTRL20r BCMI_HURACAN_READ_BG_CTRL20r
#define WRITE_BG_CTRL20r BCMI_HURACAN_WRITE_BG_CTRL20r
#define MODIFY_BG_CTRL20r BCMI_HURACAN_MODIFY_BG_CTRL20r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL20r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL21
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb08a
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BG_CALR_LA2_0    
 *     BG_CALR_LA2_1    
 *     BG_CALR_LA2_2    
 *     BG_CALR_LA2_3    
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL21r (0x0001b08a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL21r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL21.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL21r_s {
	uint32_t v[1];
	uint32_t bg_ctrl21[1];
	uint32_t _bg_ctrl21;
} BCMI_HURACAN_BG_CTRL21r_t;

#define BCMI_HURACAN_BG_CTRL21r_CLR(r) (r).bg_ctrl21[0] = 0
#define BCMI_HURACAN_BG_CTRL21r_SET(r,d) (r).bg_ctrl21[0] = d
#define BCMI_HURACAN_BG_CTRL21r_GET(r) (r).bg_ctrl21[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_3f_GET(r) ((((r).bg_ctrl21[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_3f_SET(r,f) (r).bg_ctrl21[0]=(((r).bg_ctrl21[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_2f_GET(r) ((((r).bg_ctrl21[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_2f_SET(r,f) (r).bg_ctrl21[0]=(((r).bg_ctrl21[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_1f_GET(r) ((((r).bg_ctrl21[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_1f_SET(r,f) (r).bg_ctrl21[0]=(((r).bg_ctrl21[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_0f_GET(r) (((r).bg_ctrl21[0]) & 0xf)
#define BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_0f_SET(r,f) (r).bg_ctrl21[0]=(((r).bg_ctrl21[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_CTRL21.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL21r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL21r,_r._bg_ctrl21)
#define BCMI_HURACAN_WRITE_BG_CTRL21r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL21r,_r._bg_ctrl21)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL21r BCMI_HURACAN_BG_CTRL21r
#define BG_CTRL21r_SIZE BCMI_HURACAN_BG_CTRL21r_SIZE
typedef BCMI_HURACAN_BG_CTRL21r_t BG_CTRL21r_t;
#define BG_CTRL21r_CLR BCMI_HURACAN_BG_CTRL21r_CLR
#define BG_CTRL21r_SET BCMI_HURACAN_BG_CTRL21r_SET
#define BG_CTRL21r_GET BCMI_HURACAN_BG_CTRL21r_GET
#define BG_CTRL21r_BG_CALR_LA2_3f_GET BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_3f_GET
#define BG_CTRL21r_BG_CALR_LA2_3f_SET BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_3f_SET
#define BG_CTRL21r_BG_CALR_LA2_2f_GET BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_2f_GET
#define BG_CTRL21r_BG_CALR_LA2_2f_SET BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_2f_SET
#define BG_CTRL21r_BG_CALR_LA2_1f_GET BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_1f_GET
#define BG_CTRL21r_BG_CALR_LA2_1f_SET BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_1f_SET
#define BG_CTRL21r_BG_CALR_LA2_0f_GET BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_0f_GET
#define BG_CTRL21r_BG_CALR_LA2_0f_SET BCMI_HURACAN_BG_CTRL21r_BG_CALR_LA2_0f_SET
#define READ_BG_CTRL21r BCMI_HURACAN_READ_BG_CTRL21r
#define WRITE_BG_CTRL21r BCMI_HURACAN_WRITE_BG_CTRL21r
#define MODIFY_BG_CTRL21r BCMI_HURACAN_MODIFY_BG_CTRL21r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL21r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL22
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb08b
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BG_CALR_LA1_0    
 *     BG_CALR_LA1_1    
 *     BG_CALR_LA1_2    
 *     BG_CALR_LA1_3    
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL22r (0x0001b08b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL22r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL22.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL22r_s {
	uint32_t v[1];
	uint32_t bg_ctrl22[1];
	uint32_t _bg_ctrl22;
} BCMI_HURACAN_BG_CTRL22r_t;

#define BCMI_HURACAN_BG_CTRL22r_CLR(r) (r).bg_ctrl22[0] = 0
#define BCMI_HURACAN_BG_CTRL22r_SET(r,d) (r).bg_ctrl22[0] = d
#define BCMI_HURACAN_BG_CTRL22r_GET(r) (r).bg_ctrl22[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_3f_GET(r) ((((r).bg_ctrl22[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_3f_SET(r,f) (r).bg_ctrl22[0]=(((r).bg_ctrl22[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_2f_GET(r) ((((r).bg_ctrl22[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_2f_SET(r,f) (r).bg_ctrl22[0]=(((r).bg_ctrl22[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_1f_GET(r) ((((r).bg_ctrl22[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_1f_SET(r,f) (r).bg_ctrl22[0]=(((r).bg_ctrl22[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_0f_GET(r) (((r).bg_ctrl22[0]) & 0xf)
#define BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_0f_SET(r,f) (r).bg_ctrl22[0]=(((r).bg_ctrl22[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_CTRL22.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL22r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL22r,_r._bg_ctrl22)
#define BCMI_HURACAN_WRITE_BG_CTRL22r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL22r,_r._bg_ctrl22)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL22r BCMI_HURACAN_BG_CTRL22r
#define BG_CTRL22r_SIZE BCMI_HURACAN_BG_CTRL22r_SIZE
typedef BCMI_HURACAN_BG_CTRL22r_t BG_CTRL22r_t;
#define BG_CTRL22r_CLR BCMI_HURACAN_BG_CTRL22r_CLR
#define BG_CTRL22r_SET BCMI_HURACAN_BG_CTRL22r_SET
#define BG_CTRL22r_GET BCMI_HURACAN_BG_CTRL22r_GET
#define BG_CTRL22r_BG_CALR_LA1_3f_GET BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_3f_GET
#define BG_CTRL22r_BG_CALR_LA1_3f_SET BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_3f_SET
#define BG_CTRL22r_BG_CALR_LA1_2f_GET BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_2f_GET
#define BG_CTRL22r_BG_CALR_LA1_2f_SET BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_2f_SET
#define BG_CTRL22r_BG_CALR_LA1_1f_GET BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_1f_GET
#define BG_CTRL22r_BG_CALR_LA1_1f_SET BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_1f_SET
#define BG_CTRL22r_BG_CALR_LA1_0f_GET BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_0f_GET
#define BG_CTRL22r_BG_CALR_LA1_0f_SET BCMI_HURACAN_BG_CTRL22r_BG_CALR_LA1_0f_SET
#define READ_BG_CTRL22r BCMI_HURACAN_READ_BG_CTRL22r
#define WRITE_BG_CTRL22r BCMI_HURACAN_WRITE_BG_CTRL22r
#define MODIFY_BG_CTRL22r BCMI_HURACAN_MODIFY_BG_CTRL22r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL22r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL23
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb08c
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BG_CALR_DRV2_0   
 *     BG_CALR_DRV2_1   
 *     BG_CALR_DRV2_2   
 *     BG_CALR_DRV2_3   
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL23r (0x0001b08c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL23r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL23.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL23r_s {
	uint32_t v[1];
	uint32_t bg_ctrl23[1];
	uint32_t _bg_ctrl23;
} BCMI_HURACAN_BG_CTRL23r_t;

#define BCMI_HURACAN_BG_CTRL23r_CLR(r) (r).bg_ctrl23[0] = 0
#define BCMI_HURACAN_BG_CTRL23r_SET(r,d) (r).bg_ctrl23[0] = d
#define BCMI_HURACAN_BG_CTRL23r_GET(r) (r).bg_ctrl23[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_3f_GET(r) ((((r).bg_ctrl23[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_3f_SET(r,f) (r).bg_ctrl23[0]=(((r).bg_ctrl23[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_2f_GET(r) ((((r).bg_ctrl23[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_2f_SET(r,f) (r).bg_ctrl23[0]=(((r).bg_ctrl23[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_1f_GET(r) ((((r).bg_ctrl23[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_1f_SET(r,f) (r).bg_ctrl23[0]=(((r).bg_ctrl23[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_0f_GET(r) (((r).bg_ctrl23[0]) & 0xf)
#define BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_0f_SET(r,f) (r).bg_ctrl23[0]=(((r).bg_ctrl23[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_CTRL23.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL23r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL23r,_r._bg_ctrl23)
#define BCMI_HURACAN_WRITE_BG_CTRL23r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL23r,_r._bg_ctrl23)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL23r BCMI_HURACAN_BG_CTRL23r
#define BG_CTRL23r_SIZE BCMI_HURACAN_BG_CTRL23r_SIZE
typedef BCMI_HURACAN_BG_CTRL23r_t BG_CTRL23r_t;
#define BG_CTRL23r_CLR BCMI_HURACAN_BG_CTRL23r_CLR
#define BG_CTRL23r_SET BCMI_HURACAN_BG_CTRL23r_SET
#define BG_CTRL23r_GET BCMI_HURACAN_BG_CTRL23r_GET
#define BG_CTRL23r_BG_CALR_DRV2_3f_GET BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_3f_GET
#define BG_CTRL23r_BG_CALR_DRV2_3f_SET BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_3f_SET
#define BG_CTRL23r_BG_CALR_DRV2_2f_GET BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_2f_GET
#define BG_CTRL23r_BG_CALR_DRV2_2f_SET BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_2f_SET
#define BG_CTRL23r_BG_CALR_DRV2_1f_GET BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_1f_GET
#define BG_CTRL23r_BG_CALR_DRV2_1f_SET BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_1f_SET
#define BG_CTRL23r_BG_CALR_DRV2_0f_GET BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_0f_GET
#define BG_CTRL23r_BG_CALR_DRV2_0f_SET BCMI_HURACAN_BG_CTRL23r_BG_CALR_DRV2_0f_SET
#define READ_BG_CTRL23r BCMI_HURACAN_READ_BG_CTRL23r
#define WRITE_BG_CTRL23r BCMI_HURACAN_WRITE_BG_CTRL23r
#define MODIFY_BG_CTRL23r BCMI_HURACAN_MODIFY_BG_CTRL23r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL23r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL24
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb08d
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BG_CALR_DRV1_0   
 *     BG_CALR_DRV1_1   
 *     BG_CALR_DRV1_2   
 *     BG_CALR_DRV1_3   
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL24r (0x0001b08d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL24r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL24.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL24r_s {
	uint32_t v[1];
	uint32_t bg_ctrl24[1];
	uint32_t _bg_ctrl24;
} BCMI_HURACAN_BG_CTRL24r_t;

#define BCMI_HURACAN_BG_CTRL24r_CLR(r) (r).bg_ctrl24[0] = 0
#define BCMI_HURACAN_BG_CTRL24r_SET(r,d) (r).bg_ctrl24[0] = d
#define BCMI_HURACAN_BG_CTRL24r_GET(r) (r).bg_ctrl24[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_3f_GET(r) ((((r).bg_ctrl24[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_3f_SET(r,f) (r).bg_ctrl24[0]=(((r).bg_ctrl24[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_2f_GET(r) ((((r).bg_ctrl24[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_2f_SET(r,f) (r).bg_ctrl24[0]=(((r).bg_ctrl24[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_1f_GET(r) ((((r).bg_ctrl24[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_1f_SET(r,f) (r).bg_ctrl24[0]=(((r).bg_ctrl24[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_0f_GET(r) (((r).bg_ctrl24[0]) & 0xf)
#define BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_0f_SET(r,f) (r).bg_ctrl24[0]=(((r).bg_ctrl24[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_CTRL24.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL24r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL24r,_r._bg_ctrl24)
#define BCMI_HURACAN_WRITE_BG_CTRL24r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL24r,_r._bg_ctrl24)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL24r BCMI_HURACAN_BG_CTRL24r
#define BG_CTRL24r_SIZE BCMI_HURACAN_BG_CTRL24r_SIZE
typedef BCMI_HURACAN_BG_CTRL24r_t BG_CTRL24r_t;
#define BG_CTRL24r_CLR BCMI_HURACAN_BG_CTRL24r_CLR
#define BG_CTRL24r_SET BCMI_HURACAN_BG_CTRL24r_SET
#define BG_CTRL24r_GET BCMI_HURACAN_BG_CTRL24r_GET
#define BG_CTRL24r_BG_CALR_DRV1_3f_GET BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_3f_GET
#define BG_CTRL24r_BG_CALR_DRV1_3f_SET BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_3f_SET
#define BG_CTRL24r_BG_CALR_DRV1_2f_GET BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_2f_GET
#define BG_CTRL24r_BG_CALR_DRV1_2f_SET BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_2f_SET
#define BG_CTRL24r_BG_CALR_DRV1_1f_GET BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_1f_GET
#define BG_CTRL24r_BG_CALR_DRV1_1f_SET BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_1f_SET
#define BG_CTRL24r_BG_CALR_DRV1_0f_GET BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_0f_GET
#define BG_CTRL24r_BG_CALR_DRV1_0f_SET BCMI_HURACAN_BG_CTRL24r_BG_CALR_DRV1_0f_SET
#define READ_BG_CTRL24r BCMI_HURACAN_READ_BG_CTRL24r
#define WRITE_BG_CTRL24r BCMI_HURACAN_WRITE_BG_CTRL24r
#define MODIFY_BG_CTRL24r BCMI_HURACAN_MODIFY_BG_CTRL24r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL24r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL25
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb08e
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BG_RESERVED_FOR_119_TO_104 
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL25r (0x0001b08e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL25r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL25.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL25r_s {
	uint32_t v[1];
	uint32_t bg_ctrl25[1];
	uint32_t _bg_ctrl25;
} BCMI_HURACAN_BG_CTRL25r_t;

#define BCMI_HURACAN_BG_CTRL25r_CLR(r) (r).bg_ctrl25[0] = 0
#define BCMI_HURACAN_BG_CTRL25r_SET(r,d) (r).bg_ctrl25[0] = d
#define BCMI_HURACAN_BG_CTRL25r_GET(r) (r).bg_ctrl25[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL25r_BG_RESERVED_FOR_119_TO_104f_GET(r) (((r).bg_ctrl25[0]) & 0xffff)
#define BCMI_HURACAN_BG_CTRL25r_BG_RESERVED_FOR_119_TO_104f_SET(r,f) (r).bg_ctrl25[0]=(((r).bg_ctrl25[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access BG_CTRL25.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL25r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL25r,_r._bg_ctrl25)
#define BCMI_HURACAN_WRITE_BG_CTRL25r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL25r,_r._bg_ctrl25)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL25r BCMI_HURACAN_BG_CTRL25r
#define BG_CTRL25r_SIZE BCMI_HURACAN_BG_CTRL25r_SIZE
typedef BCMI_HURACAN_BG_CTRL25r_t BG_CTRL25r_t;
#define BG_CTRL25r_CLR BCMI_HURACAN_BG_CTRL25r_CLR
#define BG_CTRL25r_SET BCMI_HURACAN_BG_CTRL25r_SET
#define BG_CTRL25r_GET BCMI_HURACAN_BG_CTRL25r_GET
#define BG_CTRL25r_BG_RESERVED_FOR_119_TO_104f_GET BCMI_HURACAN_BG_CTRL25r_BG_RESERVED_FOR_119_TO_104f_GET
#define BG_CTRL25r_BG_RESERVED_FOR_119_TO_104f_SET BCMI_HURACAN_BG_CTRL25r_BG_RESERVED_FOR_119_TO_104f_SET
#define READ_BG_CTRL25r BCMI_HURACAN_READ_BG_CTRL25r
#define WRITE_BG_CTRL25r BCMI_HURACAN_WRITE_BG_CTRL25r
#define MODIFY_BG_CTRL25r BCMI_HURACAN_MODIFY_BG_CTRL25r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL25r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL26
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb08f
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     PTAT_CALR_LA0    
 *     PTAT_CALR_LA1    
 *     PTAT_CALR_LA2    
 *     PTAT_CALR_LA3    
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL26r (0x0001b08f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL26r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL26.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL26r_s {
	uint32_t v[1];
	uint32_t bg_ctrl26[1];
	uint32_t _bg_ctrl26;
} BCMI_HURACAN_BG_CTRL26r_t;

#define BCMI_HURACAN_BG_CTRL26r_CLR(r) (r).bg_ctrl26[0] = 0
#define BCMI_HURACAN_BG_CTRL26r_SET(r,d) (r).bg_ctrl26[0] = d
#define BCMI_HURACAN_BG_CTRL26r_GET(r) (r).bg_ctrl26[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA3f_GET(r) ((((r).bg_ctrl26[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA3f_SET(r,f) (r).bg_ctrl26[0]=(((r).bg_ctrl26[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA2f_GET(r) ((((r).bg_ctrl26[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA2f_SET(r,f) (r).bg_ctrl26[0]=(((r).bg_ctrl26[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA1f_GET(r) ((((r).bg_ctrl26[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA1f_SET(r,f) (r).bg_ctrl26[0]=(((r).bg_ctrl26[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA0f_GET(r) (((r).bg_ctrl26[0]) & 0xf)
#define BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA0f_SET(r,f) (r).bg_ctrl26[0]=(((r).bg_ctrl26[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_CTRL26.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL26r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL26r,_r._bg_ctrl26)
#define BCMI_HURACAN_WRITE_BG_CTRL26r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL26r,_r._bg_ctrl26)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL26r BCMI_HURACAN_BG_CTRL26r
#define BG_CTRL26r_SIZE BCMI_HURACAN_BG_CTRL26r_SIZE
typedef BCMI_HURACAN_BG_CTRL26r_t BG_CTRL26r_t;
#define BG_CTRL26r_CLR BCMI_HURACAN_BG_CTRL26r_CLR
#define BG_CTRL26r_SET BCMI_HURACAN_BG_CTRL26r_SET
#define BG_CTRL26r_GET BCMI_HURACAN_BG_CTRL26r_GET
#define BG_CTRL26r_PTAT_CALR_LA3f_GET BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA3f_GET
#define BG_CTRL26r_PTAT_CALR_LA3f_SET BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA3f_SET
#define BG_CTRL26r_PTAT_CALR_LA2f_GET BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA2f_GET
#define BG_CTRL26r_PTAT_CALR_LA2f_SET BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA2f_SET
#define BG_CTRL26r_PTAT_CALR_LA1f_GET BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA1f_GET
#define BG_CTRL26r_PTAT_CALR_LA1f_SET BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA1f_SET
#define BG_CTRL26r_PTAT_CALR_LA0f_GET BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA0f_GET
#define BG_CTRL26r_PTAT_CALR_LA0f_SET BCMI_HURACAN_BG_CTRL26r_PTAT_CALR_LA0f_SET
#define READ_BG_CTRL26r BCMI_HURACAN_READ_BG_CTRL26r
#define WRITE_BG_CTRL26r BCMI_HURACAN_WRITE_BG_CTRL26r
#define MODIFY_BG_CTRL26r BCMI_HURACAN_MODIFY_BG_CTRL26r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL26r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL27
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb090
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     PTAT_CALR_CTLE0  
 *     PTAT_CALR_CTLE1  
 *     PTAT_CALR_CTLE2  
 *     PTAT_CALR_CTLE3  
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL27r (0x0001b090 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL27r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL27.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL27r_s {
	uint32_t v[1];
	uint32_t bg_ctrl27[1];
	uint32_t _bg_ctrl27;
} BCMI_HURACAN_BG_CTRL27r_t;

#define BCMI_HURACAN_BG_CTRL27r_CLR(r) (r).bg_ctrl27[0] = 0
#define BCMI_HURACAN_BG_CTRL27r_SET(r,d) (r).bg_ctrl27[0] = d
#define BCMI_HURACAN_BG_CTRL27r_GET(r) (r).bg_ctrl27[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE3f_GET(r) ((((r).bg_ctrl27[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE3f_SET(r,f) (r).bg_ctrl27[0]=(((r).bg_ctrl27[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE2f_GET(r) ((((r).bg_ctrl27[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE2f_SET(r,f) (r).bg_ctrl27[0]=(((r).bg_ctrl27[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE1f_GET(r) ((((r).bg_ctrl27[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE1f_SET(r,f) (r).bg_ctrl27[0]=(((r).bg_ctrl27[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE0f_GET(r) (((r).bg_ctrl27[0]) & 0xf)
#define BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE0f_SET(r,f) (r).bg_ctrl27[0]=(((r).bg_ctrl27[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_CTRL27.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL27r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL27r,_r._bg_ctrl27)
#define BCMI_HURACAN_WRITE_BG_CTRL27r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL27r,_r._bg_ctrl27)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL27r BCMI_HURACAN_BG_CTRL27r
#define BG_CTRL27r_SIZE BCMI_HURACAN_BG_CTRL27r_SIZE
typedef BCMI_HURACAN_BG_CTRL27r_t BG_CTRL27r_t;
#define BG_CTRL27r_CLR BCMI_HURACAN_BG_CTRL27r_CLR
#define BG_CTRL27r_SET BCMI_HURACAN_BG_CTRL27r_SET
#define BG_CTRL27r_GET BCMI_HURACAN_BG_CTRL27r_GET
#define BG_CTRL27r_PTAT_CALR_CTLE3f_GET BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE3f_GET
#define BG_CTRL27r_PTAT_CALR_CTLE3f_SET BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE3f_SET
#define BG_CTRL27r_PTAT_CALR_CTLE2f_GET BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE2f_GET
#define BG_CTRL27r_PTAT_CALR_CTLE2f_SET BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE2f_SET
#define BG_CTRL27r_PTAT_CALR_CTLE1f_GET BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE1f_GET
#define BG_CTRL27r_PTAT_CALR_CTLE1f_SET BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE1f_SET
#define BG_CTRL27r_PTAT_CALR_CTLE0f_GET BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE0f_GET
#define BG_CTRL27r_PTAT_CALR_CTLE0f_SET BCMI_HURACAN_BG_CTRL27r_PTAT_CALR_CTLE0f_SET
#define READ_BG_CTRL27r BCMI_HURACAN_READ_BG_CTRL27r
#define WRITE_BG_CTRL27r BCMI_HURACAN_WRITE_BG_CTRL27r
#define MODIFY_BG_CTRL27r BCMI_HURACAN_MODIFY_BG_CTRL27r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL27r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL28
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb091
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BG_RESERVED_FOR_71_TO_56 
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL28r (0x0001b091 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL28r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL28.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL28r_s {
	uint32_t v[1];
	uint32_t bg_ctrl28[1];
	uint32_t _bg_ctrl28;
} BCMI_HURACAN_BG_CTRL28r_t;

#define BCMI_HURACAN_BG_CTRL28r_CLR(r) (r).bg_ctrl28[0] = 0
#define BCMI_HURACAN_BG_CTRL28r_SET(r,d) (r).bg_ctrl28[0] = d
#define BCMI_HURACAN_BG_CTRL28r_GET(r) (r).bg_ctrl28[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL28r_BG_RESERVED_FOR_71_TO_56f_GET(r) (((r).bg_ctrl28[0]) & 0xffff)
#define BCMI_HURACAN_BG_CTRL28r_BG_RESERVED_FOR_71_TO_56f_SET(r,f) (r).bg_ctrl28[0]=(((r).bg_ctrl28[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access BG_CTRL28.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL28r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL28r,_r._bg_ctrl28)
#define BCMI_HURACAN_WRITE_BG_CTRL28r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL28r,_r._bg_ctrl28)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL28r BCMI_HURACAN_BG_CTRL28r
#define BG_CTRL28r_SIZE BCMI_HURACAN_BG_CTRL28r_SIZE
typedef BCMI_HURACAN_BG_CTRL28r_t BG_CTRL28r_t;
#define BG_CTRL28r_CLR BCMI_HURACAN_BG_CTRL28r_CLR
#define BG_CTRL28r_SET BCMI_HURACAN_BG_CTRL28r_SET
#define BG_CTRL28r_GET BCMI_HURACAN_BG_CTRL28r_GET
#define BG_CTRL28r_BG_RESERVED_FOR_71_TO_56f_GET BCMI_HURACAN_BG_CTRL28r_BG_RESERVED_FOR_71_TO_56f_GET
#define BG_CTRL28r_BG_RESERVED_FOR_71_TO_56f_SET BCMI_HURACAN_BG_CTRL28r_BG_RESERVED_FOR_71_TO_56f_SET
#define READ_BG_CTRL28r BCMI_HURACAN_READ_BG_CTRL28r
#define WRITE_BG_CTRL28r BCMI_HURACAN_WRITE_BG_CTRL28r
#define MODIFY_BG_CTRL28r BCMI_HURACAN_MODIFY_BG_CTRL28r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL28r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL29
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb092
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BG_R_SIGDET0_CNTRL 
 *     BG_R_SIGDET1_CNTRL 
 *     BG_R_SIGDET2_CNTRL 
 *     BG_R_SIGDET3_CNTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL29r (0x0001b092 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL29r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL29.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL29r_s {
	uint32_t v[1];
	uint32_t bg_ctrl29[1];
	uint32_t _bg_ctrl29;
} BCMI_HURACAN_BG_CTRL29r_t;

#define BCMI_HURACAN_BG_CTRL29r_CLR(r) (r).bg_ctrl29[0] = 0
#define BCMI_HURACAN_BG_CTRL29r_SET(r,d) (r).bg_ctrl29[0] = d
#define BCMI_HURACAN_BG_CTRL29r_GET(r) (r).bg_ctrl29[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET3_CNTRLf_GET(r) ((((r).bg_ctrl29[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET3_CNTRLf_SET(r,f) (r).bg_ctrl29[0]=(((r).bg_ctrl29[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET2_CNTRLf_GET(r) ((((r).bg_ctrl29[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET2_CNTRLf_SET(r,f) (r).bg_ctrl29[0]=(((r).bg_ctrl29[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET1_CNTRLf_GET(r) ((((r).bg_ctrl29[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET1_CNTRLf_SET(r,f) (r).bg_ctrl29[0]=(((r).bg_ctrl29[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET0_CNTRLf_GET(r) (((r).bg_ctrl29[0]) & 0xf)
#define BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET0_CNTRLf_SET(r,f) (r).bg_ctrl29[0]=(((r).bg_ctrl29[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_CTRL29.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL29r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL29r,_r._bg_ctrl29)
#define BCMI_HURACAN_WRITE_BG_CTRL29r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL29r,_r._bg_ctrl29)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL29r BCMI_HURACAN_BG_CTRL29r
#define BG_CTRL29r_SIZE BCMI_HURACAN_BG_CTRL29r_SIZE
typedef BCMI_HURACAN_BG_CTRL29r_t BG_CTRL29r_t;
#define BG_CTRL29r_CLR BCMI_HURACAN_BG_CTRL29r_CLR
#define BG_CTRL29r_SET BCMI_HURACAN_BG_CTRL29r_SET
#define BG_CTRL29r_GET BCMI_HURACAN_BG_CTRL29r_GET
#define BG_CTRL29r_BG_R_SIGDET3_CNTRLf_GET BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET3_CNTRLf_GET
#define BG_CTRL29r_BG_R_SIGDET3_CNTRLf_SET BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET3_CNTRLf_SET
#define BG_CTRL29r_BG_R_SIGDET2_CNTRLf_GET BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET2_CNTRLf_GET
#define BG_CTRL29r_BG_R_SIGDET2_CNTRLf_SET BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET2_CNTRLf_SET
#define BG_CTRL29r_BG_R_SIGDET1_CNTRLf_GET BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET1_CNTRLf_GET
#define BG_CTRL29r_BG_R_SIGDET1_CNTRLf_SET BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET1_CNTRLf_SET
#define BG_CTRL29r_BG_R_SIGDET0_CNTRLf_GET BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET0_CNTRLf_GET
#define BG_CTRL29r_BG_R_SIGDET0_CNTRLf_SET BCMI_HURACAN_BG_CTRL29r_BG_R_SIGDET0_CNTRLf_SET
#define READ_BG_CTRL29r BCMI_HURACAN_READ_BG_CTRL29r
#define WRITE_BG_CTRL29r BCMI_HURACAN_WRITE_BG_CTRL29r
#define MODIFY_BG_CTRL29r BCMI_HURACAN_MODIFY_BG_CTRL29r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL29r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL30
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb093
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BG_R_OSCOR0_CNTRL 
 *     BG_R_OSCOR1_CNTRL 
 *     BG_R_OSCOR2_CNTRL 
 *     BG_R_OSCOR3_CNTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL30r (0x0001b093 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL30r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL30.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL30r_s {
	uint32_t v[1];
	uint32_t bg_ctrl30[1];
	uint32_t _bg_ctrl30;
} BCMI_HURACAN_BG_CTRL30r_t;

#define BCMI_HURACAN_BG_CTRL30r_CLR(r) (r).bg_ctrl30[0] = 0
#define BCMI_HURACAN_BG_CTRL30r_SET(r,d) (r).bg_ctrl30[0] = d
#define BCMI_HURACAN_BG_CTRL30r_GET(r) (r).bg_ctrl30[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR3_CNTRLf_GET(r) ((((r).bg_ctrl30[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR3_CNTRLf_SET(r,f) (r).bg_ctrl30[0]=(((r).bg_ctrl30[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR2_CNTRLf_GET(r) ((((r).bg_ctrl30[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR2_CNTRLf_SET(r,f) (r).bg_ctrl30[0]=(((r).bg_ctrl30[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR1_CNTRLf_GET(r) ((((r).bg_ctrl30[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR1_CNTRLf_SET(r,f) (r).bg_ctrl30[0]=(((r).bg_ctrl30[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR0_CNTRLf_GET(r) (((r).bg_ctrl30[0]) & 0xf)
#define BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR0_CNTRLf_SET(r,f) (r).bg_ctrl30[0]=(((r).bg_ctrl30[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_CTRL30.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL30r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL30r,_r._bg_ctrl30)
#define BCMI_HURACAN_WRITE_BG_CTRL30r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL30r,_r._bg_ctrl30)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL30r BCMI_HURACAN_BG_CTRL30r
#define BG_CTRL30r_SIZE BCMI_HURACAN_BG_CTRL30r_SIZE
typedef BCMI_HURACAN_BG_CTRL30r_t BG_CTRL30r_t;
#define BG_CTRL30r_CLR BCMI_HURACAN_BG_CTRL30r_CLR
#define BG_CTRL30r_SET BCMI_HURACAN_BG_CTRL30r_SET
#define BG_CTRL30r_GET BCMI_HURACAN_BG_CTRL30r_GET
#define BG_CTRL30r_BG_R_OSCOR3_CNTRLf_GET BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR3_CNTRLf_GET
#define BG_CTRL30r_BG_R_OSCOR3_CNTRLf_SET BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR3_CNTRLf_SET
#define BG_CTRL30r_BG_R_OSCOR2_CNTRLf_GET BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR2_CNTRLf_GET
#define BG_CTRL30r_BG_R_OSCOR2_CNTRLf_SET BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR2_CNTRLf_SET
#define BG_CTRL30r_BG_R_OSCOR1_CNTRLf_GET BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR1_CNTRLf_GET
#define BG_CTRL30r_BG_R_OSCOR1_CNTRLf_SET BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR1_CNTRLf_SET
#define BG_CTRL30r_BG_R_OSCOR0_CNTRLf_GET BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR0_CNTRLf_GET
#define BG_CTRL30r_BG_R_OSCOR0_CNTRLf_SET BCMI_HURACAN_BG_CTRL30r_BG_R_OSCOR0_CNTRLf_SET
#define READ_BG_CTRL30r BCMI_HURACAN_READ_BG_CTRL30r
#define WRITE_BG_CTRL30r BCMI_HURACAN_WRITE_BG_CTRL30r
#define MODIFY_BG_CTRL30r BCMI_HURACAN_MODIFY_BG_CTRL30r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL30r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL31
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb094
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BG_R_CMGEN0_CNTRL 
 *     BG_R_CMGEN1_CNTRL 
 *     BG_R_CMGEN2_CNTRL 
 *     BG_R_CMGEN3_CNTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL31r (0x0001b094 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL31r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL31.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL31r_s {
	uint32_t v[1];
	uint32_t bg_ctrl31[1];
	uint32_t _bg_ctrl31;
} BCMI_HURACAN_BG_CTRL31r_t;

#define BCMI_HURACAN_BG_CTRL31r_CLR(r) (r).bg_ctrl31[0] = 0
#define BCMI_HURACAN_BG_CTRL31r_SET(r,d) (r).bg_ctrl31[0] = d
#define BCMI_HURACAN_BG_CTRL31r_GET(r) (r).bg_ctrl31[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN3_CNTRLf_GET(r) ((((r).bg_ctrl31[0]) >> 12) & 0xf)
#define BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN3_CNTRLf_SET(r,f) (r).bg_ctrl31[0]=(((r).bg_ctrl31[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN2_CNTRLf_GET(r) ((((r).bg_ctrl31[0]) >> 8) & 0xf)
#define BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN2_CNTRLf_SET(r,f) (r).bg_ctrl31[0]=(((r).bg_ctrl31[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN1_CNTRLf_GET(r) ((((r).bg_ctrl31[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN1_CNTRLf_SET(r,f) (r).bg_ctrl31[0]=(((r).bg_ctrl31[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN0_CNTRLf_GET(r) (((r).bg_ctrl31[0]) & 0xf)
#define BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN0_CNTRLf_SET(r,f) (r).bg_ctrl31[0]=(((r).bg_ctrl31[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access BG_CTRL31.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL31r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL31r,_r._bg_ctrl31)
#define BCMI_HURACAN_WRITE_BG_CTRL31r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL31r,_r._bg_ctrl31)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL31r BCMI_HURACAN_BG_CTRL31r
#define BG_CTRL31r_SIZE BCMI_HURACAN_BG_CTRL31r_SIZE
typedef BCMI_HURACAN_BG_CTRL31r_t BG_CTRL31r_t;
#define BG_CTRL31r_CLR BCMI_HURACAN_BG_CTRL31r_CLR
#define BG_CTRL31r_SET BCMI_HURACAN_BG_CTRL31r_SET
#define BG_CTRL31r_GET BCMI_HURACAN_BG_CTRL31r_GET
#define BG_CTRL31r_BG_R_CMGEN3_CNTRLf_GET BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN3_CNTRLf_GET
#define BG_CTRL31r_BG_R_CMGEN3_CNTRLf_SET BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN3_CNTRLf_SET
#define BG_CTRL31r_BG_R_CMGEN2_CNTRLf_GET BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN2_CNTRLf_GET
#define BG_CTRL31r_BG_R_CMGEN2_CNTRLf_SET BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN2_CNTRLf_SET
#define BG_CTRL31r_BG_R_CMGEN1_CNTRLf_GET BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN1_CNTRLf_GET
#define BG_CTRL31r_BG_R_CMGEN1_CNTRLf_SET BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN1_CNTRLf_SET
#define BG_CTRL31r_BG_R_CMGEN0_CNTRLf_GET BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN0_CNTRLf_GET
#define BG_CTRL31r_BG_R_CMGEN0_CNTRLf_SET BCMI_HURACAN_BG_CTRL31r_BG_R_CMGEN0_CNTRLf_SET
#define READ_BG_CTRL31r BCMI_HURACAN_READ_BG_CTRL31r
#define WRITE_BG_CTRL31r BCMI_HURACAN_WRITE_BG_CTRL31r
#define MODIFY_BG_CTRL31r BCMI_HURACAN_MODIFY_BG_CTRL31r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL31r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL32
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb095
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     PWRDN_BG         
 *     PWRDN_BG_R_MIRROR 
 *     PWRDN_PTAT_CALR_MIRROR 
 *     PWRDN_BG_CALR_MIRROR 
 *     BG_PON_FRC_VAL   
 *     BG_PON_FRC       
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL32r (0x0001b095 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL32r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL32.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL32r_s {
	uint32_t v[1];
	uint32_t bg_ctrl32[1];
	uint32_t _bg_ctrl32;
} BCMI_HURACAN_BG_CTRL32r_t;

#define BCMI_HURACAN_BG_CTRL32r_CLR(r) (r).bg_ctrl32[0] = 0
#define BCMI_HURACAN_BG_CTRL32r_SET(r,d) (r).bg_ctrl32[0] = d
#define BCMI_HURACAN_BG_CTRL32r_GET(r) (r).bg_ctrl32[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL32r_BG_PON_FRCf_GET(r) ((((r).bg_ctrl32[0]) >> 8) & 0x1)
#define BCMI_HURACAN_BG_CTRL32r_BG_PON_FRCf_SET(r,f) (r).bg_ctrl32[0]=(((r).bg_ctrl32[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_BG_CTRL32r_BG_PON_FRC_VALf_GET(r) ((((r).bg_ctrl32[0]) >> 4) & 0xf)
#define BCMI_HURACAN_BG_CTRL32r_BG_PON_FRC_VALf_SET(r,f) (r).bg_ctrl32[0]=(((r).bg_ctrl32[0] & ~((uint32_t)0xf << 4)) | ((((uint32_t)f) & 0xf) << 4)) | (15 << (16 + 4))
#define BCMI_HURACAN_BG_CTRL32r_PWRDN_BG_CALR_MIRRORf_GET(r) ((((r).bg_ctrl32[0]) >> 3) & 0x1)
#define BCMI_HURACAN_BG_CTRL32r_PWRDN_BG_CALR_MIRRORf_SET(r,f) (r).bg_ctrl32[0]=(((r).bg_ctrl32[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_BG_CTRL32r_PWRDN_PTAT_CALR_MIRRORf_GET(r) ((((r).bg_ctrl32[0]) >> 2) & 0x1)
#define BCMI_HURACAN_BG_CTRL32r_PWRDN_PTAT_CALR_MIRRORf_SET(r,f) (r).bg_ctrl32[0]=(((r).bg_ctrl32[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_BG_CTRL32r_PWRDN_BG_R_MIRRORf_GET(r) ((((r).bg_ctrl32[0]) >> 1) & 0x1)
#define BCMI_HURACAN_BG_CTRL32r_PWRDN_BG_R_MIRRORf_SET(r,f) (r).bg_ctrl32[0]=(((r).bg_ctrl32[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_BG_CTRL32r_PWRDN_BGf_GET(r) (((r).bg_ctrl32[0]) & 0x1)
#define BCMI_HURACAN_BG_CTRL32r_PWRDN_BGf_SET(r,f) (r).bg_ctrl32[0]=(((r).bg_ctrl32[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access BG_CTRL32.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL32r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL32r,_r._bg_ctrl32)
#define BCMI_HURACAN_WRITE_BG_CTRL32r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL32r,_r._bg_ctrl32)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL32r BCMI_HURACAN_BG_CTRL32r
#define BG_CTRL32r_SIZE BCMI_HURACAN_BG_CTRL32r_SIZE
typedef BCMI_HURACAN_BG_CTRL32r_t BG_CTRL32r_t;
#define BG_CTRL32r_CLR BCMI_HURACAN_BG_CTRL32r_CLR
#define BG_CTRL32r_SET BCMI_HURACAN_BG_CTRL32r_SET
#define BG_CTRL32r_GET BCMI_HURACAN_BG_CTRL32r_GET
#define BG_CTRL32r_BG_PON_FRCf_GET BCMI_HURACAN_BG_CTRL32r_BG_PON_FRCf_GET
#define BG_CTRL32r_BG_PON_FRCf_SET BCMI_HURACAN_BG_CTRL32r_BG_PON_FRCf_SET
#define BG_CTRL32r_BG_PON_FRC_VALf_GET BCMI_HURACAN_BG_CTRL32r_BG_PON_FRC_VALf_GET
#define BG_CTRL32r_BG_PON_FRC_VALf_SET BCMI_HURACAN_BG_CTRL32r_BG_PON_FRC_VALf_SET
#define BG_CTRL32r_PWRDN_BG_CALR_MIRRORf_GET BCMI_HURACAN_BG_CTRL32r_PWRDN_BG_CALR_MIRRORf_GET
#define BG_CTRL32r_PWRDN_BG_CALR_MIRRORf_SET BCMI_HURACAN_BG_CTRL32r_PWRDN_BG_CALR_MIRRORf_SET
#define BG_CTRL32r_PWRDN_PTAT_CALR_MIRRORf_GET BCMI_HURACAN_BG_CTRL32r_PWRDN_PTAT_CALR_MIRRORf_GET
#define BG_CTRL32r_PWRDN_PTAT_CALR_MIRRORf_SET BCMI_HURACAN_BG_CTRL32r_PWRDN_PTAT_CALR_MIRRORf_SET
#define BG_CTRL32r_PWRDN_BG_R_MIRRORf_GET BCMI_HURACAN_BG_CTRL32r_PWRDN_BG_R_MIRRORf_GET
#define BG_CTRL32r_PWRDN_BG_R_MIRRORf_SET BCMI_HURACAN_BG_CTRL32r_PWRDN_BG_R_MIRRORf_SET
#define BG_CTRL32r_PWRDN_BGf_GET BCMI_HURACAN_BG_CTRL32r_PWRDN_BGf_GET
#define BG_CTRL32r_PWRDN_BGf_SET BCMI_HURACAN_BG_CTRL32r_PWRDN_BGf_SET
#define READ_BG_CTRL32r BCMI_HURACAN_READ_BG_CTRL32r
#define WRITE_BG_CTRL32r BCMI_HURACAN_WRITE_BG_CTRL32r
#define MODIFY_BG_CTRL32r BCMI_HURACAN_MODIFY_BG_CTRL32r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL32r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  REF_CTRL33
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb096
 * DEVAD:    1
 * DESC:     control registers for AMS REF clock control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     REFC_RESERVED_FOR_47_TO_32 
 *
 ******************************************************************************/
#define BCMI_HURACAN_REF_CTRL33r (0x0001b096 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_REF_CTRL33r_SIZE 4

/*
 * This structure should be used to declare and program REF_CTRL33.
 *
 */
typedef union BCMI_HURACAN_REF_CTRL33r_s {
	uint32_t v[1];
	uint32_t ref_ctrl33[1];
	uint32_t _ref_ctrl33;
} BCMI_HURACAN_REF_CTRL33r_t;

#define BCMI_HURACAN_REF_CTRL33r_CLR(r) (r).ref_ctrl33[0] = 0
#define BCMI_HURACAN_REF_CTRL33r_SET(r,d) (r).ref_ctrl33[0] = d
#define BCMI_HURACAN_REF_CTRL33r_GET(r) (r).ref_ctrl33[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_REF_CTRL33r_REFC_RESERVED_FOR_47_TO_32f_GET(r) (((r).ref_ctrl33[0]) & 0xffff)
#define BCMI_HURACAN_REF_CTRL33r_REFC_RESERVED_FOR_47_TO_32f_SET(r,f) (r).ref_ctrl33[0]=(((r).ref_ctrl33[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access REF_CTRL33.
 *
 */
#define BCMI_HURACAN_READ_REF_CTRL33r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_REF_CTRL33r,_r._ref_ctrl33)
#define BCMI_HURACAN_WRITE_REF_CTRL33r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_REF_CTRL33r,_r._ref_ctrl33)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define REF_CTRL33r BCMI_HURACAN_REF_CTRL33r
#define REF_CTRL33r_SIZE BCMI_HURACAN_REF_CTRL33r_SIZE
typedef BCMI_HURACAN_REF_CTRL33r_t REF_CTRL33r_t;
#define REF_CTRL33r_CLR BCMI_HURACAN_REF_CTRL33r_CLR
#define REF_CTRL33r_SET BCMI_HURACAN_REF_CTRL33r_SET
#define REF_CTRL33r_GET BCMI_HURACAN_REF_CTRL33r_GET
#define REF_CTRL33r_REFC_RESERVED_FOR_47_TO_32f_GET BCMI_HURACAN_REF_CTRL33r_REFC_RESERVED_FOR_47_TO_32f_GET
#define REF_CTRL33r_REFC_RESERVED_FOR_47_TO_32f_SET BCMI_HURACAN_REF_CTRL33r_REFC_RESERVED_FOR_47_TO_32f_SET
#define READ_REF_CTRL33r BCMI_HURACAN_READ_REF_CTRL33r
#define WRITE_REF_CTRL33r BCMI_HURACAN_WRITE_REF_CTRL33r
#define MODIFY_REF_CTRL33r BCMI_HURACAN_MODIFY_REF_CTRL33r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_REF_CTRL33r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  REF_CTRL34
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb097
 * DEVAD:    1
 * DESC:     control registers for AMS REF clock control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     I_OSC_CNTRL_1_TO_0 
 *     I_OSC_CNTRL_3_TO_2 
 *     REFC_RESERVED_FOR_31_TO_20 
 *
 ******************************************************************************/
#define BCMI_HURACAN_REF_CTRL34r (0x0001b097 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_REF_CTRL34r_SIZE 4

/*
 * This structure should be used to declare and program REF_CTRL34.
 *
 */
typedef union BCMI_HURACAN_REF_CTRL34r_s {
	uint32_t v[1];
	uint32_t ref_ctrl34[1];
	uint32_t _ref_ctrl34;
} BCMI_HURACAN_REF_CTRL34r_t;

#define BCMI_HURACAN_REF_CTRL34r_CLR(r) (r).ref_ctrl34[0] = 0
#define BCMI_HURACAN_REF_CTRL34r_SET(r,d) (r).ref_ctrl34[0] = d
#define BCMI_HURACAN_REF_CTRL34r_GET(r) (r).ref_ctrl34[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_REF_CTRL34r_REFC_RESERVED_FOR_31_TO_20f_GET(r) ((((r).ref_ctrl34[0]) >> 4) & 0xfff)
#define BCMI_HURACAN_REF_CTRL34r_REFC_RESERVED_FOR_31_TO_20f_SET(r,f) (r).ref_ctrl34[0]=(((r).ref_ctrl34[0] & ~((uint32_t)0xfff << 4)) | ((((uint32_t)f) & 0xfff) << 4)) | (4095 << (16 + 4))
#define BCMI_HURACAN_REF_CTRL34r_I_OSC_CNTRL_3_TO_2f_GET(r) ((((r).ref_ctrl34[0]) >> 2) & 0x3)
#define BCMI_HURACAN_REF_CTRL34r_I_OSC_CNTRL_3_TO_2f_SET(r,f) (r).ref_ctrl34[0]=(((r).ref_ctrl34[0] & ~((uint32_t)0x3 << 2)) | ((((uint32_t)f) & 0x3) << 2)) | (3 << (16 + 2))
#define BCMI_HURACAN_REF_CTRL34r_I_OSC_CNTRL_1_TO_0f_GET(r) (((r).ref_ctrl34[0]) & 0x3)
#define BCMI_HURACAN_REF_CTRL34r_I_OSC_CNTRL_1_TO_0f_SET(r,f) (r).ref_ctrl34[0]=(((r).ref_ctrl34[0] & ~((uint32_t)0x3)) | (((uint32_t)f) & 0x3)) | (0x3 << 16)

/*
 * These macros can be used to access REF_CTRL34.
 *
 */
#define BCMI_HURACAN_READ_REF_CTRL34r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_REF_CTRL34r,_r._ref_ctrl34)
#define BCMI_HURACAN_WRITE_REF_CTRL34r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_REF_CTRL34r,_r._ref_ctrl34)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define REF_CTRL34r BCMI_HURACAN_REF_CTRL34r
#define REF_CTRL34r_SIZE BCMI_HURACAN_REF_CTRL34r_SIZE
typedef BCMI_HURACAN_REF_CTRL34r_t REF_CTRL34r_t;
#define REF_CTRL34r_CLR BCMI_HURACAN_REF_CTRL34r_CLR
#define REF_CTRL34r_SET BCMI_HURACAN_REF_CTRL34r_SET
#define REF_CTRL34r_GET BCMI_HURACAN_REF_CTRL34r_GET
#define REF_CTRL34r_REFC_RESERVED_FOR_31_TO_20f_GET BCMI_HURACAN_REF_CTRL34r_REFC_RESERVED_FOR_31_TO_20f_GET
#define REF_CTRL34r_REFC_RESERVED_FOR_31_TO_20f_SET BCMI_HURACAN_REF_CTRL34r_REFC_RESERVED_FOR_31_TO_20f_SET
#define REF_CTRL34r_I_OSC_CNTRL_3_TO_2f_GET BCMI_HURACAN_REF_CTRL34r_I_OSC_CNTRL_3_TO_2f_GET
#define REF_CTRL34r_I_OSC_CNTRL_3_TO_2f_SET BCMI_HURACAN_REF_CTRL34r_I_OSC_CNTRL_3_TO_2f_SET
#define REF_CTRL34r_I_OSC_CNTRL_1_TO_0f_GET BCMI_HURACAN_REF_CTRL34r_I_OSC_CNTRL_1_TO_0f_GET
#define REF_CTRL34r_I_OSC_CNTRL_1_TO_0f_SET BCMI_HURACAN_REF_CTRL34r_I_OSC_CNTRL_1_TO_0f_SET
#define READ_REF_CTRL34r BCMI_HURACAN_READ_REF_CTRL34r
#define WRITE_REF_CTRL34r BCMI_HURACAN_WRITE_REF_CTRL34r
#define MODIFY_REF_CTRL34r BCMI_HURACAN_MODIFY_REF_CTRL34r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_REF_CTRL34r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  REF_CTRL35
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb098
 * DEVAD:    1
 * DESC:     control registers for AMS REF clock control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     REFC_RESERVED_FOR_15_TO_10 
 *
 ******************************************************************************/
#define BCMI_HURACAN_REF_CTRL35r (0x0001b098 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_REF_CTRL35r_SIZE 4

/*
 * This structure should be used to declare and program REF_CTRL35.
 *
 */
typedef union BCMI_HURACAN_REF_CTRL35r_s {
	uint32_t v[1];
	uint32_t ref_ctrl35[1];
	uint32_t _ref_ctrl35;
} BCMI_HURACAN_REF_CTRL35r_t;

#define BCMI_HURACAN_REF_CTRL35r_CLR(r) (r).ref_ctrl35[0] = 0
#define BCMI_HURACAN_REF_CTRL35r_SET(r,d) (r).ref_ctrl35[0] = d
#define BCMI_HURACAN_REF_CTRL35r_GET(r) (r).ref_ctrl35[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_REF_CTRL35r_REFC_RESERVED_FOR_15_TO_10f_GET(r) (((r).ref_ctrl35[0]) & 0x3f)
#define BCMI_HURACAN_REF_CTRL35r_REFC_RESERVED_FOR_15_TO_10f_SET(r,f) (r).ref_ctrl35[0]=(((r).ref_ctrl35[0] & ~((uint32_t)0x3f)) | (((uint32_t)f) & 0x3f)) | (0x3f << 16)

/*
 * These macros can be used to access REF_CTRL35.
 *
 */
#define BCMI_HURACAN_READ_REF_CTRL35r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_REF_CTRL35r,_r._ref_ctrl35)
#define BCMI_HURACAN_WRITE_REF_CTRL35r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_REF_CTRL35r,_r._ref_ctrl35)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define REF_CTRL35r BCMI_HURACAN_REF_CTRL35r
#define REF_CTRL35r_SIZE BCMI_HURACAN_REF_CTRL35r_SIZE
typedef BCMI_HURACAN_REF_CTRL35r_t REF_CTRL35r_t;
#define REF_CTRL35r_CLR BCMI_HURACAN_REF_CTRL35r_CLR
#define REF_CTRL35r_SET BCMI_HURACAN_REF_CTRL35r_SET
#define REF_CTRL35r_GET BCMI_HURACAN_REF_CTRL35r_GET
#define REF_CTRL35r_REFC_RESERVED_FOR_15_TO_10f_GET BCMI_HURACAN_REF_CTRL35r_REFC_RESERVED_FOR_15_TO_10f_GET
#define REF_CTRL35r_REFC_RESERVED_FOR_15_TO_10f_SET BCMI_HURACAN_REF_CTRL35r_REFC_RESERVED_FOR_15_TO_10f_SET
#define READ_REF_CTRL35r BCMI_HURACAN_READ_REF_CTRL35r
#define WRITE_REF_CTRL35r BCMI_HURACAN_WRITE_REF_CTRL35r
#define MODIFY_REF_CTRL35r BCMI_HURACAN_MODIFY_REF_CTRL35r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_REF_CTRL35r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  REF_CTRL36
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb099
 * DEVAD:    1
 * DESC:     control registers for AMS REF clock control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     REFCLK_IN_BIAS   
 *     TEST_SEL         
 *     TEST_AMP         
 *     I_PD_INTERNAL_OSC 
 *     I_PD_EXTERNAL_REFCLK 
 *
 ******************************************************************************/
#define BCMI_HURACAN_REF_CTRL36r (0x0001b099 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_REF_CTRL36r_SIZE 4

/*
 * This structure should be used to declare and program REF_CTRL36.
 *
 */
typedef union BCMI_HURACAN_REF_CTRL36r_s {
	uint32_t v[1];
	uint32_t ref_ctrl36[1];
	uint32_t _ref_ctrl36;
} BCMI_HURACAN_REF_CTRL36r_t;

#define BCMI_HURACAN_REF_CTRL36r_CLR(r) (r).ref_ctrl36[0] = 0
#define BCMI_HURACAN_REF_CTRL36r_SET(r,d) (r).ref_ctrl36[0] = d
#define BCMI_HURACAN_REF_CTRL36r_GET(r) (r).ref_ctrl36[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_REF_CTRL36r_I_PD_EXTERNAL_REFCLKf_GET(r) ((((r).ref_ctrl36[0]) >> 14) & 0x1)
#define BCMI_HURACAN_REF_CTRL36r_I_PD_EXTERNAL_REFCLKf_SET(r,f) (r).ref_ctrl36[0]=(((r).ref_ctrl36[0] & ~((uint32_t)0x1 << 14)) | ((((uint32_t)f) & 0x1) << 14)) | (1 << (16 + 14))
#define BCMI_HURACAN_REF_CTRL36r_I_PD_INTERNAL_OSCf_GET(r) ((((r).ref_ctrl36[0]) >> 13) & 0x1)
#define BCMI_HURACAN_REF_CTRL36r_I_PD_INTERNAL_OSCf_SET(r,f) (r).ref_ctrl36[0]=(((r).ref_ctrl36[0] & ~((uint32_t)0x1 << 13)) | ((((uint32_t)f) & 0x1) << 13)) | (1 << (16 + 13))
#define BCMI_HURACAN_REF_CTRL36r_TEST_AMPf_GET(r) ((((r).ref_ctrl36[0]) >> 12) & 0x1)
#define BCMI_HURACAN_REF_CTRL36r_TEST_AMPf_SET(r,f) (r).ref_ctrl36[0]=(((r).ref_ctrl36[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_REF_CTRL36r_TEST_SELf_GET(r) ((((r).ref_ctrl36[0]) >> 8) & 0x7)
#define BCMI_HURACAN_REF_CTRL36r_TEST_SELf_SET(r,f) (r).ref_ctrl36[0]=(((r).ref_ctrl36[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_REF_CTRL36r_REFCLK_IN_BIASf_GET(r) (((r).ref_ctrl36[0]) & 0x3f)
#define BCMI_HURACAN_REF_CTRL36r_REFCLK_IN_BIASf_SET(r,f) (r).ref_ctrl36[0]=(((r).ref_ctrl36[0] & ~((uint32_t)0x3f)) | (((uint32_t)f) & 0x3f)) | (0x3f << 16)

/*
 * These macros can be used to access REF_CTRL36.
 *
 */
#define BCMI_HURACAN_READ_REF_CTRL36r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_REF_CTRL36r,_r._ref_ctrl36)
#define BCMI_HURACAN_WRITE_REF_CTRL36r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_REF_CTRL36r,_r._ref_ctrl36)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define REF_CTRL36r BCMI_HURACAN_REF_CTRL36r
#define REF_CTRL36r_SIZE BCMI_HURACAN_REF_CTRL36r_SIZE
typedef BCMI_HURACAN_REF_CTRL36r_t REF_CTRL36r_t;
#define REF_CTRL36r_CLR BCMI_HURACAN_REF_CTRL36r_CLR
#define REF_CTRL36r_SET BCMI_HURACAN_REF_CTRL36r_SET
#define REF_CTRL36r_GET BCMI_HURACAN_REF_CTRL36r_GET
#define REF_CTRL36r_I_PD_EXTERNAL_REFCLKf_GET BCMI_HURACAN_REF_CTRL36r_I_PD_EXTERNAL_REFCLKf_GET
#define REF_CTRL36r_I_PD_EXTERNAL_REFCLKf_SET BCMI_HURACAN_REF_CTRL36r_I_PD_EXTERNAL_REFCLKf_SET
#define REF_CTRL36r_I_PD_INTERNAL_OSCf_GET BCMI_HURACAN_REF_CTRL36r_I_PD_INTERNAL_OSCf_GET
#define REF_CTRL36r_I_PD_INTERNAL_OSCf_SET BCMI_HURACAN_REF_CTRL36r_I_PD_INTERNAL_OSCf_SET
#define REF_CTRL36r_TEST_AMPf_GET BCMI_HURACAN_REF_CTRL36r_TEST_AMPf_GET
#define REF_CTRL36r_TEST_AMPf_SET BCMI_HURACAN_REF_CTRL36r_TEST_AMPf_SET
#define REF_CTRL36r_TEST_SELf_GET BCMI_HURACAN_REF_CTRL36r_TEST_SELf_GET
#define REF_CTRL36r_TEST_SELf_SET BCMI_HURACAN_REF_CTRL36r_TEST_SELf_SET
#define REF_CTRL36r_REFCLK_IN_BIASf_GET BCMI_HURACAN_REF_CTRL36r_REFCLK_IN_BIASf_GET
#define REF_CTRL36r_REFCLK_IN_BIASf_SET BCMI_HURACAN_REF_CTRL36r_REFCLK_IN_BIASf_SET
#define READ_REF_CTRL36r BCMI_HURACAN_READ_REF_CTRL36r
#define WRITE_REF_CTRL36r BCMI_HURACAN_WRITE_REF_CTRL36r
#define MODIFY_REF_CTRL36r BCMI_HURACAN_MODIFY_REF_CTRL36r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_REF_CTRL36r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  BG_CTRL37
 * BLOCKS:   CTRL_QUAD_D
 * REGADDR:  0xb09a
 * DEVAD:    1
 * DESC:     control registers for AMS BG control bus
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     BG_RESERVED_FOR_239_TO_234 
 *
 ******************************************************************************/
#define BCMI_HURACAN_BG_CTRL37r (0x0001b09a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_BG_CTRL37r_SIZE 4

/*
 * This structure should be used to declare and program BG_CTRL37.
 *
 */
typedef union BCMI_HURACAN_BG_CTRL37r_s {
	uint32_t v[1];
	uint32_t bg_ctrl37[1];
	uint32_t _bg_ctrl37;
} BCMI_HURACAN_BG_CTRL37r_t;

#define BCMI_HURACAN_BG_CTRL37r_CLR(r) (r).bg_ctrl37[0] = 0
#define BCMI_HURACAN_BG_CTRL37r_SET(r,d) (r).bg_ctrl37[0] = d
#define BCMI_HURACAN_BG_CTRL37r_GET(r) (r).bg_ctrl37[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_BG_CTRL37r_BG_RESERVED_FOR_239_TO_234f_GET(r) (((r).bg_ctrl37[0]) & 0x3f)
#define BCMI_HURACAN_BG_CTRL37r_BG_RESERVED_FOR_239_TO_234f_SET(r,f) (r).bg_ctrl37[0]=(((r).bg_ctrl37[0] & ~((uint32_t)0x3f)) | (((uint32_t)f) & 0x3f)) | (0x3f << 16)

/*
 * These macros can be used to access BG_CTRL37.
 *
 */
#define BCMI_HURACAN_READ_BG_CTRL37r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_BG_CTRL37r,_r._bg_ctrl37)
#define BCMI_HURACAN_WRITE_BG_CTRL37r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_BG_CTRL37r,_r._bg_ctrl37)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define BG_CTRL37r BCMI_HURACAN_BG_CTRL37r
#define BG_CTRL37r_SIZE BCMI_HURACAN_BG_CTRL37r_SIZE
typedef BCMI_HURACAN_BG_CTRL37r_t BG_CTRL37r_t;
#define BG_CTRL37r_CLR BCMI_HURACAN_BG_CTRL37r_CLR
#define BG_CTRL37r_SET BCMI_HURACAN_BG_CTRL37r_SET
#define BG_CTRL37r_GET BCMI_HURACAN_BG_CTRL37r_GET
#define BG_CTRL37r_BG_RESERVED_FOR_239_TO_234f_GET BCMI_HURACAN_BG_CTRL37r_BG_RESERVED_FOR_239_TO_234f_GET
#define BG_CTRL37r_BG_RESERVED_FOR_239_TO_234f_SET BCMI_HURACAN_BG_CTRL37r_BG_RESERVED_FOR_239_TO_234f_SET
#define READ_BG_CTRL37r BCMI_HURACAN_READ_BG_CTRL37r
#define WRITE_BG_CTRL37r BCMI_HURACAN_WRITE_BG_CTRL37r
#define MODIFY_BG_CTRL37r BCMI_HURACAN_MODIFY_BG_CTRL37r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_BG_CTRL37r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL0
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb100
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r (0x0001b100 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl0[1];
	uint32_t _ana_lane_0_quad_d_ctrl0;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_CLR(r) (r).ana_lane_0_quad_d_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_SET(r,d) (r).ana_lane_0_quad_d_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_GET(r) (r).ana_lane_0_quad_d_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_0_quad_d_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_0_quad_d_ctrl0[0]=(((r).ana_lane_0_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_0_quad_d_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_0_quad_d_ctrl0[0]=(((r).ana_lane_0_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_0_quad_d_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_0_quad_d_ctrl0[0]=(((r).ana_lane_0_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_0_quad_d_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_0_quad_d_ctrl0[0]=(((r).ana_lane_0_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_0_quad_d_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_0_quad_d_ctrl0[0]=(((r).ana_lane_0_quad_d_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r,_r._ana_lane_0_quad_d_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r,_r._ana_lane_0_quad_d_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL0r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r
#define ANA_LANE_0_QUAD_D_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_t ANA_LANE_0_QUAD_D_CTRL0r_t;
#define ANA_LANE_0_QUAD_D_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_CLR
#define ANA_LANE_0_QUAD_D_CTRL0r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_SET
#define ANA_LANE_0_QUAD_D_CTRL0r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_GET
#define ANA_LANE_0_QUAD_D_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_0_QUAD_D_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_0_QUAD_D_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_0_QUAD_D_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL0r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL0r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL0r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL1
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb101
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r (0x0001b101 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl1[1];
	uint32_t _ana_lane_0_quad_d_ctrl1;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_CLR(r) (r).ana_lane_0_quad_d_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_SET(r,d) (r).ana_lane_0_quad_d_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_GET(r) (r).ana_lane_0_quad_d_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_0_quad_d_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_0_quad_d_ctrl1[0]=(((r).ana_lane_0_quad_d_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_0_quad_d_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_0_quad_d_ctrl1[0]=(((r).ana_lane_0_quad_d_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_0_quad_d_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_0_quad_d_ctrl1[0]=(((r).ana_lane_0_quad_d_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_0_quad_d_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_0_quad_d_ctrl1[0]=(((r).ana_lane_0_quad_d_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_0_quad_d_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_0_quad_d_ctrl1[0]=(((r).ana_lane_0_quad_d_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r,_r._ana_lane_0_quad_d_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r,_r._ana_lane_0_quad_d_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL1r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r
#define ANA_LANE_0_QUAD_D_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_t ANA_LANE_0_QUAD_D_CTRL1r_t;
#define ANA_LANE_0_QUAD_D_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_CLR
#define ANA_LANE_0_QUAD_D_CTRL1r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_SET
#define ANA_LANE_0_QUAD_D_CTRL1r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_GET
#define ANA_LANE_0_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_0_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_0_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_0_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_0_QUAD_D_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_0_QUAD_D_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_0_QUAD_D_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_REF_OCLf_GET
#define ANA_LANE_0_QUAD_D_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_REF_OCLf_SET
#define ANA_LANE_0_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_0_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL1r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL1r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL1r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL2
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb102
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r (0x0001b102 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl2[1];
	uint32_t _ana_lane_0_quad_d_ctrl2;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_CLR(r) (r).ana_lane_0_quad_d_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_SET(r,d) (r).ana_lane_0_quad_d_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_GET(r) (r).ana_lane_0_quad_d_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_0_quad_d_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_0_quad_d_ctrl2[0]=(((r).ana_lane_0_quad_d_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_0_quad_d_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_0_quad_d_ctrl2[0]=(((r).ana_lane_0_quad_d_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r,_r._ana_lane_0_quad_d_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r,_r._ana_lane_0_quad_d_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL2r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r
#define ANA_LANE_0_QUAD_D_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_t ANA_LANE_0_QUAD_D_CTRL2r_t;
#define ANA_LANE_0_QUAD_D_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_CLR
#define ANA_LANE_0_QUAD_D_CTRL2r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_SET
#define ANA_LANE_0_QUAD_D_CTRL2r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_GET
#define ANA_LANE_0_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_0_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_0_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_0_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL2r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL2r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL2r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL3
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb103
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r (0x0001b103 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl3[1];
	uint32_t _ana_lane_0_quad_d_ctrl3;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_CLR(r) (r).ana_lane_0_quad_d_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_SET(r,d) (r).ana_lane_0_quad_d_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_GET(r) (r).ana_lane_0_quad_d_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_0_quad_d_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_0_quad_d_ctrl3[0]=(((r).ana_lane_0_quad_d_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_0_quad_d_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_0_quad_d_ctrl3[0]=(((r).ana_lane_0_quad_d_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r,_r._ana_lane_0_quad_d_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r,_r._ana_lane_0_quad_d_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL3r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r
#define ANA_LANE_0_QUAD_D_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_t ANA_LANE_0_QUAD_D_CTRL3r_t;
#define ANA_LANE_0_QUAD_D_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_CLR
#define ANA_LANE_0_QUAD_D_CTRL3r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_SET
#define ANA_LANE_0_QUAD_D_CTRL3r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_GET
#define ANA_LANE_0_QUAD_D_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_0_QUAD_D_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_0_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_0_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL3r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL3r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL3r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL4
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb104
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r (0x0001b104 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl4[1];
	uint32_t _ana_lane_0_quad_d_ctrl4;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_CLR(r) (r).ana_lane_0_quad_d_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_SET(r,d) (r).ana_lane_0_quad_d_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_GET(r) (r).ana_lane_0_quad_d_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_0_quad_d_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_0_quad_d_ctrl4[0]=(((r).ana_lane_0_quad_d_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_0_quad_d_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_0_quad_d_ctrl4[0]=(((r).ana_lane_0_quad_d_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r,_r._ana_lane_0_quad_d_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r,_r._ana_lane_0_quad_d_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL4r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r
#define ANA_LANE_0_QUAD_D_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_t ANA_LANE_0_QUAD_D_CTRL4r_t;
#define ANA_LANE_0_QUAD_D_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_CLR
#define ANA_LANE_0_QUAD_D_CTRL4r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_SET
#define ANA_LANE_0_QUAD_D_CTRL4r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_GET
#define ANA_LANE_0_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_0_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_0_QUAD_D_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_0_QUAD_D_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL4r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL4r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL4r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL5
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb105
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r (0x0001b105 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl5[1];
	uint32_t _ana_lane_0_quad_d_ctrl5;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_CLR(r) (r).ana_lane_0_quad_d_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_SET(r,d) (r).ana_lane_0_quad_d_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_GET(r) (r).ana_lane_0_quad_d_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_0_quad_d_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_0_quad_d_ctrl5[0]=(((r).ana_lane_0_quad_d_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_0_quad_d_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_0_quad_d_ctrl5[0]=(((r).ana_lane_0_quad_d_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_0_quad_d_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_0_quad_d_ctrl5[0]=(((r).ana_lane_0_quad_d_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r,_r._ana_lane_0_quad_d_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r,_r._ana_lane_0_quad_d_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL5r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r
#define ANA_LANE_0_QUAD_D_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_t ANA_LANE_0_QUAD_D_CTRL5r_t;
#define ANA_LANE_0_QUAD_D_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_CLR
#define ANA_LANE_0_QUAD_D_CTRL5r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_SET
#define ANA_LANE_0_QUAD_D_CTRL5r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_GET
#define ANA_LANE_0_QUAD_D_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_0_QUAD_D_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_0_QUAD_D_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_0_QUAD_D_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_0_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_0_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL5r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL5r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL5r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL6
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb106
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r (0x0001b106 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl6[1];
	uint32_t _ana_lane_0_quad_d_ctrl6;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_CLR(r) (r).ana_lane_0_quad_d_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_SET(r,d) (r).ana_lane_0_quad_d_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_GET(r) (r).ana_lane_0_quad_d_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_0_quad_d_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_0_quad_d_ctrl6[0]=(((r).ana_lane_0_quad_d_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_0_quad_d_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_0_quad_d_ctrl6[0]=(((r).ana_lane_0_quad_d_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r,_r._ana_lane_0_quad_d_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r,_r._ana_lane_0_quad_d_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL6r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r
#define ANA_LANE_0_QUAD_D_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_t ANA_LANE_0_QUAD_D_CTRL6r_t;
#define ANA_LANE_0_QUAD_D_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_CLR
#define ANA_LANE_0_QUAD_D_CTRL6r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_SET
#define ANA_LANE_0_QUAD_D_CTRL6r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_GET
#define ANA_LANE_0_QUAD_D_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_0_QUAD_D_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_0_QUAD_D_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_0_QUAD_D_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL6r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL6r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL6r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL7
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb107
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r (0x0001b107 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl7[1];
	uint32_t _ana_lane_0_quad_d_ctrl7;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_CLR(r) (r).ana_lane_0_quad_d_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_SET(r,d) (r).ana_lane_0_quad_d_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_GET(r) (r).ana_lane_0_quad_d_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_0_quad_d_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_0_quad_d_ctrl7[0]=(((r).ana_lane_0_quad_d_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_0_quad_d_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_0_quad_d_ctrl7[0]=(((r).ana_lane_0_quad_d_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r,_r._ana_lane_0_quad_d_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r,_r._ana_lane_0_quad_d_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL7r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r
#define ANA_LANE_0_QUAD_D_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_t ANA_LANE_0_QUAD_D_CTRL7r_t;
#define ANA_LANE_0_QUAD_D_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_CLR
#define ANA_LANE_0_QUAD_D_CTRL7r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_SET
#define ANA_LANE_0_QUAD_D_CTRL7r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_GET
#define ANA_LANE_0_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_0_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_0_QUAD_D_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_0_QUAD_D_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL7r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL7r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL7r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL8
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb108
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r (0x0001b108 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl8[1];
	uint32_t _ana_lane_0_quad_d_ctrl8;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_CLR(r) (r).ana_lane_0_quad_d_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_SET(r,d) (r).ana_lane_0_quad_d_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_GET(r) (r).ana_lane_0_quad_d_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_0_quad_d_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_0_quad_d_ctrl8[0]=(((r).ana_lane_0_quad_d_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_0_quad_d_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_0_quad_d_ctrl8[0]=(((r).ana_lane_0_quad_d_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_0_quad_d_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_0_quad_d_ctrl8[0]=(((r).ana_lane_0_quad_d_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r,_r._ana_lane_0_quad_d_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r,_r._ana_lane_0_quad_d_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL8r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r
#define ANA_LANE_0_QUAD_D_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_t ANA_LANE_0_QUAD_D_CTRL8r_t;
#define ANA_LANE_0_QUAD_D_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_CLR
#define ANA_LANE_0_QUAD_D_CTRL8r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_SET
#define ANA_LANE_0_QUAD_D_CTRL8r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_GET
#define ANA_LANE_0_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_0_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_0_QUAD_D_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_0_QUAD_D_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_0_QUAD_D_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_LA_PDf_GET
#define ANA_LANE_0_QUAD_D_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL8r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL8r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL8r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL9
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb109
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r (0x0001b109 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl9[1];
	uint32_t _ana_lane_0_quad_d_ctrl9;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_CLR(r) (r).ana_lane_0_quad_d_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_SET(r,d) (r).ana_lane_0_quad_d_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_GET(r) (r).ana_lane_0_quad_d_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_0_quad_d_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_0_quad_d_ctrl9[0]=(((r).ana_lane_0_quad_d_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_0_quad_d_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_0_quad_d_ctrl9[0]=(((r).ana_lane_0_quad_d_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_0_quad_d_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_0_quad_d_ctrl9[0]=(((r).ana_lane_0_quad_d_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_0_quad_d_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_0_quad_d_ctrl9[0]=(((r).ana_lane_0_quad_d_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r,_r._ana_lane_0_quad_d_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r,_r._ana_lane_0_quad_d_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL9r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r
#define ANA_LANE_0_QUAD_D_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_t ANA_LANE_0_QUAD_D_CTRL9r_t;
#define ANA_LANE_0_QUAD_D_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_CLR
#define ANA_LANE_0_QUAD_D_CTRL9r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_SET
#define ANA_LANE_0_QUAD_D_CTRL9r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_GET
#define ANA_LANE_0_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_0_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_0_QUAD_D_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_0_QUAD_D_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_0_QUAD_D_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_0_QUAD_D_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_0_QUAD_D_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_0_QUAD_D_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL9r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL9r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL9r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL10
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb10a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r (0x0001b10a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl10[1];
	uint32_t _ana_lane_0_quad_d_ctrl10;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_CLR(r) (r).ana_lane_0_quad_d_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_SET(r,d) (r).ana_lane_0_quad_d_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_GET(r) (r).ana_lane_0_quad_d_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_0_quad_d_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_0_quad_d_ctrl10[0]=(((r).ana_lane_0_quad_d_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_0_quad_d_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_0_quad_d_ctrl10[0]=(((r).ana_lane_0_quad_d_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_0_quad_d_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_0_quad_d_ctrl10[0]=(((r).ana_lane_0_quad_d_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_0_quad_d_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_0_quad_d_ctrl10[0]=(((r).ana_lane_0_quad_d_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_0_quad_d_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_0_quad_d_ctrl10[0]=(((r).ana_lane_0_quad_d_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r,_r._ana_lane_0_quad_d_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r,_r._ana_lane_0_quad_d_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL10r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r
#define ANA_LANE_0_QUAD_D_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_t ANA_LANE_0_QUAD_D_CTRL10r_t;
#define ANA_LANE_0_QUAD_D_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_CLR
#define ANA_LANE_0_QUAD_D_CTRL10r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_SET
#define ANA_LANE_0_QUAD_D_CTRL10r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_GET
#define ANA_LANE_0_QUAD_D_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_0_QUAD_D_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_0_QUAD_D_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_0_QUAD_D_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_0_QUAD_D_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_0_QUAD_D_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_0_QUAD_D_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_0_QUAD_D_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_0_QUAD_D_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_0_QUAD_D_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL10r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL10r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL10r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL11
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb10b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r (0x0001b10b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl11[1];
	uint32_t _ana_lane_0_quad_d_ctrl11;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_CLR(r) (r).ana_lane_0_quad_d_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_SET(r,d) (r).ana_lane_0_quad_d_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_GET(r) (r).ana_lane_0_quad_d_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_0_quad_d_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_0_quad_d_ctrl11[0]=(((r).ana_lane_0_quad_d_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r,_r._ana_lane_0_quad_d_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r,_r._ana_lane_0_quad_d_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL11r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r
#define ANA_LANE_0_QUAD_D_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_t ANA_LANE_0_QUAD_D_CTRL11r_t;
#define ANA_LANE_0_QUAD_D_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_CLR
#define ANA_LANE_0_QUAD_D_CTRL11r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_SET
#define ANA_LANE_0_QUAD_D_CTRL11r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_GET
#define ANA_LANE_0_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_0_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL11r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL11r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL11r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL12
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb10c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r (0x0001b10c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl12[1];
	uint32_t _ana_lane_0_quad_d_ctrl12;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_CLR(r) (r).ana_lane_0_quad_d_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_SET(r,d) (r).ana_lane_0_quad_d_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_GET(r) (r).ana_lane_0_quad_d_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_0_quad_d_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_0_quad_d_ctrl12[0]=(((r).ana_lane_0_quad_d_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_0_quad_d_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_d_ctrl12[0]=(((r).ana_lane_0_quad_d_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_0_quad_d_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_0_quad_d_ctrl12[0]=(((r).ana_lane_0_quad_d_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_0_quad_d_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_d_ctrl12[0]=(((r).ana_lane_0_quad_d_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r,_r._ana_lane_0_quad_d_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r,_r._ana_lane_0_quad_d_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL12r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r
#define ANA_LANE_0_QUAD_D_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_t ANA_LANE_0_QUAD_D_CTRL12r_t;
#define ANA_LANE_0_QUAD_D_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_CLR
#define ANA_LANE_0_QUAD_D_CTRL12r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_SET
#define ANA_LANE_0_QUAD_D_CTRL12r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_GET
#define ANA_LANE_0_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_0_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_0_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_0_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_0_QUAD_D_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_0_QUAD_D_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_0_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_0_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL12r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL12r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL12r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL13
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb10d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r (0x0001b10d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl13[1];
	uint32_t _ana_lane_0_quad_d_ctrl13;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_CLR(r) (r).ana_lane_0_quad_d_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_SET(r,d) (r).ana_lane_0_quad_d_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_GET(r) (r).ana_lane_0_quad_d_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_0_quad_d_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_0_quad_d_ctrl13[0]=(((r).ana_lane_0_quad_d_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_0_quad_d_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_d_ctrl13[0]=(((r).ana_lane_0_quad_d_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r,_r._ana_lane_0_quad_d_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r,_r._ana_lane_0_quad_d_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL13r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r
#define ANA_LANE_0_QUAD_D_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_t ANA_LANE_0_QUAD_D_CTRL13r_t;
#define ANA_LANE_0_QUAD_D_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_CLR
#define ANA_LANE_0_QUAD_D_CTRL13r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_SET
#define ANA_LANE_0_QUAD_D_CTRL13r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_GET
#define ANA_LANE_0_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_0_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_0_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_0_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL13r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL13r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL13r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL14
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb10e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r (0x0001b10e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl14[1];
	uint32_t _ana_lane_0_quad_d_ctrl14;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_CLR(r) (r).ana_lane_0_quad_d_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_SET(r,d) (r).ana_lane_0_quad_d_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_GET(r) (r).ana_lane_0_quad_d_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_0_quad_d_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_0_quad_d_ctrl14[0]=(((r).ana_lane_0_quad_d_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_0_quad_d_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_0_quad_d_ctrl14[0]=(((r).ana_lane_0_quad_d_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_0_quad_d_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_d_ctrl14[0]=(((r).ana_lane_0_quad_d_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r,_r._ana_lane_0_quad_d_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r,_r._ana_lane_0_quad_d_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL14r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r
#define ANA_LANE_0_QUAD_D_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_t ANA_LANE_0_QUAD_D_CTRL14r_t;
#define ANA_LANE_0_QUAD_D_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_CLR
#define ANA_LANE_0_QUAD_D_CTRL14r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_SET
#define ANA_LANE_0_QUAD_D_CTRL14r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_GET
#define ANA_LANE_0_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_0_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_0_QUAD_D_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_0_QUAD_D_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_0_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_0_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL14r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL14r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL14r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL15
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb10f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r (0x0001b10f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl15[1];
	uint32_t _ana_lane_0_quad_d_ctrl15;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_CLR(r) (r).ana_lane_0_quad_d_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SET(r,d) (r).ana_lane_0_quad_d_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_GET(r) (r).ana_lane_0_quad_d_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_0_quad_d_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_0_quad_d_ctrl15[0]=(((r).ana_lane_0_quad_d_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_0_quad_d_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_0_quad_d_ctrl15[0]=(((r).ana_lane_0_quad_d_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_0_quad_d_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_0_quad_d_ctrl15[0]=(((r).ana_lane_0_quad_d_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_0_quad_d_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_0_quad_d_ctrl15[0]=(((r).ana_lane_0_quad_d_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_0_quad_d_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_0_quad_d_ctrl15[0]=(((r).ana_lane_0_quad_d_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_0_quad_d_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_0_quad_d_ctrl15[0]=(((r).ana_lane_0_quad_d_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r,_r._ana_lane_0_quad_d_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r,_r._ana_lane_0_quad_d_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL15r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r
#define ANA_LANE_0_QUAD_D_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_t ANA_LANE_0_QUAD_D_CTRL15r_t;
#define ANA_LANE_0_QUAD_D_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_CLR
#define ANA_LANE_0_QUAD_D_CTRL15r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SET
#define ANA_LANE_0_QUAD_D_CTRL15r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_GET
#define ANA_LANE_0_QUAD_D_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_0_QUAD_D_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_0_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_0_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL15r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL15r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL15r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_CTRL16
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb110
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r (0x0001b110 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_ctrl16[1];
	uint32_t _ana_lane_0_quad_d_ctrl16;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_CLR(r) (r).ana_lane_0_quad_d_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_SET(r,d) (r).ana_lane_0_quad_d_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_GET(r) (r).ana_lane_0_quad_d_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_0_quad_d_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_0_quad_d_ctrl16[0]=(((r).ana_lane_0_quad_d_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_0_quad_d_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_0_quad_d_ctrl16[0]=(((r).ana_lane_0_quad_d_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r,_r._ana_lane_0_quad_d_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r,_r._ana_lane_0_quad_d_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_CTRL16r BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r
#define ANA_LANE_0_QUAD_D_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_t ANA_LANE_0_QUAD_D_CTRL16r_t;
#define ANA_LANE_0_QUAD_D_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_CLR
#define ANA_LANE_0_QUAD_D_CTRL16r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_SET
#define ANA_LANE_0_QUAD_D_CTRL16r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_GET
#define ANA_LANE_0_QUAD_D_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_0_QUAD_D_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_0_QUAD_D_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_0_QUAD_D_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_0_QUAD_D_CTRL16r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_CTRL16r
#define WRITE_ANA_LANE_0_QUAD_D_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_CTRL16r
#define MODIFY_ANA_LANE_0_QUAD_D_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_0_QUAD_D_STATUS0
 * BLOCKS:   ANA_LANE_0_QUAD_D
 * REGADDR:  0xb120
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r (0x0001b120 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_0_QUAD_D_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_0_quad_d_status0[1];
	uint32_t _ana_lane_0_quad_d_status0;
} BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_CLR(r) (r).ana_lane_0_quad_d_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_SET(r,d) (r).ana_lane_0_quad_d_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_GET(r) (r).ana_lane_0_quad_d_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_0_quad_d_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_0_quad_d_status0[0]=(((r).ana_lane_0_quad_d_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_0_quad_d_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_0_quad_d_status0[0]=(((r).ana_lane_0_quad_d_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_0_QUAD_D_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r,_r._ana_lane_0_quad_d_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r,_r._ana_lane_0_quad_d_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_0_QUAD_D_STATUS0r BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r
#define ANA_LANE_0_QUAD_D_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_t ANA_LANE_0_QUAD_D_STATUS0r_t;
#define ANA_LANE_0_QUAD_D_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_CLR
#define ANA_LANE_0_QUAD_D_STATUS0r_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_SET
#define ANA_LANE_0_QUAD_D_STATUS0r_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_GET
#define ANA_LANE_0_QUAD_D_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_0_QUAD_D_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_0_QUAD_D_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_0_QUAD_D_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_0_QUAD_D_STATUS0r BCMI_HURACAN_READ_ANA_LANE_0_QUAD_D_STATUS0r
#define WRITE_ANA_LANE_0_QUAD_D_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_0_QUAD_D_STATUS0r
#define MODIFY_ANA_LANE_0_QUAD_D_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_0_QUAD_D_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_0_QUAD_D_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL0
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb200
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r (0x0001b200 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl0[1];
	uint32_t _ana_lane_1_quad_d_ctrl0;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_CLR(r) (r).ana_lane_1_quad_d_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_SET(r,d) (r).ana_lane_1_quad_d_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_GET(r) (r).ana_lane_1_quad_d_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_1_quad_d_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_1_quad_d_ctrl0[0]=(((r).ana_lane_1_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_1_quad_d_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_1_quad_d_ctrl0[0]=(((r).ana_lane_1_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_1_quad_d_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_1_quad_d_ctrl0[0]=(((r).ana_lane_1_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_1_quad_d_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_1_quad_d_ctrl0[0]=(((r).ana_lane_1_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_1_quad_d_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_1_quad_d_ctrl0[0]=(((r).ana_lane_1_quad_d_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r,_r._ana_lane_1_quad_d_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r,_r._ana_lane_1_quad_d_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL0r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r
#define ANA_LANE_1_QUAD_D_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_t ANA_LANE_1_QUAD_D_CTRL0r_t;
#define ANA_LANE_1_QUAD_D_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_CLR
#define ANA_LANE_1_QUAD_D_CTRL0r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_SET
#define ANA_LANE_1_QUAD_D_CTRL0r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_GET
#define ANA_LANE_1_QUAD_D_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_1_QUAD_D_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_1_QUAD_D_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_1_QUAD_D_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL0r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL0r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL0r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL1
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb201
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r (0x0001b201 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl1[1];
	uint32_t _ana_lane_1_quad_d_ctrl1;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_CLR(r) (r).ana_lane_1_quad_d_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_SET(r,d) (r).ana_lane_1_quad_d_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_GET(r) (r).ana_lane_1_quad_d_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_1_quad_d_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_1_quad_d_ctrl1[0]=(((r).ana_lane_1_quad_d_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_1_quad_d_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_1_quad_d_ctrl1[0]=(((r).ana_lane_1_quad_d_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_1_quad_d_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_1_quad_d_ctrl1[0]=(((r).ana_lane_1_quad_d_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_1_quad_d_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_1_quad_d_ctrl1[0]=(((r).ana_lane_1_quad_d_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_1_quad_d_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_1_quad_d_ctrl1[0]=(((r).ana_lane_1_quad_d_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r,_r._ana_lane_1_quad_d_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r,_r._ana_lane_1_quad_d_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL1r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r
#define ANA_LANE_1_QUAD_D_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_t ANA_LANE_1_QUAD_D_CTRL1r_t;
#define ANA_LANE_1_QUAD_D_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_CLR
#define ANA_LANE_1_QUAD_D_CTRL1r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_SET
#define ANA_LANE_1_QUAD_D_CTRL1r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_GET
#define ANA_LANE_1_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_1_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_1_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_1_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_1_QUAD_D_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_1_QUAD_D_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_1_QUAD_D_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_REF_OCLf_GET
#define ANA_LANE_1_QUAD_D_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_REF_OCLf_SET
#define ANA_LANE_1_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_1_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL1r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL1r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL1r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL2
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb202
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r (0x0001b202 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl2[1];
	uint32_t _ana_lane_1_quad_d_ctrl2;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_CLR(r) (r).ana_lane_1_quad_d_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_SET(r,d) (r).ana_lane_1_quad_d_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_GET(r) (r).ana_lane_1_quad_d_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_1_quad_d_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_1_quad_d_ctrl2[0]=(((r).ana_lane_1_quad_d_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_1_quad_d_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_1_quad_d_ctrl2[0]=(((r).ana_lane_1_quad_d_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r,_r._ana_lane_1_quad_d_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r,_r._ana_lane_1_quad_d_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL2r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r
#define ANA_LANE_1_QUAD_D_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_t ANA_LANE_1_QUAD_D_CTRL2r_t;
#define ANA_LANE_1_QUAD_D_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_CLR
#define ANA_LANE_1_QUAD_D_CTRL2r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_SET
#define ANA_LANE_1_QUAD_D_CTRL2r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_GET
#define ANA_LANE_1_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_1_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_1_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_1_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL2r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL2r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL2r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL3
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb203
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r (0x0001b203 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl3[1];
	uint32_t _ana_lane_1_quad_d_ctrl3;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_CLR(r) (r).ana_lane_1_quad_d_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_SET(r,d) (r).ana_lane_1_quad_d_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_GET(r) (r).ana_lane_1_quad_d_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_1_quad_d_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_1_quad_d_ctrl3[0]=(((r).ana_lane_1_quad_d_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_1_quad_d_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_1_quad_d_ctrl3[0]=(((r).ana_lane_1_quad_d_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r,_r._ana_lane_1_quad_d_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r,_r._ana_lane_1_quad_d_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL3r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r
#define ANA_LANE_1_QUAD_D_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_t ANA_LANE_1_QUAD_D_CTRL3r_t;
#define ANA_LANE_1_QUAD_D_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_CLR
#define ANA_LANE_1_QUAD_D_CTRL3r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_SET
#define ANA_LANE_1_QUAD_D_CTRL3r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_GET
#define ANA_LANE_1_QUAD_D_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_1_QUAD_D_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_1_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_1_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL3r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL3r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL3r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL4
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb204
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r (0x0001b204 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl4[1];
	uint32_t _ana_lane_1_quad_d_ctrl4;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_CLR(r) (r).ana_lane_1_quad_d_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_SET(r,d) (r).ana_lane_1_quad_d_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_GET(r) (r).ana_lane_1_quad_d_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_1_quad_d_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_1_quad_d_ctrl4[0]=(((r).ana_lane_1_quad_d_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_1_quad_d_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_1_quad_d_ctrl4[0]=(((r).ana_lane_1_quad_d_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r,_r._ana_lane_1_quad_d_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r,_r._ana_lane_1_quad_d_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL4r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r
#define ANA_LANE_1_QUAD_D_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_t ANA_LANE_1_QUAD_D_CTRL4r_t;
#define ANA_LANE_1_QUAD_D_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_CLR
#define ANA_LANE_1_QUAD_D_CTRL4r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_SET
#define ANA_LANE_1_QUAD_D_CTRL4r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_GET
#define ANA_LANE_1_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_1_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_1_QUAD_D_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_1_QUAD_D_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL4r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL4r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL4r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL5
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb205
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r (0x0001b205 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl5[1];
	uint32_t _ana_lane_1_quad_d_ctrl5;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_CLR(r) (r).ana_lane_1_quad_d_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_SET(r,d) (r).ana_lane_1_quad_d_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_GET(r) (r).ana_lane_1_quad_d_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_1_quad_d_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_1_quad_d_ctrl5[0]=(((r).ana_lane_1_quad_d_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_1_quad_d_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_1_quad_d_ctrl5[0]=(((r).ana_lane_1_quad_d_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_1_quad_d_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_1_quad_d_ctrl5[0]=(((r).ana_lane_1_quad_d_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r,_r._ana_lane_1_quad_d_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r,_r._ana_lane_1_quad_d_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL5r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r
#define ANA_LANE_1_QUAD_D_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_t ANA_LANE_1_QUAD_D_CTRL5r_t;
#define ANA_LANE_1_QUAD_D_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_CLR
#define ANA_LANE_1_QUAD_D_CTRL5r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_SET
#define ANA_LANE_1_QUAD_D_CTRL5r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_GET
#define ANA_LANE_1_QUAD_D_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_1_QUAD_D_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_1_QUAD_D_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_1_QUAD_D_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_1_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_1_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL5r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL5r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL5r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL6
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb206
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r (0x0001b206 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl6[1];
	uint32_t _ana_lane_1_quad_d_ctrl6;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_CLR(r) (r).ana_lane_1_quad_d_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_SET(r,d) (r).ana_lane_1_quad_d_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_GET(r) (r).ana_lane_1_quad_d_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_1_quad_d_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_1_quad_d_ctrl6[0]=(((r).ana_lane_1_quad_d_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_1_quad_d_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_1_quad_d_ctrl6[0]=(((r).ana_lane_1_quad_d_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r,_r._ana_lane_1_quad_d_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r,_r._ana_lane_1_quad_d_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL6r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r
#define ANA_LANE_1_QUAD_D_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_t ANA_LANE_1_QUAD_D_CTRL6r_t;
#define ANA_LANE_1_QUAD_D_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_CLR
#define ANA_LANE_1_QUAD_D_CTRL6r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_SET
#define ANA_LANE_1_QUAD_D_CTRL6r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_GET
#define ANA_LANE_1_QUAD_D_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_1_QUAD_D_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_1_QUAD_D_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_1_QUAD_D_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL6r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL6r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL6r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL7
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb207
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r (0x0001b207 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl7[1];
	uint32_t _ana_lane_1_quad_d_ctrl7;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_CLR(r) (r).ana_lane_1_quad_d_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_SET(r,d) (r).ana_lane_1_quad_d_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_GET(r) (r).ana_lane_1_quad_d_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_1_quad_d_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_1_quad_d_ctrl7[0]=(((r).ana_lane_1_quad_d_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_1_quad_d_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_1_quad_d_ctrl7[0]=(((r).ana_lane_1_quad_d_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r,_r._ana_lane_1_quad_d_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r,_r._ana_lane_1_quad_d_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL7r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r
#define ANA_LANE_1_QUAD_D_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_t ANA_LANE_1_QUAD_D_CTRL7r_t;
#define ANA_LANE_1_QUAD_D_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_CLR
#define ANA_LANE_1_QUAD_D_CTRL7r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_SET
#define ANA_LANE_1_QUAD_D_CTRL7r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_GET
#define ANA_LANE_1_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_1_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_1_QUAD_D_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_1_QUAD_D_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL7r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL7r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL7r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL8
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb208
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r (0x0001b208 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl8[1];
	uint32_t _ana_lane_1_quad_d_ctrl8;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_CLR(r) (r).ana_lane_1_quad_d_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_SET(r,d) (r).ana_lane_1_quad_d_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_GET(r) (r).ana_lane_1_quad_d_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_1_quad_d_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_1_quad_d_ctrl8[0]=(((r).ana_lane_1_quad_d_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_1_quad_d_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_1_quad_d_ctrl8[0]=(((r).ana_lane_1_quad_d_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_1_quad_d_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_1_quad_d_ctrl8[0]=(((r).ana_lane_1_quad_d_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r,_r._ana_lane_1_quad_d_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r,_r._ana_lane_1_quad_d_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL8r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r
#define ANA_LANE_1_QUAD_D_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_t ANA_LANE_1_QUAD_D_CTRL8r_t;
#define ANA_LANE_1_QUAD_D_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_CLR
#define ANA_LANE_1_QUAD_D_CTRL8r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_SET
#define ANA_LANE_1_QUAD_D_CTRL8r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_GET
#define ANA_LANE_1_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_1_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_1_QUAD_D_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_1_QUAD_D_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_1_QUAD_D_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_LA_PDf_GET
#define ANA_LANE_1_QUAD_D_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL8r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL8r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL8r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL9
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb209
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r (0x0001b209 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl9[1];
	uint32_t _ana_lane_1_quad_d_ctrl9;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_CLR(r) (r).ana_lane_1_quad_d_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_SET(r,d) (r).ana_lane_1_quad_d_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_GET(r) (r).ana_lane_1_quad_d_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_1_quad_d_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_1_quad_d_ctrl9[0]=(((r).ana_lane_1_quad_d_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_1_quad_d_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_1_quad_d_ctrl9[0]=(((r).ana_lane_1_quad_d_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_1_quad_d_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_1_quad_d_ctrl9[0]=(((r).ana_lane_1_quad_d_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_1_quad_d_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_1_quad_d_ctrl9[0]=(((r).ana_lane_1_quad_d_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r,_r._ana_lane_1_quad_d_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r,_r._ana_lane_1_quad_d_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL9r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r
#define ANA_LANE_1_QUAD_D_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_t ANA_LANE_1_QUAD_D_CTRL9r_t;
#define ANA_LANE_1_QUAD_D_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_CLR
#define ANA_LANE_1_QUAD_D_CTRL9r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_SET
#define ANA_LANE_1_QUAD_D_CTRL9r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_GET
#define ANA_LANE_1_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_1_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_1_QUAD_D_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_1_QUAD_D_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_1_QUAD_D_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_1_QUAD_D_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_1_QUAD_D_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_1_QUAD_D_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL9r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL9r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL9r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL10
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb20a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r (0x0001b20a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl10[1];
	uint32_t _ana_lane_1_quad_d_ctrl10;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_CLR(r) (r).ana_lane_1_quad_d_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_SET(r,d) (r).ana_lane_1_quad_d_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_GET(r) (r).ana_lane_1_quad_d_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_1_quad_d_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_1_quad_d_ctrl10[0]=(((r).ana_lane_1_quad_d_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_1_quad_d_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_1_quad_d_ctrl10[0]=(((r).ana_lane_1_quad_d_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_1_quad_d_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_1_quad_d_ctrl10[0]=(((r).ana_lane_1_quad_d_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_1_quad_d_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_1_quad_d_ctrl10[0]=(((r).ana_lane_1_quad_d_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_1_quad_d_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_1_quad_d_ctrl10[0]=(((r).ana_lane_1_quad_d_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r,_r._ana_lane_1_quad_d_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r,_r._ana_lane_1_quad_d_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL10r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r
#define ANA_LANE_1_QUAD_D_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_t ANA_LANE_1_QUAD_D_CTRL10r_t;
#define ANA_LANE_1_QUAD_D_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_CLR
#define ANA_LANE_1_QUAD_D_CTRL10r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_SET
#define ANA_LANE_1_QUAD_D_CTRL10r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_GET
#define ANA_LANE_1_QUAD_D_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_1_QUAD_D_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_1_QUAD_D_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_1_QUAD_D_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_1_QUAD_D_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_1_QUAD_D_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_1_QUAD_D_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_1_QUAD_D_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_1_QUAD_D_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_1_QUAD_D_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL10r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL10r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL10r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL11
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb20b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r (0x0001b20b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl11[1];
	uint32_t _ana_lane_1_quad_d_ctrl11;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_CLR(r) (r).ana_lane_1_quad_d_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_SET(r,d) (r).ana_lane_1_quad_d_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_GET(r) (r).ana_lane_1_quad_d_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_1_quad_d_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_1_quad_d_ctrl11[0]=(((r).ana_lane_1_quad_d_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r,_r._ana_lane_1_quad_d_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r,_r._ana_lane_1_quad_d_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL11r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r
#define ANA_LANE_1_QUAD_D_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_t ANA_LANE_1_QUAD_D_CTRL11r_t;
#define ANA_LANE_1_QUAD_D_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_CLR
#define ANA_LANE_1_QUAD_D_CTRL11r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_SET
#define ANA_LANE_1_QUAD_D_CTRL11r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_GET
#define ANA_LANE_1_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_1_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL11r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL11r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL11r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL12
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb20c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r (0x0001b20c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl12[1];
	uint32_t _ana_lane_1_quad_d_ctrl12;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_CLR(r) (r).ana_lane_1_quad_d_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_SET(r,d) (r).ana_lane_1_quad_d_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_GET(r) (r).ana_lane_1_quad_d_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_1_quad_d_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_1_quad_d_ctrl12[0]=(((r).ana_lane_1_quad_d_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_1_quad_d_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_d_ctrl12[0]=(((r).ana_lane_1_quad_d_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_1_quad_d_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_1_quad_d_ctrl12[0]=(((r).ana_lane_1_quad_d_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_1_quad_d_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_d_ctrl12[0]=(((r).ana_lane_1_quad_d_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r,_r._ana_lane_1_quad_d_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r,_r._ana_lane_1_quad_d_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL12r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r
#define ANA_LANE_1_QUAD_D_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_t ANA_LANE_1_QUAD_D_CTRL12r_t;
#define ANA_LANE_1_QUAD_D_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_CLR
#define ANA_LANE_1_QUAD_D_CTRL12r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_SET
#define ANA_LANE_1_QUAD_D_CTRL12r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_GET
#define ANA_LANE_1_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_1_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_1_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_1_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_1_QUAD_D_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_1_QUAD_D_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_1_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_1_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL12r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL12r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL12r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL13
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb20d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r (0x0001b20d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl13[1];
	uint32_t _ana_lane_1_quad_d_ctrl13;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_CLR(r) (r).ana_lane_1_quad_d_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_SET(r,d) (r).ana_lane_1_quad_d_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_GET(r) (r).ana_lane_1_quad_d_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_1_quad_d_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_1_quad_d_ctrl13[0]=(((r).ana_lane_1_quad_d_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_1_quad_d_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_d_ctrl13[0]=(((r).ana_lane_1_quad_d_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r,_r._ana_lane_1_quad_d_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r,_r._ana_lane_1_quad_d_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL13r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r
#define ANA_LANE_1_QUAD_D_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_t ANA_LANE_1_QUAD_D_CTRL13r_t;
#define ANA_LANE_1_QUAD_D_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_CLR
#define ANA_LANE_1_QUAD_D_CTRL13r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_SET
#define ANA_LANE_1_QUAD_D_CTRL13r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_GET
#define ANA_LANE_1_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_1_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_1_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_1_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL13r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL13r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL13r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL14
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb20e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r (0x0001b20e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl14[1];
	uint32_t _ana_lane_1_quad_d_ctrl14;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_CLR(r) (r).ana_lane_1_quad_d_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_SET(r,d) (r).ana_lane_1_quad_d_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_GET(r) (r).ana_lane_1_quad_d_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_1_quad_d_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_1_quad_d_ctrl14[0]=(((r).ana_lane_1_quad_d_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_1_quad_d_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_1_quad_d_ctrl14[0]=(((r).ana_lane_1_quad_d_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_1_quad_d_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_d_ctrl14[0]=(((r).ana_lane_1_quad_d_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r,_r._ana_lane_1_quad_d_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r,_r._ana_lane_1_quad_d_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL14r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r
#define ANA_LANE_1_QUAD_D_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_t ANA_LANE_1_QUAD_D_CTRL14r_t;
#define ANA_LANE_1_QUAD_D_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_CLR
#define ANA_LANE_1_QUAD_D_CTRL14r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_SET
#define ANA_LANE_1_QUAD_D_CTRL14r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_GET
#define ANA_LANE_1_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_1_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_1_QUAD_D_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_1_QUAD_D_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_1_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_1_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL14r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL14r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL14r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL15
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb20f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r (0x0001b20f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl15[1];
	uint32_t _ana_lane_1_quad_d_ctrl15;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_CLR(r) (r).ana_lane_1_quad_d_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SET(r,d) (r).ana_lane_1_quad_d_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_GET(r) (r).ana_lane_1_quad_d_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_1_quad_d_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_1_quad_d_ctrl15[0]=(((r).ana_lane_1_quad_d_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_1_quad_d_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_1_quad_d_ctrl15[0]=(((r).ana_lane_1_quad_d_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_1_quad_d_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_1_quad_d_ctrl15[0]=(((r).ana_lane_1_quad_d_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_1_quad_d_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_1_quad_d_ctrl15[0]=(((r).ana_lane_1_quad_d_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_1_quad_d_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_1_quad_d_ctrl15[0]=(((r).ana_lane_1_quad_d_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_1_quad_d_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_1_quad_d_ctrl15[0]=(((r).ana_lane_1_quad_d_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r,_r._ana_lane_1_quad_d_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r,_r._ana_lane_1_quad_d_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL15r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r
#define ANA_LANE_1_QUAD_D_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_t ANA_LANE_1_QUAD_D_CTRL15r_t;
#define ANA_LANE_1_QUAD_D_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_CLR
#define ANA_LANE_1_QUAD_D_CTRL15r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SET
#define ANA_LANE_1_QUAD_D_CTRL15r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_GET
#define ANA_LANE_1_QUAD_D_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_1_QUAD_D_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_1_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_1_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL15r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL15r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL15r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_CTRL16
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb210
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r (0x0001b210 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_ctrl16[1];
	uint32_t _ana_lane_1_quad_d_ctrl16;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_CLR(r) (r).ana_lane_1_quad_d_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_SET(r,d) (r).ana_lane_1_quad_d_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_GET(r) (r).ana_lane_1_quad_d_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_1_quad_d_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_1_quad_d_ctrl16[0]=(((r).ana_lane_1_quad_d_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_1_quad_d_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_1_quad_d_ctrl16[0]=(((r).ana_lane_1_quad_d_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r,_r._ana_lane_1_quad_d_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r,_r._ana_lane_1_quad_d_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_CTRL16r BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r
#define ANA_LANE_1_QUAD_D_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_t ANA_LANE_1_QUAD_D_CTRL16r_t;
#define ANA_LANE_1_QUAD_D_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_CLR
#define ANA_LANE_1_QUAD_D_CTRL16r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_SET
#define ANA_LANE_1_QUAD_D_CTRL16r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_GET
#define ANA_LANE_1_QUAD_D_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_1_QUAD_D_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_1_QUAD_D_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_1_QUAD_D_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_1_QUAD_D_CTRL16r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_CTRL16r
#define WRITE_ANA_LANE_1_QUAD_D_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_CTRL16r
#define MODIFY_ANA_LANE_1_QUAD_D_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_1_QUAD_D_STATUS0
 * BLOCKS:   ANA_LANE_1_QUAD_D
 * REGADDR:  0xb220
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r (0x0001b220 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_1_QUAD_D_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_1_quad_d_status0[1];
	uint32_t _ana_lane_1_quad_d_status0;
} BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_CLR(r) (r).ana_lane_1_quad_d_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_SET(r,d) (r).ana_lane_1_quad_d_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_GET(r) (r).ana_lane_1_quad_d_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_1_quad_d_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_1_quad_d_status0[0]=(((r).ana_lane_1_quad_d_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_1_quad_d_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_1_quad_d_status0[0]=(((r).ana_lane_1_quad_d_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_1_QUAD_D_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r,_r._ana_lane_1_quad_d_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r,_r._ana_lane_1_quad_d_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_1_QUAD_D_STATUS0r BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r
#define ANA_LANE_1_QUAD_D_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_t ANA_LANE_1_QUAD_D_STATUS0r_t;
#define ANA_LANE_1_QUAD_D_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_CLR
#define ANA_LANE_1_QUAD_D_STATUS0r_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_SET
#define ANA_LANE_1_QUAD_D_STATUS0r_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_GET
#define ANA_LANE_1_QUAD_D_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_1_QUAD_D_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_1_QUAD_D_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_1_QUAD_D_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_1_QUAD_D_STATUS0r BCMI_HURACAN_READ_ANA_LANE_1_QUAD_D_STATUS0r
#define WRITE_ANA_LANE_1_QUAD_D_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_1_QUAD_D_STATUS0r
#define MODIFY_ANA_LANE_1_QUAD_D_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_1_QUAD_D_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_1_QUAD_D_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL0
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb400
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r (0x0001b400 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl0[1];
	uint32_t _ana_lane_2_quad_d_ctrl0;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_CLR(r) (r).ana_lane_2_quad_d_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_SET(r,d) (r).ana_lane_2_quad_d_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_GET(r) (r).ana_lane_2_quad_d_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_2_quad_d_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_2_quad_d_ctrl0[0]=(((r).ana_lane_2_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_2_quad_d_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_2_quad_d_ctrl0[0]=(((r).ana_lane_2_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_2_quad_d_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_2_quad_d_ctrl0[0]=(((r).ana_lane_2_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_2_quad_d_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_2_quad_d_ctrl0[0]=(((r).ana_lane_2_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_2_quad_d_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_2_quad_d_ctrl0[0]=(((r).ana_lane_2_quad_d_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r,_r._ana_lane_2_quad_d_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r,_r._ana_lane_2_quad_d_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL0r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r
#define ANA_LANE_2_QUAD_D_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_t ANA_LANE_2_QUAD_D_CTRL0r_t;
#define ANA_LANE_2_QUAD_D_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_CLR
#define ANA_LANE_2_QUAD_D_CTRL0r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_SET
#define ANA_LANE_2_QUAD_D_CTRL0r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_GET
#define ANA_LANE_2_QUAD_D_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_2_QUAD_D_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_2_QUAD_D_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_2_QUAD_D_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL0r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL0r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL0r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL1
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb401
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r (0x0001b401 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl1[1];
	uint32_t _ana_lane_2_quad_d_ctrl1;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_CLR(r) (r).ana_lane_2_quad_d_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_SET(r,d) (r).ana_lane_2_quad_d_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_GET(r) (r).ana_lane_2_quad_d_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_2_quad_d_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_2_quad_d_ctrl1[0]=(((r).ana_lane_2_quad_d_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_2_quad_d_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_2_quad_d_ctrl1[0]=(((r).ana_lane_2_quad_d_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_2_quad_d_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_2_quad_d_ctrl1[0]=(((r).ana_lane_2_quad_d_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_2_quad_d_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_2_quad_d_ctrl1[0]=(((r).ana_lane_2_quad_d_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_2_quad_d_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_2_quad_d_ctrl1[0]=(((r).ana_lane_2_quad_d_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r,_r._ana_lane_2_quad_d_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r,_r._ana_lane_2_quad_d_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL1r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r
#define ANA_LANE_2_QUAD_D_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_t ANA_LANE_2_QUAD_D_CTRL1r_t;
#define ANA_LANE_2_QUAD_D_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_CLR
#define ANA_LANE_2_QUAD_D_CTRL1r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_SET
#define ANA_LANE_2_QUAD_D_CTRL1r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_GET
#define ANA_LANE_2_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_2_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_2_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_2_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_2_QUAD_D_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_2_QUAD_D_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_2_QUAD_D_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_REF_OCLf_GET
#define ANA_LANE_2_QUAD_D_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_REF_OCLf_SET
#define ANA_LANE_2_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_2_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL1r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL1r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL1r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL2
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb402
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r (0x0001b402 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl2[1];
	uint32_t _ana_lane_2_quad_d_ctrl2;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_CLR(r) (r).ana_lane_2_quad_d_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_SET(r,d) (r).ana_lane_2_quad_d_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_GET(r) (r).ana_lane_2_quad_d_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_2_quad_d_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_2_quad_d_ctrl2[0]=(((r).ana_lane_2_quad_d_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_2_quad_d_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_2_quad_d_ctrl2[0]=(((r).ana_lane_2_quad_d_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r,_r._ana_lane_2_quad_d_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r,_r._ana_lane_2_quad_d_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL2r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r
#define ANA_LANE_2_QUAD_D_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_t ANA_LANE_2_QUAD_D_CTRL2r_t;
#define ANA_LANE_2_QUAD_D_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_CLR
#define ANA_LANE_2_QUAD_D_CTRL2r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_SET
#define ANA_LANE_2_QUAD_D_CTRL2r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_GET
#define ANA_LANE_2_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_2_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_2_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_2_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL2r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL2r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL2r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL3
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb403
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r (0x0001b403 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl3[1];
	uint32_t _ana_lane_2_quad_d_ctrl3;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_CLR(r) (r).ana_lane_2_quad_d_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_SET(r,d) (r).ana_lane_2_quad_d_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_GET(r) (r).ana_lane_2_quad_d_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_2_quad_d_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_2_quad_d_ctrl3[0]=(((r).ana_lane_2_quad_d_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_2_quad_d_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_2_quad_d_ctrl3[0]=(((r).ana_lane_2_quad_d_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r,_r._ana_lane_2_quad_d_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r,_r._ana_lane_2_quad_d_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL3r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r
#define ANA_LANE_2_QUAD_D_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_t ANA_LANE_2_QUAD_D_CTRL3r_t;
#define ANA_LANE_2_QUAD_D_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_CLR
#define ANA_LANE_2_QUAD_D_CTRL3r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_SET
#define ANA_LANE_2_QUAD_D_CTRL3r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_GET
#define ANA_LANE_2_QUAD_D_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_2_QUAD_D_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_2_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_2_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL3r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL3r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL3r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL4
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb404
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r (0x0001b404 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl4[1];
	uint32_t _ana_lane_2_quad_d_ctrl4;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_CLR(r) (r).ana_lane_2_quad_d_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_SET(r,d) (r).ana_lane_2_quad_d_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_GET(r) (r).ana_lane_2_quad_d_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_2_quad_d_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_2_quad_d_ctrl4[0]=(((r).ana_lane_2_quad_d_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_2_quad_d_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_2_quad_d_ctrl4[0]=(((r).ana_lane_2_quad_d_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r,_r._ana_lane_2_quad_d_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r,_r._ana_lane_2_quad_d_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL4r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r
#define ANA_LANE_2_QUAD_D_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_t ANA_LANE_2_QUAD_D_CTRL4r_t;
#define ANA_LANE_2_QUAD_D_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_CLR
#define ANA_LANE_2_QUAD_D_CTRL4r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_SET
#define ANA_LANE_2_QUAD_D_CTRL4r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_GET
#define ANA_LANE_2_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_2_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_2_QUAD_D_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_2_QUAD_D_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL4r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL4r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL4r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL5
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb405
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r (0x0001b405 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl5[1];
	uint32_t _ana_lane_2_quad_d_ctrl5;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_CLR(r) (r).ana_lane_2_quad_d_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_SET(r,d) (r).ana_lane_2_quad_d_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_GET(r) (r).ana_lane_2_quad_d_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_2_quad_d_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_2_quad_d_ctrl5[0]=(((r).ana_lane_2_quad_d_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_2_quad_d_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_2_quad_d_ctrl5[0]=(((r).ana_lane_2_quad_d_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_2_quad_d_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_2_quad_d_ctrl5[0]=(((r).ana_lane_2_quad_d_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r,_r._ana_lane_2_quad_d_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r,_r._ana_lane_2_quad_d_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL5r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r
#define ANA_LANE_2_QUAD_D_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_t ANA_LANE_2_QUAD_D_CTRL5r_t;
#define ANA_LANE_2_QUAD_D_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_CLR
#define ANA_LANE_2_QUAD_D_CTRL5r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_SET
#define ANA_LANE_2_QUAD_D_CTRL5r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_GET
#define ANA_LANE_2_QUAD_D_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_2_QUAD_D_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_2_QUAD_D_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_2_QUAD_D_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_2_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_2_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL5r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL5r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL5r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL6
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb406
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r (0x0001b406 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl6[1];
	uint32_t _ana_lane_2_quad_d_ctrl6;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_CLR(r) (r).ana_lane_2_quad_d_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_SET(r,d) (r).ana_lane_2_quad_d_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_GET(r) (r).ana_lane_2_quad_d_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_2_quad_d_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_2_quad_d_ctrl6[0]=(((r).ana_lane_2_quad_d_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_2_quad_d_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_2_quad_d_ctrl6[0]=(((r).ana_lane_2_quad_d_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r,_r._ana_lane_2_quad_d_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r,_r._ana_lane_2_quad_d_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL6r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r
#define ANA_LANE_2_QUAD_D_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_t ANA_LANE_2_QUAD_D_CTRL6r_t;
#define ANA_LANE_2_QUAD_D_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_CLR
#define ANA_LANE_2_QUAD_D_CTRL6r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_SET
#define ANA_LANE_2_QUAD_D_CTRL6r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_GET
#define ANA_LANE_2_QUAD_D_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_2_QUAD_D_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_2_QUAD_D_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_2_QUAD_D_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL6r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL6r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL6r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL7
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb407
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r (0x0001b407 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl7[1];
	uint32_t _ana_lane_2_quad_d_ctrl7;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_CLR(r) (r).ana_lane_2_quad_d_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_SET(r,d) (r).ana_lane_2_quad_d_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_GET(r) (r).ana_lane_2_quad_d_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_2_quad_d_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_2_quad_d_ctrl7[0]=(((r).ana_lane_2_quad_d_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_2_quad_d_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_2_quad_d_ctrl7[0]=(((r).ana_lane_2_quad_d_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r,_r._ana_lane_2_quad_d_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r,_r._ana_lane_2_quad_d_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL7r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r
#define ANA_LANE_2_QUAD_D_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_t ANA_LANE_2_QUAD_D_CTRL7r_t;
#define ANA_LANE_2_QUAD_D_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_CLR
#define ANA_LANE_2_QUAD_D_CTRL7r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_SET
#define ANA_LANE_2_QUAD_D_CTRL7r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_GET
#define ANA_LANE_2_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_2_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_2_QUAD_D_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_2_QUAD_D_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL7r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL7r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL7r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL8
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb408
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r (0x0001b408 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl8[1];
	uint32_t _ana_lane_2_quad_d_ctrl8;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_CLR(r) (r).ana_lane_2_quad_d_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_SET(r,d) (r).ana_lane_2_quad_d_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_GET(r) (r).ana_lane_2_quad_d_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_2_quad_d_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_2_quad_d_ctrl8[0]=(((r).ana_lane_2_quad_d_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_2_quad_d_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_2_quad_d_ctrl8[0]=(((r).ana_lane_2_quad_d_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_2_quad_d_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_2_quad_d_ctrl8[0]=(((r).ana_lane_2_quad_d_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r,_r._ana_lane_2_quad_d_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r,_r._ana_lane_2_quad_d_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL8r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r
#define ANA_LANE_2_QUAD_D_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_t ANA_LANE_2_QUAD_D_CTRL8r_t;
#define ANA_LANE_2_QUAD_D_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_CLR
#define ANA_LANE_2_QUAD_D_CTRL8r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_SET
#define ANA_LANE_2_QUAD_D_CTRL8r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_GET
#define ANA_LANE_2_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_2_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_2_QUAD_D_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_2_QUAD_D_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_2_QUAD_D_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_LA_PDf_GET
#define ANA_LANE_2_QUAD_D_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL8r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL8r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL8r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL9
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb409
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r (0x0001b409 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl9[1];
	uint32_t _ana_lane_2_quad_d_ctrl9;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_CLR(r) (r).ana_lane_2_quad_d_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_SET(r,d) (r).ana_lane_2_quad_d_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_GET(r) (r).ana_lane_2_quad_d_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_2_quad_d_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_2_quad_d_ctrl9[0]=(((r).ana_lane_2_quad_d_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_2_quad_d_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_2_quad_d_ctrl9[0]=(((r).ana_lane_2_quad_d_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_2_quad_d_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_2_quad_d_ctrl9[0]=(((r).ana_lane_2_quad_d_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_2_quad_d_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_2_quad_d_ctrl9[0]=(((r).ana_lane_2_quad_d_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r,_r._ana_lane_2_quad_d_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r,_r._ana_lane_2_quad_d_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL9r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r
#define ANA_LANE_2_QUAD_D_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_t ANA_LANE_2_QUAD_D_CTRL9r_t;
#define ANA_LANE_2_QUAD_D_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_CLR
#define ANA_LANE_2_QUAD_D_CTRL9r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_SET
#define ANA_LANE_2_QUAD_D_CTRL9r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_GET
#define ANA_LANE_2_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_2_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_2_QUAD_D_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_2_QUAD_D_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_2_QUAD_D_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_2_QUAD_D_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_2_QUAD_D_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_2_QUAD_D_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL9r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL9r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL9r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL10
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb40a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r (0x0001b40a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl10[1];
	uint32_t _ana_lane_2_quad_d_ctrl10;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_CLR(r) (r).ana_lane_2_quad_d_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_SET(r,d) (r).ana_lane_2_quad_d_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_GET(r) (r).ana_lane_2_quad_d_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_2_quad_d_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_2_quad_d_ctrl10[0]=(((r).ana_lane_2_quad_d_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_2_quad_d_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_2_quad_d_ctrl10[0]=(((r).ana_lane_2_quad_d_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_2_quad_d_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_2_quad_d_ctrl10[0]=(((r).ana_lane_2_quad_d_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_2_quad_d_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_2_quad_d_ctrl10[0]=(((r).ana_lane_2_quad_d_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_2_quad_d_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_2_quad_d_ctrl10[0]=(((r).ana_lane_2_quad_d_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r,_r._ana_lane_2_quad_d_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r,_r._ana_lane_2_quad_d_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL10r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r
#define ANA_LANE_2_QUAD_D_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_t ANA_LANE_2_QUAD_D_CTRL10r_t;
#define ANA_LANE_2_QUAD_D_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_CLR
#define ANA_LANE_2_QUAD_D_CTRL10r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_SET
#define ANA_LANE_2_QUAD_D_CTRL10r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_GET
#define ANA_LANE_2_QUAD_D_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_2_QUAD_D_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_2_QUAD_D_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_2_QUAD_D_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_2_QUAD_D_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_2_QUAD_D_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_2_QUAD_D_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_2_QUAD_D_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_2_QUAD_D_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_2_QUAD_D_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL10r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL10r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL10r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL11
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb40b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r (0x0001b40b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl11[1];
	uint32_t _ana_lane_2_quad_d_ctrl11;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_CLR(r) (r).ana_lane_2_quad_d_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_SET(r,d) (r).ana_lane_2_quad_d_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_GET(r) (r).ana_lane_2_quad_d_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_2_quad_d_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_2_quad_d_ctrl11[0]=(((r).ana_lane_2_quad_d_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r,_r._ana_lane_2_quad_d_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r,_r._ana_lane_2_quad_d_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL11r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r
#define ANA_LANE_2_QUAD_D_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_t ANA_LANE_2_QUAD_D_CTRL11r_t;
#define ANA_LANE_2_QUAD_D_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_CLR
#define ANA_LANE_2_QUAD_D_CTRL11r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_SET
#define ANA_LANE_2_QUAD_D_CTRL11r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_GET
#define ANA_LANE_2_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_2_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL11r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL11r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL11r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL12
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb40c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r (0x0001b40c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl12[1];
	uint32_t _ana_lane_2_quad_d_ctrl12;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_CLR(r) (r).ana_lane_2_quad_d_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_SET(r,d) (r).ana_lane_2_quad_d_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_GET(r) (r).ana_lane_2_quad_d_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_2_quad_d_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_2_quad_d_ctrl12[0]=(((r).ana_lane_2_quad_d_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_2_quad_d_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_d_ctrl12[0]=(((r).ana_lane_2_quad_d_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_2_quad_d_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_2_quad_d_ctrl12[0]=(((r).ana_lane_2_quad_d_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_2_quad_d_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_d_ctrl12[0]=(((r).ana_lane_2_quad_d_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r,_r._ana_lane_2_quad_d_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r,_r._ana_lane_2_quad_d_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL12r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r
#define ANA_LANE_2_QUAD_D_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_t ANA_LANE_2_QUAD_D_CTRL12r_t;
#define ANA_LANE_2_QUAD_D_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_CLR
#define ANA_LANE_2_QUAD_D_CTRL12r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_SET
#define ANA_LANE_2_QUAD_D_CTRL12r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_GET
#define ANA_LANE_2_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_2_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_2_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_2_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_2_QUAD_D_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_2_QUAD_D_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_2_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_2_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL12r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL12r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL12r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL13
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb40d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r (0x0001b40d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl13[1];
	uint32_t _ana_lane_2_quad_d_ctrl13;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_CLR(r) (r).ana_lane_2_quad_d_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_SET(r,d) (r).ana_lane_2_quad_d_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_GET(r) (r).ana_lane_2_quad_d_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_2_quad_d_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_2_quad_d_ctrl13[0]=(((r).ana_lane_2_quad_d_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_2_quad_d_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_d_ctrl13[0]=(((r).ana_lane_2_quad_d_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r,_r._ana_lane_2_quad_d_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r,_r._ana_lane_2_quad_d_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL13r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r
#define ANA_LANE_2_QUAD_D_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_t ANA_LANE_2_QUAD_D_CTRL13r_t;
#define ANA_LANE_2_QUAD_D_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_CLR
#define ANA_LANE_2_QUAD_D_CTRL13r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_SET
#define ANA_LANE_2_QUAD_D_CTRL13r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_GET
#define ANA_LANE_2_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_2_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_2_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_2_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL13r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL13r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL13r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL14
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb40e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r (0x0001b40e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl14[1];
	uint32_t _ana_lane_2_quad_d_ctrl14;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_CLR(r) (r).ana_lane_2_quad_d_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_SET(r,d) (r).ana_lane_2_quad_d_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_GET(r) (r).ana_lane_2_quad_d_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_2_quad_d_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_2_quad_d_ctrl14[0]=(((r).ana_lane_2_quad_d_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_2_quad_d_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_2_quad_d_ctrl14[0]=(((r).ana_lane_2_quad_d_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_2_quad_d_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_d_ctrl14[0]=(((r).ana_lane_2_quad_d_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r,_r._ana_lane_2_quad_d_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r,_r._ana_lane_2_quad_d_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL14r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r
#define ANA_LANE_2_QUAD_D_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_t ANA_LANE_2_QUAD_D_CTRL14r_t;
#define ANA_LANE_2_QUAD_D_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_CLR
#define ANA_LANE_2_QUAD_D_CTRL14r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_SET
#define ANA_LANE_2_QUAD_D_CTRL14r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_GET
#define ANA_LANE_2_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_2_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_2_QUAD_D_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_2_QUAD_D_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_2_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_2_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL14r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL14r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL14r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL15
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb40f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r (0x0001b40f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl15[1];
	uint32_t _ana_lane_2_quad_d_ctrl15;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_CLR(r) (r).ana_lane_2_quad_d_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SET(r,d) (r).ana_lane_2_quad_d_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_GET(r) (r).ana_lane_2_quad_d_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_2_quad_d_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_2_quad_d_ctrl15[0]=(((r).ana_lane_2_quad_d_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_2_quad_d_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_2_quad_d_ctrl15[0]=(((r).ana_lane_2_quad_d_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_2_quad_d_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_2_quad_d_ctrl15[0]=(((r).ana_lane_2_quad_d_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_2_quad_d_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_2_quad_d_ctrl15[0]=(((r).ana_lane_2_quad_d_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_2_quad_d_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_2_quad_d_ctrl15[0]=(((r).ana_lane_2_quad_d_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_2_quad_d_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_2_quad_d_ctrl15[0]=(((r).ana_lane_2_quad_d_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r,_r._ana_lane_2_quad_d_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r,_r._ana_lane_2_quad_d_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL15r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r
#define ANA_LANE_2_QUAD_D_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_t ANA_LANE_2_QUAD_D_CTRL15r_t;
#define ANA_LANE_2_QUAD_D_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_CLR
#define ANA_LANE_2_QUAD_D_CTRL15r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SET
#define ANA_LANE_2_QUAD_D_CTRL15r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_GET
#define ANA_LANE_2_QUAD_D_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_2_QUAD_D_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_2_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_2_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL15r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL15r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL15r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_CTRL16
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb410
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r (0x0001b410 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_ctrl16[1];
	uint32_t _ana_lane_2_quad_d_ctrl16;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_CLR(r) (r).ana_lane_2_quad_d_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_SET(r,d) (r).ana_lane_2_quad_d_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_GET(r) (r).ana_lane_2_quad_d_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_2_quad_d_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_2_quad_d_ctrl16[0]=(((r).ana_lane_2_quad_d_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_2_quad_d_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_2_quad_d_ctrl16[0]=(((r).ana_lane_2_quad_d_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r,_r._ana_lane_2_quad_d_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r,_r._ana_lane_2_quad_d_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_CTRL16r BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r
#define ANA_LANE_2_QUAD_D_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_t ANA_LANE_2_QUAD_D_CTRL16r_t;
#define ANA_LANE_2_QUAD_D_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_CLR
#define ANA_LANE_2_QUAD_D_CTRL16r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_SET
#define ANA_LANE_2_QUAD_D_CTRL16r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_GET
#define ANA_LANE_2_QUAD_D_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_2_QUAD_D_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_2_QUAD_D_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_2_QUAD_D_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_2_QUAD_D_CTRL16r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_CTRL16r
#define WRITE_ANA_LANE_2_QUAD_D_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_CTRL16r
#define MODIFY_ANA_LANE_2_QUAD_D_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_2_QUAD_D_STATUS0
 * BLOCKS:   ANA_LANE_2_QUAD_D
 * REGADDR:  0xb420
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r (0x0001b420 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_2_QUAD_D_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_2_quad_d_status0[1];
	uint32_t _ana_lane_2_quad_d_status0;
} BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_CLR(r) (r).ana_lane_2_quad_d_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_SET(r,d) (r).ana_lane_2_quad_d_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_GET(r) (r).ana_lane_2_quad_d_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_2_quad_d_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_2_quad_d_status0[0]=(((r).ana_lane_2_quad_d_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_2_quad_d_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_2_quad_d_status0[0]=(((r).ana_lane_2_quad_d_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_2_QUAD_D_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r,_r._ana_lane_2_quad_d_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r,_r._ana_lane_2_quad_d_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_2_QUAD_D_STATUS0r BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r
#define ANA_LANE_2_QUAD_D_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_t ANA_LANE_2_QUAD_D_STATUS0r_t;
#define ANA_LANE_2_QUAD_D_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_CLR
#define ANA_LANE_2_QUAD_D_STATUS0r_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_SET
#define ANA_LANE_2_QUAD_D_STATUS0r_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_GET
#define ANA_LANE_2_QUAD_D_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_2_QUAD_D_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_2_QUAD_D_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_2_QUAD_D_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_2_QUAD_D_STATUS0r BCMI_HURACAN_READ_ANA_LANE_2_QUAD_D_STATUS0r
#define WRITE_ANA_LANE_2_QUAD_D_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_2_QUAD_D_STATUS0r
#define MODIFY_ANA_LANE_2_QUAD_D_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_2_QUAD_D_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_2_QUAD_D_STATUS0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL0
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb800
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_PWRDN       
 *     RX_SIGDET_BYPASS 
 *     RX_SIGDET_PWRDN  
 *     RX_SIGDECT_12GMODE 
 *     DC_COUPLE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r (0x0001b800 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl0[1];
	uint32_t _ana_lane_3_quad_d_ctrl0;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_CLR(r) (r).ana_lane_3_quad_d_ctrl0[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_SET(r,d) (r).ana_lane_3_quad_d_ctrl0[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_GET(r) (r).ana_lane_3_quad_d_ctrl0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_DC_COUPLEf_GET(r) ((((r).ana_lane_3_quad_d_ctrl0[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_DC_COUPLEf_SET(r,f) (r).ana_lane_3_quad_d_ctrl0[0]=(((r).ana_lane_3_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_GET(r) ((((r).ana_lane_3_quad_d_ctrl0[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_SET(r,f) (r).ana_lane_3_quad_d_ctrl0[0]=(((r).ana_lane_3_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_GET(r) ((((r).ana_lane_3_quad_d_ctrl0[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_SET(r,f) (r).ana_lane_3_quad_d_ctrl0[0]=(((r).ana_lane_3_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_GET(r) ((((r).ana_lane_3_quad_d_ctrl0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_SET(r,f) (r).ana_lane_3_quad_d_ctrl0[0]=(((r).ana_lane_3_quad_d_ctrl0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RXTX_PWRDNf_GET(r) (((r).ana_lane_3_quad_d_ctrl0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RXTX_PWRDNf_SET(r,f) (r).ana_lane_3_quad_d_ctrl0[0]=(((r).ana_lane_3_quad_d_ctrl0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r,_r._ana_lane_3_quad_d_ctrl0)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r,_r._ana_lane_3_quad_d_ctrl0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL0r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r
#define ANA_LANE_3_QUAD_D_CTRL0r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_t ANA_LANE_3_QUAD_D_CTRL0r_t;
#define ANA_LANE_3_QUAD_D_CTRL0r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_CLR
#define ANA_LANE_3_QUAD_D_CTRL0r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_SET
#define ANA_LANE_3_QUAD_D_CTRL0r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_GET
#define ANA_LANE_3_QUAD_D_CTRL0r_DC_COUPLEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_DC_COUPLEf_GET
#define ANA_LANE_3_QUAD_D_CTRL0r_DC_COUPLEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_DC_COUPLEf_SET
#define ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_GET
#define ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDECT_12GMODEf_SET
#define ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_GET
#define ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDET_PWRDNf_SET
#define ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_GET
#define ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RX_SIGDET_BYPASSf_SET
#define ANA_LANE_3_QUAD_D_CTRL0r_RXTX_PWRDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RXTX_PWRDNf_GET
#define ANA_LANE_3_QUAD_D_CTRL0r_RXTX_PWRDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r_RXTX_PWRDNf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL0r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL0r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL0r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL0r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL0r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL0r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL1
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb801
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RX_SIGDET_THRESHOLD 
 *     REF_OCL          
 *     OCL_PWRDN        
 *     OCL_DISABLE_LOOP 
 *     RXTX_RESERVED_FOR_15_12 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r (0x0001b801 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL1.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl1[1];
	uint32_t _ana_lane_3_quad_d_ctrl1;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_CLR(r) (r).ana_lane_3_quad_d_ctrl1[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_SET(r,d) (r).ana_lane_3_quad_d_ctrl1[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_GET(r) (r).ana_lane_3_quad_d_ctrl1[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET(r) ((((r).ana_lane_3_quad_d_ctrl1[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET(r,f) (r).ana_lane_3_quad_d_ctrl1[0]=(((r).ana_lane_3_quad_d_ctrl1[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_GET(r) ((((r).ana_lane_3_quad_d_ctrl1[0]) >> 9) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_SET(r,f) (r).ana_lane_3_quad_d_ctrl1[0]=(((r).ana_lane_3_quad_d_ctrl1[0] & ~((uint32_t)0x1 << 9)) | ((((uint32_t)f) & 0x1) << 9)) | (1 << (16 + 9))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_OCL_PWRDNf_GET(r) ((((r).ana_lane_3_quad_d_ctrl1[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_OCL_PWRDNf_SET(r,f) (r).ana_lane_3_quad_d_ctrl1[0]=(((r).ana_lane_3_quad_d_ctrl1[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_REF_OCLf_GET(r) ((((r).ana_lane_3_quad_d_ctrl1[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_REF_OCLf_SET(r,f) (r).ana_lane_3_quad_d_ctrl1[0]=(((r).ana_lane_3_quad_d_ctrl1[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_GET(r) (((r).ana_lane_3_quad_d_ctrl1[0]) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_SET(r,f) (r).ana_lane_3_quad_d_ctrl1[0]=(((r).ana_lane_3_quad_d_ctrl1[0] & ~((uint32_t)0x7)) | (((uint32_t)f) & 0x7)) | (0x7 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL1.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL1r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r,_r._ana_lane_3_quad_d_ctrl1)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL1r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r,_r._ana_lane_3_quad_d_ctrl1)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL1r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r
#define ANA_LANE_3_QUAD_D_CTRL1r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_t ANA_LANE_3_QUAD_D_CTRL1r_t;
#define ANA_LANE_3_QUAD_D_CTRL1r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_CLR
#define ANA_LANE_3_QUAD_D_CTRL1r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_SET
#define ANA_LANE_3_QUAD_D_CTRL1r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_GET
#define ANA_LANE_3_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_GET
#define ANA_LANE_3_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_RXTX_RESERVED_FOR_15_12f_SET
#define ANA_LANE_3_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_GET
#define ANA_LANE_3_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_OCL_DISABLE_LOOPf_SET
#define ANA_LANE_3_QUAD_D_CTRL1r_OCL_PWRDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_OCL_PWRDNf_GET
#define ANA_LANE_3_QUAD_D_CTRL1r_OCL_PWRDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_OCL_PWRDNf_SET
#define ANA_LANE_3_QUAD_D_CTRL1r_REF_OCLf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_REF_OCLf_GET
#define ANA_LANE_3_QUAD_D_CTRL1r_REF_OCLf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_REF_OCLf_SET
#define ANA_LANE_3_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_GET
#define ANA_LANE_3_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r_RX_SIGDET_THRESHOLDf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL1r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL1r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL1r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL1r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL1r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL1r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL1r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL2
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb802
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_ENB_NEGIMP  
 *     CTLE_ENB_NEGCAP  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r (0x0001b802 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL2.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl2[1];
	uint32_t _ana_lane_3_quad_d_ctrl2;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_CLR(r) (r).ana_lane_3_quad_d_ctrl2[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_SET(r,d) (r).ana_lane_3_quad_d_ctrl2[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_GET(r) (r).ana_lane_3_quad_d_ctrl2[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_GET(r) ((((r).ana_lane_3_quad_d_ctrl2[0]) >> 8) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_SET(r,f) (r).ana_lane_3_quad_d_ctrl2[0]=(((r).ana_lane_3_quad_d_ctrl2[0] & ~((uint32_t)0x7f << 8)) | ((((uint32_t)f) & 0x7f) << 8)) | (127 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_GET(r) (((r).ana_lane_3_quad_d_ctrl2[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_SET(r,f) (r).ana_lane_3_quad_d_ctrl2[0]=(((r).ana_lane_3_quad_d_ctrl2[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL2.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL2r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r,_r._ana_lane_3_quad_d_ctrl2)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL2r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r,_r._ana_lane_3_quad_d_ctrl2)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL2r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r
#define ANA_LANE_3_QUAD_D_CTRL2r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_t ANA_LANE_3_QUAD_D_CTRL2r_t;
#define ANA_LANE_3_QUAD_D_CTRL2r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_CLR
#define ANA_LANE_3_QUAD_D_CTRL2r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_SET
#define ANA_LANE_3_QUAD_D_CTRL2r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_GET
#define ANA_LANE_3_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_GET
#define ANA_LANE_3_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_CTLE_ENB_NEGCAPf_SET
#define ANA_LANE_3_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_GET
#define ANA_LANE_3_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r_CTLE_ENB_NEGIMPf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL2r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL2r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL2r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL2r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL2r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL2r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL2r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL3
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb803
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_EN_NEGRES   
 *     CTLE_EQSEL       
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r (0x0001b803 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL3.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl3[1];
	uint32_t _ana_lane_3_quad_d_ctrl3;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_CLR(r) (r).ana_lane_3_quad_d_ctrl3[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_SET(r,d) (r).ana_lane_3_quad_d_ctrl3[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_GET(r) (r).ana_lane_3_quad_d_ctrl3[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_CTLE_EQSELf_GET(r) ((((r).ana_lane_3_quad_d_ctrl3[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_CTLE_EQSELf_SET(r,f) (r).ana_lane_3_quad_d_ctrl3[0]=(((r).ana_lane_3_quad_d_ctrl3[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_GET(r) (((r).ana_lane_3_quad_d_ctrl3[0]) & 0x7f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_SET(r,f) (r).ana_lane_3_quad_d_ctrl3[0]=(((r).ana_lane_3_quad_d_ctrl3[0] & ~((uint32_t)0x7f)) | (((uint32_t)f) & 0x7f)) | (0x7f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL3.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL3r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r,_r._ana_lane_3_quad_d_ctrl3)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL3r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r,_r._ana_lane_3_quad_d_ctrl3)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL3r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r
#define ANA_LANE_3_QUAD_D_CTRL3r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_t ANA_LANE_3_QUAD_D_CTRL3r_t;
#define ANA_LANE_3_QUAD_D_CTRL3r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_CLR
#define ANA_LANE_3_QUAD_D_CTRL3r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_SET
#define ANA_LANE_3_QUAD_D_CTRL3r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_GET
#define ANA_LANE_3_QUAD_D_CTRL3r_CTLE_EQSELf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_CTLE_EQSELf_GET
#define ANA_LANE_3_QUAD_D_CTRL3r_CTLE_EQSELf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_CTLE_EQSELf_SET
#define ANA_LANE_3_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_GET
#define ANA_LANE_3_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r_CTLE_EN_NEGRESf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL3r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL3r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL3r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL3r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL3r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL3r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL3r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL4
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb804
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LZEN        
 *     RXTX_RESERVED_FOR_59_52 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r (0x0001b804 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL4.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl4[1];
	uint32_t _ana_lane_3_quad_d_ctrl4;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_CLR(r) (r).ana_lane_3_quad_d_ctrl4[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_SET(r,d) (r).ana_lane_3_quad_d_ctrl4[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_GET(r) (r).ana_lane_3_quad_d_ctrl4[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET(r) ((((r).ana_lane_3_quad_d_ctrl4[0]) >> 4) & 0xff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET(r,f) (r).ana_lane_3_quad_d_ctrl4[0]=(((r).ana_lane_3_quad_d_ctrl4[0] & ~((uint32_t)0xff << 4)) | ((((uint32_t)f) & 0xff) << 4)) | (255 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_CTLE_LZENf_GET(r) (((r).ana_lane_3_quad_d_ctrl4[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_CTLE_LZENf_SET(r,f) (r).ana_lane_3_quad_d_ctrl4[0]=(((r).ana_lane_3_quad_d_ctrl4[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL4.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL4r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r,_r._ana_lane_3_quad_d_ctrl4)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL4r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r,_r._ana_lane_3_quad_d_ctrl4)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL4r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r
#define ANA_LANE_3_QUAD_D_CTRL4r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_t ANA_LANE_3_QUAD_D_CTRL4r_t;
#define ANA_LANE_3_QUAD_D_CTRL4r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_CLR
#define ANA_LANE_3_QUAD_D_CTRL4r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_SET
#define ANA_LANE_3_QUAD_D_CTRL4r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_GET
#define ANA_LANE_3_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_GET
#define ANA_LANE_3_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_RXTX_RESERVED_FOR_59_52f_SET
#define ANA_LANE_3_QUAD_D_CTRL4r_CTLE_LZENf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_CTLE_LZENf_GET
#define ANA_LANE_3_QUAD_D_CTRL4r_CTLE_LZENf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r_CTLE_LZENf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL4r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL4r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL4r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL4r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL4r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL4r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL4r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL5
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb805
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_LOPEAKING   
 *     CTLE_PD          
 *     LA_GCTRL         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r (0x0001b805 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL5.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl5[1];
	uint32_t _ana_lane_3_quad_d_ctrl5;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_CLR(r) (r).ana_lane_3_quad_d_ctrl5[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_SET(r,d) (r).ana_lane_3_quad_d_ctrl5[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_GET(r) (r).ana_lane_3_quad_d_ctrl5[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_LA_GCTRLf_GET(r) ((((r).ana_lane_3_quad_d_ctrl5[0]) >> 4) & 0x3ff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_LA_GCTRLf_SET(r,f) (r).ana_lane_3_quad_d_ctrl5[0]=(((r).ana_lane_3_quad_d_ctrl5[0] & ~((uint32_t)0x3ff << 4)) | ((((uint32_t)f) & 0x3ff) << 4)) | (1023 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_CTLE_PDf_GET(r) ((((r).ana_lane_3_quad_d_ctrl5[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_CTLE_PDf_SET(r,f) (r).ana_lane_3_quad_d_ctrl5[0]=(((r).ana_lane_3_quad_d_ctrl5[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_GET(r) (((r).ana_lane_3_quad_d_ctrl5[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_SET(r,f) (r).ana_lane_3_quad_d_ctrl5[0]=(((r).ana_lane_3_quad_d_ctrl5[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL5.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL5r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r,_r._ana_lane_3_quad_d_ctrl5)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL5r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r,_r._ana_lane_3_quad_d_ctrl5)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL5r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r
#define ANA_LANE_3_QUAD_D_CTRL5r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_t ANA_LANE_3_QUAD_D_CTRL5r_t;
#define ANA_LANE_3_QUAD_D_CTRL5r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_CLR
#define ANA_LANE_3_QUAD_D_CTRL5r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_SET
#define ANA_LANE_3_QUAD_D_CTRL5r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_GET
#define ANA_LANE_3_QUAD_D_CTRL5r_LA_GCTRLf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_LA_GCTRLf_GET
#define ANA_LANE_3_QUAD_D_CTRL5r_LA_GCTRLf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_LA_GCTRLf_SET
#define ANA_LANE_3_QUAD_D_CTRL5r_CTLE_PDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_CTLE_PDf_GET
#define ANA_LANE_3_QUAD_D_CTRL5r_CTLE_PDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_CTLE_PDf_SET
#define ANA_LANE_3_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_GET
#define ANA_LANE_3_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r_CTLE_LOPEAKINGf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL5r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL5r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL5r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL5r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL5r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL5r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL5r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL6
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb806
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_DEGAIN        
 *     LA_DETUNE        
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r (0x0001b806 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL6.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl6[1];
	uint32_t _ana_lane_3_quad_d_ctrl6;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_CLR(r) (r).ana_lane_3_quad_d_ctrl6[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_SET(r,d) (r).ana_lane_3_quad_d_ctrl6[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_GET(r) (r).ana_lane_3_quad_d_ctrl6[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_LA_DETUNEf_GET(r) ((((r).ana_lane_3_quad_d_ctrl6[0]) >> 8) & 0xff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_LA_DETUNEf_SET(r,f) (r).ana_lane_3_quad_d_ctrl6[0]=(((r).ana_lane_3_quad_d_ctrl6[0] & ~((uint32_t)0xff << 8)) | ((((uint32_t)f) & 0xff) << 8)) | (255 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_LA_DEGAINf_GET(r) (((r).ana_lane_3_quad_d_ctrl6[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_LA_DEGAINf_SET(r,f) (r).ana_lane_3_quad_d_ctrl6[0]=(((r).ana_lane_3_quad_d_ctrl6[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL6.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL6r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r,_r._ana_lane_3_quad_d_ctrl6)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL6r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r,_r._ana_lane_3_quad_d_ctrl6)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL6r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r
#define ANA_LANE_3_QUAD_D_CTRL6r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_t ANA_LANE_3_QUAD_D_CTRL6r_t;
#define ANA_LANE_3_QUAD_D_CTRL6r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_CLR
#define ANA_LANE_3_QUAD_D_CTRL6r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_SET
#define ANA_LANE_3_QUAD_D_CTRL6r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_GET
#define ANA_LANE_3_QUAD_D_CTRL6r_LA_DETUNEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_LA_DETUNEf_GET
#define ANA_LANE_3_QUAD_D_CTRL6r_LA_DETUNEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_LA_DETUNEf_SET
#define ANA_LANE_3_QUAD_D_CTRL6r_LA_DEGAINf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_LA_DEGAINf_GET
#define ANA_LANE_3_QUAD_D_CTRL6r_LA_DEGAINf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r_LA_DEGAINf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL6r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL6r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL6r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL6r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL6r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL6r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL6r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL7
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb807
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_LIN_MODE      
 *     RX_BIAS_FB_PDN   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r (0x0001b807 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL7.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl7[1];
	uint32_t _ana_lane_3_quad_d_ctrl7;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_CLR(r) (r).ana_lane_3_quad_d_ctrl7[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_SET(r,d) (r).ana_lane_3_quad_d_ctrl7[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_GET(r) (r).ana_lane_3_quad_d_ctrl7[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_GET(r) ((((r).ana_lane_3_quad_d_ctrl7[0]) >> 8) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_SET(r,f) (r).ana_lane_3_quad_d_ctrl7[0]=(((r).ana_lane_3_quad_d_ctrl7[0] & ~((uint32_t)0x1 << 8)) | ((((uint32_t)f) & 0x1) << 8)) | (1 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_LA_LIN_MODEf_GET(r) (((r).ana_lane_3_quad_d_ctrl7[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_LA_LIN_MODEf_SET(r,f) (r).ana_lane_3_quad_d_ctrl7[0]=(((r).ana_lane_3_quad_d_ctrl7[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL7.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL7r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r,_r._ana_lane_3_quad_d_ctrl7)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL7r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r,_r._ana_lane_3_quad_d_ctrl7)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL7r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r
#define ANA_LANE_3_QUAD_D_CTRL7r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_t ANA_LANE_3_QUAD_D_CTRL7r_t;
#define ANA_LANE_3_QUAD_D_CTRL7r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_CLR
#define ANA_LANE_3_QUAD_D_CTRL7r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_SET
#define ANA_LANE_3_QUAD_D_CTRL7r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_GET
#define ANA_LANE_3_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_GET
#define ANA_LANE_3_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_RX_BIAS_FB_PDNf_SET
#define ANA_LANE_3_QUAD_D_CTRL7r_LA_LIN_MODEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_LA_LIN_MODEf_GET
#define ANA_LANE_3_QUAD_D_CTRL7r_LA_LIN_MODEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r_LA_LIN_MODEf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL7r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL7r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL7r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL7r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL7r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL7r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL7r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL8
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb808
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_PD            
 *     LA_PD_IDLE       
 *     RXTX_RESERVED_FOR_99_95 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r (0x0001b808 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL8.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl8[1];
	uint32_t _ana_lane_3_quad_d_ctrl8;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_CLR(r) (r).ana_lane_3_quad_d_ctrl8[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_SET(r,d) (r).ana_lane_3_quad_d_ctrl8[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_GET(r) (r).ana_lane_3_quad_d_ctrl8[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET(r) ((((r).ana_lane_3_quad_d_ctrl8[0]) >> 4) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET(r,f) (r).ana_lane_3_quad_d_ctrl8[0]=(((r).ana_lane_3_quad_d_ctrl8[0] & ~((uint32_t)0x1f << 4)) | ((((uint32_t)f) & 0x1f) << 4)) | (31 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_LA_PD_IDLEf_GET(r) ((((r).ana_lane_3_quad_d_ctrl8[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_LA_PD_IDLEf_SET(r,f) (r).ana_lane_3_quad_d_ctrl8[0]=(((r).ana_lane_3_quad_d_ctrl8[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_LA_PDf_GET(r) (((r).ana_lane_3_quad_d_ctrl8[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_LA_PDf_SET(r,f) (r).ana_lane_3_quad_d_ctrl8[0]=(((r).ana_lane_3_quad_d_ctrl8[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL8.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL8r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r,_r._ana_lane_3_quad_d_ctrl8)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL8r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r,_r._ana_lane_3_quad_d_ctrl8)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL8r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r
#define ANA_LANE_3_QUAD_D_CTRL8r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_t ANA_LANE_3_QUAD_D_CTRL8r_t;
#define ANA_LANE_3_QUAD_D_CTRL8r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_CLR
#define ANA_LANE_3_QUAD_D_CTRL8r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_SET
#define ANA_LANE_3_QUAD_D_CTRL8r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_GET
#define ANA_LANE_3_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_GET
#define ANA_LANE_3_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_RXTX_RESERVED_FOR_99_95f_SET
#define ANA_LANE_3_QUAD_D_CTRL8r_LA_PD_IDLEf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_LA_PD_IDLEf_GET
#define ANA_LANE_3_QUAD_D_CTRL8r_LA_PD_IDLEf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_LA_PD_IDLEf_SET
#define ANA_LANE_3_QUAD_D_CTRL8r_LA_PDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_LA_PDf_GET
#define ANA_LANE_3_QUAD_D_CTRL8r_LA_PDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r_LA_PDf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL8r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL8r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL8r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL8r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL8r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL8r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL8r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL9
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb809
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_POST1        
 *     DLINE_SWING_1    
 *     DLINE_SWING_2    
 *     DLINE_DELAY_CTRL 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r (0x0001b809 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL9.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl9[1];
	uint32_t _ana_lane_3_quad_d_ctrl9;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_CLR(r) (r).ana_lane_3_quad_d_ctrl9[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_SET(r,d) (r).ana_lane_3_quad_d_ctrl9[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_GET(r) (r).ana_lane_3_quad_d_ctrl9[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_GET(r) ((((r).ana_lane_3_quad_d_ctrl9[0]) >> 12) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_SET(r,f) (r).ana_lane_3_quad_d_ctrl9[0]=(((r).ana_lane_3_quad_d_ctrl9[0] & ~((uint32_t)0x7 << 12)) | ((((uint32_t)f) & 0x7) << 12)) | (7 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DLINE_SWING_2f_GET(r) ((((r).ana_lane_3_quad_d_ctrl9[0]) >> 8) & 0x3)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DLINE_SWING_2f_SET(r,f) (r).ana_lane_3_quad_d_ctrl9[0]=(((r).ana_lane_3_quad_d_ctrl9[0] & ~((uint32_t)0x3 << 8)) | ((((uint32_t)f) & 0x3) << 8)) | (3 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DLINE_SWING_1f_GET(r) ((((r).ana_lane_3_quad_d_ctrl9[0]) >> 4) & 0x3)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DLINE_SWING_1f_SET(r,f) (r).ana_lane_3_quad_d_ctrl9[0]=(((r).ana_lane_3_quad_d_ctrl9[0] & ~((uint32_t)0x3 << 4)) | ((((uint32_t)f) & 0x3) << 4)) | (3 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DRV_POST1f_GET(r) (((r).ana_lane_3_quad_d_ctrl9[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DRV_POST1f_SET(r,f) (r).ana_lane_3_quad_d_ctrl9[0]=(((r).ana_lane_3_quad_d_ctrl9[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL9.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL9r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r,_r._ana_lane_3_quad_d_ctrl9)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL9r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r,_r._ana_lane_3_quad_d_ctrl9)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL9r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r
#define ANA_LANE_3_QUAD_D_CTRL9r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_t ANA_LANE_3_QUAD_D_CTRL9r_t;
#define ANA_LANE_3_QUAD_D_CTRL9r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_CLR
#define ANA_LANE_3_QUAD_D_CTRL9r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_SET
#define ANA_LANE_3_QUAD_D_CTRL9r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_GET
#define ANA_LANE_3_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_GET
#define ANA_LANE_3_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DLINE_DELAY_CTRLf_SET
#define ANA_LANE_3_QUAD_D_CTRL9r_DLINE_SWING_2f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DLINE_SWING_2f_GET
#define ANA_LANE_3_QUAD_D_CTRL9r_DLINE_SWING_2f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DLINE_SWING_2f_SET
#define ANA_LANE_3_QUAD_D_CTRL9r_DLINE_SWING_1f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DLINE_SWING_1f_GET
#define ANA_LANE_3_QUAD_D_CTRL9r_DLINE_SWING_1f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DLINE_SWING_1f_SET
#define ANA_LANE_3_QUAD_D_CTRL9r_DRV_POST1f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DRV_POST1f_GET
#define ANA_LANE_3_QUAD_D_CTRL9r_DRV_POST1f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r_DRV_POST1f_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL9r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL9r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL9r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL9r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL9r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL9r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL9r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL10
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb80a
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     DRV_PWD          
 *     DLINE_PWD        
 *     DRV_VBSEL        
 *     DRV_MAIN         
 *     DRV_MAIN_PU      
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r (0x0001b80a | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL10.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl10[1];
	uint32_t _ana_lane_3_quad_d_ctrl10;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_CLR(r) (r).ana_lane_3_quad_d_ctrl10[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_SET(r,d) (r).ana_lane_3_quad_d_ctrl10[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_GET(r) (r).ana_lane_3_quad_d_ctrl10[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_MAIN_PUf_GET(r) ((((r).ana_lane_3_quad_d_ctrl10[0]) >> 12) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_MAIN_PUf_SET(r,f) (r).ana_lane_3_quad_d_ctrl10[0]=(((r).ana_lane_3_quad_d_ctrl10[0] & ~((uint32_t)0xf << 12)) | ((((uint32_t)f) & 0xf) << 12)) | (15 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_MAINf_GET(r) ((((r).ana_lane_3_quad_d_ctrl10[0]) >> 4) & 0x3f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_MAINf_SET(r,f) (r).ana_lane_3_quad_d_ctrl10[0]=(((r).ana_lane_3_quad_d_ctrl10[0] & ~((uint32_t)0x3f << 4)) | ((((uint32_t)f) & 0x3f) << 4)) | (63 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_VBSELf_GET(r) ((((r).ana_lane_3_quad_d_ctrl10[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_VBSELf_SET(r,f) (r).ana_lane_3_quad_d_ctrl10[0]=(((r).ana_lane_3_quad_d_ctrl10[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DLINE_PWDf_GET(r) ((((r).ana_lane_3_quad_d_ctrl10[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DLINE_PWDf_SET(r,f) (r).ana_lane_3_quad_d_ctrl10[0]=(((r).ana_lane_3_quad_d_ctrl10[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_PWDf_GET(r) (((r).ana_lane_3_quad_d_ctrl10[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_PWDf_SET(r,f) (r).ana_lane_3_quad_d_ctrl10[0]=(((r).ana_lane_3_quad_d_ctrl10[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL10.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL10r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r,_r._ana_lane_3_quad_d_ctrl10)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL10r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r,_r._ana_lane_3_quad_d_ctrl10)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL10r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r
#define ANA_LANE_3_QUAD_D_CTRL10r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_t ANA_LANE_3_QUAD_D_CTRL10r_t;
#define ANA_LANE_3_QUAD_D_CTRL10r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_CLR
#define ANA_LANE_3_QUAD_D_CTRL10r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_SET
#define ANA_LANE_3_QUAD_D_CTRL10r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_GET
#define ANA_LANE_3_QUAD_D_CTRL10r_DRV_MAIN_PUf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_MAIN_PUf_GET
#define ANA_LANE_3_QUAD_D_CTRL10r_DRV_MAIN_PUf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_MAIN_PUf_SET
#define ANA_LANE_3_QUAD_D_CTRL10r_DRV_MAINf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_MAINf_GET
#define ANA_LANE_3_QUAD_D_CTRL10r_DRV_MAINf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_MAINf_SET
#define ANA_LANE_3_QUAD_D_CTRL10r_DRV_VBSELf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_VBSELf_GET
#define ANA_LANE_3_QUAD_D_CTRL10r_DRV_VBSELf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_VBSELf_SET
#define ANA_LANE_3_QUAD_D_CTRL10r_DLINE_PWDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DLINE_PWDf_GET
#define ANA_LANE_3_QUAD_D_CTRL10r_DLINE_PWDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DLINE_PWDf_SET
#define ANA_LANE_3_QUAD_D_CTRL10r_DRV_PWDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_PWDf_GET
#define ANA_LANE_3_QUAD_D_CTRL10r_DRV_PWDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r_DRV_PWDf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL10r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL10r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL10r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL10r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL10r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL10r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL10r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL11
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb80b
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     RXTX_RESERVED_FOR_143_128 
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r (0x0001b80b | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL11.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl11[1];
	uint32_t _ana_lane_3_quad_d_ctrl11;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_CLR(r) (r).ana_lane_3_quad_d_ctrl11[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_SET(r,d) (r).ana_lane_3_quad_d_ctrl11[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_GET(r) (r).ana_lane_3_quad_d_ctrl11[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET(r) (((r).ana_lane_3_quad_d_ctrl11[0]) & 0xffff)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET(r,f) (r).ana_lane_3_quad_d_ctrl11[0]=(((r).ana_lane_3_quad_d_ctrl11[0] & ~((uint32_t)0xffff)) | (((uint32_t)f) & 0xffff)) | (0xffff << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL11.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL11r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r,_r._ana_lane_3_quad_d_ctrl11)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL11r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r,_r._ana_lane_3_quad_d_ctrl11)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL11r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r
#define ANA_LANE_3_QUAD_D_CTRL11r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_t ANA_LANE_3_QUAD_D_CTRL11r_t;
#define ANA_LANE_3_QUAD_D_CTRL11r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_CLR
#define ANA_LANE_3_QUAD_D_CTRL11r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_SET
#define ANA_LANE_3_QUAD_D_CTRL11r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_GET
#define ANA_LANE_3_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_GET
#define ANA_LANE_3_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r_RXTX_RESERVED_FOR_143_128f_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL11r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL11r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL11r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL11r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL11r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL11r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL11r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL12
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb80c
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LA_RESCAL_FRC_VAL 
 *     LA_RESCAL_FRC    
 *     DRV_RESCAL_FRC_VAL 
 *     DRV_RESCAL_FRC   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r (0x0001b80c | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL12.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl12[1];
	uint32_t _ana_lane_3_quad_d_ctrl12;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_CLR(r) (r).ana_lane_3_quad_d_ctrl12[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_SET(r,d) (r).ana_lane_3_quad_d_ctrl12[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_GET(r) (r).ana_lane_3_quad_d_ctrl12[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_GET(r) ((((r).ana_lane_3_quad_d_ctrl12[0]) >> 12) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_SET(r,f) (r).ana_lane_3_quad_d_ctrl12[0]=(((r).ana_lane_3_quad_d_ctrl12[0] & ~((uint32_t)0x1 << 12)) | ((((uint32_t)f) & 0x1) << 12)) | (1 << (16 + 12))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_GET(r) ((((r).ana_lane_3_quad_d_ctrl12[0]) >> 8) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_d_ctrl12[0]=(((r).ana_lane_3_quad_d_ctrl12[0] & ~((uint32_t)0xf << 8)) | ((((uint32_t)f) & 0xf) << 8)) | (15 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_LA_RESCAL_FRCf_GET(r) ((((r).ana_lane_3_quad_d_ctrl12[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_LA_RESCAL_FRCf_SET(r,f) (r).ana_lane_3_quad_d_ctrl12[0]=(((r).ana_lane_3_quad_d_ctrl12[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_3_quad_d_ctrl12[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_d_ctrl12[0]=(((r).ana_lane_3_quad_d_ctrl12[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL12.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL12r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r,_r._ana_lane_3_quad_d_ctrl12)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL12r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r,_r._ana_lane_3_quad_d_ctrl12)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL12r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r
#define ANA_LANE_3_QUAD_D_CTRL12r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_t ANA_LANE_3_QUAD_D_CTRL12r_t;
#define ANA_LANE_3_QUAD_D_CTRL12r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_CLR
#define ANA_LANE_3_QUAD_D_CTRL12r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_SET
#define ANA_LANE_3_QUAD_D_CTRL12r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_GET
#define ANA_LANE_3_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_GET
#define ANA_LANE_3_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_DRV_RESCAL_FRCf_SET
#define ANA_LANE_3_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_GET
#define ANA_LANE_3_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_DRV_RESCAL_FRC_VALf_SET
#define ANA_LANE_3_QUAD_D_CTRL12r_LA_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_LA_RESCAL_FRCf_GET
#define ANA_LANE_3_QUAD_D_CTRL12r_LA_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_LA_RESCAL_FRCf_SET
#define ANA_LANE_3_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_GET
#define ANA_LANE_3_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r_LA_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL12r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL12r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL12r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL12r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL12r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL12r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL12r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL13
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb80d
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     CTLE_RESCAL_FRC_VAL 
 *     CTLE_RESCAL_FRC  
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r (0x0001b80d | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL13.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl13[1];
	uint32_t _ana_lane_3_quad_d_ctrl13;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_CLR(r) (r).ana_lane_3_quad_d_ctrl13[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_SET(r,d) (r).ana_lane_3_quad_d_ctrl13[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_GET(r) (r).ana_lane_3_quad_d_ctrl13[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_GET(r) ((((r).ana_lane_3_quad_d_ctrl13[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_SET(r,f) (r).ana_lane_3_quad_d_ctrl13[0]=(((r).ana_lane_3_quad_d_ctrl13[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_GET(r) (((r).ana_lane_3_quad_d_ctrl13[0]) & 0xf)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_d_ctrl13[0]=(((r).ana_lane_3_quad_d_ctrl13[0] & ~((uint32_t)0xf)) | (((uint32_t)f) & 0xf)) | (0xf << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL13.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL13r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r,_r._ana_lane_3_quad_d_ctrl13)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL13r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r,_r._ana_lane_3_quad_d_ctrl13)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL13r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r
#define ANA_LANE_3_QUAD_D_CTRL13r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_t ANA_LANE_3_QUAD_D_CTRL13r_t;
#define ANA_LANE_3_QUAD_D_CTRL13r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_CLR
#define ANA_LANE_3_QUAD_D_CTRL13r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_SET
#define ANA_LANE_3_QUAD_D_CTRL13r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_GET
#define ANA_LANE_3_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_GET
#define ANA_LANE_3_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_CTLE_RESCAL_FRCf_SET
#define ANA_LANE_3_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_GET
#define ANA_LANE_3_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r_CTLE_RESCAL_FRC_VALf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL13r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL13r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL13r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL13r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL13r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL13r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL13r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL14
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb80e
 * DEVAD:    1
 * DESC:     control registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     TX_IDLE_FRC_VAL  
 *     TX_IDLE_FRC      
 *     RXSD_IDLE_OVRD   
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r (0x0001b80e | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL14.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl14[1];
	uint32_t _ana_lane_3_quad_d_ctrl14;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_CLR(r) (r).ana_lane_3_quad_d_ctrl14[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_SET(r,d) (r).ana_lane_3_quad_d_ctrl14[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_GET(r) (r).ana_lane_3_quad_d_ctrl14[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_GET(r) ((((r).ana_lane_3_quad_d_ctrl14[0]) >> 4) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_SET(r,f) (r).ana_lane_3_quad_d_ctrl14[0]=(((r).ana_lane_3_quad_d_ctrl14[0] & ~((uint32_t)0x1 << 4)) | ((((uint32_t)f) & 0x1) << 4)) | (1 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_TX_IDLE_FRCf_GET(r) ((((r).ana_lane_3_quad_d_ctrl14[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_TX_IDLE_FRCf_SET(r,f) (r).ana_lane_3_quad_d_ctrl14[0]=(((r).ana_lane_3_quad_d_ctrl14[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_GET(r) (((r).ana_lane_3_quad_d_ctrl14[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_d_ctrl14[0]=(((r).ana_lane_3_quad_d_ctrl14[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL14.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL14r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r,_r._ana_lane_3_quad_d_ctrl14)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL14r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r,_r._ana_lane_3_quad_d_ctrl14)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL14r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r
#define ANA_LANE_3_QUAD_D_CTRL14r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_t ANA_LANE_3_QUAD_D_CTRL14r_t;
#define ANA_LANE_3_QUAD_D_CTRL14r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_CLR
#define ANA_LANE_3_QUAD_D_CTRL14r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_SET
#define ANA_LANE_3_QUAD_D_CTRL14r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_GET
#define ANA_LANE_3_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_GET
#define ANA_LANE_3_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_RXSD_IDLE_OVRDf_SET
#define ANA_LANE_3_QUAD_D_CTRL14r_TX_IDLE_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_TX_IDLE_FRCf_GET
#define ANA_LANE_3_QUAD_D_CTRL14r_TX_IDLE_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_TX_IDLE_FRCf_SET
#define ANA_LANE_3_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_GET
#define ANA_LANE_3_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r_TX_IDLE_FRC_VALf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL14r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL14r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL14r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL14r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL14r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL14r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL14r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL15
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb80f
 * DEVAD:    1
 * DESC:     sigdet filter settings 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     SIGDET_DIS       
 *     SIGDET_1US_EN    
 *     SIGDET_FRC_VAL   
 *     SIGDET_FRC       
 *     HOLD_LOS_COUNT   
 *     HOLD_SD_COUNT    
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r (0x0001b80f | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL15.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl15[1];
	uint32_t _ana_lane_3_quad_d_ctrl15;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_CLR(r) (r).ana_lane_3_quad_d_ctrl15[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SET(r,d) (r).ana_lane_3_quad_d_ctrl15[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_GET(r) (r).ana_lane_3_quad_d_ctrl15[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_HOLD_SD_COUNTf_GET(r) ((((r).ana_lane_3_quad_d_ctrl15[0]) >> 8) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_HOLD_SD_COUNTf_SET(r,f) (r).ana_lane_3_quad_d_ctrl15[0]=(((r).ana_lane_3_quad_d_ctrl15[0] & ~((uint32_t)0x7 << 8)) | ((((uint32_t)f) & 0x7) << 8)) | (7 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_GET(r) ((((r).ana_lane_3_quad_d_ctrl15[0]) >> 4) & 0x7)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_SET(r,f) (r).ana_lane_3_quad_d_ctrl15[0]=(((r).ana_lane_3_quad_d_ctrl15[0] & ~((uint32_t)0x7 << 4)) | ((((uint32_t)f) & 0x7) << 4)) | (7 << (16 + 4))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_FRCf_GET(r) ((((r).ana_lane_3_quad_d_ctrl15[0]) >> 3) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_FRCf_SET(r,f) (r).ana_lane_3_quad_d_ctrl15[0]=(((r).ana_lane_3_quad_d_ctrl15[0] & ~((uint32_t)0x1 << 3)) | ((((uint32_t)f) & 0x1) << 3)) | (1 << (16 + 3))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_FRC_VALf_GET(r) ((((r).ana_lane_3_quad_d_ctrl15[0]) >> 2) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_FRC_VALf_SET(r,f) (r).ana_lane_3_quad_d_ctrl15[0]=(((r).ana_lane_3_quad_d_ctrl15[0] & ~((uint32_t)0x1 << 2)) | ((((uint32_t)f) & 0x1) << 2)) | (1 << (16 + 2))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_1US_ENf_GET(r) ((((r).ana_lane_3_quad_d_ctrl15[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_1US_ENf_SET(r,f) (r).ana_lane_3_quad_d_ctrl15[0]=(((r).ana_lane_3_quad_d_ctrl15[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_DISf_GET(r) (((r).ana_lane_3_quad_d_ctrl15[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_DISf_SET(r,f) (r).ana_lane_3_quad_d_ctrl15[0]=(((r).ana_lane_3_quad_d_ctrl15[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL15.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL15r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r,_r._ana_lane_3_quad_d_ctrl15)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL15r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r,_r._ana_lane_3_quad_d_ctrl15)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL15r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r
#define ANA_LANE_3_QUAD_D_CTRL15r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_t ANA_LANE_3_QUAD_D_CTRL15r_t;
#define ANA_LANE_3_QUAD_D_CTRL15r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_CLR
#define ANA_LANE_3_QUAD_D_CTRL15r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SET
#define ANA_LANE_3_QUAD_D_CTRL15r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_GET
#define ANA_LANE_3_QUAD_D_CTRL15r_HOLD_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_HOLD_SD_COUNTf_GET
#define ANA_LANE_3_QUAD_D_CTRL15r_HOLD_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_HOLD_SD_COUNTf_SET
#define ANA_LANE_3_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_GET
#define ANA_LANE_3_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_HOLD_LOS_COUNTf_SET
#define ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_FRCf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_FRCf_GET
#define ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_FRCf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_FRCf_SET
#define ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_FRC_VALf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_FRC_VALf_GET
#define ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_FRC_VALf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_FRC_VALf_SET
#define ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_1US_ENf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_1US_ENf_GET
#define ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_1US_ENf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_1US_ENf_SET
#define ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_DISf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_DISf_GET
#define ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_DISf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r_SIGDET_DISf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL15r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL15r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL15r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL15r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL15r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL15r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL15r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_CTRL16
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb810
 * DEVAD:    1
 * DESC:     sigdet filter settings 1
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     LOS_COUNT        
 *     SD_COUNT         
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r (0x0001b810 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_CTRL16.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_ctrl16[1];
	uint32_t _ana_lane_3_quad_d_ctrl16;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_CLR(r) (r).ana_lane_3_quad_d_ctrl16[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_SET(r,d) (r).ana_lane_3_quad_d_ctrl16[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_GET(r) (r).ana_lane_3_quad_d_ctrl16[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_SD_COUNTf_GET(r) ((((r).ana_lane_3_quad_d_ctrl16[0]) >> 8) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_SD_COUNTf_SET(r,f) (r).ana_lane_3_quad_d_ctrl16[0]=(((r).ana_lane_3_quad_d_ctrl16[0] & ~((uint32_t)0x1f << 8)) | ((((uint32_t)f) & 0x1f) << 8)) | (31 << (16 + 8))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_LOS_COUNTf_GET(r) (((r).ana_lane_3_quad_d_ctrl16[0]) & 0x1f)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_LOS_COUNTf_SET(r,f) (r).ana_lane_3_quad_d_ctrl16[0]=(((r).ana_lane_3_quad_d_ctrl16[0] & ~((uint32_t)0x1f)) | (((uint32_t)f) & 0x1f)) | (0x1f << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_CTRL16.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL16r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r,_r._ana_lane_3_quad_d_ctrl16)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL16r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r,_r._ana_lane_3_quad_d_ctrl16)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_CTRL16r BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r
#define ANA_LANE_3_QUAD_D_CTRL16r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_t ANA_LANE_3_QUAD_D_CTRL16r_t;
#define ANA_LANE_3_QUAD_D_CTRL16r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_CLR
#define ANA_LANE_3_QUAD_D_CTRL16r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_SET
#define ANA_LANE_3_QUAD_D_CTRL16r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_GET
#define ANA_LANE_3_QUAD_D_CTRL16r_SD_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_SD_COUNTf_GET
#define ANA_LANE_3_QUAD_D_CTRL16r_SD_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_SD_COUNTf_SET
#define ANA_LANE_3_QUAD_D_CTRL16r_LOS_COUNTf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_LOS_COUNTf_GET
#define ANA_LANE_3_QUAD_D_CTRL16r_LOS_COUNTf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r_LOS_COUNTf_SET
#define READ_ANA_LANE_3_QUAD_D_CTRL16r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_CTRL16r
#define WRITE_ANA_LANE_3_QUAD_D_CTRL16r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_CTRL16r
#define MODIFY_ANA_LANE_3_QUAD_D_CTRL16r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_CTRL16r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_CTRL16r'
 ******************************************************************************/




/*******************************************************************************
 * CHIP:  BCMI_HURACAN
 * REGISTER:  ANA_LANE_3_QUAD_D_STATUS0
 * BLOCKS:   ANA_LANE_3_QUAD_D
 * REGADDR:  0xb820
 * DEVAD:    1
 * DESC:     status registers 0
 * RESETVAL: 0x0 (0)
 * ACCESS:   R/W
 * FIELDS:
 *     O_RX_SIGDET      
 *     DG_RX_SIGDET     
 *
 ******************************************************************************/
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r (0x0001b820 | PHYMOD_REG_ACC_RAW)

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_SIZE 4

/*
 * This structure should be used to declare and program ANA_LANE_3_QUAD_D_STATUS0.
 *
 */
typedef union BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_s {
	uint32_t v[1];
	uint32_t ana_lane_3_quad_d_status0[1];
	uint32_t _ana_lane_3_quad_d_status0;
} BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_t;

#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_CLR(r) (r).ana_lane_3_quad_d_status0[0] = 0
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_SET(r,d) (r).ana_lane_3_quad_d_status0[0] = d
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_GET(r) (r).ana_lane_3_quad_d_status0[0]

/*
 * These macros can be used to access individual fields.
 *
 */
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_DG_RX_SIGDETf_GET(r) ((((r).ana_lane_3_quad_d_status0[0]) >> 1) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_DG_RX_SIGDETf_SET(r,f) (r).ana_lane_3_quad_d_status0[0]=(((r).ana_lane_3_quad_d_status0[0] & ~((uint32_t)0x1 << 1)) | ((((uint32_t)f) & 0x1) << 1)) | (1 << (16 + 1))
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_O_RX_SIGDETf_GET(r) (((r).ana_lane_3_quad_d_status0[0]) & 0x1)
#define BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_O_RX_SIGDETf_SET(r,f) (r).ana_lane_3_quad_d_status0[0]=(((r).ana_lane_3_quad_d_status0[0] & ~((uint32_t)0x1)) | (((uint32_t)f) & 0x1)) | (0x1 << 16)

/*
 * These macros can be used to access ANA_LANE_3_QUAD_D_STATUS0.
 *
 */
#define BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_STATUS0r(_pc,_r) PHYMOD_BUS_READ(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r,_r._ana_lane_3_quad_d_status0)
#define BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_STATUS0r(_pc,_r) PHYMOD_BUS_WRITE(_pc,BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r,_r._ana_lane_3_quad_d_status0)

/*
 * Unless PHYMOD_EXCLUDE_CHIPLESS_TYPES is defined, all of the above types
 * will be redefined without the chip prefix for easier programming.
 * If multiple chips will be programmed in the same source file, then you should
 * define PHYMOD_EXCLUDE_CHIPLESS_TYPES before including all chip header files
 * and refer to the fully qualified versions.
 *
 */
#ifndef PHYMOD_EXCLUDE_CHIPLESS_TYPES

#define ANA_LANE_3_QUAD_D_STATUS0r BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r
#define ANA_LANE_3_QUAD_D_STATUS0r_SIZE BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_SIZE
typedef BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_t ANA_LANE_3_QUAD_D_STATUS0r_t;
#define ANA_LANE_3_QUAD_D_STATUS0r_CLR BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_CLR
#define ANA_LANE_3_QUAD_D_STATUS0r_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_SET
#define ANA_LANE_3_QUAD_D_STATUS0r_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_GET
#define ANA_LANE_3_QUAD_D_STATUS0r_DG_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_DG_RX_SIGDETf_GET
#define ANA_LANE_3_QUAD_D_STATUS0r_DG_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_DG_RX_SIGDETf_SET
#define ANA_LANE_3_QUAD_D_STATUS0r_O_RX_SIGDETf_GET BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_O_RX_SIGDETf_GET
#define ANA_LANE_3_QUAD_D_STATUS0r_O_RX_SIGDETf_SET BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r_O_RX_SIGDETf_SET
#define READ_ANA_LANE_3_QUAD_D_STATUS0r BCMI_HURACAN_READ_ANA_LANE_3_QUAD_D_STATUS0r
#define WRITE_ANA_LANE_3_QUAD_D_STATUS0r BCMI_HURACAN_WRITE_ANA_LANE_3_QUAD_D_STATUS0r
#define MODIFY_ANA_LANE_3_QUAD_D_STATUS0r BCMI_HURACAN_MODIFY_ANA_LANE_3_QUAD_D_STATUS0r

#endif /* PHYMOD_EXCLUDE_CHIPLESS_TYPES */
/*******************************************************************************
 * End of 'BCMI_HURACAN_ANA_LANE_3_QUAD_D_STATUS0r'
 ******************************************************************************/




#endif /* __BCMI_HURACAN_DEFS_H__ */
