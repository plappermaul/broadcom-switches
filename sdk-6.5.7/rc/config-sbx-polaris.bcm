# $Id: config-sbx-polaris.bcm,v 1.32 Broadcom SDK $
# $Copyright: (c) 2016 Broadcom.
# Broadcom Proprietary and Confidential. All rights reserved.$
#
# Example configuration file for SBX systems.
# config-sbx-polaris.bcm
#

os=unix

# Maximum number of COSes
bcm_num_cos=8

# if fabric card - BCM988130, ie not ipass card, uncomment next line
# force_brdtype=5

# example setup for egress ptr fifo sizes on QE2000
#egress_mcast_ef_desc_sz=0
#egress_mcast_nef_desc_sz.port0=5
#egress_mcast_nef_desc_sz.port1=5
#egress_mcast_nef_desc_sz.port2=5
#egress_mcast_nef_desc_sz.port3=5

# By default,set this to match the number of cos levels
# If >1, logical port shaping is enabled in the qe
# otherwise, per flow shaping is enabled
qe_queues_per_ingress_shaper=8

# The maximum number of consecutive timeslots a QE can hold
# priority for transmitting packets which cross timeslots.
hold_pri_num_timeslots=1

# Maximum number of modules in the system (number of QEs)
num_modules=8

# Polaris 000 Board 57 and 22 are SCI0 links
#port_is_sci.port58.4=1
#port_is_sci.port23.4=1
# this is now added by sbx.soc
# this is valid only for old/initial rev of PL linecard

# Polaris 010 Board 27 and 24 are SCI0 links
#port_is_sci.port28.4=1 
#port_is_sci.port25.4=1
# this is now added by sbx.soc

#Polaris 010 node remap
#sci_port_modid.port25.4=10000
#sci_port_modid.port28.4=10001
# this is now added by sbx.soc

# By default, run in standalone mode
# When running in chassis, set this to 1
diag_chassis=0

# Logging can be pointed to a file:
#diag_log_file=/var/log/bcm.log


# These properties determine the number of SPI channels assigned to
# each bus in the QE.  The QE (fabric) ports are numbered contiguously
# across SPI 0 then SPI 1
qe_spi_0=14
qe_spi_1=14

# These properties configure the default high speed channels on each SPI
qe_spi_0_subport_speed.port13.0=10000
qe_spi_1_subport_speed.port13.0=10000

# Default microcode is G2P3
# Note that QE type needs to be set because RX reason codes are 
# microcode dependent
#
# bcm88020_ucode.0=g2p3
# bcm88020_ucode.1=g2p3

# Default microcode for BCM88025 is c2_g2p3
# bcm88025_ucode.0=c2_g2p3
# bcm88025_ucode.1=c2_g2p3

# QE Egress Route header format
# Used to select the QE EP microcode on QE2K device
# 0 : C2-QE2K native G2P3 (default)
# 1 : C2-Sirius header format
# 2 : C2-QE2K-Sirius interop header format
qe_erh_type=0

# BCM88025 only:
# Turns on and off IPv4 capabilities (uni and mc).
# 0 = V4 off
# 1 = V4 on (default)
#l3_enable=1
#
# turn optimize on to enable device memory
# (singleton) optimization on l3 compiler
#l3_optimize=1

# This property must be present for ucode_port properties to be used
# Otherwise, a default front panel to ucode to system port mapping is used
#ucode_num_ports.1=1

# The FE-2000 ucode port property values have the form:
#       fport:sysport
# Where ports are of the form:
#       gex.y      GbE ports, x=0,1, y=0-11
#       xex.y      XG/HG ports, x=0,1, y=0
#       spix.y     SPI-4.2 ports, x=0-1, y=0-63
#       pcix       CPU port, x=0
#
# The `fport' is the front-side port, and the `sysport' is the
# system-side port.
# Most system configurations use a QE-2000 CPU port,
# so the PCI port is typically not mapped to a microcode port.
#
# Note that an attached QE-2000 SPI port mapping must be
# `synchronized' with the FE-2000 SPI port mapping to ensure
# consistent SPI port calendars.  If SPI training fails, this
# is typically because the FE & QE have different calendar
# lengths.
#
# Here is an example configuration with 4 front-side ports
#
#qe_spi_0.0=4
#qe_spi_1.0=0
#ucode_num_ports.1=4
#ucode_port.port1.1=ge0.0:spi0.0
#ucode_port.port2.1=xe0.0:spi0.1
#ucode_port.port3.1=spi1.0:spi0.2
#ucode_port.port4.1=pci0:spi0.3

# To map a microcode port to HG port
#ucode_port.port5.1=hg0:spi0.13

# FE PCI does not deliver an ERH on receive
rx_parse_erh.1=0

# Set these to indicate the FE-2000 wide memory ports are
# connected to 2 x18 RAMs.  Otherwise they are assumed to
# connect to 1 x 36 RAM
# Broadcom MetroCore FE-2000 reference design uses 2 x18 RAMs
wide_sram0_x18=0
wide_sram1_x18=0

# Needed for sbx diags.
# FE2k reference design uses 4M parts but are only addressable to 2M
# np, 4Mx18 will look like 2Mx36 (FE reads 36 bits (2x18) in one cycle)
# wp, 2(4Mx18) will look like 2Mx72 (FE reads 72 (2x36) bits in one cycle)
wp_addr_width=20
wp_data_width=36
np0_data_width=18
np0_addr_width=21
np1_data_width=18
np1_addr_width=21

# To have both XEs as HiGig use
# remove this line or pbmp_xport_xe 0x0
pbmp_xport_xe=0x3000000

# This is needed only for 12G HiGig
#xgxs_lcpll_12gbps=1

#can control which units should come up
#diag_unit_mask=0x1f
#diag_disable_interrupts=0
#qe_tme_mode=0

# System (fabric) configuration
# 0 : BM32 + QE2K
# 1 : BM96 + Sirius
# 2 : BM96 + QE2K
# 3 : BM96 + QE2K + Sirius
fabric_configuration=2

bme_num_esets=128
diag_cosq_init=1
diag_serdes_mask=0x3ffff

# SFP+ modules (eng samples) require this
phy_pcs_tx_polarity_flip.1=1

# Swap the Xaui rx lanes to work with latest 8706 driver.
# This should not be required with rev B1 of PHY, but can not loop traffic back
# at IXIA without this. (Get coding and missing /E char errors).
phy_xaui_rx_lane_swap.1=1

# turn on OAM. Turns on PPE rules to detect incoming OAM packets.
oam_rx_enable=1 
# Turns on bubble timer to start generating bubbles.
oam_tx_enable=1

# serdes speed and encoding
# if not set, default speed and encoding are used
# For 6.5G use 6500, for 3.125G use 3125
# default encoding is 8B10B (TRUE); for 64B66B, use FALSE

# backplane_serdes_speed=0
# backplane_serdes_encoding=0

# needed for gsanity.soc
sbx=1

