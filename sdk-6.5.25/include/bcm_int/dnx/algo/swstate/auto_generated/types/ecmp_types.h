/** \file algo/swstate/auto_generated/types/ecmp_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2021 Broadcom Inc. All rights reserved.
 */

#ifndef __ECMP_TYPES_H__
#define __ECMP_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_l3.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_mdb.h>
#include <soc/dnxc/swstate/callbacks/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_linked_list.h>
/*
 * STRUCTs
 */

/**
 * A data structure that holds the information for an user-defined ECMP profile.
 */
typedef struct {
    /**
     * ECMP group mode
     */
    uint32 ecmp_mode;
    /**
     * Address to the consistent hashing member table
     */
    uint32 consistent_members_table_addr;
    /**
     * Tunnel priority mode
     */
    uint32 tunnel_priority_mode;
    /**
     * ECMP RPF mode
     */
    uint32 rpf_mode;
    /**
     * Hierachy ID
     */
    uint32 hierarchy;
    /**
     * number of references to this profile.
     */
    uint32 nof_references;
    uint8 chm_alloc_state;
    /**
     * Tunnel priority map profile
     */
    uint8 tunnel_priority_map_profile;
} l3_ecmp_user_profile_t;

/**
 * A structure that holds the ECMP SW information.
 */
typedef struct {
    /**
     * set of link lists that maps between an address in the member table to the pointing profiles, it size will be the NOF valid address in the members table.
     */
    sw_state_multihead_ll_t members_tbl_addr_profile_link_lists;
    /**
     * handle that is used to access the ECMP instance of the consistent hashing manager
     */
    uint32 consistent_hashing_manager_handle;
    /**
     * Access the ECMP group instance of the resource manager
     */
    dnx_algo_res_t ecmp_res_manager;
    /**
     * Access the extended ECMP group instance of the resource manager
     */
    dnx_algo_res_t ecmp_extended_res_manager;
    /**
     * Handles the user-defined ECMP profile IDs allocation.
     */
    dnx_algo_res_t ecmp_user_profile_res_mngr;
    /**
     * User-defined ECMP profile data
     */
    l3_ecmp_user_profile_t* ecmp_user_profile_data;
    /**
     * Two dimensional array that hold all the resource and their members, the first dimension is the resource number and the second dimension is the member in that resource
     */
    uint8** ecmp_fec_members_table;
    /**
     * the actual ECMP group size minus one which isn't always what is found in the HW fields
     */
    uint16** ecmp_group_size_minus_one;
} ecmp_sw_db_info_t;


#endif /* __ECMP_TYPES_H__ */
