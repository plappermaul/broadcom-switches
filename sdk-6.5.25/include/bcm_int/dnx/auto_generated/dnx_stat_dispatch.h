/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2021 Broadcom Inc. All rights reserved.
 *
 * File:        dnx_stat_dispatch.h
 * Purpose:     dnx stat driver BCM API dispatch table
 * Generator:   modules_dispatch.py
 */

#ifndef _BCM_INT_DNX_STAT_DISPATCH_H
#define _BCM_INT_DNX_STAT_DISPATCH_H

#include <bcm/types.h>
#include <bcm_int/dispatch.h>

#ifdef BCM_DNX_SUPPORT

extern int bcm_dnx_stat_multi_get32(int,bcm_port_t,int,bcm_stat_val_t *,uint32 *);
extern int bcm_dnx_stat_counter_lif_counting_get(int,uint32,bcm_stat_counter_source_t *,bcm_stat_counter_lif_mask_t *,bcm_stat_counter_lif_stack_id_t *);
extern int bcm_dnx_stat_counter_database_control_get(int,uint32,bcm_stat_counter_database_t *,bcm_stat_counter_database_control_t,uint32 *);
extern int bcm_dnx_stat_counter_config_set(int,bcm_stat_counter_engine_t *,bcm_stat_counter_config_t *);
extern int bcm_dnx_stat_multi_get(int,bcm_port_t,int,bcm_stat_val_t *,uint64 *);
extern int bcm_dnx_stat_database_eviction_boundaries_get(int,uint32,bcm_stat_counter_database_t *,int,bcm_stat_eviction_boundaries_t *);
extern int bcm_dnx_stat_counter_config_get(int,bcm_stat_counter_engine_t *,bcm_stat_counter_config_t *);
extern int bcm_dnx_stat_database_eviction_boundaries_set(int,uint32,bcm_stat_counter_database_t *,int,bcm_stat_eviction_boundaries_t *);
extern int bcm_dnx_stat_lif_counting_stack_level_priority_get(int,uint32,bcm_stat_lif_counting_source_t *,bcm_stat_counter_lif_stack_id_t,int *);
extern int bcm_dnx_stat_get32(int,bcm_port_t,bcm_stat_val_t,uint32 *);
extern int bcm_dnx_stat_counter_expansion_select_get(int,uint32,bcm_stat_counter_interface_key_t *,bcm_stat_expansion_select_t *);
extern int bcm_dnx_stat_counter_interface_get(int,uint32,bcm_stat_counter_database_t *,bcm_stat_counter_interface_t *);
extern int bcm_dnx_stat_counter_set_mapping_set(int,uint32,bcm_stat_counter_database_t *,bcm_stat_counter_set_map_t *);
extern int bcm_dnx_stat_lif_counting_stack_level_priority_set(int,uint32,bcm_stat_lif_counting_source_t *,bcm_stat_counter_lif_stack_id_t,int);
extern int bcm_dnx_stat_clear_single(int,bcm_port_t,bcm_stat_val_t);
extern int bcm_dnx_stat_get(int,bcm_port_t,bcm_stat_val_t,uint64 *);
extern int bcm_dnx_stat_pp_metadata_get(int,bcm_stat_pp_metadata_info_t *);
extern int bcm_dnx_stat_egress_receive_tm_pointer_format_get(int,int,bcm_stat_egress_receive_tm_pointer_format_t *);
extern int bcm_dnx_stat_stif_source_mapping_get(int,int,bcm_stat_stif_source_t,bcm_port_t *);
extern int bcm_dnx_stat_counter_filter_is_active_get(int,bcm_stat_counter_source_t,bcm_stat_counter_filter_t,int *);
extern int bcm_dnx_stat_lif_counting_profile_set(int,uint32,int,bcm_stat_lif_counting_t *);
extern int bcm_dnx_stat_stif_record_format_get(int,int,int,bcm_stat_stif_record_format_element_t *,int *);
extern int bcm_dnx_stat_counter_engine_attach(int,uint32,bcm_stat_counter_database_t *,int);
extern int bcm_dnx_stat_pp_profile_create(int,int,bcm_stat_counter_interface_type_t,int *,bcm_stat_pp_profile_info_t *);
extern int bcm_dnx_stat_counter_filter_group_get(int,uint32,bcm_stat_counter_command_id_key_t *,bcm_stat_counter_group_filter_t,int *);
extern int bcm_dnx_stat_pp_metadata_set(int,bcm_stat_pp_metadata_info_t *);
extern int bcm_dnx_stat_counter_database_create(int,uint32,bcm_core_t,int *);
extern int bcm_dnx_stat_counter_filter_group_set(int,uint32,bcm_stat_counter_command_id_key_t *,bcm_stat_counter_group_filter_t,int);
extern int bcm_dnx_stat_control_get(int,int,bcm_stat_control_t,int *);
extern int bcm_dnx_stat_egress_receive_tm_pointer_format_set(int,int,bcm_stat_egress_receive_tm_pointer_format_t *);
extern int bcm_dnx_stat_pkt_size_adjust_select_get(int,int,bcm_stat_counter_command_id_key_t *,bcm_stat_pkt_size_adjust_select_type_t,int *);
extern int bcm_dnx_stat_init(int);
extern int bcm_dnx_stat_counter_database_destroy(int,uint32,bcm_stat_counter_database_t *);
extern int bcm_dnx_stat_counter_filter_set(int,bcm_stat_counter_source_t,bcm_stat_counter_filter_t *,int,int);
extern int bcm_dnx_stat_lif_counting_profile_get(int,uint32,int,bcm_stat_lif_counting_t *);
extern int bcm_dnx_stat_counter_lif_counting_range_get(int,uint32,bcm_stat_counter_source_type_t,bcm_stat_counter_lif_range_id_t,bcm_stat_counter_lif_counting_range_t *);
extern int bcm_dnx_stat_counter_engine_detach(int,uint32,bcm_stat_counter_database_t *,int);
extern int bcm_dnx_stat_pp_profile_get(int,int,bcm_stat_pp_profile_info_t *);
extern int bcm_dnx_stat_eviction_boundaries_get(int,uint32,bcm_stat_engine_t *,bcm_stat_eviction_boundaries_t *);
extern int bcm_dnx_stat_group_drop_reasons_set(int,uint32,bcm_stat_counter_group_filter_t,bcm_cosq_drop_reason_t *,int);
extern int bcm_dnx_stat_counter_database_control_set(int,uint32,bcm_stat_counter_database_t *,bcm_stat_counter_database_control_t,uint32);
extern int bcm_dnx_stat_counter_lif_counting_range_set(int,uint32,bcm_stat_counter_source_type_t,bcm_stat_counter_lif_range_id_t,bcm_stat_counter_lif_counting_range_t *);
extern int bcm_dnx_stat_counter_expansion_select_set(int,uint32,bcm_stat_counter_interface_key_t *,bcm_stat_expansion_select_t *);
extern int bcm_dnx_stat_group_drop_reasons_get(int,uint32,bcm_stat_counter_group_filter_t,int,bcm_cosq_drop_reason_t *,int *);
extern int bcm_dnx_stat_counter_filter_get(int,bcm_stat_counter_source_t,int,bcm_stat_counter_filter_t *,int *);
extern int bcm_dnx_stat_latency_port_stat_id_get(int,int,bcm_stat_latency_port_stat_id_key_t *,int *);
extern int bcm_dnx_stat_counter_database_eviction_set(int,uint32,bcm_stat_counter_database_t *,bcm_stat_eviction_t *);
extern int bcm_dnx_stat_clear(int,bcm_port_t);
extern int bcm_dnx_stat_counter_get(int,uint32,bcm_stat_counter_input_data_t *,bcm_stat_counter_output_data_t *);
extern int bcm_dnx_stat_counter_database_eviction_get(int,uint32,bcm_stat_counter_database_t *,bcm_stat_eviction_t *);
extern int bcm_dnx_stat_stif_source_mapping_set(int,int,bcm_stat_stif_source_t,bcm_port_t);
extern int bcm_dnx_stat_pp_profile_delete(int,int);
extern int bcm_dnx_stat_counter_engine_control_get(int,uint32,bcm_stat_engine_t *,bcm_stat_counter_engine_control_t,uint32 *);
extern int bcm_dnx_stat_counter_engine_control_set(int,uint32,bcm_stat_engine_t *,bcm_stat_counter_engine_control_t,uint32);
extern int bcm_dnx_stat_counter_database_enable_get(int,uint32,bcm_stat_counter_database_t *,bcm_stat_counter_enable_t *);
extern int bcm_dnx_stat_sync(int);
extern int bcm_dnx_stat_counter_set_mapping_get(int,uint32,bcm_stat_counter_database_t *,bcm_stat_counter_set_map_t *);
extern int bcm_dnx_stat_counter_database_enable_set(int,uint32,bcm_stat_counter_database_t *,bcm_stat_counter_enable_t *);
extern int bcm_dnx_stat_counter_explicit_get(int,uint32,bcm_stat_counter_explicit_input_data_t *,bcm_stat_counter_output_data_t *);
extern int bcm_dnx_stat_counter_eviction_set(int,uint32,bcm_stat_engine_t *,bcm_stat_eviction_t *);
extern int bcm_dnx_stat_counter_lif_counting_set(int,uint32,bcm_stat_counter_source_t *,bcm_stat_counter_lif_mask_t *,bcm_stat_counter_lif_stack_id_t);
extern int bcm_dnx_stat_stif_record_format_set(int,int,int,bcm_stat_stif_record_format_element_t *);
extern int bcm_dnx_stat_control_set(int,int,bcm_stat_control_t,int);
extern int bcm_dnx_stat_counter_interface_set(int,uint32,bcm_stat_counter_database_t *,bcm_stat_counter_interface_t *);
extern int bcm_dnx_stat_eviction_boundaries_set(int,uint32,bcm_stat_engine_t *,bcm_stat_eviction_boundaries_t *);
extern int bcm_dnx_stat_pkt_size_adjust_select_set(int,int,bcm_stat_counter_command_id_key_t *,bcm_stat_pkt_size_adjust_select_type_t,int);
extern int bcm_dnx_stat_counter_eviction_get(int,uint32,bcm_stat_engine_t *,bcm_stat_eviction_t *);

#endif /* BCM_DNX_SUPPORT */
#endif /* !_BCM_INT_DNX_STAT_DISPATCH_H */
