/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2021 Broadcom Inc. All rights reserved.
 *
 * File:        dnx_stk_dispatch.h
 * Purpose:     dnx stk driver BCM API dispatch table
 * Generator:   modules_dispatch.py
 */

#ifndef _BCM_INT_DNX_STK_DISPATCH_H
#define _BCM_INT_DNX_STK_DISPATCH_H

#include <bcm/types.h>
#include <bcm_int/dispatch.h>

#ifdef BCM_DNX_SUPPORT

extern int bcm_dnx_stk_module_max_get(int,uint32,bcm_module_t *);
extern int bcm_dnx_stk_modid_domain_get(int,int,int,int *,int *);
extern int bcm_dnx_stk_modport_remote_map_set(int,bcm_gport_t,uint32,int,bcm_port_t);
extern int bcm_dnx_stk_domain_stk_trunk_get(int,bcm_trunk_t,int,int *,int *);
extern int bcm_dnx_stk_modid_domain_add(int,int,int);
extern int bcm_dnx_stk_modid_config_add(int,bcm_stk_modid_config_t *);
extern int bcm_dnx_stk_modid_get(int,int *);
extern int bcm_dnx_stk_system_gport_map_destroy(int,bcm_gport_t);
extern int bcm_dnx_stk_modid_config_get(int,bcm_stk_modid_config_t *);
extern int bcm_dnx_stk_system_gport_map_create(int,bcm_stk_system_gport_map_t *);
extern int bcm_dnx_stk_sysport_gport_set(int,bcm_gport_t,bcm_gport_t);
extern int bcm_dnx_stk_modid_config_get_all(int,int,bcm_stk_modid_config_t *,int *);
extern int bcm_dnx_stk_gport_sysport_get(int,bcm_gport_t,bcm_gport_t *);
extern int bcm_dnx_stk_my_modid_set(int,int);
extern int bcm_dnx_stk_my_modid_get(int,int *);
extern int bcm_dnx_stk_module_control_get(int,uint32,bcm_module_t,bcm_stk_module_control_t,int *);
extern int bcm_dnx_stk_modid_count(int,int *);
extern int bcm_dnx_stk_domain_stk_trunk_delete(int,int,bcm_trunk_t);
extern int bcm_dnx_stk_modid_domain_delete(int,int,int);
extern int bcm_dnx_stk_module_enable(int,bcm_module_t,int,int);
extern int bcm_dnx_stk_init(int);
extern int bcm_dnx_stk_domain_stk_trunk_add(int,int,bcm_trunk_t);
extern int bcm_dnx_stk_sysport_gport_get(int,bcm_gport_t,bcm_gport_t *);
extern int bcm_dnx_stk_system_gport_map_get(int,bcm_stk_system_gport_map_t *);
extern int bcm_dnx_stk_modid_config_set(int,bcm_stk_modid_config_t *);
extern int bcm_dnx_stk_modid_set(int,int);
extern int bcm_dnx_stk_modport_remote_map_get(int,bcm_gport_t,uint32,int *,bcm_port_t *);
extern int bcm_dnx_stk_module_control_set(int,uint32,bcm_module_t,bcm_stk_module_control_t,int);
extern int bcm_dnx_stk_module_max_set(int,uint32,bcm_module_t);

#endif /* BCM_DNX_SUPPORT */
#endif /* !_BCM_INT_DNX_STK_DISPATCH_H */
