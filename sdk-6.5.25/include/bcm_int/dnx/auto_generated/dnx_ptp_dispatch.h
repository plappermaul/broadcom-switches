/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2021 Broadcom Inc. All rights reserved.
 *
 * File:        dnx_ptp_dispatch.h
 * Purpose:     dnx ptp driver BCM API dispatch table
 * Generator:   modules_dispatch.py
 */

#ifndef _BCM_INT_DNX_PTP_DISPATCH_H
#define _BCM_INT_DNX_PTP_DISPATCH_H

#include <bcm/types.h>
#include <bcm_int/dispatch.h>

#ifdef BCM_DNX_SUPPORT

extern int bcm_dnx_ptp_time_format_set(int,bcm_ptp_stack_id_t,bcm_ptp_time_type_t);
extern int bcm_dnx_ptp_clock_port_log_min_delay_req_interval_set(int,bcm_ptp_stack_id_t,int,uint32,int);
extern int bcm_dnx_ptp_clock_port_log_min_pdelay_req_interval_get(int,bcm_ptp_stack_id_t,int,uint32,int *);
extern int bcm_dnx_ptp_tod_output_remove(int,bcm_ptp_stack_id_t,int,int);
extern int bcm_dnx_ptp_clock_port_protocol_get(int,bcm_ptp_stack_id_t,int,uint32,bcm_ptp_protocol_t *);
extern int bcm_dnx_ptp_ctdev_alarm_callback_unregister(int,bcm_ptp_stack_id_t,int);
extern int bcm_dnx_ptp_clock_apts_gps_offset_get(int,bcm_ptp_stack_id_t,int,int *);
extern int bcm_dnx_ptp_telecom_g8265_pktstats_thresholds_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_telecom_g8265_pktstats_t);
extern int bcm_dnx_ptp_clock_apts_source_enable_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_clock_apts_source_t,int);
extern int bcm_dnx_ptp_clock_traceability_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_trace_t *);
extern int bcm_dnx_ptp_clock_quality_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_clock_quality_t *,uint32);
extern int bcm_dnx_ptp_telecom_g8265_packet_master_lockout_set(int,bcm_ptp_stack_id_t,int,uint8,bcm_ptp_clock_port_address_t *);
extern int bcm_dnx_ptp_telecom_g8265_packet_master_non_reversion_set(int,bcm_ptp_stack_id_t,int,uint8,bcm_ptp_clock_port_address_t *);
extern int bcm_dnx_ptp_clock_timescale_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_timescale_t *);
extern int bcm_dnx_ptp_clock_time_properties_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_time_properties_t *);
extern int bcm_dnx_ptp_init(int);
extern int bcm_dnx_ptp_clock_port_configure(int,bcm_ptp_stack_id_t,int,uint32,bcm_ptp_clock_port_info_t *);
extern int bcm_dnx_ptp_clock_apts_mode_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_clock_apts_mode_t *);
extern int bcm_dnx_ptp_clock_max_steps_removed_set(int,bcm_ptp_stack_id_t,int,uint8);
extern int bcm_dnx_ptp_telecom_g8265_packet_master_wait_duration_set(int,bcm_ptp_stack_id_t,int,uint64,bcm_ptp_clock_port_address_t *);
extern int bcm_dnx_ptp_clock_quality_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_clock_quality_t,uint32);
extern int bcm_dnx_ptp_telecom_g8265_network_option_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_telecom_g8265_network_option_t);
extern int bcm_dnx_ptp_signaled_unicast_master_remove(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_clock_peer_address_t *);
extern int bcm_dnx_ptp_telecom_g8265_packet_master_priority_set(int,bcm_ptp_stack_id_t,int,uint16,bcm_ptp_clock_port_address_t *);
extern int bcm_dnx_ptp_stack_get_all(int,int,bcm_ptp_stack_info_t *,int *);
extern int bcm_dnx_ptp_acceptable_master_table_size_get(int,bcm_ptp_stack_id_t,int,int,int *);
extern int bcm_dnx_ptp_signal_output_get(int,bcm_ptp_stack_id_t,int,int *,bcm_ptp_signal_output_t *);
extern int bcm_dnx_ptp_clock_accuracy_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_clock_accuracy_t *);
extern int bcm_dnx_ptp_clock_port_dataset_get(int,bcm_ptp_stack_id_t,int,uint32,bcm_ptp_port_dataset_t *);
extern int bcm_dnx_ptp_clock_port_tlv_config_delete(int,bcm_ptp_stack_id_t,int,uint32,int);
extern int bcm_dnx_ptp_ctdev_verbose_get(int,bcm_ptp_stack_id_t,int,int *);
extern int bcm_dnx_ptp_clock_bmca_override_set(int,bcm_ptp_stack_id_t,int,uint32,uint32);
extern int bcm_dnx_ptp_modular_portbitmap_get(int,bcm_ptp_stack_id_t,int,bcm_pbmp_t *);
extern int bcm_dnx_ptp_clock_port_log_sync_interval_set(int,bcm_ptp_stack_id_t,int,uint32,int);
extern int bcm_dnx_ptp_static_unicast_master_add(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_clock_unicast_master_t *);
extern int bcm_dnx_ptp_modular_enable_set(int,bcm_ptp_stack_id_t,int,int,uint32);
extern int bcm_dnx_ptp_clock_port_drop_counters_enable_set(int,bcm_ptp_stack_id_t,int,uint32,int);
extern int bcm_dnx_ptp_signaled_unicast_slave_list(int,bcm_ptp_stack_id_t,int,int,int,int *,bcm_ptp_clock_peer_t *);
extern int bcm_dnx_ptp_input_channel_switching_mode_set(int,bcm_ptp_stack_id_t,int,int);
extern int bcm_dnx_ptp_clock_local_priority_get(int,bcm_ptp_stack_id_t,int,uint8 *);
extern int bcm_dnx_ptp_telecom_g8265_packet_master_remove(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_clock_port_address_t *);
extern int bcm_dnx_ptp_clock_peer_age_timer_get(int,bcm_ptp_stack_id_t,int,uint8 *);
extern int bcm_dnx_ptp_unicast_request_duration_min_set(int,bcm_ptp_stack_id_t,int,int,uint32);
extern int bcm_dnx_ptp_sync_phy(int,bcm_ptp_stack_id_t,int,bcm_ptp_sync_phy_input_t);
extern int bcm_dnx_ptp_modular_verbose_get(int,bcm_ptp_stack_id_t,int,int *);
extern int bcm_dnx_ptp_servo_status_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_servo_status_t *);
extern int bcm_dnx_ptp_clock_utc_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_utc_t *);
extern int bcm_dnx_ptp_clock_default_dataset_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_default_dataset_t *);
extern int bcm_dnx_ptp_clock_port_delay_mechanism_get(int,bcm_ptp_stack_id_t,int,uint32,uint32 *);
extern int bcm_dnx_ptp_static_unicast_master_table_size_get(int,bcm_ptp_stack_id_t,int,int,int *);
extern int bcm_dnx_ptp_clock_apts_gps_offset_set(int,bcm_ptp_stack_id_t,int,int);
extern int bcm_dnx_ptp_clock_current_dataset_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_current_dataset_t *);
extern int bcm_dnx_ptp_clock_time_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_timestamp_t *);
extern int bcm_dnx_ptp_clock_port_disable(int,bcm_ptp_stack_id_t,int,uint32);
extern int bcm_dnx_ptp_clock_port_tlv_config_add(int,bcm_ptp_stack_id_t,int,uint32,bcm_ptp_tlv_type_t,uint16,uint8 *,bcm_ptp_tlv_action_t,int);
extern int bcm_dnx_ptp_phase_offset_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_phase_offset_t *);
extern int bcm_dnx_ptp_telecom_g8265_pktstats_thresholds_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_telecom_g8265_pktstats_t *);
extern int bcm_dnx_ptp_transparent_clock_port_dataset_get(int,bcm_ptp_stack_id_t,int,uint16,bcm_ptp_transparent_clock_port_dataset_t *);
extern int bcm_dnx_ptp_telecom_g8265_packet_master_best_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_telecom_g8265_pktmaster_t *);
extern int bcm_dnx_ptp_signaling_arbiter_register(int,bcm_ptp_stack_id_t,int,bcm_ptp_signaling_arbiter_t,void *);
extern int bcm_dnx_ptp_packet_counters_clear(int,bcm_ptp_stack_id_t,int,int,uint32);
extern int bcm_dnx_ptp_peer_dataset_get(int,bcm_ptp_stack_id_t,int,int,int,bcm_ptp_peer_entry_t *,int *);
extern int bcm_dnx_ptp_primary_domain_get(int,bcm_ptp_stack_id_t,int,int *);
extern int bcm_dnx_ptp_telecom_g8265_packet_master_priority_override(int,bcm_ptp_stack_id_t,int,uint8,bcm_ptp_clock_port_address_t *);
extern int bcm_dnx_ptp_clock_accuracy_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_clock_accuracy_t *);
extern int bcm_dnx_ptp_clock_port_latency_get(int,bcm_ptp_stack_id_t,int,uint32,uint32 *,uint32 *);
extern int bcm_dnx_ptp_primary_domain_set(int,bcm_ptp_stack_id_t,int,int);
extern int bcm_dnx_ptp_clock_parent_dataset_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_parent_dataset_t *);
extern int bcm_dnx_ptp_telecom_g8265_packet_master_add(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_clock_port_address_t *);
extern int bcm_dnx_ptp_packet_counters_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_packet_counters_t *);
extern int bcm_dnx_ptp_detach(int);
extern int bcm_dnx_ptp_modular_portbitmap_set(int,bcm_ptp_stack_id_t,int,bcm_pbmp_t);
extern int bcm_dnx_ptp_static_unicast_slave_add(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_clock_peer_t *);
extern int bcm_dnx_ptp_clock_port_log_announce_interval_set(int,bcm_ptp_stack_id_t,int,uint32,int);
extern int bcm_dnx_ptp_bs_time_info_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_bs_time_info_t *);
extern int bcm_dnx_ptp_clock_apts_source_prio_get(int,bcm_ptp_stack_id_t,int,int *,bcm_ptp_clock_apts_source_t *);
extern int bcm_dnx_ptp_ctdev_alpha_set(int,bcm_ptp_stack_id_t,int,uint16,uint16);
extern int bcm_dnx_ptp_clock_priority1_set(int,bcm_ptp_stack_id_t,int,uint32);
extern int bcm_dnx_ptp_clock_bmca_override_get(int,bcm_ptp_stack_id_t,int,uint32 *,uint32 *);
extern int bcm_dnx_ptp_acceptable_master_enabled_get(int,bcm_ptp_stack_id_t,int,int,uint8 *);
extern int bcm_dnx_ptp_telecom_g8265_packet_master_list(int,bcm_ptp_stack_id_t,int,int,int *,int *,bcm_ptp_telecom_g8265_pktmaster_t *);
extern int bcm_dnx_ptp_clock_port_tlv_config_delete_all(int,bcm_ptp_stack_id_t,int,uint32);
extern int bcm_dnx_ptp_pkt_flags_override_get(int,bcm_ptp_stack_id_t,int,uint32 *,uint32 *);
extern int bcm_dnx_ptp_clock_priority2_get(int,bcm_ptp_stack_id_t,int,uint32 *);
extern int bcm_dnx_ptp_ctdev_alarm_callback_register(int,bcm_ptp_stack_id_t,int,bcm_ptp_ctdev_alarm_cb);
extern int bcm_dnx_ptp_clock_traceability_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_trace_t *);
extern int bcm_dnx_ptp_clock_timescale_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_timescale_t *);
extern int bcm_dnx_ptp_clock_utc_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_utc_t *);
extern int bcm_dnx_ptp_transparent_clock_default_dataset_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_transparent_clock_default_dataset_t *);
extern int bcm_dnx_ptp_clock_port_delay_asymmetry_get(int,bcm_ptp_stack_id_t,int,uint32,int *);
extern int bcm_dnx_ptp_clock_apts_enable_set(int,bcm_ptp_stack_id_t,int,int);
extern int bcm_dnx_ptp_telecom_g8265_packet_master_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_clock_port_address_t *,bcm_ptp_telecom_g8265_pktmaster_t *);
extern int bcm_dnx_ptp_clock_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_clock_info_t *);
extern int bcm_dnx_ptp_modular_verbose_set(int,bcm_ptp_stack_id_t,int,int);
extern int bcm_dnx_ptp_clock_priority2_set(int,bcm_ptp_stack_id_t,int,uint32);
extern int bcm_dnx_ptp_clock_apts_enable_get(int,bcm_ptp_stack_id_t,int,int *);
extern int bcm_dnx_ptp_tod_input_sources_get(int,bcm_ptp_stack_id_t,int,int *,bcm_ptp_tod_input_t *);
extern int bcm_dnx_ptp_clock_slaveonly_set(int,bcm_ptp_stack_id_t,int,uint32);
extern int bcm_dnx_ptp_static_unicast_master_table_clear(int,bcm_ptp_stack_id_t,int,int);
extern int bcm_dnx_ptp_servo_configuration_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_servo_config_t *);
extern int bcm_dnx_ptp_acceptable_master_table_clear(int,bcm_ptp_stack_id_t,int,int);
extern int bcm_dnx_ptp_stack_create(int,bcm_ptp_stack_info_t *);
extern int bcm_dnx_ptp_tod_output_set(int,bcm_ptp_stack_id_t,int,int *,bcm_ptp_tod_output_t *);
extern int bcm_dnx_ptp_clock_local_priority_set(int,bcm_ptp_stack_id_t,int,uint8);
extern int bcm_dnx_ptp_cb_unregister(int,bcm_ptp_cb_types_t,bcm_ptp_cb);
extern int bcm_dnx_ptp_ctdev_enable_get(int,bcm_ptp_stack_id_t,int,int *,uint32 *);
extern int bcm_dnx_ptp_clock_port_log_announce_interval_get(int,bcm_ptp_stack_id_t,int,uint32,int *);
extern int bcm_dnx_ptp_acceptable_master_enabled_set(int,bcm_ptp_stack_id_t,int,int,uint8);
extern int bcm_dnx_ptp_modular_phyts_set(int,bcm_ptp_stack_id_t,int,int,int);
extern int bcm_dnx_ptp_signal_output_set(int,bcm_ptp_stack_id_t,int,int *,bcm_ptp_signal_output_t *);
extern int bcm_dnx_ptp_clock_slaveonly_get(int,bcm_ptp_stack_id_t,int,uint32 *);
extern int bcm_dnx_ptp_input_channels_set(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_channel_t *);
extern int bcm_dnx_ptp_clock_create(int,bcm_ptp_stack_id_t,bcm_ptp_clock_info_t *);
extern int bcm_dnx_ptp_clock_domain_get(int,bcm_ptp_stack_id_t,int,uint32 *);
extern int bcm_dnx_ptp_clock_tlv_enable_get(int,bcm_ptp_stack_id_t,int,uint32,int,int *);
extern int bcm_dnx_ptp_unicast_request_duration_max_get(int,bcm_ptp_stack_id_t,int,int,uint32 *);
extern int bcm_dnx_ptp_unicast_request_duration_max_set(int,bcm_ptp_stack_id_t,int,int,uint32);
extern int bcm_dnx_ptp_clock_user_description_set(int,bcm_ptp_stack_id_t,int,uint8 *);
extern int bcm_dnx_ptp_clock_port_announce_receipt_timeout_get(int,bcm_ptp_stack_id_t,int,uint32,uint32 *);
extern int bcm_dnx_ptp_modular_enable_get(int,bcm_ptp_stack_id_t,int,int *,uint32 *);
extern int bcm_dnx_ptp_stack_get(int,bcm_ptp_stack_id_t,bcm_ptp_stack_info_t *);
extern int bcm_dnx_ptp_clock_port_log_sync_interval_get(int,bcm_ptp_stack_id_t,int,uint32,int *);
extern int bcm_dnx_ptp_tod_input_sources_set(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_tod_input_t *);
extern int bcm_dnx_ptp_acceptable_master_add(int,bcm_ptp_stack_id_t,int,int,int,bcm_ptp_clock_peer_address_t *);
extern int bcm_dnx_ptp_modular_phyts_get(int,bcm_ptp_stack_id_t,int,int *,int *);
extern int bcm_dnx_ptp_clock_port_enable(int,bcm_ptp_stack_id_t,int,uint32);
extern int bcm_dnx_ptp_clock_port_info_get(int,bcm_ptp_stack_id_t,int,uint32,bcm_ptp_clock_port_info_t *);
extern int bcm_dnx_ptp_clock_tlv_enable_set(int,bcm_ptp_stack_id_t,int,uint32,int,int);
extern int bcm_dnx_ptp_clock_port_delay_mechanism_set(int,bcm_ptp_stack_id_t,int,uint32,uint32);
extern int bcm_dnx_ptp_signal_output_remove(int,bcm_ptp_stack_id_t,int,int);
extern int bcm_dnx_ptp_telecom_g8265_receipt_timeout_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_message_type_t,uint32);
extern int bcm_dnx_ptp_clock_port_identity_get(int,bcm_ptp_stack_id_t,int,uint32,bcm_ptp_port_identity_t *);
extern int bcm_dnx_ptp_signaled_unicast_slave_table_clear(int,bcm_ptp_stack_id_t,int,int,int);
extern int bcm_dnx_ptp_clock_port_log_min_delay_req_interval_get(int,bcm_ptp_stack_id_t,int,uint32,int *);
extern int bcm_dnx_ptp_clock_port_log_min_pdelay_req_interval_set(int,bcm_ptp_stack_id_t,int,uint32,int);
extern int bcm_dnx_ptp_foreign_master_dataset_get(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_foreign_master_dataset_t *);
extern int bcm_dnx_ptp_timesource_input_status_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_timesource_status_t *);
extern int bcm_dnx_ptp_clock_domain_set(int,bcm_ptp_stack_id_t,int,uint32);
extern int bcm_dnx_ptp_static_unicast_master_remove(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_clock_peer_address_t *);
extern int bcm_dnx_ptp_clock_priority1_get(int,bcm_ptp_stack_id_t,int,uint32 *);
extern int bcm_dnx_ptp_telecom_g8265_network_option_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_telecom_g8265_network_option_t *);
extern int bcm_dnx_ptp_static_unicast_slave_remove(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_clock_peer_t *);
extern int bcm_dnx_ptp_acceptable_master_remove(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_clock_peer_address_t *);
extern int bcm_dnx_ptp_clock_port_type_get(int,bcm_ptp_stack_id_t,int,uint32,bcm_ptp_port_type_t *);
extern int bcm_dnx_ptp_signaled_unicast_master_add(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_clock_unicast_master_t *,uint32);
extern int bcm_dnx_ptp_servo_threshold_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_servo_threshold_t *);
extern int bcm_dnx_ptp_signaling_arbiter_unregister(int,bcm_ptp_stack_id_t,int);
extern int bcm_dnx_ptp_clock_port_version_number_get(int,bcm_ptp_stack_id_t,int,uint32,uint32 *);
extern int bcm_dnx_ptp_unicast_request_duration_set(int,bcm_ptp_stack_id_t,int,int,uint32);
extern int bcm_dnx_ptp_static_unicast_slave_list(int,bcm_ptp_stack_id_t,int,int,int,int *,bcm_ptp_clock_peer_t *);
extern int bcm_dnx_ptp_clock_peer_age_timer_set(int,bcm_ptp_stack_id_t,int,uint8);
extern int bcm_dnx_ptp_clock_port_delay_asymmetry_set(int,bcm_ptp_stack_id_t,int,uint32,int);
extern int bcm_dnx_ptp_clock_port_drop_counters_get(int,bcm_ptp_stack_id_t,int,uint32,bcm_ptp_clock_port_packet_drop_counters_t *);
extern int bcm_dnx_ptp_telecom_g8265_init(int,bcm_ptp_stack_id_t,int);
extern int bcm_dnx_ptp_acceptable_master_list(int,bcm_ptp_stack_id_t,int,int,int,int *,bcm_ptp_clock_peer_address_t *);
extern int bcm_dnx_ptp_clock_apts_source_enable_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_clock_apts_source_t,int *);
extern int bcm_dnx_ptp_static_unicast_master_list(int,bcm_ptp_stack_id_t,int,int,int,int *,bcm_ptp_clock_peer_address_t *);
extern int bcm_dnx_ptp_servo_configuration_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_servo_config_t *);
extern int bcm_dnx_ptp_clock_port_mac_get(int,bcm_ptp_stack_id_t,int,uint32,bcm_mac_t *);
extern int bcm_dnx_ptp_telecom_g8265_quality_level_set(int,bcm_ptp_stack_id_t,int,bcm_ptp_telecom_g8265_quality_level_t);
extern int bcm_dnx_ptp_phase_offset_set(int,bcm_ptp_stack_id_t,int,const bcm_ptp_phase_offset_t *);
extern int bcm_dnx_ptp_pkt_flags_override_set(int,bcm_ptp_stack_id_t,int,uint32,uint32);
extern int bcm_dnx_ptp_unicast_request_duration_get(int,bcm_ptp_stack_id_t,int,int,uint32 *);
extern int bcm_dnx_ptp_servo_threshold_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_servo_threshold_t *);
extern int bcm_dnx_ptp_tod_output_get(int,bcm_ptp_stack_id_t,int,int *,bcm_ptp_tod_output_t *);
extern int bcm_dnx_ptp_external_phy_synchronize(int,bcm_ptp_stack_id_t,int,bcm_ptp_external_phy_config_t *);
extern int bcm_dnx_ptp_telecom_g8265_receipt_timeout_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_message_type_t,uint32 *);
extern int bcm_dnx_ptp_stack_destroy(int,bcm_ptp_stack_id_t);
extern int bcm_dnx_ptp_ctdev_verbose_set(int,bcm_ptp_stack_id_t,int,int);
extern int bcm_dnx_ptp_clock_port_announce_receipt_timeout_set(int,bcm_ptp_stack_id_t,int,uint32,uint32);
extern int bcm_dnx_ptp_telecom_g8265_shutdown(int);
extern int bcm_dnx_ptp_clock_apts_source_prio_set(int,bcm_ptp_stack_id_t,int,int,bcm_ptp_clock_apts_source_t *);
extern int bcm_dnx_ptp_input_channel_precedence_mode_set(int,bcm_ptp_stack_id_t,int,int);
extern int bcm_dnx_ptp_input_channels_get(int,bcm_ptp_stack_id_t,int,int *,bcm_ptp_channel_t *);
extern int bcm_dnx_ptp_ctdev_enable_set(int,bcm_ptp_stack_id_t,int,int,uint32);
extern int bcm_dnx_ptp_ctdev_alpha_get(int,bcm_ptp_stack_id_t,int,uint16 *,uint16 *);
extern int bcm_dnx_ptp_cb_register(int,bcm_ptp_cb_types_t,bcm_ptp_cb,void *);
extern int bcm_dnx_ptp_servo_performance_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_servo_performance_t *);
extern int bcm_dnx_ptp_clock_port_latency_set(int,bcm_ptp_stack_id_t,int,uint32,uint32,uint32);
extern int bcm_dnx_ptp_unicast_request_duration_min_get(int,bcm_ptp_stack_id_t,int,int,uint32 *);
extern int bcm_dnx_ptp_clock_time_get(int,bcm_ptp_stack_id_t,int,bcm_ptp_timestamp_t *);
extern int bcm_dnx_ptp_static_unicast_slave_table_clear(int,bcm_ptp_stack_id_t,int,int);
extern int bcm_dnx_ptp_clock_max_steps_removed_get(int,bcm_ptp_stack_id_t,int,uint8 *);
extern int bcm_dnx_ptp_g8275p1_traceability_info_clock_class_map(int,bcm_ptp_stack_id_t,int,bcm_ptp_g8275p1_clock_traceability_info_t,uint8 *);

#endif /* BCM_DNX_SUPPORT */
#endif /* !_BCM_INT_DNX_PTP_DISPATCH_H */
