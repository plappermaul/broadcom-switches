/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2021 Broadcom Inc. All rights reserved.
 *
 * File:        dnx_ipmc_dispatch.h
 * Purpose:     dnx ipmc driver BCM API dispatch table
 * Generator:   modules_dispatch.py
 */

#ifndef _BCM_INT_DNX_IPMC_DISPATCH_H
#define _BCM_INT_DNX_IPMC_DISPATCH_H

#include <bcm/types.h>
#include <bcm_int/dispatch.h>

#ifdef BCM_DNX_SUPPORT

extern int bcm_dnx_ipmc_stat_multi_set(int,bcm_ipmc_addr_t *,int,bcm_ipmc_stat_t *,uint64 *);
extern int bcm_dnx_ipmc_config_find(int,bcm_ipmc_addr_t *);
extern int bcm_dnx_ipmc_stat_counter_sync_get(int,bcm_ipmc_addr_t *,bcm_ipmc_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_dnx_ipmc_find(int,bcm_ipmc_addr_t *);
extern int bcm_dnx_ipmc_range_delete(int,int);
extern int bcm_dnx_ipmc_stat_detach(int,bcm_ipmc_addr_t *);
extern int bcm_dnx_ipmc_stat_multi_set32(int,bcm_ipmc_addr_t *,int,bcm_ipmc_stat_t *,uint32 *);
extern int bcm_dnx_ipmc_stat_multi_get32(int,bcm_ipmc_addr_t *,int,bcm_ipmc_stat_t *,uint32 *);
extern int bcm_dnx_ipmc_range_delete_all(int);
extern int bcm_dnx_ipmc_stat_attach(int,bcm_ipmc_addr_t *,uint32);
extern int bcm_dnx_ipmc_range_get(int,int,bcm_ipmc_range_t *);
extern int bcm_dnx_ipmc_config_traverse(int,uint32,bcm_ipmc_config_traverse_cb,void *);
extern int bcm_dnx_ipmc_traverse(int,uint32,bcm_ipmc_traverse_cb,void *);
extern int bcm_dnx_ipmc_stat_id_get(int,bcm_ipmc_addr_t *,bcm_ipmc_stat_t,uint32 *);
extern int bcm_dnx_ipmc_stat_multi_get(int,bcm_ipmc_addr_t *,int,bcm_ipmc_stat_t *,uint64 *);
extern int bcm_dnx_ipmc_range_size_get(int,int *);
extern int bcm_dnx_ipmc_remove(int,bcm_ipmc_addr_t *);
extern int bcm_dnx_ipmc_config_add(int,bcm_ipmc_addr_t *);
extern int bcm_dnx_ipmc_config_remove(int,bcm_ipmc_addr_t *);
extern int bcm_dnx_ipmc_stat_counter_get(int,bcm_ipmc_addr_t *,bcm_ipmc_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_dnx_ipmc_stat_counter_set(int,bcm_ipmc_addr_t *,bcm_ipmc_stat_t,uint32,uint32 *,bcm_stat_value_t *);
extern int bcm_dnx_ipmc_remove_all(int);
extern int bcm_dnx_ipmc_add(int,bcm_ipmc_addr_t *);

#endif /* BCM_DNX_SUPPORT */
#endif /* !_BCM_INT_DNX_IPMC_DISPATCH_H */
