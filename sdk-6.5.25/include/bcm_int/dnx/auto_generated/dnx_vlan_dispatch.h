/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2021 Broadcom Inc. All rights reserved.
 *
 * File:        dnx_vlan_dispatch.h
 * Purpose:     dnx vlan driver BCM API dispatch table
 * Generator:   modules_dispatch.py
 */

#ifndef _BCM_INT_DNX_VLAN_DISPATCH_H
#define _BCM_INT_DNX_VLAN_DISPATCH_H

#include <bcm/types.h>
#include <bcm_int/dispatch.h>

#ifdef BCM_DNX_SUPPORT

extern int bcm_dnx_vlan_translate_action_range_delete(int,bcm_gport_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t);
extern int bcm_dnx_vlan_vector_flags_set(int,bcm_vlan_vector_t,uint32,uint32);
extern int bcm_dnx_vlan_mcast_flood_get(int,bcm_vlan_t,bcm_vlan_mcast_flood_t *);
extern int bcm_dnx_vlan_control_get(int,bcm_vlan_control_t,int *);
extern int bcm_dnx_vlan_port_find(int,bcm_vlan_port_t *);
extern int bcm_dnx_vlan_port_create(int,bcm_vlan_port_t *);
extern int bcm_dnx_vlan_translate_action_range_add(int,bcm_gport_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_action_set_t *);
extern int bcm_dnx_vlan_translate_action_id_destroy_all(int,uint32);
extern int bcm_dnx_vlan_stp_get(int,bcm_vlan_t,bcm_port_t,int *);
extern int bcm_dnx_vlan_list_destroy(int,bcm_vlan_data_t *,int);
extern int bcm_dnx_vlan_translate_action_id_get(int,uint32,int,bcm_vlan_action_set_t *);
extern int bcm_dnx_vlan_list_by_pbmp(int,bcm_pbmp_t,bcm_vlan_data_t **,int *);
extern int bcm_dnx_vlan_mcast_flood_set(int,bcm_vlan_t,bcm_vlan_mcast_flood_t);
extern int bcm_dnx_vlan_create(int,bcm_vlan_t);
extern int bcm_dnx_vlan_port_remove(int,bcm_vlan_t,bcm_pbmp_t);
extern int bcm_dnx_vlan_vector_stp_set(int,bcm_vlan_vector_t,bcm_port_t,int);
extern int bcm_dnx_vlan_translate_action_class_get(int,bcm_vlan_translate_action_class_t *);
extern int bcm_dnx_vlan_gport_delete_all(int,bcm_vlan_t);
extern int bcm_dnx_vlan_default_set(int,bcm_vlan_t);
extern int bcm_dnx_vlan_control_vlan_set(int,bcm_vlan_t,bcm_vlan_control_vlan_t);
extern int bcm_dnx_vlan_gport_info_get(int,bcm_vlan_gport_info_t *);
extern int bcm_dnx_vlan_stg_set(int,bcm_vlan_t,bcm_stg_t);
extern int bcm_dnx_vlan_stg_get(int,bcm_vlan_t,bcm_stg_t *);
extern int bcm_dnx_vlan_default_get(int,bcm_vlan_t *);
extern int bcm_dnx_vlan_list(int,bcm_vlan_data_t **,int *);
extern int bcm_dnx_vlan_control_vlan_get(int,bcm_vlan_t,bcm_vlan_control_vlan_t *);
extern int bcm_dnx_vlan_port_get(int,bcm_vlan_t,bcm_pbmp_t *,bcm_pbmp_t *);
extern int bcm_dnx_vlan_control_port_get(int,int,bcm_vlan_control_port_t,int *);
extern int bcm_dnx_vlan_port_traverse(int,bcm_vlan_port_traverse_info_t *,bcm_vlan_port_traverse_cb,void *);
extern int bcm_dnx_vlan_gport_get_all(int,bcm_vlan_t,int,bcm_gport_t *,int *,int *);
extern int bcm_dnx_vlan_port_add(int,bcm_vlan_t,bcm_pbmp_t,bcm_pbmp_t);
extern int bcm_dnx_vlan_destroy_all(int);
extern int bcm_dnx_vlan_stp_set(int,bcm_vlan_t,bcm_port_t,int);
extern int bcm_dnx_vlan_gport_get(int,bcm_vlan_t,bcm_gport_t,int *);
extern int bcm_dnx_vlan_port_translation_get(int,bcm_vlan_port_translation_t *);
extern int bcm_dnx_vlan_translate_action_range_get(int,bcm_gport_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_t,bcm_vlan_action_set_t *);
extern int bcm_dnx_vlan_control_port_set(int,int,bcm_vlan_control_port_t,int);
extern int bcm_dnx_vlan_translate_action_id_destroy(int,uint32,int);
extern int bcm_dnx_vlan_gport_delete(int,bcm_vlan_t,bcm_gport_t);
extern int bcm_dnx_vlan_translate_action_id_create(int,uint32,int *);
extern int bcm_dnx_vlan_port_destroy(int,bcm_gport_t);
extern int bcm_dnx_vlan_translate_action_id_set(int,uint32,int,bcm_vlan_action_set_t *);
extern int bcm_dnx_vlan_translate_action_range_delete_all(int);
extern int bcm_dnx_vlan_port_translation_set(int,bcm_vlan_port_translation_t *);
extern int bcm_dnx_vlan_control_set(int,bcm_vlan_control_t,int);
extern int bcm_dnx_vlan_destroy(int,bcm_vlan_t);
extern int bcm_dnx_vlan_gport_add(int,bcm_vlan_t,bcm_gport_t,int);
extern int bcm_dnx_vlan_translate_action_class_set(int,bcm_vlan_translate_action_class_t *);

#endif /* BCM_DNX_SUPPORT */
#endif /* !_BCM_INT_DNX_VLAN_DISPATCH_H */
