/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2021 Broadcom Inc. All rights reserved.
 *
 * File:        dnxf_port_dispatch.h
 * Purpose:     dnxf port driver BCM API dispatch table
 * Generator:   modules_dispatch.py
 */

#ifndef _BCM_INT_DNXF_PORT_DISPATCH_H
#define _BCM_INT_DNXF_PORT_DISPATCH_H

#include <bcm/types.h>
#include <bcm_int/dispatch.h>

#ifdef BCM_DNXF_SUPPORT

extern int bcm_dnxf_port_lane_to_serdes_map_get(int,int,int,bcm_port_lane_to_serdes_map_t *);
extern int bcm_dnxf_port_interface_get(int,bcm_port_t,bcm_port_if_t *);
extern int bcm_dnxf_port_phy_reset(int,bcm_port_t);
extern int bcm_dnxf_port_control_get(int,bcm_port_t,bcm_port_control_t,int *);
extern int bcm_dnxf_port_rate_egress_pps_get(int,bcm_port_t,uint32 *,uint32 *);
extern int bcm_dnxf_port_probe(int,bcm_pbmp_t,bcm_pbmp_t *);
extern int bcm_dnxf_port_stat_get(int,bcm_gport_t,bcm_port_stat_t,uint64 *);
extern int bcm_dnxf_port_stat_multi_get32(int,bcm_gport_t,int,bcm_port_stat_t *,uint32 *);
extern int bcm_dnxf_port_resource_multi_set(int,int,bcm_port_resource_t *);
extern int bcm_dnxf_port_init(int);
extern int bcm_dnxf_port_loopback_set(int,bcm_port_t,int);
extern int bcm_dnxf_port_speed_set(int,bcm_port_t,int);
extern int bcm_dnxf_port_control_set(int,bcm_port_t,bcm_port_control_t,int);
extern int bcm_dnxf_port_update(int,bcm_port_t,int);
extern int bcm_dnxf_port_info_set(int,bcm_port_t,bcm_port_info_t *);
extern int bcm_dnxf_port_selective_set(int,bcm_port_t,bcm_port_info_t *);
extern int bcm_dnxf_port_enable_get(int,bcm_port_t,int *);
extern int bcm_dnxf_port_resource_speed_get(int,bcm_gport_t,bcm_port_resource_t *);
extern int bcm_dnxf_port_linkscan_set(int,bcm_port_t,int);
extern int bcm_dnxf_port_phy_get(int,bcm_port_t,uint32,uint32,uint32 *);
extern int bcm_dnxf_port_phy_modify(int,bcm_port_t,uint32,uint32,uint32,uint32);
extern int bcm_dnxf_port_resource_set(int,bcm_gport_t,bcm_port_resource_t *);
extern int bcm_dnxf_port_speed_max(int,bcm_port_t,int *);
extern int bcm_dnxf_port_enable_set(int,bcm_port_t,int);
extern int bcm_dnxf_port_resource_speed_multi_set(int,int,bcm_port_resource_t *);
extern int bcm_dnxf_port_rate_egress_pps_set(int,bcm_port_t,uint32,uint32);
extern int bcm_dnxf_port_resource_default_get(int,bcm_gport_t,uint32,bcm_port_resource_t *);
extern int bcm_dnxf_port_loopback_get(int,bcm_port_t,int *);
extern int bcm_dnxf_port_stat_get32(int,bcm_gport_t,bcm_port_stat_t,uint32 *);
extern int bcm_dnxf_port_info_get(int,bcm_port_t,bcm_port_info_t *);
extern int bcm_dnxf_port_selective_get(int,bcm_port_t,bcm_port_info_t *);
extern int bcm_dnxf_port_link_status_get(int,bcm_port_t,int *);
extern int bcm_dnxf_port_phy_tx_get(int,bcm_port_t,bcm_port_phy_tx_t *);
extern int bcm_dnxf_port_phy_control_get(int,bcm_port_t,bcm_port_phy_control_t,uint32 *);
extern int bcm_dnxf_port_resource_get(int,bcm_gport_t,bcm_port_resource_t *);
extern int bcm_dnxf_port_phy_set(int,bcm_port_t,uint32,uint32,uint32);
extern int bcm_dnxf_port_lane_to_serdes_map_set(int,int,int,bcm_port_lane_to_serdes_map_t *);
extern int bcm_dnxf_port_interface_set(int,bcm_port_t,bcm_port_if_t);
extern int bcm_dnxf_port_config_get(int,bcm_port_config_t *);
extern int bcm_dnxf_port_stat_multi_get(int,bcm_gport_t,int,bcm_port_stat_t *,uint64 *);
extern int bcm_dnxf_port_info_save(int,bcm_port_t,bcm_port_info_t *);
extern int bcm_dnxf_port_detach(int,bcm_pbmp_t,bcm_pbmp_t *);
extern int bcm_dnxf_port_linkscan_get(int,bcm_port_t,int *);
extern int bcm_dnxf_port_phy_tx_set(int,bcm_port_t,bcm_port_phy_tx_t *);
extern int bcm_dnxf_port_post_ber_proj_get(int,bcm_port_t,bcm_port_ber_proj_params_t *,int,bcm_port_ber_proj_analyzer_errcnt_t *,int *);
extern int bcm_dnxf_port_info_restore(int,bcm_port_t,bcm_port_info_t *);
extern int bcm_dnxf_port_speed_get(int,bcm_port_t,int *);
extern int bcm_dnxf_port_phy_control_set(int,bcm_port_t,bcm_port_phy_control_t,uint32);
extern int bcm_dnxf_port_fault_get(int,bcm_port_t,uint32 *);
extern int bcm_dnxf_port_phy_reset_register(int,bcm_port_t,bcm_port_phy_reset_cb_t,void *);
extern int bcm_dnxf_port_resource_speed_set(int,bcm_gport_t,bcm_port_resource_t *);
extern int bcm_dnxf_port_phy_reset_unregister(int,bcm_port_t,bcm_port_phy_reset_cb_t,void *);

#endif /* BCM_DNXF_SUPPORT */
#endif /* !_BCM_INT_DNXF_PORT_DISPATCH_H */
