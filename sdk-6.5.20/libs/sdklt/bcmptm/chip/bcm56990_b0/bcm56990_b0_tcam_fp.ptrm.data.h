/*******************************************************************************
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated by c-struct-gen from PTRM data files.
 *
 * Tool: $SDK/INTERNAL/fltg/bin/c-struct-gen
 *
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

static const bcmdrd_sid_t th4_b0_fp_egr_entry_tcam_data_only_sid[4][2];
static const bcmdrd_sid_t th4_b0_fp_egr_entry_tcam_sid[4][2];
static const bcmdrd_sid_t th4_b0_fp_em_presel_entry_shared_lt_array[1];
static const bcmdrd_sid_t th4_b0_fp_em_presel_entry_tcam_data_only_sid[1][2];
static const bcmdrd_sid_t th4_b0_fp_em_presel_entry_tcam_sid[1][2];
static const bcmdrd_sid_t th4_b0_fp_ing_entry_shared_lt_array[1];
static const bcmdrd_sid_t th4_b0_fp_ing_entry_tcam_data_only_sid[9][3];
static const bcmdrd_sid_t th4_b0_fp_ing_entry_tcam_sid[9][3];
static const bcmdrd_sid_t th4_b0_fp_ing_presel_entry_main_lt_array[1];
static const bcmdrd_sid_t th4_b0_fp_ing_presel_entry_tcam_data_only_sid[1][3];
static const bcmdrd_sid_t th4_b0_fp_ing_presel_entry_tcam_sid[1][3];
static const bcmdrd_sid_t th4_b0_fp_vlan_entry_tcam_data_only_sid[4][4];
static const bcmdrd_sid_t th4_b0_fp_vlan_entry_tcam_sid[4][4];
static const bcmdrd_sid_t * th4_b0_fp_egr_entry_tcam_data_only_sid_array[4];
static const bcmdrd_sid_t * th4_b0_fp_egr_entry_tcam_sid_array[4];
static const bcmdrd_sid_t * th4_b0_fp_em_presel_entry_tcam_data_only_sid_array[1];
static const bcmdrd_sid_t * th4_b0_fp_em_presel_entry_tcam_sid_array[1];
static const bcmdrd_sid_t * th4_b0_fp_ing_entry_tcam_data_only_sid_array[9];
static const bcmdrd_sid_t * th4_b0_fp_ing_entry_tcam_sid_array[9];
static const bcmdrd_sid_t * th4_b0_fp_ing_presel_entry_tcam_data_only_sid_array[1];
static const bcmdrd_sid_t * th4_b0_fp_ing_presel_entry_tcam_sid_array[1];
static const bcmdrd_sid_t * th4_b0_fp_vlan_entry_tcam_data_only_sid_array[4];
static const bcmdrd_sid_t * th4_b0_fp_vlan_entry_tcam_sid_array[4];
static const bcmptm_rm_tcam_hw_entry_info_t th4_b0_fp_egr_entry_tcam_hw_entry_info_array[6];
static const bcmptm_rm_tcam_hw_entry_info_t th4_b0_fp_em_presel_entry_tcam_hw_entry_info[6];
static const bcmptm_rm_tcam_hw_entry_info_t th4_b0_fp_ing_entry_tcam_hw_entry_info_array[6];
static const bcmptm_rm_tcam_hw_entry_info_t th4_b0_fp_ing_presel_entry_tcam_hw_entry_info[6];
static const bcmptm_rm_tcam_hw_entry_info_t th4_b0_fp_vlan_entry_tcam_hw_entry_info_array[6];
static const bcmptm_rm_tcam_more_info_t th4_b0_fp_egr_entry_tcam_rm_more_info[1];
static const bcmptm_rm_tcam_more_info_t th4_b0_fp_em_presel_entry_tcam_rm_more_info[1];
static const bcmptm_rm_tcam_more_info_t th4_b0_fp_ing_entry_tcam_rm_more_info[1];
static const bcmptm_rm_tcam_more_info_t th4_b0_fp_ing_presel_entry_tcam_rm_more_info[1];
static const bcmptm_rm_tcam_more_info_t th4_b0_fp_vlan_entry_tcam_rm_more_info[1];
static const bcmptm_rm_tcam_slice_info_t th4_b0_fp_egr_entry_tcam_slice_info_array[4];
static const bcmptm_rm_tcam_slice_info_t th4_b0_fp_em_presel_entry_tcam_slice_info_array[2];
static const bcmptm_rm_tcam_slice_info_t th4_b0_fp_ing_entry_tcam_slice_info_array[9];
static const bcmptm_rm_tcam_slice_info_t th4_b0_fp_ing_presel_entry_tcam_slice_info_array[9];
static const bcmptm_rm_tcam_slice_info_t th4_b0_fp_vlan_entry_tcam_slice_info_array[4];
static const lt_mreq_info_t th4_b0_fp_egr_entry_lt_mreq_info;
static const lt_mreq_info_t th4_b0_fp_em_presel_entry_lt_mreq_info;
static const lt_mreq_info_t th4_b0_fp_ing_entry_lt_mreq_info;
static const lt_mreq_info_t th4_b0_fp_ing_presel_entry_lt_mreq_info;
static const lt_mreq_info_t th4_b0_fp_vlan_entry_lt_mreq_info;
static const uint16_t th4_b0_fp_egr_entry_tcam_data_end_bit_array[2];
static const uint16_t th4_b0_fp_em_presel_entry_data_end_bit_array[2];
static const uint16_t th4_b0_fp_ing_entry_tcam_data_end_bit_array[3];
static const uint16_t th4_b0_fp_ing_presel_data_end_bit[3];
static const uint16_t th4_b0_fp_vlan_entry_tcam_data_end_bit_array[4];
static const uint32_t th4_b0_fp_egr_entry_count[4][12];
static const uint32_t th4_b0_fp_egr_group_count[4];
static const uint32_t th4_b0_fp_em_group_count[2];
static const uint32_t th4_b0_fp_em_presel_entry_count[2][2];
static const uint32_t th4_b0_fp_em_presel_presel_count[2][2];
static const uint32_t th4_b0_fp_ing_entry_count[4][9];
static const uint32_t th4_b0_fp_ing_group_count[4];
static const uint32_t th4_b0_fp_ing_presel_count[4][9];
static const uint32_t th4_b0_fp_ing_presel_entry_count[4][9];
static const uint32_t th4_b0_fp_ing_presel_group_count[8];
static const uint32_t th4_b0_fp_ing_presel_presel_count[4][9];
static const uint32_t th4_b0_fp_vlan_entry_count[8][12];
static const uint32_t th4_b0_fp_vlan_group_count[8];
static const uint32_t * th4_b0_fp_egr_entry_count_array[4];
static const uint32_t * th4_b0_fp_em_presel_entry_count_array[2];
static const uint32_t * th4_b0_fp_em_presel_presel_count_array[2];
static const uint32_t * th4_b0_fp_ing_entry_count_array[4];
static const uint32_t * th4_b0_fp_ing_presel_count_array[4];
static const uint32_t * th4_b0_fp_ing_presel_entry_count_array[4];
static const uint32_t * th4_b0_fp_ing_presel_presel_count_array[4];
static const uint32_t * th4_b0_fp_vlan_entry_count_array[8];
static const uint8_t th4_b0_fp_egr_slice_count[4];
static const uint8_t th4_b0_fp_em_slice_count[2];
static const uint8_t th4_b0_fp_ing_presel_slice_count[8];
static const uint8_t th4_b0_fp_ing_slice_count[4];
static const uint8_t th4_b0_fp_vlan_slice_count[8];

static const bcmdrd_sid_t th4_b0_fp_egr_entry_tcam_data_only_sid[4][2] = {
    {
    EFP_POLICY_TABLEm,
    EFP_POLICY_TABLEm,
    },
    {
    EFP_POLICY_TABLEm,
    EFP_POLICY_TABLEm,
    },
    {
    EFP_POLICY_TABLEm,
    EFP_POLICY_TABLEm,
    },
    {
    EFP_POLICY_TABLEm,
    EFP_POLICY_TABLEm,
    },
};
static const bcmdrd_sid_t th4_b0_fp_egr_entry_tcam_sid[4][2] = {
    {
    EFP_TCAMm,
    EFP_TCAMm,
    },
    {
    EFP_TCAMm,
    EFP_TCAMm,
    },
    {
    EFP_TCAMm,
    EFP_TCAMm,
    },
    {
    EFP_TCAMm,
    EFP_TCAMm,
    },
};
static const bcmdrd_sid_t th4_b0_fp_em_presel_entry_shared_lt_array[1] = {
    FP_ING_ENTRYt,
};
static const bcmdrd_sid_t th4_b0_fp_em_presel_entry_tcam_data_only_sid[1][2] = {
    {
    EXACT_MATCH_LOGICAL_TABLE_SELECT_DATA_ONLYm,
    EXACT_MATCH_LOGICAL_TABLE_SELECT_DATA_ONLYm,
    },
};
static const bcmdrd_sid_t th4_b0_fp_em_presel_entry_tcam_sid[1][2] = {
    {
    EXACT_MATCH_LOGICAL_TABLE_SELECTm,
    EXACT_MATCH_LOGICAL_TABLE_SELECTm,
    },
};
static const bcmdrd_sid_t th4_b0_fp_ing_entry_shared_lt_array[1] = {
    FP_ING_PRESEL_ENTRY_TEMPLATEt,
};
static const bcmdrd_sid_t th4_b0_fp_ing_entry_tcam_data_only_sid[9][3] = {
    {
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    },
    {
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    },
    {
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    },
    {
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    },
    {
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    },
    {
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    },
    {
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    },
    {
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    },
    {
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    IFP_POLICY_TABLEm,
    },
};
static const bcmdrd_sid_t th4_b0_fp_ing_entry_tcam_sid[9][3] = {
    {
    IFP_TCAMm,
    IFP_TCAMm,
    IFP_TCAMm,
    },
    {
    IFP_TCAMm,
    IFP_TCAMm,
    IFP_TCAMm,
    },
    {
    IFP_TCAMm,
    IFP_TCAMm,
    IFP_TCAMm,
    },
    {
    IFP_TCAMm,
    IFP_TCAMm,
    IFP_TCAMm,
    },
    {
    IFP_TCAMm,
    IFP_TCAMm,
    IFP_TCAMm,
    },
    {
    IFP_TCAMm,
    IFP_TCAMm,
    IFP_TCAMm,
    },
    {
    IFP_TCAMm,
    IFP_TCAMm,
    IFP_TCAMm,
    },
    {
    IFP_TCAMm,
    IFP_TCAMm,
    IFP_TCAMm,
    },
    {
    IFP_TCAMm,
    IFP_TCAMm,
    IFP_TCAMm,
    },
};
static const bcmdrd_sid_t th4_b0_fp_ing_presel_entry_main_lt_array[1] = {
    FP_ING_ENTRYt,
};
static const bcmdrd_sid_t th4_b0_fp_ing_presel_entry_tcam_data_only_sid[1][3] = {
    {
    IFP_LOGICAL_TABLE_SELECT_DATA_ONLYm,
    IFP_LOGICAL_TABLE_SELECT_DATA_ONLYm,
    IFP_LOGICAL_TABLE_SELECT_DATA_ONLYm,
    },
};
static const bcmdrd_sid_t th4_b0_fp_ing_presel_entry_tcam_sid[1][3] = {
    {
    IFP_LOGICAL_TABLE_SELECTm,
    IFP_LOGICAL_TABLE_SELECTm,
    IFP_LOGICAL_TABLE_SELECTm,
    },
};
static const bcmdrd_sid_t th4_b0_fp_vlan_entry_tcam_data_only_sid[4][4] = {
    {
    VFP_POLICY_TABLEm,
    VFP_POLICY_TABLEm,
    VFP_POLICY_TABLEm,
    VFP_POLICY_TABLEm,
    },
    {
    VFP_POLICY_TABLEm,
    VFP_POLICY_TABLEm,
    VFP_POLICY_TABLEm,
    VFP_POLICY_TABLEm,
    },
    {
    VFP_POLICY_TABLEm,
    VFP_POLICY_TABLEm,
    VFP_POLICY_TABLEm,
    VFP_POLICY_TABLEm,
    },
    {
    VFP_POLICY_TABLEm,
    VFP_POLICY_TABLEm,
    VFP_POLICY_TABLEm,
    VFP_POLICY_TABLEm,
    },
};
static const bcmdrd_sid_t th4_b0_fp_vlan_entry_tcam_sid[4][4] = {
    {
    VFP_TCAMm,
    VFP_TCAMm,
    VFP_TCAMm,
    VFP_TCAMm,
    },
    {
    VFP_TCAMm,
    VFP_TCAMm,
    VFP_TCAMm,
    VFP_TCAMm,
    },
    {
    VFP_TCAMm,
    VFP_TCAMm,
    VFP_TCAMm,
    VFP_TCAMm,
    },
    {
    VFP_TCAMm,
    VFP_TCAMm,
    VFP_TCAMm,
    VFP_TCAMm,
    },
};
static const bcmdrd_sid_t * th4_b0_fp_egr_entry_tcam_data_only_sid_array[4] = {
    th4_b0_fp_egr_entry_tcam_data_only_sid[0],
    th4_b0_fp_egr_entry_tcam_data_only_sid[1],
    th4_b0_fp_egr_entry_tcam_data_only_sid[2],
    th4_b0_fp_egr_entry_tcam_data_only_sid[3],
};
static const bcmdrd_sid_t * th4_b0_fp_egr_entry_tcam_sid_array[4] = {
    th4_b0_fp_egr_entry_tcam_sid[0],
    th4_b0_fp_egr_entry_tcam_sid[1],
    th4_b0_fp_egr_entry_tcam_sid[2],
    th4_b0_fp_egr_entry_tcam_sid[3],
};
static const bcmdrd_sid_t * th4_b0_fp_em_presel_entry_tcam_data_only_sid_array[1] = {
    th4_b0_fp_em_presel_entry_tcam_data_only_sid[0],
};
static const bcmdrd_sid_t * th4_b0_fp_em_presel_entry_tcam_sid_array[1] = {
    th4_b0_fp_em_presel_entry_tcam_sid[0],
};
static const bcmdrd_sid_t * th4_b0_fp_ing_entry_tcam_data_only_sid_array[9] = {
    th4_b0_fp_ing_entry_tcam_data_only_sid[0],
    th4_b0_fp_ing_entry_tcam_data_only_sid[1],
    th4_b0_fp_ing_entry_tcam_data_only_sid[2],
    th4_b0_fp_ing_entry_tcam_data_only_sid[3],
    th4_b0_fp_ing_entry_tcam_data_only_sid[4],
    th4_b0_fp_ing_entry_tcam_data_only_sid[5],
    th4_b0_fp_ing_entry_tcam_data_only_sid[6],
    th4_b0_fp_ing_entry_tcam_data_only_sid[7],
    th4_b0_fp_ing_entry_tcam_data_only_sid[8],
};
static const bcmdrd_sid_t * th4_b0_fp_ing_entry_tcam_sid_array[9] = {
    th4_b0_fp_ing_entry_tcam_sid[0],
    th4_b0_fp_ing_entry_tcam_sid[1],
    th4_b0_fp_ing_entry_tcam_sid[2],
    th4_b0_fp_ing_entry_tcam_sid[3],
    th4_b0_fp_ing_entry_tcam_sid[4],
    th4_b0_fp_ing_entry_tcam_sid[5],
    th4_b0_fp_ing_entry_tcam_sid[6],
    th4_b0_fp_ing_entry_tcam_sid[7],
    th4_b0_fp_ing_entry_tcam_sid[8],
};
static const bcmdrd_sid_t * th4_b0_fp_ing_presel_entry_tcam_data_only_sid_array[1] = {
    th4_b0_fp_ing_presel_entry_tcam_data_only_sid[0],
};
static const bcmdrd_sid_t * th4_b0_fp_ing_presel_entry_tcam_sid_array[1] = {
    th4_b0_fp_ing_presel_entry_tcam_sid[0],
};
static const bcmdrd_sid_t * th4_b0_fp_vlan_entry_tcam_data_only_sid_array[4] = {
    th4_b0_fp_vlan_entry_tcam_data_only_sid[0],
    th4_b0_fp_vlan_entry_tcam_data_only_sid[1],
    th4_b0_fp_vlan_entry_tcam_data_only_sid[2],
    th4_b0_fp_vlan_entry_tcam_data_only_sid[3],
};
static const bcmdrd_sid_t * th4_b0_fp_vlan_entry_tcam_sid_array[4] = {
    th4_b0_fp_vlan_entry_tcam_sid[0],
    th4_b0_fp_vlan_entry_tcam_sid[1],
    th4_b0_fp_vlan_entry_tcam_sid[2],
    th4_b0_fp_vlan_entry_tcam_sid[3],
};
static const bcmptm_rm_tcam_hw_entry_info_t th4_b0_fp_egr_entry_tcam_hw_entry_info_array[6] = {
    {
        .data_end_bit =     th4_b0_fp_egr_entry_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_SINGLE,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 482,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 1,
        .num_depth_inst = 4,
        .num_key_rows = 1,
        .sid =     th4_b0_fp_egr_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_egr_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_DBLINTRA,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 0,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
    {
        .data_end_bit =     th4_b0_fp_egr_entry_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_DBLINTER,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 482,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 1,
        .num_depth_inst = 2,
        .num_key_rows = 2,
        .sid =     th4_b0_fp_egr_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_egr_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_TRIPLE,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 0,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_QUAD,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 0,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_HALF,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 0,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
};
static const bcmptm_rm_tcam_hw_entry_info_t th4_b0_fp_em_presel_entry_tcam_hw_entry_info[6] = {
    {
        .data_end_bit =     th4_b0_fp_em_presel_entry_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 178,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_SINGLE,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 162,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 1,
        .sid =     th4_b0_fp_em_presel_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_em_presel_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_DBLINTRA,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 1,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
    {
        .data_end_bit =     th4_b0_fp_em_presel_entry_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 178,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_DBLINTER,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 162,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 2,
        .num_depth_inst = 1,
        .num_key_rows = 2,
        .sid =     th4_b0_fp_em_presel_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_em_presel_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_TRIPLE,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 1,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_QUAD,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 1,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_HALF,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 1,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
};
static const bcmptm_rm_tcam_hw_entry_info_t th4_b0_fp_ing_entry_tcam_hw_entry_info_array[6] = {
    {
        .data_end_bit =     th4_b0_fp_ing_entry_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_SINGLE,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 322,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 1,
        .num_depth_inst = 9,
        .num_key_rows = 1,
        .sid =     th4_b0_fp_ing_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_ing_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit =     th4_b0_fp_ing_entry_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_DBLINTRA,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 322,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 1,
        .num_depth_inst = 3,
        .num_key_rows = 2,
        .sid =     th4_b0_fp_ing_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_ing_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit =     th4_b0_fp_ing_entry_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_DBLINTER,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 322,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 2,
        .num_depth_inst = 3,
        .num_key_rows = 2,
        .sid =     th4_b0_fp_ing_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_ing_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit =     th4_b0_fp_ing_entry_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_TRIPLE,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 322,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 3,
        .num_depth_inst = 3,
        .num_key_rows = 3,
        .sid =     th4_b0_fp_ing_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_ing_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_QUAD,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 0,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_HALF,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 0,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
};
static const bcmptm_rm_tcam_hw_entry_info_t th4_b0_fp_ing_presel_entry_tcam_hw_entry_info[6] = {
    {
        .data_end_bit =     th4_b0_fp_ing_presel_data_end_bit,
        /* implicit length assignment suppressed */
        .data_start_bit = 210,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_SINGLE,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 194,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 1,
        .sid =     th4_b0_fp_ing_presel_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_ing_presel_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit =     th4_b0_fp_ing_presel_data_end_bit,
        /* implicit length assignment suppressed */
        .data_start_bit = 210,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_DBLINTRA,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 194,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 1,
        .sid =     th4_b0_fp_ing_presel_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_ing_presel_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit =     th4_b0_fp_ing_presel_data_end_bit,
        /* implicit length assignment suppressed */
        .data_start_bit = 210,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_DBLINTER,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 194,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 2,
        .num_depth_inst = 1,
        .num_key_rows = 2,
        .sid =     th4_b0_fp_ing_presel_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_ing_presel_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit =     th4_b0_fp_ing_presel_data_end_bit,
        /* implicit length assignment suppressed */
        .data_start_bit = 210,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_TRIPLE,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 194,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 3,
        .num_depth_inst = 1,
        .num_key_rows = 3,
        .sid =     th4_b0_fp_ing_presel_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_ing_presel_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_QUAD,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 0,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_HALF,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 0,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
};
static const bcmptm_rm_tcam_hw_entry_info_t th4_b0_fp_vlan_entry_tcam_hw_entry_info_array[6] = {
    {
        .data_end_bit =     th4_b0_fp_vlan_entry_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_SINGLE,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 482,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 1,
        .num_depth_inst = 4,
        .num_key_rows = 1,
        .sid =     th4_b0_fp_vlan_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_vlan_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit =     th4_b0_fp_vlan_entry_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_DBLINTRA,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 482,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 1,
        .num_depth_inst = 4,
        .num_key_rows = 2,
        .sid =     th4_b0_fp_vlan_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_vlan_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit =     th4_b0_fp_vlan_entry_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_DBLINTER,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 482,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 1,
        .num_depth_inst = 2,
        .num_key_rows = 2,
        .sid =     th4_b0_fp_vlan_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_vlan_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_TRIPLE,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 0,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
    {
        .data_end_bit =     th4_b0_fp_vlan_entry_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_QUAD,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 482,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 4,
        .sid =     th4_b0_fp_vlan_entry_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th4_b0_fp_vlan_entry_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
    {
        .data_end_bit = NULL,
        .data_start_bit = 0,
        .group_mode = BCMPTM_RM_TCAM_GRP_MODE_HALF,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 0,
        .key_type_val = NULL,
        .non_aggr = 0,
        .num_data_rows = 0,
        .num_depth_inst = 0,
        .num_key_rows = 0,
        .sid = NULL,
        .sid_data_only = NULL,
    },
};
static const bcmptm_rm_tcam_more_info_t th4_b0_fp_egr_entry_tcam_rm_more_info[1] = {
    {
        .bundle_size = 4,
        .entry_count =     th4_b0_fp_egr_entry_count_array,
        /* implicit length assignment suppressed */
        .fp_flags = (BCMPTM_STAGE_KEY_TYPE_SELCODE | BCMPTM_STAGE_KEY_TYPE_FIXED | BCMPTM_STAGE_AUTOEXPANSION),
        .group_count =     th4_b0_fp_egr_group_count,
        /* implicit length assignment suppressed */
        .hw_atomicity_support = 1,
        .num_action_res_ids = 4,
        .pipe_count = 4,
        .slice_count =     th4_b0_fp_egr_slice_count,
        /* implicit length assignment suppressed */
        .slice_info =     th4_b0_fp_egr_entry_tcam_slice_info_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_more_info_t th4_b0_fp_em_presel_entry_tcam_rm_more_info[1] = {
    {
        .bundle_size = 2,
        .entry_count =     th4_b0_fp_em_presel_entry_count_array,
        /* implicit length assignment suppressed */
        .fp_flags = (BCMPTM_STAGE_KEY_TYPE_PRESEL | BCMPTM_STAGE_ENTRY_TYPE_HASH),
        .group_count =     th4_b0_fp_em_group_count,
        /* implicit length assignment suppressed */
        .hw_atomicity_support = 1,
        .num_action_res_ids = 16,
        .pipe_count = 2,
        .presel_count =     th4_b0_fp_em_presel_presel_count_array,
        /* implicit length assignment suppressed */
        .shared_lt_count = 1,
        .shared_lt_info =     th4_b0_fp_em_presel_entry_shared_lt_array,
        /* implicit length assignment suppressed */
        .slice_count =     th4_b0_fp_em_slice_count,
        /* implicit length assignment suppressed */
        .slice_info =     th4_b0_fp_em_presel_entry_tcam_slice_info_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_more_info_t th4_b0_fp_ing_entry_tcam_rm_more_info[1] = {
    {
        .bundle_size = 3,
        .entry_count =     th4_b0_fp_ing_entry_count_array,
        /* implicit length assignment suppressed */
        .fp_flags = (BCMPTM_STAGE_KEY_TYPE_PRESEL | BCMPTM_STAGE_AUTOEXPANSION | BCMPTM_STAGE_INTRASLICE_CAPABLE),
        .group_count =     th4_b0_fp_ing_group_count,
        /* implicit length assignment suppressed */
        .hw_atomicity_support = 1,
        .num_action_res_ids = 16,
        .pipe_count = 4,
        .presel_count =     th4_b0_fp_ing_presel_count_array,
        /* implicit length assignment suppressed */
        .shared_lt_count = 1,
        .shared_lt_info =     th4_b0_fp_ing_entry_shared_lt_array,
        /* implicit length assignment suppressed */
        .slice_count =     th4_b0_fp_ing_slice_count,
        /* implicit length assignment suppressed */
        .slice_info =     th4_b0_fp_ing_entry_tcam_slice_info_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_more_info_t th4_b0_fp_ing_presel_entry_tcam_rm_more_info[1] = {
    {
        .bundle_size = 1,
        .entry_count =     th4_b0_fp_ing_presel_entry_count_array,
        /* implicit length assignment suppressed */
        .fp_flags = (BCMPTM_STAGE_KEY_TYPE_PRESEL),
        .group_count =     th4_b0_fp_ing_presel_group_count,
        /* implicit length assignment suppressed */
        .hw_atomicity_support = 1,
        .main_lt_info =     th4_b0_fp_ing_presel_entry_main_lt_array,
        /* implicit length assignment suppressed */
        .pipe_count = 4,
        .presel_count =     th4_b0_fp_ing_presel_presel_count_array,
        /* implicit length assignment suppressed */
        .slice_count =     th4_b0_fp_ing_presel_slice_count,
        /* implicit length assignment suppressed */
        .slice_info =     th4_b0_fp_ing_presel_entry_tcam_slice_info_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_more_info_t th4_b0_fp_vlan_entry_tcam_rm_more_info[1] = {
    {
        .bundle_size = 4,
        .entry_count =     th4_b0_fp_vlan_entry_count_array,
        /* implicit length assignment suppressed */
        .fp_flags = (BCMPTM_STAGE_KEY_TYPE_SELCODE | BCMPTM_STAGE_AUTOEXPANSION | BCMPTM_STAGE_INTRASLICE_CAPABLE),
        .group_count =     th4_b0_fp_vlan_group_count,
        /* implicit length assignment suppressed */
        .hw_atomicity_support = 1,
        .num_action_res_ids = 4,
        .pipe_count = 4,
        .slice_count =     th4_b0_fp_vlan_slice_count,
        /* implicit length assignment suppressed */
        .slice_info =     th4_b0_fp_vlan_entry_tcam_slice_info_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_slice_info_t th4_b0_fp_egr_entry_tcam_slice_info_array[4] = {
    {
        .end_index = 127,
        .slice_id = 0,
        .start_index = 0,
        .valid = 1,
    },
    {
        .end_index = 255,
        .slice_id = 1,
        .start_index = 128,
        .valid = 1,
    },
    {
        .end_index = 383,
        .slice_id = 2,
        .start_index = 256,
        .valid = 1,
    },
    {
        .end_index = 511,
        .slice_id = 3,
        .start_index = 384,
        .valid = 1,
    },
};
static const bcmptm_rm_tcam_slice_info_t th4_b0_fp_em_presel_entry_tcam_slice_info_array[2] = {
    {
        .end_index = 15,
        .slice_id = 0,
        .start_index = 0,
        .valid = 1,
    },
    {
        .end_index = 31,
        .slice_id = 1,
        .start_index = 16,
        .valid = 1,
    },
};
static const bcmptm_rm_tcam_slice_info_t th4_b0_fp_ing_entry_tcam_slice_info_array[9] = {
    {
        .end_index = 255,
        .isdw_no_support = 1,
        .slice_flags = BCMPTM_SLICE_FLAG_DOUBLE_CAPABLE | BCMPTM_SLICE_FLAG_TRIPLE_CAPABLE,
        .slice_id = 0,
        .start_index = 0,
        .valid = 1,
    },
    {
        .end_index = 511,
        .isdw_no_support = 1,
        .slice_flags = BCMPTM_SLICE_FLAG_DOUBLE_CAPABLE,
        .slice_id = 1,
        .start_index = 256,
        .valid = 1,
    },
    {
        .end_index = 767,
        .isdw_no_support = 1,
        .slice_id = 2,
        .start_index = 512,
        .valid = 1,
    },
    {
        .end_index = 1023,
        .isdw_no_support = 1,
        .slice_flags = BCMPTM_SLICE_FLAG_DOUBLE_CAPABLE | BCMPTM_SLICE_FLAG_TRIPLE_CAPABLE,
        .slice_id = 3,
        .start_index = 768,
        .valid = 1,
    },
    {
        .end_index = 1279,
        .isdw_no_support = 1,
        .slice_flags = BCMPTM_SLICE_FLAG_DOUBLE_CAPABLE,
        .slice_id = 4,
        .start_index = 1024,
        .valid = 1,
    },
    {
        .end_index = 1535,
        .isdw_no_support = 1,
        .slice_id = 5,
        .start_index = 1280,
        .valid = 1,
    },
    {
        .end_index = 2047,
        .slice_flags = BCMPTM_SLICE_FLAG_DOUBLE_CAPABLE | BCMPTM_SLICE_FLAG_TRIPLE_CAPABLE,
        .slice_id = 6,
        .start_index = 1536,
        .valid = 1,
    },
    {
        .end_index = 2559,
        .slice_flags = BCMPTM_SLICE_FLAG_DOUBLE_CAPABLE,
        .slice_id = 7,
        .start_index = 2048,
        .valid = 1,
    },
    {
        .end_index = 3071,
        .slice_id = 8,
        .start_index = 2560,
        .valid = 1,
    },
};
static const bcmptm_rm_tcam_slice_info_t th4_b0_fp_ing_presel_entry_tcam_slice_info_array[9] = {
    {
        .end_index = 15,
        .slice_id = 0,
        .start_index = 0,
        .valid = 1,
    },
    {
        .end_index = 31,
        .slice_id = 1,
        .start_index = 16,
        .valid = 1,
    },
    {
        .end_index = 47,
        .slice_id = 2,
        .start_index = 32,
        .valid = 1,
    },
    {
        .end_index = 63,
        .slice_id = 3,
        .start_index = 48,
        .valid = 1,
    },
    {
        .end_index = 79,
        .slice_id = 4,
        .start_index = 64,
        .valid = 1,
    },
    {
        .end_index = 95,
        .slice_id = 5,
        .start_index = 80,
        .valid = 1,
    },
    {
        .end_index = 111,
        .slice_id = 6,
        .start_index = 96,
        .valid = 1,
    },
    {
        .end_index = 127,
        .slice_id = 7,
        .start_index = 112,
        .valid = 1,
    },
    {
        .end_index = 143,
        .slice_id = 8,
        .start_index = 128,
        .valid = 1,
    },
};
static const bcmptm_rm_tcam_slice_info_t th4_b0_fp_vlan_entry_tcam_slice_info_array[4] = {
    {
        .end_index = 255,
        .slice_id = 0,
        .start_index = 0,
        .valid = 1,
    },
    {
        .end_index = 511,
        .slice_id = 1,
        .start_index = 256,
        .valid = 1,
    },
    {
        .end_index = 767,
        .slice_id = 2,
        .start_index = 512,
        .valid = 1,
    },
    {
        .end_index = 1023,
        .slice_id = 3,
        .start_index = 768,
        .valid = 1,
    },
};
static const lt_mreq_info_t th4_b0_fp_egr_entry_lt_mreq_info = {
    .hw_entry_info =     th4_b0_fp_egr_entry_tcam_hw_entry_info_array,
    .hw_entry_info_count = 6,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_FP,
    .rm_more_info =     th4_b0_fp_egr_entry_tcam_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const lt_mreq_info_t th4_b0_fp_em_presel_entry_lt_mreq_info = {
    .hw_entry_info =     th4_b0_fp_em_presel_entry_tcam_hw_entry_info,
    .hw_entry_info_count = 6,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_FP,
    .rm_more_info =     th4_b0_fp_em_presel_entry_tcam_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const lt_mreq_info_t th4_b0_fp_ing_entry_lt_mreq_info = {
    .hw_entry_info =     th4_b0_fp_ing_entry_tcam_hw_entry_info_array,
    .hw_entry_info_count = 6,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_FP,
    .rm_more_info =     th4_b0_fp_ing_entry_tcam_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const lt_mreq_info_t th4_b0_fp_ing_presel_entry_lt_mreq_info = {
    .aggr_ekw_edw = 9,
    .hw_entry_info =     th4_b0_fp_ing_presel_entry_tcam_hw_entry_info,
    .hw_entry_info_count = 6,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_FP,
    .rm_more_info =     th4_b0_fp_ing_presel_entry_tcam_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const lt_mreq_info_t th4_b0_fp_vlan_entry_lt_mreq_info = {
    .hw_entry_info =     th4_b0_fp_vlan_entry_tcam_hw_entry_info_array,
    .hw_entry_info_count = 6,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_FP,
    .rm_more_info =     th4_b0_fp_vlan_entry_tcam_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const uint16_t th4_b0_fp_egr_entry_tcam_data_end_bit_array[2] = {
    143,
    143,
};
static const uint16_t th4_b0_fp_em_presel_entry_data_end_bit_array[2] = {
    233,
    233,
};
static const uint16_t th4_b0_fp_ing_entry_tcam_data_end_bit_array[3] = {
    375,
    375,
    375,
};
static const uint16_t th4_b0_fp_ing_presel_data_end_bit[3] = {
    273,
    273,
    273,
};
static const uint16_t th4_b0_fp_vlan_entry_tcam_data_end_bit_array[4] = {
    184,
    184,
    184,
    184,
};
static const uint32_t th4_b0_fp_egr_entry_count[4][12] = {
    {
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    },
    {
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    },
    {
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    },
    {
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    128,
    },
};
static const uint32_t th4_b0_fp_egr_group_count[4] = {
    12,
    12,
    12,
    12,
};
static const uint32_t th4_b0_fp_em_group_count[2] = {
    16,
    16,
};
static const uint32_t th4_b0_fp_em_presel_entry_count[2][2] = {
    {
    0,
    0,
    },
    {
    0,
    0,
    },
};
static const uint32_t th4_b0_fp_em_presel_presel_count[2][2] = {
    {
    16,
    16,
    },
    {
    16,
    16,
    },
};
static const uint32_t th4_b0_fp_ing_entry_count[4][9] = {
    {
    256,
    256,
    256,
    256,
    256,
    256,
    512,
    512,
    512,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    512,
    512,
    512,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    512,
    512,
    512,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    512,
    512,
    512,
    },
};
static const uint32_t th4_b0_fp_ing_group_count[4] = {
    16,
    16,
    16,
    16,
};
static const uint32_t th4_b0_fp_ing_presel_count[4][9] = {
    {
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    },
    {
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    },
    {
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    },
    {
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    },
};
static const uint32_t th4_b0_fp_ing_presel_entry_count[4][9] = {
    {
    256,
    256,
    256,
    256,
    256,
    256,
    512,
    512,
    512,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    512,
    512,
    512,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    512,
    512,
    512,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    512,
    512,
    512,
    },
};
static const uint32_t th4_b0_fp_ing_presel_group_count[8] = {
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
};
static const uint32_t th4_b0_fp_ing_presel_presel_count[4][9] = {
    {
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    },
    {
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    },
    {
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    },
    {
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    16,
    },
};
static const uint32_t th4_b0_fp_vlan_entry_count[8][12] = {
    {
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    },
    {
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    256,
    },
};
static const uint32_t th4_b0_fp_vlan_group_count[8] = {
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
};
static const uint32_t * th4_b0_fp_egr_entry_count_array[4] = {
    th4_b0_fp_egr_entry_count[0],
    th4_b0_fp_egr_entry_count[1],
    th4_b0_fp_egr_entry_count[2],
    th4_b0_fp_egr_entry_count[3],
};
static const uint32_t * th4_b0_fp_em_presel_entry_count_array[2] = {
    th4_b0_fp_em_presel_entry_count[0],
    th4_b0_fp_em_presel_entry_count[1],
};
static const uint32_t * th4_b0_fp_em_presel_presel_count_array[2] = {
    th4_b0_fp_em_presel_presel_count[0],
    th4_b0_fp_em_presel_presel_count[1],
};
static const uint32_t * th4_b0_fp_ing_entry_count_array[4] = {
    th4_b0_fp_ing_entry_count[0],
    th4_b0_fp_ing_entry_count[1],
    th4_b0_fp_ing_entry_count[2],
    th4_b0_fp_ing_entry_count[3],
};
static const uint32_t * th4_b0_fp_ing_presel_count_array[4] = {
    th4_b0_fp_ing_presel_count[0],
    th4_b0_fp_ing_presel_count[1],
    th4_b0_fp_ing_presel_count[2],
    th4_b0_fp_ing_presel_count[3],
};
static const uint32_t * th4_b0_fp_ing_presel_entry_count_array[4] = {
    th4_b0_fp_ing_presel_entry_count[0],
    th4_b0_fp_ing_presel_entry_count[1],
    th4_b0_fp_ing_presel_entry_count[2],
    th4_b0_fp_ing_presel_entry_count[3],
};
static const uint32_t * th4_b0_fp_ing_presel_presel_count_array[4] = {
    th4_b0_fp_ing_presel_presel_count[0],
    th4_b0_fp_ing_presel_presel_count[1],
    th4_b0_fp_ing_presel_presel_count[2],
    th4_b0_fp_ing_presel_presel_count[3],
};
static const uint32_t * th4_b0_fp_vlan_entry_count_array[8] = {
    th4_b0_fp_vlan_entry_count[0],
    th4_b0_fp_vlan_entry_count[1],
    th4_b0_fp_vlan_entry_count[2],
    th4_b0_fp_vlan_entry_count[3],
    th4_b0_fp_vlan_entry_count[4],
    th4_b0_fp_vlan_entry_count[5],
    th4_b0_fp_vlan_entry_count[6],
    th4_b0_fp_vlan_entry_count[7],
};
static const uint8_t th4_b0_fp_egr_slice_count[4] = {
    4,
    4,
    4,
    4,
};
static const uint8_t th4_b0_fp_em_slice_count[2] = {
    2,
    2,
};
static const uint8_t th4_b0_fp_ing_presel_slice_count[8] = {
    9,
    9,
    9,
    9,
    9,
    9,
    9,
    9,
};
static const uint8_t th4_b0_fp_ing_slice_count[4] = {
    9,
    9,
    9,
    9,
};
static const uint8_t th4_b0_fp_vlan_slice_count[8] = {
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
};

