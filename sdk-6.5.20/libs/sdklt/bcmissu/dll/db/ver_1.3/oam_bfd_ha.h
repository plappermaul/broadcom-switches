/**************************************************************************
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated by HA parser from YAML formated file.
 * Edits to this file will be lost when it is regenerated.
 * Tool: bcmha/scripts/ha_yml_parser.py
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */
#ifndef OAM_BFD_HA_H
#define OAM_BFD_HA_H

#include <shr/shr_ha.h>

typedef struct {
   /*! Indicates that the embedded app was initialized or not. */
   bool init;
   /*! Indicates if the embedded app is running or not. If this field is true, then it implies init is also true. */
   bool run;
   /*! The microcontroller number on which the embedded app is running. */
   uint8_t uc_num;
   /*! The maximum number of indicies that are available in endpoint table. */
   uint32_t max_endpoints;
   /*! The maximum number of endpoints that can be created in the app. */
   uint32_t max_active_endpoints;
   /*! The number of endpoints currently created in the app. */
   uint32_t num_active_endpoints;
   /*! Max number of simple password auth keys that can be created in the app. */
   uint32_t max_active_auth_sp_keys;
   /*! The number of simple password auth keys currently created in the app. */
   uint32_t num_active_auth_sp_keys;
   /*! Max number of SHA1 auth keys that can be created in the app. */
   uint32_t max_active_auth_sha1_keys;
   /*! The number of SHA1 auth keys currently created in the app. */
   uint32_t num_active_auth_sha1_keys;
} bcmcth_oam_bfd_control_ha_t;

#define BCMCTH_OAM_BFD_CONTROL_HA_T_ID 0x73d557b0cd6da4ff

typedef struct {
   /*! Indicates if the auth entry is created. */
   bool in_use;
   /*! Indicates if the auth entry is created in the app. If this field is true, then it implies that in_use is also true. */
   bool active;
   /*! Internal ID allocated to the authentication entry. Only valid if active == true. */
   uint32_t int_id;
} bcmcth_oam_bfd_auth_ha_t;

#define BCMCTH_OAM_BFD_AUTH_HA_T_ID 0x0300c70cf04c77ca

typedef struct {
   /*! Indicates if the endpoint is created. */
   bool in_use;
   /*! Indicates if the endpoint is created in the app. If this field is true, then it implies that in_use is also true. */
   bool active;
   /*! Endpoint type of the endpoint. Only valid if active == true. */
   uint32_t ep_type;
} bcmcth_oam_bfd_endpoint_ha_t;

#define BCMCTH_OAM_BFD_ENDPOINT_HA_T_ID 0x8ebe0fc45b3425df

typedef struct {
   /*! The next index in the OAM_BFD_EVENT table to write the event. */
   uint32_t next_idx;
   /*! Maximum number of indices available in OAM_BFD_EVENT table. */
   uint32_t max_idx;
   /*! Indicates if a wraparound has occured in OAM_BFD_EVENT table. */
   bool wraparound;
   /*! Indicates if an entry was created in OAM_BFD_EVENT_STATUS table. */
   bool status_create;
} bcmcth_oam_bfd_event_report_ha_t;

#define BCMCTH_OAM_BFD_EVENT_REPORT_HA_T_ID 0xaf46b62d8322813a

#endif /* OAM_BFD_HA_H */
