/**************************************************************************
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated by HA parser from YAML formated file.
 * Edits to this file will be lost when it is regenerated.
 * Tool: bcmha/scripts/ha_yml_parser.py
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */
#ifndef DLB_HA_H
#define DLB_HA_H

#include <shr/shr_ha.h>

typedef struct {
   /*! Indicates the flow set base pointer of the flow set associated with the DLB ECMP group. */
   uint32_t flow_set_base_ptr;
   /*! Indicates the size of flow seti of the flow set associated with the DLB ECMP group. */
   uint32_t flow_set_size;
} bcmcth_dlb_ecmp_entry_info_t;

#define BCMCTH_DLB_ECMP_ENTRY_INFO_T_ID 0xf976802fa126f3ad

typedef struct {
   /*! Indicates the flow set base pointer of the flow set associated with the DLB trunk group. */
   uint32_t flow_set_base_ptr;
   /*! Indicates the size of flow seti of the flow set associated with the DLB trunk group. */
   uint32_t flow_set_size;
   /*! Indicates the num of primary paths. */
   uint8_t num_paths;
   /*! Indicates the num of alternate paths. */
   uint8_t num_alternate_paths;
   /*! Indicates if the DLB trunk group is enabeld in hardware. */
   bool group_enable;
} bcmcth_dlb_trunk_entry_info_t;

#define BCMCTH_DLB_TRUNK_ENTRY_INFO_T_ID 0x22fd54f24f2089f3

typedef struct {
   /*! Block validation. */
   uint32_t signature;
   /*! indicate the array size of dlb_trunk_entry_array. */
   uint32_t array_size;
   /*! DLB trunk group entry info array. */
   bcmcth_dlb_trunk_entry_info_t dlb_trunk_ent_arr[];
} bcmcth_dlb_trunk_entry_ha_blk_t;

#define BCMCTH_DLB_TRUNK_ENTRY_HA_BLK_T_ID 0x943bc22acbaf25fb

typedef struct {
   /*! Block validation. */
   uint32_t signature;
   /*! indicate the array size of dlb_trunk_hw_entry_array. */
   uint32_t array_size;
   /*! dlb trunk group bitmap. */
   uint32_t mbmp[];
} bcmcth_dlb_trunk_mbmp_ha_blk_t;

#define BCMCTH_DLB_TRUNK_MBMP_HA_BLK_T_ID 0x0a7ef2491640e17b

typedef struct {
   /*! Indicates the entry is valid or not. */
   uint8_t valid;
   /*! Number of packets failed due to DLB mechanism. */
   uint32_t fail_cnt;
   /*! Total aggregate port member assignments. */
   uint32_t port_reassignment_cnt;
   /*! Total aggregate member member assignments. */
   uint32_t member_reassignment_cnt;
} bcmcth_dlb_ecmp_stats_entry_info_t;

#define BCMCTH_DLB_ECMP_STATS_ENTRY_INFO_T_ID 0xd9d10ba9c90031ae

#endif /* DLB_HA_H */
