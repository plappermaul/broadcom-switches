#
# file: bcmltm_ha.yml
# LTM HA memory YAML file describing the HA data structures
#

#
# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
# 
# Copyright 2007-2020 Broadcom Inc. All rights reserved.
#
consts:
    BCMLTM_MAX_COMMITTED_TRANS: 32
    BCMLTM_STATE_NONE: 0
    BCMLTM_STATE_STAGING: 1
    BCMLTM_STATE_COMMITTED: 2

component:
    bcmltm_ha:
        bcmltm_state_type_t:
            type: enum
            comment:
                "\\brief LTM Extended State formats.\n
                *\n
                * Per-LT state extensions are selected from these types\n
                *\n
                * In each bitmap state, the bit position is the Tracking Index for the entry.\n
                * 1) Local in-use entries\n
                * 2) Current valid entries\n
                * 3) Global in-use entries for shared tables.\n"

            fields:
                BCMLTM_STATE_TYPE_INUSE_BITMAP: 0
                BCMLTM_STATE_TYPE_VALID_BITMAP: 1
                BCMLTM_STATE_TYPE_GLOBAL_BITMAP: 2
                BCMLTM_STATE_TYPE_COUNT: 3

        bcmltm_lt_state_data_t:
            type: struct
            comment:
                "\\brief Per-LT additional state data.\n
                 *\n
                 * Some Logical Tables require state beyond the basic elements for all LTs.\n
                 * This structure links the different categories of the LT state for cases where each is needed.\n
                 * All state is stored in HA memory, so HA pointers are used to reference the structure links.\n"
            fields:
                ltid:
                    type: uint32_t
                    comment: Logical Table ID - HA key.
                state_data_size:
                    type: uint32_t
                    comment: Size in bytes of any additional table state.
                state_data_type:
                    type: bcmltm_state_type_t
                    comment: Format of the extended state.
                state_data_hap:
                    type: shr_ha_ptr_t
                    comment: HA Pointer to a this table state.
                next_state_data_hap:
                    type: shr_ha_ptr_t
                    comment: Optional HA pointer to additional table state.

        bcmltm_lt_state_t:
            type: struct
            comment:
                "\\brief Per-LT ongoing state.\n
                 *\n
                  * This structure assembles the runtime state of a single LT.  For deployments that enable HA, this state will be updated at each entry or transaction commit."
            fields:
                initialized:
                    type: bool
                    comment: State is initialized - used in HA recovery.
                ltid:
                    type: uint32_t
                    comment: Logical Table ID - HA key.
                table_op_pt_info_enable:
                    type: bool
                    comment: Enable PT status update for LT operation.
                entry_count:
                    type: uint32_t
                    comment: Current count of entries in this LT.
                max_entry_count:
                    type: uint32_t
                    comment: Maximum permitted count of entries in this LT.
                bitmap_size:
                    type: uint32_t
                    comment: The length of any LT bitmaps used by this Logical Table.
                table_state_data_hap:
                    type: shr_ha_ptr_t
                    comment: Optional HA pointer to a structure tracking additional table state.

        bcmltm_transaction_status_t:
            type: struct
            comment:
                "\\brief Transaction tracking structure.\n
                 *\n
                 * This structure caches the information that must be preserved over the duration of a transaction.  Note that only an Atomic Transaction will have multiple LT entries.  The transaction ID must be identical for each of the LT entries in a transaction.\n"
            fields:
                trans_id:
                    type: uint32_t
                    comment:
                        "Transaction ID for the LT entry specification of this operation.\n
                         Note that multiple entries may have the same ID.\n
                         Shared ID will bundle the entries into an atomic operation.\n"
                max_lt_num:
                    type: uint32_t
                    comment: Greatest number of LTIDs recorded for a single transaction.
                lt_num:
                    type: uint32_t
                    comment: Number of LTIDs included in this transaction so far.
                ltid_list_hap:
                    type: shr_ha_ptr_t
                    comment: HA pointer to array of LTIDs in this transaction.

        bcmltm_ha_block_header_t:
            type: struct
            comment: LTM HA block header.
            fields:
                signature:
                    type: uint32_t
                    comment: Identify if structure is coherent.
                block_size:
                    type: uint32_t
                    comment: Total data length of the block.
                allocated_size:
                    type: uint32_t
                    comment: Total data length allocated already.
