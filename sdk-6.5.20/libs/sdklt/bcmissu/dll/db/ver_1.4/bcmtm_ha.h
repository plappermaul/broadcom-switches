/**************************************************************************
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated by HA parser from YAML formated file.
 * Edits to this file will be lost when it is regenerated.
 * Tool: bcmha/scripts/ha_yml_parser.py
 *
 * $Copyright:.$
 *
 **************************************************************************/
#ifndef BCMTM_HA_H
#define BCMTM_HA_H

#include <shr/shr_ha.h>

#define NUM_PORTS 576
#define NUM_ITMS 2
#define NUM_PFC_PRI 8
#define NUM_PMS 64
#define NUM_PORT_BMP_WIDTH 18
#define NUM_PORT_MC_QUEUE_BMP_WIDTH 2

/*!
 * BCMTM threshold information
 */
typedef struct {
   /*! Shared buffer space in each ITM. */
   uint32_t itm_buf_size[NUM_ITMS];
} bcmtm_thd_info_t;

#define BCMTM_THD_INFO_T_ID 0x2f22168b148cf5ab

/*!
 * BCMTM OBM threshold information
 */
typedef struct {
   /*! OBM maximum threshold for bytes per port. */
   uint32_t obm_port_max_bytes[NUM_PORTS];
   /*! OBM maximum threshold for combined lossy-low and lossy-high bytes. */
   uint32_t obm_lossy_max_bytes[NUM_PORTS];
   /*! OBM maximum threshold for lossy-low bytes. */
   uint32_t obm_lossy_low_max_bytes[NUM_PORTS];
} bcmtm_obm_thd_info_t;

#define BCMTM_OBM_THD_INFO_T_ID 0xcdffb3174ba34669

typedef struct {
   /*! Physical port number. */
   int pport;
   /*! MMU port number. */
   int mport;
   /*! MMU local port (IDB port number). */
   int mlocal_port;
   /*! Pipe number. */
   int pipe;
   /*! MMU chip port number. */
   int mchip_port;
   /*! Port flags. */
   int flags;
   /*! Number of multicast queue. */
   int num_mcq;
   /*! Number of unicast queue. */
   int num_ucq;
   /*! Multicast base queue number. */
   int base_mcq;
   /*! Unicast base queue number. */
   int base_ucq;
   /*! Number of lanes in use. */
   int num_lanes;
   /*! Maximum speed for the port. */
   int max_speed;
   /*! Current port speed. */
   int cur_speed;
} bcmtm_lport_map_t;

#define BCMTM_LPORT_MAP_T_ID 0x8bf21525973badbe

typedef struct {
   /*! Logical port number. */
   int lport;
   /*! Global MMU port. */
   int mport;
   /*! MMU local port number. */
   int mlocal_port;
} bcmtm_pport_map_t;

#define BCMTM_PPORT_MAP_T_ID 0x488f8e38c09f5ef3

typedef struct {
   /*! Logical port number. */
   int lport;
} bcmtm_mport_map_t;

#define BCMTM_MPORT_MAP_T_ID 0x07f603db22346560

/*!
 * BCMTM driver information. It holds the port mapping information as well.
 */
typedef struct {
   /*! Clock frequency. */
   int frequency;
   /*! Port fabric enable. */
   int fabric_port_enable;
   /*! DPR clock frequency. */
   int dpr_clock_frequency;
   /*! OOBFC clock in nano seconds. */
   uint8_t oobfc_clock_ns;
   /*! Enable flexport operations. */
   uint8_t flexport;
   /*! Lossless mode. */
   uint8_t lossless;
   /*! The PM is eligibal for flexport operations. For some devices, non-zero values indicate max number of subports in the PM. */
   uint8_t flex_eligible[NUM_PMS];
} bcmtm_drv_info_t;

#define BCMTM_DRV_INFO_T_ID 0x712510849b4bf5db

/*!
 * PFC deadlock recovery information.
 */
typedef struct {
   /*! Per PFC priority deadlock recovery timer value. */
   uint8_t recovery_count_cfg[NUM_PFC_PRI];
   /*! Per PFC priority deadlock recovery enable info. */
   uint8_t ddr_enable;
   /*! PFC priorities under deadlock recovery. */
   uint8_t in_recovery;
   /*! Accumulated deadlock recovery time across all recovery events. */
   uint32_t recovery_count_acc[NUM_PFC_PRI];
} bcmtm_pfc_ddr_info_t;

#define BCMTM_PFC_DDR_INFO_T_ID 0x50d200e6e7472490

/*!
 * OBM usage information.
 */
typedef struct {
   /*! Obm usage bitmap array. */
   uint32_t obm_usage[NUM_PORT_BMP_WIDTH];
} bcmtm_obm_usage_info_t;

#define BCMTM_OBM_USAGE_INFO_T_ID 0x3fb9ccf1a35cee5d

#endif /* BCMTM_HA_H */
