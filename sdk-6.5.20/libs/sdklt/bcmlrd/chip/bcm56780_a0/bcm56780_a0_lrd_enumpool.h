/*******************************************************************************
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated by fltg from Logical Table definition files.
 *
 * Tool: $SDK/INTERNAL/fltg/bin/fltg
 *
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */
#ifndef BCM56780_A0_LRD_ENUMPOOL_H
#define BCM56780_A0_LRD_ENUMPOOL_H
#ifndef DOXYGEN_IGNORE_AUTOGEN
#include <bcmltd/bcmltd_types.h>
#include <bcmlrd/chip/bcm56780_a0/bcm56780_a0_lrd_enum_limits.h>
#define BCM56780_A0_LRD_ALPM_CONTROL_STATE_T_DATA (bcm56780_a0_lrd_enum_type + 0) /* enum ALPM_CONTROL_STATE_T */
#define BCM56780_A0_LRD_ALPM_DB_T_DATA (bcm56780_a0_lrd_enum_type + 1) /* enum ALPM_DB_T */
#define BCM56780_A0_LRD_ALPM_KEY_INPUT_T_DATA (bcm56780_a0_lrd_enum_type + 2) /* enum ALPM_KEY_INPUT_T */
#define BCM56780_A0_LRD_ALPM_KEY_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 3) /* enum ALPM_KEY_TYPE_T */
#define BCM56780_A0_LRD_CTR_EFLEX_OBJ_SRC_T_DATA (bcm56780_a0_lrd_enum_type + 4) /* enum CTR_EFLEX_OBJ_SRC_T */
#define BCM56780_A0_LRD_CTR_EFLEX_SCALE_T_DATA (bcm56780_a0_lrd_enum_type + 5) /* enum CTR_EFLEX_SCALE_T */
#define BCM56780_A0_LRD_CTR_EFLEX_STOP_TRIGGER_T_DATA (bcm56780_a0_lrd_enum_type + 6) /* enum CTR_EFLEX_STOP_TRIGGER_T */
#define BCM56780_A0_LRD_DEVICE_BS_PLL_REF_CLK_T_DATA (bcm56780_a0_lrd_enum_type + 7) /* enum DEVICE_BS_PLL_REF_CLK_T */
#define BCM56780_A0_LRD_DEVICE_CLK_FREQ_T_DATA (bcm56780_a0_lrd_enum_type + 8) /* enum DEVICE_CLK_FREQ_T */
#define BCM56780_A0_LRD_DEVICE_EM_BANK_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 9) /* enum DEVICE_EM_BANK_TYPE_T */
#define BCM56780_A0_LRD_DEVICE_EM_GROUP_ATTRIBUTE_T_DATA (bcm56780_a0_lrd_enum_type + 10) /* enum DEVICE_EM_GROUP_ATTRIBUTE_T */
#define BCM56780_A0_LRD_DEVICE_EM_TILE_MODE_ATTRIBUTE_T_DATA (bcm56780_a0_lrd_enum_type + 11) /* enum DEVICE_EM_TILE_MODE_ATTRIBUTE_T */
#define BCM56780_A0_LRD_DEVICE_EM_TILE_PDD_T_DATA (bcm56780_a0_lrd_enum_type + 12) /* enum DEVICE_EM_TILE_PDD_T */
#define BCM56780_A0_LRD_DEVICE_HASH_VECTOR_T_DATA (bcm56780_a0_lrd_enum_type + 13) /* enum DEVICE_HASH_VECTOR_T */
#define BCM56780_A0_LRD_DEVICE_TS_PLL_REF_CLK_T_DATA (bcm56780_a0_lrd_enum_type + 14) /* enum DEVICE_TS_PLL_REF_CLK_T */
#define BCM56780_A0_LRD_DEVICE_VARIANT_T_DATA (bcm56780_a0_lrd_enum_type + 15) /* enum DEVICE_VARIANT_T */
#define BCM56780_A0_LRD_DLB_ASSIGNMENT_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 16) /* enum DLB_ASSIGNMENT_MODE_T */
#define BCM56780_A0_LRD_DLB_FLOW_SET_SIZE_T_DATA (bcm56780_a0_lrd_enum_type + 17) /* enum DLB_FLOW_SET_SIZE_T */
#define BCM56780_A0_LRD_DLB_PORT_SCALING_FACTOR_T_DATA (bcm56780_a0_lrd_enum_type + 18) /* enum DLB_PORT_SCALING_FACTOR_T */
#define BCM56780_A0_LRD_DLB_TRUNK_HASH_FLOW_ID_SRC_T_DATA (bcm56780_a0_lrd_enum_type + 19) /* enum DLB_TRUNK_HASH_FLOW_ID_SRC_T */
#define BCM56780_A0_LRD_ECMP_HASH_FLOW_ID_SRC_T_DATA (bcm56780_a0_lrd_enum_type + 20) /* enum ECMP_HASH_FLOW_ID_SRC_T */
#define BCM56780_A0_LRD_ECMP_LB_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 21) /* enum ECMP_LB_MODE_T */
#define BCM56780_A0_LRD_ECMP_MEMBER_INDEX_T_DATA (bcm56780_a0_lrd_enum_type + 22) /* enum ECMP_MEMBER_INDEX_T */
#define BCM56780_A0_LRD_ECMP_PROFILE_ID_T_DATA (bcm56780_a0_lrd_enum_type + 23) /* enum ECMP_PROFILE_ID_T */
#define BCM56780_A0_LRD_ECMP_WEIGHTED_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 24) /* enum ECMP_WEIGHTED_MODE_T */
#define BCM56780_A0_LRD_ECMP_WEIGHTED_SIZE_T_DATA (bcm56780_a0_lrd_enum_type + 25) /* enum ECMP_WEIGHTED_SIZE_T */
#define BCM56780_A0_LRD_EGR_OBJECT_SEL_T_DATA (bcm56780_a0_lrd_enum_type + 26) /* enum EGR_OBJECT_SEL_T */
#define BCM56780_A0_LRD_ENUM_NAME_T_DATA (bcm56780_a0_lrd_enum_type + 27) /* enum ENUM_NAME_T */
#define BCM56780_A0_LRD_ETRAP_CRITICAL_T_DATA (bcm56780_a0_lrd_enum_type + 28) /* enum ETRAP_CRITICAL_T */
#define BCM56780_A0_LRD_ETRAP_HASH_SEL_T_DATA (bcm56780_a0_lrd_enum_type + 29) /* enum ETRAP_HASH_SEL_T */
#define BCM56780_A0_LRD_ETRAP_INTERVAL_T_DATA (bcm56780_a0_lrd_enum_type + 30) /* enum ETRAP_INTERVAL_T */
#define BCM56780_A0_LRD_EVICTION_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 31) /* enum EVICTION_MODE_T */
#define BCM56780_A0_LRD_FLEX_DIGEST_ALGORITHM_T_DATA (bcm56780_a0_lrd_enum_type + 32) /* enum FLEX_DIGEST_ALGORITHM_T */
#define BCM56780_A0_LRD_FLEX_QOS_EGR_BASE_INDEX_SOURCE_T_DATA (bcm56780_a0_lrd_enum_type + 33) /* enum FLEX_QOS_EGR_BASE_INDEX_SOURCE_T */
#define BCM56780_A0_LRD_FLEX_STATE_EGR_INSTANCE_T_DATA (bcm56780_a0_lrd_enum_type + 34) /* enum FLEX_STATE_EGR_INSTANCE_T */
#define BCM56780_A0_LRD_L3_MTU_ADJUST_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 35) /* enum L3_MTU_ADJUST_MODE_T */
#define BCM56780_A0_LRD_LB_HASH_ENTROPY_HASH_FLOW_ID_SRC_T_DATA (bcm56780_a0_lrd_enum_type + 36) /* enum LB_HASH_ENTROPY_HASH_FLOW_ID_SRC_T */
#define BCM56780_A0_LRD_LB_HASH_RESULT_SIZE_T_DATA (bcm56780_a0_lrd_enum_type + 37) /* enum LB_HASH_RESULT_SIZE_T */
#define BCM56780_A0_LRD_LB_HASH_SUBSET_SELECT_T_DATA (bcm56780_a0_lrd_enum_type + 38) /* enum LB_HASH_SUBSET_SELECT_T */
#define BCM56780_A0_LRD_LFID_T_DATA (bcm56780_a0_lrd_enum_type + 39) /* enum LFID_T */
#define BCM56780_A0_LRD_LTID_T_DATA (bcm56780_a0_lrd_enum_type + 40) /* enum LTID_T */
#define BCM56780_A0_LRD_MASK_ACTION_T_DATA (bcm56780_a0_lrd_enum_type + 41) /* enum MASK_ACTION_T */
#define BCM56780_A0_LRD_MASK_TARGET_T_DATA (bcm56780_a0_lrd_enum_type + 42) /* enum MASK_TARGET_T */
#define BCM56780_A0_LRD_MIRROR_ENCAP_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 43) /* enum MIRROR_ENCAP_MODE_T */
#define BCM56780_A0_LRD_MIRROR_METADATA_T_DATA (bcm56780_a0_lrd_enum_type + 44) /* enum MIRROR_METADATA_T */
#define BCM56780_A0_LRD_MIRROR_ON_DROP_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 45) /* enum MIRROR_ON_DROP_MODE_T */
#define BCM56780_A0_LRD_MIRROR_SAMPLE_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 46) /* enum MIRROR_SAMPLE_MODE_T */
#define BCM56780_A0_LRD_MIRROR_TRUNCATE_ACTION_T_DATA (bcm56780_a0_lrd_enum_type + 47) /* enum MIRROR_TRUNCATE_ACTION_T */
#define BCM56780_A0_LRD_MIRROR_TRUNCATE_ZONE_T_DATA (bcm56780_a0_lrd_enum_type + 48) /* enum MIRROR_TRUNCATE_ZONE_T */
#define BCM56780_A0_LRD_MIRROR_VXLAN_T_DATA (bcm56780_a0_lrd_enum_type + 49) /* enum MIRROR_VXLAN_T */
#define BCM56780_A0_LRD_MON_REDIRECT_CPU_COPY_CONTROL_T_DATA (bcm56780_a0_lrd_enum_type + 50) /* enum MON_REDIRECT_CPU_COPY_CONTROL_T */
#define BCM56780_A0_LRD_MON_REDIRECT_NIH_TRACE_EVENT_SELECT_T_DATA (bcm56780_a0_lrd_enum_type + 51) /* enum MON_REDIRECT_NIH_TRACE_EVENT_SELECT_T */
#define BCM56780_A0_LRD_MON_REDIRECT_PORT_COPY_CONTROL_T_DATA (bcm56780_a0_lrd_enum_type + 52) /* enum MON_REDIRECT_PORT_COPY_CONTROL_T */
#define BCM56780_A0_LRD_MON_REDIRECT_TRUNCATE_CONTROL_T_DATA (bcm56780_a0_lrd_enum_type + 53) /* enum MON_REDIRECT_TRUNCATE_CONTROL_T */
#define BCM56780_A0_LRD_MPLS_EXP_POLICY_SEL_T_DATA (bcm56780_a0_lrd_enum_type + 54) /* enum MPLS_EXP_POLICY_SEL_T */
#define BCM56780_A0_LRD_NUM_SA_PER_SC_DECRYPT_T_DATA (bcm56780_a0_lrd_enum_type + 55) /* enum NUM_SA_PER_SC_DECRYPT_T */
#define BCM56780_A0_LRD_NUM_SA_PER_SC_ENCRYPT_T_DATA (bcm56780_a0_lrd_enum_type + 56) /* enum NUM_SA_PER_SC_ENCRYPT_T */
#define BCM56780_A0_LRD_PC_ABILITY_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 57) /* enum PC_ABILITY_TYPE_T */
#define BCM56780_A0_LRD_PC_PM_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 58) /* enum PC_PM_MODE_T */
#define BCM56780_A0_LRD_PC_PM_PLL_VCO_RATE_T_DATA (bcm56780_a0_lrd_enum_type + 59) /* enum PC_PM_PLL_VCO_RATE_T */
#define BCM56780_A0_LRD_PFC_DEADLOCK_RECOVERY_ACTION_T_DATA (bcm56780_a0_lrd_enum_type + 60) /* enum PFC_DEADLOCK_RECOVERY_ACTION_T */
#define BCM56780_A0_LRD_PKT_PRI_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 61) /* enum PKT_PRI_TYPE_T */
#define BCM56780_A0_LRD_POLICY_SEL_T_DATA (bcm56780_a0_lrd_enum_type + 62) /* enum POLICY_SEL_T */
#define BCM56780_A0_LRD_PORT_SYSTEM_DESTINATION_INDEX_SELECT_T_DATA (bcm56780_a0_lrd_enum_type + 63) /* enum PORT_SYSTEM_DESTINATION_INDEX_SELECT_T */
#define BCM56780_A0_LRD_PTID_T_DATA (bcm56780_a0_lrd_enum_type + 64) /* enum PTID_T */
#define BCM56780_A0_LRD_SER_BLK_KEY_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 65) /* enum SER_BLK_KEY_TYPE_T */
#define BCM56780_A0_LRD_SER_BLK_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 66) /* enum SER_BLK_TYPE_T */
#define BCM56780_A0_LRD_SER_CHECK_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 67) /* enum SER_CHECK_TYPE_T */
#define BCM56780_A0_LRD_SER_ERROR_BIT_NUM_T_DATA (bcm56780_a0_lrd_enum_type + 68) /* enum SER_ERROR_BIT_NUM_T */
#define BCM56780_A0_LRD_SER_ERROR_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 69) /* enum SER_ERROR_TYPE_T */
#define BCM56780_A0_LRD_SER_INSTRUCTION_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 70) /* enum SER_INSTRUCTION_TYPE_T */
#define BCM56780_A0_LRD_SER_MEM_SCAN_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 71) /* enum SER_MEM_SCAN_MODE_T */
#define BCM56780_A0_LRD_SER_MEM_SCAN_STATUS_T_DATA (bcm56780_a0_lrd_enum_type + 72) /* enum SER_MEM_SCAN_STATUS_T */
#define BCM56780_A0_LRD_SER_RECOVERY_KEY_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 73) /* enum SER_RECOVERY_KEY_TYPE_T */
#define BCM56780_A0_LRD_SER_RECOVERY_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 74) /* enum SER_RECOVERY_TYPE_T */
#define BCM56780_A0_LRD_SER_VALIDATE_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 75) /* enum SER_VALIDATE_TYPE_T */
#define BCM56780_A0_LRD_STG_STATE_T_DATA (bcm56780_a0_lrd_enum_type + 76) /* enum STG_STATE_T */
#define BCM56780_A0_LRD_SYNCE_CLK_DIVISOR_T_DATA (bcm56780_a0_lrd_enum_type + 77) /* enum SYNCE_CLK_DIVISOR_T */
#define BCM56780_A0_LRD_SYNCE_CLK_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 78) /* enum SYNCE_CLK_TYPE_T */
#define BCM56780_A0_LRD_TM_CPU_SCHED_NODE_T_DATA (bcm56780_a0_lrd_enum_type + 79) /* enum TM_CPU_SCHED_NODE_T */
#define BCM56780_A0_LRD_TM_CUT_THROUGH_CLASS_T_DATA (bcm56780_a0_lrd_enum_type + 80) /* enum TM_CUT_THROUGH_CLASS_T */
#define BCM56780_A0_LRD_TM_ING_THD_MIN_T_DATA (bcm56780_a0_lrd_enum_type + 81) /* enum TM_ING_THD_MIN_T */
#define BCM56780_A0_LRD_TM_PERCENTAGE_VALUE_T_DATA (bcm56780_a0_lrd_enum_type + 82) /* enum TM_PERCENTAGE_VALUE_T */
#define BCM56780_A0_LRD_TM_PFC_DEADLOCK_DETECTION_TIMER_UNIT_T_DATA (bcm56780_a0_lrd_enum_type + 83) /* enum TM_PFC_DEADLOCK_DETECTION_TIMER_UNIT_T */
#define BCM56780_A0_LRD_TM_SCHED_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 84) /* enum TM_SCHED_MODE_T */
#define BCM56780_A0_LRD_TM_SCHED_NODE_T_DATA (bcm56780_a0_lrd_enum_type + 85) /* enum TM_SCHED_NODE_T */
#define BCM56780_A0_LRD_TM_THD_ALPHA_VALUE_T_DATA (bcm56780_a0_lrd_enum_type + 86) /* enum TM_THD_ALPHA_VALUE_T */
#define BCM56780_A0_LRD_TM_THD_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 87) /* enum TM_THD_MODE_T */
#define BCM56780_A0_LRD_TM_WRED_DROP_PERCENTAGE_T_DATA (bcm56780_a0_lrd_enum_type + 88) /* enum TM_WRED_DROP_PERCENTAGE_T */
#define BCM56780_A0_LRD_TM_WRED_JITTER_T_DATA (bcm56780_a0_lrd_enum_type + 89) /* enum TM_WRED_JITTER_T */
#define BCM56780_A0_LRD_TM_WRED_TIME_DOMAIN_T_DATA (bcm56780_a0_lrd_enum_type + 90) /* enum TM_WRED_TIME_DOMAIN_T */
#define BCM56780_A0_LRD_TRUNK_HASH_FLOW_ID_SRC_T_DATA (bcm56780_a0_lrd_enum_type + 91) /* enum TRUNK_HASH_FLOW_ID_SRC_T */
#define BCM56780_A0_LRD_TRUNK_LB_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 92) /* enum TRUNK_LB_MODE_T */
#define BCM56780_A0_LRD_TRUNK_VP_WEIGHTED_SIZE_T_DATA (bcm56780_a0_lrd_enum_type + 93) /* enum TRUNK_VP_WEIGHTED_SIZE_T */
#define BCM56780_A0_LRD_TS_CF_UPDATE_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 94) /* enum TS_CF_UPDATE_MODE_T */
#define BCM56780_A0_LRD_TS_IEEE1588_VERSION_T_DATA (bcm56780_a0_lrd_enum_type + 95) /* enum TS_IEEE1588_VERSION_T */
#define BCM56780_A0_LRD_TS_TIMESTAMPING_MODE_T_DATA (bcm56780_a0_lrd_enum_type + 96) /* enum TS_TIMESTAMPING_MODE_T */
#define BCM56780_A0_LRD_VLAN_TAG_TYPE_T_DATA (bcm56780_a0_lrd_enum_type + 97) /* enum VLAN_TAG_TYPE_T */
#define BCM56780_A0_LRD_ENUM_TYPE_COUNT 98
extern const bcmltd_enum_type_t bcm56780_a0_lrd_enum_type[BCM56780_A0_LRD_ENUM_TYPE_COUNT];
extern bcmltd_enum_by_type_t bcm56780_a0_lrd_enum_by_type;
#endif /* DOXYGEN_IGNORE_AUTOGEN */
#endif /* BCM56780_A0_LRD_ENUMPOOL_H */
