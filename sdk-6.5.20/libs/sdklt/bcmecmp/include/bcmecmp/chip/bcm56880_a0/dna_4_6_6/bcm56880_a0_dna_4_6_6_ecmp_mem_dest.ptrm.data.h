/*******************************************************************************
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated by c-struct-gen from NPL ECMP MEMBER data files.
 *
 * Tool: $SDK/INTERNAL/fltg/bin/c-struct-gen
 *
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

static const bcmecmp_member_field_info_t bcm56880_a0_dna_4_6_6_ecmp_mem_dest_flds_mem0[4];
static const bcmecmp_member_field_info_t bcm56880_a0_dna_4_6_6_ecmp_mem_dest_flds_mem1[3];
static const bcmecmp_member_info_t bcm56880_a0_dna_4_6_6_ecmp_mem_dest_member0_info;
static const bcmecmp_member_info_t bcm56880_a0_dna_4_6_6_ecmp_mem_dest_member1_info;
static const uint32_t bcm56880_a0_dna_4_6_6_ecmp_mem_dest_mem0[2];
static const uint32_t bcm56880_a0_dna_4_6_6_ecmp_mem_dest_mem1[2];

static const bcmecmp_member_field_info_t bcm56880_a0_dna_4_6_6_ecmp_mem_dest_flds_mem0[4] = {
    {
        .end_bit = 48,
        .grp_fld = BCM56880_A0_DNA_4_6_6_ECMP_MEMBER0t_NHOP_INDEX_1f,
        .mbr_fld = DATAf,
        .start_bit = 33,
    },
    {
        .end_bit = 56,
        .grp_fld = BCM56880_A0_DNA_4_6_6_ECMP_MEMBER0t_ECMP_AND_PROT_SWT_SFC_PROFILE_INDEXf,
        .mbr_fld = DATAf,
        .start_bit = 53,
    },
    {
        .end_bit = 16,
        .grp_fld = BCM56880_A0_DNA_4_6_6_ECMP_MEMBER0t_DVPf,
        .mbr_fld = DATAf,
        .start_bit = 1,
    },
    {
        .end_bit = 32,
        .grp_fld = BCM56880_A0_DNA_4_6_6_ECMP_MEMBER0t_NHOP_2_OR_ECMP_GROUP_INDEX_1f,
        .mbr_fld = DATAf,
        .start_bit = 17,
    },
};
static const bcmecmp_member_field_info_t bcm56880_a0_dna_4_6_6_ecmp_mem_dest_flds_mem1[3] = {
    {
        .end_bit = 39,
        .grp_fld = BCM56880_A0_DNA_4_6_6_ECMP_MEMBER1t_STRENGTH_PROFILE_INDEXf,
        .mbr_fld = DATAf,
        .start_bit = 35,
    },
    {
        .end_bit = 34,
        .grp_fld = BCM56880_A0_DNA_4_6_6_ECMP_MEMBER1t_NHOP_INDEX_1f,
        .mbr_fld = DATAf,
        .start_bit = 19,
    },
    {
        .end_bit = 18,
        .grp_fld = BCM56880_A0_DNA_4_6_6_ECMP_MEMBER1t_NHOP_INDEX_2f,
        .mbr_fld = DATAf,
        .start_bit = 3,
    },
};
static const bcmecmp_member_info_t bcm56880_a0_dna_4_6_6_ecmp_mem_dest_member0_info = {
    .flds =     bcm56880_a0_dna_4_6_6_ecmp_mem_dest_flds_mem0,
    .flds_count = 4,/* implicit length assignment */
    .grp_tbl = BCM56880_A0_DNA_4_6_6_ECMP_MEMBER0t,
    .mbr_tbl =     bcm56880_a0_dna_4_6_6_ecmp_mem_dest_mem0,
    .mbr_tbl_count = 2,/* implicit length assignment */
};
static const bcmecmp_member_info_t bcm56880_a0_dna_4_6_6_ecmp_mem_dest_member1_info = {
    .flds =     bcm56880_a0_dna_4_6_6_ecmp_mem_dest_flds_mem1,
    .flds_count = 3,/* implicit length assignment */
    .grp_tbl = BCM56880_A0_DNA_4_6_6_ECMP_MEMBER1t,
    .mbr_tbl =     bcm56880_a0_dna_4_6_6_ecmp_mem_dest_mem1,
    .mbr_tbl_count = 2,/* implicit length assignment */
};
static const uint32_t bcm56880_a0_dna_4_6_6_ecmp_mem_dest_mem0[2] = {
    MEMDB_IFTA110_MEM0m,
    MEMDB_IFTA110_MEM1m,
};
static const uint32_t bcm56880_a0_dna_4_6_6_ecmp_mem_dest_mem1[2] = {
    MEMDB_IFTA120_MEM0m,
    MEMDB_IFTA120_MEM1m,
};

