/*
 *         
 * 
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 *         
 *     
 * DO NOT EDIT THIS FILE!
 */

#ifndef _BLACKHAWK7_V1L8P1_DIAGNOSTICS_H__H_
#define _BLACKHAWK7_V1L8P1_DIAGNOSTICS_H__H_

#include <phymod/phymod_definitions.h>
/*set\get PRBS configuration*/
int blackhawk7_v1l8p1_phy_prbs_config_set(const phymod_phy_access_t* phy, uint32_t flags , const phymod_prbs_t* prbs);
int blackhawk7_v1l8p1_phy_prbs_config_get(const phymod_phy_access_t* phy, uint32_t flags , phymod_prbs_t* prbs);

/*Set\get PRBS enable state*/
int blackhawk7_v1l8p1_phy_prbs_enable_set(const phymod_phy_access_t* phy, uint32_t flags , uint32_t enable);
int blackhawk7_v1l8p1_phy_prbs_enable_get(const phymod_phy_access_t* phy, uint32_t flags , uint32_t* enable);

/*Get PRBS Status*/
int blackhawk7_v1l8p1_phy_prbs_status_get(const phymod_phy_access_t* phy, uint32_t flags, phymod_prbs_status_t* prbs_status);

/*Set\get pattern state*/
int blackhawk7_v1l8p1_phy_pattern_config_set(const phymod_phy_access_t* phy, const phymod_pattern_t* pattern);
int blackhawk7_v1l8p1_phy_pattern_config_get(const phymod_phy_access_t* phy, phymod_pattern_t* pattern);

/*Set\get pattern state*/
int blackhawk7_v1l8p1_phy_pattern_enable_set(const phymod_phy_access_t* phy, uint32_t enable, const phymod_pattern_t* pattern);
int blackhawk7_v1l8p1_phy_pattern_enable_get(const phymod_phy_access_t* phy, uint32_t* enable);

/*Get phy diagnostics information*/
int blackhawk7_v1l8p1_phy_pmd_info_dump(const phymod_phy_access_t* phy, const char* type);

/*Display eyescan information*/
int blackhawk7_v1l8p1_phy_eyescan_run(const phymod_phy_access_t* phy, uint32_t flags, phymod_eyescan_mode_t mode, const phymod_phy_eyescan_options_t* eyescan_options);

/*PAM4 tx pattern set/get*/
int blackhawk7_v1l8p1_phy_PAM4_tx_pattern_enable_set(const phymod_phy_access_t* phy, phymod_PAM4_tx_pattern_t pattern_type, uint32_t enable);
int blackhawk7_v1l8p1_phy_PAM4_tx_pattern_enable_get(const phymod_phy_access_t* phy, phymod_PAM4_tx_pattern_t pattern_type, uint32_t* enable);

/* BER Projection*/
int blackhawk7_v1l8p1_phy_ber_proj(const phymod_phy_access_t* phy, phymod_ber_proj_mode_t mode, const phymod_phy_ber_proj_options_t* options);

/* fast BER Projection*/
int blackhawk7_v1l8p1_phy_fast_ber_proj_get(const phymod_phy_access_t* phy, uint32_t* ber_proj_data);

/* Link Channel Analysis Tool.*/
int blackhawk7_v1l8p1_phy_linkcat(const phymod_phy_access_t* phy, phymod_linkCAT_op_mode_t mode);

/* set/get pmd debug level */
int blackhawk7_v1l8p1_phy_pmd_lane_diag_debug_level_set(const phymod_phy_access_t* phy, uint32_t level);
int blackhawk7_v1l8p1_phy_pmd_lane_diag_debug_level_get(const phymod_phy_access_t* phy, uint32_t* level);

#endif /*_BLACKHAWK7_V1L8P1_DIAGNOSTICS_H_*/
