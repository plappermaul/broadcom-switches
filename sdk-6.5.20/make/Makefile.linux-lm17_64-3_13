# $Id: Makefile.linux-gtr-2_6,v 1.5 Broadcom SDK $
# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
# 
# Copyright 2007-2020 Broadcom Inc. All rights reserved.

# Specify the KERNEL VERSION  you want to use for building SDK.
ifeq (,$(KERN_VER))
KERN_VER=3.13.0
endif

KERNDIR ?= /lib/modules/$(shell uname -r)/build

# Default Linux include directory
ifeq (,$(LINUX_INCLUDE))
LINUX_INCLUDE := $(KERNDIR)/include
endif

# Extra variables.
EXTRA_CFLAGS = -D"KBUILD_STR(s)=\#s" $(basename_flags) $(modname_flags) 

comma = ,
basetarget = $(basename $(notdir $@))
modname = $(basetarget)

name-fix = $(subst $(comma),_,$(subst -,_,$1))
basename_flags = -D"KBUILD_BASENAME=KBUILD_STR($(call name-fix,$(basetarget)))"
modname_flags  = $(if $(filter 1,$(words $(modname))),\
-D"KBUILD_MODNAME=KBUILD_STR($(call name-fix,$(modname)))")

ENDIAN = LE_HOST=1
CFGFLAGS += -D$(ENDIAN) 
CFGFLAGS += -DSYS_BE_PIO=0 -DSYS_BE_PACKET=0 -DSYS_BE_OTHER=0
CFGFLAGS += -DBCM_PLATFORM_STRING=\"X86_64\"
CFGFLAGS += -DLONGS_ARE_64BITS
CFGFLAGS += -DPTRS_ARE_64BITS
CFGFLAGS += -DSAL_SPL_LOCK_ON_IRQ
CFGFLAGS += -DSAL_BDE_DMA_MEM_DEFAULT=16
CFGFLAGS += -DSAL_BDE_CACHE_DMA_MEM
CFGFLAGS += -Wno-unused-result

# Extra variables.
EXTRA_CFLAGS = -D"KBUILD_STR(s)=\#s" $(basename_flags) $(modname_flags)

# Default architecture
ifeq (,$(ARCH))
ARCH = $(shell uname -p)
ifneq (x86_64,$(ARCH))
ARCH = i386
endif
endif

KBUILD_VERBOSE = 1

export ARCH KBUILD_VERBOSE KERNDIR

ifdef DPP_CHIPS
CFLAGS += -DDUNE_BCM -D__DUNE_WRX_BCM_CPU__  -D__DUNE_LINUX_BCM_CPU_PCP_DMA__
CFGFLAGS += -DSOC_CM_FUNCTION
endif

ifdef DFE_CHIPS
CFLAGS += -DDUNE_BCM -D__DUNE_WRX_BCM_CPU__ 
CFGFLAGS += -DSOC_CM_FUNCTION
endif

ifdef SHADOW_PLX
CFLAGS += -DBCM_PLX9656_LOCAL_BUS -DBDE_LINUX_NON_INTERRUPTIBLE -DSHADOW_SVK
endif
CFLAGS += -Wno-error=unused-value
CFLAGS += -Wno-error=unused-but-set-variable
CFLAGS += -Wno-error=unused-function
CFLAGS += -Wno-error=uninitialized

ifeq (,$(KFLAGS))
KFLAGS := -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m64 -mno-mmx -mno-sse -mpreferred-stack-boundary=4 -mtune=generic -mno-red-zone -mcmodel=kernel -funit-at-a-time -maccumulate-outgoing-args -fstack-protector -DCONFIG_X86_X32_ABI -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_FXSAVEQ=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=4096 -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -DCC_USING_FENTRY -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes 

KFLAGS += -I$(KERNDIR)/arch/x86/include
KFLAGS += -I$(KERNDIR)/arch/x86/include/generated
KFLAGS += -I$(KERNDIR)/include
KFLAGS += -I$(KERNDIR)/arch/x86/include/uapi
KFLAGS += -I$(KERNDIR)/arch/x86/include/generated/uapi
KFLAGS += -include $(KERNDIR)/include/linux/kconfig.h
endif

ifneq ($(targetplat),user)
include ${SDK}/make/Makefile.linux-kernel-3_13
endif
