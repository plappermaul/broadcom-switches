# $Id: Make.targets,v 1.336 2013/07/16 02:21:49 xueming Exp $
# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
# 
# Copyright 2007-2020 Broadcom Inc. All rights reserved.
#
# Included from Make.config to define build targets, including
# optional ones requested in CFGFLAGS in the platform Makefile.f

#
# Driver Libraries
#
#   These are the required libraries to use the driver by itself,
#   without diagnostics or tests, including the SAL core.
#

ifeq ($(LINUX_MAKE_SHARED_LIB),1)
libext = so.$(SHAREDLIBVER)
else
libext = a
endif

BCM_LIB = libbcm.$(libext)
ifneq (,$(findstring -DINCLUDE_PLP_IMACSEC,$(CFGFLAGS)))
BCM_LIB += lib_plp_secy.$(libext)
BCM_LIB += lib_imacsec.$(libext)
endif
ifneq (,$(findstring -DBCM_RPC_SUPPORT,$(CFGFLAGS)))
BCM_LIB += libbcm_rpc.$(libext)
BCM_LIB += libbcm_compat.$(libext)
endif
ifneq (,$(findstring -DBCM_TOMAHAWK3_SUPPORT,$(CFGFLAGS)))
BCM_LIB += libbcm_th3new.$(libext)
endif
ifneq (,$(findstring -DBCM_ESW_SUPPORT,$(CFGFLAGS)))
BCM_LIB += libbcm_esw.$(libext)
endif
ifneq (,$(findstring -DBCM_SHADOW_SUPPORT,$(CFGFLAGS)))
BCM_LIB += libbcm_shadow.$(libext)
endif
ifneq (,$(findstring -DBCM_PETRA_SUPPORT,$(CFGFLAGS)))
BCM_LIB += libbcm_dpp.$(libext)
endif
ifneq (,$(findstring -DBCM_DFE_SUPPORT,$(CFGFLAGS)))
BCM_LIB += libbcm_dfe.$(libext)
endif
ifneq (,$(findstring -DBCM_LTSW_SUPPORT,$(CFGFLAGS)))
BCM_LIB += libbcm_ltsw.$(libext)
endif

ifneq (,$(findstring -DBCM_DNX_SUPPORT,$(CFGFLAGS)))
BCMDNX_LIB =      \
    libbcm_dnxtime.$(libext) \
    libbcm_dnxvlan.$(libext) \
    libbcm_dnxsrv6.$(libext) \
    libbcm_dnxfabric.$(libext) \
    libbcm_dnxfailover.$(libext) \
    libbcm_dnxmirror.$(libext) \
    libbcm_dnxdnx_unavail.$(libext) \
    libbcm_dnxmulticast.$(libext) \
    libbcm_dnxspb.$(libext) \
    libbcm_dnxdram.$(libext) \
    libbcm_dnxdramhbmc.$(libext) \
    libbcm_dnxdramgddr6.$(libext) \
    libbcm_dnxdrambuffers.$(libext) \
    libbcm_dnxbier.$(libext) \
    libbcm_dnxstat.$(libext) \
    libbcm_dnxstatcrps.$(libext) \
    libbcm_dnxstatstif.$(libext) \
    libbcm_dnxstatmib.$(libext) \
    libbcm_dnxpolicer.$(libext) \
    libbcm_dnxptp.$(libext) \
    libbcm_dnxcosq.$(libext) \
    libbcm_dnxcosqscheduler.$(libext) \
    libbcm_dnxcosqingress.$(libext) \
    libbcm_dnxcosqlatency.$(libext) \
    libbcm_dnxcosqegress.$(libext) \
    libbcm_dnxcosqflow_control.$(libext) \
    libbcm_dnxipmc.$(libext) \
    libbcm_dnxl3.$(libext) \
    libmdb.$(libext) \
    libbcm_dnxtrunk.$(libext) \
    libbcm_dnxgtimer.$(libext) \
    libbcm_dnxbfd.$(libext) \
    libbcm_dnxcmn.$(libext) \
    libbcm_dnxinit.$(libext) \
    libbcm_dnxinit_auto_generated.$(libext) \
    libbcm_dnxinstru.$(libext) \
    libbcm_dnxalgoinstru.$(libext) \
    libbcm_dnxalgo.$(libext) \
    libbcm_dnxtune.$(libext) \
    libbcm_dnxl2.$(libext) \
    libbcm_dnxlif.$(libext) \
    libbcm_dnxoam.$(libext) \
    libbcm_dnxsat.$(libext) \
    libbcm_dnxport.$(libext) \
    libbcm_dnxport_imb.$(libext) \
    libbcm_dnxport_flexecore.$(libext) \
    libbcm_dnxrx.$(libext) \
    libbcm_dnxtx.$(libext) \
    libbcm_dnxstg.$(libext) \
    libbcm_dnxmpls.$(libext) \
    libbcm_dnxmpls_port.$(libext) \
    libbcm_dnxmpls_l2vpn.$(libext) \
    libbcm_dnxstk.$(libext) \
    libbcm_dnxqos.$(libext) \
    libbcm_dnxknet.$(libext) \
    libbcm_dnxalgomulticast.$(libext) \
    libbcm_dnxalgofailover.$(libext) \
    libbcm_dnxalgol2.$(libext) \
    libbcm_dnxalgol3.$(libext) \
    libbcm_dnxalgosat.$(libext) \
    libbcm_dnxalgostg.$(libext) \
    libbcm_dnxalgoppmc.$(libext) \
    libbcm_dnxalgolif.$(libext) \
    libbcm_dnxalgoport_pp.$(libext) \
    libbcm_dnxalgores.$(libext) \
    libbcm_dnxalgolane_map.$(libext) \
    libbcm_dnxalgosynce.$(libext) \
    libbcm_dnxalgotemplate.$(libext) \
    libbcm_dnxalgoport.$(libext) \
    libbcm_dnxalgorx.$(libext) \
    libbcm_dnxalgocrps.$(libext) \
    libbcm_dnxalgoecgm.$(libext) \
    libbcm_dnxalgoipq.$(libext) \
    libbcm_dnxalgoconsistenthashing.$(libext) \
    libbcm_dnxalgotrunk.$(libext) \
    libbcm_dnxalgotunnel.$(libext) \
    libbcm_dnxalgocal.$(libext) \
    libbcm_dnxalgosch.$(libext) \
    libbcm_dnxalgoegq.$(libext) \
    libbcm_dnxswitch.$(libext) \
    libbcm_dnxvswitch.$(libext) \
    libbcm_dnxfield.$(libext) \
    libbcm_dnxfieldtcam.$(libext) \
    libbcm_dnxfieldmap.$(libext) \
    libbcm_dnxfieldmap_auto_generated.$(libext) \
    libbcm_dnxalgofield.$(libext) \
    libbcm_dnxkbp.$(libext) \
    libbcm_dnxkbp_autogenerated.$(libext) \
    libbcm_dnxsynce.$(libext) \
    libbcm_dnxtunnel.$(libext) \
    libbcm_dnxvxlan.$(libext) \
    libbcm_dnxalgoqos.$(libext) \
    libbcm_dnxalgorate.$(libext) \
    libbcm_dnxalgompls.$(libext) \
    libbcm_dnxalgovlan.$(libext) \
    libbcm_dnxalgobfd.$(libext) \
    libbcm_dnxextender.$(libext) \
    libbcm_dnxalgooam.$(libext) \
    libbcm_dnxalgostatpp.$(libext) \
    libbcm_dnxalgoptp.$(libext) \
    libbcm_dnxalgooamp.$(libext) \
    libbcm_dnxalgoflexe_general.$(libext) \
    libbcm_dnxalgoflexe_core.$(libext) \
    libbcm_dnxalgoswstate.$(libext) \
    libbcm_dnxalgoswstate_auto_generated.$(libext) \
    libbcm_dnxpvt.$(libext) \
    libbcm_dnxinterrupt.$(libext) \
    libbcm_dnxlink.$(libext) \
    libbcm_dnxtdm.$(libext) \
    libbcm_dnxaacl.$(libext) \
    libbcm_dnxppp.$(libext) \
    libbcm_dnxsec.$(libext) \
    libbcm_dnxflow.$(libext)
endif

ifneq (,$(findstring -DBCM_DNXF_SUPPORT,$(CFGFLAGS)))
# once sub directories are added to src/bcm/dnxf/ add them here in the same way that they were added to DNX
BCMDNXF_LIB =	\
    libbcm_dnxf.$(libext) \
    libbcm_dnxftune.$(libext)
endif

ifdef BCM_5675_A0
BCM_LIB_HERC = libherc.$(libext)
endif

ifdef BCM_56504_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
endif

ifdef BCM_56504_B0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
endif

ifdef BCM_56304_B0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
endif

ifdef BCM_56102_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
endif

ifdef BCM_56314_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
endif

ifdef BCM_56112_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
endif

ifdef BCM_56580_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
endif

ifdef BCM_56700_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_HERC = libherc.$(libext)
endif

ifdef BCM_56800_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
endif

ifdef BCM_56218_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_RAPTOR = libraptor.$(libext)
endif

ifdef BCM_56514_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
endif

ifdef BCM_56624_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
endif

ifdef BCM_56680_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
endif

ifdef BCM_56624_B0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
endif

ifdef BCM_56680_B0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
endif

ifdef BCM_56224_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_RAPTOR = libraptor.$(libext)
endif

ifdef BCM_56224_B0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_RAPTOR = libraptor.$(libext)
endif

ifdef BCM_53314_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_RAPTOR = libraptor.$(libext)
endif

ifdef BCM_53324_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_RAPTOR = libraptor.$(libext)
endif

ifdef BCM_56820_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
endif

ifdef BCM_56725_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_CONQUEROR = libconqueror.$(libext)
endif

ifdef BCM_56634_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
endif

ifdef BCM_56634_B0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
endif

ifdef BCM_56524_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
endif

ifdef BCM_56524_B0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
endif

ifdef BCM_56685_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
endif

ifdef BCM_56685_B0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
endif

ifdef BCM_56334_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_ENDURO = libenduro.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
endif

ifdef BCM_56334_B0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_ENDURO = libenduro.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
endif

ifdef BCM_56142_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_ENDURO = libenduro.$(libext)
BCM_LIB_HURRICANE = libhurricane.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
endif

ifdef BCM_56150_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
BCM_LIB_ENDURO = libenduro.$(libext)
BCM_LIB_HURRICANE = libhurricane.$(libext)
BCM_LIB_HURRICANE2 = libhurricane2.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
endif

ifdef BCM_53400_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
BCM_LIB_ENDURO = libenduro.$(libext)
BCM_LIB_HURRICANE = libhurricane.$(libext)
BCM_LIB_HURRICANE2 = libhurricane2.$(libext)
BCM_LIB_GREYHOUND = libgreyhound.$(libext)
SOC_LIB_GREYHOUND = libsoc_greyhound.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
endif

ifdef BCM_56160_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
BCM_LIB_ENDURO = libenduro.$(libext)
BCM_LIB_HURRICANE = libhurricane.$(libext)
BCM_LIB_HURRICANE2 = libhurricane2.$(libext)
BCM_LIB_GREYHOUND = libgreyhound.$(libext)
BCM_LIB_HURRICANE3 = libhurricane3.$(libext)
SOC_LIB_GREYHOUND = libsoc_greyhound.$(libext)
SOC_LIB_HURRICANE3 = libsoc_hurricane3.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_FLOWCNT = libflowcnt.$(libext)
endif

ifdef BCM_53540_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
BCM_LIB_ENDURO = libenduro.$(libext)
BCM_LIB_HURRICANE = libhurricane.$(libext)
BCM_LIB_HURRICANE2 = libhurricane2.$(libext)
BCM_LIB_GREYHOUND = libgreyhound.$(libext)
BCM_LIB_HURRICANE3 = libhurricane3.$(libext)
SOC_LIB_GREYHOUND = libsoc_greyhound.$(libext)
SOC_LIB_HURRICANE3 = libsoc_hurricane3.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_FLOWCNT = libflowcnt.$(libext)
endif

ifdef BCM_53570_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
BCM_LIB_ENDURO = libenduro.$(libext)
BCM_LIB_HURRICANE = libhurricane.$(libext)
BCM_LIB_HURRICANE2 = libhurricane2.$(libext)
BCM_LIB_GREYHOUND = libgreyhound.$(libext)
BCM_LIB_HURRICANE3 = libhurricane3.$(libext)
BCM_LIB_GREYHOUND2 = libgreyhound2.$(libext)
SOC_LIB_GREYHOUND = libsoc_greyhound.$(libext)
SOC_LIB_HURRICANE3 = libsoc_hurricane3.$(libext)
SOC_LIB_GREYHOUND2 = libsoc_greyhound2.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_GREYHOUND2 = libsoc_tdm_gh2.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_FLOWCNT = libflowcnt.$(libext)
endif

ifdef BCM_53570_B0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
BCM_LIB_ENDURO = libenduro.$(libext)
BCM_LIB_HURRICANE = libhurricane.$(libext)
BCM_LIB_HURRICANE2 = libhurricane2.$(libext)
BCM_LIB_GREYHOUND = libgreyhound.$(libext)
BCM_LIB_HURRICANE3 = libhurricane3.$(libext)
BCM_LIB_GREYHOUND2 = libgreyhound2.$(libext)
SOC_LIB_GREYHOUND = libsoc_greyhound.$(libext)
SOC_LIB_HURRICANE3 = libsoc_hurricane3.$(libext)
SOC_LIB_GREYHOUND2 = libsoc_greyhound2.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_GREYHOUND2 = libsoc_tdm_gh2.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_FLOWCNT = libflowcnt.$(libext)
endif

ifdef BCM_56070_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
BCM_LIB_ENDURO = libenduro.$(libext)
BCM_LIB_HURRICANE = libhurricane.$(libext)
BCM_LIB_HURRICANE2 = libhurricane2.$(libext)
BCM_LIB_GREYHOUND = libgreyhound.$(libext)
BCM_LIB_HURRICANE3 = libhurricane3.$(libext)
BCM_LIB_GREYHOUND2 = libgreyhound2.$(libext)
SOC_LIB_GREYHOUND = libsoc_greyhound.$(libext)
SOC_LIB_HURRICANE3 = libsoc_hurricane3.$(libext)
SOC_LIB_GREYHOUND2 = libsoc_greyhound2.$(libext)
SOC_LIB_FIRELIGHT = libsoc_firelight.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_GREYHOUND2 = libsoc_tdm_gh2.$(libext)
SOC_LIB_TDM_FIRELIGHT = libsoc_tdm_fl.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_FLOWCNT = libflowcnt.$(libext)
endif

ifdef BCM_56840_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56840_B0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56850_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56960_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
BCM_LIB_TOMAHAWK = libtomahawk.$(libext)
SOC_LIB_TOMAHAWK = libsoc_tomahawk.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_TOMAHAWK = libsoc_tdm_th.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
BCM_LIB_ALPM2 = libalpm2.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56965_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
BCM_LIB_TOMAHAWK = libtomahawk.$(libext)
SOC_LIB_TOMAHAWK = libsoc_tomahawk.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_TOMAHAWK = libsoc_tdm_th.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
BCM_LIB_ALPM2 = libalpm2.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56980_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
BCM_LIB_TOMAHAWK = libtomahawk.$(libext)
SOC_LIB_TOMAHAWK = libsoc_tomahawk.$(libext)
BCM_LIB_TOMAHAWK3 = libtomahawk3.$(libext)
SOC_LIB_TOMAHAWK3 = libsoc_tomahawk3.$(libext)
SOC_LIB_TOMAHAWK3_INIT = libsoc_tomahawk3_init.$(libext)
SOC_LIB_TOMAHAWK3_FLEXPORT = libsoc_tomahawk3_flexport.$(libext)
SOC_LIB_TOMAHAWK3_TRAFFICMNGR = libsoc_tomahawk3_trafficmanager.$(libext)
BCM_LIB_ALPM2 = libalpm2.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_TOMAHAWK = libsoc_tdm_th.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
# TH2 specific  libraries for TH3
SOC_LIB_TDM_TOMAHAWK2 = libsoc_tdm_th2.$(libext)
BCM_LIB_TOMAHAWK2 = libtomahawk2.$(libext)
SOC_LIB_TOMAHAWK2 = libsoc_tomahawk2.$(libext)
SOC_LIB_FLEXPORT = libsoc_flexport.$(libext)
SOC_LIB_TOMAHAWK2_FLEXPORT = libsoc_tomahawk2_flexport.$(libext)
endif

ifdef BCM_56980_B0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
BCM_LIB_TOMAHAWK = libtomahawk.$(libext)
SOC_LIB_TOMAHAWK = libsoc_tomahawk.$(libext)
BCM_LIB_TOMAHAWK3 = libtomahawk3.$(libext)
SOC_LIB_TOMAHAWK3 = libsoc_tomahawk3.$(libext)
SOC_LIB_TOMAHAWK3_INIT = libsoc_tomahawk3_init.$(libext)
SOC_LIB_TOMAHAWK3_FLEXPORT = libsoc_tomahawk3_flexport.$(libext)
SOC_LIB_TOMAHAWK3_TRAFFICMNGR = libsoc_tomahawk3_trafficmanager.$(libext)
BCM_LIB_ALPM2 = libalpm2.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_TOMAHAWK = libsoc_tdm_th.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
# TH2 specific  libraries for TH3
SOC_LIB_TDM_TOMAHAWK2 = libsoc_tdm_th2.$(libext)
BCM_LIB_TOMAHAWK2 = libtomahawk2.$(libext)
SOC_LIB_TOMAHAWK2 = libsoc_tomahawk2.$(libext)
SOC_LIB_FLEXPORT = libsoc_flexport.$(libext)
SOC_LIB_TOMAHAWK2_FLEXPORT = libsoc_tomahawk2_flexport.$(libext)
endif

ifdef BCM_56970_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
BCM_LIB_TOMAHAWK = libtomahawk.$(libext)
SOC_LIB_TOMAHAWK = libsoc_tomahawk.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_TOMAHAWK = libsoc_tdm_th.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
SOC_LIB_TDM_TOMAHAWK2 = libsoc_tdm_th2.$(libext)
BCM_LIB_TOMAHAWK2 = libtomahawk2.$(libext)
SOC_LIB_TOMAHAWK2 = libsoc_tomahawk2.$(libext)
SOC_LIB_FLEXPORT = libsoc_flexport.$(libext)
SOC_LIB_TOMAHAWK2_FLEXPORT = libsoc_tomahawk2_flexport.$(libext)
BCM_LIB_ALPM2 = libalpm2.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56860_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
SOC_LIB_TRIDENT2P = libsoc_trident2p.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
BCM_LIB_TRIDENT2PLUS = libtrident2plus.$(libext)
BCM_LIB_TITAN2PLUS = libtitan2plus.$(libext)
endif

ifdef BCM_56560_A0
BCM_LIB_APACHE = libapache.$(libext)
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TRIDENT2PLUS = libtrident2plus.$(libext)
BCM_LIB_TITAN2PLUS = libtitan2plus.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_APACHE = libsoc_tdm_apache.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
SOC_LIB_TRIDENT2P = libsoc_trident2p.$(libext)
SOC_LIB_APACHE = libsoc_apache.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif
ifdef BCM_56670_C0
BCM_LIB_MONTEREY = libmonterey.$(libext)
BCM_LIB_APACHE = libapache.$(libext)
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TRIDENT2PLUS = libtrident2plus.$(libext)
BCM_LIB_TITAN2PLUS = libtitan2plus.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_MONTEREY = libsoc_tdm_monterey.$(libext)
SOC_LIB_TDM_APACHE = libsoc_tdm_apache.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
SOC_LIB_TRIDENT2P = libsoc_trident2p.$(libext)
SOC_LIB_APACHE = libsoc_apache.$(libext)
SOC_LIB_MONTEREY = libsoc_monterey.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif
ifdef BCM_56670_B0
BCM_LIB_MONTEREY = libmonterey.$(libext)
BCM_LIB_APACHE = libapache.$(libext)
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TRIDENT2PLUS = libtrident2plus.$(libext)
BCM_LIB_TITAN2PLUS = libtitan2plus.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_MONTEREY = libsoc_tdm_monterey.$(libext)
SOC_LIB_TDM_APACHE = libsoc_tdm_apache.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
SOC_LIB_TRIDENT2P = libsoc_trident2p.$(libext)
SOC_LIB_APACHE = libsoc_apache.$(libext)
SOC_LIB_MONTEREY = libsoc_monterey.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif
ifdef BCM_56670_A0
BCM_LIB_MONTEREY = libmonterey.$(libext)
BCM_LIB_APACHE = libapache.$(libext)
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TRIDENT2PLUS = libtrident2plus.$(libext)
BCM_LIB_TITAN2PLUS = libtitan2plus.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_MONTEREY = libsoc_tdm_monterey.$(libext)
SOC_LIB_TDM_APACHE = libsoc_tdm_apache.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
SOC_LIB_TRIDENT2P = libsoc_trident2p.$(libext)
SOC_LIB_APACHE = libsoc_apache.$(libext)
SOC_LIB_MONTEREY = libsoc_monterey.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56870_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TRIDENT2PLUS = libtrident2plus.$(libext)
BCM_LIB_TITAN2PLUS = libtitan2plus.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
BCM_LIB_TOMAHAWK = libtomahawk.$(libext)
SOC_LIB_TOMAHAWK = libsoc_tomahawk.$(libext)
BCM_LIB_TOMAHAWK2 = libtomahawk2.$(libext)
BCM_LIB_TRIDENT3 = libtrident3.$(libext)
SOC_LIB_TRIDENT3 = libsoc_trident3.$(libext)
SOC_LIB_TRIDENT2P = libsoc_trident2p.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_FLEXFLOW = libflexflow.$(libext)
BCM_LIB_ALPM2 = libalpm2.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_TRIDENT3 = libsoc_tdm_td3.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
SOC_LIB_TDM_TOMAHAWK = libsoc_tdm_th.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
SOC_LIB_FLEXPORT = libsoc_flexport.$(libext)
SOC_LIB_TRIDENT3_FLEXPORT = libsoc_trident3_flexport.$(libext)
endif


ifdef BCM_56470_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TRIDENT2PLUS = libtrident2plus.$(libext)
BCM_LIB_TITAN2PLUS = libtitan2plus.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
BCM_LIB_TOMAHAWK = libtomahawk.$(libext)
SOC_LIB_TOMAHAWK = libsoc_tomahawk.$(libext)
BCM_LIB_TOMAHAWK2 = libtomahawk2.$(libext)
BCM_LIB_TRIDENT3 = libtrident3.$(libext)
SOC_LIB_TRIDENT3 = libsoc_trident3.$(libext)
BCM_LIB_HURRICANE4 = libhurricane4.$(libext)
SOC_LIB_HURRICANE4 = libsoc_hurricane4.$(libext)
BCM_LIB_HELIX5 = libhelix5.$(libext)
SOC_LIB_HELIX5 = libsoc_helix5.$(libext)
BCM_LIB_FIREBOLT6 = libfirebolt6.$(libext)
SOC_LIB_FIREBOLT6 = libsoc_firebolt6.$(libext)
SOC_LIB_TRIDENT2P = libsoc_trident2p.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_FLEXFLOW = libflexflow.$(libext)
BCM_LIB_ALPM2 = libalpm2.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_TRIDENT3 = libsoc_tdm_td3.$(libext)
# TODO: HR4 add TDM and flexport LIB details
SOC_LIB_TDM_HELIX5 = libsoc_tdm_hx5.$(libext)
SOC_LIB_TDM_HURRICANE4 = libsoc_tdm_hr4.$(libext)
SOC_LIB_TDM_FIREBOLT6 = libsoc_tdm_fb6.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
SOC_LIB_TDM_TOMAHAWK = libsoc_tdm_th.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
SOC_LIB_FLEXPORT = libsoc_flexport.$(libext)
SOC_LIB_TRIDENT3_FLEXPORT = libsoc_trident3_flexport.$(libext)
BCM_LIB_FLOWTRACKER = libflowtracker.$(libext)
SOC_LIB_HURRICANE4_FLEXPORT = libsoc_hurricane4_flexport.$(libext)
SOC_LIB_HELIX5_FLEXPORT = libsoc_helix5_flexport.$(libext)
SOC_LIB_FIREBOLT6_FLEXPORT = libsoc_firebolt6_flexport.$(libext)
BCM_LIB_FIELDCOMP = libfieldcomp.$(libext)
endif

ifdef BCM_56275_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TRIDENT2PLUS = libtrident2plus.$(libext)
BCM_LIB_TITAN2PLUS = libtitan2plus.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
BCM_LIB_TOMAHAWK = libtomahawk.$(libext)
SOC_LIB_TOMAHAWK = libsoc_tomahawk.$(libext)
BCM_LIB_TOMAHAWK2 = libtomahawk2.$(libext)
BCM_LIB_TRIDENT3 = libtrident3.$(libext)
SOC_LIB_TRIDENT3 = libsoc_trident3.$(libext)
BCM_LIB_HURRICANE4 = libhurricane4.$(libext)
SOC_LIB_HURRICANE4 = libsoc_hurricane4.$(libext)
BCM_LIB_HELIX5 = libhelix5.$(libext)
SOC_LIB_HELIX5 = libsoc_helix5.$(libext)
BCM_LIB_HURRICANE4 = libhurricane4.$(libext)
SOC_LIB_HURRICANE4 = libsoc_hurricane4.$(libext)
SOC_LIB_TRIDENT2P = libsoc_trident2p.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_FLEXFLOW = libflexflow.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_TRIDENT3 = libsoc_tdm_td3.$(libext)
SOC_LIB_TDM_HELIX5 = libsoc_tdm_hx5.$(libext)
SOC_LIB_TDM_HURRICANE4 = libsoc_tdm_hr4.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
SOC_LIB_TDM_TOMAHAWK = libsoc_tdm_th.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
SOC_LIB_FLEXPORT = libsoc_flexport.$(libext)
SOC_LIB_TRIDENT3_FLEXPORT = libsoc_trident3_flexport.$(libext)
BCM_LIB_FLOWTRACKER = libflowtracker.$(libext)
SOC_LIB_HELIX5_FLEXPORT = libsoc_helix5_flexport.$(libext)
SOC_LIB_HURRICANE4_FLEXPORT = libsoc_hurricane4_flexport.$(libext)
endif

ifdef BCM_56370_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TRIDENT2PLUS = libtrident2plus.$(libext)
BCM_LIB_TITAN2PLUS = libtitan2plus.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
BCM_LIB_TOMAHAWK = libtomahawk.$(libext)
SOC_LIB_TOMAHAWK = libsoc_tomahawk.$(libext)
BCM_LIB_TOMAHAWK2 = libtomahawk2.$(libext)
BCM_LIB_TRIDENT3 = libtrident3.$(libext)
SOC_LIB_TRIDENT3 = libsoc_trident3.$(libext)
BCM_LIB_HELIX5 = libhelix5.$(libext)
SOC_LIB_HELIX5 = libsoc_helix5.$(libext)
SOC_LIB_TRIDENT2P = libsoc_trident2p.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_FLEXFLOW = libflexflow.$(libext)
BCM_LIB_ALPM2 = libalpm2.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_TRIDENT3 = libsoc_tdm_td3.$(libext)
SOC_LIB_TDM_HELIX5 = libsoc_tdm_hx5.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
SOC_LIB_TDM_TOMAHAWK = libsoc_tdm_th.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
SOC_LIB_FLEXPORT = libsoc_flexport.$(libext)
SOC_LIB_TRIDENT3_FLEXPORT = libsoc_trident3_flexport.$(libext)
BCM_LIB_FLOWTRACKER = libflowtracker.$(libext)
SOC_LIB_HELIX5_FLEXPORT = libsoc_helix5_flexport.$(libext)
endif

ifdef BCM_56770_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TRIDENT2PLUS = libtrident2plus.$(libext)
BCM_LIB_TITAN2PLUS = libtitan2plus.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
BCM_LIB_TOMAHAWK = libtomahawk.$(libext)
SOC_LIB_TOMAHAWK = libsoc_tomahawk.$(libext)
BCM_LIB_TOMAHAWK2 = libtomahawk2.$(libext)
BCM_LIB_TRIDENT3 = libtrident3.$(libext)
SOC_LIB_TRIDENT3 = libsoc_trident3.$(libext)
BCM_LIB_MAVERICK2 = libmaverick2.$(libext)
SOC_LIB_MAVERICK2 = libsoc_maverick2.$(libext)
SOC_LIB_TRIDENT2P = libsoc_trident2p.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_FLEXFLOW = libflexflow.$(libext)
BCM_LIB_ALPM2 = libalpm2.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_TRIDENT3 = libsoc_tdm_td3.$(libext)
SOC_LIB_TDM_MAVERICK2 = libsoc_tdm_mv2.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
SOC_LIB_TDM_TOMAHAWK = libsoc_tdm_th.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
SOC_LIB_FLEXPORT = libsoc_flexport.$(libext)
SOC_LIB_TRIDENT3_FLEXPORT = libsoc_trident3_flexport.$(libext)
SOC_LIB_MAVERICK2_FLEXPORT = libsoc_maverick2_flexport.$(libext)
endif

ifdef BCM_88732_A0
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_CONQUEROR = libconqueror.$(libext)
BCM_LIB_SHADOW = libbcm_shadow.$(libext)
endif

ifdef BCM_56640_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
BCM_LIB_REGEX = libbcm_regex.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56440_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_ENDURO  = libenduro.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_KATANA = libkatana.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_REGEX = libbcm_regex.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56450_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_ENDURO  = libenduro.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_KATANA = libkatana.$(libext)
BCM_LIB_KATANA2 = libkatana2.$(libext)
SOC_LIB_KATANA2 = libsoc_katana2.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_REGEX = libbcm_regex.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56260_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_ENDURO  = libenduro.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_KATANA = libkatana.$(libext)
BCM_LIB_KATANA2 = libkatana2.$(libext)
SOC_LIB_KATANA2 = libsoc_katana2.$(libext)
SOC_LIB_SABER2 = libsoc_saber2.$(libext)
BCM_LIB_SABER2 = libsaber2.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_REGEX = libbcm_regex.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56260_B0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_ENDURO  = libenduro.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_KATANA = libkatana.$(libext)
BCM_LIB_KATANA2 = libkatana2.$(libext)
SOC_LIB_KATANA2 = libsoc_katana2.$(libext)
SOC_LIB_SABER2 = libsoc_saber2.$(libext)
BCM_LIB_SABER2 = libsaber2.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_REGEX = libbcm_regex.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56270_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_ENDURO  = libenduro.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_KATANA = libkatana.$(libext)
BCM_LIB_KATANA2 = libkatana2.$(libext)
SOC_LIB_KATANA2 = libsoc_katana2.$(libext)
SOC_LIB_SABER2 = libsoc_saber2.$(libext)
BCM_LIB_SABER2 = libsaber2.$(libext)
SOC_LIB_METROLITE = libsoc_metrolite.$(libext)
BCM_LIB_METROLITE = libmetrolite.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_REGEX = libbcm_regex.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56340_A0
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
BCM_LIB_REGEX = libbcm_regex.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifdef BCM_56560_B0
BCM_LIB_APACHE = libapache.$(libext)
BCM_LIB_HERC = libherc.$(libext)
BCM_LIB_FIREBOLT = libfirebolt.$(libext)
BCM_LIB_BRADLEY = libbradley.$(libext)
BCM_LIB_HUMV = libhumv.$(libext)
BCM_LIB_SCORPION = libscorpion.$(libext)
BCM_LIB_TRX     = libtrx.$(libext)
BCM_LIB_TRIUMPH = libtriumph.$(libext)
BCM_LIB_TRIUMPH2 = libtriumph2.$(libext)
BCM_LIB_TRIUMPH3 = libtriumph3.$(libext)
SOC_LIB_TRIUMPH3 = libsoc_triumph3.$(libext)
BCM_LIB_TRIDENT = libtrident.$(libext)
BCM_LIB_TITAN = libtitan.$(libext)
BCM_LIB_TRIDENT2 = libtrident2.$(libext)
BCM_LIB_TRIDENT2PLUS = libtrident2plus.$(libext)
BCM_LIB_TITAN2PLUS = libtitan2plus.$(libext)
SOC_LIB_TDM = libsoc_tdm.$(libext)
SOC_LIB_TDM_CORE = libsoc_tdm_core.$(libext)
SOC_LIB_TDM_APACHE = libsoc_tdm_apache.$(libext)
SOC_LIB_TDM_TRIDENT2P = libsoc_tdm_td2p.$(libext)
BCM_LIB_TITAN2 = libtitan2.$(libext)
SOC_LIB_TRIDENT2 = libsoc_trident2.$(libext)
SOC_LIB_TRIDENT2P = libsoc_trident2p.$(libext)
SOC_LIB_APACHE = libsoc_apache.$(libext)
BCM_LIB_FLEXCTR = libflexctr.$(libext)
BCM_LIB_XGS4 = libxgs4.$(libext)
BCM_LIB_XGS5 = libxgs5.$(libext)
endif

ifneq (,$(findstring -DINCLUDE_PTP,$(CFGFLAGS)))
BCM_LIB_PTP_COMMON = libptp_common.$(libext)
BCM_LIB_PTP_DPP = libptp_dpp.$(libext)
BCM_LIB_PTP_ESW = libptp_esw.$(libext)
endif

ifdef BCM_88650_A0
BCM_LIB_ARAD = libsoc_dpp_arad_nif.$(libext)
BCM_LIB_ARAD += libsoc_dpp_port.$(libext)
BCM_LIB_ARAD += libsoc_dpp_arad.$(libext)
BCM_LIB_ARAD += libbcm_dpp_arad_pp.$(libext)
BCM_LIB_ARAD += libsoc_dpp_drc.$(libext)

endif

#ifdef BCM_88675_A0
BCM_LIB_JERICHO = libsoc_dpp_jer.$(libext) libsoc_dpp_jer_pp.$(libext)
#endif

ifdef BCM_88750_A0
BCM_LIB_88750 = libsoc_dfe.$(libext)
BCM_LIB_88750 += libsoc_dfe_cmn.$(libext)
BCM_LIB_88750 += libsoc_dfe_fe1600.$(libext)
endif

# INCLUDE_DNX_LIBS is used to add dnx libraries that are used by both DNX2 chips
ifdef DNX2_CHIPS
INCLUDE_DNX_LIBS = 1
export INCLUDE_DNX_LIBS
endif

ifdef BCM_88950_A0
BCM_LIB_88950 = libsoc_dfe.$(libext)
BCM_LIB_88950 += libsoc_dfe_cmn.$(libext)
BCM_LIB_88950 += libsoc_dfe_fe1600.$(libext)
BCM_LIB_88950 += libsoc_dfe_fe3200.$(libext)
endif

ifdef BUILD_XFLOW_MACSEC
# {
ifndef XFLOW_MACSEC_BLDDIR
# {
XFLOW_MACSEC_BLDDIR = $(BLDROOT)/libs/xflow_macsec
# }
endif

ifdef FEATURE_XFLOW_MACSEC
# {
BCM_LIB_XFLOW_MACSEC_ROOT = ${LIBDIR}

BCM_LIB_XFLOW_MACSEC = ${BCM_LIB_XFLOW_MACSEC_ROOT}/libcommon_xflow_macsec.$(libext)

ifdef INCLUDE_DNX_LIBS
# {
BCM_LIB_XFLOW_MACSEC += ${BCM_LIB_XFLOW_MACSEC_ROOT}/libdnx_xflow_macsec.$(libext)
# }
endif
ifdef ESW_CHIPS
# {
BCM_LIB_XFLOW_MACSEC += ${BCM_LIB_XFLOW_MACSEC_ROOT}/libesw_xflow_macsec.$(libext)
# }
endif

ifdef LTSW_CHIPS
# {
BCM_LIB_XFLOW_MACSEC += ${BCM_LIB_XFLOW_MACSEC_ROOT}/libltsw_xflow_macsec.$(libext)
# }
endif
# }
endif

DIAG_LIB_XFLOW_MACSEC  = ${BCM_LIB_XFLOW_MACSEC}
CORE_LIB_XFLOW_MACSEC  = ${BCM_LIB_XFLOW_MACSEC}

# }
else
# {

ifdef BUILD_MACSEC
# {
ifndef MACSEC_BLDDIR
# {
ifdef BLDCONFIG
# {
MACSEC_BLDDIR = ${SDK}/${SDKBUILD}/macsec/${BLDCONFIG}
else
MACSEC_BLDDIR = $(MACSEC_HOME)/$(SDKBUILD)
# }
endif
# }
endif

BCM_CMN_MACSEC = ${MACSEC_BLDDIR}/${targetbase}/${targetplat}/${platform}/libblmi.$(libext) \
                 ${MACSEC_BLDDIR}/${targetbase}/${targetplat}/${platform}/libphy84756.$(libext) \
                 ${MACSEC_BLDDIR}/${targetbase}/${targetplat}/${platform}/libdummyphy.$(libext) \
                 ${MACSEC_BLDDIR}/${targetbase}/${targetplat}/${platform}/libmac.$(libext)

MACSEC_LIBUTIL ?= libutil
BCM_LIB_MACSEC = ${MACSEC_BLDDIR}/${targetbase}/${targetplat}/${platform}/$(MACSEC_LIBUTIL).$(libext)
ifdef FEATURE_MACSEC
# {
BCM_LIB_MACSEC += ${MACSEC_BLDDIR}/${targetbase}/${targetplat}/${platform}/libbmacsec.$(libext)
BCM_LIB_MACSEC += ${MACSEC_BLDDIR}/${targetbase}/${targetplat}/${platform}/libcli.$(libext)
BCM_LIB_MACSEC += ${MACSEC_BLDDIR}/${targetbase}/${targetplat}/${platform}/libphy543xx.$(libext)
BCM_LIB_MACSEC += ${MACSEC_BLDDIR}/${targetbase}/${targetplat}/${platform}/libphy8729.$(libext)
BCM_LIB_MACSEC += ${MACSEC_BLDDIR}/${targetbase}/${targetplat}/${platform}/libphy84334.$(libext)
BCM_LIB_MACSEC += ${MACSEC_BLDDIR}/${targetbase}/${targetplat}/${platform}/libphy84749.$(libext)
# }
endif

DIAG_LIB_MACSEC  = ${BCM_LIB_MACSEC}

BCM_LIB_MACSEC  += ${BCM_CMN_MACSEC}
CORE_LIB_MACSEC  = ${BCM_LIB_MACSEC}
# }
endif
# }
endif

ifdef PHYMOD_EPIL_LIB_PATH
BCM_LIB_PHYMOD_EPIL += -Wl,--whole-archive $(foreach path,$(PHYMOD_EPIL_LIB_PATH), $(path)/build/${targetbase}/${targetplat}/${platform}/libphymodepil.a) -Wl,--no-whole-archive
endif
ifdef PHYMOD_EPDM_LIB_PATH
BCM_LIB_PHYMOD_EPDM = -Wl,--whole-archive $(PHYMOD_EPDM_LIB_PATH)/build/${targetbase}/${targetplat}/${platform}/libepdm.a -Wl,--no-whole-archive
endif
ifdef PHYMOD_LINKCAT_LIB_PATH
BCM_LIB_LINKCAT += $(foreach LIB, $(PHYMOD_LINKCAT_LIB_PATH), $(LIB)/build/${targetbase}/${targetplat}/${platform}/libLinkCAT.a)

endif



ifdef BUILD_PHYMOD
BCM_LIB_PHYMOD = libphymod.$(libext)
BCM_LIB_PHYMOD_BLD=$(addprefix ${LIBDIR}/,${BCM_LIB_PHYMOD})
endif

ifeq (1,$(PORTMOD_SUPPORT))
PORTMOD_LIBS = \
    libsoc_portmod_pms.$(libext) \
    libsoc_portmod.$(libext)
endif

ifeq (1,$(CPRIMOD_SUPPORT))
CPRIMOD_LIBS = \
    libsoc_cprimod_cpms.$(libext) \
    libsoc_cprimod.$(libext)
endif

ifdef BUILD_PCIEPHY
BCM_LIB_PCIEPHY = libpciephy.$(libext)
BCM_LIB_PCIEPHY_BLD=$(addprefix ${LIBDIR}/,${BCM_LIB_PCIEPHY})
endif

ifdef BUILD_FLEXE
BCM_LIB_FLEXE_STD = libflexe_core_std.$(libext)
BCM_LIB_FLEXE_STD_BLD=$(addprefix ${LIBDIR}/,${BCM_LIB_FLEXE_STD})
endif

ifdef BUILD_FLEXE_DBG
BCM_LIB_FLEXE_DBG = libflexe_core_dbg.$(libext)
BCM_LIB_FLEXE_DBG_BLD=$(addprefix ${LIBDIR}/,${BCM_LIB_FLEXE_DBG})
endif

ifdef ESW_CHIPS

ifneq (,$(findstring PKTIO,$(FEATURE_LIST)))
BCM_LIB_PKTIO += \
    libesw_pktio.$(libext) \
    libesw_pktio_cnet_cmicx.$(libext) \
    libesw_pktio_cnet_main.$(libext) \
    libesw_pktio_bcmpkt_buf.$(libext) \
    libesw_pktio_bcmpkt_dev.$(libext) \
    libesw_pktio_bcmpkt_gih.$(libext) \
    libesw_pktio_bcmpkt_higig3.$(libext) \
    libesw_pktio_bcmpkt_lbpmd.$(libext) \
    libesw_pktio_bcmpkt_net.$(libext) \
    libesw_pktio_bcmpkt_rxpmd.$(libext) \
    libesw_pktio_bcmpkt_socket.$(libext) \
    libesw_pktio_bcmpkt_sym_proto.$(libext) \
    libesw_pktio_bcmpkt_txpmd.$(libext) \
    libesw_pktio_bcmpkt_unet.$(libext) \
    libshared_shrextend.$(libext)

PKTIO_DRV_CHIPNAMES = $(notdir $(patsubst %/,%,$(dir $(wildcard ${SDK}/src/bcm/esw/pktio/chip/bcm*/))))
PKTIO_DRV_CHIPIDS = $(shell echo ${PKTIO_DRV_CHIPNAMES:bcm%=%} | tr a-z A-Z)
PKTIO_DRV_CHIPS =
$(foreach v,$(shell echo ${PKTIO_DRV_CHIPIDS} | tr a-z A-Z),$(if $(BCM_$v),$(eval PKTIO_DRV_CHIPS+=$v),))
BCM_LIB_PKTIO += $(addprefix libesw_pktio_bcm,$(addsuffix .$(libext),$(shell echo ${PKTIO_DRV_CHIPS} | tr A-Z a-z)))

endif

ESW_DRV_LIBS = \
    ${BCM_LIB_PTP_COMMON} \
    ${BCM_LIB_PTP_ESW} \
    ${BCM_LIB_FIREBOLT} ${BCM_LIB_RAPTOR} \
    ${BCM_LIB_TITAN} ${BCM_LIB_TRIDENT} \
    ${BCM_LIB_TITAN2} ${BCM_LIB_TRIDENT2} \
    ${BCM_LIB_HUMV} ${BCM_LIB_BRADLEY} \
    ${BCM_LIB_HERC} ${BCM_LIB_RAVEN} \
    ${BCM_LIB_SCORPION} ${BCM_LIB_CONQUEROR} ${BCM_LIB_TRIUMPH} \
    ${BCM_LIB_TRX} ${BCM_LIB_TRIUMPH2} ${BCM_LIB_ENDURO} \
    ${BCM_LIB_HURRICANE} ${BCM_LIB_KATANA} ${BCM_LIB_FLEXCTR} \
    ${BCM_LIB_TRIUMPH3} $(BCM_LIB_KATANA2) \
    ${BCM_LIB_HURRICANE2} ${BCM_LIB_GREYHOUND} \
    $(BCM_LIB_TOMAHAWK) $(BCM_LIB_TOMAHAWK3) $(BCM_LIB_ALPM2) ${BCM_LIB_HURRICANE3} \
    ${BCM_LIB_GREYHOUND2} ${BCM_LIB_FLOWCNT}\
    $(BCM_LIB_SABER2) \
    $(BCM_LIB_METROLITE) \
    ${BCM_LIB_TITAN2PLUS}  ${BCM_LIB_TRIDENT2PLUS} \
    $(BCM_LIB_TOMAHAWK2) \
    ${BCM_LIB_APACHE} \
    $(BCM_LIB_HELIX5) \
    $(BCM_LIB_HURRICANE4) \
    $(BCM_LIB_FIREBOLT6) \
    $(BCM_LIB_MAVERICK2) \
    ${BCM_LIB_MONTEREY} \
    $(BCM_LIB_TRIDENT3) ${BCM_LIB_FLEXFLOW} \
    libbcm_esw.$(libext) $(BCM_LIB_SHADOW)\
    libsoc_esw.$(libext) libsoc.$(libext) \
    libsoc_phy.$(libext) libsoc_wcmod.$(libext) libsoc_tscmod.$(libext) \
    libsoc_phy8806x.$(libext) \
    libsoc_mcm.$(libext) ${BCM_LIB_REGEX} \
    ${PORTMOD_LIBS} \
    ${CPRIMOD_LIBS} \
    $(BCM_LIB_PHYMOD) \
    $(BCM_LIB_PCIEPHY) \
    ${SOC_LIB_TRIUMPH3} ${SOC_LIB_TRIDENT2} ${SOC_LIB_TOMAHAWK} ${SOC_LIB_TRIDENT2P} ${SOC_LIB_TOMAHAWK3} ${SOC_LIB_TOMAHAWK3_INIT}\
    ${SOC_LIB_TOMAHAWK3_TRAFFICMNGR} ${SOC_LIB_TOMAHAWK3_FLEXPORT} \
    ${SOC_LIB_TDM} ${SOC_LIB_TDM_CORE} ${SOC_LIB_TDM_TRIDENT2P} ${SOC_LIB_TDM_TOMAHAWK} ${SOC_LIB_TDM_APACHE} ${SOC_LIB_TDM_TRIDENT3} ${SOC_LIB_TDM_MONTEREY}\
    ${SOC_LIB_APACHE} $(SOC_LIB_TRIDENT3) ${SOC_LIB_TRIDENT3_FLEXPORT} ${SOC_LIB_TOMAHAWK2} ${SOC_LIB_TDM_TOMAHAWK2}\
    ${SOC_LIB_TDM_HELIX5} $(SOC_LIB_TDM_FIREBOLT6) ${SOC_LIB_TDM_MAVERICK2} \
    ${SOC_LIB_MAVERICK2_FLEXPORT} ${SOC_LIB_HELIX5_FLEXPORT} ${SOC_LIB_FIREBOLT6_FLEXPORT} \
    ${SOC_LIB_TDM_GREYHOUND2} ${SOC_LIB_TDM_FIRELIGHT} ${SOC_LIB_MONTEREY} \
    ${SOC_LIB_FLEXPORT} ${SOC_LIB_TOMAHAWK2_FLEXPORT} \
    ${SOC_LIB_TDM_HURRICANE4} \
    ${SOC_LIB_HURRICANE4_FLEXPORT} \
    ${SOC_LIB_HELIX5} \
    ${SOC_LIB_HURRICANE4} \
    ${SOC_LIB_FIREBOLT6} \
    ${SOC_LIB_MAVERICK2} \
    ${SOC_LIB_SABER2} \
    ${SOC_LIB_METROLITE} \
    ${SOC_LIB_KATANA2} ${SOC_LIB_GREYHOUND} ${SOC_LIB_HURRICANE3} \
    ${SOC_LIB_GREYHOUND2} ${SOC_LIB_FIRELIGHT}\
    ${SOC_LIB_GREYHOUND2} \
    ${BCM_LIB_PKTIO} \
    ${BCM_LIB_XGS4} ${BCM_LIB_XGS5} ${BCM_LIB_FLOWTRACKER} ${BCM_LIB_FIELDCOMP}

ifneq (,$(findstring -DBCM_TOMAHAWK3_SUPPORT,$(CFGFLAGS)))
ESW_DRV_LIBS += libbcm_th3new.$(libext)
endif

ifdef FEATURE_FCMAP
ESW_DRV_LIBS += libsoc_fcmap.$(libext)
endif
ESW_DRV_LIBS += libsoc_koi.$(libext)
ESW_DRV_LIBS += libsoc_orca.$(libext)

#ifneq (,$(findstring -DINCLUDE_CES,$(CFGFLAGS)))
#ifdef INCLUDE_CES
#ESW_DRV_LIBS += \
#        libsoc_nemo.$(libext) libsoc_clsbuilder.$(libext) libsoc_sal.$(libext)
#endif
endif

ifdef SAND_CHIPS
# { Put here all libraries common for all Dune families
SAND_DRV_LIBS = \
    $(BCM_LIB_PHYMOD)     \
    libsoc_phy.$(libext)  \
    libsoc_mcm.$(libext)   \
    libsoc_sand.$(libext) \
    libsoc_sand_auto_generated.$(libext) \
    libsoc_koi.$(libext)  \
    libsoc_orca.$(libext)  \
    libsoc_wcmod.$(libext) \
    libshared_utilex.$(libext)    \
    libshared_shrextend.$(libext) \
    libshared_dbx.$(libext)
ifndef LINUX_MAKE_KERNEL
SAND_DRV_LIBS += \
    libxml.$(libext)
endif
# }
endif

ifdef SAND_CHIPS
# {
DNXC_DRV_LIBS = \
        libsoc_dnxc.$(libext)  \
        libsoc_dnxcdnxcdata.$(libext)  \
        libsoc_dnxcswstate_auto_generated.$(libext) \
	libsoc_dnxcswstate_types.$(libext) \
        libsoc_dnxcswstate_utils.$(libext) \
        libsoc_dnxcswstate.$(libext) \
        libpciephy.$(libext)
ifndef BCM_88950_A0
ifndef BCM_88675_A0
DNXC_DRV_LIBS += ${PORTMOD_LIBS}
endif
endif
# }
endif


ifdef DPP_CHIPS
# {
DPP_DRV_LIBS = \
    $(SAND_DRV_LIBS)      \
    ${BCM_LIB_PTP_COMMON} \
    ${BCM_LIB_PTP_DPP}    \
    libsoc_dcmn.$(libext)  \
    libshared_swstate.$(libext)   \
    libshared_swstate_access.$(libext) \
    libshared_swstate_layout.$(libext) \
    libshared_swstate_diagnostic.$(libext) \
    libshared_swstate_infrastructure.$(libext) \
    libshared_swstate_utils.$(libext) \
    libsoc_dpp.$(libext)   \
    libsoc_dpp_auto_generated.$(libext)   \
    libsoc_hwstate.$(libext) \
    libbcm_dpp_ppd.$(libext) \
    libbcm_dpp_ppc.$(libext) \
    libbcm_dpp_sand_fm.$(libext) \
    libbcm_dpp_sand_mgmt.$(libext) \
    libbcm_dpp_sand_utils.$(libext) \
    libbcm_dpp_tmc.$(libext)\
    libappl_dpp_FecAllocaiton.$(libext)\
    libappl_dpp_FecPerformance.$(libext)\
    libappl_dpp_fabric_fgl.$(libext)
# }
endif

ifdef INCLUDE_DNX_LIBS
# {
  DNX_DRV_LIBS =        \
        $(DNXC_DRV_LIBS)
ifndef DPP_CHIPS
# {
  DNX_DRV_LIBS += \
        $(SAND_DRV_LIBS)      \
        ${BCM_LIB_PTP_COMMON} \
        libshared_swstate.$(libext)   \
        libshared_swstate_utils.$(libext)
# }
endif
ifdef BUILD_FLEXE
DNX_DRV_LIBS += ${BCM_LIB_FLEXE_STD}
endif
ifdef BUILD_FLEXE_DBG
DNX_DRV_LIBS += ${BCM_LIB_FLEXE_DBG}
endif

# }
endif


ifdef BCM_88650_A0
# {
#
# This compilation is specific for ARAD (DPP)
#
DPP_DRV_LIBS += \
    $(BCM_LIB_ARAD)
ifneq (,$(findstring -DADAPTER_SERVER_MODE,$(CFGFLAGS)))
# {
#
# Enter if this is compilation for CMODEL for ARAD:
# Do NOT include the 'interrupt' library but do include 'rx_los' since
# interrupt are not covered by CMODEL for now while 'rx_los' is required (in KBP?).
# See src/appl/dcmn/Makefile
#
DPP_DRV_LIBS += libappl_dcmn_rx_los.$(libext)
#
# }
else
# {
#
# Enter if this is NOT compilation for CMODEL. Do include the 'interrupt' libraries
#
ifeq (INTR,$(findstring INTR,$(FEATURE_LIST)))
# {
DPP_DRV_LIBS += \
	libappl_dcmn_rx_los.$(libext) libappl_dpp_interrupts.$(libext) libappl_dcmn_interrupts.$(libext)
# }
endif
# }
endif
# }
endif

ifdef BCM_88675_A0
DPP_DRV_LIBS += \
    $(PORTMOD_LIBS) \
    $(BCM_LIB_JERICHO)
ifeq (INTR,$(findstring INTR,$(FEATURE_LIST)))
DPP_DRV_LIBS += \
	libappl_dcmn_rx_los.$(libext) libappl_dcmn_interrupts.$(libext)
endif
endif

ifdef BCM_88470_A0
DPP_DRV_LIBS += libsoc_dpp_qax.$(libext) libsoc_dpp_qax_pp.$(libext)

ifdef BCM_88270_A0

ifndef LINUX_MAKE_KERNEL
DPP_DRV_LIBS += libsoc_dpp_pem.$(libext)
endif

endif

endif

ifdef BCM_88680_A0
DPP_DRV_LIBS += libsoc_dpp_jerp.$(libext) libsoc_dpp_jerp_pp.$(libext)
endif

ifdef INCLUDE_DNX_LIBS
#
#  05MAY16
#    libsocdnx should also be included here after drv.c issue is fixed
#
DNX_DRV_LIBS += libsoc_dnx.$(libext)
DNX_DRV_LIBS += libsoc_dnxdbal.$(libext)
DNX_DRV_LIBS += libsoc_dnxdbal_autogenerated.$(libext)
DNX_DRV_LIBS += libsoc_dnxdbal_dbalinit.$(libext)
DNX_DRV_LIBS += libsoc_dnxpemladrv.$(libext)
DNX_DRV_LIBS += libsoc_dnxpemladrv_autogenerated.$(libext)
DNX_DRV_LIBS += libsoc_dnxpll.$(libext)
DNX_DRV_LIBS += libsoc_dnxdrv.$(libext)
DNX_DRV_LIBS += libsoc_dnxswstate.$(libext)
DNX_DRV_LIBS += libsoc_dnxswstate_auto_generated.$(libext)
DNX_DRV_LIBS += libsoc_dnxrecovery.$(libext)
DNX_DRV_LIBS += libsoc_dnxcmodel.$(libext)
DNX_DRV_LIBS += libsoc_dnxdnxdata.$(libext)
DNX_DRV_LIBS += libsoc_dnxfieldtcamaccess.$(libext)
DNX_DRV_LIBS += libsoc_dnxkbp.$(libext)
DNX_DRV_LIBS += libsoc_dnxphy.$(libext)

ifdef BUILD_KAPS
DNX_DRV_LIBS += libkaps.$(libext)
endif

DNX_DRV_LIBS += libsoc_dnxcmodel.$(libext)
DNX_DRV_LIBS += libsoc_dnxarr.$(libext)
DNX_DRV_LIBS += libsoc_dnxarr_auto_generated.$(libext)
DNX_DRV_LIBS += libsoc_dnxutils.$(libext)
DNX_DRV_LIBS += libsoc_dnxutils_auto_generated.$(libext)

# do no remove line below, it is used by auto VENDOR code removal script (remdef.sh)
#endif
DNX_DRV_LIBS += libsoc_dnxintr.$(libext)
DNX_DRV_LIBS += libsoc_dnxintrag.$(libext)
DNX_DRV_LIBS += libsoc_dnxlinkctrl.$(libext)
endif
ifdef BCM_88690_A0
DNX_DRV_LIBS += libsoc_dnxintragjer2.$(libext)
endif
ifdef BCM_88800_A0
DNX_DRV_LIBS += libsoc_dnxintragjer2c.$(libext)
endif
ifdef BCM_88480_A0
DNX_DRV_LIBS += libsoc_dnxintragq2a.$(libext)
endif
ifdef BCM_88850_A0
DNX_DRV_LIBS += libsoc_dnxintragj2p.$(libext)
endif

ifdef BCM_88270_A0
DPP_DRV_LIBS += libsoc_dpp_qux.$(libext)
endif

ifdef BCM_8206_A0
#DPP_DRV_LIBS += libsoc_dpp_flair.$(libext) libsoc_dpp_flair_pp.$(libext)
endif

ifdef DPP_CHIPS
ifeq (DUNE_UI,$(findstring DUNE_UI,$(FEATURE_LIST)))
DPP_DRV_LIBS += \
	libappl_dpp_ui.$(libext) \
    libappl_dpp_ui_ppd.$(libext)
endif
endif


ifdef DFE_CHIPS
DFE_DRV_LIBS = \
    $(SAND_DRV_LIBS)      \
    libsoc_dcmn.$(libext)  \
    libsoc_hwstate.$(libext) \
    libsoc_dfe.$(libext)
endif

ifdef DNXF_CHIPS
# {
DNXF_DRV_LIBS =                             \
        $(SAND_DRV_LIBS)                    \
        $(DNXC_DRV_LIBS)                    \
        libsoc_dnxfcmn.$(libext)            \
        libsoc_dnxframon.$(libext)          \
        libsoc_dnxfswstate.$(libext)        \
        libsoc_dnxfswstate_auto_generated.$(libext)        \
        libsoc_dnxfdnxfdata.$(libext)

# }
endif

ifdef BCM_88750_A0
DFE_DRV_LIBS += \
	$(BCM_LIB_88750)
ifeq (INTR,$(findstring INTR,$(FEATURE_LIST)))
DFE_DRV_LIBS += \
    libappl_dcmn_rx_los.$(libext) libappl_dfe_interrupts.$(libext) libappl_dcmn_interrupts.$(libext)
endif
endif

ifdef BCM_88950_A0
DFE_DRV_LIBS += \
    $(PORTMOD_LIBS) \
    $(BCM_LIB_88950)
ifeq (INTR,$(findstring INTR,$(FEATURE_LIST)))
DFE_DRV_LIBS += \
    libappl_dcmn_rx_los.$(libext) libappl_dfe_interrupts.$(libext) libappl_dcmn_interrupts.$(libext)
endif
endif

ifdef LTSW_CHIPS
ifneq (,$(LTSW_INCLUDE_CHIPS))
BCM_LTSW_CHIPS = $(strip $(shell echo $(LTSW_INCLUDE_CHIPS) | tr A-Z a-z))
BCM_LIB_MBCM = libltsw_mbcm.$(libext)
BCM_LIB_CHIPS = $(addsuffix .$(libext),$(addprefix libltsw_,$(BCM_LTSW_CHIPS)))
endif
ifeq (1,$(LTSW_INCLUDE_XGS))
BCM_LIB_XGS = libltsw_xgs.$(libext)
endif
ifeq (1,$(LTSW_INCLUDE_XFS))
BCM_LIB_XFS = libltsw_xfs.$(libext)
endif
ifeq (1,$(LTSW_INCLUDE_TM))
BCM_LIB_TM = libltsw_tm.$(libext)
endif

LTSW_DRV_LIBS = \
    ${BCM_LIB_PTP_COMMON} \
    $(BCM_LIB_MBCM) \
    ${BCM_LIB_CHIPS} \
    ${BCM_LIB_XGS} \
    ${BCM_LIB_XFS} \
    ${BCM_LIB_TM} \
    libsoc_ltsw.$(libext) \
    libsoc_phy.$(libext) libsoc_koi.$(libext) libsoc_orca.$(libext) \
    $(BCM_LIB_PHYMOD) \
    $(BCM_LIB_PCIEPHY) \
    lib/libsdklt.$(libext)
endif

ifeq (KBP,$(findstring KBP,$(FEATURE_LIST)))
# {
ifneq (,$(findstring KBP_11K, $(KBP_DEVICE)))
# {
KBP_LIB_PATH=${SDK}/src/soc/kbp/nlm2/lib/${targetbase}-${targetplat}/${platform}
KBP_DRV_LIBS += \
    libsoc_kbp_nlm2_dm.$(libext) \
    libsoc_kbp_nlm2_gtm.$(libext) \
    libsoc_kbp_nlm2_rngm.$(libext) \
    libsoc_kbp_nlm2_xpt.$(libext)
KBP_REFAPP_LIBS += \
    libsoc_kbp_nlm2_gtm_refapp.$(libext) \
    libsoc_kbp_nlm2_diag.$(libext)       \
    libsoc_kbp_nlm2_dm_refapp.$(libext)       \
    libsoc_kbp_nlm2_diag.$(libext)       \
    libsoc_kbp_nlm2_rngm_refapp.$(libext)  \
    libsoc_kbp_nlm2_rngmgr_refapp2.$(libext) \
    libsoc_kbp_nlm2_rngmgr_refapp3.$(libext) \
    libsoc_kbp_nlm2_gtmftm_refapp.$(libext) \
    libsoc_kbp_nlm2_ftm_refapp.$(libext)
KBP_LIBS += \
    ${KBP_LIB_PATH}/libsoc_kbp_nlm2_ftm.$(libext) \
    ${KBP_LIB_PATH}/libsoc_kbp_nlm2_ftm_cmn.$(libext) \
    ${KBP_LIB_PATH}/libsoc_kbp_nlm2_ftm_trie.$(libext) \
    ${KBP_LIB_PATH}/libsoc_kbp_nlm2_model.$(libext)
# }
endif

ifneq (,$(findstring KBP_12K, $(KBP_DEVICE)))
# {
KBP_LIB_PATH=${SDK}/src/soc/kbp/nlm3/lib/${targetbase}-${targetplat}/${platform}
KBP_DRV_LIBS += \
    libsoc_kbp_nlm3_blackholexpt.$(libext) \
    libsoc_kbp_nlm3_dm.$(libext) \
    libsoc_kbp_nlm3_gtm.$(libext) \
    libsoc_kbp_nlm3_rm.$(libext) \
    libsoc_kbp_nlm3_xpt.$(libext)
# }
endif

ifneq (KBP_ALG,$(findstring KBP_ALG, $(KBP_DEVICE)))
# {
KBP_DRV_LIBS += \
    libsoc_kbp_cmn.$(libext)

KBP_DRV_LIBS += ${KBP_REFAPP_LIBS}
# }
else
# {
ifeq (1,$(WRX_64BIT))
# {
    KBP_LIB_PATH=${SDK}/src/soc/kbp/alg_kbp/lib/${targetbase}-${targetplat}-64/${platform}
# }
else
# {
KBP_LIB_PATH=${SDK}/src/soc/kbp/alg_kbp/lib/${targetbase}-${targetplat}/${platform}
ifeq (slk,$(platform))
ifeq (BE,$(ENDIAN_MODE))
    KBP_LIB_PATH=${SDK}/src/soc/kbp/alg_kbp/lib/${targetbase}-${targetplat}/${platform}_be
endif
else
ifeq (x86-64-fc28,$(platform))
ifeq (1,$(BUILD_32BITS_EXEC))
    KBP_LIB_PATH=${SDK}/src/soc/kbp/alg_kbp/lib/${targetbase}-${targetplat}/x86-32-fc28
endif
endif
endif
# }
endif
KBP_LIBS += \
    ${KBP_LIB_PATH}/libsoc_alg_kbp.a
ifneq (,$(findstring -DUSE_MODEL,$(CFGFLAGS)))
# {
KBP_LIBS += \
    ${KBP_LIB_PATH}/libkbpmodel.$(libext)
# }
endif
KBP_DRV_LIBS += \
    libsoc_alg_kbp_portable.$(libext)
# }
endif
# }
endif

ifneq (,$(findstring -DBCM_DNX_SUPPORT,$(CFGFLAGS)))
BCM_LIB +=  ${BCMDNX_LIB}
endif

ifneq (,$(findstring -DBCM_DNXF_SUPPORT,$(CFGFLAGS)))
BCM_LIB +=  ${BCMDNXF_LIB}
endif

DRV_LIBS = \
    ${COND_LIB_BOARD} ${BCM_LIB} \
    libsoccommon.$(libext)  \
    ${ESW_DRV_LIBS}         \
    ${DPP_DRV_LIBS}         \
    ${DNX_DRV_LIBS}         \
    ${DFE_DRV_LIBS}         \
    ${DNXF_DRV_LIBS}        \
    libbcm_common.$(libext) \
    libsoc_shared.$(libext) \
    libshared.$(libext)     \
    ${COND_LIB_SOC_I2C} libsal_core.$(libext) libsal_core_plat.$(libext) \
    ${COND_LIB_CUSTOMER}  ${COND_LIB_EXAMPLES}  ${COND_LIB_CES} \
    ${KBP_DRV_LIBS} ${LTSW_DRV_LIBS} \
    libshared_binfs.$(libext)



DRV_LIBS_BLD=$(addprefix ${LIBDIR}/,${DRV_LIBS})


PORTMOD_STAND_ALONE_LIBS += \
    libdiag.$(libext) \
    libsoccommon.$(libext) \
    libsoc_mcm.$(libext) \
    libsoc.$(libext) \
    libsoc_phy.$(libext) \
    libsoc_shared.$(libext) \
    libshared.$(libext) \
    libsoc_portmod_pms.$(libext) \
    libsoc_portmod.$(libext) \
    $(COND_LIB_SAL_APPL) \
    $(COND_LIB_SAL_APPL_PLATFORM) \
    ${COND_LIB_EDITLINE} \
    $(BCM_LIB_PHYMOD) \
    libsal_core.$(libext) \
    libsal_core_plat.$(libext) \
    lib_portmod_appl.$(libext) \
    libsoc_orca.$(libext)  \
    libsoc_koi.$(libext)

#EXTERNAL_LIBS = ${BCM_LIB_MACSEC}
EXTERNAL_LIBS = ${BCM_LIB_MACSEC} ${KBP_LIBS} ${BCM_LIB_PHYMOD_EPIL} ${BCM_LIB_PHYMOD_EPDM} ${BCM_LIB_XFLOW_MACSEC} ${BCM_LIB_LINKCAT}

#Add 3rd-party servo library to be linked to bcm.user
ifneq (,$(findstring -DBCM_PTP_EXT_SERVO_SUPPORT,$(CFGFLAGS)))
EXT_SERVO_BUILD_HOME=${EXT_SERVO_ROOT}/idtBuild
EXT_SERVO_LIB_PATH=${EXT_SERVO_ROOT}/ptpStack/stackAdaptor
EXT_SERVO_LIB += ${EXT_SERVO_LIB_PATH}/libIdt1588.$(libext)
EXTERNAL_LIBS += ${EXT_SERVO_LIB}
endif

DIAG_EXT_LIBS = ${DIAG_LIB_MACSEC} ${DIAG_LIB_XFLOW_MACSEC}
CORE_EXT_LIBS = ${CORE_LIB_MACSEC} ${CORE_LIB_XFLOW_MACSEC}


DRV_LIBS_BLD += ${EXTERNAL_LIBS}

#
# Diagnostic Libraries
#
#   These are the rest of the diagnostics including the shell and
#   all the tests, Tcl, BDE, and Appl SAL.  Currently only used for Unix.
#

ifdef ESW_CHIPS
ESW_DIAG_LIBS = \
        libplibde.$(libext) \
        libdiag_esw.$(libext) \
        libtsl3uc.$(libext) \
        libtsl3mc.$(libext) \
        libtsmpls.$(libext) \
        libtsmmu.$(libext) \
        libtsoam.$(libext) \
        libtsniv.$(libext) \
        libtsriot.$(libext) \
        libtsvlan.$(libext) \
        libtsvxlan.$(libext) \
        libtsfflow.$(libext) \
        libtsbasic.$(libext) \
        libtsifp.$(libext) \
        libtsvfp.$(libext) \
        libtsefp.$(libext) \
        libtscos.$(libext) \
        libtsloadbalance.$(libext) \
        libtsdgm.$(libext) \
        libtstcb.$(libext) \
        libtspstat.$(libext) \
        libtsphy.$(libext) \
        libtsledup.$(libext) \
        libtscmic.$(libext) \
        libtsvisibility.$(libext) \
        libtswarmboot.$(libext) \
        libtscancun.$(libext) \
        libtechsupport.$(libext)
ESW_DIAG_LIBS += libtsetrap.$(libext)
ESW_DIAG_LIBS += libtsint.$(libext)
ESW_DIAG_LIBS += libtshistogram.$(libext)
ESW_DIAG_LIBS += libtsalpm.$(libext)
ESW_DIAG_LIBS += libtsxflowmacsec.$(libext)
ESW_DIAG_LIBS += libtsflowtracker.$(libext)
ESW_DIAG_LIBS += libtscpri.$(libext)
ESW_DIAG_LIBS += libtsrsvd4.$(libext)
endif

ifdef BUILD_PHYMOD
COND_LIB_PHYMOD_DIAG = libdiag_phymod.$(libext)
COND_LIB_PHYMOD_DIAG_BLD=${LIBDIR}/${COND_LIB_PHYMOD_DIAG}
endif

ifdef BUILD_PORTMOD
COND_LIB_PORTMOD_DIAG = libdiag_portmod.$(libext)
COND_LIB_PORTMOD_DIAG_BLD=${LIBDIR}/${COND_LIB_PORTMOD_DIAG}
endif

ifdef SAND_CHIPS
SAND_DIAG_LIBS = libdiag_sand.$(libext)
SAND_DIAG_LIBS += libreference_sand.$(libext)
COND_DIAG_SAND_LIB = libdiag_sand.$(libext)
COND_DIAG_SAND_LIB_BLD=${LIBDIR}/${COND_DIAG_SAND_LIB}
endif

ifdef DPP_CHIPS
DPP_DIAG_LIBS = \
	libdiag_dpp.$(libext)
endif

ifdef DFE_CHIPS
DFE_DIAG_LIBS = libdiag_dfe.$(libext) libdiag_dcmn.$(libext)
else
ifdef DPP_CHIPS
DPP_DIAG_LIBS += libdiag_dcmn.$(libext)
endif
endif

ifdef INCLUDE_DNX_LIBS
DNX_DIAG_LIBS = libdiag_dnx.$(libext)
ifneq (,$(findstring -DADAPTER_SERVER_MODE,$(CFGFLAGS)))
DNX_DIAG_LIBS += libdiag_dnxadapter.$(libext)
endif
DNX_DIAG_LIBS += libdiag_dnxallocationmngr.$(libext)
DNX_DIAG_LIBS += libdiag_dnxarr.$(libext)
DNX_DIAG_LIBS += libdiag_dnxcrps.$(libext)
DNX_DIAG_LIBS += libdiag_dnxdbal.$(libext)
DNX_DIAG_LIBS += libdiag_dnxdram.$(libext)
DNX_DIAG_LIBS += libdiag_dnxdiag.$(libext)
DNX_DIAG_LIBS += libdiag_dnxerrrec.$(libext)
DNX_DIAG_LIBS += libdiag_dnxexport.$(libext)
DNX_DIAG_LIBS += libdiag_dnxfield.$(libext)
DNX_DIAG_LIBS += libdiag_dnxgpm.$(libext)
DNX_DIAG_LIBS += libdiag_dnxreset.$(libext)
DNX_DIAG_LIBS += libdiag_dnx_pp_kleap_auto_generated.$(libext)
DNX_DIAG_LIBS += libdiag_dnx_pp_kleap.$(libext)
DNX_DIAG_LIBS += libdiag_dnxl2.$(libext)
DNX_DIAG_LIBS += libdiag_dnxvlan.$(libext)
DNX_DIAG_LIBS += libdiag_dnxpp.$(libext)
DNX_DIAG_LIBS += libdiag_dnxl3.$(libext)
DNX_DIAG_LIBS += libdiag_dnxmdb.$(libext)
DNX_DIAG_LIBS += libdiag_dnxutils.$(libext)
DNX_DIAG_LIBS += libdiag_dnxmeter.$(libext)
DNX_DIAG_LIBS += libdiag_dnxoam.$(libext)
DNX_DIAG_LIBS += libdiag_dnxport.$(libext)
DNX_DIAG_LIBS += libdiag_dnxstg.$(libext)
DNX_DIAG_LIBS += libdiag_dnxstif.$(libext)
DNX_DIAG_LIBS += libdiag_dnxtm.$(libext)
DNX_DIAG_LIBS += libdiag_dnxtrap.$(libext)
DNX_DIAG_LIBS += libdiag_dnxtx.$(libext)
DNX_DIAG_LIBS += libdiag_dnxnif.$(libext)
DNX_DIAG_LIBS += libdiag_dnxfabric.$(libext)
DNX_DIAG_LIBS += libdiag_dnxta.$(libext)
DNX_DIAG_LIBS += libdiag_dnxc.$(libext)
DNX_DIAG_LIBS += libdiag_dnxswstate.$(libext)
DNX_DIAG_LIBS += libdiag_dnxswstate_auto_generated.$(libext)
DNX_DIAG_LIBS += libdiag_dnxcswstate.$(libext)
DNX_DIAG_LIBS += libdiag_dnxcswstate_auto_generated.$(libext)
DNX_DIAG_LIBS += libdiag_dnxcapplref.$(libext)
DNX_DIAG_LIBS += libdiag_dnxkbp.$(libext)
DNX_DIAG_LIBS += libdiag_dnxknet.$(libext)
DNX_DIAG_LIBS += libdiag_dnxsrv6.$(libext)
DNX_DIAG_LIBS += libdiag_dnxlif.$(libext)

ifneq (,$(filter FLEXE FLEXE_DBG,$(FEATURE_LIST)))
DNX_DIAG_LIBS += libdiag_dnxflexe.$(libext)
endif

ifdef BUILD_XFLOW_MACSEC
DNX_DIAG_LIBS += libdiag_dnxsec.$(libext)
endif
DNX_DIAG_LIBS += libreference_dnxc.$(libext)
DNX_DIAG_LIBS += libreference_dnx.$(libext)
DNX_DIAG_LIBS += libreference_dnx_minicon.$(libext)
DNX_DIAG_LIBS += libreference_dnx_armor.$(libext)
ifneq (,$(findstring -DINCLUDE_CTEST,$(CFGFLAGS)))
DNX_DIAG_LIBS += libctest_dnx.$(libext)
DNX_DIAG_LIBS += libctest_dnxalgo.$(libext)
DNX_DIAG_LIBS += libctest_dnxapt.$(libext)
DNX_DIAG_LIBS += libctest_dnxfield.$(libext)
DNX_DIAG_LIBS += libctest_dnxl3.$(libext)
DNX_DIAG_LIBS += libctest_dnxdbal.$(libext)
DNX_DIAG_LIBS += libctest_dnxlif.$(libext)
DNX_DIAG_LIBS += libctest_dnxswitch.$(libext)
DNX_DIAG_LIBS += libctest_dnxsrv6.$(libext)
DNX_DIAG_LIBS += libctest_dnxtrap.$(libext)
DNX_DIAG_LIBS += libctest_dnxtm.$(libext)
DNX_DIAG_LIBS += libctest_dnxinfra.$(libext)
DNX_DIAG_LIBS += libctest_dnxvlan.$(libext)
DNX_DIAG_LIBS += libctest_dnxmpls.$(libext)
DNX_DIAG_LIBS += libctest_dnxc.$(libext)
DNX_DIAG_LIBS += libctest_dnxoamp.$(libext)
DNX_DIAG_LIBS += libctest_dnxcrps.$(libext)
DNX_DIAG_LIBS += libctest_dnxfabric.$(libext)
DNX_DIAG_LIBS += libctest_dnxkaps.$(libext)
ifneq (,$(findstring -DINCLUDE_KBP,$(CFGFLAGS)))
DNX_DIAG_LIBS += libctest_dnxkbp.$(libext)
endif
endif
endif

ifdef DNXF_CHIPS
DNXF_DIAG_LIBS = libdiag_dnxf.$(libext)
#
# Add a library (e.g., 'libctest_dnxc' library) if it has not already been added.
# This can happen when building for both DNX and DNXF
#
ifeq (,$(findstring libdiag_dnxc,$(DNX_DIAG_LIBS)))
  DNXF_DIAG_LIBS += libdiag_dnxc.$(libext)
endif
DNXF_DIAG_LIBS += libdiag_dnxfswstate.$(libext)
DNXF_DIAG_LIBS += libdiag_dnxfswstate_auto_generated.$(libext)
ifeq (,$(findstring libdiag_dnxcswstate,$(DNX_DIAG_LIBS)))
  DNXF_DIAG_LIBS += libdiag_dnxcswstate.$(libext)
endif
ifeq (,$(findstring libdiag_dnxcswstate_auto_generated,$(DNX_DIAG_LIBS)))
  DNXF_DIAG_LIBS += libdiag_dnxcswstate_auto_generated.$(libext)
endif
ifeq (,$(findstring libdiag_dnxcapplref,$(DNX_DIAG_LIBS)))
  DNXF_DIAG_LIBS += libdiag_dnxcapplref.$(libext)
endif
ifeq (,$(findstring libreference_dnxc,$(DNX_DIAG_LIBS)))
  DNXF_DIAG_LIBS += libreference_dnxc.$(libext)
endif
DNXF_DIAG_LIBS += libreference_dnxf.$(libext)
ifneq (,$(findstring -DINCLUDE_CTEST,$(CFGFLAGS)))
DNX_DIAG_LIBS += libctest_dnxf.$(libext)
#
# Add the 'libctest_dnxc' library if it has not already been added.
# This can happen when building for both DNX and DNXF
#
ifeq (,$(findstring libctest_dnxc,$(DNX_DIAG_LIBS)))
  DNX_DIAG_LIBS += libctest_dnxc.$(libext)
endif
endif
endif

ifdef LTSW_CHIPS
LTSW_DIAG_LIBS = \
    libdiag_ltsw.$(libext) \
    libdiag_ltswissu.$(libext)
endif

ifndef NO_SAL_APPL
COND_LIB_SAL_APPL=libsal_appl.$(libext)
COND_LIB_SAL_APPL_PLATFORM=libsal_appl_plat.$(libext)
endif

# SAND_DIAG_LIBS collects all Dune related diag shell libraries
ifdef SAND_CHIPS
SAND_DIAG_LIBS += ${DPP_DIAG_LIBS} ${DFE_DIAG_LIBS} ${DNX_DIAG_LIBS} ${DNXF_DIAG_LIBS}
else
SAND_DIAG_LIBS = ${DPP_DIAG_LIBS} ${DFE_DIAG_LIBS} ${DNX_DIAG_LIBS} ${DNXF_DIAG_LIBS}
endif

DIAG_LIBS = \
	${COND_LIB_EDITLINE} \
	libdiag.$(libext) \
	${ESW_DIAG_LIBS} \
	${LTSW_DIAG_LIBS} \
	${SAND_DIAG_LIBS} \
	${COND_LIB_PHYMOD_DIAG} \
	${COND_LIB_PORTMOD_DIAG} \
	${COND_LIB_TEST} \
	${COND_LIB_TCL} ${COND_LIB_EAV_APPL} \
	libplibde.$(libext) \
        $(COND_LIB_SAL_APPL) \
        $(COND_LIB_SAL_APPL_PLATFORM)


DIAG_LIBS_BLD=$(addprefix ${LIBDIR}/,${DIAG_LIBS})

#
# Conditional Libraries
#
#   These libraries are based on which build flags are selected
#   in Makefile.<target> or Make.local if personalized.
#

ifneq (,$(findstring -DINCLUDE_I2C,$(CFGFLAGS)))
ifneq (,$(findstring -DBCM_ESW_SUPPORT,$(CFGFLAGS)))
COND_LIB_SOC_I2C += libsoc_i2c.$(libext)
else
ifneq (,$(findstring -DBCM_PETRA_SUPPORT,$(CFGFLAGS)))
COND_LIB_SOC_I2C += libsoc_i2c.$(libext)
endif
ifneq (,$(findstring -DBCM_DFE_SUPPORT,$(CFGFLAGS)))
COND_LIB_SOC_I2C += libsoc_i2c.$(libext)
endif
ifneq (,$(findstring -DBCM_DNX_SUPPORT,$(CFGFLAGS)))
COND_LIB_SOC_I2C += libsoc_i2c.$(libext)
endif
ifneq (,$(findstring -DBCM_DNXF_SUPPORT,$(CFGFLAGS)))
COND_LIB_SOC_I2C += libsoc_i2c.$(libext)
endif
endif
COND_LIB_SOC_I2C_BLD=${LIBDIR}/${COND_LIB_SOC_I2C}
endif

ifneq (,$(findstring -DINCLUDE_DRIVERS,$(CFGFLAGS)))
COND_LIB_DRIVERS=libdrivers.$(libext)
COND_LIB_DRIVERS_BLD=${LIBDIR}/${COND_LIB_DRIVERS}
endif

ifneq (,$(findstring -DINCLUDE_CUSTOMER,$(CFGFLAGS)))
COND_LIB_CUSTOMER=libcustomer.$(libext)
endif

ifneq (,$(findstring -DINCLUDE_EXAMPLES,$(CFGFLAGS)))
COND_LIB_EXAMPLES=libexamples.$(libext)
endif

ifneq (,$(findstring -DINCLUDE_TCL,$(CFGFLAGS)))
COND_LIB_TCL=libtcl_unix.$(libext) libtcl_broadcom.$(libext) \
    libtcl_generic.$(libext) libtcl_mpexpr.$(libext)

ifdef TCL840
COND_LIB_TCL=libtcl_unix.$(libext) libtcl_thread.$(libext) libtcl_broadcom.$(libext) \
    libtcl_generic.$(libext) libtcl_mpexpr.$(libext)
endif

COND_LIB_TCL_BLD=$(addprefix ${LIBDIR}/,${COND_LIB_TCL})
COND_INC_TCL=-I${SDK}/src/appl/{TCLVER}
endif

# EAV APPL in diag is intended to be built
#ifneq (,$(findstring -DINCLUDE_EAV_APPL,$(CFGFLAGS)))
#COND_LIB_EAV_APPL=libdiageav.$(libext)
#COND_LIB_EAV_APPL_BLD=${LIBDIR}/${COND_LIB_EAV_APPL}
#endif

ifneq (,$(findstring -DINCLUDE_APS_DIAG_LIBS,$(CFGFLAGS)))
COND_LIB_DIAG_APS=libdiag_aps.$(libext)
COND_LIB_DIAG_APS_BLD=${LIBDIR}/${COND_LIB_DIAG_APS}
endif

ifneq (,$(findstring -DINCLUDE_EDITLINE,$(CFGFLAGS)))
COND_LIB_EDITLINE=libsal_appl_editline.$(libext)
COND_LIB_EDITLINE_BLD=${LIBDIR}/${COND_LIB_EDITLINE}
endif

ifneq (,$(findstring -DINCLUDE_OOB_RCPU,$(CFGFLAGS)))
COND_LIB_ETH_DRV=libeth.$(libext)
COND_LIB_ETH_DRV_BLD=${LIBDIR}/libeth.$(libext)
endif

ifneq (,$(findstring -DINCLUDE_BCM570X,$(CFGFLAGS)))
COND_LIB_BCM570X=libbcm570x.$(libext)
COND_LIB_BCM570X_BLD=${BLDDIR}/libbcm570x.$(libext)
COND_INC_BCM570X=-I${SDK}/systems/drv/bcm570x
endif

ifneq (,$(findstring -DINCLUDE_TEST,$(CFGFLAGS)))
COND_LIB_TEST=libtest.$(libext)
COND_LIB_TEST_BLD=${LIBDIR}/${COND_LIB_TEST}
endif

# Board support

ifneq (,$(findstring -DINCLUDE_BOARD,$(CFGFLAGS)))
COND_LIB_BOARD=libboard_mgr.$(libext)
COND_LIB_BOARD+=libboard_dvr.$(libext)
COND_LIB_BOARD+=libboard_stk.$(libext)
COND_LIB_BOARD+=libboard_spt.$(libext)
endif

#
# Telekinesis suite applications for CPU to CPU communication and discovery
#     CPUDB:         Simple CPU data base manager
#     CPUTRANS:      CPU to CPU communication mechanisms
#     DISCOVER:      Simple discovery; will also include CPUTRANS
#     STKTASK:       Stack manager application
#

# CPU data base manager
ifneq (,$(findstring -DINCLUDE_LIB_CPUDB,$(CFGFLAGS)))
COND_LIB_CPUDB = libcpudb.$(libext)
COND_LIB_CPUDB_BLD=${LIBDIR}/${COND_LIB_CPUDB}
endif

# CPU transport protocols
ifneq (,$(findstring -DINCLUDE_LIB_CPUTRANS,$(CFGFLAGS)))
COND_LIB_CPUTRANS = libcputrans.$(libext)
COND_LIB_CPUTRANS_BLD=${LIBDIR}/${COND_LIB_CPUTRANS}
endif

# Discovery algorithm; requires transport protocols.
ifneq (,$(findstring -DINCLUDE_LIB_DISCOVER,$(CFGFLAGS)))
COND_LIB_DISCOVER = libdiscover.$(libext)
COND_LIB_DISCOVER_BLD=${LIBDIR}/${COND_LIB_DISCOVER}
COND_LIB_CPUTRANS = libcputrans.$(libext)
COND_LIB_CPUTRANS_BLD=${LIBDIR}/${COND_LIB_CPUTRANS}
endif

# Stack task manager
ifneq (,$(findstring -DINCLUDE_LIB_STKTASK,$(CFGFLAGS)))
COND_LIB_STKTASK = libstktask.$(libext)
COND_LIB_STKTASK_BLD=${LIBDIR}/${COND_LIB_STKTASK}
endif

# AEDEV
ifneq (,$(findstring -DINCLUDE_LIB_AEDEV,$(CFGFLAGS)))
COND_LIB_AEDEV = libaedev.$(libext)
COND_LIB_AEDEV_BLD = ${LIBDIR}/${COND_LIB_AEDEV}
endif


# CINT interpreter
ifneq (,$(findstring -DINCLUDE_LIB_CINT,$(CFGFLAGS)))
COND_LIB_CINT = libcint.$(libext)
COND_LIB_CINT_DIAG = libdiagcint.$(libext)
COND_LIB_CINT_BLD = ${LIBDIR}/${COND_LIB_CINT}
COND_LIB_CINT_DIAG_BLD = ${LIBDIR}/${COND_LIB_CINT_DIAG}

ifneq (,$(findstring -DINCLUDE_APIMODE,$(CFGFLAGS)))
COND_LIB_API_DIAG = libdiagapi.$(libext)
COND_LIB_API_DIAG_BLD = ${LIBDIR}/${COND_LIB_API_DIAG}
endif

endif

# C unit test framework
ifneq (,$(findstring -DINCLUDE_LIB_C_UNIT,$(CFGFLAGS)))
COND_LIB_C_UNIT = libc_unit.$(libext)
COND_LIB_C_UNIT_BLD = ${LIBDIR}/${COND_LIB_C_UNIT}
endif

APPL_LIBS = ${COND_LIB_DISCOVER} ${COND_LIB_STKTASK} \
    ${COND_LIB_CINT_DIAG} ${COND_LIB_C_UNIT} ${COND_LIB_CINT} \
    ${COND_LIB_AEDEV} ${COND_LIB_DIAG_APS}  ${COND_LIB_API_DIAG} \
    ${COND_LIB_PIONEER}
APPL_LIBS_BLD = ${COND_LIB_DISCOVER_BLD} ${COND_LIB_STKTASK_BLD} \
    ${COND_LIB_CINT_DIAG_BLD} ${COND_LIB_C_UNIT_BLD} \
    ${COND_LIB_CINT_BLD} ${COND_LIB_AEDEV_BLD} ${COND_LIB_DIAG_APS_BLD} \
    ${COND_LIB_API_DIAG_BLD} ${COND_LIB_PIONEER_BLD} \
    ${COND_DIAG_SAND_LIB_BLD}

# The CPU transport lives below the BCM RPC layer
BCM_LIB += ${COND_LIB_CPUTRANS} ${COND_LIB_CPUDB}

ifeq (1, $(BUILD_BCMISSU_DLL))
BCMLTSW_ISSUDLL_LIBS = libltsw_dllmain.a libltsw_dlldb.a
endif
