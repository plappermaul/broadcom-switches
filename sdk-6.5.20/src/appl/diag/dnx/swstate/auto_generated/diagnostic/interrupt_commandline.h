/** \file dnx/swstate/auto_generated/diagnostic/interrupt_commandline.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __INTERRUPT_COMMANDLINE_H__
#define __INTERRUPT_COMMANDLINE_H__

#include <appl/diag/sand/diag_sand_framework.h>
#include <appl/diag/sand/diag_sand_utils.h>
#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnxc/swstate/dnx_sw_state_dump.h>
#include <soc/dnx/swstate/auto_generated/types/interrupt_types.h>
#include <soc/types.h>
#if defined(DNX_SW_STATE_DIAGNOSTIC)
shr_error_e sh_dnx_swstate_interrupt_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_dump_options[];
extern sh_sand_man_t dnx_swstate_interrupt_dump_man;
shr_error_e sh_dnx_swstate_interrupt_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_size_get_options[];
extern sh_sand_man_t dnx_swstate_interrupt_size_get_man;
shr_error_e sh_dnx_swstate_interrupt_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_interrupt_diagnostic_operation_counters_man;
extern sh_sand_cmd_t sh_dnx_swstate_interrupt_cmds[];
extern sh_sand_man_t dnx_swstate_interrupt_man;
extern const char cmd_dnx_swstate_interrupt_desc[];

extern sh_sand_cmd_t sh_dnx_swstate_interrupt_flags_cmds[];
extern sh_sand_man_t dnx_swstate_interrupt_flags_man;
extern const char cmd_dnx_swstate_interrupt_flags_desc[];
shr_error_e sh_dnx_swstate_interrupt_flags_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_flags_dump_options[];
extern sh_sand_man_t dnx_swstate_interrupt_flags_dump_man;


shr_error_e sh_dnx_swstate_interrupt_flags_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_flags_size_get_options[];
extern sh_sand_man_t dnx_swstate_interrupt_flags_size_get_man;


shr_error_e sh_dnx_swstate_interrupt_flags_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_flags_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_interrupt_flags_diagnostic_operation_counters_man;



extern sh_sand_cmd_t sh_dnx_swstate_interrupt_storm_timed_count_cmds[];
extern sh_sand_man_t dnx_swstate_interrupt_storm_timed_count_man;
extern const char cmd_dnx_swstate_interrupt_storm_timed_count_desc[];
shr_error_e sh_dnx_swstate_interrupt_storm_timed_count_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_storm_timed_count_dump_options[];
extern sh_sand_man_t dnx_swstate_interrupt_storm_timed_count_dump_man;


shr_error_e sh_dnx_swstate_interrupt_storm_timed_count_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_storm_timed_count_size_get_options[];
extern sh_sand_man_t dnx_swstate_interrupt_storm_timed_count_size_get_man;


shr_error_e sh_dnx_swstate_interrupt_storm_timed_count_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_storm_timed_count_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_interrupt_storm_timed_count_diagnostic_operation_counters_man;



extern sh_sand_cmd_t sh_dnx_swstate_interrupt_storm_timed_period_cmds[];
extern sh_sand_man_t dnx_swstate_interrupt_storm_timed_period_man;
extern const char cmd_dnx_swstate_interrupt_storm_timed_period_desc[];
shr_error_e sh_dnx_swstate_interrupt_storm_timed_period_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_storm_timed_period_dump_options[];
extern sh_sand_man_t dnx_swstate_interrupt_storm_timed_period_dump_man;


shr_error_e sh_dnx_swstate_interrupt_storm_timed_period_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_storm_timed_period_size_get_options[];
extern sh_sand_man_t dnx_swstate_interrupt_storm_timed_period_size_get_man;


shr_error_e sh_dnx_swstate_interrupt_storm_timed_period_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_storm_timed_period_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_interrupt_storm_timed_period_diagnostic_operation_counters_man;



extern sh_sand_cmd_t sh_dnx_swstate_interrupt_storm_nominal_cmds[];
extern sh_sand_man_t dnx_swstate_interrupt_storm_nominal_man;
extern const char cmd_dnx_swstate_interrupt_storm_nominal_desc[];
shr_error_e sh_dnx_swstate_interrupt_storm_nominal_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_storm_nominal_dump_options[];
extern sh_sand_man_t dnx_swstate_interrupt_storm_nominal_dump_man;


shr_error_e sh_dnx_swstate_interrupt_storm_nominal_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_storm_nominal_size_get_options[];
extern sh_sand_man_t dnx_swstate_interrupt_storm_nominal_size_get_man;


shr_error_e sh_dnx_swstate_interrupt_storm_nominal_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_interrupt_storm_nominal_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_interrupt_storm_nominal_diagnostic_operation_counters_man;


#endif /* DNX_SW_STATE_DIAGNOSTIC */

#endif /* __INTERRUPT_COMMANDLINE_H__ */
