/** \file dnx/swstate/auto_generated/diagnostic/dnx_fabric_commandline.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __DNX_FABRIC_COMMANDLINE_H__
#define __DNX_FABRIC_COMMANDLINE_H__

#include <appl/diag/sand/diag_sand_framework.h>
#include <appl/diag/sand/diag_sand_utils.h>
#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnxc/swstate/dnx_sw_state_dump.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_fabric_types.h>
#include <include/shared/periodic_event.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_device.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_fabric.h>
#if defined(DNX_SW_STATE_DIAGNOSTIC)
shr_error_e sh_dnx_swstate_dnx_fabric_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_dump_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_dump_man;
shr_error_e sh_dnx_swstate_dnx_fabric_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_size_get_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_size_get_man;
shr_error_e sh_dnx_swstate_dnx_fabric_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_diagnostic_operation_counters_man;
extern sh_sand_cmd_t sh_dnx_swstate_dnx_fabric_cmds[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_man;
extern const char cmd_dnx_swstate_dnx_fabric_desc[];

extern sh_sand_cmd_t sh_dnx_swstate_dnx_fabric_modids_to_group_map_cmds[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_modids_to_group_map_man;
extern const char cmd_dnx_swstate_dnx_fabric_modids_to_group_map_desc[];
shr_error_e sh_dnx_swstate_dnx_fabric_modids_to_group_map_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_modids_to_group_map_dump_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_modids_to_group_map_dump_man;


shr_error_e sh_dnx_swstate_dnx_fabric_modids_to_group_map_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_modids_to_group_map_size_get_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_modids_to_group_map_size_get_man;


shr_error_e sh_dnx_swstate_dnx_fabric_modids_to_group_map_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_modids_to_group_map_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_modids_to_group_map_diagnostic_operation_counters_man;



extern sh_sand_cmd_t sh_dnx_swstate_dnx_fabric_modids_to_group_map_nof_modids_cmds[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_modids_to_group_map_nof_modids_man;
extern const char cmd_dnx_swstate_dnx_fabric_modids_to_group_map_nof_modids_desc[];
shr_error_e sh_dnx_swstate_dnx_fabric_modids_to_group_map_nof_modids_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_modids_to_group_map_nof_modids_dump_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_modids_to_group_map_nof_modids_dump_man;


shr_error_e sh_dnx_swstate_dnx_fabric_modids_to_group_map_nof_modids_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_modids_to_group_map_nof_modids_size_get_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_modids_to_group_map_nof_modids_size_get_man;


shr_error_e sh_dnx_swstate_dnx_fabric_modids_to_group_map_nof_modids_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_modids_to_group_map_nof_modids_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_modids_to_group_map_nof_modids_diagnostic_operation_counters_man;



extern sh_sand_cmd_t sh_dnx_swstate_dnx_fabric_modids_to_group_map_modids_cmds[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_modids_to_group_map_modids_man;
extern const char cmd_dnx_swstate_dnx_fabric_modids_to_group_map_modids_desc[];
shr_error_e sh_dnx_swstate_dnx_fabric_modids_to_group_map_modids_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_modids_to_group_map_modids_dump_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_modids_to_group_map_modids_dump_man;


shr_error_e sh_dnx_swstate_dnx_fabric_modids_to_group_map_modids_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_modids_to_group_map_modids_size_get_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_modids_to_group_map_modids_size_get_man;


shr_error_e sh_dnx_swstate_dnx_fabric_modids_to_group_map_modids_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_modids_to_group_map_modids_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_modids_to_group_map_modids_diagnostic_operation_counters_man;



extern sh_sand_cmd_t sh_dnx_swstate_dnx_fabric_links_cmds[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_links_man;
extern const char cmd_dnx_swstate_dnx_fabric_links_desc[];
shr_error_e sh_dnx_swstate_dnx_fabric_links_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_links_dump_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_links_dump_man;


shr_error_e sh_dnx_swstate_dnx_fabric_links_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_links_size_get_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_links_size_get_man;


shr_error_e sh_dnx_swstate_dnx_fabric_links_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_links_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_links_diagnostic_operation_counters_man;



extern sh_sand_cmd_t sh_dnx_swstate_dnx_fabric_links_is_link_allowed_cmds[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_links_is_link_allowed_man;
extern const char cmd_dnx_swstate_dnx_fabric_links_is_link_allowed_desc[];
shr_error_e sh_dnx_swstate_dnx_fabric_links_is_link_allowed_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_links_is_link_allowed_dump_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_links_is_link_allowed_dump_man;


shr_error_e sh_dnx_swstate_dnx_fabric_links_is_link_allowed_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_links_is_link_allowed_size_get_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_links_is_link_allowed_size_get_man;


shr_error_e sh_dnx_swstate_dnx_fabric_links_is_link_allowed_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_links_is_link_allowed_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_links_is_link_allowed_diagnostic_operation_counters_man;



extern sh_sand_cmd_t sh_dnx_swstate_dnx_fabric_links_is_link_isolated_cmds[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_links_is_link_isolated_man;
extern const char cmd_dnx_swstate_dnx_fabric_links_is_link_isolated_desc[];
shr_error_e sh_dnx_swstate_dnx_fabric_links_is_link_isolated_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_links_is_link_isolated_dump_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_links_is_link_isolated_dump_man;


shr_error_e sh_dnx_swstate_dnx_fabric_links_is_link_isolated_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_links_is_link_isolated_size_get_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_links_is_link_isolated_size_get_man;


shr_error_e sh_dnx_swstate_dnx_fabric_links_is_link_isolated_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_links_is_link_isolated_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_links_is_link_isolated_diagnostic_operation_counters_man;



extern sh_sand_cmd_t sh_dnx_swstate_dnx_fabric_load_balancing_periodic_event_handler_cmds[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_load_balancing_periodic_event_handler_man;
extern const char cmd_dnx_swstate_dnx_fabric_load_balancing_periodic_event_handler_desc[];
shr_error_e sh_dnx_swstate_dnx_fabric_load_balancing_periodic_event_handler_dump_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_load_balancing_periodic_event_handler_dump_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_load_balancing_periodic_event_handler_dump_man;


shr_error_e sh_dnx_swstate_dnx_fabric_load_balancing_periodic_event_handler_size_get_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_load_balancing_periodic_event_handler_size_get_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_load_balancing_periodic_event_handler_size_get_man;


shr_error_e sh_dnx_swstate_dnx_fabric_load_balancing_periodic_event_handler_diagnostic_operation_counters_cmd(int unit, args_t *args, sh_sand_control_t *sand_control);
extern sh_sand_option_t dnx_swstate_dnx_fabric_load_balancing_periodic_event_handler_diagnostic_operation_counters_options[];
extern sh_sand_man_t dnx_swstate_dnx_fabric_load_balancing_periodic_event_handler_diagnostic_operation_counters_man;


#endif /* DNX_SW_STATE_DIAGNOSTIC */

#endif /* __DNX_FABRIC_COMMANDLINE_H__ */
