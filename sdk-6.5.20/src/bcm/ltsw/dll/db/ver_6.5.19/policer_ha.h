/**************************************************************************
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated by HA parser from YAML formated file.
 * Edits to this file will be lost when it is regenerated.
 * Tool: bcmha/scripts/ha_yml_parser.py
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */
#ifndef POLICER_HA_H
#define POLICER_HA_H

#include <shr/shr_ha.h>

typedef struct {
   /*! BCM_POLICER_* flags. */
   uint32_t flags;
   /*! Policer mode. */
   uint8_t mode;
   /*! Committed rate (kbits per sec). */
   uint32_t ckbits_sec;
   /*! Committed rate (lower digits). */
   uint32_t cbits_sec_lower;
   /*! Committed burst (kbits). */
   uint32_t ckbits_burst;
   /*! Committed burst (lower digits). */
   uint32_t cbits_burst_lower;
   /*! Peak rate (kbits per sec). */
   uint32_t pkbits_sec;
   /*! Peak rate (lower digits). */
   uint32_t pbits_sec_lower;
   /*! Peak burst (kbits). */
   uint32_t pkbits_burst;
   /*! Peak burst (lower digits). */
   uint32_t pbits_burst_lower;
   /*! Granularity adjusted committed rate. */
   uint32_t actual_ckbits_sec;
   /*! Granularity adjusted committed rate (lower digits). */
   uint32_t actual_cbits_sec_lower;
   /*! Granularity adjusted committed burst size. */
   uint32_t actual_ckbits_burst;
   /*! Granularity adjusted committed burst size (lower digits). */
   uint32_t actual_cbits_burst_lower;
   /*! Granularity adjusted peak rate. */
   uint32_t actual_pkbits_sec;
   /*! Granularity adjusted peak rate (lower digits). */
   uint32_t actual_pbits_sec_lower;
   /*! Granularity adjusted peak burst size. */
   uint32_t actual_pkbits_burst;
   /*! Granularity adjusted peak burst size (lower digits). */
   uint32_t actual_pbits_burst_lower;
} bcmint_policer_cfg_t;

#define BCMINT_POLICER_CFG_T_ID 0x43967087162cc7b6

typedef struct {
   /*! Policer id. */
   int policer_id;
   /*! Policer status. */
   bool enabled;
   /*! Pipe instance. */
   int pipe;
   /*! Meter Pool Id of the current policer. */
   int pool_id;
   /*! Number of FP entries referencing this policer. */
   uint32_t ref_count;
   /*! Policer configuration. */
   bcmint_policer_cfg_t pol_cfg;
} bcmint_policer_entry_t;

#define BCMINT_POLICER_ENTRY_T_ID 0xf29b3ba7265e4087

typedef struct {
   /*! Poool priority. */
   int priority;
   /*! Number of policer and action entries in this pool. */
   uint32_t ref_count;
} bcmint_policer_pool_state_t;

#define BCMINT_POLICER_POOL_STATE_T_ID 0xf1777618a0b4a979

#endif /* POLICER_HA_H */
