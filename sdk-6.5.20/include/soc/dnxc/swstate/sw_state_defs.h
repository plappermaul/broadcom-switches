
/*
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 *
 * INFO: here we have the internal implementation for the ACCESS layer MACROs.
 *       this allow changing the behaviour of the infrastructure without changing the autocoder
 *       and the autogenerated access code
 */
#ifndef _DNX_SW_STATE_DEFS_H

#define _DNX_SW_STATE_DEFS_H

#include <sal/types.h>
#include <soc/types.h>
#include <soc/error.h>
#include <shared/shrextend/shrextend_debug.h>

typedef uint8 DNX_SW_STATE_BUFF;

typedef void sw_state_user_def_t;

#if 1
#define DNXC_SW_STATE_INTERNAL_ASSERT
#endif

#define DNXC_SW_STATE_MAX_NOF_ELEMENTS_IN_ARRAY (1 << 30)
#define DNXC_SW_STATE_MAX_ARRAY_ENTRY_SIZE      (1 << 30)

#define DNXC_SW_STATE_INLINE

#define DNXC_SW_STATE_INIT_FUNC_DEFS\
    SHR_FUNC_INIT_VARS(unit)

#define DNXC_SW_STATE_FUNC_RETURN\
    SHR_EXIT();\
exit:\
    SHR_FUNC_EXIT

#define DNXC_SW_STATE_ALIGN_SIZE(size) \
    size = (((size) + 0x7) & (~0x7))

#define DNXC_SW_STATE_NONE                         0
#define DNXC_SW_STATE_NO_FLAGS                     0
#define DNXC_SW_STATE_ALLOW_AUTOSYNC               SAL_BIT(0)
#define DNXC_SW_STATE_DNX_DATA_ALLOC               SAL_BIT(1)
#define DNXC_SW_STATE_DNX_DATA_ALLOC_EXCEPTION     SAL_BIT(2)
#define DNXC_SW_STATE_ALLOC_AFTER_INIT_EXCEPTION   SAL_BIT(3)
#define DNXC_SW_STATE_ALLOC_BITMAP_FLAG            SAL_BIT(4)
#define DNXC_SW_STATE_JOURNAL_ROLLING_BACK         SAL_BIT(5)
#define DNXC_SW_STATE_AUTO_GENERATED_ALLOCATION    SAL_BIT(6)
#define DNXC_SW_STATE_LINKED_LIST_FREE             SAL_BIT(7)
#define DNXC_SW_STATE_ALLOW_WRITES_DURING_WB       SAL_BIT(8)
#define DNXC_SW_STATE_ALLOW_WRITES_DURING_ALL      SAL_BIT(9)

#endif
