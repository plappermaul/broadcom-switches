/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_MBCM_UFT_H
#define BCMINT_LTSW_MBCM_UFT_H

#include <bcm/switch.h>

#include <bcm_int/ltsw/uft_int.h>
#include <bcm_int/ltsw/uft.h>

#include <sal/sal_types.h>

/*!
 * \brief Get the variant specific database.
 *
 * \param [in] unit Unit Number.
 * \param [out] uft_db UFT database structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_db_get_f)(
    int unit,
    bcmint_uft_db_t *uft_db);

/*!
 * \brief Initializes the UFT module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_init_f)(int unit);

/*!
 * \brief De-initializes the UFT module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_detach_f)(int unit);

/*!
 * \brief Get the current UFT mode.
 *
 * \param [in] unit Unit Number.
 * \param [out] uft_mode UFT mode.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_mode_get_f)(
    int unit,
    bcmi_ltsw_uft_mode_t *uft_mode);

/*!
 * \brief Set the maximum number of entry moves for hash reordering.
 *
 * \param [in] unit Unit Number.
 * \param [in] type Move depth switch control type.
 * \param [in] arg Move depth value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_multi_move_depth_set_f)(
    int unit,
    bcm_switch_control_t type,
    int arg);

/*!
 * \brief Get the maximum number of entry moves for hash reordering.
 *
 * \param [in] unit Unit Number.
 * \param [in] type Move depth switch control type.
 * \param [out] arg Move depth value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_multi_move_depth_get_f)(
    int unit,
    bcm_switch_control_t type,
    int *arg);

/*!
 * \brief Get information about a hash bank.
 *
 * \param [in] unit Unit Number.
 * \param [in/out] bank_info Hash bank information structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_bank_info_get_f)(
    int unit,
    bcm_switch_hash_bank_info_t *bank_info);

/*!
 * \brief Get the UFT banks assigned to a hash table.
 *
 * \param [in] unit Unit Number.
 * \param [in] hash_table Hash table.
 * \param [in] array_size Array size of bank_array.
 * \param [out] bank_array Hash bank array.
 * \param [out] num_banks Actual number of UFT banks returned in bank_array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_bank_multi_get_f)(
    int unit,
    bcm_switch_hash_table_t hash_table,
    int array_size,
    bcm_switch_hash_bank_t *bank_array,
    int *num_banks);

/*!
 * \brief Get the hash tables to which a given UFT bank is assigned.
 *
 * \param [in] unit Unit Number.
 * \param [in] bank_num UFT bank number.
 * \param [in] array_size Array size of table_array.
 * \param [out] table_array Hash table array.
 * \param [out] num_tables Actual number of hash tables returned in table_array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_table_multi_get_f)(
    int unit,
    bcm_switch_hash_bank_t bank_num,
    int array_size,
    bcm_switch_hash_table_t *table_array,
    int *num_tables);

/*!
 * \brief UFT bank control set function.
 *
 * \param [in] unit Unit Number.
 * \param [in] bank_control Hash bank control structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_bank_control_set_f)(
    int unit,
    bcm_switch_hash_bank_control_t *bank_control);

/*!
 * \brief Hash bank control get function.
 *
 * \param [in] unit Unit Number.
 * \param [in/out] bank_control Hash bank control structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_bank_control_get_f)(
    int unit,
    bcm_switch_hash_bank_control_t *bank_control);

/*!
 * \brief Hash bank config set function.
 *
 * \param [in] unit Unit Number.
 * \param [in] hash_table Hash table.
 * \param [in] bank_num Bank number.
 * \param [in] hash_type Hash type.
 * \param [in] hash_offset Hash offset.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_bank_config_set_f)(
    int unit,
    bcm_switch_hash_table_t hash_table,
    uint32_t bank_num,
    int hash_type,
    uint32_t hash_offset);

/*!
 * \brief Hash bank config get function.
 *
 * \param [in] unit Unit Number.
 * \param [in] hash_table Hash table.
 * \param [in] bank_num Bank number.
 * \param [out] hash_type Hash type.
 * \param [out] hash_offset Hash offset.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_bank_config_get_f)(
    int unit,
    bcm_switch_hash_table_t hash_table,
    uint32_t bank_num,
    int *hash_type,
    uint32_t *hash_offset);

/*!
 * \brief Hash bank max num get function.
 *
 * \param [in] unit Unit Number.
 * \param [in] hash_table Hash table.
 * \param [out] bank_count Bank count.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_bank_max_get_f)(
    int unit,
    bcm_switch_hash_table_t hash_table,
    uint32_t *bank_count);

/*!
 * \brief Get UFT variant database.
 *
 * \param [in] unit Unit Number.
 * \param [out] uft_var_db UFT variant database.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*uft_var_db_get_f)(
    int unit,
    bcmint_uft_var_db_t **uft_var_db);

/*!
 * \brief Uft driver structure.
 */
typedef struct mbcm_ltsw_uft_drv_s {

    /*! Get the variant specific database. */
    uft_db_get_f uft_db_get;

    /*! Initializes the UFT module. */
    uft_init_f uft_init;

    /*! De-initializes the UFT module. */
    uft_detach_f uft_detach;

    /*! Get the current UFT mode. */
    uft_mode_get_f uft_mode_get;

    /*! Set the maximum number of entry moves for hash reordering. */
    uft_multi_move_depth_set_f uft_multi_move_depth_set;

    /*! Get the maximum number of entry moves for hash reordering. */
    uft_multi_move_depth_get_f uft_multi_move_depth_get;

    /*! Get information about a hash bank. */
    uft_bank_info_get_f uft_bank_info_get;

    /*! Get the UFT banks assigned to a hash table. */
    uft_bank_multi_get_f uft_bank_multi_get;

    /*! Get the hash tables to which a given UFT bank is assigned. */
    uft_table_multi_get_f uft_table_multi_get;

    /*! UFT bank control set function. */
    uft_bank_control_set_f uft_bank_control_set;

    /*! Hash bank control get function. */
    uft_bank_control_get_f uft_bank_control_get;

    /*! Hash bank config set function. */
    uft_bank_config_set_f uft_bank_config_set;

    /*! Hash bank config get function. */
    uft_bank_config_get_f uft_bank_config_get;

    /*! Hash bank max num get function. */
    uft_bank_max_get_f uft_bank_max_get;

    /*! Get UFT variant database. */
    uft_var_db_get_f uft_var_db_get;

} mbcm_ltsw_uft_drv_t;

/*!
 * \brief Set the UFT driver of the device.
 *
 * \param [in] unit Unit Number.
 * \param [in] drv Uft driver to set.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_drv_set(
    int unit,
    mbcm_ltsw_uft_drv_t *drv);

/*!
 * \brief Get the variant specific database.
 *
 * \param [in] unit Unit Number.
 * \param [out] uft_db UFT database structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_db_get(
    int unit,
    bcmint_uft_db_t *uft_db);

/*!
 * \brief Initializes the UFT module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_init(int unit);

/*!
 * \brief De-initializes the UFT module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_detach(int unit);

/*!
 * \brief Get the current UFT mode.
 *
 * \param [in] unit Unit Number.
 * \param [out] uft_mode UFT mode.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_mode_get(
    int unit,
    bcmi_ltsw_uft_mode_t *uft_mode);

/*!
 * \brief Set the maximum number of entry moves for hash reordering.
 *
 * \param [in] unit Unit Number.
 * \param [in] type Move depth switch control type.
 * \param [in] arg Move depth value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_multi_move_depth_set(
    int unit,
    bcm_switch_control_t type,
    int arg);

/*!
 * \brief Get the maximum number of entry moves for hash reordering.
 *
 * \param [in] unit Unit Number.
 * \param [in] type Move depth switch control type.
 * \param [out] arg Move depth value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_multi_move_depth_get(
    int unit,
    bcm_switch_control_t type,
    int *arg);

/*!
 * \brief Get information about a hash bank.
 *
 * \param [in] unit Unit Number.
 * \param [in/out] bank_info Hash bank information structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_bank_info_get(
    int unit,
    bcm_switch_hash_bank_info_t *bank_info);

/*!
 * \brief Get the UFT banks assigned to a hash table.
 *
 * \param [in] unit Unit Number.
 * \param [in] hash_table Hash table.
 * \param [in] array_size Array size of bank_array.
 * \param [out] bank_array Hash bank array.
 * \param [out] num_banks Actual number of UFT banks returned in bank_array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_bank_multi_get(
    int unit,
    bcm_switch_hash_table_t hash_table,
    int array_size,
    bcm_switch_hash_bank_t *bank_array,
    int *num_banks);

/*!
 * \brief Get the hash tables to which a given UFT bank is assigned.
 *
 * \param [in] unit Unit Number.
 * \param [in] bank_num UFT bank number.
 * \param [in] array_size Array size of table_array.
 * \param [out] table_array Hash table array.
 * \param [out] num_tables Actual number of hash tables returned in table_array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_table_multi_get(
    int unit,
    bcm_switch_hash_bank_t bank_num,
    int array_size,
    bcm_switch_hash_table_t *table_array,
    int *num_tables);

/*!
 * \brief UFT bank control set function.
 *
 * \param [in] unit Unit Number.
 * \param [in] bank_control Hash bank control structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_bank_control_set(
    int unit,
    bcm_switch_hash_bank_control_t *bank_control);

/*!
 * \brief Hash bank control get function.
 *
 * \param [in] unit Unit Number.
 * \param [in/out] bank_control Hash bank control structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_bank_control_get(
    int unit,
    bcm_switch_hash_bank_control_t *bank_control);

/*!
 * \brief Hash bank config set function.
 *
 * \param [in] unit Unit Number.
 * \param [in] hash_table Hash table.
 * \param [in] bank_num Bank number.
 * \param [in] hash_type Hash type.
 * \param [in] hash_offset Hash offset.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_bank_config_set(
    int unit,
    bcm_switch_hash_table_t hash_table,
    uint32_t bank_num,
    int hash_type,
    uint32_t hash_offset);

/*!
 * \brief Hash bank config get function.
 *
 * \param [in] unit Unit Number.
 * \param [in] hash_table Hash table.
 * \param [in] bank_num Bank number.
 * \param [out] hash_type Hash type.
 * \param [out] hash_offset Hash offset.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_bank_config_get(
    int unit,
    bcm_switch_hash_table_t hash_table,
    uint32_t bank_num,
    int *hash_type,
    uint32_t *hash_offset);

/*!
 * \brief Hash bank max num get function.
 *
 * \param [in] unit Unit Number.
 * \param [in] hash_table Hash table.
 * \param [out] bank_count Bank count.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_bank_max_get(
    int unit,
    bcm_switch_hash_table_t hash_table,
    uint32_t *bank_count);

/*!
 * \brief Get UFT variant database.
 *
 * \param [in] unit Unit Number.
 * \param [out] uft_var_db UFT variant database.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_uft_var_db_get(
    int unit,
    bcmint_uft_var_db_t **uft_var_db);

#endif /* BCMINT_LTSW_MBCM_UFT_H */
