/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMI_LTSW_FLOW_H
#define BCMI_LTSW_FLOW_H

#include <bcm/flow.h>
#include <bcm/types.h>
#include <bcm/trunk.h>
#include <bcm/switch.h>

#include <sal/sal_types.h>

/*!
 * \brief Get the field name for logical field ID.
 *
 * \param [in] unit Unit Number.
 * \param [in] flow_handle Flow handle.
 * \param [in] field_id Logical field ID.
 * \param [out] field_name Logical field name.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flow_logical_field_name_get(
    int unit,
    bcm_flow_handle_t flow_handle,
    uint32_t field_id,
    char *field_name);

/*!
 * \brief Get the table name for internal flow option ID.
 *
 * \param [in] unit Unit Number.
 * \param [in] flow_handle Flow handle.
 * \param [in] option_id Flow option ID.
 * \param [out] table_name Logical table name.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flow_option_logical_table_name_get(
    int unit,
    bcm_flow_handle_t flow_handle,
    bcm_flow_option_id_t option_id,
    char *table_name);

/*!
 * \brief  Get flow port type.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 * \param [out] type Flow port type, TRUE for access, FALSE for network.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flow_port_type(
    int unit,
    bcm_port_t port,
    uint8_t *type);

/*!
 * \brief  Check whehter flow port is network port.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 *
 * \retval TRUE Flow port exist and is network port.
 * \retval FALSE Flow port not exist or is access port.
 */
extern int
bcmi_ltsw_flow_port_is_network(
    int unit,
    bcm_port_t port);

/*!
 * \brief Get flow port from L2 interface.
 *
 * \param [in] unit Unit Number.
 * \param [in] l2_if L2 interface.
 * \param [out] port Port Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flow_l2_if_to_port(
    int unit,
    int l2_if,
    bcm_port_t *port);

/*!
 * \brief Get L2 interface from flow port.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 * \param [out] l2_if L2 interface.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flow_port_to_l2_if(
    int unit,
    bcm_port_t port,
    int *l2_if);

/*!
 * \brief Dump flow handle info.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flow_handle_dump(int unit);

/*!
 * \brief Dump flow option info.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flow_option_dump(int unit);

/*!
 * \brief Helper funtion to get modid, port, and trunk_id from a flow port.
 *
 * \param [in] unit Unit Number.
 * \param [in] flow_port Flow port.
 * \param [out] modid Module ID.
 * \param [out] port Port Number.
 * \param [out] trunk_id Trunk ID.
 * \param [out] id HW ID.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flow_gport_resolve(
    int unit,
    bcm_gport_t flow_port,
    bcm_module_t *modid,
    bcm_port_t *port,
    bcm_trunk_t *trunk_id,
    int *id);

/*!
 * \brief Display FLOW software structure information.
 *
 * \param [in] unit Unit Number.
 */
extern void
bcmi_ltsw_flow_sw_dump(int unit);

/*!
 * \brief Resolve the tunnel ID into the tunnel logical table index.
 *
 * \param [in] unit Unit Number.
 * \param [in] tunnel_id Tunnel gport ID.
 * \param [out] tnl_idx Tunnel logical table index.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flow_tunnel_id_resolve(
    int unit,
    bcm_gport_t tunnel_id,
    uint32_t *tnl_idx);

/*!
 * \brief Enable/disable EVPN functionality.
 *
 * \param [in] unit Unit Number.
 * \param [in] enable EVPN enable indicator. 0 : Disable EVPN, 1 : Enable EVPN.
 */
extern int
bcmi_ltsw_flow_evpn_enable_set(
    int unit,
    int enable);

/*!
 * \brief Get the enable status of EVPN functionality.
 *
 * \param [in] unit Unit Number.
 * \param [in] enable EVPN enable indicator. 0 : EVPN disabled , 1 : EVPN enabled.
 */
extern int
bcmi_ltsw_flow_evpn_enable_get(
    int unit,
    int *enable);

/*!
 * \brief Specify general switch behaviors.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The desired configuration parameter to retrieve.
 * \param [in] arg The value with which to set the parameter.
 */
extern int
bcmi_ltsw_flow_switch_control_set(
    int unit,
    bcm_switch_control_t type,
    int arg);

/*!
 * \brief Retrieve general switch behaviors.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The desired configuration parameter to retrieve.
 * \param [in] arg Pointer to where the retrieved value will be written.
 */
extern int
bcmi_ltsw_flow_switch_control_get(
    int unit,
    bcm_switch_control_t type,
    int *arg);

/*!
 * \brief Set the matching criteria of flow gport to the vp_lag vp.
 *
 * \param [in] unit Unit Number.
 * \param [in] flow_port_id Flow gport ID.
 * \param [in] vp_lag_vp VPLAG vp ID.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flow_port_source_vp_lag_set(
    int unit,
    bcm_gport_t flow_port_id,
    int vp_lag_vp);

/*!
 * \brief Get the vp_lag vp matched by the criteria of the flow gport.
 *
 * \param [in] unit Unit Number.
 * \param [in] flow_port_id Flow gport ID.
 * \param [out] vp_lag_vp VPLAG vp ID.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flow_port_source_vp_lag_get(
    int unit,
    bcm_gport_t flow_port_id,
    int *vp_lag_vp);

/*!
 * \brief clear the vp_lag vp matched by the criteria of the flow gport.
 *
 * \param [in] unit Unit Number.
 * \param [in] flow_port_id Flow gport ID.
 * \param [in] vp_lag_vp VPLAG vp ID.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flow_port_source_vp_lag_clr(
    int unit,
    bcm_gport_t flow_port_id,
    int vp_lag_vp);

#endif /* BCMI_LTSW_FLOW_H */
