/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_XFS_POLICER_H
#define BCMINT_LTSW_XFS_POLICER_H

#include <bcm/policer.h>
#include <bcm_int/ltsw/policer.h>

#include <sal/sal_types.h>

/*!
 * \brief Deinit Policer module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_policer_deinit(int unit);

/*!
 * \brief Init Policer module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_policer_init(int unit);

/*!
 * \brief Create a policer entry.
 *
 * \param [in] unit Unit Number.
 * \param [in] pol_cfg Policer configuration.
 * \param [out] policer_id Policer ID.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_policer_create(
    int unit,
    bcm_policer_config_t *pol_cfg,
    bcm_policer_t *policer_id);

/*!
 * \brief Destroy a policer entry.
 *
 * \param [in] unit Unit Number.
 * \param [in] policer_id Policer ID.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_policer_destroy(
    int unit,
    bcm_policer_t policer_id);

/*!
 * \brief Destroy all policer entries.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_policer_destroy_all(int unit);

/*!
 * \brief Set the config settings for a policer entry.
 *
 * \param [in] unit Unit Number.
 * \param [in] policer_id Policer ID.
 * \param [in] pol_cfg Policer configuration.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_policer_set(
    int unit,
    bcm_policer_t policer_id,
    bcm_policer_config_t *pol_cfg);

/*!
 * \brief Get the config settings for a policer entry.
 *
 * \param [in] unit Unit Number.
 * \param [in] policer_id Policer ID.
 * \param [out] pol_cfg Policer configuration.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_policer_get(
    int unit,
    bcm_policer_t policer_id,
    bcm_policer_config_t *pol_cfg);

/*!
 * \brief Traverse all existing policer entries and call supplied callback function.
 *
 * \param [in] unit Unit Number.
 * \param [in] cb Callback function.
 * \param [in] user_data User data.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_policer_traverse(
    int unit,
    bcm_policer_traverse_cb cb,
    void *user_data);

/*!
 * \brief Install a policer entry.
 *
 * \param [in] unit Unit Number.
 * \param [in] policer_id Policer ID.
 * \param [in] pol_cfg Policer configuration.
 * \param [in] pipe Pipe instance.
 * \param [in] pool Pool number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_policer_install(
    int unit,
    bcm_policer_t policer_id,
    bcm_policer_config_t *pol_cfg,
    int pipe,
    int pool);

#endif /* BCMINT_LTSW_XFS_POLICER_H */
