/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_XFS_STAT_H
#define BCMINT_LTSW_XFS_STAT_H

#include <bcm/types.h>

#include <bcm_int/ltsw/stat_int.h>
#include <bcm_int/ltsw/stat.h>

#include <sal/sal_types.h>

/*!
 * \brief Initializes the stat module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_stat_init(int unit);

/*!
 * \brief De-initializes the stat module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_stat_detach(int unit);

/*!
 * \brief Initializes the stat index for counter mapping table.
 *
 * \param [in] unit Unit Number.
 * \param [in] dev_info Stat device information structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_stat_index_init(
    int unit,
    const bcmint_stat_dev_info_t *dev_info);

/*!
 * \brief De-initializes the stat LT entries.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_stat_lt_detach(int unit);

/*!
 * \brief Get the dedicated counter associated with a given drop event.
 *
 * \param [in] unit Unit Number.
 * \param [in] sync_mode Sync mode.
 * \param [in] type Drop event type.
 * \param [out] val 64-bit counter value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_stat_drop_event_counter_get(
    int unit,
    bool sync_mode,
    bcm_pkt_drop_event_t type,
    uint64_t *val);

/*!
 * \brief Clear the dedicated counter associated with a given drop event.
 *
 * \param [in] unit Unit Number.
 * \param [in] type Drop event type.
 * \param [in] val 64-bit counter value. Set val to 0 to clear the counter.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_stat_drop_event_counter_set(
    int unit,
    bcm_pkt_drop_event_t type,
    uint64_t val);

/*!
 * \brief Get the dedicated counter associated with a given trace event.
 *
 * \param [in] unit Unit Number.
 * \param [in] sync_mode Sync mode.
 * \param [in] type Trace event type.
 * \param [out] val 64-bit counter value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_stat_trace_event_counter_get(
    int unit,
    bool sync_mode,
    bcm_pkt_trace_event_t type,
    uint64_t *val);

/*!
 * \brief Clear the dedicated counter associated with a given trace event.
 *
 * \param [in] unit Unit Number.
 * \param [in] type Trace event type.
 * \param [in] val 64-bit counter value. Set val to 0 to clear the counter.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_stat_trace_event_counter_set(
    int unit,
    bcm_pkt_trace_event_t type,
    uint64_t val);

/*!
 * \brief Initializes the counter control information.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_stat_counter_control_init(int unit);

/*!
 * \brief Get the counter control information structure.
 *
 * \param [in] unit Unit Number.
 * \param [out] info Counter control information structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xfs_ltsw_stat_counter_control_get(
    int unit,
    bcmi_ltsw_stat_counter_control_t *info);

#endif /* BCMINT_LTSW_XFS_STAT_H */
