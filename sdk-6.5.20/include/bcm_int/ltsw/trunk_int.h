/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_TRUNK_INT_H
#define BCMINT_LTSW_TRUNK_INT_H

#include <bcm/types.h>

#include <bcm_int/ltsw/generated/trunk_ha.h>

/*!
 * \brief Type-based Trunk Id.
 */
typedef int bcmint_trunk_id_t;

/*!
 * \brief Trunk type.
 */
typedef enum bcmint_trunk_type_s {

    /*! Front panel trunk. */
    bcmintTrunkTypeFrontPanel = 0,

    /*! Fabric trunk. */
    bcmintTrunkTypeFabric = 1,

    /*! Virtual Port Link Aggregation Group. */
    bcmintTrunkTypeVplag = 2,

    /*! Trunk type count. */
    bcmintTrunkTypeCount = 3

} bcmint_trunk_type_t;

#define BCMINT_TRUNK_TYPE_STR \
{ \
    "FrontPanel", \
    "Fabric", \
    "Vplag" \
}

/*!
 * \brief Fabric trunk override type.
 */
typedef enum bcmint_trunk_override_type_s {

    /*! Fabric trunk resolution is disabled by vlan ID. */
    bcmintTrunkOverrideTypeVlan = 0,

    /*! Fabric trunk resolution is disabled by module ID. */
    bcmintTrunkOverrideTypeUcast = 1,

    /*! Fabric trunk resolution is disabled by L2mc index. */
    bcmintTrunkOverrideTypeL2mc = 2,

    /*! Fabric trunk resolution is disabled by IPMC index. */
    bcmintTrunkOverrideTypeIpmc = 3,

    /*! Fabric trunk resolution is disabled for all non-unicast packets. */
    bcmintTrunkOverrideTypeNonUcast = 4,

    /*! Fabric trunk override type count. */
    bcmintTrunkOverrideTypeCount = 5

} bcmint_trunk_override_type_t;

#define BCMINT_TRUNK_OVERRIDE_TYPE_STR \
{ \
    "Vlan", \
    "Ucast", \
    "L2mc", \
    "Ipmc", \
    "NonUcast" \
}

/*!
 * \brief Trunk update information.
 */
typedef struct bcmint_trunk_update_info_s {

    /*! Number of leaving members. */
    int num_leaving;

    /*! Leaving member gport array. */
    bcm_gport_t *leaving_members;

    /*! Number of staying members. */
    int num_staying;

    /*! Staying member gport array. */
    bcm_gport_t *staying_members;

    /*! Number of joining members. */
    int num_joining;

    /*! Joining member gport array. */
    bcm_gport_t *joining_members;

    /*! Max failto port number. */
    int ftp_max;

} bcmint_trunk_update_info_t;

/*!
 * \brief Trunk public information.
 */
typedef struct bcmint_trunk_pub_info_s {

    /*! Number of (front panel) trunk groups. */
    int ngroups_fp;

    /*! Max port number per trunk group. */
    int nports_fp;

    /*! Max failto port number per trunk member. */
    int nftports_fp;

    /*! Number of fabric trunk groups. */
    int ngroups_fabric;

    /*! Max port number per fabric trunk group. */
    int nports_fabric;

    /*! Max failto port number per fabric trunk member. */
    int nftports_fabric;

    /*! Number of Virtual Port Link Aggregation Group. */
    int ngroups_vplag;

    /*! Max virtual port number per Virtual Port Link Aggregation Group. */
    int nvps_vplag;

    /*! Max virtual port number per weighted Virtual Port Link Aggregation Group. */
    int nvps_weighted_vplag;

    /*! The base vplag index. */
    int base_vplag_idx;

} bcmint_trunk_pub_info_t;

/*!
 * \brief Trunk private information.
 */
typedef struct bcmint_trunk_priv_info_s {

    /*! Trunk information. */
    bcmint_trunk_info_t *t_info;

    /*! Array of trunk members. */
    bcmint_trunk_member_t *member_array;

} bcmint_trunk_priv_info_t;

/*! HA subcomponent id for trunk private t_info information. */
#define BCMINT_TRUNK_PRIV_INFO_T_INFO_SUB_COMP_ID (1)

/*! HA subcomponent id for trunk private member information. */
#define BCMINT_TRUNK_PRIV_INFO_MEMBER_SUB_COMP_ID (2)

/*!
 * \brief Trunk member operation code.
 */
/*! To indicate an operation for setting members. */
#define BCMINT_TRUNK_MEMBER_OP_SET 0

/*! To indicate an operation for adding a member. */
#define BCMINT_TRUNK_MEMBER_OP_ADD 1

/*! To indicate an operation for deleting member. */
#define BCMINT_TRUNK_MEMBER_OP_DELETE 2

#endif /* BCMINT_LTSW_TRUNK_INT_H */
