/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_FLEXCTR_INT_H
#define BCMINT_LTSW_FLEXCTR_INT_H

#include <sal/sal_types.h>

/*! Ingress quantization sub component id. */
#define BCMINT_FLEXCTR_ING_QUANT_SUB_COMP_ID (0)

/*! Egress quantization sub component id. */
#define BCMINT_FLEXCTR_EGR_QUANT_SUB_COMP_ID (1)

/*! Ingress counter action sub component id. */
#define BCMINT_FLEXCTR_ING_ACTION_SUB_COMP_ID (2)

/*! Egress counter action sub component id. */
#define BCMINT_FLEXCTR_EGR_ACTION_SUB_COMP_ID (3)

/*! Ingress counter pool sub component id. */
#define BCMINT_FLEXCTR_ING_POOL_SUB_COMP_ID (4)

/*! Egress counter pool sub component id. */
#define BCMINT_FLEXCTR_EGR_POOL_SUB_COMP_ID (5)

/*! Ingress counter group action sub component id. */
#define BCMINT_FLEXCTR_ING_GRP_ACTION_SUB_COMP_ID (6)

/*! Egress counter group action sub component id. */
#define BCMINT_FLEXCTR_EGR_GRP_ACTION_SUB_COMP_ID (7)

/*! Ingress packet attribute sub component id. */
#define BCMINT_FLEXCTR_ING_PKT_ATTR_SUB_COMP_ID (8)

/*! Egress packet attribute sub component id. */
#define BCMINT_FLEXCTR_EGR_PKT_ATTR_SUB_COMP_ID (9)

/*! Table bit of ing_system_port. */
#define BCMINT_FLEXCTR_ING_SYSTEM_PORT_TBL_BIT (0)

/*! Table bit of ing_l2_iif. */
#define BCMINT_FLEXCTR_ING_L2_IIF_TBL_BIT (1)

/*! Table bit of ing_vfi. */
#define BCMINT_FLEXCTR_ING_VFI_TBL_BIT (2)

/*! Table bit of ing_svp. */
#define BCMINT_FLEXCTR_ING_SVP_TBL_BIT (3)

/*! Table bit of ing_l3_iif. */
#define BCMINT_FLEXCTR_ING_L3_IIF_TBL_BIT (4)

/*! Table bit of ing_vrf. */
#define BCMINT_FLEXCTR_ING_VRF_TBL_BIT (5)

/*! Table bit of ing_l3_ipv4_flow. */
#define BCMINT_FLEXCTR_ING_L3_IPV4_FLOW_TBL_BIT (6)

/*! Table bit of vfp. */
#define BCMINT_FLEXCTR_ING_VFP_TBL_BIT (7)

/*! Table bit of ifp. */
#define BCMINT_FLEXCTR_ING_IFP_TBL_BIT (8)

/*! Table bit of destination_fp. */
#define BCMINT_FLEXCTR_DESTINATION_FP_TBL_BIT (9)

/*! Table bit of port_system_destination. */
#define BCMINT_FLEXCTR_PORT_SYSTEM_DESTINATION_TBL_BIT (10)

/*! Table bit of exactmatch. */
#define BCMINT_FLEXCTR_ING_EXACTMATCH_TBL_BIT (11)

/*! Table bit of ipmc. */
#define BCMINT_FLEXCTR_IPMC_TBL_BIT (12)

/*! Table bit of dst l2. */
#define BCMINT_FLEXCTR_L2DST_TBL_BIT (13)

/*! Table bit of src l2. */
#define BCMINT_FLEXCTR_L2SRC_TBL_BIT (14)

/*! Table bit of ing sample pool. */
#define BCMINT_FLEXCTR_ING_SAMPLE_POOL_TBL_BIT (15)

/*! Table bit of ing sample count. */
#define BCMINT_FLEXCTR_ING_SAMPLE_COUNT_TBL_BIT (16)

/*! Table bit of flex sample pool. */
#define BCMINT_FLEXCTR_FLEX_SAMPLE_POOL_TBL_BIT (17)

/*! Table bit of flex sample count. */
#define BCMINT_FLEXCTR_FLEX_SAMPLE_COUNT_TBL_BIT (18)

/*! Table bit of exact match flow tracker. */
#define BCMINT_FLEXCTR_EM_FT_TBL_BIT (19)

/*! Table bit of ingress vlan translation. */
#define BCMINT_FLEXCTR_ING_VLAN_XLATE_TBL_BIT (20)

/*! Table bit of egr_l3_next_hop_1. */
#define BCMINT_FLEXCTR_EGR_L3_NEXT_HOP_1_TBL_BIT (0)

/*! Table bit of egr_l3_oif_1. */
#define BCMINT_FLEXCTR_EGR_L3_OIF_1_TBL_BIT (1)

/*! Table bit of egr_l3_next_hop_2. */
#define BCMINT_FLEXCTR_EGR_L3_NEXT_HOP_2_TBL_BIT (2)

/*! Table bit of egr_l3_oif_2. */
#define BCMINT_FLEXCTR_EGR_L3_OIF_2_TBL_BIT (3)

/*! Table bit of egr_l2_oif. */
#define BCMINT_FLEXCTR_EGR_L2_OIF_TBL_BIT (4)

/*! Table bit of egr_vfi. */
#define BCMINT_FLEXCTR_EGR_VFI_TBL_BIT (5)

/*! Table bit of egr_dvp. */
#define BCMINT_FLEXCTR_EGR_DVP_TBL_BIT (6)

/*! Table bit of efp. */
#define BCMINT_FLEXCTR_EGR_EFP_TBL_BIT (7)

/*! Table bit of egress vlan translation. */
#define BCMINT_FLEXCTR_EGR_VLAN_XLATE_TBL_BIT (8)

/*!
 * \brief Flex counter source infomation.
 */
typedef struct bcmint_flexctr_source_info_s {

    /*! Source enumeration in HSDK API. */
    int source;

    /*! Stage id. */
    int stage;

    /*! Logical table in SDKLT. */
    const char *table;

    /*! Table bit. */
    uint32_t tbl_bit;

} bcmint_flexctr_source_info_t;

/*!
 * \brief Object type.
 */
typedef enum bcmint_flexctr_object_type_s {

    /*! Const object. */
    FlexctrObjectTypeConst = 0,

    /*! Trigger object. */
    FlexctrObjectTypeTrigger = 1,

    /*! Quantization object. */
    FlexctrObjectTypeQuant = 2,

    /*! Menu object. */
    FlexctrObjectTypeMenu = 3,

    /*! Menu object with ID. */
    FlexctrObjectTypeMenuId = 4,

    /*! Always last one. */
    FlexctrObjectTypeCount = 5

} bcmint_flexctr_object_type_t;

#define BCMINT_FLEXCTR_OBJECT_TYPE_STR \
{ \
    "Const", \
    "Trigger", \
    "Quant", \
    "Menu", \
    "MenuId" \
}

/*!
 * \brief Flex counter object information.
 */
typedef struct bcmint_flexctr_object_info_s {

    /*! Object enumeration in HSDK API. */
    int object;

    /*! Stage id. */
    int stage;

    /*! Object type. */
    bcmint_flexctr_object_type_t obj_type;

    /*! Object symbol in SDKLT. */
    const char *symbol;

} bcmint_flexctr_object_info_t;

/*!
 * \brief Flex counter trigger interval information.
 */
typedef struct bcmint_flexctr_interval_info_s {

    /*! Trigger interval enumeration in HSDK API. */
    int interval;

} bcmint_flexctr_interval_info_t;

/*!
 * \brief Flex counter object enumeration map.
 */
typedef struct bcmint_flexctr_object_enum_map_s {

    /*! Object enumeration name in SDKLT. */
    const char *name;

    /*! Object enumeration value. */
    uint32_t value;

} bcmint_flexctr_object_enum_map_t;

/*!
 * \brief Flex counter flex action range.
 */
typedef struct bcmint_flexctr_flex_action_range_s {

    /*! Stage id. */
    int stage;

    /*! Minimum flex action ID. */
    uint32_t flex_action_min;

    /*! Maximum flex action ID. */
    uint32_t flex_action_max;

} bcmint_flexctr_flex_action_range_t;

/*!
 * \brief Flex counter packet attribute information.
 */
typedef struct bcmint_flexctr_pkt_attr_info_s {

    /*! Packet attribute selector type enumeration in HSDK API. */
    int attr_type;

    /*! Stage id. */
    int stage;

    /*! Valid mask for this packet attribute selector type. */
    uint32_t mask;

    /*! Start bit position. */
    int start_bit_pos;

} bcmint_flexctr_pkt_attr_info_t;

/*!
 * \brief Flex counter packet attribute bus information.
 */
typedef struct bcmint_flexctr_pkt_attr_bus_info_s {

    /*! Bit position in packet attribute bus. */
    int bit_pos;

    /*! Packet attribute bus symbol in SDKLT. */
    const char *symbol;

} bcmint_flexctr_pkt_attr_bus_info_t;

/*!
 * \brief Flex counter packet type attribute value information.
 */
typedef struct bcmint_flexctr_pkt_type_value_info_s {

    /*! Flex counter packet type enumeration in HSDK API. */
    int pkt_type;

    /*! Flex counter packet type attribute value. */
    uint32_t value;

} bcmint_flexctr_pkt_type_value_info_t;

/*!
 * \brief Flex counter VLAN tag attribute value information.
 */
typedef struct bcmint_flexctr_vlan_tag_value_info_s {

    /*! Flex counter VLAN tag enumeration in HSDK API. */
    int vlan_tag;

    /*! Flex counter VLAN tag attribute value. */
    uint32_t value;

} bcmint_flexctr_vlan_tag_value_info_t;

/*!
 * \brief Flex counter enumeration map.
 */
typedef struct bcmint_flexctr_enum_map_s {

    /*! Enum name. */
    const char *name;

    /*! Enum value. */
    int val;

} bcmint_flexctr_enum_map_t;

#endif /* BCMINT_LTSW_FLEXCTR_INT_H */
