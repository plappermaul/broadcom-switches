/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_QOS_INT_H
#define BCMINT_LTSW_QOS_INT_H

#include <bcm/qos.h>

#include <bcm_int/ltsw/qos.h>

#include <sal/sal_types.h>

/*!
 * \brief Internal QoS map structure.
 */
typedef struct bcmint_qos_map_s {

    /*! QoS map type. */
    bcmi_ltsw_qos_map_type_t type;

    /*! QoS flags. */
    uint32_t flags;

    /*! QoS map entries. */
    bcm_qos_map_t *entry;

    /*! QoS map entry count. */
    int *count;

} bcmint_qos_map_t;

/*! Maximum QoS table key. */
#define BCMINT_QOS_MAX_TBL_KEY 3

/*! Maximum QoS table fields. */
#define BCMINT_QOS_MAX_TBL_FIELD 20

/*!
 * \brief Egress policy table field specific flags.
 */
/*! Dot1p copy. */
#define BCMINT_QOS_EGR_POLICY_TABLE_FLAGS_L2_DOT1P_COPY (1 << 0)

/*! TOS copy. */
#define BCMINT_QOS_EGR_POLICY_TABLE_FLAGS_L3_TOS_COPY (1 << 1)

/*! Internal congestion copy. */
#define BCMINT_QOS_EGR_POLICY_TABLE_FLAGS_INT_CONGESTION_COPY (1 << 2)

/*!
 * \brief QoS table id.
 */
typedef enum bcmint_qos_tbl_id_s {

    /*! QoS ingress policy table. */
    QOS_TBL_ING_POLICY = 0,

    /*! QoS egress policy table. */
    QOS_TBL_EGR_POLICY = 1,

    /*! QoS egress PHB table used for VXLAN G flag remarking. */
    QOS_TBL_EGR_PHB_VXLAN_G = 2,

    /*! QoS egress PHB table used for VXLAN BUM flag remarking. */
    QOS_TBL_EGR_PHB_VXLAN_BUM = 3,

    /*! QoS egress PHB table used for internal congestion copy. */
    QOS_TBL_EGR_PHB_INT_CONGESTION_COPY = 4,

    /*! The last. */
    QOS_TBL_CNT = 5

} bcmint_qos_tbl_id_t;

#define BCMINT_QOS_TBL_ID_STR \
{ \
    "ING_POLICY", \
    "EGR_POLICY", \
    "EGR_PHB_VXLAN_G", \
    "EGR_PHB_VXLAN_BUM", \
    "EGR_PHB_INT_CONGESTION_COPY", \
    "CNT" \
}

/*!
 * \brief Table entry.
 */
typedef struct bcmint_qos_tbl_ent_s {

    /*! Key offset scalar value, used in flexible allocation table. */
    const int *key_offset;

    /*! Key symbol value. */
    const char *key[BCMINT_QOS_MAX_TBL_KEY];

    /*! Field scalar value. */
    const int *field;

    /*! Field symbol value. */
    const char *sym_field[BCMINT_QOS_MAX_TBL_FIELD];

    /*! Field specific flags. */
    const int field_flags[BCMINT_QOS_MAX_TBL_FIELD];

} bcmint_qos_tbl_ent_t;

/*!
 * \brief Table configuration.
 */
typedef struct bcmint_qos_tbl_cfg_s {

    /*! Key name. */
    const char *key_name[BCMINT_QOS_MAX_TBL_KEY];

    /*! Num of elements in general field array. */
    int field_num;

    /*! General field array. */
    const char *field_array[BCMINT_QOS_MAX_TBL_FIELD];

    /*! Num of elements in symbol field array. */
    int sym_field_num;

    /*! Symbol field array. */
    const char *sym_field_array[BCMINT_QOS_MAX_TBL_FIELD];

    /*! Num of elements in table entry. */
    int ent_num;

    /*! Table entry. */
    const bcmint_qos_tbl_ent_t *ent;

    /*! 1:1 mapping from input to output. */
    int one_to_one;

} bcmint_qos_tbl_cfg_t;

/*!
 * \brief Table information.
 */
typedef struct bcmint_qos_tbl_info_s {

    /*! Table name. */
    const char *name;

    /*! Table id. */
    int id;

    /*! Default table configuration. */
    const bcmint_qos_tbl_cfg_t *tbl_cfg;

} bcmint_qos_tbl_info_t;

/*!
 * \brief Table database.
 */
typedef struct bcmint_qos_tbl_db_s {

    /*! Table number. */
    int tbl_num;

    /*! Table array. */
    const bcmint_qos_tbl_info_t *tbls;

} bcmint_qos_tbl_db_t;

/*!
 * \brief QoS attribute remark info structure.
 */
typedef struct bcmint_qos_attribute_remark_info_s {

    /*! Support to use packet priority/CFI copied from ingress pipeline for remark. */
    bool copied_pri_cfi_ena;

    /*! Support to use packet DSCP/ECN copied from ingress pipeline for remark. */
    bool copied_dscp_ecn_ena;

    /*! Support to copy internal congestion at egress. */
    bool copy_int_congestion_ena;

} bcmint_qos_attribute_remark_info_t;

/*!
 * \brief QoS control info.
 */
typedef struct bcmint_qos_ctrl_info_s {

    /*! Table database. */
    const bcmint_qos_tbl_db_t *tbl_db;

    /*! QoS attribute remark info. */
    const bcmint_qos_attribute_remark_info_t *remark_info;

} bcmint_qos_ctrl_info_t;

#endif /* BCMINT_LTSW_QOS_INT_H */
