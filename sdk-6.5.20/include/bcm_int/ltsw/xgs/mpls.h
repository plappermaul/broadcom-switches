/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_XGS_MPLS_H
#define BCMINT_LTSW_XGS_MPLS_H

#include <bcm/mpls.h>
#include <bcm/types.h>
#include <bcm_int/ltsw/flexctr.h>

#include <sal/sal_types.h>

/*!
 * \brief Dump device-spefic SW MPLS info.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_sw_dump(int unit);

/*!
 * \brief Initialize device-spefic MPLS info.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_init(int unit);

/*!
 * \brief Deinitialize device-spefic MPLS info.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_detach(int unit);

/*!
 * \brief Add an MPLS tunnel terminator.
 *
 * \param [in] unit Unit Number.
 * \param [in/out] info MPLS tunnel terminator info.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_tnl_switch_add(
    int unit,
    bcm_mpls_tunnel_switch_t *info);

/*!
 * \brief Delete an MPLS tunnel terminator.
 *
 * \param [in] unit Unit Number.
 * \param [in] info MPLS tunnel terminator info.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_tnl_switch_delete(
    int unit,
    bcm_mpls_tunnel_switch_t *info);

/*!
 * \brief Get an MPLS tunnel terminator.
 *
 * \param [in] unit Unit Number.
 * \param [in/out] info MPLS tunnel terminator info.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_tnl_switch_get(
    int unit,
    bcm_mpls_tunnel_switch_t *info);

/*!
 * \brief Traverse valid tunnel terminators and call the callback.
 *
 * \param [in] unit Unit Number.
 * \param [in] cb User callback function, called once per tunnel terminator.
 * \param [in] user_data Cookie.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_tnl_switch_traverse(
    int unit,
    bcm_mpls_tunnel_switch_traverse_cb cb,
    void *user_data);

/*!
 * \brief Delete all MPLS tunnel terminators.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_tnl_switch_delete_all(int unit);

/*!
 * \brief Clear the MPLS tunnel initiator parameters for an L3 interface.
 *
 * \param [in] unit Unit Number.
 * \param [in] intf The egress L3 interface.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_tnl_initiator_clear(
    int unit,
    bcm_if_t intf);

/*!
 * \brief Clear all the MPLS tunnel initiator parameters all L3 Interfaces.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_tnl_initiator_clear_all(int unit);

/*!
 * \brief Get the the MPLS tunnel initiator parameters for an L3 interface.
 *
 * \param [in] unit Unit Number.
 * \param [in] intf The egress L3 interface.
 * \param [in] label_max Number of entries in label_array.
 * \param [out] label_array MPLS header information.
 * \param [out] label_count Actual number of labels returned.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_tnl_initiator_get(
    int unit,
    bcm_if_t intf,
    int label_max,
    bcm_mpls_egress_label_t *label_array,
    int *label_count);

/*!
 * \brief Set the MPLS tunnel initiator parameters for an L3 interface.
 *
 * \param [in] unit Unit Number.
 * \param [in] intf The egress L3 interface.
 * \param [in] num_labels Number of entries in label_array.
 * \param [in] label_array MPLS header information.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_tnl_initiator_set(
    int unit,
    bcm_if_t intf,
    int num_labels,
    bcm_mpls_egress_label_t *label_array);

/*!
 * \brief Set mpls global label range.
 *
 * \param [in] unit Unit Number.
 * \param [in] range_num Range number. 0 : First range, 1 : Second range.
 * \param [in] range_min Range min indicator. 0 : Range max, 1 : Range min
 * \param [in] label_val Label value
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_global_label_range_set(
    int unit,
    int range_num,
    int range_min,
    int label_val);

/*!
 * \brief Get mpls global label range.
 *
 * \param [in] unit Unit Number.
 * \param [in] range_num Range number. 0 : First range, 1 : Second range.
 * \param [out] min_label Min label
 * \param [out] max_label Max label
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_global_label_range_get(
    int unit,
    int range_num,
    int *min_label,
    int *max_label);

/*!
 * \brief Add dst mac into MAC_DA profile.
 *
 * \param [in] unit Unit Number.
 * \param [in] mac Dst MAC.
 * \param [out] index Profile index.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_tnl_dst_mac_profile_add(
    int unit,
    uint64_t mac,
    int *index);

/*!
 * \brief Delete dst mac from MAC_DA profile.
 *
 * \param [in] unit Unit Number.
 * \param [in] index Profile index.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_tnl_dst_mac_profile_del(
    int unit,
    int index);

/*!
 * \brief Get dst mac from MAC_DA profile.
 *
 * \param [in] unit Unit Number.
 * \param [in] index Profile index.
 * \param [out] mac Dst MAC.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_tnl_dst_mac_profile_get(
    int unit,
    int index,
    uint64_t *mac);

/*!
 * \brief Attach flexctr action to the given MPLS label and gport.
 *
 * \param [in] unit Unit Number.
 * \param [in] label MPLS label.
 * \param [in] port MPLS Gport.
 * \param [in] info Flex counter information.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_label_flexctr_attach(
    int unit,
    bcm_mpls_label_t label,
    bcm_gport_t port,
    bcmi_ltsw_flexctr_counter_info_t *info);

/*!
 * \brief Detach flexctr action of the given MPLS label and gport.
 *
 * \param [in] unit Unit Number.
 * \param [in] label MPLS label.
 * \param [in] port MPLS Gport.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_label_flexctr_detach(
    int unit,
    bcm_mpls_label_t label,
    bcm_gport_t port);

/*!
 * \brief Get flex counter information of the given MPLS label and gport.
 *
 * \param [in] unit Unit Number.
 * \param [in] label MPLS label.
 * \param [in] port MPLS Gport.
 * \param [out] info Flex counter information.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_label_flexctr_info_get(
    int unit,
    bcm_mpls_label_t label,
    bcm_gport_t port,
    bcmi_ltsw_flexctr_counter_info_t *info);

/*!
 * \brief Set flex counter object value for the given MPLS label and gport.
 *
 * \param [in] unit Unit Number.
 * \param [in] label MPLS label.
 * \param [in] port MPLS Gport.
 * \param [in] value The flex counter object value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_label_flexctr_object_set(
    int unit,
    bcm_mpls_label_t label,
    bcm_gport_t port,
    uint32_t value);

/*!
 * \brief Get flex counter object value for the given MPLS label and gport.
 *
 * \param [in] unit Unit Number.
 * \param [in] label MPLS label.
 * \param [in] port MPLS Gport.
 * \param [out] value The flex counter object value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_mpls_label_flexctr_object_get(
    int unit,
    bcm_mpls_label_t label,
    bcm_gport_t port,
    uint32_t *value);

#endif /* BCMINT_LTSW_XGS_MPLS_H */
