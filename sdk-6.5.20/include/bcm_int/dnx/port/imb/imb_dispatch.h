
/*
 *         
 * 
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 *         
 *     
 * DO NOT EDIT THIS FILE!
 */

#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX family only!"
#endif /* BCM_DNX_SUPPORT */

#ifndef _IMB_DISPATCH_H__H_
#define _IMB_DISPATCH_H__H_

#include <soc/portmod/portmod.h>
#include <bcm/port.h>
#include <bcm/cosq.h>
#include <bcm_int/dnx/port/imb/imb_diag.h>
#include <bcm_int/dnx/cosq/ingress/cosq_ingress_port.h>
#include <soc/dnxc/dnxc_port.h>
#include <bcm_int/dnx/port/imb/imb.h>

typedef int (
    *__dispatch__imb_init_f) (
    int unit,
    const imb_create_info_t * imb_info,
    imb_specific_create_info_t * imb_specific_info);
typedef int (
    *__dispatch__imb_deinit_f) (
    int unit,
    const imb_create_info_t * imb_info,
    imb_specific_create_info_t * imb_specific_info);
typedef int (
    *__dispatch__imb_port_pad_size_set_f) (
    int unit,
    bcm_port_t port,
    int value);
typedef int (
    *__dispatch__imb_port_pad_size_get_f) (
    int unit,
    bcm_port_t port,
    int *value);
typedef int (
    *__dispatch__imb_port_attach_f) (
    int unit,
    bcm_port_t port,
    uint32 flags);
typedef int (
    *__dispatch__imb_port_detach_f) (
    int unit,
    bcm_port_t port);
typedef int (
    *__dispatch__imb_port_enable_set_f) (
    int unit,
    bcm_port_t port,
    uint32 flags,
    int enable);
typedef int (
    *__dispatch__imb_port_enable_get_f) (
    int unit,
    bcm_port_t port,
    int *enable);
typedef int (
    *__dispatch__imb_port_rx_data_enable_set_f) (
    int unit,
    bcm_port_t port,
    int enable);
typedef int (
    *__dispatch__imb_port_loopback_set_f) (
    int unit,
    bcm_port_t port,
    int loopback);
typedef int (
    *__dispatch__imb_port_loopback_get_f) (
    int unit,
    bcm_port_t port,
    int *loopback);
typedef int (
    *__dispatch__imb_port_link_state_get_f) (
    int unit,
    bcm_port_t port,
    int clear_status,
    bcm_port_link_state_t * link_state);
typedef int (
    *__dispatch__imb_port_eee_enable_set_f) (
    int unit,
    bcm_port_t port,
    int enable);
typedef int (
    *__dispatch__imb_port_eee_enable_get_f) (
    int unit,
    bcm_port_t port,
    int *enable);
typedef int (
    *__dispatch__imb_port_link_up_mac_update_f) (
    int unit,
    bcm_port_t port,
    int link);
typedef int (
    *__dispatch__imb_port_priority_config_set_f) (
    int unit,
    bcm_port_t port,
    const bcm_port_prio_config_t * priority_config);
typedef int (
    *__dispatch__imb_port_priority_config_get_f) (
    int unit,
    bcm_port_t port,
    bcm_port_prio_config_t * priority_config);
typedef int (
    *__dispatch__imb_port_phy_measure_get_f) (
    int unit,
    bcm_port_t port,
    int is_rx,
    soc_dnxc_port_phy_measure_t * phy_measure);
typedef int (
    *__dispatch__imb_port_over_sampling_get_f) (
    int unit,
    bcm_port_t port,
    uint32 *os_int,
    uint32 *os_remainder);
typedef int (
    *__dispatch__imb_port_autoneg_set_f) (
    int unit,
    bcm_port_t port,
    uint32 phy_flags,
    const phymod_autoneg_control_t * an);
typedef int (
    *__dispatch__imb_port_autoneg_get_f) (
    int unit,
    bcm_port_t port,
    uint32 phy_flags,
    phymod_autoneg_control_t * an);
typedef int (
    *__dispatch__imb_port_link_get_f) (
    int unit,
    bcm_port_t port,
    int flags,
    int *link);
typedef int (
    *__dispatch__imb_port_max_packet_size_set_f) (
    int unit,
    bcm_port_t port,
    int value);
typedef int (
    *__dispatch__imb_port_max_packet_size_get_f) (
    int unit,
    bcm_port_t port,
    int *value);
typedef int (
    *__dispatch__imb_port_tx_average_ipg_set_f) (
    int unit,
    bcm_port_t port,
    int ipg_value);
typedef int (
    *__dispatch__imb_port_tx_average_ipg_get_f) (
    int unit,
    bcm_port_t port,
    int *ipg_value);
typedef int (
    *__dispatch__imb_port_duplex_set_f) (
    int unit,
    bcm_port_t port,
    int enable);
typedef int (
    *__dispatch__imb_port_duplex_get_f) (
    int unit,
    bcm_port_t port,
    int *enable);
typedef int (
    *__dispatch__imb_port_cntmaxsize_set_f) (
    int unit,
    bcm_port_t port,
    int val);
typedef int (
    *__dispatch__imb_port_cntmaxsize_get_f) (
    int unit,
    bcm_port_t port,
    int *val);
typedef int (
    *__dispatch__imb_port_local_fault_status_get_f) (
    int unit,
    bcm_port_t port,
    int *local_fault);
typedef int (
    *__dispatch__imb_port_local_fault_status_clear_f) (
    int unit,
    bcm_port_t port);
typedef int (
    *__dispatch__imb_port_remote_fault_status_get_f) (
    int unit,
    bcm_port_t port,
    int *remote_fault);
typedef int (
    *__dispatch__imb_port_remote_fault_status_clear_f) (
    int unit,
    bcm_port_t port);
typedef int (
    *__dispatch__imb_port_local_fault_enable_set_f) (
    int unit,
    bcm_port_t port,
    int enable);
typedef int (
    *__dispatch__imb_port_local_fault_enable_get_f) (
    int unit,
    bcm_port_t port,
    int *enable);
typedef int (
    *__dispatch__imb_port_remote_fault_enable_set_f) (
    int unit,
    bcm_port_t port,
    int enable);
typedef int (
    *__dispatch__imb_port_remote_fault_enable_get_f) (
    int unit,
    bcm_port_t port,
    int *enable);
typedef int (
    *__dispatch__imb_port_tx_mac_sa_set_f) (
    int unit,
    bcm_port_t port,
    sal_mac_addr_t mac_sa);
typedef int (
    *__dispatch__imb_port_tx_mac_sa_get_f) (
    int unit,
    bcm_port_t port,
    sal_mac_addr_t mac_sa);
typedef int (
    *__dispatch__imb_port_rx_mac_sa_set_f) (
    int unit,
    bcm_port_t port,
    sal_mac_addr_t mac_sa);
typedef int (
    *__dispatch__imb_port_rx_mac_sa_get_f) (
    int unit,
    bcm_port_t port,
    sal_mac_addr_t mac_sa);
typedef int (
    *__dispatch__imb_port_reset_set_f) (
    int unit,
    bcm_port_t port,
    int mode,
    int opcode,
    int direction);
typedef int (
    *__dispatch__imb_port_reset_get_f) (
    int unit,
    bcm_port_t port,
    int mode,
    int opcode,
    int *direction);
typedef int (
    *__dispatch__imb_port_pfc_control_set_f) (
    int unit,
    bcm_port_t port,
    const portmod_pfc_control_t * control);
typedef int (
    *__dispatch__imb_port_pfc_control_get_f) (
    int unit,
    bcm_port_t port,
    portmod_pfc_control_t * control);
typedef int (
    *__dispatch__imb_port_eee_set_f) (
    int unit,
    bcm_port_t port,
    const portmod_eee_t * eee);
typedef int (
    *__dispatch__imb_port_eee_get_f) (
    int unit,
    bcm_port_t port,
    portmod_eee_t * eee);
typedef int (
    *__dispatch__imb_bandwidth_get_f) (
    int unit,
    bcm_port_t port,
    int is_port_include,
    int *bandwidth);
typedef int (
    *__dispatch__imb_port_tx_start_thr_set_f) (
    int unit,
    bcm_port_t port,
    int speed);
typedef int (
    *__dispatch__imb_prd_enable_set_f) (
    int unit,
    bcm_port_t port,
    int enable_mode);
typedef int (
    *__dispatch__imb_prd_enable_get_f) (
    int unit,
    bcm_port_t port,
    int *enable_mode);
typedef int (
    *__dispatch__imb_prd_properties_set_f) (
    int unit,
    bcm_port_t port,
    imb_prd_properties_t property,
    uint32 val);
typedef int (
    *__dispatch__imb_prd_properties_get_f) (
    int unit,
    bcm_port_t port,
    imb_prd_properties_t property,
    uint32 *val);
typedef int (
    *__dispatch__imb_prd_port_profile_map_set_f) (
    int unit,
    bcm_port_t port,
    uint32 profile);
typedef int (
    *__dispatch__imb_prd_port_profile_map_get_f) (
    int unit,
    bcm_port_t port,
    uint32 *profile);
typedef int (
    *__dispatch__imb_prd_map_set_f) (
    int unit,
    bcm_port_t port,
    bcm_cosq_ingress_port_drop_map_t map,
    uint32 key,
    uint32 priority,
    uint32 is_tdm);
typedef int (
    *__dispatch__imb_prd_map_get_f) (
    int unit,
    bcm_port_t port,
    bcm_cosq_ingress_port_drop_map_t map,
    uint32 key,
    uint32 *priority,
    uint32 *is_tdm);
typedef int (
    *__dispatch__imb_prd_threshold_set_f) (
    int unit,
    bcm_port_t port,
    uint32 priority,
    uint32 threshold);
typedef int (
    *__dispatch__imb_prd_threshold_get_f) (
    int unit,
    bcm_port_t port,
    uint32 priority,
    uint32 *threshold);
typedef int (
    *__dispatch__imb_prd_threshold_max_get_f) (
    int unit,
    bcm_port_t port,
    uint32 *threshold);
typedef int (
    *__dispatch__imb_prd_tpid_set_f) (
    int unit,
    bcm_port_t port,
    uint32 tpid_index,
    uint32 tpid_value);
typedef int (
    *__dispatch__imb_prd_tpid_get_f) (
    int unit,
    bcm_port_t port,
    uint32 tpid_index,
    uint32 *tpid_value);
typedef int (
    *__dispatch__imb_prd_drop_count_get_f) (
    int unit,
    bcm_port_t port,
    bcm_port_nif_scheduler_t sch_priority,
    uint64 *count);
typedef int (
    *__dispatch__imb_prd_custom_ether_type_set_f) (
    int unit,
    bcm_port_t port,
    uint32 ether_type_code,
    uint32 ether_type_val);
typedef int (
    *__dispatch__imb_prd_custom_ether_type_get_f) (
    int unit,
    bcm_port_t port,
    uint32 ether_type_code,
    uint32 *ether_type_val);
typedef int (
    *__dispatch__imb_prd_flex_key_entry_set_f) (
    int unit,
    bcm_port_t port,
    uint32 key_index,
    const dnx_cosq_prd_tcam_entry_info_t * entry_info);
typedef int (
    *__dispatch__imb_prd_flex_key_entry_get_f) (
    int unit,
    bcm_port_t port,
    uint32 key_index,
    dnx_cosq_prd_tcam_entry_info_t * entry_info);
typedef int (
    *__dispatch__imb_prd_ether_type_size_set_f) (
    int unit,
    bcm_port_t port,
    uint32 ether_type_code,
    uint32 ether_type_size);
typedef int (
    *__dispatch__imb_prd_ether_type_size_get_f) (
    int unit,
    bcm_port_t port,
    uint32 ether_type_code,
    uint32 *ether_type_size);
typedef int (
    *__dispatch__imb_prd_tcam_entry_key_offset_base_set_f) (
    int unit,
    bcm_port_t port,
    uint32 ether_type_code,
    uint32 offset_base);
typedef int (
    *__dispatch__imb_prd_tcam_entry_key_offset_base_get_f) (
    int unit,
    bcm_port_t port,
    uint32 ether_type_code,
    uint32 *offset_base);
typedef int (
    *__dispatch__imb_prd_tcam_entry_key_offset_set_f) (
    int unit,
    bcm_port_t port,
    uint32 ether_type_code,
    uint32 offset_index,
    uint32 offset_value);
typedef int (
    *__dispatch__imb_prd_tcam_entry_key_offset_get_f) (
    int unit,
    bcm_port_t port,
    uint32 ether_type_code,
    uint32 offset_index,
    uint32 *offset_value);
typedef int (
    *__dispatch__imb_prd_control_frame_set_f) (
    int unit,
    bcm_port_t port,
    uint32 control_frame_index,
    const bcm_cosq_ingress_drop_control_frame_config_t * control_frame_config);
typedef int (
    *__dispatch__imb_prd_control_frame_get_f) (
    int unit,
    bcm_port_t port,
    uint32 control_frame_index,
    bcm_cosq_ingress_drop_control_frame_config_t * control_frame_config);
typedef int (
    *__dispatch__imb_prd_mpls_special_label_set_f) (
    int unit,
    bcm_port_t port,
    uint32 label_index,
    const bcm_cosq_ingress_port_drop_mpls_special_label_config_t * label_config);
typedef int (
    *__dispatch__imb_prd_mpls_special_label_get_f) (
    int unit,
    bcm_port_t port,
    uint32 label_index,
    bcm_cosq_ingress_port_drop_mpls_special_label_config_t * label_config);
typedef int (
    *__dispatch__imb_port_logical_lane_order_set_f) (
    int unit,
    bcm_port_t port,
    const int *lane_order,
    int lane_order_size);
typedef int (
    *__dispatch__imb_port_logical_lane_order_get_f) (
    int unit,
    bcm_port_t port,
    int lane_order_max_size,
    int *lane_order,
    int *lane_order_actual_size);
typedef int (
    *__dispatch__imb_port_prbs_polynomial_set_f) (
    int unit,
    bcm_port_t port,
    portmod_prbs_mode_t prbs_mode,
    bcm_port_prbs_t value);
typedef int (
    *__dispatch__imb_port_prbs_polynomial_get_f) (
    int unit,
    bcm_port_t port,
    portmod_prbs_mode_t prbs_mode,
    bcm_port_prbs_t * value);
typedef int (
    *__dispatch__imb_port_prbs_invert_data_set_f) (
    int unit,
    bcm_port_t port,
    int type,
    portmod_prbs_mode_t prbs_mode,
    int invert);
typedef int (
    *__dispatch__imb_port_prbs_invert_data_get_f) (
    int unit,
    bcm_port_t port,
    int type,
    portmod_prbs_mode_t prbs_mode,
    int *invert);
typedef int (
    *__dispatch__imb_port_prbs_enable_set_f) (
    int unit,
    bcm_port_t port,
    int type,
    portmod_prbs_mode_t prbs_mode,
    int enable);
typedef int (
    *__dispatch__imb_port_prbs_enable_get_f) (
    int unit,
    bcm_port_t port,
    int type,
    portmod_prbs_mode_t prbs_mode,
    int *enable);
typedef int (
    *__dispatch__imb_port_prbs_rx_status_get_f) (
    int unit,
    bcm_port_t port,
    portmod_prbs_mode_t prbs_mode,
    int *status);
typedef int (
    *__dispatch__imb_port_phy_reg_set_f) (
    int unit,
    bcm_port_t port,
    uint32 flags,
    uint32 phy_reg_addr,
    uint32 phy_data);
typedef int (
    *__dispatch__imb_port_phy_reg_get_f) (
    int unit,
    bcm_port_t port,
    uint32 flags,
    uint32 phy_reg_addr,
    uint32 *phy_data);
typedef int (
    *__dispatch__imb_port_rx_fifo_status_get_f) (
    int unit,
    bcm_port_t port,
    bcm_port_nif_scheduler_t sch_priority,
    uint32 *max_occupancy,
    uint32 *fifo_level);
typedef int (
    *__dispatch__imb_port_tx_fifo_status_get_f) (
    int unit,
    bcm_port_t port,
    uint32 *max_occupancy,
    uint32 *fifo_level,
    uint32 *pm_credits);
typedef int (
    *__dispatch__imb_port_low_latency_llfc_enable_set_f) (
    int unit,
    bcm_port_t port,
    int value);
typedef int (
    *__dispatch__imb_port_low_latency_llfc_enable_get_f) (
    int unit,
    bcm_port_t port,
    int *value);
typedef int (
    *__dispatch__imb_port_fec_error_detect_enable_set_f) (
    int unit,
    bcm_port_t port,
    int value);
typedef int (
    *__dispatch__imb_port_fec_error_detect_enable_get_f) (
    int unit,
    bcm_port_t port,
    int *value);
typedef int (
    *__dispatch__imb_port_llfc_after_fec_enable_set_f) (
    int unit,
    bcm_port_t port,
    int value);
typedef int (
    *__dispatch__imb_port_llfc_after_fec_enable_get_f) (
    int unit,
    bcm_port_t port,
    int *value);
typedef int (
    *__dispatch__imb_port_extract_congestion_indication_from_llfc_enable_set_f) (
    int unit,
    bcm_port_t port,
    int value);
typedef int (
    *__dispatch__imb_port_extract_congestion_indication_from_llfc_enable_get_f) (
    int unit,
    bcm_port_t port,
    int *value);
typedef int (
    *__dispatch__imb_port_control_cells_fec_bypass_enable_set_f) (
    int unit,
    bcm_port_t port,
    int value);
typedef int (
    *__dispatch__imb_port_control_cells_fec_bypass_enable_get_f) (
    int unit,
    bcm_port_t port,
    int *value);
typedef int (
    *__dispatch__imb_port_speed_config_set_f) (
    int unit,
    bcm_port_t port,
    const portmod_speed_config_t * speed_config);
typedef int (
    *__dispatch__imb_port_speed_config_get_f) (
    int unit,
    bcm_port_t port,
    portmod_speed_config_t * speed_config);
typedef int (
    *__dispatch__imb_port_mib_counter_get_f) (
    int unit,
    bcm_port_t port,
    int counter_type,
    uint64 *counter_val);
typedef int (
    *__dispatch__imb_port_mib_counter_set_f) (
    int unit,
    bcm_port_t port,
    int counter_type,
    const uint64 *counter_val);
typedef int (
    *__dispatch__imb_port_mib_counter_clear_f) (
    int unit,
    bcm_port_t port);
typedef int (
    *__dispatch__imb_port_autoneg_ability_advert_set_f) (
    int unit,
    bcm_port_t port,
    int num_ability,
    const bcm_port_speed_ability_t * abilities);
typedef int (
    *__dispatch__imb_port_autoneg_ability_advert_get_f) (
    int unit,
    bcm_port_t port,
    int max_num_ability,
    bcm_port_speed_ability_t * abilities,
    int *actual_num_ability);
typedef int (
    *__dispatch__imb_port_speed_ability_local_get_f) (
    int unit,
    bcm_port_t port,
    int max_num_ability,
    bcm_port_speed_ability_t * abilities,
    int *actual_num_ability);
typedef int (
    *__dispatch__imb_port_autoneg_ability_remote_get_f) (
    int unit,
    bcm_port_t port,
    int max_num_ability,
    bcm_port_speed_ability_t * abilities,
    int *actual_num_ability);
typedef int (
    *__dispatch__imb_port_scheduler_config_set_f) (
    int unit,
    bcm_port_t port,
    int enable);
typedef int (
    *__dispatch__imb_port_scheduler_priority_update_f) (
    int unit,
    bcm_port_t port);
typedef int (
    *__dispatch__imb_port_resource_default_get_f) (
    int unit,
    bcm_port_t port,
    uint32 flags,
    bcm_port_resource_t * resource);
typedef int (
    *__dispatch__imb_port_to_stif_instance_map_set_f) (
    int unit,
    bcm_port_t port,
    int instace_id,
    int instace_core,
    int connect);
typedef int (
    *__dispatch__imb_phys_get_f) (
    int unit,
    int imb_id,
    bcm_pbmp_t * phys);
typedef int (
    *__dispatch__imb_port_gen_pfc_from_rmc_enable_set_f) (
    int unit,
    bcm_port_t port,
    uint32 priority,
    uint32 enable);
typedef int (
    *__dispatch__imb_port_gen_pfc_from_rmc_enable_get_f) (
    int unit,
    bcm_port_t port,
    uint32 priority,
    uint32 *enable);
typedef int (
    *__dispatch__imb_port_gen_llfc_from_rmc_enable_set_f) (
    int unit,
    bcm_port_t port,
    uint32 enable);
typedef int (
    *__dispatch__imb_port_stop_pm_from_cfc_llfc_enable_set_f) (
    int unit,
    bcm_port_t port,
    uint32 enable);
typedef int (
    *__dispatch__imb_port_stop_pm_from_pfc_enable_set_f) (
    int unit,
    bcm_port_t port,
    int pfc,
    uint32 enable);
typedef int (
    *__dispatch__imb_port_stop_pm_from_pfc_enable_get_f) (
    int unit,
    bcm_port_t port,
    int pfc,
    uint32 *enable);
typedef int (
    *__dispatch__imb_port_gen_pfc_from_llfc_thresh_enable_set_f) (
    int unit,
    bcm_port_t port,
    uint32 enable);
typedef int (
    *__dispatch__imb_port_gen_pfc_from_llfc_thresh_enable_get_f) (
    int unit,
    bcm_port_t port,
    uint32 *enable);
typedef int (
    *__dispatch__imb_port_fc_rx_qmlf_threshold_set_f) (
    int unit,
    bcm_port_t port,
    uint32 flags,
    uint32 threshold);
typedef int (
    *__dispatch__imb_port_fc_rx_qmlf_threshold_get_f) (
    int unit,
    bcm_port_t port,
    uint32 flags,
    uint32 *threshold);
typedef int (
    *__dispatch__imb_fc_reset_set_f) (
    int unit,
    const imb_create_info_t * imb_info,
    uint32 in_reset);
typedef int (
    *__dispatch__imb_llfc_from_glb_rsc_enable_set_f) (
    int unit,
    const imb_create_info_t * imb_info,
    uint32 enable);
typedef int (
    *__dispatch__imb_pfc_rec_priority_map_f) (
    int unit,
    int imb_id,
    uint32 nif_priority,
    uint32 egq_priority);
typedef int (
    *__dispatch__imb_pfc_rec_priority_unmap_f) (
    int unit,
    int imb_id);
typedef int (
    *__dispatch__imb_port_fec_speed_validate_f) (
    int unit,
    bcm_port_t port,
    bcm_port_phy_fec_t fec_type,
    int speed);
typedef int (
    *__dispatch__imb_inband_ilkn_fc_init_f) (
    int unit,
    const imb_create_info_t * imb_info);
typedef int (
    *__dispatch__imb_calendar_set_f) (
    int unit,
    bcm_port_t port,
    uint32 flags);
typedef int (
    *__dispatch__imb_port_fifo_resource_set_f) (
    int unit,
    bcm_port_t port,
    uint32 flags);
typedef int (
    *__dispatch__imb_post_init_f) (
    int unit,
    int imb_id);
typedef int (
    *__dispatch__imb_instru_counters_reset_f) (
    int unit,
    const imb_create_info_t * imb_info);
typedef int (
    *__dispatch__imb_pfc_deadlock_counters_reset_f) (
    int unit,
    const imb_create_info_t * imb_info);
typedef int (
    *__dispatch__imb_port_pfc_deadlock_counters_reset_f) (
    int unit,
    bcm_port_t port);
typedef int (
    *__dispatch__imb_pfc_deadlock_debug_info_get_f) (
    int unit,
    int ethu_id,
    int *ethu_port_num,
    int *pfc_num);
typedef int (
    *__dispatch__imb_pfc_deadlock_max_duration_set_f) (
    int unit,
    int ethu_id,
    uint32 max_duration);
typedef int (
    *__dispatch__imb_pfc_deadlock_max_duration_get_f) (
    int unit,
    int ethu_id,
    uint32 *max_duration);
typedef int (
    *__dispatch__imb_port_phy_control_validate_f) (
    int unit,
    bcm_port_t port,
    bcm_port_phy_control_t type,
    int is_set);
typedef int (
    *__dispatch__imb_port_pre_add_validate_f) (
    int unit,
    bcm_port_t port,
    bcm_pbmp_t phys);
typedef int (
    *__dispatch__imb_port_autoneg_ability_verify_f) (
    int unit,
    bcm_port_t port,
    int num_ability,
    const bcm_port_speed_ability_t * abilities);
typedef int (
    *__dispatch__imb_port_pcs_lane_map_set_f) (
    int unit,
    bcm_port_t port,
    uint32 tx_lane_swap,
    uint32 rx_lane_swap);
typedef int (
    *__dispatch__imb_port_link_status_change_event_f) (
    int unit,
    bcm_port_t port);
typedef int (
    *__dispatch__imb_alternative_port_set_f) (
    int unit,
    bcm_port_t port,
    const bcm_pbmp_t * alter_ports);
typedef int (
    *__dispatch__imb_port_l1_mismatch_rate_rx_config_set_f) (
    int unit,
    bcm_port_t port,
    int tx_speed,
    int enable);
typedef int (
    *__dispatch__imb_port_post_ber_proj_get_f) (
    int unit,
    bcm_port_t port,
    int lane,
    const bcm_port_ber_proj_params_t * ber_proj,
    int max_errcnt,
    bcm_port_ber_proj_analyzer_errcnt_t * errcnt_array,
    int *actual_errcnt);
typedef int (
    *__dispatch__imb_flexe_core_port_config_set_f) (
    int unit,
    bcm_port_t port,
    int flexe_core_port,
    int speed);
typedef int (
    *__dispatch__imb_portmod_add_info_config_f) (
    int unit,
    bcm_port_t port,
    portmod_port_add_info_t * add_info);

typedef struct __imb__dispatch__s__
{
    __dispatch__imb_init_f f_imb_init;
    __dispatch__imb_deinit_f f_imb_deinit;
    __dispatch__imb_port_pad_size_set_f f_imb_port_pad_size_set;
    __dispatch__imb_port_pad_size_get_f f_imb_port_pad_size_get;
    __dispatch__imb_port_attach_f f_imb_port_attach;
    __dispatch__imb_port_detach_f f_imb_port_detach;
    __dispatch__imb_port_enable_set_f f_imb_port_enable_set;
    __dispatch__imb_port_enable_get_f f_imb_port_enable_get;
    __dispatch__imb_port_rx_data_enable_set_f f_imb_port_rx_data_enable_set;
    __dispatch__imb_port_loopback_set_f f_imb_port_loopback_set;
    __dispatch__imb_port_loopback_get_f f_imb_port_loopback_get;
    __dispatch__imb_port_link_state_get_f f_imb_port_link_state_get;
    __dispatch__imb_port_eee_enable_set_f f_imb_port_eee_enable_set;
    __dispatch__imb_port_eee_enable_get_f f_imb_port_eee_enable_get;
    __dispatch__imb_port_link_up_mac_update_f f_imb_port_link_up_mac_update;
    __dispatch__imb_port_priority_config_set_f f_imb_port_priority_config_set;
    __dispatch__imb_port_priority_config_get_f f_imb_port_priority_config_get;
    __dispatch__imb_port_phy_measure_get_f f_imb_port_phy_measure_get;
    __dispatch__imb_port_over_sampling_get_f f_imb_port_over_sampling_get;
    __dispatch__imb_port_autoneg_set_f f_imb_port_autoneg_set;
    __dispatch__imb_port_autoneg_get_f f_imb_port_autoneg_get;
    __dispatch__imb_port_link_get_f f_imb_port_link_get;
    __dispatch__imb_port_max_packet_size_set_f f_imb_port_max_packet_size_set;
    __dispatch__imb_port_max_packet_size_get_f f_imb_port_max_packet_size_get;
    __dispatch__imb_port_tx_average_ipg_set_f f_imb_port_tx_average_ipg_set;
    __dispatch__imb_port_tx_average_ipg_get_f f_imb_port_tx_average_ipg_get;
    __dispatch__imb_port_duplex_set_f f_imb_port_duplex_set;
    __dispatch__imb_port_duplex_get_f f_imb_port_duplex_get;
    __dispatch__imb_port_cntmaxsize_set_f f_imb_port_cntmaxsize_set;
    __dispatch__imb_port_cntmaxsize_get_f f_imb_port_cntmaxsize_get;
    __dispatch__imb_port_local_fault_status_get_f f_imb_port_local_fault_status_get;
    __dispatch__imb_port_local_fault_status_clear_f f_imb_port_local_fault_status_clear;
    __dispatch__imb_port_remote_fault_status_get_f f_imb_port_remote_fault_status_get;
    __dispatch__imb_port_remote_fault_status_clear_f f_imb_port_remote_fault_status_clear;
    __dispatch__imb_port_local_fault_enable_set_f f_imb_port_local_fault_enable_set;
    __dispatch__imb_port_local_fault_enable_get_f f_imb_port_local_fault_enable_get;
    __dispatch__imb_port_remote_fault_enable_set_f f_imb_port_remote_fault_enable_set;
    __dispatch__imb_port_remote_fault_enable_get_f f_imb_port_remote_fault_enable_get;
    __dispatch__imb_port_tx_mac_sa_set_f f_imb_port_tx_mac_sa_set;
    __dispatch__imb_port_tx_mac_sa_get_f f_imb_port_tx_mac_sa_get;
    __dispatch__imb_port_rx_mac_sa_set_f f_imb_port_rx_mac_sa_set;
    __dispatch__imb_port_rx_mac_sa_get_f f_imb_port_rx_mac_sa_get;
    __dispatch__imb_port_reset_set_f f_imb_port_reset_set;
    __dispatch__imb_port_reset_get_f f_imb_port_reset_get;
    __dispatch__imb_port_pfc_control_set_f f_imb_port_pfc_control_set;
    __dispatch__imb_port_pfc_control_get_f f_imb_port_pfc_control_get;
    __dispatch__imb_port_eee_set_f f_imb_port_eee_set;
    __dispatch__imb_port_eee_get_f f_imb_port_eee_get;
    __dispatch__imb_bandwidth_get_f f_imb_bandwidth_get;
    __dispatch__imb_port_tx_start_thr_set_f f_imb_port_tx_start_thr_set;
    __dispatch__imb_prd_enable_set_f f_imb_prd_enable_set;
    __dispatch__imb_prd_enable_get_f f_imb_prd_enable_get;
    __dispatch__imb_prd_properties_set_f f_imb_prd_properties_set;
    __dispatch__imb_prd_properties_get_f f_imb_prd_properties_get;
    __dispatch__imb_prd_port_profile_map_set_f f_imb_prd_port_profile_map_set;
    __dispatch__imb_prd_port_profile_map_get_f f_imb_prd_port_profile_map_get;
    __dispatch__imb_prd_map_set_f f_imb_prd_map_set;
    __dispatch__imb_prd_map_get_f f_imb_prd_map_get;
    __dispatch__imb_prd_threshold_set_f f_imb_prd_threshold_set;
    __dispatch__imb_prd_threshold_get_f f_imb_prd_threshold_get;
    __dispatch__imb_prd_threshold_max_get_f f_imb_prd_threshold_max_get;
    __dispatch__imb_prd_tpid_set_f f_imb_prd_tpid_set;
    __dispatch__imb_prd_tpid_get_f f_imb_prd_tpid_get;
    __dispatch__imb_prd_drop_count_get_f f_imb_prd_drop_count_get;
    __dispatch__imb_prd_custom_ether_type_set_f f_imb_prd_custom_ether_type_set;
    __dispatch__imb_prd_custom_ether_type_get_f f_imb_prd_custom_ether_type_get;
    __dispatch__imb_prd_flex_key_entry_set_f f_imb_prd_flex_key_entry_set;
    __dispatch__imb_prd_flex_key_entry_get_f f_imb_prd_flex_key_entry_get;
    __dispatch__imb_prd_ether_type_size_set_f f_imb_prd_ether_type_size_set;
    __dispatch__imb_prd_ether_type_size_get_f f_imb_prd_ether_type_size_get;
    __dispatch__imb_prd_tcam_entry_key_offset_base_set_f f_imb_prd_tcam_entry_key_offset_base_set;
    __dispatch__imb_prd_tcam_entry_key_offset_base_get_f f_imb_prd_tcam_entry_key_offset_base_get;
    __dispatch__imb_prd_tcam_entry_key_offset_set_f f_imb_prd_tcam_entry_key_offset_set;
    __dispatch__imb_prd_tcam_entry_key_offset_get_f f_imb_prd_tcam_entry_key_offset_get;
    __dispatch__imb_prd_control_frame_set_f f_imb_prd_control_frame_set;
    __dispatch__imb_prd_control_frame_get_f f_imb_prd_control_frame_get;
    __dispatch__imb_prd_mpls_special_label_set_f f_imb_prd_mpls_special_label_set;
    __dispatch__imb_prd_mpls_special_label_get_f f_imb_prd_mpls_special_label_get;
    __dispatch__imb_port_logical_lane_order_set_f f_imb_port_logical_lane_order_set;
    __dispatch__imb_port_logical_lane_order_get_f f_imb_port_logical_lane_order_get;
    __dispatch__imb_port_prbs_polynomial_set_f f_imb_port_prbs_polynomial_set;
    __dispatch__imb_port_prbs_polynomial_get_f f_imb_port_prbs_polynomial_get;
    __dispatch__imb_port_prbs_invert_data_set_f f_imb_port_prbs_invert_data_set;
    __dispatch__imb_port_prbs_invert_data_get_f f_imb_port_prbs_invert_data_get;
    __dispatch__imb_port_prbs_enable_set_f f_imb_port_prbs_enable_set;
    __dispatch__imb_port_prbs_enable_get_f f_imb_port_prbs_enable_get;
    __dispatch__imb_port_prbs_rx_status_get_f f_imb_port_prbs_rx_status_get;
    __dispatch__imb_port_phy_reg_set_f f_imb_port_phy_reg_set;
    __dispatch__imb_port_phy_reg_get_f f_imb_port_phy_reg_get;
    __dispatch__imb_port_rx_fifo_status_get_f f_imb_port_rx_fifo_status_get;
    __dispatch__imb_port_tx_fifo_status_get_f f_imb_port_tx_fifo_status_get;
    __dispatch__imb_port_low_latency_llfc_enable_set_f f_imb_port_low_latency_llfc_enable_set;
    __dispatch__imb_port_low_latency_llfc_enable_get_f f_imb_port_low_latency_llfc_enable_get;
    __dispatch__imb_port_fec_error_detect_enable_set_f f_imb_port_fec_error_detect_enable_set;
    __dispatch__imb_port_fec_error_detect_enable_get_f f_imb_port_fec_error_detect_enable_get;
    __dispatch__imb_port_llfc_after_fec_enable_set_f f_imb_port_llfc_after_fec_enable_set;
    __dispatch__imb_port_llfc_after_fec_enable_get_f f_imb_port_llfc_after_fec_enable_get;
        __dispatch__imb_port_extract_congestion_indication_from_llfc_enable_set_f
        f_imb_port_extract_congestion_indication_from_llfc_enable_set;
        __dispatch__imb_port_extract_congestion_indication_from_llfc_enable_get_f
        f_imb_port_extract_congestion_indication_from_llfc_enable_get;
    __dispatch__imb_port_control_cells_fec_bypass_enable_set_f f_imb_port_control_cells_fec_bypass_enable_set;
    __dispatch__imb_port_control_cells_fec_bypass_enable_get_f f_imb_port_control_cells_fec_bypass_enable_get;
    __dispatch__imb_port_speed_config_set_f f_imb_port_speed_config_set;
    __dispatch__imb_port_speed_config_get_f f_imb_port_speed_config_get;
    __dispatch__imb_port_mib_counter_get_f f_imb_port_mib_counter_get;
    __dispatch__imb_port_mib_counter_set_f f_imb_port_mib_counter_set;
    __dispatch__imb_port_mib_counter_clear_f f_imb_port_mib_counter_clear;
    __dispatch__imb_port_autoneg_ability_advert_set_f f_imb_port_autoneg_ability_advert_set;
    __dispatch__imb_port_autoneg_ability_advert_get_f f_imb_port_autoneg_ability_advert_get;
    __dispatch__imb_port_speed_ability_local_get_f f_imb_port_speed_ability_local_get;
    __dispatch__imb_port_autoneg_ability_remote_get_f f_imb_port_autoneg_ability_remote_get;
    __dispatch__imb_port_scheduler_config_set_f f_imb_port_scheduler_config_set;
    __dispatch__imb_port_scheduler_priority_update_f f_imb_port_scheduler_priority_update;
    __dispatch__imb_port_resource_default_get_f f_imb_port_resource_default_get;
    __dispatch__imb_port_to_stif_instance_map_set_f f_imb_port_to_stif_instance_map_set;
    __dispatch__imb_phys_get_f f_imb_phys_get;
    __dispatch__imb_port_gen_pfc_from_rmc_enable_set_f f_imb_port_gen_pfc_from_rmc_enable_set;
    __dispatch__imb_port_gen_pfc_from_rmc_enable_get_f f_imb_port_gen_pfc_from_rmc_enable_get;
    __dispatch__imb_port_gen_llfc_from_rmc_enable_set_f f_imb_port_gen_llfc_from_rmc_enable_set;
    __dispatch__imb_port_stop_pm_from_cfc_llfc_enable_set_f f_imb_port_stop_pm_from_cfc_llfc_enable_set;
    __dispatch__imb_port_stop_pm_from_pfc_enable_set_f f_imb_port_stop_pm_from_pfc_enable_set;
    __dispatch__imb_port_stop_pm_from_pfc_enable_get_f f_imb_port_stop_pm_from_pfc_enable_get;
    __dispatch__imb_port_gen_pfc_from_llfc_thresh_enable_set_f f_imb_port_gen_pfc_from_llfc_thresh_enable_set;
    __dispatch__imb_port_gen_pfc_from_llfc_thresh_enable_get_f f_imb_port_gen_pfc_from_llfc_thresh_enable_get;
    __dispatch__imb_port_fc_rx_qmlf_threshold_set_f f_imb_port_fc_rx_qmlf_threshold_set;
    __dispatch__imb_port_fc_rx_qmlf_threshold_get_f f_imb_port_fc_rx_qmlf_threshold_get;
    __dispatch__imb_fc_reset_set_f f_imb_fc_reset_set;
    __dispatch__imb_llfc_from_glb_rsc_enable_set_f f_imb_llfc_from_glb_rsc_enable_set;
    __dispatch__imb_pfc_rec_priority_map_f f_imb_pfc_rec_priority_map;
    __dispatch__imb_pfc_rec_priority_unmap_f f_imb_pfc_rec_priority_unmap;
    __dispatch__imb_port_fec_speed_validate_f f_imb_port_fec_speed_validate;
    __dispatch__imb_inband_ilkn_fc_init_f f_imb_inband_ilkn_fc_init;
    __dispatch__imb_calendar_set_f f_imb_calendar_set;
    __dispatch__imb_port_fifo_resource_set_f f_imb_port_fifo_resource_set;
    __dispatch__imb_post_init_f f_imb_post_init;
    __dispatch__imb_instru_counters_reset_f f_imb_instru_counters_reset;
    __dispatch__imb_pfc_deadlock_counters_reset_f f_imb_pfc_deadlock_counters_reset;
    __dispatch__imb_port_pfc_deadlock_counters_reset_f f_imb_port_pfc_deadlock_counters_reset;
    __dispatch__imb_pfc_deadlock_debug_info_get_f f_imb_pfc_deadlock_debug_info_get;
    __dispatch__imb_pfc_deadlock_max_duration_set_f f_imb_pfc_deadlock_max_duration_set;
    __dispatch__imb_pfc_deadlock_max_duration_get_f f_imb_pfc_deadlock_max_duration_get;
    __dispatch__imb_port_phy_control_validate_f f_imb_port_phy_control_validate;
    __dispatch__imb_port_pre_add_validate_f f_imb_port_pre_add_validate;
    __dispatch__imb_port_autoneg_ability_verify_f f_imb_port_autoneg_ability_verify;
    __dispatch__imb_port_pcs_lane_map_set_f f_imb_port_pcs_lane_map_set;
    __dispatch__imb_port_link_status_change_event_f f_imb_port_link_status_change_event;
    __dispatch__imb_alternative_port_set_f f_imb_alternative_port_set;
    __dispatch__imb_port_l1_mismatch_rate_rx_config_set_f f_imb_port_l1_mismatch_rate_rx_config_set;
    __dispatch__imb_port_post_ber_proj_get_f f_imb_port_post_ber_proj_get;
    __dispatch__imb_flexe_core_port_config_set_f f_imb_flexe_core_port_config_set;
    __dispatch__imb_portmod_add_info_config_f f_imb_portmod_add_info_config;
} __imb__dispatch__t__;

extern const __imb__dispatch__t__ *__imb__dispatch__[imbDispatchTypeCount];

#endif /*_IMB_DISPATCH_H_*/
