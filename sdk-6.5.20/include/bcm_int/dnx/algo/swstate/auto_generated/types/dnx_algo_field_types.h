/** \file algo/swstate/auto_generated/types/dnx_algo_field_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __DNX_ALGO_FIELD_TYPES_H__
#define __DNX_ALGO_FIELD_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/field/algo_field.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_types.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_key_types.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_actions_types.h>
/*
 * MACROs
 */

/**
 * FFC Bitmap range size, each FFC range represents different FFC set with different capabilities
 */
#define DNX_FIELD_ALGO_FFC_BMP_REGION_SIZE 16

/**
 * Number of FFC Bitmap ranges, each FFC range represents different FFC set with different capabilities
 */
#define DNX_FIELD_ALGO_FFC_BMP_REGION_COUNT 4

/*
 * STRUCTs
 */

/**
 * Holds the needed info for key allocation
 */
typedef struct {
    /**
     * dummy
     */
    int dummy;
} dnx_algo_field_key_t;

/**
 * Holds the needed information for context link
 */
typedef struct {
    /**
     * Profile number to assign for the context links
     */
    int profile_num;
    /**
     * Number of contexts linked to this context
     */
    int nof_linked;
} algo_field_context_link_t;

/**
 * Hold the needed info to manage Field module algorithms
 */
typedef struct {
    /**
     * All info regarding Key id allocation algorithms
     */
    dnx_algo_field_key_t key_algo;
    /**
     * IPMF_1_FFC
     */
    dnx_algo_res_t* ipmf_1_ffc;
    /**
     * IPMF_2_FFC
     */
    dnx_algo_res_t* ipmf_2_ffc;
    /**
     * IPMF_3_FFC
     */
    dnx_algo_res_t* ipmf_3_ffc;
    /**
     * EPMF_FFC
     */
    dnx_algo_res_t* epmf_ffc;
    /**
     * IFWD2_FFC
     */
    dnx_algo_res_t* ifwd2_ffc;
    /**
     * IPMF1_INITIAL_KEY_OCC_BMP
     */
    dnx_algo_res_t* ipmf1_initial_key_occ_bmp;
    /**
     * IPMF_A_FES_ID
     */
    dnx_algo_res_t ipmf_a_fes_id;
    /**
     * IPMF_B_FES_ID
     */
    dnx_algo_res_t ipmf_b_fes_id;
    /**
     * EPMF_FES_ID
     */
    dnx_algo_res_t epmf_fes_id;
    /**
     * IPMF_A_FEM_PGM_ID
     */
    dnx_algo_res_t* ipmf_a_fem_pgm_id;
    /**
     * IPMF1_CONTEXT_ID
     */
    dnx_algo_res_t ipmf1_context_id;
    /**
     * IPMF2_CONTEXT_ID
     */
    dnx_algo_res_t ipmf2_context_id;
    /**
     * IPMF3_CONTEXT_ID
     */
    dnx_algo_res_t ipmf3_context_id;
    /**
     * EPMF_CONTEXT_ID
     */
    dnx_algo_res_t epmf_context_id;
    /**
     * USER_QUAL_ID
     */
    dnx_algo_res_t user_qual_id;
    /**
     * USER_ACTION_ID
     */
    dnx_algo_res_t user_action_id;
    /**
     * FIELD_GROUP_ID
     */
    dnx_algo_res_t field_group_id;
    /**
     * SEXEM_APP_DB_ID
     */
    dnx_algo_res_t sexem_app_db_id;
    /**
     * LEXEM_APP_DB_ID
     */
    dnx_algo_res_t lexem_app_db_id;
    /**
     * ACE_ID
     */
    dnx_algo_res_t ace_id;
    /**
     * ACE_KEY
     */
    dnx_algo_res_t ace_key;
    /**
     * ENTRY_TCAM_ACCESS_ID
     */
    dnx_algo_res_t entry_tcam_access_id;
    /**
     * ACTION TEMPLATE PER FEM_*
     */
    dnx_algo_template_t* action_template_per_fem;
    /**
     * IPMF1 link profiles
     */
    dnx_algo_res_t link_profiles;
    /**
     * KBP_OPCODE_CS_PROFILE_ID
     */
    dnx_algo_res_t kbp_opcode_cs_profile_id;
    /**
     * IPMF1 contexts link array
     */
    algo_field_context_link_t* ipmf1_contexts_link;
    /**
     * User defined Apptyeps
     */
    dnx_algo_res_t user_apptype_id;
    /**
     * FLUSH_PROFILE_ID
     */
    dnx_algo_res_t flush_profile_id;
} algo_field_info_t;


#endif /* __DNX_ALGO_FIELD_TYPES_H__ */
