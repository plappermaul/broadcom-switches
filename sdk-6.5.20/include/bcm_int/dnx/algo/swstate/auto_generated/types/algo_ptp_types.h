/** \file algo/swstate/auto_generated/types/algo_ptp_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __ALGO_PTP_TYPES_H__
#define __ALGO_PTP_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/ptp/algo_ptp.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
/*
 * STRUCTs
 */

/**
 * structure that holds the ptp port profile parameters
 */
typedef struct {
    /**
     * wehter PTP (1588) is enabled in the port or not
     */
    uint8 ptp_enabled;
    /**
     * flags indicating wether 1/2 step clock are enabled.
     * valid flags: BCM_PORT_TIMESYNC_ONE_STEP_TIMESTAMP/BCM_PORT_TIMESYNC_TWO_STEP_TIMESTAMP
     */
    uint32 flags;
    /**
     * bitmap of 1588 event and general packet types (see dbal defines),indicating wether to :
     * 1. forward (drop-0,tocpu-0)
     * 2. trap/snoop(drop-0,tocpu-1)
     * 3. drop(drop-1,tocpu-0)
     * the packet.
     */
    uint32 pkt_drop;
    uint32 pkt_tocpu;
    int user_trap_id;
} dnx_ptp_port_profile_info_t;

/**
 * PTP related sw state
 */
typedef struct {
    /**
     * ptp port profile
     */
    dnx_algo_template_t ptp_port_profile;
} algo_ptp_sw_state_t;


#endif /* __ALGO_PTP_TYPES_H__ */
