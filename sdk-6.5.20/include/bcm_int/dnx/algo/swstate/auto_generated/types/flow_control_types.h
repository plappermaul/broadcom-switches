/** \file algo/swstate/auto_generated/types/flow_control_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __FLOW_CONTROL_TYPES_H__
#define __FLOW_CONTROL_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm/cosq.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <bcm_int/dnx/cosq/flow_control/flow_control_imp.h>
#include <bcm_int/dnx/cosq/flow_control/pfc_deadlock.h>
#include <include/shared/periodic_event.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_max_nif.h>
/*
 * STRUCTs
 */

typedef struct {
    /**
     * Is the PFC Deadlock Recovery mechanism enabled
     */
    int enabled[DNX_DATA_MAX_NIF_ETH_ETHU_NOF];
    /**
     * Chip behavior during PFC recovery stage(0-transmit, 1-drop)
     */
    int action;
    /**
     * Granularity for PFC Deadlock detection timer.
     */
    int detection_timer_granularity;
    /**
     * SW recovery timer per port per PFC priority
     */
    int timer[DNX_DATA_MAX_NIF_PHYS_NOF_PHYS][BCM_COS_COUNT];
    /**
     * Data that is used in the callback called by the periodic event handler in order to restore the port to original state
     */
    pfc_deadlock_recovery_userdata_t data;
    /**
     * Number of  occurrences of  PFC deadlock recovery per port per PFC priority
     */
    int occurances[DNX_DATA_MAX_NIF_PHYS_NOF_PHYS][BCM_COS_COUNT];
    /**
     * A handle for the thread that is created by the periodic event handler that is used for the recovery time of the PFC Deadlock breaking mechanism
     */
    periodic_event_handler_t event_handle;
} pfc_deadlock_recovery_t;

/**
 * Flow control related SW State
 */
typedef struct {
    /**
     * RESOURCE_FC_GENERIC_BMP
     */
    dnx_algo_template_t fc_generic_bmp;
    /**
     * PFC Deadlock Recovery mechanism related SW State
     */
    pfc_deadlock_recovery_t pfc_deadlock_recovery;
} flow_control_sw_state_t;


#endif /* __FLOW_CONTROL_TYPES_H__ */
