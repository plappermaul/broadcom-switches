/** \file algo/swstate/auto_generated/access/dnx_algo_field_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __DNX_ALGO_FIELD_ACCESS_H__
#define __DNX_ALGO_FIELD_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/dnx_algo_field_types.h>
#include <bcm_int/dnx/algo/field/algo_field.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_types.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_key_types.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_actions_types.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: algo_field_info_sw_is_init
 */
typedef int (*algo_field_info_sw_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: algo_field_info_sw_init
 */
typedef int (*algo_field_info_sw_init_cb)(
    int unit);

/**
 * implemented by: algo_field_info_sw_key_algo_dummy_set
 */
typedef int (*algo_field_info_sw_key_algo_dummy_set_cb)(
    int unit, int dummy);

/**
 * implemented by: algo_field_info_sw_key_algo_dummy_get
 */
typedef int (*algo_field_info_sw_key_algo_dummy_get_cb)(
    int unit, int *dummy);

/**
 * implemented by: algo_field_info_sw_ipmf_1_ffc_set
 */
typedef int (*algo_field_info_sw_ipmf_1_ffc_set_cb)(
    int unit, uint32 ipmf_1_ffc_idx_0, dnx_algo_res_t ipmf_1_ffc);

/**
 * implemented by: algo_field_info_sw_ipmf_1_ffc_get
 */
typedef int (*algo_field_info_sw_ipmf_1_ffc_get_cb)(
    int unit, uint32 ipmf_1_ffc_idx_0, dnx_algo_res_t *ipmf_1_ffc);

/**
 * implemented by: algo_field_info_sw_ipmf_1_ffc_alloc
 */
typedef int (*algo_field_info_sw_ipmf_1_ffc_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: algo_field_info_sw_ipmf_1_ffc_create
 */
typedef int (*algo_field_info_sw_ipmf_1_ffc_create_cb)(
    int unit, uint32 ipmf_1_ffc_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ipmf_1_ffc_allocate_single
 */
typedef int (*algo_field_info_sw_ipmf_1_ffc_allocate_single_cb)(
    int unit, uint32 ipmf_1_ffc_idx_0, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ipmf_1_ffc_free_single
 */
typedef int (*algo_field_info_sw_ipmf_1_ffc_free_single_cb)(
    int unit, uint32 ipmf_1_ffc_idx_0, int element);

/**
 * implemented by: algo_field_info_sw_ipmf_2_ffc_set
 */
typedef int (*algo_field_info_sw_ipmf_2_ffc_set_cb)(
    int unit, uint32 ipmf_2_ffc_idx_0, dnx_algo_res_t ipmf_2_ffc);

/**
 * implemented by: algo_field_info_sw_ipmf_2_ffc_get
 */
typedef int (*algo_field_info_sw_ipmf_2_ffc_get_cb)(
    int unit, uint32 ipmf_2_ffc_idx_0, dnx_algo_res_t *ipmf_2_ffc);

/**
 * implemented by: algo_field_info_sw_ipmf_2_ffc_alloc
 */
typedef int (*algo_field_info_sw_ipmf_2_ffc_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: algo_field_info_sw_ipmf_2_ffc_create
 */
typedef int (*algo_field_info_sw_ipmf_2_ffc_create_cb)(
    int unit, uint32 ipmf_2_ffc_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ipmf_2_ffc_allocate_single
 */
typedef int (*algo_field_info_sw_ipmf_2_ffc_allocate_single_cb)(
    int unit, uint32 ipmf_2_ffc_idx_0, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ipmf_2_ffc_free_single
 */
typedef int (*algo_field_info_sw_ipmf_2_ffc_free_single_cb)(
    int unit, uint32 ipmf_2_ffc_idx_0, int element);

/**
 * implemented by: algo_field_info_sw_ipmf_3_ffc_set
 */
typedef int (*algo_field_info_sw_ipmf_3_ffc_set_cb)(
    int unit, uint32 ipmf_3_ffc_idx_0, dnx_algo_res_t ipmf_3_ffc);

/**
 * implemented by: algo_field_info_sw_ipmf_3_ffc_get
 */
typedef int (*algo_field_info_sw_ipmf_3_ffc_get_cb)(
    int unit, uint32 ipmf_3_ffc_idx_0, dnx_algo_res_t *ipmf_3_ffc);

/**
 * implemented by: algo_field_info_sw_ipmf_3_ffc_alloc
 */
typedef int (*algo_field_info_sw_ipmf_3_ffc_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: algo_field_info_sw_ipmf_3_ffc_create
 */
typedef int (*algo_field_info_sw_ipmf_3_ffc_create_cb)(
    int unit, uint32 ipmf_3_ffc_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ipmf_3_ffc_allocate_single
 */
typedef int (*algo_field_info_sw_ipmf_3_ffc_allocate_single_cb)(
    int unit, uint32 ipmf_3_ffc_idx_0, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ipmf_3_ffc_free_single
 */
typedef int (*algo_field_info_sw_ipmf_3_ffc_free_single_cb)(
    int unit, uint32 ipmf_3_ffc_idx_0, int element);

/**
 * implemented by: algo_field_info_sw_epmf_ffc_set
 */
typedef int (*algo_field_info_sw_epmf_ffc_set_cb)(
    int unit, uint32 epmf_ffc_idx_0, dnx_algo_res_t epmf_ffc);

/**
 * implemented by: algo_field_info_sw_epmf_ffc_get
 */
typedef int (*algo_field_info_sw_epmf_ffc_get_cb)(
    int unit, uint32 epmf_ffc_idx_0, dnx_algo_res_t *epmf_ffc);

/**
 * implemented by: algo_field_info_sw_epmf_ffc_alloc
 */
typedef int (*algo_field_info_sw_epmf_ffc_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: algo_field_info_sw_epmf_ffc_create
 */
typedef int (*algo_field_info_sw_epmf_ffc_create_cb)(
    int unit, uint32 epmf_ffc_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_epmf_ffc_allocate_single
 */
typedef int (*algo_field_info_sw_epmf_ffc_allocate_single_cb)(
    int unit, uint32 epmf_ffc_idx_0, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_epmf_ffc_free_single
 */
typedef int (*algo_field_info_sw_epmf_ffc_free_single_cb)(
    int unit, uint32 epmf_ffc_idx_0, int element);

/**
 * implemented by: algo_field_info_sw_ifwd2_ffc_set
 */
typedef int (*algo_field_info_sw_ifwd2_ffc_set_cb)(
    int unit, uint32 ifwd2_ffc_idx_0, dnx_algo_res_t ifwd2_ffc);

/**
 * implemented by: algo_field_info_sw_ifwd2_ffc_get
 */
typedef int (*algo_field_info_sw_ifwd2_ffc_get_cb)(
    int unit, uint32 ifwd2_ffc_idx_0, dnx_algo_res_t *ifwd2_ffc);

/**
 * implemented by: algo_field_info_sw_ifwd2_ffc_alloc
 */
typedef int (*algo_field_info_sw_ifwd2_ffc_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: algo_field_info_sw_ifwd2_ffc_create
 */
typedef int (*algo_field_info_sw_ifwd2_ffc_create_cb)(
    int unit, uint32 ifwd2_ffc_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ifwd2_ffc_allocate_single
 */
typedef int (*algo_field_info_sw_ifwd2_ffc_allocate_single_cb)(
    int unit, uint32 ifwd2_ffc_idx_0, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ifwd2_ffc_free_single
 */
typedef int (*algo_field_info_sw_ifwd2_ffc_free_single_cb)(
    int unit, uint32 ifwd2_ffc_idx_0, int element);

/**
 * implemented by: algo_field_info_sw_ifwd2_ffc_is_allocated
 */
typedef int (*algo_field_info_sw_ifwd2_ffc_is_allocated_cb)(
    int unit, uint32 ifwd2_ffc_idx_0, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_ifwd2_ffc_nof_free_elements_get
 */
typedef int (*algo_field_info_sw_ifwd2_ffc_nof_free_elements_get_cb)(
    int unit, uint32 ifwd2_ffc_idx_0, int *nof_free_elements);

/**
 * implemented by: algo_field_info_sw_ipmf1_initial_key_occ_bmp_set
 */
typedef int (*algo_field_info_sw_ipmf1_initial_key_occ_bmp_set_cb)(
    int unit, uint32 ipmf1_initial_key_occ_bmp_idx_0, dnx_algo_res_t ipmf1_initial_key_occ_bmp);

/**
 * implemented by: algo_field_info_sw_ipmf1_initial_key_occ_bmp_get
 */
typedef int (*algo_field_info_sw_ipmf1_initial_key_occ_bmp_get_cb)(
    int unit, uint32 ipmf1_initial_key_occ_bmp_idx_0, dnx_algo_res_t *ipmf1_initial_key_occ_bmp);

/**
 * implemented by: algo_field_info_sw_ipmf1_initial_key_occ_bmp_alloc
 */
typedef int (*algo_field_info_sw_ipmf1_initial_key_occ_bmp_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: algo_field_info_sw_ipmf1_initial_key_occ_bmp_create
 */
typedef int (*algo_field_info_sw_ipmf1_initial_key_occ_bmp_create_cb)(
    int unit, uint32 ipmf1_initial_key_occ_bmp_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ipmf1_initial_key_occ_bmp_allocate_several
 */
typedef int (*algo_field_info_sw_ipmf1_initial_key_occ_bmp_allocate_several_cb)(
    int unit, uint32 ipmf1_initial_key_occ_bmp_idx_0, uint32 flags, uint32 nof_elements, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ipmf1_initial_key_occ_bmp_free_several
 */
typedef int (*algo_field_info_sw_ipmf1_initial_key_occ_bmp_free_several_cb)(
    int unit, uint32 ipmf1_initial_key_occ_bmp_idx_0, uint32 nof_elements, int element);

/**
 * implemented by: algo_field_info_sw_ipmf_a_fes_id_set
 */
typedef int (*algo_field_info_sw_ipmf_a_fes_id_set_cb)(
    int unit, dnx_algo_res_t ipmf_a_fes_id);

/**
 * implemented by: algo_field_info_sw_ipmf_a_fes_id_get
 */
typedef int (*algo_field_info_sw_ipmf_a_fes_id_get_cb)(
    int unit, dnx_algo_res_t *ipmf_a_fes_id);

/**
 * implemented by: algo_field_info_sw_ipmf_a_fes_id_create
 */
typedef int (*algo_field_info_sw_ipmf_a_fes_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ipmf_a_fes_id_allocate_single
 */
typedef int (*algo_field_info_sw_ipmf_a_fes_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ipmf_a_fes_id_free_single
 */
typedef int (*algo_field_info_sw_ipmf_a_fes_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_ipmf_b_fes_id_set
 */
typedef int (*algo_field_info_sw_ipmf_b_fes_id_set_cb)(
    int unit, dnx_algo_res_t ipmf_b_fes_id);

/**
 * implemented by: algo_field_info_sw_ipmf_b_fes_id_get
 */
typedef int (*algo_field_info_sw_ipmf_b_fes_id_get_cb)(
    int unit, dnx_algo_res_t *ipmf_b_fes_id);

/**
 * implemented by: algo_field_info_sw_ipmf_b_fes_id_create
 */
typedef int (*algo_field_info_sw_ipmf_b_fes_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ipmf_b_fes_id_allocate_single
 */
typedef int (*algo_field_info_sw_ipmf_b_fes_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ipmf_b_fes_id_free_single
 */
typedef int (*algo_field_info_sw_ipmf_b_fes_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_ipmf_b_fes_id_is_allocated
 */
typedef int (*algo_field_info_sw_ipmf_b_fes_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_epmf_fes_id_set
 */
typedef int (*algo_field_info_sw_epmf_fes_id_set_cb)(
    int unit, dnx_algo_res_t epmf_fes_id);

/**
 * implemented by: algo_field_info_sw_epmf_fes_id_get
 */
typedef int (*algo_field_info_sw_epmf_fes_id_get_cb)(
    int unit, dnx_algo_res_t *epmf_fes_id);

/**
 * implemented by: algo_field_info_sw_epmf_fes_id_create
 */
typedef int (*algo_field_info_sw_epmf_fes_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_epmf_fes_id_allocate_single
 */
typedef int (*algo_field_info_sw_epmf_fes_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_epmf_fes_id_free_single
 */
typedef int (*algo_field_info_sw_epmf_fes_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_epmf_fes_id_is_allocated
 */
typedef int (*algo_field_info_sw_epmf_fes_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_ipmf_a_fem_pgm_id_set
 */
typedef int (*algo_field_info_sw_ipmf_a_fem_pgm_id_set_cb)(
    int unit, uint32 ipmf_a_fem_pgm_id_idx_0, dnx_algo_res_t ipmf_a_fem_pgm_id);

/**
 * implemented by: algo_field_info_sw_ipmf_a_fem_pgm_id_get
 */
typedef int (*algo_field_info_sw_ipmf_a_fem_pgm_id_get_cb)(
    int unit, uint32 ipmf_a_fem_pgm_id_idx_0, dnx_algo_res_t *ipmf_a_fem_pgm_id);

/**
 * implemented by: algo_field_info_sw_ipmf_a_fem_pgm_id_alloc
 */
typedef int (*algo_field_info_sw_ipmf_a_fem_pgm_id_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: algo_field_info_sw_ipmf_a_fem_pgm_id_create
 */
typedef int (*algo_field_info_sw_ipmf_a_fem_pgm_id_create_cb)(
    int unit, uint32 ipmf_a_fem_pgm_id_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ipmf_a_fem_pgm_id_allocate_single
 */
typedef int (*algo_field_info_sw_ipmf_a_fem_pgm_id_allocate_single_cb)(
    int unit, uint32 ipmf_a_fem_pgm_id_idx_0, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ipmf_a_fem_pgm_id_free_single
 */
typedef int (*algo_field_info_sw_ipmf_a_fem_pgm_id_free_single_cb)(
    int unit, uint32 ipmf_a_fem_pgm_id_idx_0, int element);

/**
 * implemented by: algo_field_info_sw_ipmf_a_fem_pgm_id_is_allocated
 */
typedef int (*algo_field_info_sw_ipmf_a_fem_pgm_id_is_allocated_cb)(
    int unit, uint32 ipmf_a_fem_pgm_id_idx_0, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_ipmf1_context_id_set
 */
typedef int (*algo_field_info_sw_ipmf1_context_id_set_cb)(
    int unit, dnx_algo_res_t ipmf1_context_id);

/**
 * implemented by: algo_field_info_sw_ipmf1_context_id_get
 */
typedef int (*algo_field_info_sw_ipmf1_context_id_get_cb)(
    int unit, dnx_algo_res_t *ipmf1_context_id);

/**
 * implemented by: algo_field_info_sw_ipmf1_context_id_create
 */
typedef int (*algo_field_info_sw_ipmf1_context_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ipmf1_context_id_allocate_single
 */
typedef int (*algo_field_info_sw_ipmf1_context_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ipmf1_context_id_free_single
 */
typedef int (*algo_field_info_sw_ipmf1_context_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_ipmf1_context_id_is_allocated
 */
typedef int (*algo_field_info_sw_ipmf1_context_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_ipmf2_context_id_set
 */
typedef int (*algo_field_info_sw_ipmf2_context_id_set_cb)(
    int unit, dnx_algo_res_t ipmf2_context_id);

/**
 * implemented by: algo_field_info_sw_ipmf2_context_id_get
 */
typedef int (*algo_field_info_sw_ipmf2_context_id_get_cb)(
    int unit, dnx_algo_res_t *ipmf2_context_id);

/**
 * implemented by: algo_field_info_sw_ipmf2_context_id_create
 */
typedef int (*algo_field_info_sw_ipmf2_context_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ipmf2_context_id_allocate_single
 */
typedef int (*algo_field_info_sw_ipmf2_context_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ipmf2_context_id_free_single
 */
typedef int (*algo_field_info_sw_ipmf2_context_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_ipmf2_context_id_is_allocated
 */
typedef int (*algo_field_info_sw_ipmf2_context_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_ipmf3_context_id_set
 */
typedef int (*algo_field_info_sw_ipmf3_context_id_set_cb)(
    int unit, dnx_algo_res_t ipmf3_context_id);

/**
 * implemented by: algo_field_info_sw_ipmf3_context_id_get
 */
typedef int (*algo_field_info_sw_ipmf3_context_id_get_cb)(
    int unit, dnx_algo_res_t *ipmf3_context_id);

/**
 * implemented by: algo_field_info_sw_ipmf3_context_id_create
 */
typedef int (*algo_field_info_sw_ipmf3_context_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ipmf3_context_id_allocate_single
 */
typedef int (*algo_field_info_sw_ipmf3_context_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ipmf3_context_id_free_single
 */
typedef int (*algo_field_info_sw_ipmf3_context_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_ipmf3_context_id_is_allocated
 */
typedef int (*algo_field_info_sw_ipmf3_context_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_epmf_context_id_set
 */
typedef int (*algo_field_info_sw_epmf_context_id_set_cb)(
    int unit, dnx_algo_res_t epmf_context_id);

/**
 * implemented by: algo_field_info_sw_epmf_context_id_get
 */
typedef int (*algo_field_info_sw_epmf_context_id_get_cb)(
    int unit, dnx_algo_res_t *epmf_context_id);

/**
 * implemented by: algo_field_info_sw_epmf_context_id_create
 */
typedef int (*algo_field_info_sw_epmf_context_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_epmf_context_id_allocate_single
 */
typedef int (*algo_field_info_sw_epmf_context_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_epmf_context_id_free_single
 */
typedef int (*algo_field_info_sw_epmf_context_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_epmf_context_id_is_allocated
 */
typedef int (*algo_field_info_sw_epmf_context_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_user_qual_id_set
 */
typedef int (*algo_field_info_sw_user_qual_id_set_cb)(
    int unit, dnx_algo_res_t user_qual_id);

/**
 * implemented by: algo_field_info_sw_user_qual_id_get
 */
typedef int (*algo_field_info_sw_user_qual_id_get_cb)(
    int unit, dnx_algo_res_t *user_qual_id);

/**
 * implemented by: algo_field_info_sw_user_qual_id_create
 */
typedef int (*algo_field_info_sw_user_qual_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_user_qual_id_allocate_single
 */
typedef int (*algo_field_info_sw_user_qual_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_user_qual_id_free_single
 */
typedef int (*algo_field_info_sw_user_qual_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_user_qual_id_is_allocated
 */
typedef int (*algo_field_info_sw_user_qual_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_user_action_id_set
 */
typedef int (*algo_field_info_sw_user_action_id_set_cb)(
    int unit, dnx_algo_res_t user_action_id);

/**
 * implemented by: algo_field_info_sw_user_action_id_get
 */
typedef int (*algo_field_info_sw_user_action_id_get_cb)(
    int unit, dnx_algo_res_t *user_action_id);

/**
 * implemented by: algo_field_info_sw_user_action_id_create
 */
typedef int (*algo_field_info_sw_user_action_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_user_action_id_allocate_single
 */
typedef int (*algo_field_info_sw_user_action_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_user_action_id_free_single
 */
typedef int (*algo_field_info_sw_user_action_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_user_action_id_is_allocated
 */
typedef int (*algo_field_info_sw_user_action_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_field_group_id_set
 */
typedef int (*algo_field_info_sw_field_group_id_set_cb)(
    int unit, dnx_algo_res_t field_group_id);

/**
 * implemented by: algo_field_info_sw_field_group_id_get
 */
typedef int (*algo_field_info_sw_field_group_id_get_cb)(
    int unit, dnx_algo_res_t *field_group_id);

/**
 * implemented by: algo_field_info_sw_field_group_id_create
 */
typedef int (*algo_field_info_sw_field_group_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_field_group_id_allocate_single
 */
typedef int (*algo_field_info_sw_field_group_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_field_group_id_free_single
 */
typedef int (*algo_field_info_sw_field_group_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_field_group_id_is_allocated
 */
typedef int (*algo_field_info_sw_field_group_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_sexem_app_db_id_set
 */
typedef int (*algo_field_info_sw_sexem_app_db_id_set_cb)(
    int unit, dnx_algo_res_t sexem_app_db_id);

/**
 * implemented by: algo_field_info_sw_sexem_app_db_id_get
 */
typedef int (*algo_field_info_sw_sexem_app_db_id_get_cb)(
    int unit, dnx_algo_res_t *sexem_app_db_id);

/**
 * implemented by: algo_field_info_sw_sexem_app_db_id_create
 */
typedef int (*algo_field_info_sw_sexem_app_db_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_sexem_app_db_id_allocate_single
 */
typedef int (*algo_field_info_sw_sexem_app_db_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_sexem_app_db_id_free_single
 */
typedef int (*algo_field_info_sw_sexem_app_db_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_sexem_app_db_id_is_allocated
 */
typedef int (*algo_field_info_sw_sexem_app_db_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_lexem_app_db_id_set
 */
typedef int (*algo_field_info_sw_lexem_app_db_id_set_cb)(
    int unit, dnx_algo_res_t lexem_app_db_id);

/**
 * implemented by: algo_field_info_sw_lexem_app_db_id_get
 */
typedef int (*algo_field_info_sw_lexem_app_db_id_get_cb)(
    int unit, dnx_algo_res_t *lexem_app_db_id);

/**
 * implemented by: algo_field_info_sw_lexem_app_db_id_create
 */
typedef int (*algo_field_info_sw_lexem_app_db_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_lexem_app_db_id_allocate_single
 */
typedef int (*algo_field_info_sw_lexem_app_db_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_lexem_app_db_id_free_single
 */
typedef int (*algo_field_info_sw_lexem_app_db_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_lexem_app_db_id_is_allocated
 */
typedef int (*algo_field_info_sw_lexem_app_db_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_ace_id_set
 */
typedef int (*algo_field_info_sw_ace_id_set_cb)(
    int unit, dnx_algo_res_t ace_id);

/**
 * implemented by: algo_field_info_sw_ace_id_get
 */
typedef int (*algo_field_info_sw_ace_id_get_cb)(
    int unit, dnx_algo_res_t *ace_id);

/**
 * implemented by: algo_field_info_sw_ace_id_create
 */
typedef int (*algo_field_info_sw_ace_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ace_id_allocate_single
 */
typedef int (*algo_field_info_sw_ace_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ace_id_free_single
 */
typedef int (*algo_field_info_sw_ace_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_ace_id_is_allocated
 */
typedef int (*algo_field_info_sw_ace_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_ace_key_set
 */
typedef int (*algo_field_info_sw_ace_key_set_cb)(
    int unit, dnx_algo_res_t ace_key);

/**
 * implemented by: algo_field_info_sw_ace_key_get
 */
typedef int (*algo_field_info_sw_ace_key_get_cb)(
    int unit, dnx_algo_res_t *ace_key);

/**
 * implemented by: algo_field_info_sw_ace_key_create
 */
typedef int (*algo_field_info_sw_ace_key_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_ace_key_allocate_single
 */
typedef int (*algo_field_info_sw_ace_key_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_ace_key_free_single
 */
typedef int (*algo_field_info_sw_ace_key_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_ace_key_is_allocated
 */
typedef int (*algo_field_info_sw_ace_key_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_entry_tcam_access_id_set
 */
typedef int (*algo_field_info_sw_entry_tcam_access_id_set_cb)(
    int unit, dnx_algo_res_t entry_tcam_access_id);

/**
 * implemented by: algo_field_info_sw_entry_tcam_access_id_get
 */
typedef int (*algo_field_info_sw_entry_tcam_access_id_get_cb)(
    int unit, dnx_algo_res_t *entry_tcam_access_id);

/**
 * implemented by: algo_field_info_sw_entry_tcam_access_id_create
 */
typedef int (*algo_field_info_sw_entry_tcam_access_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_entry_tcam_access_id_allocate_single
 */
typedef int (*algo_field_info_sw_entry_tcam_access_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_entry_tcam_access_id_free_single
 */
typedef int (*algo_field_info_sw_entry_tcam_access_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_entry_tcam_access_id_is_allocated
 */
typedef int (*algo_field_info_sw_entry_tcam_access_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_action_template_per_fem_set
 */
typedef int (*algo_field_info_sw_action_template_per_fem_set_cb)(
    int unit, uint32 action_template_per_fem_idx_0, dnx_algo_template_t action_template_per_fem);

/**
 * implemented by: algo_field_info_sw_action_template_per_fem_get
 */
typedef int (*algo_field_info_sw_action_template_per_fem_get_cb)(
    int unit, uint32 action_template_per_fem_idx_0, dnx_algo_template_t *action_template_per_fem);

/**
 * implemented by: algo_field_info_sw_action_template_per_fem_alloc
 */
typedef int (*algo_field_info_sw_action_template_per_fem_alloc_cb)(
    int unit);

/**
 * implemented by: algo_field_info_sw_action_template_per_fem_create
 */
typedef int (*algo_field_info_sw_action_template_per_fem_create_cb)(
    int unit, uint32 action_template_per_fem_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_action_template_per_fem_allocate_single
 */
typedef int (*algo_field_info_sw_action_template_per_fem_allocate_single_cb)(
    int unit, uint32 action_template_per_fem_idx_0, uint32 flags, dnx_field_fem_action_entry_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_field_info_sw_action_template_per_fem_free_single
 */
typedef int (*algo_field_info_sw_action_template_per_fem_free_single_cb)(
    int unit, uint32 action_template_per_fem_idx_0, int profile, uint8 *last_reference);

/**
 * implemented by: algo_field_info_sw_link_profiles_set
 */
typedef int (*algo_field_info_sw_link_profiles_set_cb)(
    int unit, dnx_algo_res_t link_profiles);

/**
 * implemented by: algo_field_info_sw_link_profiles_get
 */
typedef int (*algo_field_info_sw_link_profiles_get_cb)(
    int unit, dnx_algo_res_t *link_profiles);

/**
 * implemented by: algo_field_info_sw_link_profiles_create
 */
typedef int (*algo_field_info_sw_link_profiles_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_link_profiles_allocate_single
 */
typedef int (*algo_field_info_sw_link_profiles_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_link_profiles_free_single
 */
typedef int (*algo_field_info_sw_link_profiles_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_link_profiles_is_allocated
 */
typedef int (*algo_field_info_sw_link_profiles_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_kbp_opcode_cs_profile_id_set
 */
typedef int (*algo_field_info_sw_kbp_opcode_cs_profile_id_set_cb)(
    int unit, dnx_algo_res_t kbp_opcode_cs_profile_id);

/**
 * implemented by: algo_field_info_sw_kbp_opcode_cs_profile_id_get
 */
typedef int (*algo_field_info_sw_kbp_opcode_cs_profile_id_get_cb)(
    int unit, dnx_algo_res_t *kbp_opcode_cs_profile_id);

/**
 * implemented by: algo_field_info_sw_kbp_opcode_cs_profile_id_create
 */
typedef int (*algo_field_info_sw_kbp_opcode_cs_profile_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_kbp_opcode_cs_profile_id_allocate_single
 */
typedef int (*algo_field_info_sw_kbp_opcode_cs_profile_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_kbp_opcode_cs_profile_id_free_single
 */
typedef int (*algo_field_info_sw_kbp_opcode_cs_profile_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_kbp_opcode_cs_profile_id_is_allocated
 */
typedef int (*algo_field_info_sw_kbp_opcode_cs_profile_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_ipmf1_contexts_link_alloc
 */
typedef int (*algo_field_info_sw_ipmf1_contexts_link_alloc_cb)(
    int unit);

/**
 * implemented by: algo_field_info_sw_ipmf1_contexts_link_profile_num_set
 */
typedef int (*algo_field_info_sw_ipmf1_contexts_link_profile_num_set_cb)(
    int unit, uint32 ipmf1_contexts_link_idx_0, int profile_num);

/**
 * implemented by: algo_field_info_sw_ipmf1_contexts_link_profile_num_get
 */
typedef int (*algo_field_info_sw_ipmf1_contexts_link_profile_num_get_cb)(
    int unit, uint32 ipmf1_contexts_link_idx_0, int *profile_num);

/**
 * implemented by: algo_field_info_sw_ipmf1_contexts_link_nof_linked_set
 */
typedef int (*algo_field_info_sw_ipmf1_contexts_link_nof_linked_set_cb)(
    int unit, uint32 ipmf1_contexts_link_idx_0, int nof_linked);

/**
 * implemented by: algo_field_info_sw_ipmf1_contexts_link_nof_linked_get
 */
typedef int (*algo_field_info_sw_ipmf1_contexts_link_nof_linked_get_cb)(
    int unit, uint32 ipmf1_contexts_link_idx_0, int *nof_linked);

/**
 * implemented by: algo_field_info_sw_user_apptype_id_set
 */
typedef int (*algo_field_info_sw_user_apptype_id_set_cb)(
    int unit, dnx_algo_res_t user_apptype_id);

/**
 * implemented by: algo_field_info_sw_user_apptype_id_get
 */
typedef int (*algo_field_info_sw_user_apptype_id_get_cb)(
    int unit, dnx_algo_res_t *user_apptype_id);

/**
 * implemented by: algo_field_info_sw_user_apptype_id_create
 */
typedef int (*algo_field_info_sw_user_apptype_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_user_apptype_id_allocate_single
 */
typedef int (*algo_field_info_sw_user_apptype_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_user_apptype_id_free_single
 */
typedef int (*algo_field_info_sw_user_apptype_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_user_apptype_id_is_allocated
 */
typedef int (*algo_field_info_sw_user_apptype_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_field_info_sw_flush_profile_id_set
 */
typedef int (*algo_field_info_sw_flush_profile_id_set_cb)(
    int unit, dnx_algo_res_t flush_profile_id);

/**
 * implemented by: algo_field_info_sw_flush_profile_id_get
 */
typedef int (*algo_field_info_sw_flush_profile_id_get_cb)(
    int unit, dnx_algo_res_t *flush_profile_id);

/**
 * implemented by: algo_field_info_sw_flush_profile_id_create
 */
typedef int (*algo_field_info_sw_flush_profile_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_field_info_sw_flush_profile_id_allocate_single
 */
typedef int (*algo_field_info_sw_flush_profile_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_field_info_sw_flush_profile_id_free_single
 */
typedef int (*algo_field_info_sw_flush_profile_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_field_info_sw_flush_profile_id_is_allocated
 */
typedef int (*algo_field_info_sw_flush_profile_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable dummy
 */
typedef struct {
    algo_field_info_sw_key_algo_dummy_set_cb set;
    algo_field_info_sw_key_algo_dummy_get_cb get;
} algo_field_info_sw_key_algo_dummy_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_field_key_t
 */
typedef struct {
    /**
     * Access struct for dummy
     */
    algo_field_info_sw_key_algo_dummy_cbs dummy;
} algo_field_info_sw_key_algo_cbs;

/**
 * This structure holds the access functions for the variable ipmf_1_ffc
 */
typedef struct {
    algo_field_info_sw_ipmf_1_ffc_set_cb set;
    algo_field_info_sw_ipmf_1_ffc_get_cb get;
    algo_field_info_sw_ipmf_1_ffc_alloc_cb alloc;
    algo_field_info_sw_ipmf_1_ffc_create_cb create;
    algo_field_info_sw_ipmf_1_ffc_allocate_single_cb allocate_single;
    algo_field_info_sw_ipmf_1_ffc_free_single_cb free_single;
} algo_field_info_sw_ipmf_1_ffc_cbs;

/**
 * This structure holds the access functions for the variable ipmf_2_ffc
 */
typedef struct {
    algo_field_info_sw_ipmf_2_ffc_set_cb set;
    algo_field_info_sw_ipmf_2_ffc_get_cb get;
    algo_field_info_sw_ipmf_2_ffc_alloc_cb alloc;
    algo_field_info_sw_ipmf_2_ffc_create_cb create;
    algo_field_info_sw_ipmf_2_ffc_allocate_single_cb allocate_single;
    algo_field_info_sw_ipmf_2_ffc_free_single_cb free_single;
} algo_field_info_sw_ipmf_2_ffc_cbs;

/**
 * This structure holds the access functions for the variable ipmf_3_ffc
 */
typedef struct {
    algo_field_info_sw_ipmf_3_ffc_set_cb set;
    algo_field_info_sw_ipmf_3_ffc_get_cb get;
    algo_field_info_sw_ipmf_3_ffc_alloc_cb alloc;
    algo_field_info_sw_ipmf_3_ffc_create_cb create;
    algo_field_info_sw_ipmf_3_ffc_allocate_single_cb allocate_single;
    algo_field_info_sw_ipmf_3_ffc_free_single_cb free_single;
} algo_field_info_sw_ipmf_3_ffc_cbs;

/**
 * This structure holds the access functions for the variable epmf_ffc
 */
typedef struct {
    algo_field_info_sw_epmf_ffc_set_cb set;
    algo_field_info_sw_epmf_ffc_get_cb get;
    algo_field_info_sw_epmf_ffc_alloc_cb alloc;
    algo_field_info_sw_epmf_ffc_create_cb create;
    algo_field_info_sw_epmf_ffc_allocate_single_cb allocate_single;
    algo_field_info_sw_epmf_ffc_free_single_cb free_single;
} algo_field_info_sw_epmf_ffc_cbs;

/**
 * This structure holds the access functions for the variable ifwd2_ffc
 */
typedef struct {
    algo_field_info_sw_ifwd2_ffc_set_cb set;
    algo_field_info_sw_ifwd2_ffc_get_cb get;
    algo_field_info_sw_ifwd2_ffc_alloc_cb alloc;
    algo_field_info_sw_ifwd2_ffc_create_cb create;
    algo_field_info_sw_ifwd2_ffc_allocate_single_cb allocate_single;
    algo_field_info_sw_ifwd2_ffc_free_single_cb free_single;
    algo_field_info_sw_ifwd2_ffc_is_allocated_cb is_allocated;
    algo_field_info_sw_ifwd2_ffc_nof_free_elements_get_cb nof_free_elements_get;
} algo_field_info_sw_ifwd2_ffc_cbs;

/**
 * This structure holds the access functions for the variable ipmf1_initial_key_occ_bmp
 */
typedef struct {
    algo_field_info_sw_ipmf1_initial_key_occ_bmp_set_cb set;
    algo_field_info_sw_ipmf1_initial_key_occ_bmp_get_cb get;
    algo_field_info_sw_ipmf1_initial_key_occ_bmp_alloc_cb alloc;
    algo_field_info_sw_ipmf1_initial_key_occ_bmp_create_cb create;
    algo_field_info_sw_ipmf1_initial_key_occ_bmp_allocate_several_cb allocate_several;
    algo_field_info_sw_ipmf1_initial_key_occ_bmp_free_several_cb free_several;
} algo_field_info_sw_ipmf1_initial_key_occ_bmp_cbs;

/**
 * This structure holds the access functions for the variable ipmf_a_fes_id
 */
typedef struct {
    algo_field_info_sw_ipmf_a_fes_id_set_cb set;
    algo_field_info_sw_ipmf_a_fes_id_get_cb get;
    algo_field_info_sw_ipmf_a_fes_id_create_cb create;
    algo_field_info_sw_ipmf_a_fes_id_allocate_single_cb allocate_single;
    algo_field_info_sw_ipmf_a_fes_id_free_single_cb free_single;
} algo_field_info_sw_ipmf_a_fes_id_cbs;

/**
 * This structure holds the access functions for the variable ipmf_b_fes_id
 */
typedef struct {
    algo_field_info_sw_ipmf_b_fes_id_set_cb set;
    algo_field_info_sw_ipmf_b_fes_id_get_cb get;
    algo_field_info_sw_ipmf_b_fes_id_create_cb create;
    algo_field_info_sw_ipmf_b_fes_id_allocate_single_cb allocate_single;
    algo_field_info_sw_ipmf_b_fes_id_free_single_cb free_single;
    algo_field_info_sw_ipmf_b_fes_id_is_allocated_cb is_allocated;
} algo_field_info_sw_ipmf_b_fes_id_cbs;

/**
 * This structure holds the access functions for the variable epmf_fes_id
 */
typedef struct {
    algo_field_info_sw_epmf_fes_id_set_cb set;
    algo_field_info_sw_epmf_fes_id_get_cb get;
    algo_field_info_sw_epmf_fes_id_create_cb create;
    algo_field_info_sw_epmf_fes_id_allocate_single_cb allocate_single;
    algo_field_info_sw_epmf_fes_id_free_single_cb free_single;
    algo_field_info_sw_epmf_fes_id_is_allocated_cb is_allocated;
} algo_field_info_sw_epmf_fes_id_cbs;

/**
 * This structure holds the access functions for the variable ipmf_a_fem_pgm_id
 */
typedef struct {
    algo_field_info_sw_ipmf_a_fem_pgm_id_set_cb set;
    algo_field_info_sw_ipmf_a_fem_pgm_id_get_cb get;
    algo_field_info_sw_ipmf_a_fem_pgm_id_alloc_cb alloc;
    algo_field_info_sw_ipmf_a_fem_pgm_id_create_cb create;
    algo_field_info_sw_ipmf_a_fem_pgm_id_allocate_single_cb allocate_single;
    algo_field_info_sw_ipmf_a_fem_pgm_id_free_single_cb free_single;
    algo_field_info_sw_ipmf_a_fem_pgm_id_is_allocated_cb is_allocated;
} algo_field_info_sw_ipmf_a_fem_pgm_id_cbs;

/**
 * This structure holds the access functions for the variable ipmf1_context_id
 */
typedef struct {
    algo_field_info_sw_ipmf1_context_id_set_cb set;
    algo_field_info_sw_ipmf1_context_id_get_cb get;
    algo_field_info_sw_ipmf1_context_id_create_cb create;
    algo_field_info_sw_ipmf1_context_id_allocate_single_cb allocate_single;
    algo_field_info_sw_ipmf1_context_id_free_single_cb free_single;
    algo_field_info_sw_ipmf1_context_id_is_allocated_cb is_allocated;
} algo_field_info_sw_ipmf1_context_id_cbs;

/**
 * This structure holds the access functions for the variable ipmf2_context_id
 */
typedef struct {
    algo_field_info_sw_ipmf2_context_id_set_cb set;
    algo_field_info_sw_ipmf2_context_id_get_cb get;
    algo_field_info_sw_ipmf2_context_id_create_cb create;
    algo_field_info_sw_ipmf2_context_id_allocate_single_cb allocate_single;
    algo_field_info_sw_ipmf2_context_id_free_single_cb free_single;
    algo_field_info_sw_ipmf2_context_id_is_allocated_cb is_allocated;
} algo_field_info_sw_ipmf2_context_id_cbs;

/**
 * This structure holds the access functions for the variable ipmf3_context_id
 */
typedef struct {
    algo_field_info_sw_ipmf3_context_id_set_cb set;
    algo_field_info_sw_ipmf3_context_id_get_cb get;
    algo_field_info_sw_ipmf3_context_id_create_cb create;
    algo_field_info_sw_ipmf3_context_id_allocate_single_cb allocate_single;
    algo_field_info_sw_ipmf3_context_id_free_single_cb free_single;
    algo_field_info_sw_ipmf3_context_id_is_allocated_cb is_allocated;
} algo_field_info_sw_ipmf3_context_id_cbs;

/**
 * This structure holds the access functions for the variable epmf_context_id
 */
typedef struct {
    algo_field_info_sw_epmf_context_id_set_cb set;
    algo_field_info_sw_epmf_context_id_get_cb get;
    algo_field_info_sw_epmf_context_id_create_cb create;
    algo_field_info_sw_epmf_context_id_allocate_single_cb allocate_single;
    algo_field_info_sw_epmf_context_id_free_single_cb free_single;
    algo_field_info_sw_epmf_context_id_is_allocated_cb is_allocated;
} algo_field_info_sw_epmf_context_id_cbs;

/**
 * This structure holds the access functions for the variable user_qual_id
 */
typedef struct {
    algo_field_info_sw_user_qual_id_set_cb set;
    algo_field_info_sw_user_qual_id_get_cb get;
    algo_field_info_sw_user_qual_id_create_cb create;
    algo_field_info_sw_user_qual_id_allocate_single_cb allocate_single;
    algo_field_info_sw_user_qual_id_free_single_cb free_single;
    algo_field_info_sw_user_qual_id_is_allocated_cb is_allocated;
} algo_field_info_sw_user_qual_id_cbs;

/**
 * This structure holds the access functions for the variable user_action_id
 */
typedef struct {
    algo_field_info_sw_user_action_id_set_cb set;
    algo_field_info_sw_user_action_id_get_cb get;
    algo_field_info_sw_user_action_id_create_cb create;
    algo_field_info_sw_user_action_id_allocate_single_cb allocate_single;
    algo_field_info_sw_user_action_id_free_single_cb free_single;
    algo_field_info_sw_user_action_id_is_allocated_cb is_allocated;
} algo_field_info_sw_user_action_id_cbs;

/**
 * This structure holds the access functions for the variable field_group_id
 */
typedef struct {
    algo_field_info_sw_field_group_id_set_cb set;
    algo_field_info_sw_field_group_id_get_cb get;
    algo_field_info_sw_field_group_id_create_cb create;
    algo_field_info_sw_field_group_id_allocate_single_cb allocate_single;
    algo_field_info_sw_field_group_id_free_single_cb free_single;
    algo_field_info_sw_field_group_id_is_allocated_cb is_allocated;
} algo_field_info_sw_field_group_id_cbs;

/**
 * This structure holds the access functions for the variable sexem_app_db_id
 */
typedef struct {
    algo_field_info_sw_sexem_app_db_id_set_cb set;
    algo_field_info_sw_sexem_app_db_id_get_cb get;
    algo_field_info_sw_sexem_app_db_id_create_cb create;
    algo_field_info_sw_sexem_app_db_id_allocate_single_cb allocate_single;
    algo_field_info_sw_sexem_app_db_id_free_single_cb free_single;
    algo_field_info_sw_sexem_app_db_id_is_allocated_cb is_allocated;
} algo_field_info_sw_sexem_app_db_id_cbs;

/**
 * This structure holds the access functions for the variable lexem_app_db_id
 */
typedef struct {
    algo_field_info_sw_lexem_app_db_id_set_cb set;
    algo_field_info_sw_lexem_app_db_id_get_cb get;
    algo_field_info_sw_lexem_app_db_id_create_cb create;
    algo_field_info_sw_lexem_app_db_id_allocate_single_cb allocate_single;
    algo_field_info_sw_lexem_app_db_id_free_single_cb free_single;
    algo_field_info_sw_lexem_app_db_id_is_allocated_cb is_allocated;
} algo_field_info_sw_lexem_app_db_id_cbs;

/**
 * This structure holds the access functions for the variable ace_id
 */
typedef struct {
    algo_field_info_sw_ace_id_set_cb set;
    algo_field_info_sw_ace_id_get_cb get;
    algo_field_info_sw_ace_id_create_cb create;
    algo_field_info_sw_ace_id_allocate_single_cb allocate_single;
    algo_field_info_sw_ace_id_free_single_cb free_single;
    algo_field_info_sw_ace_id_is_allocated_cb is_allocated;
} algo_field_info_sw_ace_id_cbs;

/**
 * This structure holds the access functions for the variable ace_key
 */
typedef struct {
    algo_field_info_sw_ace_key_set_cb set;
    algo_field_info_sw_ace_key_get_cb get;
    algo_field_info_sw_ace_key_create_cb create;
    algo_field_info_sw_ace_key_allocate_single_cb allocate_single;
    algo_field_info_sw_ace_key_free_single_cb free_single;
    algo_field_info_sw_ace_key_is_allocated_cb is_allocated;
} algo_field_info_sw_ace_key_cbs;

/**
 * This structure holds the access functions for the variable entry_tcam_access_id
 */
typedef struct {
    algo_field_info_sw_entry_tcam_access_id_set_cb set;
    algo_field_info_sw_entry_tcam_access_id_get_cb get;
    algo_field_info_sw_entry_tcam_access_id_create_cb create;
    algo_field_info_sw_entry_tcam_access_id_allocate_single_cb allocate_single;
    algo_field_info_sw_entry_tcam_access_id_free_single_cb free_single;
    algo_field_info_sw_entry_tcam_access_id_is_allocated_cb is_allocated;
} algo_field_info_sw_entry_tcam_access_id_cbs;

/**
 * This structure holds the access functions for the variable action_template_per_fem
 */
typedef struct {
    algo_field_info_sw_action_template_per_fem_set_cb set;
    algo_field_info_sw_action_template_per_fem_get_cb get;
    algo_field_info_sw_action_template_per_fem_alloc_cb alloc;
    algo_field_info_sw_action_template_per_fem_create_cb create;
    algo_field_info_sw_action_template_per_fem_allocate_single_cb allocate_single;
    algo_field_info_sw_action_template_per_fem_free_single_cb free_single;
} algo_field_info_sw_action_template_per_fem_cbs;

/**
 * This structure holds the access functions for the variable link_profiles
 */
typedef struct {
    algo_field_info_sw_link_profiles_set_cb set;
    algo_field_info_sw_link_profiles_get_cb get;
    algo_field_info_sw_link_profiles_create_cb create;
    algo_field_info_sw_link_profiles_allocate_single_cb allocate_single;
    algo_field_info_sw_link_profiles_free_single_cb free_single;
    algo_field_info_sw_link_profiles_is_allocated_cb is_allocated;
} algo_field_info_sw_link_profiles_cbs;

/**
 * This structure holds the access functions for the variable kbp_opcode_cs_profile_id
 */
typedef struct {
    algo_field_info_sw_kbp_opcode_cs_profile_id_set_cb set;
    algo_field_info_sw_kbp_opcode_cs_profile_id_get_cb get;
    algo_field_info_sw_kbp_opcode_cs_profile_id_create_cb create;
    algo_field_info_sw_kbp_opcode_cs_profile_id_allocate_single_cb allocate_single;
    algo_field_info_sw_kbp_opcode_cs_profile_id_free_single_cb free_single;
    algo_field_info_sw_kbp_opcode_cs_profile_id_is_allocated_cb is_allocated;
} algo_field_info_sw_kbp_opcode_cs_profile_id_cbs;

/**
 * This structure holds the access functions for the variable profile_num
 */
typedef struct {
    algo_field_info_sw_ipmf1_contexts_link_profile_num_set_cb set;
    algo_field_info_sw_ipmf1_contexts_link_profile_num_get_cb get;
} algo_field_info_sw_ipmf1_contexts_link_profile_num_cbs;

/**
 * This structure holds the access functions for the variable nof_linked
 */
typedef struct {
    algo_field_info_sw_ipmf1_contexts_link_nof_linked_set_cb set;
    algo_field_info_sw_ipmf1_contexts_link_nof_linked_get_cb get;
} algo_field_info_sw_ipmf1_contexts_link_nof_linked_cbs;

/**
 * This structure holds the access functions for the variable algo_field_context_link_t
 */
typedef struct {
    algo_field_info_sw_ipmf1_contexts_link_alloc_cb alloc;
    /**
     * Access struct for profile_num
     */
    algo_field_info_sw_ipmf1_contexts_link_profile_num_cbs profile_num;
    /**
     * Access struct for nof_linked
     */
    algo_field_info_sw_ipmf1_contexts_link_nof_linked_cbs nof_linked;
} algo_field_info_sw_ipmf1_contexts_link_cbs;

/**
 * This structure holds the access functions for the variable user_apptype_id
 */
typedef struct {
    algo_field_info_sw_user_apptype_id_set_cb set;
    algo_field_info_sw_user_apptype_id_get_cb get;
    algo_field_info_sw_user_apptype_id_create_cb create;
    algo_field_info_sw_user_apptype_id_allocate_single_cb allocate_single;
    algo_field_info_sw_user_apptype_id_free_single_cb free_single;
    algo_field_info_sw_user_apptype_id_is_allocated_cb is_allocated;
} algo_field_info_sw_user_apptype_id_cbs;

/**
 * This structure holds the access functions for the variable flush_profile_id
 */
typedef struct {
    algo_field_info_sw_flush_profile_id_set_cb set;
    algo_field_info_sw_flush_profile_id_get_cb get;
    algo_field_info_sw_flush_profile_id_create_cb create;
    algo_field_info_sw_flush_profile_id_allocate_single_cb allocate_single;
    algo_field_info_sw_flush_profile_id_free_single_cb free_single;
    algo_field_info_sw_flush_profile_id_is_allocated_cb is_allocated;
} algo_field_info_sw_flush_profile_id_cbs;

/**
 * This structure holds the access functions for the variable algo_field_info_t
 */
typedef struct {
    algo_field_info_sw_is_init_cb is_init;
    algo_field_info_sw_init_cb init;
    /**
     * Access struct for key_algo
     */
    algo_field_info_sw_key_algo_cbs key_algo;
    /**
     * Access struct for ipmf_1_ffc
     */
    algo_field_info_sw_ipmf_1_ffc_cbs ipmf_1_ffc;
    /**
     * Access struct for ipmf_2_ffc
     */
    algo_field_info_sw_ipmf_2_ffc_cbs ipmf_2_ffc;
    /**
     * Access struct for ipmf_3_ffc
     */
    algo_field_info_sw_ipmf_3_ffc_cbs ipmf_3_ffc;
    /**
     * Access struct for epmf_ffc
     */
    algo_field_info_sw_epmf_ffc_cbs epmf_ffc;
    /**
     * Access struct for ifwd2_ffc
     */
    algo_field_info_sw_ifwd2_ffc_cbs ifwd2_ffc;
    /**
     * Access struct for ipmf1_initial_key_occ_bmp
     */
    algo_field_info_sw_ipmf1_initial_key_occ_bmp_cbs ipmf1_initial_key_occ_bmp;
    /**
     * Access struct for ipmf_a_fes_id
     */
    algo_field_info_sw_ipmf_a_fes_id_cbs ipmf_a_fes_id;
    /**
     * Access struct for ipmf_b_fes_id
     */
    algo_field_info_sw_ipmf_b_fes_id_cbs ipmf_b_fes_id;
    /**
     * Access struct for epmf_fes_id
     */
    algo_field_info_sw_epmf_fes_id_cbs epmf_fes_id;
    /**
     * Access struct for ipmf_a_fem_pgm_id
     */
    algo_field_info_sw_ipmf_a_fem_pgm_id_cbs ipmf_a_fem_pgm_id;
    /**
     * Access struct for ipmf1_context_id
     */
    algo_field_info_sw_ipmf1_context_id_cbs ipmf1_context_id;
    /**
     * Access struct for ipmf2_context_id
     */
    algo_field_info_sw_ipmf2_context_id_cbs ipmf2_context_id;
    /**
     * Access struct for ipmf3_context_id
     */
    algo_field_info_sw_ipmf3_context_id_cbs ipmf3_context_id;
    /**
     * Access struct for epmf_context_id
     */
    algo_field_info_sw_epmf_context_id_cbs epmf_context_id;
    /**
     * Access struct for user_qual_id
     */
    algo_field_info_sw_user_qual_id_cbs user_qual_id;
    /**
     * Access struct for user_action_id
     */
    algo_field_info_sw_user_action_id_cbs user_action_id;
    /**
     * Access struct for field_group_id
     */
    algo_field_info_sw_field_group_id_cbs field_group_id;
    /**
     * Access struct for sexem_app_db_id
     */
    algo_field_info_sw_sexem_app_db_id_cbs sexem_app_db_id;
    /**
     * Access struct for lexem_app_db_id
     */
    algo_field_info_sw_lexem_app_db_id_cbs lexem_app_db_id;
    /**
     * Access struct for ace_id
     */
    algo_field_info_sw_ace_id_cbs ace_id;
    /**
     * Access struct for ace_key
     */
    algo_field_info_sw_ace_key_cbs ace_key;
    /**
     * Access struct for entry_tcam_access_id
     */
    algo_field_info_sw_entry_tcam_access_id_cbs entry_tcam_access_id;
    /**
     * Access struct for action_template_per_fem
     */
    algo_field_info_sw_action_template_per_fem_cbs action_template_per_fem;
    /**
     * Access struct for link_profiles
     */
    algo_field_info_sw_link_profiles_cbs link_profiles;
    /**
     * Access struct for kbp_opcode_cs_profile_id
     */
    algo_field_info_sw_kbp_opcode_cs_profile_id_cbs kbp_opcode_cs_profile_id;
    /**
     * Access struct for ipmf1_contexts_link
     */
    algo_field_info_sw_ipmf1_contexts_link_cbs ipmf1_contexts_link;
    /**
     * Access struct for user_apptype_id
     */
    algo_field_info_sw_user_apptype_id_cbs user_apptype_id;
    /**
     * Access struct for flush_profile_id
     */
    algo_field_info_sw_flush_profile_id_cbs flush_profile_id;
} algo_field_info_sw_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern algo_field_info_sw_cbs algo_field_info_sw;

#endif /* __DNX_ALGO_FIELD_ACCESS_H__ */
