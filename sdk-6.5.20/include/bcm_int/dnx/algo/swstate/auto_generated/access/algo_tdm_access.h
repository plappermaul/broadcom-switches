/** \file algo/swstate/auto_generated/access/algo_tdm_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __ALGO_TDM_ACCESS_H__
#define __ALGO_TDM_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/algo_tdm_types.h>
#include <bcm_int/dnx/algo/algo_tdm.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: algo_tdm_db_is_init
 */
typedef int (*algo_tdm_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: algo_tdm_db_init
 */
typedef int (*algo_tdm_db_init_cb)(
    int unit);

/**
 * implemented by: algo_tdm_db_ingress_context_set
 */
typedef int (*algo_tdm_db_ingress_context_set_cb)(
    int unit, dnx_algo_res_t ingress_context);

/**
 * implemented by: algo_tdm_db_ingress_context_get
 */
typedef int (*algo_tdm_db_ingress_context_get_cb)(
    int unit, dnx_algo_res_t *ingress_context);

/**
 * implemented by: algo_tdm_db_ingress_context_create
 */
typedef int (*algo_tdm_db_ingress_context_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_tdm_db_ingress_context_allocate_single
 */
typedef int (*algo_tdm_db_ingress_context_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_tdm_db_ingress_context_free_single
 */
typedef int (*algo_tdm_db_ingress_context_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_tdm_db_ingress_context_is_allocated
 */
typedef int (*algo_tdm_db_ingress_context_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_tdm_db_ingress_context_nof_free_elements_get
 */
typedef int (*algo_tdm_db_ingress_context_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

/**
 * implemented by: algo_tdm_db_ingress_context_get_next
 */
typedef int (*algo_tdm_db_ingress_context_get_next_cb)(
    int unit, int *element);

/**
 * implemented by: algo_tdm_db_link_mask_set
 */
typedef int (*algo_tdm_db_link_mask_set_cb)(
    int unit, dnx_algo_template_t link_mask);

/**
 * implemented by: algo_tdm_db_link_mask_get
 */
typedef int (*algo_tdm_db_link_mask_get_cb)(
    int unit, dnx_algo_template_t *link_mask);

/**
 * implemented by: algo_tdm_db_link_mask_create
 */
typedef int (*algo_tdm_db_link_mask_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_tdm_db_link_mask_allocate_single
 */
typedef int (*algo_tdm_db_link_mask_allocate_single_cb)(
    int unit, uint32 flags, dnx_tdm_link_mask_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_tdm_db_link_mask_free_single
 */
typedef int (*algo_tdm_db_link_mask_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

/**
 * implemented by: algo_tdm_db_link_mask_exchange
 */
typedef int (*algo_tdm_db_link_mask_exchange_cb)(
    int unit, uint32 flags, const dnx_tdm_link_mask_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

/**
 * implemented by: algo_tdm_db_link_mask_replace_data
 */
typedef int (*algo_tdm_db_link_mask_replace_data_cb)(
    int unit, int profile,  const dnx_tdm_link_mask_t *new_profile_data);

/**
 * implemented by: algo_tdm_db_link_mask_profile_data_get
 */
typedef int (*algo_tdm_db_link_mask_profile_data_get_cb)(
    int unit, int profile, int *ref_count, dnx_tdm_link_mask_t *profile_data);

/**
 * implemented by: algo_tdm_db_link_mask_clear
 */
typedef int (*algo_tdm_db_link_mask_clear_cb)(
    int unit);

/**
 * implemented by: algo_tdm_db_link_mask_get_next
 */
typedef int (*algo_tdm_db_link_mask_get_next_cb)(
    int unit, int *current_profile);

/**
 * implemented by: algo_tdm_db_link_mask_advanced_algorithm_info_get
 */
typedef int (*algo_tdm_db_link_mask_advanced_algorithm_info_get_cb)(
    int unit, void *algorithm_info);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable ingress_context
 */
typedef struct {
    algo_tdm_db_ingress_context_set_cb set;
    algo_tdm_db_ingress_context_get_cb get;
    algo_tdm_db_ingress_context_create_cb create;
    algo_tdm_db_ingress_context_allocate_single_cb allocate_single;
    algo_tdm_db_ingress_context_free_single_cb free_single;
    algo_tdm_db_ingress_context_is_allocated_cb is_allocated;
    algo_tdm_db_ingress_context_nof_free_elements_get_cb nof_free_elements_get;
    algo_tdm_db_ingress_context_get_next_cb get_next;
} algo_tdm_db_ingress_context_cbs;

/**
 * This structure holds the access functions for the variable link_mask
 */
typedef struct {
    algo_tdm_db_link_mask_set_cb set;
    algo_tdm_db_link_mask_get_cb get;
    algo_tdm_db_link_mask_create_cb create;
    algo_tdm_db_link_mask_allocate_single_cb allocate_single;
    algo_tdm_db_link_mask_free_single_cb free_single;
    algo_tdm_db_link_mask_exchange_cb exchange;
    algo_tdm_db_link_mask_replace_data_cb replace_data;
    algo_tdm_db_link_mask_profile_data_get_cb profile_data_get;
    algo_tdm_db_link_mask_clear_cb clear;
    algo_tdm_db_link_mask_get_next_cb get_next;
    algo_tdm_db_link_mask_advanced_algorithm_info_get_cb advanced_algorithm_info_get;
} algo_tdm_db_link_mask_cbs;

/**
 * This structure holds the access functions for the variable algo_tdm_sw_state_t
 */
typedef struct {
    algo_tdm_db_is_init_cb is_init;
    algo_tdm_db_init_cb init;
    /**
     * Access struct for ingress_context
     */
    algo_tdm_db_ingress_context_cbs ingress_context;
    /**
     * Access struct for link_mask
     */
    algo_tdm_db_link_mask_cbs link_mask;
} algo_tdm_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern algo_tdm_db_cbs algo_tdm_db;

#endif /* __ALGO_TDM_ACCESS_H__ */
