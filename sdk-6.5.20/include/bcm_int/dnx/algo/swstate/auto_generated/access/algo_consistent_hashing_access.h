/** \file algo/swstate/auto_generated/access/algo_consistent_hashing_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __ALGO_CONSISTENT_HASHING_ACCESS_H__
#define __ALGO_CONSISTENT_HASHING_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/algo_consistent_hashing_types.h>
#include <bcm_int/dnx/algo/consistent_hashing/consistent_hashing_manager.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#include <soc/dnxc/swstate/types/sw_state_defragmented_chunk.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: consistent_hashing_manager_is_init
 */
typedef int (*consistent_hashing_manager_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: consistent_hashing_manager_init
 */
typedef int (*consistent_hashing_manager_init_cb)(
    int unit);

/**
 * implemented by: consistent_hashing_manager_occupied_bmp_bit_set
 */
typedef int (*consistent_hashing_manager_occupied_bmp_bit_set_cb)(
    int unit, uint32 _bit_num);

/**
 * implemented by: consistent_hashing_manager_occupied_bmp_bit_clear
 */
typedef int (*consistent_hashing_manager_occupied_bmp_bit_clear_cb)(
    int unit, uint32 _bit_num);

/**
 * implemented by: consistent_hashing_manager_occupied_bmp_bit_get
 */
typedef int (*consistent_hashing_manager_occupied_bmp_bit_get_cb)(
    int unit, uint32 _bit_num, uint8* result);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_template_mngr_handle_set
 */
typedef int (*consistent_hashing_manager_ch_instance_array_template_mngr_handle_set_cb)(
    int unit, uint32 ch_instance_array_idx_0, CONST template_mngr_handle_t *template_mngr_handle);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_template_mngr_handle_get
 */
typedef int (*consistent_hashing_manager_ch_instance_array_template_mngr_handle_get_cb)(
    int unit, uint32 ch_instance_array_idx_0, template_mngr_handle_t *template_mngr_handle);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_def_chunk_create
 */
typedef int (*consistent_hashing_manager_ch_instance_array_def_chunk_create_cb)(
    int unit, uint32 ch_instance_array_idx_0, sw_state_defragmented_chunk_init_info_t * init_info);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_def_chunk_piece_alloc
 */
typedef int (*consistent_hashing_manager_ch_instance_array_def_chunk_piece_alloc_cb)(
    int unit, uint32 ch_instance_array_idx_0, uint32 slots_in_piece, void *move_cb_additional_info, uint32 *piece_offset);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_def_chunk_piece_free
 */
typedef int (*consistent_hashing_manager_ch_instance_array_def_chunk_piece_free_cb)(
    int unit, uint32 ch_instance_array_idx_0, uint32 piece_offset);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_def_chunk_print
 */
typedef int (*consistent_hashing_manager_ch_instance_array_def_chunk_print_cb)(
    int unit, uint32 ch_instance_array_idx_0);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_cbs_set
 */
typedef int (*consistent_hashing_manager_ch_instance_array_cbs_set_cb)(
    int unit, uint32 ch_instance_array_idx_0, CONST consistent_hashing_cbs_t *cbs);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_cbs_get
 */
typedef int (*consistent_hashing_manager_ch_instance_array_cbs_get_cb)(
    int unit, uint32 ch_instance_array_idx_0, CONST consistent_hashing_cbs_t **cbs);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_offset_to_profile_map_set
 */
typedef int (*consistent_hashing_manager_ch_instance_array_offset_to_profile_map_set_cb)(
    int unit, uint32 ch_instance_array_idx_0, uint32 offset_to_profile_map_idx_0, int offset_to_profile_map);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_offset_to_profile_map_get
 */
typedef int (*consistent_hashing_manager_ch_instance_array_offset_to_profile_map_get_cb)(
    int unit, uint32 ch_instance_array_idx_0, uint32 offset_to_profile_map_idx_0, int *offset_to_profile_map);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_offset_to_profile_map_alloc
 */
typedef int (*consistent_hashing_manager_ch_instance_array_offset_to_profile_map_alloc_cb)(
    int unit, uint32 ch_instance_array_idx_0, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_profile_to_offset_map_set
 */
typedef int (*consistent_hashing_manager_ch_instance_array_profile_to_offset_map_set_cb)(
    int unit, uint32 ch_instance_array_idx_0, uint32 profile_to_offset_map_idx_0, uint32 profile_to_offset_map);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_profile_to_offset_map_get
 */
typedef int (*consistent_hashing_manager_ch_instance_array_profile_to_offset_map_get_cb)(
    int unit, uint32 ch_instance_array_idx_0, uint32 profile_to_offset_map_idx_0, uint32 *profile_to_offset_map);

/**
 * implemented by: consistent_hashing_manager_ch_instance_array_profile_to_offset_map_alloc
 */
typedef int (*consistent_hashing_manager_ch_instance_array_profile_to_offset_map_alloc_cb)(
    int unit, uint32 ch_instance_array_idx_0, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: consistent_hashing_manager_chm_templates_set
 */
typedef int (*consistent_hashing_manager_chm_templates_set_cb)(
    int unit, uint32 chm_templates_idx_0, dnx_algo_template_t chm_templates);

/**
 * implemented by: consistent_hashing_manager_chm_templates_get
 */
typedef int (*consistent_hashing_manager_chm_templates_get_cb)(
    int unit, uint32 chm_templates_idx_0, dnx_algo_template_t *chm_templates);

/**
 * implemented by: consistent_hashing_manager_chm_templates_create
 */
typedef int (*consistent_hashing_manager_chm_templates_create_cb)(
    int unit, uint32 chm_templates_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: consistent_hashing_manager_chm_templates_allocate_single
 */
typedef int (*consistent_hashing_manager_chm_templates_allocate_single_cb)(
    int unit, uint32 chm_templates_idx_0, uint32 flags, dnx_algo_consistent_hashing_manager_template_manager_key_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: consistent_hashing_manager_chm_templates_free_single
 */
typedef int (*consistent_hashing_manager_chm_templates_free_single_cb)(
    int unit, uint32 chm_templates_idx_0, int profile, uint8 *last_reference);

/**
 * implemented by: consistent_hashing_manager_chm_templates_profile_data_get
 */
typedef int (*consistent_hashing_manager_chm_templates_profile_data_get_cb)(
    int unit, uint32 chm_templates_idx_0, int profile, int *ref_count, dnx_algo_consistent_hashing_manager_template_manager_key_t *profile_data);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable occupied_bmp
 */
typedef struct {
    consistent_hashing_manager_occupied_bmp_bit_set_cb bit_set;
    consistent_hashing_manager_occupied_bmp_bit_clear_cb bit_clear;
    consistent_hashing_manager_occupied_bmp_bit_get_cb bit_get;
} consistent_hashing_manager_occupied_bmp_cbs;

/**
 * This structure holds the access functions for the variable template_mngr_handle_t
 */
typedef struct {
    consistent_hashing_manager_ch_instance_array_template_mngr_handle_set_cb set;
    consistent_hashing_manager_ch_instance_array_template_mngr_handle_get_cb get;
} consistent_hashing_manager_ch_instance_array_template_mngr_handle_cbs;

/**
 * This structure holds the access functions for the variable def_chunk
 */
typedef struct {
    consistent_hashing_manager_ch_instance_array_def_chunk_create_cb create;
    consistent_hashing_manager_ch_instance_array_def_chunk_piece_alloc_cb piece_alloc;
    consistent_hashing_manager_ch_instance_array_def_chunk_piece_free_cb piece_free;
    consistent_hashing_manager_ch_instance_array_def_chunk_print_cb print;
} consistent_hashing_manager_ch_instance_array_def_chunk_cbs;

/**
 * This structure holds the access functions for the variable cbs
 */
typedef struct {
    consistent_hashing_manager_ch_instance_array_cbs_set_cb set;
    consistent_hashing_manager_ch_instance_array_cbs_get_cb get;
} consistent_hashing_manager_ch_instance_array_cbs_cbs;

/**
 * This structure holds the access functions for the variable offset_to_profile_map
 */
typedef struct {
    consistent_hashing_manager_ch_instance_array_offset_to_profile_map_set_cb set;
    consistent_hashing_manager_ch_instance_array_offset_to_profile_map_get_cb get;
    consistent_hashing_manager_ch_instance_array_offset_to_profile_map_alloc_cb alloc;
} consistent_hashing_manager_ch_instance_array_offset_to_profile_map_cbs;

/**
 * This structure holds the access functions for the variable profile_to_offset_map
 */
typedef struct {
    consistent_hashing_manager_ch_instance_array_profile_to_offset_map_set_cb set;
    consistent_hashing_manager_ch_instance_array_profile_to_offset_map_get_cb get;
    consistent_hashing_manager_ch_instance_array_profile_to_offset_map_alloc_cb alloc;
} consistent_hashing_manager_ch_instance_array_profile_to_offset_map_cbs;

/**
 * This structure holds the access functions for the variable consistent_hashing_instance_t
 */
typedef struct {
    /**
     * Access struct for template_mngr_handle
     */
    consistent_hashing_manager_ch_instance_array_template_mngr_handle_cbs template_mngr_handle;
    /**
     * Access struct for def_chunk
     */
    consistent_hashing_manager_ch_instance_array_def_chunk_cbs def_chunk;
    /**
     * Access struct for cbs
     */
    consistent_hashing_manager_ch_instance_array_cbs_cbs cbs;
    /**
     * Access struct for offset_to_profile_map
     */
    consistent_hashing_manager_ch_instance_array_offset_to_profile_map_cbs offset_to_profile_map;
    /**
     * Access struct for profile_to_offset_map
     */
    consistent_hashing_manager_ch_instance_array_profile_to_offset_map_cbs profile_to_offset_map;
} consistent_hashing_manager_ch_instance_array_cbs;

/**
 * This structure holds the access functions for the variable chm_templates
 */
typedef struct {
    consistent_hashing_manager_chm_templates_set_cb set;
    consistent_hashing_manager_chm_templates_get_cb get;
    consistent_hashing_manager_chm_templates_create_cb create;
    consistent_hashing_manager_chm_templates_allocate_single_cb allocate_single;
    consistent_hashing_manager_chm_templates_free_single_cb free_single;
    consistent_hashing_manager_chm_templates_profile_data_get_cb profile_data_get;
} consistent_hashing_manager_chm_templates_cbs;

/**
 * This structure holds the access functions for the variable consistent_hashing_manager_t
 */
typedef struct {
    consistent_hashing_manager_is_init_cb is_init;
    consistent_hashing_manager_init_cb init;
    /**
     * Access struct for occupied_bmp
     */
    consistent_hashing_manager_occupied_bmp_cbs occupied_bmp;
    /**
     * Access struct for ch_instance_array
     */
    consistent_hashing_manager_ch_instance_array_cbs ch_instance_array;
    /**
     * Access struct for chm_templates
     */
    consistent_hashing_manager_chm_templates_cbs chm_templates;
} consistent_hashing_manager_cbs;

/*
 * Global Variables
 */

/*
 * FUNCTIONs
 */

/*
 *
 * get_name function for enum type dnx_consistent_hashing_e
 * AUTO-GENERATED - DO NOT MODIFY
 */
const char *
dnx_consistent_hashing_e_get_name(dnx_consistent_hashing_e value);


/*
 * Global Variables
 */

extern consistent_hashing_manager_cbs consistent_hashing_manager;

#endif /* __ALGO_CONSISTENT_HASHING_ACCESS_H__ */
