/** \file algo/swstate/auto_generated/access/algo_stg_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __ALGO_STG_ACCESS_H__
#define __ALGO_STG_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/algo_stg_types.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: algo_stg_db_is_init
 */
typedef int (*algo_stg_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: algo_stg_db_init
 */
typedef int (*algo_stg_db_init_cb)(
    int unit);

/**
 * implemented by: algo_stg_db_stg_id_set
 */
typedef int (*algo_stg_db_stg_id_set_cb)(
    int unit, dnx_algo_res_t stg_id);

/**
 * implemented by: algo_stg_db_stg_id_get
 */
typedef int (*algo_stg_db_stg_id_get_cb)(
    int unit, dnx_algo_res_t *stg_id);

/**
 * implemented by: algo_stg_db_stg_id_create
 */
typedef int (*algo_stg_db_stg_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_stg_db_stg_id_allocate_single
 */
typedef int (*algo_stg_db_stg_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_stg_db_stg_id_free_single
 */
typedef int (*algo_stg_db_stg_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_stg_db_stg_id_is_allocated
 */
typedef int (*algo_stg_db_stg_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_stg_db_stg_id_nof_free_elements_get
 */
typedef int (*algo_stg_db_stg_id_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable stg_id
 */
typedef struct {
    algo_stg_db_stg_id_set_cb set;
    algo_stg_db_stg_id_get_cb get;
    algo_stg_db_stg_id_create_cb create;
    algo_stg_db_stg_id_allocate_single_cb allocate_single;
    algo_stg_db_stg_id_free_single_cb free_single;
    algo_stg_db_stg_id_is_allocated_cb is_allocated;
    algo_stg_db_stg_id_nof_free_elements_get_cb nof_free_elements_get;
} algo_stg_db_stg_id_cbs;

/**
 * This structure holds the access functions for the variable algo_stg_sw_state_t
 */
typedef struct {
    algo_stg_db_is_init_cb is_init;
    algo_stg_db_init_cb init;
    /**
     * Access struct for stg_id
     */
    algo_stg_db_stg_id_cbs stg_id;
} algo_stg_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern algo_stg_db_cbs algo_stg_db;

#endif /* __ALGO_STG_ACCESS_H__ */
